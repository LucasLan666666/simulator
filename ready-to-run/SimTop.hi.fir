FIRRTL version 4.0.0
circuit SimTop :
  module SRAMTemplate : @[build/NutShell.fir.opt.mlir 3:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 3:44]
    input reset : Reset @[build/NutShell.fir.opt.mlir 3:70]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> }[1] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } } } } } @[build/NutShell.fir.opt.mlir 3:97]

    mem array : @[build/NutShell.fir.opt.mlir 30:42]
      data-type => UInt<73>[1]
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 32:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 36:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 38:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 40:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 46:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 50:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 54:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57:22]
    regreset _resetSet : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 59:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 60:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 62:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 64:7]
      node wrap_wrap = eq(_resetSet, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 66:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 68:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 70:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 71:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 72:9]
    connect _resetState, mux(resetFinish, UInt<1>(0), _resetState)
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 78:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 79:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 81:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 83:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 85:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 87:17]
    wire _wdataword_WIRE : UInt<73> @[build/NutShell.fir.opt.mlir 88:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 73) @[build/NutShell.fir.opt.mlir 91:7]
    node wdataword_lo = cat(io.w.req.bits.data.brIdx, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 93:23]
    node wdataword_hi_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data._type) @[build/NutShell.fir.opt.mlir 95:26]
    node wdataword_hi = cat(wdataword_hi_hi, io.w.req.bits.data.target) @[build/NutShell.fir.opt.mlir 97:23]
    node _wdataword_T = cat(wdataword_hi, wdataword_lo) @[build/NutShell.fir.opt.mlir 99:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 101:20]
    node waymask = mux(resetState, UInt<1>(1), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 103:18]
    wire wdata : UInt<73>[1] @[build/NutShell.fir.opt.mlir 104:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 106:7]
    when wen : @[build/NutShell.fir.opt.mlir 107:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 109:15]
      node _T_1 = or(setIdx, UInt<9>(0)) @[build/NutShell.fir.opt.mlir 111:17]
      node _T_2 = bits(_T_1, 8, 0) @[build/NutShell.fir.opt.mlir 113:17]
      connect array.MPORT.addr, _T_2 @[build/NutShell.fir.opt.mlir 114:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 115:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 116:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 118:9]
      when _T : @[build/NutShell.fir.opt.mlir 119:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 120:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 121:11]
    wire _rdata_WIRE : UInt<9> @[build/NutShell.fir.opt.mlir 124:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 126:7]
    when realRen : @[build/NutShell.fir.opt.mlir 127:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 128:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 129:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 130:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 131:9]
    reg rdata_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 133:20]
    connect rdata_REG, realRen @[build/NutShell.fir.opt.mlir 134:7]
    wire _rdata_WIRE_1 : UInt<73>[1] @[build/NutShell.fir.opt.mlir 135:24]
    connect _rdata_WIRE_1[0], UInt<73>(0) @[build/NutShell.fir.opt.mlir 139:7]
    regreset rdata_r : UInt<73>[1], clock, reset, _rdata_WIRE_1 @[build/NutShell.fir.opt.mlir 140:18]
    when rdata_REG : @[build/NutShell.fir.opt.mlir 141:7]
      connect rdata_r, array.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 142:9]
    node _rdata_T = mux(rdata_REG, array.rdata_MPORT.data, rdata_r) @[build/NutShell.fir.opt.mlir 145:19]
    wire rdata_0 : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 147:18]
    wire _rdata_WIRE_2 : UInt<73> @[build/NutShell.fir.opt.mlir 153:24]
    connect _rdata_WIRE_2, _rdata_T[0] @[build/NutShell.fir.opt.mlir 154:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 156:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 157:7]
    node _rdata_T_2 = bits(_rdata_WIRE_2, 3, 1) @[build/NutShell.fir.opt.mlir 159:21]
    connect rdata_0.brIdx, _rdata_T_2 @[build/NutShell.fir.opt.mlir 160:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 42, 4) @[build/NutShell.fir.opt.mlir 162:21]
    connect rdata_0.target, _rdata_T_3 @[build/NutShell.fir.opt.mlir 163:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 44, 43) @[build/NutShell.fir.opt.mlir 165:21]
    connect rdata_0._type, _rdata_T_4 @[build/NutShell.fir.opt.mlir 166:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 72, 45) @[build/NutShell.fir.opt.mlir 168:21]
    connect rdata_0.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 169:7]
    wire _WIRE : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> }[1] @[build/NutShell.fir.opt.mlir 170:16]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 177:7]
    connect _WIRE[0].brIdx, rdata_0.brIdx @[build/NutShell.fir.opt.mlir 178:7]
    connect _WIRE[0].target, rdata_0.target @[build/NutShell.fir.opt.mlir 179:7]
    connect _WIRE[0]._type, rdata_0._type @[build/NutShell.fir.opt.mlir 180:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 181:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 182:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 184:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 186:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 188:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 189:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 191:7]

  extmodule LogPerfHelper : @[build/NutShell.fir.opt.mlir 193:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 193:49]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 193:78]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 193:110]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 193:138]
    defname = LogPerfHelper

  module BPU_inorder : @[build/NutShell.fir.opt.mlir 194:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 194:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 194:69]
    output io : { in : { flip pc : { valid : UInt<1>, bits : UInt<39> } }, out : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip flush : UInt<1>, brIdx : UInt<3>, crosslineJump : UInt<1> } @[build/NutShell.fir.opt.mlir 194:96]

    regreset flush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 215:16]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 216:7]
      connect flush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 218:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 221:7]
      connect flush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 223:9]
    inst btb of SRAMTemplate @[build/NutShell.fir.opt.mlir 225:41]
    connect btb.clock, clock @[build/NutShell.fir.opt.mlir 246:7]
    connect btb.reset, reset @[build/NutShell.fir.opt.mlir 247:7]
    wire flushBTB : UInt<1> @[build/NutShell.fir.opt.mlir 248:19]
    connect flushBTB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 250:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 251:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 253:7]
    node _btb_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 255:23]
    node _btb_reset_T_1 = or(flushBTB, flushTLB) @[build/NutShell.fir.opt.mlir 257:25]
    node _btb_reset_T_2 = or(_btb_reset_T, _btb_reset_T_1) @[build/NutShell.fir.opt.mlir 259:25]
    connect btb.reset, _btb_reset_T_2 @[build/NutShell.fir.opt.mlir 261:7]
    node _T = asUInt(reset) @[build/NutShell.fir.opt.mlir 263:13]
    node _T_1 = or(flushBTB, flushTLB) @[build/NutShell.fir.opt.mlir 265:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 267:15]
    inst LogPerfHelper of LogPerfHelper @[build/NutShell.fir.opt.mlir 268:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 269:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 274:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 275:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 276:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 277:7]
    node _T_3 = and(_T_2, c_control.logEnable) @[build/NutShell.fir.opt.mlir 279:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 280:7]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 282:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 284:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 285:9]
        skip @[build/NutShell.fir.opt.mlir 286:11]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 289:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 291:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 292:9]
        skip @[build/NutShell.fir.opt.mlir 293:11]
    connect btb.io.r.req.valid, io.in.pc.valid @[build/NutShell.fir.opt.mlir 296:7]
    wire _btb_io_r_req_bits_setIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 297:41]
    connect _btb_io_r_req_bits_setIdx_WIRE, io.in.pc.bits @[build/NutShell.fir.opt.mlir 298:7]
    wire _btb_io_r_req_bits_setIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 299:43]
    wire _btb_io_r_req_bits_setIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 303:43]
    connect _btb_io_r_req_bits_setIdx_WIRE_2, _btb_io_r_req_bits_setIdx_WIRE @[build/NutShell.fir.opt.mlir 304:7]
    node _btb_io_r_req_bits_setIdx_T = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 306:38]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.pad, _btb_io_r_req_bits_setIdx_T @[build/NutShell.fir.opt.mlir 307:7]
    node _btb_io_r_req_bits_setIdx_T_1 = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 309:40]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.idx, _btb_io_r_req_bits_setIdx_T_1 @[build/NutShell.fir.opt.mlir 310:7]
    node _btb_io_r_req_bits_setIdx_T_2 = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 312:40]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.tag, _btb_io_r_req_bits_setIdx_T_2 @[build/NutShell.fir.opt.mlir 313:7]
    connect btb.io.r.req.bits.setIdx, _btb_io_r_req_bits_setIdx_WIRE_1.idx @[build/NutShell.fir.opt.mlir 314:7]
    wire btbRead : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 315:18]
    connect btbRead, btb.io.r.resp.data[0] @[build/NutShell.fir.opt.mlir 321:7]
    reg pcLatch : UInt<39>, clock @[build/NutShell.fir.opt.mlir 322:18]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 323:7]
      connect pcLatch, io.in.pc.bits @[build/NutShell.fir.opt.mlir 324:9]
    wire _btbHit_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 326:23]
    connect _btbHit_WIRE, pcLatch @[build/NutShell.fir.opt.mlir 327:7]
    wire _btbHit_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 328:25]
    wire _btbHit_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 332:25]
    connect _btbHit_WIRE_2, _btbHit_WIRE @[build/NutShell.fir.opt.mlir 333:7]
    node _btbHit_T = bits(_btbHit_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 335:20]
    connect _btbHit_WIRE_1.pad, _btbHit_T @[build/NutShell.fir.opt.mlir 336:7]
    node _btbHit_T_1 = bits(_btbHit_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 338:22]
    connect _btbHit_WIRE_1.idx, _btbHit_T_1 @[build/NutShell.fir.opt.mlir 339:7]
    node _btbHit_T_2 = bits(_btbHit_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 341:22]
    connect _btbHit_WIRE_1.tag, _btbHit_T_2 @[build/NutShell.fir.opt.mlir 342:7]
    node _btbHit_T_3 = eq(btbRead.tag, _btbHit_WIRE_1.tag) @[build/NutShell.fir.opt.mlir 344:22]
    node _btbHit_T_4 = and(btbRead.valid, _btbHit_T_3) @[build/NutShell.fir.opt.mlir 346:22]
    node _btbHit_T_5 = eq(flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 348:22]
    node _btbHit_T_6 = and(_btbHit_T_4, _btbHit_T_5) @[build/NutShell.fir.opt.mlir 350:22]
    regreset btbHit_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 351:21]
    connect btbHit_REG, btb.io.r.req.ready @[build/NutShell.fir.opt.mlir 352:7]
    node _btbHit_T_7 = and(_btbHit_T_6, btbHit_REG) @[build/NutShell.fir.opt.mlir 354:22]
    node _btbHit_T_8 = bits(pcLatch, 1, 1) @[build/NutShell.fir.opt.mlir 356:22]
    node _btbHit_T_9 = bits(btbRead.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 358:22]
    node _btbHit_T_10 = and(_btbHit_T_8, _btbHit_T_9) @[build/NutShell.fir.opt.mlir 360:23]
    node _btbHit_T_11 = eq(_btbHit_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 362:23]
    node btbHit = and(_btbHit_T_7, _btbHit_T_11) @[build/NutShell.fir.opt.mlir 364:17]
    node _crosslineJump_T = bits(btbRead.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 366:27]
    node crosslineJump = and(_crosslineJump_T, btbHit) @[build/NutShell.fir.opt.mlir 368:24]
    connect io.crosslineJump, crosslineJump @[build/NutShell.fir.opt.mlir 369:7]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 371:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 373:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 375:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 376:7]
    wire _WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 377:16]
    connect _WIRE, pcLatch @[build/NutShell.fir.opt.mlir 378:7]
    wire _WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 379:18]
    wire _WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 383:18]
    connect _WIRE_2, _WIRE @[build/NutShell.fir.opt.mlir 384:7]
    node _T_8 = bits(_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 386:15]
    connect _WIRE_1.pad, _T_8 @[build/NutShell.fir.opt.mlir 387:7]
    node _T_9 = bits(_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 389:15]
    connect _WIRE_1.idx, _T_9 @[build/NutShell.fir.opt.mlir 390:7]
    node _T_10 = bits(_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 392:16]
    connect _WIRE_1.tag, _T_10 @[build/NutShell.fir.opt.mlir 393:7]
    wire _WIRE_3 : UInt<39> @[build/NutShell.fir.opt.mlir 394:18]
    connect _WIRE_3, pcLatch @[build/NutShell.fir.opt.mlir 395:7]
    wire _WIRE_4 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 396:18]
    wire _WIRE_5 : UInt<39> @[build/NutShell.fir.opt.mlir 400:18]
    connect _WIRE_5, _WIRE_3 @[build/NutShell.fir.opt.mlir 401:7]
    node _T_11 = bits(_WIRE_5, 1, 0) @[build/NutShell.fir.opt.mlir 403:16]
    connect _WIRE_4.pad, _T_11 @[build/NutShell.fir.opt.mlir 404:7]
    node _T_12 = bits(_WIRE_5, 10, 2) @[build/NutShell.fir.opt.mlir 406:16]
    connect _WIRE_4.idx, _T_12 @[build/NutShell.fir.opt.mlir 407:7]
    node _T_13 = bits(_WIRE_5, 38, 11) @[build/NutShell.fir.opt.mlir 409:16]
    connect _WIRE_4.tag, _T_13 @[build/NutShell.fir.opt.mlir 410:7]
    node _T_14 = and(btbHit, c_control.logEnable) @[build/NutShell.fir.opt.mlir 412:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 413:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 415:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 417:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 418:9]
        skip @[build/NutShell.fir.opt.mlir 419:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 422:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 424:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 425:9]
        skip @[build/NutShell.fir.opt.mlir 426:11]
    node _T_19 = mux(io.out.valid, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 432:16]
    node _T_20 = cat(crosslineJump, _T_19) @[build/NutShell.fir.opt.mlir 434:16]
    node _T_21 = and(btbHit, c_control.logEnable) @[build/NutShell.fir.opt.mlir 436:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 437:7]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 439:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 441:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 442:9]
        skip @[build/NutShell.fir.opt.mlir 443:11]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 446:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 448:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 449:9]
        skip @[build/NutShell.fir.opt.mlir 450:11]
    regreset phtResetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 453:24]
    regreset phtResetIdx : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 455:22]
    wire phtResetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 456:25]
    connect phtResetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 458:7]
    when phtResetState : @[build/NutShell.fir.opt.mlir 460:7]
      node wrap_wrap = eq(phtResetIdx, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 462:22]
      node _wrap_value_T = add(phtResetIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 464:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 466:28]
      connect phtResetIdx, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 467:9]
      connect phtResetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 468:9]
    when phtResetFinish : @[build/NutShell.fir.opt.mlir 470:7]
      connect phtResetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 472:9]
    mem pht : @[build/NutShell.fir.opt.mlir 474:57]
      data-type => UInt<2>
      depth => 512
      read-latency => 0
      write-latency => 1
      reader => cnt_MPORT
      reader => phtTaken_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate pht.MPORT.addr @[build/NutShell.fir.opt.mlir 476:7]
    connect pht.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 478:7]
    invalidate pht.MPORT.clk @[build/NutShell.fir.opt.mlir 480:7]
    invalidate pht.MPORT.data @[build/NutShell.fir.opt.mlir 482:7]
    invalidate pht.MPORT.mask @[build/NutShell.fir.opt.mlir 484:7]
    invalidate pht.cnt_MPORT.addr @[build/NutShell.fir.opt.mlir 486:7]
    connect pht.cnt_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 488:7]
    invalidate pht.cnt_MPORT.clk @[build/NutShell.fir.opt.mlir 490:7]
    invalidate pht.phtTaken_MPORT.addr @[build/NutShell.fir.opt.mlir 493:7]
    connect pht.phtTaken_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 495:7]
    invalidate pht.phtTaken_MPORT.clk @[build/NutShell.fir.opt.mlir 497:7]
    wire _phtTaken_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 499:25]
    connect _phtTaken_WIRE, io.in.pc.bits @[build/NutShell.fir.opt.mlir 500:7]
    wire _phtTaken_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 501:27]
    wire _phtTaken_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 505:27]
    connect _phtTaken_WIRE_2, _phtTaken_WIRE @[build/NutShell.fir.opt.mlir 506:7]
    node _phtTaken_T = bits(_phtTaken_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 508:22]
    connect _phtTaken_WIRE_1.pad, _phtTaken_T @[build/NutShell.fir.opt.mlir 509:7]
    node _phtTaken_T_1 = bits(_phtTaken_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 511:24]
    connect _phtTaken_WIRE_1.idx, _phtTaken_T_1 @[build/NutShell.fir.opt.mlir 512:7]
    node _phtTaken_T_2 = bits(_phtTaken_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 514:24]
    connect _phtTaken_WIRE_1.tag, _phtTaken_T_2 @[build/NutShell.fir.opt.mlir 515:7]
    connect pht.phtTaken_MPORT.addr, _phtTaken_WIRE_1.idx @[build/NutShell.fir.opt.mlir 516:7]
    connect pht.phtTaken_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 517:7]
    connect pht.phtTaken_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 518:7]
    node _phtTaken_T_3 = mux(phtResetState, UInt<1>(0), pht.phtTaken_MPORT.data) @[build/NutShell.fir.opt.mlir 520:24]
    node _phtTaken_T_4 = bits(_phtTaken_T_3, 1, 1) @[build/NutShell.fir.opt.mlir 522:24]
    reg phtTaken : UInt<1>, clock @[build/NutShell.fir.opt.mlir 523:19]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 524:7]
      connect phtTaken, _phtTaken_T_4 @[build/NutShell.fir.opt.mlir 525:9]
    regreset rasResetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 527:24]
    regreset rasResetIdx : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 529:22]
    wire rasResetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 530:25]
    connect rasResetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 532:7]
    when rasResetState : @[build/NutShell.fir.opt.mlir 534:7]
      node wrap_wrap_1 = eq(rasResetIdx, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 536:24]
      node _wrap_value_T_2 = add(rasResetIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 538:28]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[build/NutShell.fir.opt.mlir 540:28]
      connect rasResetIdx, _wrap_value_T_3 @[build/NutShell.fir.opt.mlir 541:9]
      connect rasResetFinish, wrap_wrap_1 @[build/NutShell.fir.opt.mlir 542:9]
    when rasResetFinish : @[build/NutShell.fir.opt.mlir 544:7]
      connect rasResetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 546:9]
    mem ras : @[build/NutShell.fir.opt.mlir 548:42]
      data-type => UInt<39>
      depth => 16
      read-latency => 0
      write-latency => 1
      reader => rasRead_MPORT
      writer => MPORT_1
      read-under-write => undefined
    invalidate ras.MPORT_1.addr @[build/NutShell.fir.opt.mlir 550:7]
    connect ras.MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 552:7]
    invalidate ras.MPORT_1.clk @[build/NutShell.fir.opt.mlir 554:7]
    invalidate ras.MPORT_1.data @[build/NutShell.fir.opt.mlir 556:7]
    invalidate ras.MPORT_1.mask @[build/NutShell.fir.opt.mlir 558:7]
    invalidate ras.rasRead_MPORT.addr @[build/NutShell.fir.opt.mlir 560:7]
    connect ras.rasRead_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 562:7]
    invalidate ras.rasRead_MPORT.clk @[build/NutShell.fir.opt.mlir 564:7]
    regreset sp_value : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 566:19]
    connect ras.rasRead_MPORT.addr, sp_value @[build/NutShell.fir.opt.mlir 567:7]
    connect ras.rasRead_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 568:7]
    connect ras.rasRead_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 569:7]
    node rasRead = mux(rasResetState, UInt<1>(0), ras.rasRead_MPORT.data) @[build/NutShell.fir.opt.mlir 571:18]
    reg rasTarget : UInt<39>, clock @[build/NutShell.fir.opt.mlir 572:20]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 573:7]
      connect rasTarget, rasRead @[build/NutShell.fir.opt.mlir 574:9]
    wire _req_WIRE : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 576:20]
    connect _req_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 586:7]
    connect _req_WIRE.btbType, UInt<2>(0) @[build/NutShell.fir.opt.mlir 588:7]
    connect _req_WIRE.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 591:7]
    connect _req_WIRE.actualTaken, UInt<1>(0) @[build/NutShell.fir.opt.mlir 593:7]
    connect _req_WIRE.actualTarget, UInt<39>(0) @[build/NutShell.fir.opt.mlir 596:7]
    connect _req_WIRE.isMissPredict, UInt<1>(0) @[build/NutShell.fir.opt.mlir 598:7]
    connect _req_WIRE.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 600:7]
    connect _req_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 602:7]
    wire req : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 603:14]
    connect req, _req_WIRE @[build/NutShell.fir.opt.mlir 611:7]
    wire _btbWrite_WIRE : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 612:25]
    connect _btbWrite_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 619:7]
    connect _btbWrite_WIRE.brIdx, UInt<3>(0) @[build/NutShell.fir.opt.mlir 622:7]
    connect _btbWrite_WIRE.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 624:7]
    connect _btbWrite_WIRE._type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 626:7]
    connect _btbWrite_WIRE.tag, UInt<28>(0) @[build/NutShell.fir.opt.mlir 629:7]
    wire btbWrite : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 630:19]
    connect btbWrite, _btbWrite_WIRE @[build/NutShell.fir.opt.mlir 636:7]
    wire _WIRE_6 : UInt<39> @[build/NutShell.fir.opt.mlir 637:18]
    connect _WIRE_6, req.pc @[build/NutShell.fir.opt.mlir 638:7]
    wire _WIRE_7 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 639:18]
    wire _WIRE_8 : UInt<39> @[build/NutShell.fir.opt.mlir 643:18]
    connect _WIRE_8, _WIRE_6 @[build/NutShell.fir.opt.mlir 644:7]
    node _T_26 = bits(_WIRE_8, 1, 0) @[build/NutShell.fir.opt.mlir 646:16]
    connect _WIRE_7.pad, _T_26 @[build/NutShell.fir.opt.mlir 647:7]
    node _T_27 = bits(_WIRE_8, 10, 2) @[build/NutShell.fir.opt.mlir 649:16]
    connect _WIRE_7.idx, _T_27 @[build/NutShell.fir.opt.mlir 650:7]
    node _T_28 = bits(_WIRE_8, 38, 11) @[build/NutShell.fir.opt.mlir 652:16]
    connect _WIRE_7.tag, _T_28 @[build/NutShell.fir.opt.mlir 653:7]
    wire _WIRE_9 : UInt<39> @[build/NutShell.fir.opt.mlir 654:18]
    connect _WIRE_9, req.pc @[build/NutShell.fir.opt.mlir 655:7]
    wire _WIRE_10 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 656:19]
    wire _WIRE_11 : UInt<39> @[build/NutShell.fir.opt.mlir 660:19]
    connect _WIRE_11, _WIRE_9 @[build/NutShell.fir.opt.mlir 661:7]
    node _T_29 = bits(_WIRE_11, 1, 0) @[build/NutShell.fir.opt.mlir 663:16]
    connect _WIRE_10.pad, _T_29 @[build/NutShell.fir.opt.mlir 664:7]
    node _T_30 = bits(_WIRE_11, 10, 2) @[build/NutShell.fir.opt.mlir 666:16]
    connect _WIRE_10.idx, _T_30 @[build/NutShell.fir.opt.mlir 667:7]
    node _T_31 = bits(_WIRE_11, 38, 11) @[build/NutShell.fir.opt.mlir 669:16]
    connect _WIRE_10.tag, _T_31 @[build/NutShell.fir.opt.mlir 670:7]
    node _T_32 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 672:16]
    node _T_33 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 674:16]
    node _T_34 = not(_T_33) @[build/NutShell.fir.opt.mlir 676:16]
    node _T_35 = cat(_T_32, _T_34) @[build/NutShell.fir.opt.mlir 678:16]
    node _T_36 = and(req.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 680:16]
    when _T_36 : @[build/NutShell.fir.opt.mlir 681:7]
      node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 683:18]
      node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 685:18]
      when _T_38 : @[build/NutShell.fir.opt.mlir 686:9]
        skip @[build/NutShell.fir.opt.mlir 687:11]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 690:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 692:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 693:9]
        skip @[build/NutShell.fir.opt.mlir 694:11]
    wire _btbWrite_tag_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 697:29]
    connect _btbWrite_tag_WIRE, req.pc @[build/NutShell.fir.opt.mlir 698:7]
    wire _btbWrite_tag_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 699:31]
    wire _btbWrite_tag_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 703:31]
    connect _btbWrite_tag_WIRE_2, _btbWrite_tag_WIRE @[build/NutShell.fir.opt.mlir 704:7]
    node _btbWrite_tag_T = bits(_btbWrite_tag_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 706:26]
    connect _btbWrite_tag_WIRE_1.pad, _btbWrite_tag_T @[build/NutShell.fir.opt.mlir 707:7]
    node _btbWrite_tag_T_1 = bits(_btbWrite_tag_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 709:28]
    connect _btbWrite_tag_WIRE_1.idx, _btbWrite_tag_T_1 @[build/NutShell.fir.opt.mlir 710:7]
    node _btbWrite_tag_T_2 = bits(_btbWrite_tag_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 712:28]
    connect _btbWrite_tag_WIRE_1.tag, _btbWrite_tag_T_2 @[build/NutShell.fir.opt.mlir 713:7]
    connect btbWrite.tag, _btbWrite_tag_WIRE_1.tag @[build/NutShell.fir.opt.mlir 714:7]
    connect btbWrite.target, req.actualTarget @[build/NutShell.fir.opt.mlir 715:7]
    connect btbWrite._type, req.btbType @[build/NutShell.fir.opt.mlir 716:7]
    node _btbWrite_brIdx_T = bits(req.pc, 2, 0) @[build/NutShell.fir.opt.mlir 718:28]
    node _btbWrite_brIdx_T_1 = eq(_btbWrite_brIdx_T, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 721:30]
    node _btbWrite_brIdx_T_2 = eq(req.isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 723:30]
    node _btbWrite_brIdx_T_3 = and(_btbWrite_brIdx_T_1, _btbWrite_brIdx_T_2) @[build/NutShell.fir.opt.mlir 725:30]
    node _btbWrite_brIdx_T_4 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 727:30]
    node _btbWrite_brIdx_T_5 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 729:30]
    node _btbWrite_brIdx_T_6 = not(_btbWrite_brIdx_T_5) @[build/NutShell.fir.opt.mlir 731:30]
    node btbWrite_brIdx_hi = cat(_btbWrite_brIdx_T_3, _btbWrite_brIdx_T_4) @[build/NutShell.fir.opt.mlir 733:28]
    node _btbWrite_brIdx_T_7 = cat(btbWrite_brIdx_hi, _btbWrite_brIdx_T_6) @[build/NutShell.fir.opt.mlir 735:30]
    connect btbWrite.brIdx, _btbWrite_brIdx_T_7 @[build/NutShell.fir.opt.mlir 736:7]
    connect btbWrite.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 738:7]
    node _btb_io_w_req_valid_T = and(req.isMissPredict, req.valid) @[build/NutShell.fir.opt.mlir 740:32]
    connect btb.io.w.req.valid, _btb_io_w_req_valid_T @[build/NutShell.fir.opt.mlir 741:7]
    wire _btb_io_w_req_bits_setIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 742:41]
    connect _btb_io_w_req_bits_setIdx_WIRE, req.pc @[build/NutShell.fir.opt.mlir 743:7]
    wire _btb_io_w_req_bits_setIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 744:43]
    wire _btb_io_w_req_bits_setIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 748:43]
    connect _btb_io_w_req_bits_setIdx_WIRE_2, _btb_io_w_req_bits_setIdx_WIRE @[build/NutShell.fir.opt.mlir 749:7]
    node _btb_io_w_req_bits_setIdx_T = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 751:38]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.pad, _btb_io_w_req_bits_setIdx_T @[build/NutShell.fir.opt.mlir 752:7]
    node _btb_io_w_req_bits_setIdx_T_1 = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 754:40]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.idx, _btb_io_w_req_bits_setIdx_T_1 @[build/NutShell.fir.opt.mlir 755:7]
    node _btb_io_w_req_bits_setIdx_T_2 = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 757:40]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.tag, _btb_io_w_req_bits_setIdx_T_2 @[build/NutShell.fir.opt.mlir 758:7]
    connect btb.io.w.req.bits.setIdx, _btb_io_w_req_bits_setIdx_WIRE_1.idx @[build/NutShell.fir.opt.mlir 759:7]
    connect btb.io.w.req.bits.data.valid, btbWrite.valid @[build/NutShell.fir.opt.mlir 760:7]
    connect btb.io.w.req.bits.data.brIdx, btbWrite.brIdx @[build/NutShell.fir.opt.mlir 761:7]
    connect btb.io.w.req.bits.data.target, btbWrite.target @[build/NutShell.fir.opt.mlir 762:7]
    connect btb.io.w.req.bits.data._type, btbWrite._type @[build/NutShell.fir.opt.mlir 763:7]
    connect btb.io.w.req.bits.data.tag, btbWrite.tag @[build/NutShell.fir.opt.mlir 764:7]
    wire _cnt_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 765:20]
    connect _cnt_WIRE, req.pc @[build/NutShell.fir.opt.mlir 766:7]
    wire _cnt_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 767:22]
    wire _cnt_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 771:22]
    connect _cnt_WIRE_2, _cnt_WIRE @[build/NutShell.fir.opt.mlir 772:7]
    node _cnt_T = bits(_cnt_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 774:17]
    connect _cnt_WIRE_1.pad, _cnt_T @[build/NutShell.fir.opt.mlir 775:7]
    node _cnt_T_1 = bits(_cnt_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 777:19]
    connect _cnt_WIRE_1.idx, _cnt_T_1 @[build/NutShell.fir.opt.mlir 778:7]
    node _cnt_T_2 = bits(_cnt_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 780:19]
    connect _cnt_WIRE_1.tag, _cnt_T_2 @[build/NutShell.fir.opt.mlir 781:7]
    connect pht.cnt_MPORT.addr, _cnt_WIRE_1.idx @[build/NutShell.fir.opt.mlir 782:7]
    connect pht.cnt_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 783:7]
    connect pht.cnt_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 784:7]
    node _cnt_T_3 = mux(phtResetState, UInt<1>(0), pht.cnt_MPORT.data) @[build/NutShell.fir.opt.mlir 786:19]
    reg cnt : UInt<2>, clock @[build/NutShell.fir.opt.mlir 787:14]
    connect cnt, _cnt_T_3 @[build/NutShell.fir.opt.mlir 788:7]
    reg reqLatch : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 789:19]
    connect reqLatch, req @[build/NutShell.fir.opt.mlir 794:7]
    node _newCnt_T = add(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 796:20]
    node _newCnt_T_1 = tail(_newCnt_T, 1) @[build/NutShell.fir.opt.mlir 798:22]
    node _newCnt_T_2 = sub(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 800:22]
    node _newCnt_T_3 = tail(_newCnt_T_2, 1) @[build/NutShell.fir.opt.mlir 802:22]
    node newCnt = mux(reqLatch.actualTaken, _newCnt_T_1, _newCnt_T_3) @[build/NutShell.fir.opt.mlir 804:17]
    node _phtWen_T = neq(cnt, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 806:20]
    node _phtWen_T_1 = and(reqLatch.actualTaken, _phtWen_T) @[build/NutShell.fir.opt.mlir 808:22]
    node _phtWen_T_2 = eq(reqLatch.actualTaken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 810:22]
    node _phtWen_T_3 = neq(cnt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 812:22]
    node _phtWen_T_4 = and(_phtWen_T_2, _phtWen_T_3) @[build/NutShell.fir.opt.mlir 814:22]
    node phtWen = or(_phtWen_T_1, _phtWen_T_4) @[build/NutShell.fir.opt.mlir 816:17]
    wire _phtIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 817:23]
    connect _phtIdx_WIRE, reqLatch.pc @[build/NutShell.fir.opt.mlir 818:7]
    wire _phtIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 819:25]
    wire _phtIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 823:25]
    connect _phtIdx_WIRE_2, _phtIdx_WIRE @[build/NutShell.fir.opt.mlir 824:7]
    node _phtIdx_T = bits(_phtIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 826:20]
    connect _phtIdx_WIRE_1.pad, _phtIdx_T @[build/NutShell.fir.opt.mlir 827:7]
    node _phtIdx_T_1 = bits(_phtIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 829:22]
    connect _phtIdx_WIRE_1.idx, _phtIdx_T_1 @[build/NutShell.fir.opt.mlir 830:7]
    node _phtIdx_T_2 = bits(_phtIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 832:22]
    connect _phtIdx_WIRE_1.tag, _phtIdx_T_2 @[build/NutShell.fir.opt.mlir 833:7]
    node phtIdx = mux(phtResetState, phtResetIdx, _phtIdx_WIRE_1.idx) @[build/NutShell.fir.opt.mlir 835:17]
    node phtWdata = mux(phtResetState, UInt<1>(0), newCnt) @[build/NutShell.fir.opt.mlir 837:19]
    node _phtRealWen_T = bits(reqLatch.fuOpType, 3, 3) @[build/NutShell.fir.opt.mlir 839:24]
    node _phtRealWen_T_1 = eq(_phtRealWen_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 841:26]
    node _phtRealWen_T_2 = and(reqLatch.valid, _phtRealWen_T_1) @[build/NutShell.fir.opt.mlir 843:26]
    node _phtRealWen_T_3 = and(_phtRealWen_T_2, phtWen) @[build/NutShell.fir.opt.mlir 845:26]
    node phtRealWen = or(phtResetState, _phtRealWen_T_3) @[build/NutShell.fir.opt.mlir 847:21]
    when phtRealWen : @[build/NutShell.fir.opt.mlir 848:7]
      connect pht.MPORT.addr, phtIdx @[build/NutShell.fir.opt.mlir 849:9]
      connect pht.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 850:9]
      connect pht.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 851:9]
      connect pht.MPORT.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 852:9]
      connect pht.MPORT.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 853:9]
      connect pht.MPORT.data, phtWdata @[build/NutShell.fir.opt.mlir 854:9]
    node _rasIdx_T = add(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 857:20]
    node _rasIdx_T_1 = tail(_rasIdx_T, 1) @[build/NutShell.fir.opt.mlir 859:22]
    node rasIdx = mux(rasResetState, rasResetIdx, _rasIdx_T_1) @[build/NutShell.fir.opt.mlir 861:17]
    node _rasWdata_T = mux(req.isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 865:22]
    node _rasWdata_T_1 = add(req.pc, _rasWdata_T) @[build/NutShell.fir.opt.mlir 867:24]
    node _rasWdata_T_2 = tail(_rasWdata_T_1, 1) @[build/NutShell.fir.opt.mlir 869:24]
    node rasWdata = mux(rasResetState, UInt<1>(0), _rasWdata_T_2) @[build/NutShell.fir.opt.mlir 871:19]
    node _rasWen_T = eq(req.fuOpType, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 874:20]
    node _rasWen_T_1 = and(req.valid, _rasWen_T) @[build/NutShell.fir.opt.mlir 876:22]
    node rasWen = or(rasResetState, _rasWen_T_1) @[build/NutShell.fir.opt.mlir 878:17]
    when rasWen : @[build/NutShell.fir.opt.mlir 879:7]
      connect ras.MPORT_1.addr, rasIdx @[build/NutShell.fir.opt.mlir 880:9]
      connect ras.MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 881:9]
      connect ras.MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 882:9]
      connect ras.MPORT_1.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 883:9]
      connect ras.MPORT_1.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 884:9]
      connect ras.MPORT_1.data, rasWdata @[build/NutShell.fir.opt.mlir 885:9]
    when req.valid : @[build/NutShell.fir.opt.mlir 888:7]
      node _T_41 = eq(req.fuOpType, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 890:18]
      when _T_41 : @[build/NutShell.fir.opt.mlir 891:9]
        node _value_T = add(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 893:23]
        node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 895:25]
        connect sp_value, _value_T_1 @[build/NutShell.fir.opt.mlir 896:11]
      else :
        node _T_42 = eq(req.fuOpType, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 899:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 900:11]
          node _value_T_2 = sub(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 902:27]
          node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 904:27]
          connect sp_value, _value_T_3 @[build/NutShell.fir.opt.mlir 905:13]
    node _io_out_target_T = eq(btbRead._type, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 910:27]
    node _io_out_target_T_1 = mux(_io_out_target_T, rasTarget, btbRead.target) @[build/NutShell.fir.opt.mlir 912:29]
    connect io.out.target, _io_out_target_T_1 @[build/NutShell.fir.opt.mlir 913:7]
    node _io_brIdx_T = mux(io.out.valid, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 915:22]
    node io_brIdx_hi = cat(UInt<1>(1), crosslineJump) @[build/NutShell.fir.opt.mlir 917:22]
    node _io_brIdx_T_1 = cat(io_brIdx_hi, _io_brIdx_T) @[build/NutShell.fir.opt.mlir 919:24]
    node _io_brIdx_T_2 = and(btbRead.brIdx, _io_brIdx_T_1) @[build/NutShell.fir.opt.mlir 921:24]
    connect io.brIdx, tail(_io_brIdx_T_2, 1) @[build/NutShell.fir.opt.mlir 923:7]
    node _io_out_valid_T = eq(btbRead._type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 925:26]
    node _io_out_valid_T_1 = neq(rasTarget, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 927:28]
    node _io_out_valid_T_2 = and(UInt<1>(1), _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 929:28]
    node _io_out_valid_T_3 = mux(_io_out_valid_T, phtTaken, _io_out_valid_T_2) @[build/NutShell.fir.opt.mlir 931:28]
    node _io_out_valid_T_4 = and(btbHit, _io_out_valid_T_3) @[build/NutShell.fir.opt.mlir 933:28]
    connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 934:7]
    connect io.out.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 936:7]

  extmodule LogPerfHelper_1 : @[build/NutShell.fir.opt.mlir 938:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 938:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 938:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 938:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 938:140]
    defname = LogPerfHelper

  module IFU_inorder : @[build/NutShell.fir.opt.mlir 939:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 939:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 939:69]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<82> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<82> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, flip redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flushVec : UInt<4>, bpFlush : UInt<1>, flip ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 939:96]

    regreset pc : UInt<39>, clock, reset, UInt<39>(2147483648) @[build/NutShell.fir.opt.mlir 1010:13]
    node _pcUpdate_T = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1012:22]
    node pcUpdate = or(io.redirect.valid, _pcUpdate_T) @[build/NutShell.fir.opt.mlir 1014:19]
    node _snpc_T = bits(pc, 1, 1) @[build/NutShell.fir.opt.mlir 1016:18]
    node _snpc_T_1 = add(pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1019:20]
    node _snpc_T_2 = tail(_snpc_T_1, 1) @[build/NutShell.fir.opt.mlir 1021:20]
    node _snpc_T_3 = add(pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1024:20]
    node _snpc_T_4 = tail(_snpc_T_3, 1) @[build/NutShell.fir.opt.mlir 1026:20]
    node snpc = mux(_snpc_T, _snpc_T_2, _snpc_T_4) @[build/NutShell.fir.opt.mlir 1028:15]
    inst bp1 of BPU_inorder @[build/NutShell.fir.opt.mlir 1029:41]
    connect bp1.clock, clock @[build/NutShell.fir.opt.mlir 1040:7]
    connect bp1.reset, reset @[build/NutShell.fir.opt.mlir 1041:7]
    regreset crosslineJumpLatch : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1043:29]
    node _T = or(pcUpdate, bp1.io.flush) @[build/NutShell.fir.opt.mlir 1045:13]
    when _T : @[build/NutShell.fir.opt.mlir 1046:7]
      node _crosslineJumpLatch_T = eq(crosslineJumpLatch, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1048:34]
      node _crosslineJumpLatch_T_1 = and(bp1.io.crosslineJump, _crosslineJumpLatch_T) @[build/NutShell.fir.opt.mlir 1050:36]
      node _crosslineJumpLatch_T_2 = mux(bp1.io.flush, UInt<1>(0), _crosslineJumpLatch_T_1) @[build/NutShell.fir.opt.mlir 1052:36]
      connect crosslineJumpLatch, _crosslineJumpLatch_T_2 @[build/NutShell.fir.opt.mlir 1053:9]
    reg crosslineJumpTarget : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1055:30]
    when bp1.io.crosslineJump : @[build/NutShell.fir.opt.mlir 1056:7]
      connect crosslineJumpTarget, bp1.io.out.target @[build/NutShell.fir.opt.mlir 1057:9]
    node crosslineJumpForceSeq = and(bp1.io.crosslineJump, bp1.io.out.valid) @[build/NutShell.fir.opt.mlir 1060:32]
    node _crosslineJumpForceTgt_T = eq(bp1.io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1062:35]
    node crosslineJumpForceTgt = and(crosslineJumpLatch, _crosslineJumpForceTgt_T) @[build/NutShell.fir.opt.mlir 1064:32]
    node pnpc = mux(bp1.io.crosslineJump, snpc, bp1.io.out.target) @[build/NutShell.fir.opt.mlir 1066:15]
    node _npc_T = mux(bp1.io.out.valid, pnpc, snpc) @[build/NutShell.fir.opt.mlir 1068:17]
    node _npc_T_1 = mux(crosslineJumpLatch, crosslineJumpTarget, _npc_T) @[build/NutShell.fir.opt.mlir 1070:19]
    node npc = mux(io.redirect.valid, io.redirect.target, _npc_T_1) @[build/NutShell.fir.opt.mlir 1072:14]
    node _npcIsSeq_T = mux(bp1.io.out.valid, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 1075:22]
    node _npcIsSeq_T_1 = mux(bp1.io.crosslineJump, UInt<1>(1), _npcIsSeq_T) @[build/NutShell.fir.opt.mlir 1077:24]
    node _npcIsSeq_T_2 = mux(crosslineJumpLatch, UInt<1>(0), _npcIsSeq_T_1) @[build/NutShell.fir.opt.mlir 1079:24]
    node npcIsSeq = mux(io.redirect.valid, UInt<1>(0), _npcIsSeq_T_2) @[build/NutShell.fir.opt.mlir 1081:19]
    wire brIdx : UInt<4> @[build/NutShell.fir.opt.mlir 1082:16]
    node _brIdx_T = mux(io.redirect.valid, UInt<1>(0), bp1.io.brIdx) @[build/NutShell.fir.opt.mlir 1084:19]
    node _brIdx_T_1 = cat(npcIsSeq, _brIdx_T) @[build/NutShell.fir.opt.mlir 1086:21]
    connect brIdx, _brIdx_T_1 @[build/NutShell.fir.opt.mlir 1087:7]
    node _bp1_io_in_pc_valid_T = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1089:32]
    connect bp1.io.in.pc.valid, _bp1_io_in_pc_valid_T @[build/NutShell.fir.opt.mlir 1090:7]
    connect bp1.io.in.pc.bits, npc @[build/NutShell.fir.opt.mlir 1091:7]
    connect bp1.io.flush, io.redirect.valid @[build/NutShell.fir.opt.mlir 1092:7]
    when pcUpdate : @[build/NutShell.fir.opt.mlir 1093:7]
      connect pc, npc @[build/NutShell.fir.opt.mlir 1094:9]
    inst LogPerfHelper of LogPerfHelper_1 @[build/NutShell.fir.opt.mlir 1096:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 1097:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 1102:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 1103:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 1104:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 1105:7]
    node _T_1 = and(pcUpdate, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1107:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 1108:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1110:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1112:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 1113:9]
        skip @[build/NutShell.fir.opt.mlir 1114:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1117:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1119:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 1120:9]
        skip @[build/NutShell.fir.opt.mlir 1121:11]
    node _io_flushVec_T = mux(io.redirect.valid, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1126:25]
    connect io.flushVec, _io_flushVec_T @[build/NutShell.fir.opt.mlir 1127:7]
    connect io.bpFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1129:7]
    node _x1_T = bits(pc, 38, 1) @[build/NutShell.fir.opt.mlir 1131:16]
    node x1 = cat(_x1_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1133:13]
    node _x6_T = bits(brIdx, 3, 0) @[build/NutShell.fir.opt.mlir 1135:16]
    node _x6_T_1 = bits(npc, 38, 0) @[build/NutShell.fir.opt.mlir 1137:18]
    node _x6_T_2 = bits(pc, 38, 0) @[build/NutShell.fir.opt.mlir 1139:18]
    node x6_hi = cat(_x6_T, _x6_T_1) @[build/NutShell.fir.opt.mlir 1141:16]
    node x6 = cat(x6_hi, _x6_T_2) @[build/NutShell.fir.opt.mlir 1143:13]
    connect io.imem.req.bits.addr, x1 @[build/NutShell.fir.opt.mlir 1144:7]
    connect io.imem.req.bits.cmd, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 1147:7]
    connect io.imem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 1151:7]
    connect io.imem.req.bits.wdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 1154:7]
    connect io.imem.req.bits.wmask, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 1157:7]
    connect io.imem.req.bits.user, x6 @[build/NutShell.fir.opt.mlir 1158:7]
    connect io.imem.req.valid, io.out.ready @[build/NutShell.fir.opt.mlir 1159:7]
    node _io_imem_resp_ready_T = bits(io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 1161:32]
    node _io_imem_resp_ready_T_1 = or(io.out.ready, _io_imem_resp_ready_T) @[build/NutShell.fir.opt.mlir 1163:34]
    connect io.imem.resp.ready, _io_imem_resp_ready_T_1 @[build/NutShell.fir.opt.mlir 1164:7]
    invalidate io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 1166:7]
    invalidate io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 1168:7]
    invalidate io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 1170:7]
    invalidate io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 1172:7]
    invalidate io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 1174:7]
    invalidate io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 1176:7]
    invalidate io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 1178:7]
    invalidate io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 1180:7]
    invalidate io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 1182:7]
    invalidate io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 1184:7]
    invalidate io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 1186:7]
    invalidate io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 1188:7]
    invalidate io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 1190:7]
    invalidate io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 1192:7]
    invalidate io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 1194:7]
    invalidate io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 1196:7]
    invalidate io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 1198:7]
    invalidate io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 1200:7]
    invalidate io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 1202:7]
    invalidate io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 1204:7]
    invalidate io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 1206:7]
    invalidate io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 1208:7]
    invalidate io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 1210:7]
    invalidate io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 1212:7]
    invalidate io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 1214:7]
    invalidate io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 1216:7]
    invalidate io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 1218:7]
    invalidate io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 1220:7]
    invalidate io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 1222:7]
    invalidate io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1224:7]
    invalidate io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 1226:7]
    invalidate io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 1228:7]
    invalidate io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 1230:7]
    invalidate io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 1232:7]
    invalidate io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 1234:7]
    invalidate io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 1236:7]
    invalidate io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 1238:7]
    invalidate io.out.bits.pc @[build/NutShell.fir.opt.mlir 1240:7]
    invalidate io.out.bits.instr @[build/NutShell.fir.opt.mlir 1242:7]
    node _T_6 = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1244:15]
    node _T_7 = and(_T_6, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1246:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 1247:7]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1249:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1251:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 1252:9]
        skip @[build/NutShell.fir.opt.mlir 1253:11]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1256:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1258:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 1259:9]
        skip @[build/NutShell.fir.opt.mlir 1260:11]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1264:16]
    node _T_13 = and(_T_12, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1266:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 1267:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1269:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1271:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 1272:9]
        skip @[build/NutShell.fir.opt.mlir 1273:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1276:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1278:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 1279:9]
        skip @[build/NutShell.fir.opt.mlir 1280:11]
    connect io.out.bits.instr, io.imem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 1283:7]
    node _io_out_bits_pc_T = bits(io.imem.resp.bits.user, 38, 0) @[build/NutShell.fir.opt.mlir 1285:28]
    connect io.out.bits.pc, _io_out_bits_pc_T @[build/NutShell.fir.opt.mlir 1286:7]
    node _io_out_bits_pnpc_T = bits(io.imem.resp.bits.user, 77, 39) @[build/NutShell.fir.opt.mlir 1288:30]
    connect io.out.bits.pnpc, _io_out_bits_pnpc_T @[build/NutShell.fir.opt.mlir 1289:7]
    node _io_out_bits_brIdx_T = bits(io.imem.resp.bits.user, 81, 78) @[build/NutShell.fir.opt.mlir 1291:31]
    connect io.out.bits.brIdx, _io_out_bits_brIdx_T @[build/NutShell.fir.opt.mlir 1292:7]
    connect io.out.bits.exceptionVec[12], io.ipf @[build/NutShell.fir.opt.mlir 1293:7]
    node _io_out_valid_T = bits(io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 1295:26]
    node _io_out_valid_T_1 = eq(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1297:28]
    node _io_out_valid_T_2 = and(io.imem.resp.valid, _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 1299:28]
    connect io.out.valid, _io_out_valid_T_2 @[build/NutShell.fir.opt.mlir 1300:7]
    node _T_18 = and(io.imem.resp.ready, io.imem.resp.valid) @[build/NutShell.fir.opt.mlir 1302:16]
    regreset r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1303:12]
    when io.imem.req.valid : @[build/NutShell.fir.opt.mlir 1304:7]
      connect r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 1306:9]
    when _T_18 : @[build/NutShell.fir.opt.mlir 1308:7]
      connect r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1310:9]
    node _T_19 = orr(io.flushVec) @[build/NutShell.fir.opt.mlir 1313:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 1314:16]
    connect _WIRE, _T_19 @[build/NutShell.fir.opt.mlir 1315:7]

  extmodule LogPerfHelper_2 : @[build/NutShell.fir.opt.mlir 1317:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 1317:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 1317:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 1317:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 1317:140]
    defname = LogPerfHelper

  module NaiveRVCAlignBuffer : @[build/NutShell.fir.opt.mlir 1318:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 1318:51]
    input reset : Reset @[build/NutShell.fir.opt.mlir 1318:77]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 1318:104]

    wire instr : UInt<32> @[build/NutShell.fir.opt.mlir 1376:16]
    node _isRVC_T = bits(instr, 1, 0) @[build/NutShell.fir.opt.mlir 1378:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1381:16]
    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1383:16]
    regreset pcOffsetR : UInt<3>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1385:20]
    node _pcOffset_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1387:22]
    node _pcOffset_T_1 = bits(io.in.bits.pc, 2, 0) @[build/NutShell.fir.opt.mlir 1389:24]
    node pcOffset = mux(_pcOffset_T, _pcOffset_T_1, pcOffsetR) @[build/NutShell.fir.opt.mlir 1391:19]
    node instIn = cat(UInt<16>(0), io.in.bits.instr) @[build/NutShell.fir.opt.mlir 1394:17]
    wire canGo : UInt<1> @[build/NutShell.fir.opt.mlir 1395:16]
    connect canGo, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1397:7]
    wire canIn : UInt<1> @[build/NutShell.fir.opt.mlir 1398:16]
    connect canIn, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1400:7]
    node _rvcFinish_T = eq(pcOffset, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1402:23]
    node _rvcFinish_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1404:25]
    node _rvcFinish_T_2 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1406:25]
    node _rvcFinish_T_3 = or(_rvcFinish_T_1, _rvcFinish_T_2) @[build/NutShell.fir.opt.mlir 1408:25]
    node _rvcFinish_T_4 = and(_rvcFinish_T, _rvcFinish_T_3) @[build/NutShell.fir.opt.mlir 1410:25]
    node _rvcFinish_T_5 = eq(pcOffset, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1413:25]
    node _rvcFinish_T_6 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1415:25]
    node _rvcFinish_T_7 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1417:25]
    node _rvcFinish_T_8 = or(_rvcFinish_T_6, _rvcFinish_T_7) @[build/NutShell.fir.opt.mlir 1419:25]
    node _rvcFinish_T_9 = and(_rvcFinish_T_5, _rvcFinish_T_8) @[build/NutShell.fir.opt.mlir 1421:25]
    node _rvcFinish_T_10 = or(_rvcFinish_T_4, _rvcFinish_T_9) @[build/NutShell.fir.opt.mlir 1423:26]
    node _rvcFinish_T_11 = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1426:26]
    node _rvcFinish_T_12 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1428:26]
    node _rvcFinish_T_13 = or(isRVC, _rvcFinish_T_12) @[build/NutShell.fir.opt.mlir 1430:26]
    node _rvcFinish_T_14 = and(_rvcFinish_T_11, _rvcFinish_T_13) @[build/NutShell.fir.opt.mlir 1432:26]
    node _rvcFinish_T_15 = or(_rvcFinish_T_10, _rvcFinish_T_14) @[build/NutShell.fir.opt.mlir 1434:26]
    node _rvcFinish_T_16 = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1437:26]
    node _rvcFinish_T_17 = and(_rvcFinish_T_16, isRVC) @[build/NutShell.fir.opt.mlir 1439:26]
    node rvcFinish = or(_rvcFinish_T_15, _rvcFinish_T_17) @[build/NutShell.fir.opt.mlir 1441:20]
    node _rvcNext_T = eq(pcOffset, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1443:21]
    node _rvcNext_T_1 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1445:23]
    node _rvcNext_T_2 = eq(_rvcNext_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1447:23]
    node _rvcNext_T_3 = and(isRVC, _rvcNext_T_2) @[build/NutShell.fir.opt.mlir 1449:23]
    node _rvcNext_T_4 = and(_rvcNext_T, _rvcNext_T_3) @[build/NutShell.fir.opt.mlir 1451:23]
    node _rvcNext_T_5 = eq(pcOffset, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1453:23]
    node _rvcNext_T_6 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1455:23]
    node _rvcNext_T_7 = eq(_rvcNext_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1457:23]
    node _rvcNext_T_8 = and(isRVC, _rvcNext_T_7) @[build/NutShell.fir.opt.mlir 1459:23]
    node _rvcNext_T_9 = and(_rvcNext_T_5, _rvcNext_T_8) @[build/NutShell.fir.opt.mlir 1461:23]
    node _rvcNext_T_10 = or(_rvcNext_T_4, _rvcNext_T_9) @[build/NutShell.fir.opt.mlir 1463:24]
    node _rvcNext_T_11 = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1465:24]
    node _rvcNext_T_12 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1467:24]
    node _rvcNext_T_13 = and(_rvcNext_T_11, _rvcNext_T_12) @[build/NutShell.fir.opt.mlir 1469:24]
    node _rvcNext_T_14 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1471:24]
    node _rvcNext_T_15 = eq(_rvcNext_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1473:24]
    node _rvcNext_T_16 = and(_rvcNext_T_13, _rvcNext_T_15) @[build/NutShell.fir.opt.mlir 1475:24]
    node rvcNext = or(_rvcNext_T_10, _rvcNext_T_16) @[build/NutShell.fir.opt.mlir 1477:18]
    node _rvcSpecial_T = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1479:24]
    node _rvcSpecial_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1481:26]
    node _rvcSpecial_T_2 = and(_rvcSpecial_T, _rvcSpecial_T_1) @[build/NutShell.fir.opt.mlir 1483:26]
    node _rvcSpecial_T_3 = bits(io.in.bits.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 1485:26]
    node _rvcSpecial_T_4 = eq(_rvcSpecial_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1487:26]
    node rvcSpecial = and(_rvcSpecial_T_2, _rvcSpecial_T_4) @[build/NutShell.fir.opt.mlir 1489:21]
    node _rvcSpecialJump_T = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1491:28]
    node _rvcSpecialJump_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1493:30]
    node _rvcSpecialJump_T_2 = and(_rvcSpecialJump_T, _rvcSpecialJump_T_1) @[build/NutShell.fir.opt.mlir 1495:30]
    node _rvcSpecialJump_T_3 = bits(io.in.bits.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 1497:30]
    node rvcSpecialJump = and(_rvcSpecialJump_T_2, _rvcSpecialJump_T_3) @[build/NutShell.fir.opt.mlir 1499:25]
    node pnpcIsSeq = bits(io.in.bits.brIdx, 3, 3) @[build/NutShell.fir.opt.mlir 1501:20]
    node _flushIFU_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1503:22]
    node _flushIFU_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 1506:24]
    node _flushIFU_T_2 = or(_flushIFU_T, _flushIFU_T_1) @[build/NutShell.fir.opt.mlir 1508:24]
    node _flushIFU_T_3 = and(_flushIFU_T_2, rvcSpecial) @[build/NutShell.fir.opt.mlir 1510:24]
    node _flushIFU_T_4 = and(_flushIFU_T_3, io.in.valid) @[build/NutShell.fir.opt.mlir 1512:24]
    node _flushIFU_T_5 = eq(pnpcIsSeq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1514:24]
    node flushIFU = and(_flushIFU_T_4, _flushIFU_T_5) @[build/NutShell.fir.opt.mlir 1516:19]
    inst LogPerfHelper of LogPerfHelper_2 @[build/NutShell.fir.opt.mlir 1517:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 1518:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 1523:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 1524:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 1525:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 1526:7]
    node _T = and(flushIFU, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1528:13]
    when _T : @[build/NutShell.fir.opt.mlir 1529:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1531:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1533:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 1534:9]
        skip @[build/NutShell.fir.opt.mlir 1535:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1538:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1540:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 1541:9]
        skip @[build/NutShell.fir.opt.mlir 1542:11]
    node _T_5 = eq(flushIFU, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1546:15]
    node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1548:15]
    node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1550:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 1552:7]
      node _T_8 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1554:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 1555:9]
        skip @[build/NutShell.fir.opt.mlir 1556:11]
      assert(clock, _T_5, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 1558:9]
    node _loadNextInstline_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1561:30]
    node _loadNextInstline_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 1563:32]
    node _loadNextInstline_T_2 = or(_loadNextInstline_T, _loadNextInstline_T_1) @[build/NutShell.fir.opt.mlir 1565:32]
    node _loadNextInstline_T_3 = or(rvcSpecial, rvcSpecialJump) @[build/NutShell.fir.opt.mlir 1567:32]
    node _loadNextInstline_T_4 = and(_loadNextInstline_T_2, _loadNextInstline_T_3) @[build/NutShell.fir.opt.mlir 1569:32]
    node _loadNextInstline_T_5 = and(_loadNextInstline_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 1571:32]
    node loadNextInstline = and(_loadNextInstline_T_5, pnpcIsSeq) @[build/NutShell.fir.opt.mlir 1573:27]
    wire pcOut : UInt<39> @[build/NutShell.fir.opt.mlir 1574:16]
    connect pcOut, UInt<39>(0) @[build/NutShell.fir.opt.mlir 1577:7]
    wire pnpcOut : UInt<39> @[build/NutShell.fir.opt.mlir 1578:18]
    connect pnpcOut, UInt<39>(0) @[build/NutShell.fir.opt.mlir 1580:7]
    reg specialPCR : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1581:21]
    reg specialNPCR : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1582:22]
    reg specialInstR : UInt<16>, clock @[build/NutShell.fir.opt.mlir 1583:23]
    regreset specialIPFR : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1584:22]
    node _redirectPC_T = bits(io.in.bits.pc, 38, 3) @[build/NutShell.fir.opt.mlir 1586:24]
    node _redirectPC_T_1 = cat(_redirectPC_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 1589:26]
    node _redirectPC_T_2 = add(_redirectPC_T_1, UInt<4>(10)) @[build/NutShell.fir.opt.mlir 1592:26]
    node redirectPC = tail(_redirectPC_T_2, 1) @[build/NutShell.fir.opt.mlir 1594:21]
    node _rvcForceLoadNext_T = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1596:30]
    node _rvcForceLoadNext_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1598:32]
    node _rvcForceLoadNext_T_2 = and(_rvcForceLoadNext_T, _rvcForceLoadNext_T_1) @[build/NutShell.fir.opt.mlir 1600:32]
    node _rvcForceLoadNext_T_3 = bits(io.in.bits.pnpc, 2, 0) @[build/NutShell.fir.opt.mlir 1602:32]
    node _rvcForceLoadNext_T_4 = eq(_rvcForceLoadNext_T_3, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1604:32]
    node _rvcForceLoadNext_T_5 = and(_rvcForceLoadNext_T_2, _rvcForceLoadNext_T_4) @[build/NutShell.fir.opt.mlir 1606:32]
    node _rvcForceLoadNext_T_6 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1608:32]
    node _rvcForceLoadNext_T_7 = eq(_rvcForceLoadNext_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1610:32]
    node rvcForceLoadNext = and(_rvcForceLoadNext_T_5, _rvcForceLoadNext_T_7) @[build/NutShell.fir.opt.mlir 1612:27]
    node _instr_T = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1614:19]
    node _instr_T_1 = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1616:21]
    node _instr_T_2 = or(_instr_T, _instr_T_1) @[build/NutShell.fir.opt.mlir 1618:21]
    node _instr_T_3 = bits(instIn, 15, 0) @[build/NutShell.fir.opt.mlir 1620:21]
    node _instr_T_4 = cat(_instr_T_3, specialInstR) @[build/NutShell.fir.opt.mlir 1622:21]
    node _instr_T_5 = bits(instIn, 31, 0) @[build/NutShell.fir.opt.mlir 1624:21]
    node _instr_T_6 = bits(instIn, 47, 16) @[build/NutShell.fir.opt.mlir 1626:21]
    node _instr_T_7 = bits(instIn, 63, 32) @[build/NutShell.fir.opt.mlir 1628:21]
    node _instr_T_8 = bits(instIn, 79, 48) @[build/NutShell.fir.opt.mlir 1630:21]
    node _instr_T_9 = eq(UInt<1>(0), pcOffset) @[build/NutShell.fir.opt.mlir 1632:21]
    node _instr_T_10 = eq(UInt<2>(2), pcOffset) @[build/NutShell.fir.opt.mlir 1634:22]
    node _instr_T_11 = eq(UInt<3>(4), pcOffset) @[build/NutShell.fir.opt.mlir 1636:22]
    node _instr_T_12 = eq(UInt<3>(6), pcOffset) @[build/NutShell.fir.opt.mlir 1638:22]
    node _instr_T_13 = mux(_instr_T_9, _instr_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1640:22]
    node _instr_T_14 = mux(_instr_T_10, _instr_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1642:22]
    node _instr_T_15 = mux(_instr_T_11, _instr_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1644:22]
    node _instr_T_16 = mux(_instr_T_12, _instr_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1646:22]
    node _instr_T_17 = or(_instr_T_13, _instr_T_14) @[build/NutShell.fir.opt.mlir 1648:22]
    node _instr_T_18 = or(_instr_T_17, _instr_T_15) @[build/NutShell.fir.opt.mlir 1650:22]
    node _instr_T_19 = or(_instr_T_18, _instr_T_16) @[build/NutShell.fir.opt.mlir 1652:22]
    wire _instr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 1653:22]
    connect _instr_WIRE, _instr_T_19 @[build/NutShell.fir.opt.mlir 1654:7]
    node _instr_T_20 = mux(_instr_T_2, _instr_T_4, _instr_WIRE) @[build/NutShell.fir.opt.mlir 1656:22]
    connect instr, _instr_T_20 @[build/NutShell.fir.opt.mlir 1657:7]
    node _T_9 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1659:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 1660:7]
      node _T_10 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 1662:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 1663:9]
        node _canGo_T = or(rvcFinish, rvcNext) @[build/NutShell.fir.opt.mlir 1665:23]
        connect canGo, _canGo_T @[build/NutShell.fir.opt.mlir 1666:11]
        node _canIn_T = or(rvcFinish, rvcForceLoadNext) @[build/NutShell.fir.opt.mlir 1668:23]
        connect canIn, _canIn_T @[build/NutShell.fir.opt.mlir 1669:11]
        connect pcOut, io.in.bits.pc @[build/NutShell.fir.opt.mlir 1670:11]
        node _pnpcOut_T = add(io.in.bits.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1672:25]
        node _pnpcOut_T_1 = tail(_pnpcOut_T, 1) @[build/NutShell.fir.opt.mlir 1674:27]
        node _pnpcOut_T_2 = add(io.in.bits.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1676:27]
        node _pnpcOut_T_3 = tail(_pnpcOut_T_2, 1) @[build/NutShell.fir.opt.mlir 1678:27]
        node _pnpcOut_T_4 = mux(isRVC, _pnpcOut_T_1, _pnpcOut_T_3) @[build/NutShell.fir.opt.mlir 1680:27]
        node _pnpcOut_T_5 = mux(rvcFinish, io.in.bits.pnpc, _pnpcOut_T_4) @[build/NutShell.fir.opt.mlir 1682:27]
        connect pnpcOut, _pnpcOut_T_5 @[build/NutShell.fir.opt.mlir 1683:11]
        node _T_11 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1685:20]
        node _T_12 = and(_T_11, rvcFinish) @[build/NutShell.fir.opt.mlir 1687:20]
        when _T_12 : @[build/NutShell.fir.opt.mlir 1688:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1690:13]
        node _T_13 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1693:20]
        node _T_14 = and(_T_13, rvcNext) @[build/NutShell.fir.opt.mlir 1695:20]
        when _T_14 : @[build/NutShell.fir.opt.mlir 1696:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1698:13]
          node _pcOffsetR_T = mux(isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1700:29]
          node _pcOffsetR_T_1 = add(pcOffset, _pcOffsetR_T) @[build/NutShell.fir.opt.mlir 1702:31]
          node _pcOffsetR_T_2 = tail(_pcOffsetR_T_1, 1) @[build/NutShell.fir.opt.mlir 1704:31]
          connect pcOffsetR, _pcOffsetR_T_2 @[build/NutShell.fir.opt.mlir 1705:13]
        node _T_15 = and(rvcSpecial, io.in.valid) @[build/NutShell.fir.opt.mlir 1708:20]
        when _T_15 : @[build/NutShell.fir.opt.mlir 1709:11]
          connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 1711:13]
          connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1712:13]
          node _specialInstR_T = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1714:32]
          connect specialInstR, _specialInstR_T @[build/NutShell.fir.opt.mlir 1715:13]
          connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1716:13]
        node _T_16 = and(rvcSpecialJump, io.in.valid) @[build/NutShell.fir.opt.mlir 1719:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 1720:11]
          connect state, UInt<2>(3) @[build/NutShell.fir.opt.mlir 1722:13]
          connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1723:13]
          connect specialNPCR, io.in.bits.pnpc @[build/NutShell.fir.opt.mlir 1724:13]
          node _specialInstR_T_1 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1726:34]
          connect specialInstR, _specialInstR_T_1 @[build/NutShell.fir.opt.mlir 1727:13]
          connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1728:13]
      else :
        node _T_17 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 1732:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 1733:11]
          node _canGo_T_1 = or(rvcFinish, rvcNext) @[build/NutShell.fir.opt.mlir 1735:27]
          connect canGo, _canGo_T_1 @[build/NutShell.fir.opt.mlir 1736:13]
          node _canIn_T_1 = or(rvcFinish, rvcForceLoadNext) @[build/NutShell.fir.opt.mlir 1738:27]
          connect canIn, _canIn_T_1 @[build/NutShell.fir.opt.mlir 1739:13]
          node _pcOut_T = bits(io.in.bits.pc, 38, 3) @[build/NutShell.fir.opt.mlir 1741:25]
          node _pcOut_T_1 = bits(pcOffsetR, 2, 0) @[build/NutShell.fir.opt.mlir 1743:27]
          node _pcOut_T_2 = cat(_pcOut_T, _pcOut_T_1) @[build/NutShell.fir.opt.mlir 1745:27]
          connect pcOut, _pcOut_T_2 @[build/NutShell.fir.opt.mlir 1746:13]
          node _pnpcOut_T_6 = add(pcOut, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1748:29]
          node _pnpcOut_T_7 = tail(_pnpcOut_T_6, 1) @[build/NutShell.fir.opt.mlir 1750:29]
          node _pnpcOut_T_8 = add(pcOut, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1752:29]
          node _pnpcOut_T_9 = tail(_pnpcOut_T_8, 1) @[build/NutShell.fir.opt.mlir 1754:29]
          node _pnpcOut_T_10 = mux(isRVC, _pnpcOut_T_7, _pnpcOut_T_9) @[build/NutShell.fir.opt.mlir 1756:30]
          node _pnpcOut_T_11 = mux(rvcFinish, io.in.bits.pnpc, _pnpcOut_T_10) @[build/NutShell.fir.opt.mlir 1758:30]
          connect pnpcOut, _pnpcOut_T_11 @[build/NutShell.fir.opt.mlir 1759:13]
          node _T_18 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1761:22]
          node _T_19 = and(_T_18, rvcFinish) @[build/NutShell.fir.opt.mlir 1763:22]
          when _T_19 : @[build/NutShell.fir.opt.mlir 1764:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1766:15]
          node _T_20 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1769:22]
          node _T_21 = and(_T_20, rvcNext) @[build/NutShell.fir.opt.mlir 1771:22]
          when _T_21 : @[build/NutShell.fir.opt.mlir 1772:13]
            connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1774:15]
            node _pcOffsetR_T_3 = mux(isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1776:33]
            node _pcOffsetR_T_4 = add(pcOffset, _pcOffsetR_T_3) @[build/NutShell.fir.opt.mlir 1778:33]
            node _pcOffsetR_T_5 = tail(_pcOffsetR_T_4, 1) @[build/NutShell.fir.opt.mlir 1780:33]
            connect pcOffsetR, _pcOffsetR_T_5 @[build/NutShell.fir.opt.mlir 1781:15]
          node _T_22 = and(rvcSpecial, io.in.valid) @[build/NutShell.fir.opt.mlir 1784:22]
          when _T_22 : @[build/NutShell.fir.opt.mlir 1785:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 1787:15]
            connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1788:15]
            node _specialInstR_T_2 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1790:36]
            connect specialInstR, _specialInstR_T_2 @[build/NutShell.fir.opt.mlir 1791:15]
            connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1792:15]
          node _T_23 = and(rvcSpecialJump, io.in.valid) @[build/NutShell.fir.opt.mlir 1795:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 1796:13]
            connect state, UInt<2>(3) @[build/NutShell.fir.opt.mlir 1798:15]
            connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1799:15]
            connect specialNPCR, io.in.bits.pnpc @[build/NutShell.fir.opt.mlir 1800:15]
            node _specialInstR_T_3 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1802:36]
            connect specialInstR, _specialInstR_T_3 @[build/NutShell.fir.opt.mlir 1803:15]
            connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1804:15]
        else :
          node _T_24 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 1808:22]
          when _T_24 : @[build/NutShell.fir.opt.mlir 1809:13]
            connect pcOut, specialPCR @[build/NutShell.fir.opt.mlir 1810:15]
            node _pnpcOut_T_12 = add(specialPCR, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1812:32]
            node _pnpcOut_T_13 = tail(_pnpcOut_T_12, 1) @[build/NutShell.fir.opt.mlir 1814:32]
            connect pnpcOut, _pnpcOut_T_13 @[build/NutShell.fir.opt.mlir 1815:15]
            connect canGo, io.in.valid @[build/NutShell.fir.opt.mlir 1816:15]
            connect canIn, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1818:15]
            node _T_25 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1820:24]
            when _T_25 : @[build/NutShell.fir.opt.mlir 1821:15]
              connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1823:17]
              connect pcOffsetR, pad(UInt<2>(2), 3) @[build/NutShell.fir.opt.mlir 1826:17]
          else :
            node _T_26 = eq(UInt<2>(3), state) @[build/NutShell.fir.opt.mlir 1830:24]
            when _T_26 : @[build/NutShell.fir.opt.mlir 1831:15]
              connect pcOut, specialPCR @[build/NutShell.fir.opt.mlir 1832:17]
              connect pnpcOut, specialNPCR @[build/NutShell.fir.opt.mlir 1833:17]
              connect canGo, io.in.valid @[build/NutShell.fir.opt.mlir 1834:17]
              connect canIn, UInt<1>(1) @[build/NutShell.fir.opt.mlir 1836:17]
              node _T_27 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1838:26]
              when _T_27 : @[build/NutShell.fir.opt.mlir 1839:17]
                connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1841:19]
    else :
      connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1849:9]
      invalidate canGo @[build/NutShell.fir.opt.mlir 1851:9]
      invalidate canIn @[build/NutShell.fir.opt.mlir 1853:9]
      invalidate pcOut @[build/NutShell.fir.opt.mlir 1855:9]
      invalidate pnpcOut @[build/NutShell.fir.opt.mlir 1857:9]
    invalidate io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 1860:7]
    invalidate io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 1862:7]
    invalidate io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 1864:7]
    invalidate io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 1866:7]
    invalidate io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 1868:7]
    invalidate io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 1870:7]
    invalidate io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 1872:7]
    invalidate io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 1874:7]
    invalidate io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 1876:7]
    invalidate io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 1878:7]
    invalidate io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 1880:7]
    invalidate io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 1882:7]
    invalidate io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 1884:7]
    invalidate io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 1886:7]
    invalidate io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 1888:7]
    invalidate io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 1890:7]
    invalidate io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 1892:7]
    invalidate io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 1894:7]
    invalidate io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 1896:7]
    invalidate io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 1898:7]
    invalidate io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 1900:7]
    invalidate io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 1902:7]
    invalidate io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 1904:7]
    invalidate io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 1906:7]
    invalidate io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 1908:7]
    invalidate io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 1910:7]
    invalidate io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 1912:7]
    invalidate io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 1914:7]
    invalidate io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 1916:7]
    invalidate io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1918:7]
    invalidate io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 1920:7]
    invalidate io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 1922:7]
    invalidate io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 1924:7]
    invalidate io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 1926:7]
    invalidate io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 1928:7]
    invalidate io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 1930:7]
    invalidate io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 1932:7]
    invalidate io.out.bits.pc @[build/NutShell.fir.opt.mlir 1934:7]
    invalidate io.out.bits.instr @[build/NutShell.fir.opt.mlir 1936:7]
    connect io.out.bits.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1938:7]
    connect io.out.bits.pc, pcOut @[build/NutShell.fir.opt.mlir 1939:7]
    connect io.out.bits.pnpc, pnpcOut @[build/NutShell.fir.opt.mlir 1940:7]
    connect io.out.bits.instr, pad(instr, 64) @[build/NutShell.fir.opt.mlir 1942:7]
    node _io_out_bits_brIdx_T = add(pcOut, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1944:31]
    node _io_out_bits_brIdx_T_1 = tail(_io_out_bits_brIdx_T, 1) @[build/NutShell.fir.opt.mlir 1946:33]
    node _io_out_bits_brIdx_T_2 = eq(pnpcOut, _io_out_bits_brIdx_T_1) @[build/NutShell.fir.opt.mlir 1948:33]
    node _io_out_bits_brIdx_T_3 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1950:33]
    node _io_out_bits_brIdx_T_4 = and(_io_out_bits_brIdx_T_2, _io_out_bits_brIdx_T_3) @[build/NutShell.fir.opt.mlir 1952:33]
    node _io_out_bits_brIdx_T_5 = add(pcOut, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1954:33]
    node _io_out_bits_brIdx_T_6 = tail(_io_out_bits_brIdx_T_5, 1) @[build/NutShell.fir.opt.mlir 1956:33]
    node _io_out_bits_brIdx_T_7 = eq(pnpcOut, _io_out_bits_brIdx_T_6) @[build/NutShell.fir.opt.mlir 1958:33]
    node _io_out_bits_brIdx_T_8 = and(_io_out_bits_brIdx_T_7, isRVC) @[build/NutShell.fir.opt.mlir 1960:33]
    node _io_out_bits_brIdx_T_9 = or(_io_out_bits_brIdx_T_4, _io_out_bits_brIdx_T_8) @[build/NutShell.fir.opt.mlir 1962:33]
    node _io_out_bits_brIdx_T_10 = mux(_io_out_bits_brIdx_T_9, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 1964:34]
    connect io.out.bits.brIdx, pad(_io_out_bits_brIdx_T_10, 4) @[build/NutShell.fir.opt.mlir 1966:7]
    node _io_out_valid_T = and(io.in.valid, canGo) @[build/NutShell.fir.opt.mlir 1968:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 1969:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1971:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1973:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T_1, canIn) @[build/NutShell.fir.opt.mlir 1975:27]
    node _io_in_ready_T_3 = or(_io_in_ready_T, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 1977:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T_3, loadNextInstline) @[build/NutShell.fir.opt.mlir 1979:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 1980:7]
    connect io.out.bits.exceptionVec, io.in.bits.exceptionVec @[build/NutShell.fir.opt.mlir 1981:7]
    node _io_out_bits_exceptionVec_12_T = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1983:41]
    node _io_out_bits_exceptionVec_12_T_1 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1985:43]
    node _io_out_bits_exceptionVec_12_T_2 = or(_io_out_bits_exceptionVec_12_T, _io_out_bits_exceptionVec_12_T_1) @[build/NutShell.fir.opt.mlir 1987:43]
    node _io_out_bits_exceptionVec_12_T_3 = and(specialIPFR, _io_out_bits_exceptionVec_12_T_2) @[build/NutShell.fir.opt.mlir 1989:43]
    node _io_out_bits_exceptionVec_12_T_4 = or(io.in.bits.exceptionVec[12], _io_out_bits_exceptionVec_12_T_3) @[build/NutShell.fir.opt.mlir 1991:43]
    connect io.out.bits.exceptionVec[12], _io_out_bits_exceptionVec_12_T_4 @[build/NutShell.fir.opt.mlir 1992:7]
    node _io_out_bits_crossPageIPFFix_T = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1994:41]
    node _io_out_bits_crossPageIPFFix_T_1 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1996:43]
    node _io_out_bits_crossPageIPFFix_T_2 = or(_io_out_bits_crossPageIPFFix_T, _io_out_bits_crossPageIPFFix_T_1) @[build/NutShell.fir.opt.mlir 1998:43]
    node _io_out_bits_crossPageIPFFix_T_3 = and(io.in.bits.exceptionVec[12], _io_out_bits_crossPageIPFFix_T_2) @[build/NutShell.fir.opt.mlir 2000:43]
    node _io_out_bits_crossPageIPFFix_T_4 = eq(specialIPFR, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 2002:43]
    node _io_out_bits_crossPageIPFFix_T_5 = and(_io_out_bits_crossPageIPFFix_T_3, _io_out_bits_crossPageIPFFix_T_4) @[build/NutShell.fir.opt.mlir 2004:43]
    connect io.out.bits.crossPageIPFFix, _io_out_bits_crossPageIPFFix_T_5 @[build/NutShell.fir.opt.mlir 2005:7]

  extmodule LogPerfHelper_3 : @[build/NutShell.fir.opt.mlir 2007:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 2007:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 2007:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 2007:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 2007:140]
    defname = LogPerfHelper

  module Decoder : @[build/NutShell.fir.opt.mlir 2008:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 2008:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 2008:65]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, isWFI : UInt<1>, isBranch : UInt<1> } @[build/NutShell.fir.opt.mlir 2008:92]

    wire hasIntr : UInt<1> @[build/NutShell.fir.opt.mlir 2084:18]
    node _decodeList_T = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2087:24]
    node _decodeList_T_1 = eq(UInt<5>(19), _decodeList_T) @[build/NutShell.fir.opt.mlir 2090:26]
    node _decodeList_T_2 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2093:26]
    node _decodeList_T_3 = eq(UInt<13>(4115), _decodeList_T_2) @[build/NutShell.fir.opt.mlir 2096:26]
    node _decodeList_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2098:26]
    node _decodeList_T_5 = eq(UInt<14>(8211), _decodeList_T_4) @[build/NutShell.fir.opt.mlir 2101:26]
    node _decodeList_T_6 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2103:26]
    node _decodeList_T_7 = eq(UInt<14>(12307), _decodeList_T_6) @[build/NutShell.fir.opt.mlir 2106:26]
    node _decodeList_T_8 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2108:26]
    node _decodeList_T_9 = eq(UInt<15>(16403), _decodeList_T_8) @[build/NutShell.fir.opt.mlir 2111:26]
    node _decodeList_T_10 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2113:27]
    node _decodeList_T_11 = eq(UInt<15>(20499), _decodeList_T_10) @[build/NutShell.fir.opt.mlir 2116:27]
    node _decodeList_T_12 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2118:27]
    node _decodeList_T_13 = eq(UInt<15>(24595), _decodeList_T_12) @[build/NutShell.fir.opt.mlir 2121:27]
    node _decodeList_T_14 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2123:27]
    node _decodeList_T_15 = eq(UInt<15>(28691), _decodeList_T_14) @[build/NutShell.fir.opt.mlir 2126:27]
    node _decodeList_T_16 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2128:27]
    node _decodeList_T_17 = eq(UInt<31>(1073762323), _decodeList_T_16) @[build/NutShell.fir.opt.mlir 2131:27]
    node _decodeList_T_18 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2134:27]
    node _decodeList_T_19 = eq(UInt<6>(51), _decodeList_T_18) @[build/NutShell.fir.opt.mlir 2137:27]
    node _decodeList_T_20 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2139:27]
    node _decodeList_T_21 = eq(UInt<13>(4147), _decodeList_T_20) @[build/NutShell.fir.opt.mlir 2142:27]
    node _decodeList_T_22 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2144:27]
    node _decodeList_T_23 = eq(UInt<14>(8243), _decodeList_T_22) @[build/NutShell.fir.opt.mlir 2147:27]
    node _decodeList_T_24 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2149:27]
    node _decodeList_T_25 = eq(UInt<14>(12339), _decodeList_T_24) @[build/NutShell.fir.opt.mlir 2152:27]
    node _decodeList_T_26 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2154:27]
    node _decodeList_T_27 = eq(UInt<15>(16435), _decodeList_T_26) @[build/NutShell.fir.opt.mlir 2157:27]
    node _decodeList_T_28 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2159:27]
    node _decodeList_T_29 = eq(UInt<15>(20531), _decodeList_T_28) @[build/NutShell.fir.opt.mlir 2162:27]
    node _decodeList_T_30 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2164:27]
    node _decodeList_T_31 = eq(UInt<15>(24627), _decodeList_T_30) @[build/NutShell.fir.opt.mlir 2167:27]
    node _decodeList_T_32 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2169:27]
    node _decodeList_T_33 = eq(UInt<15>(28723), _decodeList_T_32) @[build/NutShell.fir.opt.mlir 2172:27]
    node _decodeList_T_34 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2174:27]
    node _decodeList_T_35 = eq(UInt<31>(1073741875), _decodeList_T_34) @[build/NutShell.fir.opt.mlir 2177:27]
    node _decodeList_T_36 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2179:27]
    node _decodeList_T_37 = eq(UInt<31>(1073762355), _decodeList_T_36) @[build/NutShell.fir.opt.mlir 2182:27]
    node _decodeList_T_38 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2185:27]
    node _decodeList_T_39 = eq(UInt<5>(23), _decodeList_T_38) @[build/NutShell.fir.opt.mlir 2188:27]
    node _decodeList_T_40 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2190:27]
    node _decodeList_T_41 = eq(UInt<6>(55), _decodeList_T_40) @[build/NutShell.fir.opt.mlir 2193:27]
    node _decodeList_T_42 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2195:27]
    node _decodeList_T_43 = eq(UInt<7>(111), _decodeList_T_42) @[build/NutShell.fir.opt.mlir 2198:27]
    node _decodeList_T_44 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2200:27]
    node _decodeList_T_45 = eq(UInt<7>(103), _decodeList_T_44) @[build/NutShell.fir.opt.mlir 2203:27]
    node _decodeList_T_46 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2205:27]
    node _decodeList_T_47 = eq(UInt<7>(99), _decodeList_T_46) @[build/NutShell.fir.opt.mlir 2208:27]
    node _decodeList_T_48 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2210:27]
    node _decodeList_T_49 = eq(UInt<13>(4195), _decodeList_T_48) @[build/NutShell.fir.opt.mlir 2213:27]
    node _decodeList_T_50 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2215:27]
    node _decodeList_T_51 = eq(UInt<15>(16483), _decodeList_T_50) @[build/NutShell.fir.opt.mlir 2218:27]
    node _decodeList_T_52 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2220:27]
    node _decodeList_T_53 = eq(UInt<15>(20579), _decodeList_T_52) @[build/NutShell.fir.opt.mlir 2223:27]
    node _decodeList_T_54 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2225:27]
    node _decodeList_T_55 = eq(UInt<15>(24675), _decodeList_T_54) @[build/NutShell.fir.opt.mlir 2228:27]
    node _decodeList_T_56 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2230:27]
    node _decodeList_T_57 = eq(UInt<15>(28771), _decodeList_T_56) @[build/NutShell.fir.opt.mlir 2233:27]
    node _decodeList_T_58 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2235:27]
    node _decodeList_T_59 = eq(UInt<2>(3), _decodeList_T_58) @[build/NutShell.fir.opt.mlir 2238:27]
    node _decodeList_T_60 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2240:27]
    node _decodeList_T_61 = eq(UInt<13>(4099), _decodeList_T_60) @[build/NutShell.fir.opt.mlir 2243:27]
    node _decodeList_T_62 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2245:27]
    node _decodeList_T_63 = eq(UInt<14>(8195), _decodeList_T_62) @[build/NutShell.fir.opt.mlir 2248:27]
    node _decodeList_T_64 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2250:27]
    node _decodeList_T_65 = eq(UInt<15>(16387), _decodeList_T_64) @[build/NutShell.fir.opt.mlir 2253:27]
    node _decodeList_T_66 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2255:27]
    node _decodeList_T_67 = eq(UInt<15>(20483), _decodeList_T_66) @[build/NutShell.fir.opt.mlir 2258:27]
    node _decodeList_T_68 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2260:27]
    node _decodeList_T_69 = eq(UInt<6>(35), _decodeList_T_68) @[build/NutShell.fir.opt.mlir 2263:27]
    node _decodeList_T_70 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2265:27]
    node _decodeList_T_71 = eq(UInt<13>(4131), _decodeList_T_70) @[build/NutShell.fir.opt.mlir 2268:27]
    node _decodeList_T_72 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2270:27]
    node _decodeList_T_73 = eq(UInt<14>(8227), _decodeList_T_72) @[build/NutShell.fir.opt.mlir 2273:27]
    node _decodeList_T_74 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2275:27]
    node _decodeList_T_75 = eq(UInt<5>(27), _decodeList_T_74) @[build/NutShell.fir.opt.mlir 2278:27]
    node _decodeList_T_76 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2280:27]
    node _decodeList_T_77 = eq(UInt<13>(4123), _decodeList_T_76) @[build/NutShell.fir.opt.mlir 2283:27]
    node _decodeList_T_78 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2285:27]
    node _decodeList_T_79 = eq(UInt<15>(20507), _decodeList_T_78) @[build/NutShell.fir.opt.mlir 2288:27]
    node _decodeList_T_80 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2290:27]
    node _decodeList_T_81 = eq(UInt<31>(1073762331), _decodeList_T_80) @[build/NutShell.fir.opt.mlir 2293:27]
    node _decodeList_T_82 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2295:27]
    node _decodeList_T_83 = eq(UInt<13>(4155), _decodeList_T_82) @[build/NutShell.fir.opt.mlir 2298:27]
    node _decodeList_T_84 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2300:27]
    node _decodeList_T_85 = eq(UInt<15>(20539), _decodeList_T_84) @[build/NutShell.fir.opt.mlir 2303:27]
    node _decodeList_T_86 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2305:27]
    node _decodeList_T_87 = eq(UInt<31>(1073762363), _decodeList_T_86) @[build/NutShell.fir.opt.mlir 2308:27]
    node _decodeList_T_88 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2310:27]
    node _decodeList_T_89 = eq(UInt<6>(59), _decodeList_T_88) @[build/NutShell.fir.opt.mlir 2313:27]
    node _decodeList_T_90 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2315:27]
    node _decodeList_T_91 = eq(UInt<31>(1073741883), _decodeList_T_90) @[build/NutShell.fir.opt.mlir 2318:27]
    node _decodeList_T_92 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2320:27]
    node _decodeList_T_93 = eq(UInt<15>(24579), _decodeList_T_92) @[build/NutShell.fir.opt.mlir 2323:27]
    node _decodeList_T_94 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2325:27]
    node _decodeList_T_95 = eq(UInt<14>(12291), _decodeList_T_94) @[build/NutShell.fir.opt.mlir 2328:27]
    node _decodeList_T_96 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2330:27]
    node _decodeList_T_97 = eq(UInt<14>(12323), _decodeList_T_96) @[build/NutShell.fir.opt.mlir 2333:27]
    node _decodeList_T_98 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2335:27]
    node _decodeList_T_99 = eq(UInt<7>(107), _decodeList_T_98) @[build/NutShell.fir.opt.mlir 2338:27]
    node _decodeList_T_100 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2340:28]
    node _decodeList_T_101 = eq(UInt<26>(33554483), _decodeList_T_100) @[build/NutShell.fir.opt.mlir 2343:28]
    node _decodeList_T_102 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2345:28]
    node _decodeList_T_103 = eq(UInt<26>(33558579), _decodeList_T_102) @[build/NutShell.fir.opt.mlir 2348:28]
    node _decodeList_T_104 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2350:28]
    node _decodeList_T_105 = eq(UInt<26>(33562675), _decodeList_T_104) @[build/NutShell.fir.opt.mlir 2353:28]
    node _decodeList_T_106 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2355:28]
    node _decodeList_T_107 = eq(UInt<26>(33566771), _decodeList_T_106) @[build/NutShell.fir.opt.mlir 2358:28]
    node _decodeList_T_108 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2360:28]
    node _decodeList_T_109 = eq(UInt<26>(33570867), _decodeList_T_108) @[build/NutShell.fir.opt.mlir 2363:28]
    node _decodeList_T_110 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2365:28]
    node _decodeList_T_111 = eq(UInt<26>(33574963), _decodeList_T_110) @[build/NutShell.fir.opt.mlir 2368:28]
    node _decodeList_T_112 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2370:28]
    node _decodeList_T_113 = eq(UInt<26>(33579059), _decodeList_T_112) @[build/NutShell.fir.opt.mlir 2373:28]
    node _decodeList_T_114 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2375:28]
    node _decodeList_T_115 = eq(UInt<26>(33583155), _decodeList_T_114) @[build/NutShell.fir.opt.mlir 2378:28]
    node _decodeList_T_116 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2380:28]
    node _decodeList_T_117 = eq(UInt<26>(33554491), _decodeList_T_116) @[build/NutShell.fir.opt.mlir 2383:28]
    node _decodeList_T_118 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2385:28]
    node _decodeList_T_119 = eq(UInt<26>(33570875), _decodeList_T_118) @[build/NutShell.fir.opt.mlir 2388:28]
    node _decodeList_T_120 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2390:28]
    node _decodeList_T_121 = eq(UInt<26>(33574971), _decodeList_T_120) @[build/NutShell.fir.opt.mlir 2393:28]
    node _decodeList_T_122 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2395:28]
    node _decodeList_T_123 = eq(UInt<26>(33579067), _decodeList_T_122) @[build/NutShell.fir.opt.mlir 2398:28]
    node _decodeList_T_124 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2400:28]
    node _decodeList_T_125 = eq(UInt<26>(33583163), _decodeList_T_124) @[build/NutShell.fir.opt.mlir 2403:28]
    node _decodeList_T_126 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2406:28]
    node _decodeList_T_127 = eq(UInt<1>(0), _decodeList_T_126) @[build/NutShell.fir.opt.mlir 2409:28]
    node _decodeList_T_128 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2412:28]
    node _decodeList_T_129 = eq(UInt<1>(0), _decodeList_T_128) @[build/NutShell.fir.opt.mlir 2414:28]
    node _decodeList_T_130 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2416:28]
    node _decodeList_T_131 = eq(UInt<15>(16384), _decodeList_T_130) @[build/NutShell.fir.opt.mlir 2419:28]
    node _decodeList_T_132 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2421:28]
    node _decodeList_T_133 = eq(UInt<15>(24576), _decodeList_T_132) @[build/NutShell.fir.opt.mlir 2424:28]
    node _decodeList_T_134 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2426:28]
    node _decodeList_T_135 = eq(UInt<16>(49152), _decodeList_T_134) @[build/NutShell.fir.opt.mlir 2429:28]
    node _decodeList_T_136 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2431:28]
    node _decodeList_T_137 = eq(UInt<16>(57344), _decodeList_T_136) @[build/NutShell.fir.opt.mlir 2434:28]
    node _decodeList_T_138 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 2437:28]
    node _decodeList_T_139 = eq(UInt<1>(1), _decodeList_T_138) @[build/NutShell.fir.opt.mlir 2440:28]
    node _decodeList_T_140 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2442:28]
    node _decodeList_T_141 = eq(UInt<1>(1), _decodeList_T_140) @[build/NutShell.fir.opt.mlir 2444:28]
    node _decodeList_T_142 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2446:28]
    node _decodeList_T_143 = eq(UInt<14>(8193), _decodeList_T_142) @[build/NutShell.fir.opt.mlir 2449:28]
    node _decodeList_T_144 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2451:28]
    node _decodeList_T_145 = eq(UInt<15>(16385), _decodeList_T_144) @[build/NutShell.fir.opt.mlir 2454:28]
    node _decodeList_T_146 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 2456:28]
    node _decodeList_T_147 = eq(UInt<15>(24833), _decodeList_T_146) @[build/NutShell.fir.opt.mlir 2459:28]
    node _decodeList_T_148 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2461:28]
    node _decodeList_T_149 = eq(UInt<15>(24577), _decodeList_T_148) @[build/NutShell.fir.opt.mlir 2464:28]
    node _decodeList_T_150 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2467:28]
    node _decodeList_T_151 = eq(UInt<16>(32769), _decodeList_T_150) @[build/NutShell.fir.opt.mlir 2470:28]
    node _decodeList_T_152 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2472:28]
    node _decodeList_T_153 = eq(UInt<16>(33793), _decodeList_T_152) @[build/NutShell.fir.opt.mlir 2475:28]
    node _decodeList_T_154 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2477:28]
    node _decodeList_T_155 = eq(UInt<16>(34817), _decodeList_T_154) @[build/NutShell.fir.opt.mlir 2480:28]
    node _decodeList_T_156 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2483:28]
    node _decodeList_T_157 = eq(UInt<16>(35841), _decodeList_T_156) @[build/NutShell.fir.opt.mlir 2486:28]
    node _decodeList_T_158 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2488:28]
    node _decodeList_T_159 = eq(UInt<16>(35873), _decodeList_T_158) @[build/NutShell.fir.opt.mlir 2491:28]
    node _decodeList_T_160 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2493:28]
    node _decodeList_T_161 = eq(UInt<16>(35905), _decodeList_T_160) @[build/NutShell.fir.opt.mlir 2496:28]
    node _decodeList_T_162 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2498:28]
    node _decodeList_T_163 = eq(UInt<16>(35937), _decodeList_T_162) @[build/NutShell.fir.opt.mlir 2501:28]
    node _decodeList_T_164 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2503:28]
    node _decodeList_T_165 = eq(UInt<16>(39937), _decodeList_T_164) @[build/NutShell.fir.opt.mlir 2506:28]
    node _decodeList_T_166 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2508:28]
    node _decodeList_T_167 = eq(UInt<16>(39969), _decodeList_T_166) @[build/NutShell.fir.opt.mlir 2511:28]
    node _decodeList_T_168 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2513:28]
    node _decodeList_T_169 = eq(UInt<16>(40961), _decodeList_T_168) @[build/NutShell.fir.opt.mlir 2516:28]
    node _decodeList_T_170 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2518:28]
    node _decodeList_T_171 = eq(UInt<16>(49153), _decodeList_T_170) @[build/NutShell.fir.opt.mlir 2521:28]
    node _decodeList_T_172 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2523:28]
    node _decodeList_T_173 = eq(UInt<16>(57345), _decodeList_T_172) @[build/NutShell.fir.opt.mlir 2526:28]
    node _decodeList_T_174 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2528:28]
    node _decodeList_T_175 = eq(UInt<2>(2), _decodeList_T_174) @[build/NutShell.fir.opt.mlir 2531:28]
    node _decodeList_T_176 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2533:28]
    node _decodeList_T_177 = eq(UInt<15>(16386), _decodeList_T_176) @[build/NutShell.fir.opt.mlir 2536:28]
    node _decodeList_T_178 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2538:28]
    node _decodeList_T_179 = eq(UInt<15>(24578), _decodeList_T_178) @[build/NutShell.fir.opt.mlir 2541:28]
    node _decodeList_T_180 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 2544:28]
    node _decodeList_T_181 = eq(UInt<16>(32770), _decodeList_T_180) @[build/NutShell.fir.opt.mlir 2547:28]
    node _decodeList_T_182 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 2550:28]
    node _decodeList_T_183 = eq(UInt<16>(32770), _decodeList_T_182) @[build/NutShell.fir.opt.mlir 2552:28]
    node _decodeList_T_184 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 2555:28]
    node _decodeList_T_185 = eq(UInt<16>(36866), _decodeList_T_184) @[build/NutShell.fir.opt.mlir 2558:28]
    node _decodeList_T_186 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 2560:28]
    node _decodeList_T_187 = eq(UInt<16>(36866), _decodeList_T_186) @[build/NutShell.fir.opt.mlir 2562:28]
    node _decodeList_T_188 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 2564:28]
    node _decodeList_T_189 = eq(UInt<16>(36866), _decodeList_T_188) @[build/NutShell.fir.opt.mlir 2566:28]
    node _decodeList_T_190 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2568:28]
    node _decodeList_T_191 = eq(UInt<16>(49154), _decodeList_T_190) @[build/NutShell.fir.opt.mlir 2571:28]
    node _decodeList_T_192 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2573:28]
    node _decodeList_T_193 = eq(UInt<16>(57346), _decodeList_T_192) @[build/NutShell.fir.opt.mlir 2576:28]
    node _decodeList_T_194 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2578:28]
    node _decodeList_T_195 = eq(UInt<7>(115), _decodeList_T_194) @[build/NutShell.fir.opt.mlir 2581:28]
    node _decodeList_T_196 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2583:28]
    node _decodeList_T_197 = eq(UInt<21>(1048691), _decodeList_T_196) @[build/NutShell.fir.opt.mlir 2586:28]
    node _decodeList_T_198 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2588:28]
    node _decodeList_T_199 = eq(UInt<30>(807403635), _decodeList_T_198) @[build/NutShell.fir.opt.mlir 2591:28]
    node _decodeList_T_200 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2593:28]
    node _decodeList_T_201 = eq(UInt<4>(15), _decodeList_T_200) @[build/NutShell.fir.opt.mlir 2596:28]
    node _decodeList_T_202 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2598:28]
    node _decodeList_T_203 = eq(UInt<29>(273678451), _decodeList_T_202) @[build/NutShell.fir.opt.mlir 2601:28]
    node _decodeList_T_204 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2603:28]
    node _decodeList_T_205 = eq(UInt<29>(270532723), _decodeList_T_204) @[build/NutShell.fir.opt.mlir 2606:28]
    node _decodeList_T_206 = and(io.in.bits.instr, UInt<32>(4261445631)) @[build/NutShell.fir.opt.mlir 2609:28]
    node _decodeList_T_207 = eq(UInt<29>(301990003), _decodeList_T_206) @[build/NutShell.fir.opt.mlir 2612:28]
    node _decodeList_T_208 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 2615:28]
    node _decodeList_T_209 = eq(UInt<29>(268447791), _decodeList_T_208) @[build/NutShell.fir.opt.mlir 2618:28]
    node _decodeList_T_210 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 2620:28]
    node _decodeList_T_211 = eq(UInt<29>(268443695), _decodeList_T_210) @[build/NutShell.fir.opt.mlir 2623:28]
    node _decodeList_T_212 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 2626:28]
    node _decodeList_T_213 = eq(UInt<29>(402665519), _decodeList_T_212) @[build/NutShell.fir.opt.mlir 2629:28]
    node _decodeList_T_214 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 2631:28]
    node _decodeList_T_215 = eq(UInt<29>(402661423), _decodeList_T_214) @[build/NutShell.fir.opt.mlir 2634:28]
    node _decodeList_T_216 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2637:28]
    node _decodeList_T_217 = eq(UInt<28>(134225967), _decodeList_T_216) @[build/NutShell.fir.opt.mlir 2640:28]
    node _decodeList_T_218 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2642:28]
    node _decodeList_T_219 = eq(UInt<14>(8239), _decodeList_T_218) @[build/NutShell.fir.opt.mlir 2645:28]
    node _decodeList_T_220 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2647:28]
    node _decodeList_T_221 = eq(UInt<30>(536879151), _decodeList_T_220) @[build/NutShell.fir.opt.mlir 2650:28]
    node _decodeList_T_222 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2652:28]
    node _decodeList_T_223 = eq(UInt<31>(1610620975), _decodeList_T_222) @[build/NutShell.fir.opt.mlir 2655:28]
    node _decodeList_T_224 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2657:28]
    node _decodeList_T_225 = eq(UInt<31>(1073750063), _decodeList_T_224) @[build/NutShell.fir.opt.mlir 2660:28]
    node _decodeList_T_226 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2662:28]
    node _decodeList_T_227 = eq(UInt<32>(2147491887), _decodeList_T_226) @[build/NutShell.fir.opt.mlir 2665:28]
    node _decodeList_T_228 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2667:28]
    node _decodeList_T_229 = eq(UInt<32>(2684362799), _decodeList_T_228) @[build/NutShell.fir.opt.mlir 2670:28]
    node _decodeList_T_230 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2672:28]
    node _decodeList_T_231 = eq(UInt<32>(3221233711), _decodeList_T_230) @[build/NutShell.fir.opt.mlir 2675:28]
    node _decodeList_T_232 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2677:28]
    node _decodeList_T_233 = eq(UInt<32>(3758104623), _decodeList_T_232) @[build/NutShell.fir.opt.mlir 2680:28]
    node _decodeList_T_234 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2682:28]
    node _decodeList_T_235 = eq(UInt<13>(4211), _decodeList_T_234) @[build/NutShell.fir.opt.mlir 2685:28]
    node _decodeList_T_236 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2687:28]
    node _decodeList_T_237 = eq(UInt<14>(8307), _decodeList_T_236) @[build/NutShell.fir.opt.mlir 2690:28]
    node _decodeList_T_238 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2692:28]
    node _decodeList_T_239 = eq(UInt<14>(12403), _decodeList_T_238) @[build/NutShell.fir.opt.mlir 2695:28]
    node _decodeList_T_240 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2697:28]
    node _decodeList_T_241 = eq(UInt<15>(20595), _decodeList_T_240) @[build/NutShell.fir.opt.mlir 2700:28]
    node _decodeList_T_242 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2702:28]
    node _decodeList_T_243 = eq(UInt<15>(24691), _decodeList_T_242) @[build/NutShell.fir.opt.mlir 2705:28]
    node _decodeList_T_244 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2707:28]
    node _decodeList_T_245 = eq(UInt<15>(28787), _decodeList_T_244) @[build/NutShell.fir.opt.mlir 2710:28]
    node _decodeList_T_246 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2712:28]
    node _decodeList_T_247 = eq(UInt<13>(4111), _decodeList_T_246) @[build/NutShell.fir.opt.mlir 2715:28]
    node _decodeList_T_248 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 2717:28]
    node _decodeList_T_249 = mux(_decodeList_T_245, UInt<3>(4), _decodeList_T_248) @[build/NutShell.fir.opt.mlir 2720:28]
    node _decodeList_T_250 = mux(_decodeList_T_243, UInt<3>(4), _decodeList_T_249) @[build/NutShell.fir.opt.mlir 2722:28]
    node _decodeList_T_251 = mux(_decodeList_T_241, UInt<3>(4), _decodeList_T_250) @[build/NutShell.fir.opt.mlir 2724:28]
    node _decodeList_T_252 = mux(_decodeList_T_239, UInt<3>(4), _decodeList_T_251) @[build/NutShell.fir.opt.mlir 2726:28]
    node _decodeList_T_253 = mux(_decodeList_T_237, UInt<3>(4), _decodeList_T_252) @[build/NutShell.fir.opt.mlir 2728:28]
    node _decodeList_T_254 = mux(_decodeList_T_235, UInt<3>(4), _decodeList_T_253) @[build/NutShell.fir.opt.mlir 2730:28]
    node _decodeList_T_255 = mux(_decodeList_T_233, UInt<3>(5), _decodeList_T_254) @[build/NutShell.fir.opt.mlir 2733:28]
    node _decodeList_T_256 = mux(_decodeList_T_231, UInt<3>(5), _decodeList_T_255) @[build/NutShell.fir.opt.mlir 2735:28]
    node _decodeList_T_257 = mux(_decodeList_T_229, UInt<3>(5), _decodeList_T_256) @[build/NutShell.fir.opt.mlir 2737:28]
    node _decodeList_T_258 = mux(_decodeList_T_227, UInt<3>(5), _decodeList_T_257) @[build/NutShell.fir.opt.mlir 2739:28]
    node _decodeList_T_259 = mux(_decodeList_T_225, UInt<3>(5), _decodeList_T_258) @[build/NutShell.fir.opt.mlir 2741:28]
    node _decodeList_T_260 = mux(_decodeList_T_223, UInt<3>(5), _decodeList_T_259) @[build/NutShell.fir.opt.mlir 2743:28]
    node _decodeList_T_261 = mux(_decodeList_T_221, UInt<3>(5), _decodeList_T_260) @[build/NutShell.fir.opt.mlir 2745:28]
    node _decodeList_T_262 = mux(_decodeList_T_219, UInt<3>(5), _decodeList_T_261) @[build/NutShell.fir.opt.mlir 2747:28]
    node _decodeList_T_263 = mux(_decodeList_T_217, UInt<3>(5), _decodeList_T_262) @[build/NutShell.fir.opt.mlir 2749:28]
    node _decodeList_T_264 = mux(_decodeList_T_215, UInt<4>(15), _decodeList_T_263) @[build/NutShell.fir.opt.mlir 2751:28]
    node _decodeList_T_265 = mux(_decodeList_T_213, UInt<4>(15), _decodeList_T_264) @[build/NutShell.fir.opt.mlir 2753:28]
    node _decodeList_T_266 = mux(_decodeList_T_211, UInt<3>(4), _decodeList_T_265) @[build/NutShell.fir.opt.mlir 2755:28]
    node _decodeList_T_267 = mux(_decodeList_T_209, UInt<3>(4), _decodeList_T_266) @[build/NutShell.fir.opt.mlir 2757:28]
    node _decodeList_T_268 = mux(_decodeList_T_207, UInt<3>(5), _decodeList_T_267) @[build/NutShell.fir.opt.mlir 2759:28]
    node _decodeList_T_269 = mux(_decodeList_T_205, UInt<3>(4), _decodeList_T_268) @[build/NutShell.fir.opt.mlir 2761:28]
    node _decodeList_T_270 = mux(_decodeList_T_203, UInt<3>(4), _decodeList_T_269) @[build/NutShell.fir.opt.mlir 2763:28]
    node _decodeList_T_271 = mux(_decodeList_T_201, UInt<2>(2), _decodeList_T_270) @[build/NutShell.fir.opt.mlir 2765:28]
    node _decodeList_T_272 = mux(_decodeList_T_199, UInt<3>(4), _decodeList_T_271) @[build/NutShell.fir.opt.mlir 2767:28]
    node _decodeList_T_273 = mux(_decodeList_T_197, UInt<3>(4), _decodeList_T_272) @[build/NutShell.fir.opt.mlir 2769:28]
    node _decodeList_T_274 = mux(_decodeList_T_195, UInt<3>(4), _decodeList_T_273) @[build/NutShell.fir.opt.mlir 2771:28]
    node _decodeList_T_275 = mux(_decodeList_T_193, UInt<2>(2), _decodeList_T_274) @[build/NutShell.fir.opt.mlir 2773:28]
    node _decodeList_T_276 = mux(_decodeList_T_191, UInt<2>(2), _decodeList_T_275) @[build/NutShell.fir.opt.mlir 2775:28]
    node _decodeList_T_277 = mux(_decodeList_T_189, UInt<3>(5), _decodeList_T_276) @[build/NutShell.fir.opt.mlir 2777:28]
    node _decodeList_T_278 = mux(_decodeList_T_187, UInt<3>(4), _decodeList_T_277) @[build/NutShell.fir.opt.mlir 2779:28]
    node _decodeList_T_279 = mux(_decodeList_T_185, UInt<3>(4), _decodeList_T_278) @[build/NutShell.fir.opt.mlir 2781:28]
    node _decodeList_T_280 = mux(_decodeList_T_183, UInt<3>(5), _decodeList_T_279) @[build/NutShell.fir.opt.mlir 2783:28]
    node _decodeList_T_281 = mux(_decodeList_T_181, UInt<3>(4), _decodeList_T_280) @[build/NutShell.fir.opt.mlir 2785:28]
    node _decodeList_T_282 = mux(_decodeList_T_179, UInt<3>(4), _decodeList_T_281) @[build/NutShell.fir.opt.mlir 2787:28]
    node _decodeList_T_283 = mux(_decodeList_T_177, UInt<3>(4), _decodeList_T_282) @[build/NutShell.fir.opt.mlir 2789:28]
    node _decodeList_T_284 = mux(_decodeList_T_175, UInt<3>(4), _decodeList_T_283) @[build/NutShell.fir.opt.mlir 2791:28]
    node _decodeList_T_285 = mux(_decodeList_T_173, UInt<1>(1), _decodeList_T_284) @[build/NutShell.fir.opt.mlir 2793:28]
    node _decodeList_T_286 = mux(_decodeList_T_171, UInt<1>(1), _decodeList_T_285) @[build/NutShell.fir.opt.mlir 2795:28]
    node _decodeList_T_287 = mux(_decodeList_T_169, UInt<3>(7), _decodeList_T_286) @[build/NutShell.fir.opt.mlir 2798:28]
    node _decodeList_T_288 = mux(_decodeList_T_167, UInt<3>(5), _decodeList_T_287) @[build/NutShell.fir.opt.mlir 2800:28]
    node _decodeList_T_289 = mux(_decodeList_T_165, UInt<3>(5), _decodeList_T_288) @[build/NutShell.fir.opt.mlir 2802:28]
    node _decodeList_T_290 = mux(_decodeList_T_163, UInt<3>(5), _decodeList_T_289) @[build/NutShell.fir.opt.mlir 2804:28]
    node _decodeList_T_291 = mux(_decodeList_T_161, UInt<3>(5), _decodeList_T_290) @[build/NutShell.fir.opt.mlir 2806:28]
    node _decodeList_T_292 = mux(_decodeList_T_159, UInt<3>(5), _decodeList_T_291) @[build/NutShell.fir.opt.mlir 2808:28]
    node _decodeList_T_293 = mux(_decodeList_T_157, UInt<3>(5), _decodeList_T_292) @[build/NutShell.fir.opt.mlir 2810:28]
    node _decodeList_T_294 = mux(_decodeList_T_155, UInt<3>(4), _decodeList_T_293) @[build/NutShell.fir.opt.mlir 2812:28]
    node _decodeList_T_295 = mux(_decodeList_T_153, UInt<3>(4), _decodeList_T_294) @[build/NutShell.fir.opt.mlir 2814:28]
    node _decodeList_T_296 = mux(_decodeList_T_151, UInt<3>(4), _decodeList_T_295) @[build/NutShell.fir.opt.mlir 2816:28]
    node _decodeList_T_297 = mux(_decodeList_T_149, UInt<3>(4), _decodeList_T_296) @[build/NutShell.fir.opt.mlir 2818:28]
    node _decodeList_T_298 = mux(_decodeList_T_147, UInt<3>(4), _decodeList_T_297) @[build/NutShell.fir.opt.mlir 2820:28]
    node _decodeList_T_299 = mux(_decodeList_T_145, UInt<3>(4), _decodeList_T_298) @[build/NutShell.fir.opt.mlir 2822:28]
    node _decodeList_T_300 = mux(_decodeList_T_143, UInt<3>(4), _decodeList_T_299) @[build/NutShell.fir.opt.mlir 2824:28]
    node _decodeList_T_301 = mux(_decodeList_T_141, UInt<3>(4), _decodeList_T_300) @[build/NutShell.fir.opt.mlir 2826:28]
    node _decodeList_T_302 = mux(_decodeList_T_139, UInt<3>(4), _decodeList_T_301) @[build/NutShell.fir.opt.mlir 2828:28]
    node _decodeList_T_303 = mux(_decodeList_T_137, UInt<2>(2), _decodeList_T_302) @[build/NutShell.fir.opt.mlir 2830:28]
    node _decodeList_T_304 = mux(_decodeList_T_135, UInt<2>(2), _decodeList_T_303) @[build/NutShell.fir.opt.mlir 2832:28]
    node _decodeList_T_305 = mux(_decodeList_T_133, UInt<3>(4), _decodeList_T_304) @[build/NutShell.fir.opt.mlir 2834:28]
    node _decodeList_T_306 = mux(_decodeList_T_131, UInt<3>(4), _decodeList_T_305) @[build/NutShell.fir.opt.mlir 2836:28]
    node _decodeList_T_307 = mux(_decodeList_T_129, UInt<3>(4), _decodeList_T_306) @[build/NutShell.fir.opt.mlir 2838:28]
    node _decodeList_T_308 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_307) @[build/NutShell.fir.opt.mlir 2840:28]
    node _decodeList_T_309 = mux(_decodeList_T_125, UInt<3>(5), _decodeList_T_308) @[build/NutShell.fir.opt.mlir 2842:28]
    node _decodeList_T_310 = mux(_decodeList_T_123, UInt<3>(5), _decodeList_T_309) @[build/NutShell.fir.opt.mlir 2844:28]
    node _decodeList_T_311 = mux(_decodeList_T_121, UInt<3>(5), _decodeList_T_310) @[build/NutShell.fir.opt.mlir 2846:28]
    node _decodeList_T_312 = mux(_decodeList_T_119, UInt<3>(5), _decodeList_T_311) @[build/NutShell.fir.opt.mlir 2848:28]
    node _decodeList_T_313 = mux(_decodeList_T_117, UInt<3>(5), _decodeList_T_312) @[build/NutShell.fir.opt.mlir 2850:28]
    node _decodeList_T_314 = mux(_decodeList_T_115, UInt<3>(5), _decodeList_T_313) @[build/NutShell.fir.opt.mlir 2852:28]
    node _decodeList_T_315 = mux(_decodeList_T_113, UInt<3>(5), _decodeList_T_314) @[build/NutShell.fir.opt.mlir 2854:28]
    node _decodeList_T_316 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_315) @[build/NutShell.fir.opt.mlir 2856:28]
    node _decodeList_T_317 = mux(_decodeList_T_109, UInt<3>(5), _decodeList_T_316) @[build/NutShell.fir.opt.mlir 2858:28]
    node _decodeList_T_318 = mux(_decodeList_T_107, UInt<3>(5), _decodeList_T_317) @[build/NutShell.fir.opt.mlir 2860:28]
    node _decodeList_T_319 = mux(_decodeList_T_105, UInt<3>(5), _decodeList_T_318) @[build/NutShell.fir.opt.mlir 2862:28]
    node _decodeList_T_320 = mux(_decodeList_T_103, UInt<3>(5), _decodeList_T_319) @[build/NutShell.fir.opt.mlir 2864:28]
    node _decodeList_T_321 = mux(_decodeList_T_101, UInt<3>(5), _decodeList_T_320) @[build/NutShell.fir.opt.mlir 2866:28]
    node _decodeList_T_322 = mux(_decodeList_T_99, UInt<3>(4), _decodeList_T_321) @[build/NutShell.fir.opt.mlir 2868:28]
    node _decodeList_T_323 = mux(_decodeList_T_97, UInt<2>(2), _decodeList_T_322) @[build/NutShell.fir.opt.mlir 2870:28]
    node _decodeList_T_324 = mux(_decodeList_T_95, UInt<3>(4), _decodeList_T_323) @[build/NutShell.fir.opt.mlir 2872:28]
    node _decodeList_T_325 = mux(_decodeList_T_93, UInt<3>(4), _decodeList_T_324) @[build/NutShell.fir.opt.mlir 2874:28]
    node _decodeList_T_326 = mux(_decodeList_T_91, UInt<3>(5), _decodeList_T_325) @[build/NutShell.fir.opt.mlir 2876:28]
    node _decodeList_T_327 = mux(_decodeList_T_89, UInt<3>(5), _decodeList_T_326) @[build/NutShell.fir.opt.mlir 2878:28]
    node _decodeList_T_328 = mux(_decodeList_T_87, UInt<3>(5), _decodeList_T_327) @[build/NutShell.fir.opt.mlir 2880:28]
    node _decodeList_T_329 = mux(_decodeList_T_85, UInt<3>(5), _decodeList_T_328) @[build/NutShell.fir.opt.mlir 2882:28]
    node _decodeList_T_330 = mux(_decodeList_T_83, UInt<3>(5), _decodeList_T_329) @[build/NutShell.fir.opt.mlir 2884:28]
    node _decodeList_T_331 = mux(_decodeList_T_81, UInt<3>(4), _decodeList_T_330) @[build/NutShell.fir.opt.mlir 2886:28]
    node _decodeList_T_332 = mux(_decodeList_T_79, UInt<3>(4), _decodeList_T_331) @[build/NutShell.fir.opt.mlir 2888:28]
    node _decodeList_T_333 = mux(_decodeList_T_77, UInt<3>(4), _decodeList_T_332) @[build/NutShell.fir.opt.mlir 2890:28]
    node _decodeList_T_334 = mux(_decodeList_T_75, UInt<3>(4), _decodeList_T_333) @[build/NutShell.fir.opt.mlir 2892:28]
    node _decodeList_T_335 = mux(_decodeList_T_73, UInt<2>(2), _decodeList_T_334) @[build/NutShell.fir.opt.mlir 2894:28]
    node _decodeList_T_336 = mux(_decodeList_T_71, UInt<2>(2), _decodeList_T_335) @[build/NutShell.fir.opt.mlir 2896:28]
    node _decodeList_T_337 = mux(_decodeList_T_69, UInt<2>(2), _decodeList_T_336) @[build/NutShell.fir.opt.mlir 2898:28]
    node _decodeList_T_338 = mux(_decodeList_T_67, UInt<3>(4), _decodeList_T_337) @[build/NutShell.fir.opt.mlir 2900:28]
    node _decodeList_T_339 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_338) @[build/NutShell.fir.opt.mlir 2902:28]
    node _decodeList_T_340 = mux(_decodeList_T_63, UInt<3>(4), _decodeList_T_339) @[build/NutShell.fir.opt.mlir 2904:28]
    node _decodeList_T_341 = mux(_decodeList_T_61, UInt<3>(4), _decodeList_T_340) @[build/NutShell.fir.opt.mlir 2906:28]
    node _decodeList_T_342 = mux(_decodeList_T_59, UInt<3>(4), _decodeList_T_341) @[build/NutShell.fir.opt.mlir 2908:28]
    node _decodeList_T_343 = mux(_decodeList_T_57, UInt<1>(1), _decodeList_T_342) @[build/NutShell.fir.opt.mlir 2910:28]
    node _decodeList_T_344 = mux(_decodeList_T_55, UInt<1>(1), _decodeList_T_343) @[build/NutShell.fir.opt.mlir 2912:28]
    node _decodeList_T_345 = mux(_decodeList_T_53, UInt<1>(1), _decodeList_T_344) @[build/NutShell.fir.opt.mlir 2914:28]
    node _decodeList_T_346 = mux(_decodeList_T_51, UInt<1>(1), _decodeList_T_345) @[build/NutShell.fir.opt.mlir 2916:28]
    node _decodeList_T_347 = mux(_decodeList_T_49, UInt<1>(1), _decodeList_T_346) @[build/NutShell.fir.opt.mlir 2918:28]
    node _decodeList_T_348 = mux(_decodeList_T_47, UInt<1>(1), _decodeList_T_347) @[build/NutShell.fir.opt.mlir 2920:28]
    node _decodeList_T_349 = mux(_decodeList_T_45, UInt<3>(4), _decodeList_T_348) @[build/NutShell.fir.opt.mlir 2922:28]
    node _decodeList_T_350 = mux(_decodeList_T_43, UInt<3>(7), _decodeList_T_349) @[build/NutShell.fir.opt.mlir 2924:28]
    node _decodeList_T_351 = mux(_decodeList_T_41, UInt<3>(6), _decodeList_T_350) @[build/NutShell.fir.opt.mlir 2927:28]
    node _decodeList_T_352 = mux(_decodeList_T_39, UInt<3>(6), _decodeList_T_351) @[build/NutShell.fir.opt.mlir 2929:28]
    node _decodeList_T_353 = mux(_decodeList_T_37, UInt<3>(5), _decodeList_T_352) @[build/NutShell.fir.opt.mlir 2931:28]
    node _decodeList_T_354 = mux(_decodeList_T_35, UInt<3>(5), _decodeList_T_353) @[build/NutShell.fir.opt.mlir 2933:28]
    node _decodeList_T_355 = mux(_decodeList_T_33, UInt<3>(5), _decodeList_T_354) @[build/NutShell.fir.opt.mlir 2935:28]
    node _decodeList_T_356 = mux(_decodeList_T_31, UInt<3>(5), _decodeList_T_355) @[build/NutShell.fir.opt.mlir 2937:28]
    node _decodeList_T_357 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_356) @[build/NutShell.fir.opt.mlir 2939:28]
    node _decodeList_T_358 = mux(_decodeList_T_27, UInt<3>(5), _decodeList_T_357) @[build/NutShell.fir.opt.mlir 2941:28]
    node _decodeList_T_359 = mux(_decodeList_T_25, UInt<3>(5), _decodeList_T_358) @[build/NutShell.fir.opt.mlir 2943:28]
    node _decodeList_T_360 = mux(_decodeList_T_23, UInt<3>(5), _decodeList_T_359) @[build/NutShell.fir.opt.mlir 2945:28]
    node _decodeList_T_361 = mux(_decodeList_T_21, UInt<3>(5), _decodeList_T_360) @[build/NutShell.fir.opt.mlir 2947:28]
    node _decodeList_T_362 = mux(_decodeList_T_19, UInt<3>(5), _decodeList_T_361) @[build/NutShell.fir.opt.mlir 2949:28]
    node _decodeList_T_363 = mux(_decodeList_T_17, UInt<3>(4), _decodeList_T_362) @[build/NutShell.fir.opt.mlir 2951:28]
    node _decodeList_T_364 = mux(_decodeList_T_15, UInt<3>(4), _decodeList_T_363) @[build/NutShell.fir.opt.mlir 2953:28]
    node _decodeList_T_365 = mux(_decodeList_T_13, UInt<3>(4), _decodeList_T_364) @[build/NutShell.fir.opt.mlir 2955:28]
    node _decodeList_T_366 = mux(_decodeList_T_11, UInt<3>(4), _decodeList_T_365) @[build/NutShell.fir.opt.mlir 2957:28]
    node _decodeList_T_367 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_366) @[build/NutShell.fir.opt.mlir 2959:28]
    node _decodeList_T_368 = mux(_decodeList_T_7, UInt<3>(4), _decodeList_T_367) @[build/NutShell.fir.opt.mlir 2961:28]
    node _decodeList_T_369 = mux(_decodeList_T_5, UInt<3>(4), _decodeList_T_368) @[build/NutShell.fir.opt.mlir 2963:28]
    node _decodeList_T_370 = mux(_decodeList_T_3, UInt<3>(4), _decodeList_T_369) @[build/NutShell.fir.opt.mlir 2965:28]
    node decodeList_0 = mux(_decodeList_T_1, UInt<3>(4), _decodeList_T_370) @[build/NutShell.fir.opt.mlir 2967:23]
    node _decodeList_T_371 = mux(_decodeList_T_247, UInt<3>(4), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 2969:28]
    node _decodeList_T_372 = mux(_decodeList_T_245, UInt<2>(3), _decodeList_T_371) @[build/NutShell.fir.opt.mlir 2971:28]
    node _decodeList_T_373 = mux(_decodeList_T_243, UInt<2>(3), _decodeList_T_372) @[build/NutShell.fir.opt.mlir 2973:28]
    node _decodeList_T_374 = mux(_decodeList_T_241, UInt<2>(3), _decodeList_T_373) @[build/NutShell.fir.opt.mlir 2975:28]
    node _decodeList_T_375 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_374) @[build/NutShell.fir.opt.mlir 2977:28]
    node _decodeList_T_376 = mux(_decodeList_T_237, UInt<2>(3), _decodeList_T_375) @[build/NutShell.fir.opt.mlir 2979:28]
    node _decodeList_T_377 = mux(_decodeList_T_235, UInt<2>(3), _decodeList_T_376) @[build/NutShell.fir.opt.mlir 2981:28]
    node _decodeList_T_378 = mux(_decodeList_T_233, UInt<1>(1), _decodeList_T_377) @[build/NutShell.fir.opt.mlir 2983:28]
    node _decodeList_T_379 = mux(_decodeList_T_231, UInt<1>(1), _decodeList_T_378) @[build/NutShell.fir.opt.mlir 2985:28]
    node _decodeList_T_380 = mux(_decodeList_T_229, UInt<1>(1), _decodeList_T_379) @[build/NutShell.fir.opt.mlir 2987:28]
    node _decodeList_T_381 = mux(_decodeList_T_227, UInt<1>(1), _decodeList_T_380) @[build/NutShell.fir.opt.mlir 2989:28]
    node _decodeList_T_382 = mux(_decodeList_T_225, UInt<1>(1), _decodeList_T_381) @[build/NutShell.fir.opt.mlir 2991:28]
    node _decodeList_T_383 = mux(_decodeList_T_223, UInt<1>(1), _decodeList_T_382) @[build/NutShell.fir.opt.mlir 2993:28]
    node _decodeList_T_384 = mux(_decodeList_T_221, UInt<1>(1), _decodeList_T_383) @[build/NutShell.fir.opt.mlir 2995:28]
    node _decodeList_T_385 = mux(_decodeList_T_219, UInt<1>(1), _decodeList_T_384) @[build/NutShell.fir.opt.mlir 2997:28]
    node _decodeList_T_386 = mux(_decodeList_T_217, UInt<1>(1), _decodeList_T_385) @[build/NutShell.fir.opt.mlir 2999:28]
    node _decodeList_T_387 = mux(_decodeList_T_215, UInt<1>(1), _decodeList_T_386) @[build/NutShell.fir.opt.mlir 3001:28]
    node _decodeList_T_388 = mux(_decodeList_T_213, UInt<1>(1), _decodeList_T_387) @[build/NutShell.fir.opt.mlir 3003:28]
    node _decodeList_T_389 = mux(_decodeList_T_211, UInt<1>(1), _decodeList_T_388) @[build/NutShell.fir.opt.mlir 3005:28]
    node _decodeList_T_390 = mux(_decodeList_T_209, UInt<1>(1), _decodeList_T_389) @[build/NutShell.fir.opt.mlir 3007:28]
    node _decodeList_T_391 = mux(_decodeList_T_207, UInt<3>(4), _decodeList_T_390) @[build/NutShell.fir.opt.mlir 3009:28]
    node _decodeList_T_392 = mux(_decodeList_T_205, UInt<2>(3), _decodeList_T_391) @[build/NutShell.fir.opt.mlir 3011:28]
    node _decodeList_T_393 = mux(_decodeList_T_203, UInt<1>(0), _decodeList_T_392) @[build/NutShell.fir.opt.mlir 3013:28]
    node _decodeList_T_394 = mux(_decodeList_T_201, UInt<3>(4), _decodeList_T_393) @[build/NutShell.fir.opt.mlir 3015:28]
    node _decodeList_T_395 = mux(_decodeList_T_199, UInt<2>(3), _decodeList_T_394) @[build/NutShell.fir.opt.mlir 3017:28]
    node _decodeList_T_396 = mux(_decodeList_T_197, UInt<2>(3), _decodeList_T_395) @[build/NutShell.fir.opt.mlir 3019:28]
    node _decodeList_T_397 = mux(_decodeList_T_195, UInt<2>(3), _decodeList_T_396) @[build/NutShell.fir.opt.mlir 3021:28]
    node _decodeList_T_398 = mux(_decodeList_T_193, UInt<1>(1), _decodeList_T_397) @[build/NutShell.fir.opt.mlir 3023:28]
    node _decodeList_T_399 = mux(_decodeList_T_191, UInt<1>(1), _decodeList_T_398) @[build/NutShell.fir.opt.mlir 3025:28]
    node _decodeList_T_400 = mux(_decodeList_T_189, UInt<1>(0), _decodeList_T_399) @[build/NutShell.fir.opt.mlir 3027:28]
    node _decodeList_T_401 = mux(_decodeList_T_187, UInt<1>(0), _decodeList_T_400) @[build/NutShell.fir.opt.mlir 3029:28]
    node _decodeList_T_402 = mux(_decodeList_T_185, UInt<2>(3), _decodeList_T_401) @[build/NutShell.fir.opt.mlir 3031:28]
    node _decodeList_T_403 = mux(_decodeList_T_183, UInt<1>(0), _decodeList_T_402) @[build/NutShell.fir.opt.mlir 3033:28]
    node _decodeList_T_404 = mux(_decodeList_T_181, UInt<1>(0), _decodeList_T_403) @[build/NutShell.fir.opt.mlir 3035:28]
    node _decodeList_T_405 = mux(_decodeList_T_179, UInt<1>(1), _decodeList_T_404) @[build/NutShell.fir.opt.mlir 3037:28]
    node _decodeList_T_406 = mux(_decodeList_T_177, UInt<1>(1), _decodeList_T_405) @[build/NutShell.fir.opt.mlir 3039:28]
    node _decodeList_T_407 = mux(_decodeList_T_175, UInt<1>(0), _decodeList_T_406) @[build/NutShell.fir.opt.mlir 3041:28]
    node _decodeList_T_408 = mux(_decodeList_T_173, UInt<1>(0), _decodeList_T_407) @[build/NutShell.fir.opt.mlir 3043:28]
    node _decodeList_T_409 = mux(_decodeList_T_171, UInt<1>(0), _decodeList_T_408) @[build/NutShell.fir.opt.mlir 3045:28]
    node _decodeList_T_410 = mux(_decodeList_T_169, UInt<1>(0), _decodeList_T_409) @[build/NutShell.fir.opt.mlir 3047:28]
    node _decodeList_T_411 = mux(_decodeList_T_167, UInt<1>(0), _decodeList_T_410) @[build/NutShell.fir.opt.mlir 3049:28]
    node _decodeList_T_412 = mux(_decodeList_T_165, UInt<1>(0), _decodeList_T_411) @[build/NutShell.fir.opt.mlir 3051:28]
    node _decodeList_T_413 = mux(_decodeList_T_163, UInt<1>(0), _decodeList_T_412) @[build/NutShell.fir.opt.mlir 3053:28]
    node _decodeList_T_414 = mux(_decodeList_T_161, UInt<1>(0), _decodeList_T_413) @[build/NutShell.fir.opt.mlir 3055:28]
    node _decodeList_T_415 = mux(_decodeList_T_159, UInt<1>(0), _decodeList_T_414) @[build/NutShell.fir.opt.mlir 3057:28]
    node _decodeList_T_416 = mux(_decodeList_T_157, UInt<1>(0), _decodeList_T_415) @[build/NutShell.fir.opt.mlir 3059:28]
    node _decodeList_T_417 = mux(_decodeList_T_155, UInt<1>(0), _decodeList_T_416) @[build/NutShell.fir.opt.mlir 3061:28]
    node _decodeList_T_418 = mux(_decodeList_T_153, UInt<1>(0), _decodeList_T_417) @[build/NutShell.fir.opt.mlir 3063:28]
    node _decodeList_T_419 = mux(_decodeList_T_151, UInt<1>(0), _decodeList_T_418) @[build/NutShell.fir.opt.mlir 3065:28]
    node _decodeList_T_420 = mux(_decodeList_T_149, UInt<1>(0), _decodeList_T_419) @[build/NutShell.fir.opt.mlir 3067:28]
    node _decodeList_T_421 = mux(_decodeList_T_147, UInt<1>(0), _decodeList_T_420) @[build/NutShell.fir.opt.mlir 3069:28]
    node _decodeList_T_422 = mux(_decodeList_T_145, UInt<1>(0), _decodeList_T_421) @[build/NutShell.fir.opt.mlir 3071:28]
    node _decodeList_T_423 = mux(_decodeList_T_143, UInt<1>(0), _decodeList_T_422) @[build/NutShell.fir.opt.mlir 3073:28]
    node _decodeList_T_424 = mux(_decodeList_T_141, UInt<1>(0), _decodeList_T_423) @[build/NutShell.fir.opt.mlir 3075:28]
    node _decodeList_T_425 = mux(_decodeList_T_139, UInt<1>(0), _decodeList_T_424) @[build/NutShell.fir.opt.mlir 3077:28]
    node _decodeList_T_426 = mux(_decodeList_T_137, UInt<1>(1), _decodeList_T_425) @[build/NutShell.fir.opt.mlir 3079:28]
    node _decodeList_T_427 = mux(_decodeList_T_135, UInt<1>(1), _decodeList_T_426) @[build/NutShell.fir.opt.mlir 3081:28]
    node _decodeList_T_428 = mux(_decodeList_T_133, UInt<1>(1), _decodeList_T_427) @[build/NutShell.fir.opt.mlir 3083:28]
    node _decodeList_T_429 = mux(_decodeList_T_131, UInt<1>(1), _decodeList_T_428) @[build/NutShell.fir.opt.mlir 3085:28]
    node _decodeList_T_430 = mux(_decodeList_T_129, UInt<1>(0), _decodeList_T_429) @[build/NutShell.fir.opt.mlir 3087:28]
    node _decodeList_T_431 = mux(_decodeList_T_127, UInt<2>(3), _decodeList_T_430) @[build/NutShell.fir.opt.mlir 3089:28]
    node _decodeList_T_432 = mux(_decodeList_T_125, UInt<2>(2), _decodeList_T_431) @[build/NutShell.fir.opt.mlir 3091:28]
    node _decodeList_T_433 = mux(_decodeList_T_123, UInt<2>(2), _decodeList_T_432) @[build/NutShell.fir.opt.mlir 3093:28]
    node _decodeList_T_434 = mux(_decodeList_T_121, UInt<2>(2), _decodeList_T_433) @[build/NutShell.fir.opt.mlir 3095:28]
    node _decodeList_T_435 = mux(_decodeList_T_119, UInt<2>(2), _decodeList_T_434) @[build/NutShell.fir.opt.mlir 3097:28]
    node _decodeList_T_436 = mux(_decodeList_T_117, UInt<2>(2), _decodeList_T_435) @[build/NutShell.fir.opt.mlir 3099:28]
    node _decodeList_T_437 = mux(_decodeList_T_115, UInt<2>(2), _decodeList_T_436) @[build/NutShell.fir.opt.mlir 3101:28]
    node _decodeList_T_438 = mux(_decodeList_T_113, UInt<2>(2), _decodeList_T_437) @[build/NutShell.fir.opt.mlir 3103:28]
    node _decodeList_T_439 = mux(_decodeList_T_111, UInt<2>(2), _decodeList_T_438) @[build/NutShell.fir.opt.mlir 3105:28]
    node _decodeList_T_440 = mux(_decodeList_T_109, UInt<2>(2), _decodeList_T_439) @[build/NutShell.fir.opt.mlir 3107:28]
    node _decodeList_T_441 = mux(_decodeList_T_107, UInt<2>(2), _decodeList_T_440) @[build/NutShell.fir.opt.mlir 3109:28]
    node _decodeList_T_442 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_441) @[build/NutShell.fir.opt.mlir 3111:28]
    node _decodeList_T_443 = mux(_decodeList_T_103, UInt<2>(2), _decodeList_T_442) @[build/NutShell.fir.opt.mlir 3113:28]
    node _decodeList_T_444 = mux(_decodeList_T_101, UInt<2>(2), _decodeList_T_443) @[build/NutShell.fir.opt.mlir 3115:28]
    node _decodeList_T_445 = mux(_decodeList_T_99, UInt<1>(0), _decodeList_T_444) @[build/NutShell.fir.opt.mlir 3117:28]
    node _decodeList_T_446 = mux(_decodeList_T_97, UInt<1>(1), _decodeList_T_445) @[build/NutShell.fir.opt.mlir 3119:28]
    node _decodeList_T_447 = mux(_decodeList_T_95, UInt<1>(1), _decodeList_T_446) @[build/NutShell.fir.opt.mlir 3121:28]
    node _decodeList_T_448 = mux(_decodeList_T_93, UInt<1>(1), _decodeList_T_447) @[build/NutShell.fir.opt.mlir 3123:28]
    node _decodeList_T_449 = mux(_decodeList_T_91, UInt<1>(0), _decodeList_T_448) @[build/NutShell.fir.opt.mlir 3125:28]
    node _decodeList_T_450 = mux(_decodeList_T_89, UInt<1>(0), _decodeList_T_449) @[build/NutShell.fir.opt.mlir 3127:28]
    node _decodeList_T_451 = mux(_decodeList_T_87, UInt<1>(0), _decodeList_T_450) @[build/NutShell.fir.opt.mlir 3129:28]
    node _decodeList_T_452 = mux(_decodeList_T_85, UInt<1>(0), _decodeList_T_451) @[build/NutShell.fir.opt.mlir 3131:28]
    node _decodeList_T_453 = mux(_decodeList_T_83, UInt<1>(0), _decodeList_T_452) @[build/NutShell.fir.opt.mlir 3133:28]
    node _decodeList_T_454 = mux(_decodeList_T_81, UInt<1>(0), _decodeList_T_453) @[build/NutShell.fir.opt.mlir 3135:28]
    node _decodeList_T_455 = mux(_decodeList_T_79, UInt<1>(0), _decodeList_T_454) @[build/NutShell.fir.opt.mlir 3137:28]
    node _decodeList_T_456 = mux(_decodeList_T_77, UInt<1>(0), _decodeList_T_455) @[build/NutShell.fir.opt.mlir 3139:28]
    node _decodeList_T_457 = mux(_decodeList_T_75, UInt<1>(0), _decodeList_T_456) @[build/NutShell.fir.opt.mlir 3141:28]
    node _decodeList_T_458 = mux(_decodeList_T_73, UInt<1>(1), _decodeList_T_457) @[build/NutShell.fir.opt.mlir 3143:28]
    node _decodeList_T_459 = mux(_decodeList_T_71, UInt<1>(1), _decodeList_T_458) @[build/NutShell.fir.opt.mlir 3145:28]
    node _decodeList_T_460 = mux(_decodeList_T_69, UInt<1>(1), _decodeList_T_459) @[build/NutShell.fir.opt.mlir 3147:28]
    node _decodeList_T_461 = mux(_decodeList_T_67, UInt<1>(1), _decodeList_T_460) @[build/NutShell.fir.opt.mlir 3149:28]
    node _decodeList_T_462 = mux(_decodeList_T_65, UInt<1>(1), _decodeList_T_461) @[build/NutShell.fir.opt.mlir 3151:28]
    node _decodeList_T_463 = mux(_decodeList_T_63, UInt<1>(1), _decodeList_T_462) @[build/NutShell.fir.opt.mlir 3153:28]
    node _decodeList_T_464 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_463) @[build/NutShell.fir.opt.mlir 3155:28]
    node _decodeList_T_465 = mux(_decodeList_T_59, UInt<1>(1), _decodeList_T_464) @[build/NutShell.fir.opt.mlir 3157:28]
    node _decodeList_T_466 = mux(_decodeList_T_57, UInt<1>(0), _decodeList_T_465) @[build/NutShell.fir.opt.mlir 3159:28]
    node _decodeList_T_467 = mux(_decodeList_T_55, UInt<1>(0), _decodeList_T_466) @[build/NutShell.fir.opt.mlir 3161:28]
    node _decodeList_T_468 = mux(_decodeList_T_53, UInt<1>(0), _decodeList_T_467) @[build/NutShell.fir.opt.mlir 3163:28]
    node _decodeList_T_469 = mux(_decodeList_T_51, UInt<1>(0), _decodeList_T_468) @[build/NutShell.fir.opt.mlir 3165:28]
    node _decodeList_T_470 = mux(_decodeList_T_49, UInt<1>(0), _decodeList_T_469) @[build/NutShell.fir.opt.mlir 3167:28]
    node _decodeList_T_471 = mux(_decodeList_T_47, UInt<1>(0), _decodeList_T_470) @[build/NutShell.fir.opt.mlir 3169:28]
    node _decodeList_T_472 = mux(_decodeList_T_45, UInt<1>(0), _decodeList_T_471) @[build/NutShell.fir.opt.mlir 3171:28]
    node _decodeList_T_473 = mux(_decodeList_T_43, UInt<1>(0), _decodeList_T_472) @[build/NutShell.fir.opt.mlir 3173:28]
    node _decodeList_T_474 = mux(_decodeList_T_41, UInt<1>(0), _decodeList_T_473) @[build/NutShell.fir.opt.mlir 3175:28]
    node _decodeList_T_475 = mux(_decodeList_T_39, UInt<1>(0), _decodeList_T_474) @[build/NutShell.fir.opt.mlir 3177:28]
    node _decodeList_T_476 = mux(_decodeList_T_37, UInt<1>(0), _decodeList_T_475) @[build/NutShell.fir.opt.mlir 3179:28]
    node _decodeList_T_477 = mux(_decodeList_T_35, UInt<1>(0), _decodeList_T_476) @[build/NutShell.fir.opt.mlir 3181:28]
    node _decodeList_T_478 = mux(_decodeList_T_33, UInt<1>(0), _decodeList_T_477) @[build/NutShell.fir.opt.mlir 3183:28]
    node _decodeList_T_479 = mux(_decodeList_T_31, UInt<1>(0), _decodeList_T_478) @[build/NutShell.fir.opt.mlir 3185:28]
    node _decodeList_T_480 = mux(_decodeList_T_29, UInt<1>(0), _decodeList_T_479) @[build/NutShell.fir.opt.mlir 3187:28]
    node _decodeList_T_481 = mux(_decodeList_T_27, UInt<1>(0), _decodeList_T_480) @[build/NutShell.fir.opt.mlir 3189:28]
    node _decodeList_T_482 = mux(_decodeList_T_25, UInt<1>(0), _decodeList_T_481) @[build/NutShell.fir.opt.mlir 3191:28]
    node _decodeList_T_483 = mux(_decodeList_T_23, UInt<1>(0), _decodeList_T_482) @[build/NutShell.fir.opt.mlir 3193:28]
    node _decodeList_T_484 = mux(_decodeList_T_21, UInt<1>(0), _decodeList_T_483) @[build/NutShell.fir.opt.mlir 3195:28]
    node _decodeList_T_485 = mux(_decodeList_T_19, UInt<1>(0), _decodeList_T_484) @[build/NutShell.fir.opt.mlir 3197:28]
    node _decodeList_T_486 = mux(_decodeList_T_17, UInt<1>(0), _decodeList_T_485) @[build/NutShell.fir.opt.mlir 3199:28]
    node _decodeList_T_487 = mux(_decodeList_T_15, UInt<1>(0), _decodeList_T_486) @[build/NutShell.fir.opt.mlir 3201:28]
    node _decodeList_T_488 = mux(_decodeList_T_13, UInt<1>(0), _decodeList_T_487) @[build/NutShell.fir.opt.mlir 3203:28]
    node _decodeList_T_489 = mux(_decodeList_T_11, UInt<1>(0), _decodeList_T_488) @[build/NutShell.fir.opt.mlir 3205:28]
    node _decodeList_T_490 = mux(_decodeList_T_9, UInt<1>(0), _decodeList_T_489) @[build/NutShell.fir.opt.mlir 3207:28]
    node _decodeList_T_491 = mux(_decodeList_T_7, UInt<1>(0), _decodeList_T_490) @[build/NutShell.fir.opt.mlir 3209:28]
    node _decodeList_T_492 = mux(_decodeList_T_5, UInt<1>(0), _decodeList_T_491) @[build/NutShell.fir.opt.mlir 3211:28]
    node _decodeList_T_493 = mux(_decodeList_T_3, UInt<1>(0), _decodeList_T_492) @[build/NutShell.fir.opt.mlir 3213:28]
    node decodeList_1 = mux(_decodeList_T_1, UInt<1>(0), _decodeList_T_493) @[build/NutShell.fir.opt.mlir 3215:23]
    node _decodeList_T_494 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3217:28]
    node _decodeList_T_495 = mux(_decodeList_T_245, UInt<3>(7), _decodeList_T_494) @[build/NutShell.fir.opt.mlir 3219:28]
    node _decodeList_T_496 = mux(_decodeList_T_243, UInt<3>(6), _decodeList_T_495) @[build/NutShell.fir.opt.mlir 3221:28]
    node _decodeList_T_497 = mux(_decodeList_T_241, UInt<3>(5), _decodeList_T_496) @[build/NutShell.fir.opt.mlir 3223:28]
    node _decodeList_T_498 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_497) @[build/NutShell.fir.opt.mlir 3225:28]
    node _decodeList_T_499 = mux(_decodeList_T_237, UInt<2>(2), _decodeList_T_498) @[build/NutShell.fir.opt.mlir 3227:28]
    node _decodeList_T_500 = mux(_decodeList_T_235, UInt<1>(1), _decodeList_T_499) @[build/NutShell.fir.opt.mlir 3229:28]
    node _decodeList_T_501 = mux(_decodeList_T_233, UInt<6>(50), _decodeList_T_500) @[build/NutShell.fir.opt.mlir 3232:28]
    node _decodeList_T_502 = mux(_decodeList_T_231, UInt<6>(49), _decodeList_T_501) @[build/NutShell.fir.opt.mlir 3235:28]
    node _decodeList_T_503 = mux(_decodeList_T_229, UInt<6>(48), _decodeList_T_502) @[build/NutShell.fir.opt.mlir 3238:28]
    node _decodeList_T_504 = mux(_decodeList_T_227, UInt<6>(55), _decodeList_T_503) @[build/NutShell.fir.opt.mlir 3240:28]
    node _decodeList_T_505 = mux(_decodeList_T_225, UInt<6>(38), _decodeList_T_504) @[build/NutShell.fir.opt.mlir 3243:28]
    node _decodeList_T_506 = mux(_decodeList_T_223, UInt<6>(37), _decodeList_T_505) @[build/NutShell.fir.opt.mlir 3246:28]
    node _decodeList_T_507 = mux(_decodeList_T_221, UInt<6>(36), _decodeList_T_506) @[build/NutShell.fir.opt.mlir 3249:28]
    node _decodeList_T_508 = mux(_decodeList_T_219, UInt<7>(99), _decodeList_T_507) @[build/NutShell.fir.opt.mlir 3251:28]
    node _decodeList_T_509 = mux(_decodeList_T_217, UInt<6>(34), _decodeList_T_508) @[build/NutShell.fir.opt.mlir 3254:28]
    node _decodeList_T_510 = mux(_decodeList_T_215, UInt<6>(33), _decodeList_T_509) @[build/NutShell.fir.opt.mlir 3257:28]
    node _decodeList_T_511 = mux(_decodeList_T_213, UInt<6>(33), _decodeList_T_510) @[build/NutShell.fir.opt.mlir 3259:28]
    node _decodeList_T_512 = mux(_decodeList_T_211, UInt<6>(32), _decodeList_T_511) @[build/NutShell.fir.opt.mlir 3262:28]
    node _decodeList_T_513 = mux(_decodeList_T_209, UInt<6>(32), _decodeList_T_512) @[build/NutShell.fir.opt.mlir 3264:28]
    node _decodeList_T_514 = mux(_decodeList_T_207, UInt<2>(2), _decodeList_T_513) @[build/NutShell.fir.opt.mlir 3266:28]
    node _decodeList_T_515 = mux(_decodeList_T_205, UInt<1>(0), _decodeList_T_514) @[build/NutShell.fir.opt.mlir 3268:28]
    node _decodeList_T_516 = mux(_decodeList_T_203, UInt<7>(64), _decodeList_T_515) @[build/NutShell.fir.opt.mlir 3271:28]
    node _decodeList_T_517 = mux(_decodeList_T_201, UInt<1>(0), _decodeList_T_516) @[build/NutShell.fir.opt.mlir 3273:28]
    node _decodeList_T_518 = mux(_decodeList_T_199, UInt<1>(0), _decodeList_T_517) @[build/NutShell.fir.opt.mlir 3275:28]
    node _decodeList_T_519 = mux(_decodeList_T_197, UInt<1>(0), _decodeList_T_518) @[build/NutShell.fir.opt.mlir 3277:28]
    node _decodeList_T_520 = mux(_decodeList_T_195, UInt<1>(0), _decodeList_T_519) @[build/NutShell.fir.opt.mlir 3279:28]
    node _decodeList_T_521 = mux(_decodeList_T_193, UInt<4>(11), _decodeList_T_520) @[build/NutShell.fir.opt.mlir 3282:28]
    node _decodeList_T_522 = mux(_decodeList_T_191, UInt<4>(10), _decodeList_T_521) @[build/NutShell.fir.opt.mlir 3285:28]
    node _decodeList_T_523 = mux(_decodeList_T_189, UInt<7>(64), _decodeList_T_522) @[build/NutShell.fir.opt.mlir 3287:28]
    node _decodeList_T_524 = mux(_decodeList_T_187, UInt<7>(90), _decodeList_T_523) @[build/NutShell.fir.opt.mlir 3290:28]
    node _decodeList_T_525 = mux(_decodeList_T_185, UInt<1>(0), _decodeList_T_524) @[build/NutShell.fir.opt.mlir 3292:28]
    node _decodeList_T_526 = mux(_decodeList_T_183, UInt<7>(64), _decodeList_T_525) @[build/NutShell.fir.opt.mlir 3294:28]
    node _decodeList_T_527 = mux(_decodeList_T_181, UInt<7>(90), _decodeList_T_526) @[build/NutShell.fir.opt.mlir 3296:28]
    node _decodeList_T_528 = mux(_decodeList_T_179, UInt<2>(3), _decodeList_T_527) @[build/NutShell.fir.opt.mlir 3298:28]
    node _decodeList_T_529 = mux(_decodeList_T_177, UInt<2>(2), _decodeList_T_528) @[build/NutShell.fir.opt.mlir 3300:28]
    node _decodeList_T_530 = mux(_decodeList_T_175, UInt<1>(1), _decodeList_T_529) @[build/NutShell.fir.opt.mlir 3302:28]
    node _decodeList_T_531 = mux(_decodeList_T_173, UInt<5>(17), _decodeList_T_530) @[build/NutShell.fir.opt.mlir 3305:28]
    node _decodeList_T_532 = mux(_decodeList_T_171, UInt<5>(16), _decodeList_T_531) @[build/NutShell.fir.opt.mlir 3308:28]
    node _decodeList_T_533 = mux(_decodeList_T_169, UInt<7>(88), _decodeList_T_532) @[build/NutShell.fir.opt.mlir 3311:28]
    node _decodeList_T_534 = mux(_decodeList_T_167, UInt<7>(96), _decodeList_T_533) @[build/NutShell.fir.opt.mlir 3314:28]
    node _decodeList_T_535 = mux(_decodeList_T_165, UInt<6>(40), _decodeList_T_534) @[build/NutShell.fir.opt.mlir 3317:28]
    node _decodeList_T_536 = mux(_decodeList_T_163, UInt<3>(7), _decodeList_T_535) @[build/NutShell.fir.opt.mlir 3319:28]
    node _decodeList_T_537 = mux(_decodeList_T_161, UInt<3>(6), _decodeList_T_536) @[build/NutShell.fir.opt.mlir 3321:28]
    node _decodeList_T_538 = mux(_decodeList_T_159, UInt<3>(4), _decodeList_T_537) @[build/NutShell.fir.opt.mlir 3323:28]
    node _decodeList_T_539 = mux(_decodeList_T_157, UInt<4>(8), _decodeList_T_538) @[build/NutShell.fir.opt.mlir 3326:28]
    node _decodeList_T_540 = mux(_decodeList_T_155, UInt<3>(7), _decodeList_T_539) @[build/NutShell.fir.opt.mlir 3328:28]
    node _decodeList_T_541 = mux(_decodeList_T_153, UInt<4>(13), _decodeList_T_540) @[build/NutShell.fir.opt.mlir 3331:28]
    node _decodeList_T_542 = mux(_decodeList_T_151, UInt<3>(5), _decodeList_T_541) @[build/NutShell.fir.opt.mlir 3333:28]
    node _decodeList_T_543 = mux(_decodeList_T_149, UInt<7>(64), _decodeList_T_542) @[build/NutShell.fir.opt.mlir 3335:28]
    node _decodeList_T_544 = mux(_decodeList_T_147, UInt<7>(64), _decodeList_T_543) @[build/NutShell.fir.opt.mlir 3337:28]
    node _decodeList_T_545 = mux(_decodeList_T_145, UInt<7>(64), _decodeList_T_544) @[build/NutShell.fir.opt.mlir 3339:28]
    node _decodeList_T_546 = mux(_decodeList_T_143, UInt<7>(96), _decodeList_T_545) @[build/NutShell.fir.opt.mlir 3341:28]
    node _decodeList_T_547 = mux(_decodeList_T_141, UInt<7>(64), _decodeList_T_546) @[build/NutShell.fir.opt.mlir 3343:28]
    node _decodeList_T_548 = mux(_decodeList_T_139, UInt<7>(64), _decodeList_T_547) @[build/NutShell.fir.opt.mlir 3345:28]
    node _decodeList_T_549 = mux(_decodeList_T_137, UInt<4>(11), _decodeList_T_548) @[build/NutShell.fir.opt.mlir 3347:28]
    node _decodeList_T_550 = mux(_decodeList_T_135, UInt<4>(10), _decodeList_T_549) @[build/NutShell.fir.opt.mlir 3349:28]
    node _decodeList_T_551 = mux(_decodeList_T_133, UInt<2>(3), _decodeList_T_550) @[build/NutShell.fir.opt.mlir 3351:28]
    node _decodeList_T_552 = mux(_decodeList_T_131, UInt<2>(2), _decodeList_T_551) @[build/NutShell.fir.opt.mlir 3353:28]
    node _decodeList_T_553 = mux(_decodeList_T_129, UInt<7>(64), _decodeList_T_552) @[build/NutShell.fir.opt.mlir 3355:28]
    node _decodeList_T_554 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_553) @[build/NutShell.fir.opt.mlir 3357:28]
    node _decodeList_T_555 = mux(_decodeList_T_125, UInt<4>(15), _decodeList_T_554) @[build/NutShell.fir.opt.mlir 3359:28]
    node _decodeList_T_556 = mux(_decodeList_T_123, UInt<4>(14), _decodeList_T_555) @[build/NutShell.fir.opt.mlir 3362:28]
    node _decodeList_T_557 = mux(_decodeList_T_121, UInt<4>(13), _decodeList_T_556) @[build/NutShell.fir.opt.mlir 3364:28]
    node _decodeList_T_558 = mux(_decodeList_T_119, UInt<4>(12), _decodeList_T_557) @[build/NutShell.fir.opt.mlir 3367:28]
    node _decodeList_T_559 = mux(_decodeList_T_117, UInt<4>(8), _decodeList_T_558) @[build/NutShell.fir.opt.mlir 3369:28]
    node _decodeList_T_560 = mux(_decodeList_T_115, UInt<3>(7), _decodeList_T_559) @[build/NutShell.fir.opt.mlir 3371:28]
    node _decodeList_T_561 = mux(_decodeList_T_113, UInt<3>(6), _decodeList_T_560) @[build/NutShell.fir.opt.mlir 3373:28]
    node _decodeList_T_562 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_561) @[build/NutShell.fir.opt.mlir 3375:28]
    node _decodeList_T_563 = mux(_decodeList_T_109, UInt<3>(4), _decodeList_T_562) @[build/NutShell.fir.opt.mlir 3377:28]
    node _decodeList_T_564 = mux(_decodeList_T_107, UInt<2>(3), _decodeList_T_563) @[build/NutShell.fir.opt.mlir 3379:28]
    node _decodeList_T_565 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_564) @[build/NutShell.fir.opt.mlir 3381:28]
    node _decodeList_T_566 = mux(_decodeList_T_103, UInt<1>(1), _decodeList_T_565) @[build/NutShell.fir.opt.mlir 3383:28]
    node _decodeList_T_567 = mux(_decodeList_T_101, UInt<1>(0), _decodeList_T_566) @[build/NutShell.fir.opt.mlir 3385:28]
    node _decodeList_T_568 = mux(_decodeList_T_99, UInt<7>(64), _decodeList_T_567) @[build/NutShell.fir.opt.mlir 3387:28]
    node _decodeList_T_569 = mux(_decodeList_T_97, UInt<4>(11), _decodeList_T_568) @[build/NutShell.fir.opt.mlir 3389:28]
    node _decodeList_T_570 = mux(_decodeList_T_95, UInt<2>(3), _decodeList_T_569) @[build/NutShell.fir.opt.mlir 3391:28]
    node _decodeList_T_571 = mux(_decodeList_T_93, UInt<3>(6), _decodeList_T_570) @[build/NutShell.fir.opt.mlir 3393:28]
    node _decodeList_T_572 = mux(_decodeList_T_91, UInt<6>(40), _decodeList_T_571) @[build/NutShell.fir.opt.mlir 3395:28]
    node _decodeList_T_573 = mux(_decodeList_T_89, UInt<7>(96), _decodeList_T_572) @[build/NutShell.fir.opt.mlir 3397:28]
    node _decodeList_T_574 = mux(_decodeList_T_87, UInt<6>(45), _decodeList_T_573) @[build/NutShell.fir.opt.mlir 3400:28]
    node _decodeList_T_575 = mux(_decodeList_T_85, UInt<6>(37), _decodeList_T_574) @[build/NutShell.fir.opt.mlir 3402:28]
    node _decodeList_T_576 = mux(_decodeList_T_83, UInt<6>(33), _decodeList_T_575) @[build/NutShell.fir.opt.mlir 3404:28]
    node _decodeList_T_577 = mux(_decodeList_T_81, UInt<6>(45), _decodeList_T_576) @[build/NutShell.fir.opt.mlir 3406:28]
    node _decodeList_T_578 = mux(_decodeList_T_79, UInt<6>(37), _decodeList_T_577) @[build/NutShell.fir.opt.mlir 3408:28]
    node _decodeList_T_579 = mux(_decodeList_T_77, UInt<6>(33), _decodeList_T_578) @[build/NutShell.fir.opt.mlir 3410:28]
    node _decodeList_T_580 = mux(_decodeList_T_75, UInt<7>(96), _decodeList_T_579) @[build/NutShell.fir.opt.mlir 3412:28]
    node _decodeList_T_581 = mux(_decodeList_T_73, UInt<4>(10), _decodeList_T_580) @[build/NutShell.fir.opt.mlir 3414:28]
    node _decodeList_T_582 = mux(_decodeList_T_71, UInt<4>(9), _decodeList_T_581) @[build/NutShell.fir.opt.mlir 3417:28]
    node _decodeList_T_583 = mux(_decodeList_T_69, UInt<4>(8), _decodeList_T_582) @[build/NutShell.fir.opt.mlir 3419:28]
    node _decodeList_T_584 = mux(_decodeList_T_67, UInt<3>(5), _decodeList_T_583) @[build/NutShell.fir.opt.mlir 3421:28]
    node _decodeList_T_585 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_584) @[build/NutShell.fir.opt.mlir 3423:28]
    node _decodeList_T_586 = mux(_decodeList_T_63, UInt<2>(2), _decodeList_T_585) @[build/NutShell.fir.opt.mlir 3425:28]
    node _decodeList_T_587 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_586) @[build/NutShell.fir.opt.mlir 3427:28]
    node _decodeList_T_588 = mux(_decodeList_T_59, UInt<1>(0), _decodeList_T_587) @[build/NutShell.fir.opt.mlir 3429:28]
    node _decodeList_T_589 = mux(_decodeList_T_57, UInt<5>(23), _decodeList_T_588) @[build/NutShell.fir.opt.mlir 3431:28]
    node _decodeList_T_590 = mux(_decodeList_T_55, UInt<5>(22), _decodeList_T_589) @[build/NutShell.fir.opt.mlir 3434:28]
    node _decodeList_T_591 = mux(_decodeList_T_53, UInt<5>(21), _decodeList_T_590) @[build/NutShell.fir.opt.mlir 3437:28]
    node _decodeList_T_592 = mux(_decodeList_T_51, UInt<5>(20), _decodeList_T_591) @[build/NutShell.fir.opt.mlir 3440:28]
    node _decodeList_T_593 = mux(_decodeList_T_49, UInt<5>(17), _decodeList_T_592) @[build/NutShell.fir.opt.mlir 3442:28]
    node _decodeList_T_594 = mux(_decodeList_T_47, UInt<5>(16), _decodeList_T_593) @[build/NutShell.fir.opt.mlir 3444:28]
    node _decodeList_T_595 = mux(_decodeList_T_45, UInt<7>(90), _decodeList_T_594) @[build/NutShell.fir.opt.mlir 3446:28]
    node _decodeList_T_596 = mux(_decodeList_T_43, UInt<7>(88), _decodeList_T_595) @[build/NutShell.fir.opt.mlir 3448:28]
    node _decodeList_T_597 = mux(_decodeList_T_41, UInt<7>(64), _decodeList_T_596) @[build/NutShell.fir.opt.mlir 3450:28]
    node _decodeList_T_598 = mux(_decodeList_T_39, UInt<7>(64), _decodeList_T_597) @[build/NutShell.fir.opt.mlir 3452:28]
    node _decodeList_T_599 = mux(_decodeList_T_37, UInt<4>(13), _decodeList_T_598) @[build/NutShell.fir.opt.mlir 3454:28]
    node _decodeList_T_600 = mux(_decodeList_T_35, UInt<4>(8), _decodeList_T_599) @[build/NutShell.fir.opt.mlir 3456:28]
    node _decodeList_T_601 = mux(_decodeList_T_33, UInt<3>(7), _decodeList_T_600) @[build/NutShell.fir.opt.mlir 3458:28]
    node _decodeList_T_602 = mux(_decodeList_T_31, UInt<3>(6), _decodeList_T_601) @[build/NutShell.fir.opt.mlir 3460:28]
    node _decodeList_T_603 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_602) @[build/NutShell.fir.opt.mlir 3462:28]
    node _decodeList_T_604 = mux(_decodeList_T_27, UInt<3>(4), _decodeList_T_603) @[build/NutShell.fir.opt.mlir 3464:28]
    node _decodeList_T_605 = mux(_decodeList_T_25, UInt<2>(3), _decodeList_T_604) @[build/NutShell.fir.opt.mlir 3466:28]
    node _decodeList_T_606 = mux(_decodeList_T_23, UInt<2>(2), _decodeList_T_605) @[build/NutShell.fir.opt.mlir 3468:28]
    node _decodeList_T_607 = mux(_decodeList_T_21, UInt<1>(1), _decodeList_T_606) @[build/NutShell.fir.opt.mlir 3470:28]
    node _decodeList_T_608 = mux(_decodeList_T_19, UInt<7>(64), _decodeList_T_607) @[build/NutShell.fir.opt.mlir 3472:28]
    node _decodeList_T_609 = mux(_decodeList_T_17, UInt<4>(13), _decodeList_T_608) @[build/NutShell.fir.opt.mlir 3474:28]
    node _decodeList_T_610 = mux(_decodeList_T_15, UInt<3>(7), _decodeList_T_609) @[build/NutShell.fir.opt.mlir 3476:28]
    node _decodeList_T_611 = mux(_decodeList_T_13, UInt<3>(6), _decodeList_T_610) @[build/NutShell.fir.opt.mlir 3478:28]
    node _decodeList_T_612 = mux(_decodeList_T_11, UInt<3>(5), _decodeList_T_611) @[build/NutShell.fir.opt.mlir 3480:28]
    node _decodeList_T_613 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_612) @[build/NutShell.fir.opt.mlir 3482:28]
    node _decodeList_T_614 = mux(_decodeList_T_7, UInt<2>(3), _decodeList_T_613) @[build/NutShell.fir.opt.mlir 3484:28]
    node _decodeList_T_615 = mux(_decodeList_T_5, UInt<2>(2), _decodeList_T_614) @[build/NutShell.fir.opt.mlir 3486:28]
    node _decodeList_T_616 = mux(_decodeList_T_3, UInt<1>(1), _decodeList_T_615) @[build/NutShell.fir.opt.mlir 3488:28]
    node decodeList_2 = mux(_decodeList_T_1, UInt<7>(64), _decodeList_T_616) @[build/NutShell.fir.opt.mlir 3490:23]
    node _T = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3492:13]
    node _T_1 = or(_T, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3494:15]
    node instrType = mux(_T_1, UInt<1>(0), decodeList_0) @[build/NutShell.fir.opt.mlir 3496:20]
    node _T_2 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3498:15]
    node _T_3 = or(_T_2, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3500:15]
    node fuType = mux(_T_3, UInt<2>(3), decodeList_1) @[build/NutShell.fir.opt.mlir 3502:17]
    node _T_4 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3504:15]
    node _T_5 = or(_T_4, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3506:15]
    node fuOpType = mux(_T_5, UInt<1>(0), decodeList_2) @[build/NutShell.fir.opt.mlir 3508:19]
    node _isRVC_T = bits(io.in.bits.instr, 1, 0) @[build/NutShell.fir.opt.mlir 3510:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 3512:16]
    node _T_6 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3514:15]
    node _T_7 = eq(UInt<1>(0), _T_6) @[build/NutShell.fir.opt.mlir 3516:15]
    node _T_8 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3518:15]
    node _T_9 = eq(UInt<15>(16384), _T_8) @[build/NutShell.fir.opt.mlir 3520:15]
    node _T_10 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3522:16]
    node _T_11 = eq(UInt<15>(24576), _T_10) @[build/NutShell.fir.opt.mlir 3524:16]
    node _T_12 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3526:16]
    node _T_13 = eq(UInt<16>(49152), _T_12) @[build/NutShell.fir.opt.mlir 3528:16]
    node _T_14 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3530:16]
    node _T_15 = eq(UInt<16>(57344), _T_14) @[build/NutShell.fir.opt.mlir 3532:16]
    node _T_16 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 3534:16]
    node _T_17 = eq(UInt<1>(1), _T_16) @[build/NutShell.fir.opt.mlir 3536:16]
    node _T_18 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3538:16]
    node _T_19 = eq(UInt<1>(1), _T_18) @[build/NutShell.fir.opt.mlir 3540:16]
    node _T_20 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3542:16]
    node _T_21 = eq(UInt<14>(8193), _T_20) @[build/NutShell.fir.opt.mlir 3544:16]
    node _T_22 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3546:16]
    node _T_23 = eq(UInt<15>(16385), _T_22) @[build/NutShell.fir.opt.mlir 3548:16]
    node _T_24 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 3550:16]
    node _T_25 = eq(UInt<15>(24833), _T_24) @[build/NutShell.fir.opt.mlir 3552:16]
    node _T_26 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3554:16]
    node _T_27 = eq(UInt<15>(24577), _T_26) @[build/NutShell.fir.opt.mlir 3556:16]
    node _T_28 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3558:16]
    node _T_29 = eq(UInt<16>(32769), _T_28) @[build/NutShell.fir.opt.mlir 3560:16]
    node _T_30 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3562:16]
    node _T_31 = eq(UInt<16>(33793), _T_30) @[build/NutShell.fir.opt.mlir 3564:16]
    node _T_32 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3566:16]
    node _T_33 = eq(UInt<16>(34817), _T_32) @[build/NutShell.fir.opt.mlir 3568:16]
    node _T_34 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3570:16]
    node _T_35 = eq(UInt<16>(35841), _T_34) @[build/NutShell.fir.opt.mlir 3572:16]
    node _T_36 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3574:16]
    node _T_37 = eq(UInt<16>(35873), _T_36) @[build/NutShell.fir.opt.mlir 3576:16]
    node _T_38 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3578:16]
    node _T_39 = eq(UInt<16>(35905), _T_38) @[build/NutShell.fir.opt.mlir 3580:16]
    node _T_40 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3582:16]
    node _T_41 = eq(UInt<16>(35937), _T_40) @[build/NutShell.fir.opt.mlir 3584:16]
    node _T_42 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3586:16]
    node _T_43 = eq(UInt<16>(39937), _T_42) @[build/NutShell.fir.opt.mlir 3588:16]
    node _T_44 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3590:16]
    node _T_45 = eq(UInt<16>(39969), _T_44) @[build/NutShell.fir.opt.mlir 3592:16]
    node _T_46 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3594:16]
    node _T_47 = eq(UInt<16>(40961), _T_46) @[build/NutShell.fir.opt.mlir 3596:16]
    node _T_48 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3598:16]
    node _T_49 = eq(UInt<16>(49153), _T_48) @[build/NutShell.fir.opt.mlir 3600:16]
    node _T_50 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3602:16]
    node _T_51 = eq(UInt<16>(57345), _T_50) @[build/NutShell.fir.opt.mlir 3604:16]
    node _T_52 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3606:16]
    node _T_53 = eq(UInt<2>(2), _T_52) @[build/NutShell.fir.opt.mlir 3608:16]
    node _T_54 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3610:16]
    node _T_55 = eq(UInt<15>(16386), _T_54) @[build/NutShell.fir.opt.mlir 3612:16]
    node _T_56 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3614:16]
    node _T_57 = eq(UInt<15>(24578), _T_56) @[build/NutShell.fir.opt.mlir 3616:16]
    node _T_58 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 3618:16]
    node _T_59 = eq(UInt<16>(32770), _T_58) @[build/NutShell.fir.opt.mlir 3620:16]
    node _T_60 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 3622:16]
    node _T_61 = eq(UInt<16>(32770), _T_60) @[build/NutShell.fir.opt.mlir 3624:16]
    node _T_62 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 3626:16]
    node _T_63 = eq(UInt<16>(36866), _T_62) @[build/NutShell.fir.opt.mlir 3628:16]
    node _T_64 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 3630:16]
    node _T_65 = eq(UInt<16>(36866), _T_64) @[build/NutShell.fir.opt.mlir 3632:16]
    node _T_66 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 3634:16]
    node _T_67 = eq(UInt<16>(36866), _T_66) @[build/NutShell.fir.opt.mlir 3636:16]
    node _T_68 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3638:16]
    node _T_69 = eq(UInt<16>(49154), _T_68) @[build/NutShell.fir.opt.mlir 3640:16]
    node _T_70 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3642:16]
    node _T_71 = eq(UInt<16>(57346), _T_70) @[build/NutShell.fir.opt.mlir 3644:16]
    node _T_72 = mux(_T_71, UInt<2>(3), UInt<5>(16)) @[build/NutShell.fir.opt.mlir 3646:16]
    node _T_73 = mux(_T_69, UInt<2>(2), _T_72) @[build/NutShell.fir.opt.mlir 3648:16]
    node _T_74 = mux(_T_67, UInt<5>(16), _T_73) @[build/NutShell.fir.opt.mlir 3650:16]
    node _T_75 = mux(_T_65, UInt<5>(16), _T_74) @[build/NutShell.fir.opt.mlir 3652:16]
    node _T_76 = mux(_T_63, UInt<4>(15), _T_75) @[build/NutShell.fir.opt.mlir 3654:16]
    node _T_77 = mux(_T_61, UInt<5>(16), _T_76) @[build/NutShell.fir.opt.mlir 3656:16]
    node _T_78 = mux(_T_59, UInt<5>(16), _T_77) @[build/NutShell.fir.opt.mlir 3658:16]
    node _T_79 = mux(_T_57, UInt<1>(1), _T_78) @[build/NutShell.fir.opt.mlir 3660:16]
    node _T_80 = mux(_T_55, UInt<1>(0), _T_79) @[build/NutShell.fir.opt.mlir 3662:16]
    node _T_81 = mux(_T_53, UInt<4>(10), _T_80) @[build/NutShell.fir.opt.mlir 3664:16]
    node _T_82 = mux(_T_51, UInt<4>(9), _T_81) @[build/NutShell.fir.opt.mlir 3666:16]
    node _T_83 = mux(_T_49, UInt<4>(9), _T_82) @[build/NutShell.fir.opt.mlir 3668:16]
    node _T_84 = mux(_T_47, UInt<4>(8), _T_83) @[build/NutShell.fir.opt.mlir 3670:16]
    node _T_85 = mux(_T_45, UInt<5>(16), _T_84) @[build/NutShell.fir.opt.mlir 3672:16]
    node _T_86 = mux(_T_43, UInt<5>(16), _T_85) @[build/NutShell.fir.opt.mlir 3674:16]
    node _T_87 = mux(_T_41, UInt<5>(16), _T_86) @[build/NutShell.fir.opt.mlir 3676:16]
    node _T_88 = mux(_T_39, UInt<5>(16), _T_87) @[build/NutShell.fir.opt.mlir 3678:16]
    node _T_89 = mux(_T_37, UInt<5>(16), _T_88) @[build/NutShell.fir.opt.mlir 3680:16]
    node _T_90 = mux(_T_35, UInt<5>(16), _T_89) @[build/NutShell.fir.opt.mlir 3682:16]
    node _T_91 = mux(_T_33, UInt<4>(10), _T_90) @[build/NutShell.fir.opt.mlir 3684:16]
    node _T_92 = mux(_T_31, UInt<4>(10), _T_91) @[build/NutShell.fir.opt.mlir 3686:16]
    node _T_93 = mux(_T_29, UInt<4>(10), _T_92) @[build/NutShell.fir.opt.mlir 3688:16]
    node _T_94 = mux(_T_27, UInt<4>(11), _T_93) @[build/NutShell.fir.opt.mlir 3690:16]
    node _T_95 = mux(_T_25, UInt<4>(13), _T_94) @[build/NutShell.fir.opt.mlir 3692:16]
    node _T_96 = mux(_T_23, UInt<4>(10), _T_95) @[build/NutShell.fir.opt.mlir 3694:16]
    node _T_97 = mux(_T_21, UInt<4>(12), _T_96) @[build/NutShell.fir.opt.mlir 3696:16]
    node _T_98 = mux(_T_19, UInt<4>(12), _T_97) @[build/NutShell.fir.opt.mlir 3698:16]
    node _T_99 = mux(_T_17, UInt<5>(16), _T_98) @[build/NutShell.fir.opt.mlir 3700:16]
    node _T_100 = mux(_T_15, UInt<3>(5), _T_99) @[build/NutShell.fir.opt.mlir 3702:17]
    node _T_101 = mux(_T_13, UInt<3>(4), _T_100) @[build/NutShell.fir.opt.mlir 3704:17]
    node _T_102 = mux(_T_11, UInt<3>(7), _T_101) @[build/NutShell.fir.opt.mlir 3706:17]
    node _T_103 = mux(_T_9, UInt<3>(6), _T_102) @[build/NutShell.fir.opt.mlir 3708:17]
    node rvcImmType = mux(_T_7, UInt<4>(14), _T_103) @[build/NutShell.fir.opt.mlir 3710:21]
    node _T_104 = mux(_T_71, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3712:17]
    node _T_105 = mux(_T_69, UInt<4>(9), _T_104) @[build/NutShell.fir.opt.mlir 3714:17]
    node _T_106 = mux(_T_67, UInt<2>(2), _T_105) @[build/NutShell.fir.opt.mlir 3716:17]
    node _T_107 = mux(_T_65, UInt<3>(4), _T_106) @[build/NutShell.fir.opt.mlir 3718:17]
    node _T_108 = mux(_T_63, UInt<1>(0), _T_107) @[build/NutShell.fir.opt.mlir 3720:17]
    node _T_109 = mux(_T_61, UInt<3>(5), _T_108) @[build/NutShell.fir.opt.mlir 3722:17]
    node _T_110 = mux(_T_59, UInt<3>(4), _T_109) @[build/NutShell.fir.opt.mlir 3724:17]
    node _T_111 = mux(_T_57, UInt<4>(9), _T_110) @[build/NutShell.fir.opt.mlir 3726:17]
    node _T_112 = mux(_T_55, UInt<4>(9), _T_111) @[build/NutShell.fir.opt.mlir 3728:17]
    node _T_113 = mux(_T_53, UInt<2>(2), _T_112) @[build/NutShell.fir.opt.mlir 3730:17]
    node _T_114 = mux(_T_51, UInt<3>(6), _T_113) @[build/NutShell.fir.opt.mlir 3732:17]
    node _T_115 = mux(_T_49, UInt<3>(6), _T_114) @[build/NutShell.fir.opt.mlir 3734:17]
    node _T_116 = mux(_T_47, UInt<1>(0), _T_115) @[build/NutShell.fir.opt.mlir 3736:17]
    node _T_117 = mux(_T_45, UInt<3>(6), _T_116) @[build/NutShell.fir.opt.mlir 3738:17]
    node _T_118 = mux(_T_43, UInt<3>(6), _T_117) @[build/NutShell.fir.opt.mlir 3740:17]
    node _T_119 = mux(_T_41, UInt<3>(6), _T_118) @[build/NutShell.fir.opt.mlir 3742:17]
    node _T_120 = mux(_T_39, UInt<3>(6), _T_119) @[build/NutShell.fir.opt.mlir 3744:17]
    node _T_121 = mux(_T_37, UInt<3>(6), _T_120) @[build/NutShell.fir.opt.mlir 3746:17]
    node _T_122 = mux(_T_35, UInt<3>(6), _T_121) @[build/NutShell.fir.opt.mlir 3748:17]
    node _T_123 = mux(_T_33, UInt<3>(6), _T_122) @[build/NutShell.fir.opt.mlir 3750:17]
    node _T_124 = mux(_T_31, UInt<3>(6), _T_123) @[build/NutShell.fir.opt.mlir 3752:17]
    node _T_125 = mux(_T_29, UInt<3>(6), _T_124) @[build/NutShell.fir.opt.mlir 3754:17]
    node _T_126 = mux(_T_27, UInt<1>(0), _T_125) @[build/NutShell.fir.opt.mlir 3756:17]
    node _T_127 = mux(_T_25, UInt<4>(9), _T_126) @[build/NutShell.fir.opt.mlir 3758:17]
    node _T_128 = mux(_T_23, UInt<1>(0), _T_127) @[build/NutShell.fir.opt.mlir 3760:17]
    node _T_129 = mux(_T_21, UInt<2>(2), _T_128) @[build/NutShell.fir.opt.mlir 3762:17]
    node _T_130 = mux(_T_19, UInt<2>(2), _T_129) @[build/NutShell.fir.opt.mlir 3764:17]
    node _T_131 = mux(_T_17, UInt<1>(0), _T_130) @[build/NutShell.fir.opt.mlir 3766:17]
    node _T_132 = mux(_T_15, UInt<3>(6), _T_131) @[build/NutShell.fir.opt.mlir 3768:17]
    node _T_133 = mux(_T_13, UInt<3>(6), _T_132) @[build/NutShell.fir.opt.mlir 3770:17]
    node _T_134 = mux(_T_11, UInt<3>(6), _T_133) @[build/NutShell.fir.opt.mlir 3772:17]
    node _T_135 = mux(_T_9, UInt<3>(6), _T_134) @[build/NutShell.fir.opt.mlir 3774:17]
    node rvcSrc1Type = mux(_T_7, UInt<4>(9), _T_135) @[build/NutShell.fir.opt.mlir 3776:22]
    node _T_136 = mux(_T_71, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3778:17]
    node _T_137 = mux(_T_69, UInt<3>(5), _T_136) @[build/NutShell.fir.opt.mlir 3780:17]
    node _T_138 = mux(_T_67, UInt<3>(5), _T_137) @[build/NutShell.fir.opt.mlir 3782:17]
    node _T_139 = mux(_T_65, UInt<1>(0), _T_138) @[build/NutShell.fir.opt.mlir 3784:17]
    node _T_140 = mux(_T_63, UInt<1>(0), _T_139) @[build/NutShell.fir.opt.mlir 3786:17]
    node _T_141 = mux(_T_61, UInt<1>(0), _T_140) @[build/NutShell.fir.opt.mlir 3788:17]
    node _T_142 = mux(_T_59, UInt<1>(0), _T_141) @[build/NutShell.fir.opt.mlir 3790:17]
    node _T_143 = mux(_T_57, UInt<1>(0), _T_142) @[build/NutShell.fir.opt.mlir 3792:17]
    node _T_144 = mux(_T_55, UInt<1>(0), _T_143) @[build/NutShell.fir.opt.mlir 3794:17]
    node _T_145 = mux(_T_53, UInt<1>(0), _T_144) @[build/NutShell.fir.opt.mlir 3796:17]
    node _T_146 = mux(_T_51, UInt<1>(0), _T_145) @[build/NutShell.fir.opt.mlir 3798:17]
    node _T_147 = mux(_T_49, UInt<1>(0), _T_146) @[build/NutShell.fir.opt.mlir 3800:17]
    node _T_148 = mux(_T_47, UInt<1>(0), _T_147) @[build/NutShell.fir.opt.mlir 3802:17]
    node _T_149 = mux(_T_45, UInt<3>(7), _T_148) @[build/NutShell.fir.opt.mlir 3804:17]
    node _T_150 = mux(_T_43, UInt<3>(7), _T_149) @[build/NutShell.fir.opt.mlir 3806:17]
    node _T_151 = mux(_T_41, UInt<3>(7), _T_150) @[build/NutShell.fir.opt.mlir 3808:17]
    node _T_152 = mux(_T_39, UInt<3>(7), _T_151) @[build/NutShell.fir.opt.mlir 3810:17]
    node _T_153 = mux(_T_37, UInt<3>(7), _T_152) @[build/NutShell.fir.opt.mlir 3812:17]
    node _T_154 = mux(_T_35, UInt<3>(7), _T_153) @[build/NutShell.fir.opt.mlir 3814:17]
    node _T_155 = mux(_T_33, UInt<1>(0), _T_154) @[build/NutShell.fir.opt.mlir 3816:17]
    node _T_156 = mux(_T_31, UInt<1>(0), _T_155) @[build/NutShell.fir.opt.mlir 3818:17]
    node _T_157 = mux(_T_29, UInt<1>(0), _T_156) @[build/NutShell.fir.opt.mlir 3820:17]
    node _T_158 = mux(_T_27, UInt<1>(0), _T_157) @[build/NutShell.fir.opt.mlir 3822:17]
    node _T_159 = mux(_T_25, UInt<1>(0), _T_158) @[build/NutShell.fir.opt.mlir 3824:17]
    node _T_160 = mux(_T_23, UInt<1>(0), _T_159) @[build/NutShell.fir.opt.mlir 3826:17]
    node _T_161 = mux(_T_21, UInt<1>(0), _T_160) @[build/NutShell.fir.opt.mlir 3828:17]
    node _T_162 = mux(_T_19, UInt<1>(0), _T_161) @[build/NutShell.fir.opt.mlir 3830:17]
    node _T_163 = mux(_T_17, UInt<1>(0), _T_162) @[build/NutShell.fir.opt.mlir 3832:17]
    node _T_164 = mux(_T_15, UInt<3>(7), _T_163) @[build/NutShell.fir.opt.mlir 3834:17]
    node _T_165 = mux(_T_13, UInt<3>(7), _T_164) @[build/NutShell.fir.opt.mlir 3836:17]
    node _T_166 = mux(_T_11, UInt<1>(0), _T_165) @[build/NutShell.fir.opt.mlir 3838:17]
    node _T_167 = mux(_T_9, UInt<1>(0), _T_166) @[build/NutShell.fir.opt.mlir 3840:17]
    node rvcSrc2Type = mux(_T_7, UInt<1>(0), _T_167) @[build/NutShell.fir.opt.mlir 3842:22]
    node _T_168 = mux(_T_71, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3844:17]
    node _T_169 = mux(_T_69, UInt<1>(0), _T_168) @[build/NutShell.fir.opt.mlir 3846:17]
    node _T_170 = mux(_T_67, UInt<2>(2), _T_169) @[build/NutShell.fir.opt.mlir 3848:17]
    node _T_171 = mux(_T_65, UInt<4>(8), _T_170) @[build/NutShell.fir.opt.mlir 3850:17]
    node _T_172 = mux(_T_63, UInt<1>(0), _T_171) @[build/NutShell.fir.opt.mlir 3852:17]
    node _T_173 = mux(_T_61, UInt<2>(2), _T_172) @[build/NutShell.fir.opt.mlir 3854:17]
    node _T_174 = mux(_T_59, UInt<1>(0), _T_173) @[build/NutShell.fir.opt.mlir 3856:17]
    node _T_175 = mux(_T_57, UInt<2>(2), _T_174) @[build/NutShell.fir.opt.mlir 3858:17]
    node _T_176 = mux(_T_55, UInt<2>(2), _T_175) @[build/NutShell.fir.opt.mlir 3860:17]
    node _T_177 = mux(_T_53, UInt<2>(2), _T_176) @[build/NutShell.fir.opt.mlir 3862:17]
    node _T_178 = mux(_T_51, UInt<1>(0), _T_177) @[build/NutShell.fir.opt.mlir 3864:17]
    node _T_179 = mux(_T_49, UInt<1>(0), _T_178) @[build/NutShell.fir.opt.mlir 3866:17]
    node _T_180 = mux(_T_47, UInt<1>(0), _T_179) @[build/NutShell.fir.opt.mlir 3868:17]
    node _T_181 = mux(_T_45, UInt<3>(6), _T_180) @[build/NutShell.fir.opt.mlir 3870:17]
    node _T_182 = mux(_T_43, UInt<3>(6), _T_181) @[build/NutShell.fir.opt.mlir 3872:17]
    node _T_183 = mux(_T_41, UInt<3>(6), _T_182) @[build/NutShell.fir.opt.mlir 3874:17]
    node _T_184 = mux(_T_39, UInt<3>(6), _T_183) @[build/NutShell.fir.opt.mlir 3876:17]
    node _T_185 = mux(_T_37, UInt<3>(6), _T_184) @[build/NutShell.fir.opt.mlir 3878:17]
    node _T_186 = mux(_T_35, UInt<3>(6), _T_185) @[build/NutShell.fir.opt.mlir 3880:17]
    node _T_187 = mux(_T_33, UInt<3>(6), _T_186) @[build/NutShell.fir.opt.mlir 3882:17]
    node _T_188 = mux(_T_31, UInt<3>(6), _T_187) @[build/NutShell.fir.opt.mlir 3884:17]
    node _T_189 = mux(_T_29, UInt<3>(6), _T_188) @[build/NutShell.fir.opt.mlir 3886:17]
    node _T_190 = mux(_T_27, UInt<2>(2), _T_189) @[build/NutShell.fir.opt.mlir 3888:17]
    node _T_191 = mux(_T_25, UInt<4>(9), _T_190) @[build/NutShell.fir.opt.mlir 3890:17]
    node _T_192 = mux(_T_23, UInt<2>(2), _T_191) @[build/NutShell.fir.opt.mlir 3892:17]
    node _T_193 = mux(_T_21, UInt<2>(2), _T_192) @[build/NutShell.fir.opt.mlir 3894:17]
    node _T_194 = mux(_T_19, UInt<2>(2), _T_193) @[build/NutShell.fir.opt.mlir 3896:17]
    node _T_195 = mux(_T_17, UInt<1>(0), _T_194) @[build/NutShell.fir.opt.mlir 3898:17]
    node _T_196 = mux(_T_15, UInt<1>(0), _T_195) @[build/NutShell.fir.opt.mlir 3900:17]
    node _T_197 = mux(_T_13, UInt<1>(0), _T_196) @[build/NutShell.fir.opt.mlir 3902:17]
    node _T_198 = mux(_T_11, UInt<3>(7), _T_197) @[build/NutShell.fir.opt.mlir 3904:17]
    node _T_199 = mux(_T_9, UInt<3>(7), _T_198) @[build/NutShell.fir.opt.mlir 3906:17]
    node rvcDestType = mux(_T_7, UInt<3>(7), _T_199) @[build/NutShell.fir.opt.mlir 3908:22]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 3910:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 3912:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 3914:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 3916:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 3918:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 3920:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 3922:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 3924:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 3926:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 3928:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 3930:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 3932:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 3934:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 3936:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 3938:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 3940:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 3942:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 3944:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 3946:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 3948:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 3950:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 3952:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 3954:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 3956:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 3958:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 3960:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 3962:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 3964:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 3966:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 3968:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 3970:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 3972:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 3974:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 3976:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 3978:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 3980:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 3982:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 3984:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 3986:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 3988:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 3990:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 3992:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 3994:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 3996:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 3998:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 4000:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 4002:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 4004:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 4006:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 4008:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 4010:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 4012:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 4014:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 4016:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 4018:7]
    connect io.out.bits.ctrl.fuType, fuType @[build/NutShell.fir.opt.mlir 4019:7]
    connect io.out.bits.ctrl.fuOpType, fuOpType @[build/NutShell.fir.opt.mlir 4020:7]
    node _src1Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4022:22]
    node _src1Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 4024:24]
    node _src1Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4026:24]
    node _src1Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4028:24]
    node _src1Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4030:24]
    node _src1Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4032:24]
    node _src1Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4034:24]
    node _src1Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 4036:24]
    node _src1Type_T_8 = mux(_src1Type_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4038:24]
    node _src1Type_T_9 = mux(_src1Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4040:24]
    node _src1Type_T_10 = mux(_src1Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4042:25]
    node _src1Type_T_11 = mux(_src1Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4044:25]
    node _src1Type_T_12 = mux(_src1Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4046:25]
    node _src1Type_T_13 = mux(_src1Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4048:25]
    node _src1Type_T_14 = mux(_src1Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4050:25]
    node _src1Type_T_15 = mux(_src1Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4052:25]
    node _src1Type_T_16 = or(_src1Type_T_8, _src1Type_T_9) @[build/NutShell.fir.opt.mlir 4054:25]
    node _src1Type_T_17 = or(_src1Type_T_16, _src1Type_T_10) @[build/NutShell.fir.opt.mlir 4056:25]
    node _src1Type_T_18 = or(_src1Type_T_17, _src1Type_T_11) @[build/NutShell.fir.opt.mlir 4058:25]
    node _src1Type_T_19 = or(_src1Type_T_18, _src1Type_T_12) @[build/NutShell.fir.opt.mlir 4060:25]
    node _src1Type_T_20 = or(_src1Type_T_19, _src1Type_T_13) @[build/NutShell.fir.opt.mlir 4062:25]
    node _src1Type_T_21 = or(_src1Type_T_20, _src1Type_T_14) @[build/NutShell.fir.opt.mlir 4064:25]
    node _src1Type_T_22 = or(_src1Type_T_21, _src1Type_T_15) @[build/NutShell.fir.opt.mlir 4066:25]
    wire src1Type : UInt<1> @[build/NutShell.fir.opt.mlir 4067:19]
    connect src1Type, _src1Type_T_22 @[build/NutShell.fir.opt.mlir 4068:7]
    node _src2Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4070:22]
    node _src2Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 4072:24]
    node _src2Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4074:24]
    node _src2Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4076:24]
    node _src2Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4078:24]
    node _src2Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4080:24]
    node _src2Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4082:24]
    node _src2Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 4084:24]
    node _src2Type_T_8 = mux(_src2Type_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4086:24]
    node _src2Type_T_9 = mux(_src2Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4088:24]
    node _src2Type_T_10 = mux(_src2Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4090:25]
    node _src2Type_T_11 = mux(_src2Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4092:25]
    node _src2Type_T_12 = mux(_src2Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4094:25]
    node _src2Type_T_13 = mux(_src2Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4096:25]
    node _src2Type_T_14 = mux(_src2Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4098:25]
    node _src2Type_T_15 = mux(_src2Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4100:25]
    node _src2Type_T_16 = or(_src2Type_T_8, _src2Type_T_9) @[build/NutShell.fir.opt.mlir 4102:25]
    node _src2Type_T_17 = or(_src2Type_T_16, _src2Type_T_10) @[build/NutShell.fir.opt.mlir 4104:25]
    node _src2Type_T_18 = or(_src2Type_T_17, _src2Type_T_11) @[build/NutShell.fir.opt.mlir 4106:25]
    node _src2Type_T_19 = or(_src2Type_T_18, _src2Type_T_12) @[build/NutShell.fir.opt.mlir 4108:25]
    node _src2Type_T_20 = or(_src2Type_T_19, _src2Type_T_13) @[build/NutShell.fir.opt.mlir 4110:25]
    node _src2Type_T_21 = or(_src2Type_T_20, _src2Type_T_14) @[build/NutShell.fir.opt.mlir 4112:25]
    node _src2Type_T_22 = or(_src2Type_T_21, _src2Type_T_15) @[build/NutShell.fir.opt.mlir 4114:25]
    wire src2Type : UInt<1> @[build/NutShell.fir.opt.mlir 4115:19]
    connect src2Type, _src2Type_T_22 @[build/NutShell.fir.opt.mlir 4116:7]
    node rs = bits(io.in.bits.instr, 19, 15) @[build/NutShell.fir.opt.mlir 4118:13]
    node rt = bits(io.in.bits.instr, 24, 20) @[build/NutShell.fir.opt.mlir 4120:13]
    node rd = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4122:13]
    node rs1 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4124:14]
    node rs2 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4126:14]
    node _rs1p_T = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 4128:18]
    node _rs1p_T_1 = eq(UInt<1>(0), _rs1p_T) @[build/NutShell.fir.opt.mlir 4130:20]
    node _rs1p_T_2 = eq(UInt<1>(1), _rs1p_T) @[build/NutShell.fir.opt.mlir 4132:20]
    node _rs1p_T_3 = eq(UInt<2>(2), _rs1p_T) @[build/NutShell.fir.opt.mlir 4134:20]
    node _rs1p_T_4 = eq(UInt<2>(3), _rs1p_T) @[build/NutShell.fir.opt.mlir 4136:20]
    node _rs1p_T_5 = eq(UInt<3>(4), _rs1p_T) @[build/NutShell.fir.opt.mlir 4138:20]
    node _rs1p_T_6 = eq(UInt<3>(5), _rs1p_T) @[build/NutShell.fir.opt.mlir 4140:20]
    node _rs1p_T_7 = eq(UInt<3>(6), _rs1p_T) @[build/NutShell.fir.opt.mlir 4142:20]
    node _rs1p_T_8 = eq(UInt<3>(7), _rs1p_T) @[build/NutShell.fir.opt.mlir 4144:20]
    node _rs1p_T_9 = mux(_rs1p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4146:20]
    node _rs1p_T_10 = mux(_rs1p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4148:21]
    node _rs1p_T_11 = mux(_rs1p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4150:21]
    node _rs1p_T_12 = mux(_rs1p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4152:21]
    node _rs1p_T_13 = mux(_rs1p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4154:21]
    node _rs1p_T_14 = mux(_rs1p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4156:21]
    node _rs1p_T_15 = mux(_rs1p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4158:21]
    node _rs1p_T_16 = mux(_rs1p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4160:21]
    node _rs1p_T_17 = or(_rs1p_T_9, _rs1p_T_10) @[build/NutShell.fir.opt.mlir 4162:21]
    node _rs1p_T_18 = or(_rs1p_T_17, _rs1p_T_11) @[build/NutShell.fir.opt.mlir 4164:21]
    node _rs1p_T_19 = or(_rs1p_T_18, _rs1p_T_12) @[build/NutShell.fir.opt.mlir 4166:21]
    node _rs1p_T_20 = or(_rs1p_T_19, _rs1p_T_13) @[build/NutShell.fir.opt.mlir 4168:21]
    node _rs1p_T_21 = or(_rs1p_T_20, _rs1p_T_14) @[build/NutShell.fir.opt.mlir 4170:21]
    node _rs1p_T_22 = or(_rs1p_T_21, _rs1p_T_15) @[build/NutShell.fir.opt.mlir 4172:21]
    node _rs1p_T_23 = or(_rs1p_T_22, _rs1p_T_16) @[build/NutShell.fir.opt.mlir 4174:21]
    wire rs1p : UInt<4> @[build/NutShell.fir.opt.mlir 4175:15]
    connect rs1p, _rs1p_T_23 @[build/NutShell.fir.opt.mlir 4176:7]
    node _rs2p_T = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 4178:18]
    node _rs2p_T_1 = eq(UInt<1>(0), _rs2p_T) @[build/NutShell.fir.opt.mlir 4180:20]
    node _rs2p_T_2 = eq(UInt<1>(1), _rs2p_T) @[build/NutShell.fir.opt.mlir 4182:20]
    node _rs2p_T_3 = eq(UInt<2>(2), _rs2p_T) @[build/NutShell.fir.opt.mlir 4184:20]
    node _rs2p_T_4 = eq(UInt<2>(3), _rs2p_T) @[build/NutShell.fir.opt.mlir 4186:20]
    node _rs2p_T_5 = eq(UInt<3>(4), _rs2p_T) @[build/NutShell.fir.opt.mlir 4188:20]
    node _rs2p_T_6 = eq(UInt<3>(5), _rs2p_T) @[build/NutShell.fir.opt.mlir 4190:20]
    node _rs2p_T_7 = eq(UInt<3>(6), _rs2p_T) @[build/NutShell.fir.opt.mlir 4192:20]
    node _rs2p_T_8 = eq(UInt<3>(7), _rs2p_T) @[build/NutShell.fir.opt.mlir 4194:20]
    node _rs2p_T_9 = mux(_rs2p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4196:20]
    node _rs2p_T_10 = mux(_rs2p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4198:21]
    node _rs2p_T_11 = mux(_rs2p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4200:21]
    node _rs2p_T_12 = mux(_rs2p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4202:21]
    node _rs2p_T_13 = mux(_rs2p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4204:21]
    node _rs2p_T_14 = mux(_rs2p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4206:21]
    node _rs2p_T_15 = mux(_rs2p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4208:21]
    node _rs2p_T_16 = mux(_rs2p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4210:21]
    node _rs2p_T_17 = or(_rs2p_T_9, _rs2p_T_10) @[build/NutShell.fir.opt.mlir 4212:21]
    node _rs2p_T_18 = or(_rs2p_T_17, _rs2p_T_11) @[build/NutShell.fir.opt.mlir 4214:21]
    node _rs2p_T_19 = or(_rs2p_T_18, _rs2p_T_12) @[build/NutShell.fir.opt.mlir 4216:21]
    node _rs2p_T_20 = or(_rs2p_T_19, _rs2p_T_13) @[build/NutShell.fir.opt.mlir 4218:21]
    node _rs2p_T_21 = or(_rs2p_T_20, _rs2p_T_14) @[build/NutShell.fir.opt.mlir 4220:21]
    node _rs2p_T_22 = or(_rs2p_T_21, _rs2p_T_15) @[build/NutShell.fir.opt.mlir 4222:21]
    node _rs2p_T_23 = or(_rs2p_T_22, _rs2p_T_16) @[build/NutShell.fir.opt.mlir 4224:21]
    wire rs2p : UInt<4> @[build/NutShell.fir.opt.mlir 4225:15]
    connect rs2p, _rs2p_T_23 @[build/NutShell.fir.opt.mlir 4226:7]
    node _rvc_shamt_T = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4228:23]
    node _rvc_shamt_T_1 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4230:25]
    node rvc_shamt = cat(_rvc_shamt_T, _rvc_shamt_T_1) @[build/NutShell.fir.opt.mlir 4232:20]
    node _rvc_src1_T = eq(UInt<1>(0), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4234:22]
    node _rvc_src1_T_1 = eq(UInt<2>(3), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4236:24]
    node _rvc_src1_T_2 = eq(UInt<1>(1), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4238:24]
    node _rvc_src1_T_3 = eq(UInt<2>(2), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4240:24]
    node _rvc_src1_T_4 = eq(UInt<3>(4), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4242:24]
    node _rvc_src1_T_5 = eq(UInt<3>(5), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4244:24]
    node _rvc_src1_T_6 = eq(UInt<3>(6), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4246:24]
    node _rvc_src1_T_7 = eq(UInt<3>(7), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4248:24]
    node _rvc_src1_T_8 = eq(UInt<4>(8), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4250:24]
    node _rvc_src1_T_9 = eq(UInt<4>(9), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4252:24]
    node _rvc_src1_T_10 = mux(_rvc_src1_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4254:25]
    node _rvc_src1_T_11 = mux(_rvc_src1_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4256:25]
    node _rvc_src1_T_12 = mux(_rvc_src1_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4258:25]
    node _rvc_src1_T_13 = mux(_rvc_src1_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4260:25]
    node _rvc_src1_T_14 = mux(_rvc_src1_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4262:25]
    node _rvc_src1_T_15 = mux(_rvc_src1_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4264:25]
    node _rvc_src1_T_16 = mux(_rvc_src1_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4266:25]
    node _rvc_src1_T_17 = mux(_rvc_src1_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4268:25]
    node _rvc_src1_T_18 = mux(_rvc_src1_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4270:25]
    node _rvc_src1_T_19 = mux(_rvc_src1_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4272:25]
    node _rvc_src1_T_20 = or(_rvc_src1_T_10, _rvc_src1_T_11) @[build/NutShell.fir.opt.mlir 4274:25]
    node _rvc_src1_T_21 = or(_rvc_src1_T_20, _rvc_src1_T_12) @[build/NutShell.fir.opt.mlir 4276:25]
    node _rvc_src1_T_22 = or(_rvc_src1_T_21, _rvc_src1_T_13) @[build/NutShell.fir.opt.mlir 4278:25]
    node _rvc_src1_T_23 = or(_rvc_src1_T_22, _rvc_src1_T_14) @[build/NutShell.fir.opt.mlir 4280:25]
    node _rvc_src1_T_24 = or(_rvc_src1_T_23, _rvc_src1_T_15) @[build/NutShell.fir.opt.mlir 4282:25]
    node _rvc_src1_T_25 = or(_rvc_src1_T_24, _rvc_src1_T_16) @[build/NutShell.fir.opt.mlir 4284:25]
    node _rvc_src1_T_26 = or(_rvc_src1_T_25, _rvc_src1_T_17) @[build/NutShell.fir.opt.mlir 4286:25]
    node _rvc_src1_T_27 = or(_rvc_src1_T_26, _rvc_src1_T_18) @[build/NutShell.fir.opt.mlir 4288:25]
    node _rvc_src1_T_28 = or(_rvc_src1_T_27, _rvc_src1_T_19) @[build/NutShell.fir.opt.mlir 4290:25]
    wire rvc_src1 : UInt<5> @[build/NutShell.fir.opt.mlir 4291:19]
    connect rvc_src1, _rvc_src1_T_28 @[build/NutShell.fir.opt.mlir 4292:7]
    node _rvc_src2_T = eq(UInt<1>(0), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4294:22]
    node _rvc_src2_T_1 = eq(UInt<2>(3), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4296:24]
    node _rvc_src2_T_2 = eq(UInt<1>(1), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4298:24]
    node _rvc_src2_T_3 = eq(UInt<2>(2), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4300:24]
    node _rvc_src2_T_4 = eq(UInt<3>(4), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4302:24]
    node _rvc_src2_T_5 = eq(UInt<3>(5), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4304:24]
    node _rvc_src2_T_6 = eq(UInt<3>(6), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4306:24]
    node _rvc_src2_T_7 = eq(UInt<3>(7), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4308:24]
    node _rvc_src2_T_8 = eq(UInt<4>(8), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4310:24]
    node _rvc_src2_T_9 = eq(UInt<4>(9), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4312:24]
    node _rvc_src2_T_10 = mux(_rvc_src2_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4314:25]
    node _rvc_src2_T_11 = mux(_rvc_src2_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4316:25]
    node _rvc_src2_T_12 = mux(_rvc_src2_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4318:25]
    node _rvc_src2_T_13 = mux(_rvc_src2_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4320:25]
    node _rvc_src2_T_14 = mux(_rvc_src2_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4322:25]
    node _rvc_src2_T_15 = mux(_rvc_src2_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4324:25]
    node _rvc_src2_T_16 = mux(_rvc_src2_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4326:25]
    node _rvc_src2_T_17 = mux(_rvc_src2_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4328:25]
    node _rvc_src2_T_18 = mux(_rvc_src2_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4330:25]
    node _rvc_src2_T_19 = mux(_rvc_src2_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4332:25]
    node _rvc_src2_T_20 = or(_rvc_src2_T_10, _rvc_src2_T_11) @[build/NutShell.fir.opt.mlir 4334:25]
    node _rvc_src2_T_21 = or(_rvc_src2_T_20, _rvc_src2_T_12) @[build/NutShell.fir.opt.mlir 4336:25]
    node _rvc_src2_T_22 = or(_rvc_src2_T_21, _rvc_src2_T_13) @[build/NutShell.fir.opt.mlir 4338:25]
    node _rvc_src2_T_23 = or(_rvc_src2_T_22, _rvc_src2_T_14) @[build/NutShell.fir.opt.mlir 4340:25]
    node _rvc_src2_T_24 = or(_rvc_src2_T_23, _rvc_src2_T_15) @[build/NutShell.fir.opt.mlir 4342:25]
    node _rvc_src2_T_25 = or(_rvc_src2_T_24, _rvc_src2_T_16) @[build/NutShell.fir.opt.mlir 4344:25]
    node _rvc_src2_T_26 = or(_rvc_src2_T_25, _rvc_src2_T_17) @[build/NutShell.fir.opt.mlir 4346:25]
    node _rvc_src2_T_27 = or(_rvc_src2_T_26, _rvc_src2_T_18) @[build/NutShell.fir.opt.mlir 4348:25]
    node _rvc_src2_T_28 = or(_rvc_src2_T_27, _rvc_src2_T_19) @[build/NutShell.fir.opt.mlir 4350:25]
    wire rvc_src2 : UInt<5> @[build/NutShell.fir.opt.mlir 4351:19]
    connect rvc_src2, _rvc_src2_T_28 @[build/NutShell.fir.opt.mlir 4352:7]
    node _rvc_dest_T = eq(UInt<1>(0), rvcDestType) @[build/NutShell.fir.opt.mlir 4354:22]
    node _rvc_dest_T_1 = eq(UInt<2>(3), rvcDestType) @[build/NutShell.fir.opt.mlir 4356:24]
    node _rvc_dest_T_2 = eq(UInt<1>(1), rvcDestType) @[build/NutShell.fir.opt.mlir 4358:24]
    node _rvc_dest_T_3 = eq(UInt<2>(2), rvcDestType) @[build/NutShell.fir.opt.mlir 4360:24]
    node _rvc_dest_T_4 = eq(UInt<3>(4), rvcDestType) @[build/NutShell.fir.opt.mlir 4362:24]
    node _rvc_dest_T_5 = eq(UInt<3>(5), rvcDestType) @[build/NutShell.fir.opt.mlir 4364:24]
    node _rvc_dest_T_6 = eq(UInt<3>(6), rvcDestType) @[build/NutShell.fir.opt.mlir 4366:24]
    node _rvc_dest_T_7 = eq(UInt<3>(7), rvcDestType) @[build/NutShell.fir.opt.mlir 4368:24]
    node _rvc_dest_T_8 = eq(UInt<4>(8), rvcDestType) @[build/NutShell.fir.opt.mlir 4370:24]
    node _rvc_dest_T_9 = eq(UInt<4>(9), rvcDestType) @[build/NutShell.fir.opt.mlir 4372:24]
    node _rvc_dest_T_10 = mux(_rvc_dest_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4374:25]
    node _rvc_dest_T_11 = mux(_rvc_dest_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4376:25]
    node _rvc_dest_T_12 = mux(_rvc_dest_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4378:25]
    node _rvc_dest_T_13 = mux(_rvc_dest_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4380:25]
    node _rvc_dest_T_14 = mux(_rvc_dest_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4382:25]
    node _rvc_dest_T_15 = mux(_rvc_dest_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4384:25]
    node _rvc_dest_T_16 = mux(_rvc_dest_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4386:25]
    node _rvc_dest_T_17 = mux(_rvc_dest_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4388:25]
    node _rvc_dest_T_18 = mux(_rvc_dest_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4390:25]
    node _rvc_dest_T_19 = mux(_rvc_dest_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4392:25]
    node _rvc_dest_T_20 = or(_rvc_dest_T_10, _rvc_dest_T_11) @[build/NutShell.fir.opt.mlir 4394:25]
    node _rvc_dest_T_21 = or(_rvc_dest_T_20, _rvc_dest_T_12) @[build/NutShell.fir.opt.mlir 4396:25]
    node _rvc_dest_T_22 = or(_rvc_dest_T_21, _rvc_dest_T_13) @[build/NutShell.fir.opt.mlir 4398:25]
    node _rvc_dest_T_23 = or(_rvc_dest_T_22, _rvc_dest_T_14) @[build/NutShell.fir.opt.mlir 4400:25]
    node _rvc_dest_T_24 = or(_rvc_dest_T_23, _rvc_dest_T_15) @[build/NutShell.fir.opt.mlir 4402:25]
    node _rvc_dest_T_25 = or(_rvc_dest_T_24, _rvc_dest_T_16) @[build/NutShell.fir.opt.mlir 4404:25]
    node _rvc_dest_T_26 = or(_rvc_dest_T_25, _rvc_dest_T_17) @[build/NutShell.fir.opt.mlir 4406:25]
    node _rvc_dest_T_27 = or(_rvc_dest_T_26, _rvc_dest_T_18) @[build/NutShell.fir.opt.mlir 4408:25]
    node _rvc_dest_T_28 = or(_rvc_dest_T_27, _rvc_dest_T_19) @[build/NutShell.fir.opt.mlir 4410:25]
    wire rvc_dest : UInt<5> @[build/NutShell.fir.opt.mlir 4411:19]
    connect rvc_dest, _rvc_dest_T_28 @[build/NutShell.fir.opt.mlir 4412:7]
    node rfSrc1 = mux(isRVC, rvc_src1, rs) @[build/NutShell.fir.opt.mlir 4414:17]
    node rfSrc2 = mux(isRVC, rvc_src2, rt) @[build/NutShell.fir.opt.mlir 4416:17]
    node rfDest = mux(isRVC, rvc_dest, rd) @[build/NutShell.fir.opt.mlir 4418:17]
    node _io_out_bits_ctrl_rfSrc1_T = eq(src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4420:37]
    node _io_out_bits_ctrl_rfSrc1_T_1 = mux(_io_out_bits_ctrl_rfSrc1_T, UInt<1>(0), rfSrc1) @[build/NutShell.fir.opt.mlir 4422:39]
    connect io.out.bits.ctrl.rfSrc1, _io_out_bits_ctrl_rfSrc1_T_1 @[build/NutShell.fir.opt.mlir 4423:7]
    node _io_out_bits_ctrl_rfSrc2_T = eq(src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4425:37]
    node _io_out_bits_ctrl_rfSrc2_T_1 = mux(_io_out_bits_ctrl_rfSrc2_T, rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4427:39]
    connect io.out.bits.ctrl.rfSrc2, _io_out_bits_ctrl_rfSrc2_T_1 @[build/NutShell.fir.opt.mlir 4428:7]
    node _io_out_bits_ctrl_rfWen_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 4430:36]
    connect io.out.bits.ctrl.rfWen, _io_out_bits_ctrl_rfWen_T @[build/NutShell.fir.opt.mlir 4431:7]
    node _io_out_bits_ctrl_rfDest_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 4433:37]
    node _io_out_bits_ctrl_rfDest_T_1 = mux(_io_out_bits_ctrl_rfDest_T, rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4435:39]
    connect io.out.bits.ctrl.rfDest, _io_out_bits_ctrl_rfDest_T_1 @[build/NutShell.fir.opt.mlir 4436:7]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 4438:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 4440:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 4442:7]
    node _imm_T = bits(io.in.bits.instr, 31, 20) @[build/NutShell.fir.opt.mlir 4444:17]
    node imm_signBit = bits(_imm_T, 11, 11) @[build/NutShell.fir.opt.mlir 4446:22]
    node _imm_T_1 = mux(imm_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4450:19]
    node _imm_T_2 = cat(_imm_T_1, _imm_T) @[build/NutShell.fir.opt.mlir 4452:19]
    node _imm_T_3 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 4454:19]
    node _imm_T_4 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4456:19]
    node _imm_T_5 = cat(_imm_T_3, _imm_T_4) @[build/NutShell.fir.opt.mlir 4458:19]
    node imm_signBit_1 = bits(_imm_T_5, 11, 11) @[build/NutShell.fir.opt.mlir 4460:24]
    node _imm_T_6 = mux(imm_signBit_1, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4462:19]
    node _imm_T_7 = cat(_imm_T_6, _imm_T_5) @[build/NutShell.fir.opt.mlir 4464:19]
    node _imm_T_8 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 4466:19]
    node _imm_T_9 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4468:19]
    node _imm_T_10 = cat(_imm_T_8, _imm_T_9) @[build/NutShell.fir.opt.mlir 4470:20]
    node imm_signBit_2 = bits(_imm_T_10, 11, 11) @[build/NutShell.fir.opt.mlir 4472:24]
    node _imm_T_11 = mux(imm_signBit_2, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4474:20]
    node _imm_T_12 = cat(_imm_T_11, _imm_T_10) @[build/NutShell.fir.opt.mlir 4476:20]
    node _imm_T_13 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 4478:20]
    node _imm_T_14 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 4480:20]
    node _imm_T_15 = bits(io.in.bits.instr, 30, 25) @[build/NutShell.fir.opt.mlir 4482:20]
    node _imm_T_16 = bits(io.in.bits.instr, 11, 8) @[build/NutShell.fir.opt.mlir 4484:20]
    node imm_lo = cat(_imm_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4486:17]
    node imm_hi_hi = cat(_imm_T_13, _imm_T_14) @[build/NutShell.fir.opt.mlir 4488:20]
    node imm_hi = cat(imm_hi_hi, _imm_T_15) @[build/NutShell.fir.opt.mlir 4490:17]
    node _imm_T_17 = cat(imm_hi, imm_lo) @[build/NutShell.fir.opt.mlir 4492:20]
    node imm_signBit_3 = bits(_imm_T_17, 12, 12) @[build/NutShell.fir.opt.mlir 4494:24]
    node _imm_T_18 = mux(imm_signBit_3, UInt<51>(2251799813685247), UInt<51>(0)) @[build/NutShell.fir.opt.mlir 4498:20]
    node _imm_T_19 = cat(_imm_T_18, _imm_T_17) @[build/NutShell.fir.opt.mlir 4500:20]
    node _imm_T_20 = bits(io.in.bits.instr, 31, 12) @[build/NutShell.fir.opt.mlir 4502:20]
    node _imm_T_21 = cat(_imm_T_20, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 4505:20]
    node imm_signBit_4 = bits(_imm_T_21, 31, 31) @[build/NutShell.fir.opt.mlir 4507:24]
    node _imm_T_22 = mux(imm_signBit_4, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 4510:20]
    node _imm_T_23 = cat(_imm_T_22, _imm_T_21) @[build/NutShell.fir.opt.mlir 4512:20]
    node _imm_T_24 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 4514:20]
    node _imm_T_25 = bits(io.in.bits.instr, 19, 12) @[build/NutShell.fir.opt.mlir 4516:20]
    node _imm_T_26 = bits(io.in.bits.instr, 20, 20) @[build/NutShell.fir.opt.mlir 4518:20]
    node _imm_T_27 = bits(io.in.bits.instr, 30, 21) @[build/NutShell.fir.opt.mlir 4520:20]
    node imm_lo_1 = cat(_imm_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4522:19]
    node imm_hi_hi_1 = cat(_imm_T_24, _imm_T_25) @[build/NutShell.fir.opt.mlir 4524:22]
    node imm_hi_1 = cat(imm_hi_hi_1, _imm_T_26) @[build/NutShell.fir.opt.mlir 4526:19]
    node _imm_T_28 = cat(imm_hi_1, imm_lo_1) @[build/NutShell.fir.opt.mlir 4528:20]
    node imm_signBit_5 = bits(_imm_T_28, 20, 20) @[build/NutShell.fir.opt.mlir 4530:24]
    node _imm_T_29 = mux(imm_signBit_5, UInt<43>(8796093022207), UInt<43>(0)) @[build/NutShell.fir.opt.mlir 4534:20]
    node _imm_T_30 = cat(_imm_T_29, _imm_T_28) @[build/NutShell.fir.opt.mlir 4536:20]
    node _imm_T_31 = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4538:20]
    node _imm_T_32 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4540:20]
    node _imm_T_33 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4542:20]
    node _imm_T_34 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4544:20]
    node _imm_T_35 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4546:20]
    node _imm_T_36 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4548:20]
    node _imm_T_37 = mux(_imm_T_31, _imm_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4550:20]
    node _imm_T_38 = mux(_imm_T_32, _imm_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4552:20]
    node _imm_T_39 = mux(_imm_T_33, _imm_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4554:20]
    node _imm_T_40 = mux(_imm_T_34, _imm_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4556:20]
    node _imm_T_41 = mux(_imm_T_35, _imm_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4558:20]
    node _imm_T_42 = mux(_imm_T_36, _imm_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4560:20]
    node _imm_T_43 = or(_imm_T_37, _imm_T_38) @[build/NutShell.fir.opt.mlir 4562:20]
    node _imm_T_44 = or(_imm_T_43, _imm_T_39) @[build/NutShell.fir.opt.mlir 4564:20]
    node _imm_T_45 = or(_imm_T_44, _imm_T_40) @[build/NutShell.fir.opt.mlir 4566:20]
    node _imm_T_46 = or(_imm_T_45, _imm_T_41) @[build/NutShell.fir.opt.mlir 4568:20]
    node _imm_T_47 = or(_imm_T_46, _imm_T_42) @[build/NutShell.fir.opt.mlir 4570:20]
    wire imm : UInt<64> @[build/NutShell.fir.opt.mlir 4571:14]
    connect imm, _imm_T_47 @[build/NutShell.fir.opt.mlir 4572:7]
    node _immrvc_T = bits(io.in.bits.instr, 3, 2) @[build/NutShell.fir.opt.mlir 4574:20]
    node _immrvc_T_1 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4576:22]
    node _immrvc_T_2 = bits(io.in.bits.instr, 6, 4) @[build/NutShell.fir.opt.mlir 4578:22]
    node immrvc_lo = cat(_immrvc_T_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4581:20]
    node immrvc_hi = cat(_immrvc_T, _immrvc_T_1) @[build/NutShell.fir.opt.mlir 4583:20]
    node _immrvc_T_3 = cat(immrvc_hi, immrvc_lo) @[build/NutShell.fir.opt.mlir 4585:22]
    node _immrvc_T_4 = cat(UInt<56>(0), _immrvc_T_3) @[build/NutShell.fir.opt.mlir 4588:22]
    node _immrvc_T_5 = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 4590:22]
    node _immrvc_T_6 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4592:22]
    node _immrvc_T_7 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4594:22]
    node immrvc_lo_1 = cat(_immrvc_T_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4597:22]
    node immrvc_hi_1 = cat(_immrvc_T_5, _immrvc_T_6) @[build/NutShell.fir.opt.mlir 4599:22]
    node _immrvc_T_8 = cat(immrvc_hi_1, immrvc_lo_1) @[build/NutShell.fir.opt.mlir 4601:22]
    node _immrvc_T_9 = cat(UInt<55>(0), _immrvc_T_8) @[build/NutShell.fir.opt.mlir 4604:22]
    node _immrvc_T_10 = bits(io.in.bits.instr, 8, 7) @[build/NutShell.fir.opt.mlir 4606:23]
    node _immrvc_T_11 = bits(io.in.bits.instr, 12, 9) @[build/NutShell.fir.opt.mlir 4608:23]
    node immrvc_hi_2 = cat(_immrvc_T_10, _immrvc_T_11) @[build/NutShell.fir.opt.mlir 4610:22]
    node _immrvc_T_12 = cat(immrvc_hi_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4612:23]
    node _immrvc_T_13 = cat(UInt<56>(0), _immrvc_T_12) @[build/NutShell.fir.opt.mlir 4614:23]
    node _immrvc_T_14 = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 4616:23]
    node _immrvc_T_15 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4618:23]
    node immrvc_hi_3 = cat(_immrvc_T_14, _immrvc_T_15) @[build/NutShell.fir.opt.mlir 4620:22]
    node _immrvc_T_16 = cat(immrvc_hi_3, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4622:23]
    node _immrvc_T_17 = cat(UInt<55>(0), _immrvc_T_16) @[build/NutShell.fir.opt.mlir 4624:23]
    node _immrvc_T_18 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4626:23]
    node _immrvc_T_19 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4628:23]
    node _immrvc_T_20 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4630:23]
    node immrvc_lo_2 = cat(_immrvc_T_20, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4632:22]
    node immrvc_hi_4 = cat(_immrvc_T_18, _immrvc_T_19) @[build/NutShell.fir.opt.mlir 4634:22]
    node _immrvc_T_21 = cat(immrvc_hi_4, immrvc_lo_2) @[build/NutShell.fir.opt.mlir 4636:23]
    node _immrvc_T_22 = cat(UInt<57>(0), _immrvc_T_21) @[build/NutShell.fir.opt.mlir 4639:23]
    node _immrvc_T_23 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4641:23]
    node _immrvc_T_24 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4643:23]
    node immrvc_hi_5 = cat(_immrvc_T_23, _immrvc_T_24) @[build/NutShell.fir.opt.mlir 4645:22]
    node _immrvc_T_25 = cat(immrvc_hi_5, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4647:23]
    node _immrvc_T_26 = cat(UInt<56>(0), _immrvc_T_25) @[build/NutShell.fir.opt.mlir 4649:23]
    node _immrvc_T_27 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4651:23]
    node _immrvc_T_28 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4653:23]
    node _immrvc_T_29 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4655:23]
    node immrvc_lo_3 = cat(_immrvc_T_29, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4657:22]
    node immrvc_hi_6 = cat(_immrvc_T_27, _immrvc_T_28) @[build/NutShell.fir.opt.mlir 4659:22]
    node _immrvc_T_30 = cat(immrvc_hi_6, immrvc_lo_3) @[build/NutShell.fir.opt.mlir 4661:23]
    node _immrvc_T_31 = cat(UInt<57>(0), _immrvc_T_30) @[build/NutShell.fir.opt.mlir 4663:23]
    node _immrvc_T_32 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4665:23]
    node _immrvc_T_33 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4667:23]
    node immrvc_hi_7 = cat(_immrvc_T_32, _immrvc_T_33) @[build/NutShell.fir.opt.mlir 4669:22]
    node _immrvc_T_34 = cat(immrvc_hi_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4671:23]
    node _immrvc_T_35 = cat(UInt<56>(0), _immrvc_T_34) @[build/NutShell.fir.opt.mlir 4673:23]
    node _immrvc_T_36 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4675:23]
    node _immrvc_T_37 = bits(io.in.bits.instr, 8, 8) @[build/NutShell.fir.opt.mlir 4677:23]
    node _immrvc_T_38 = bits(io.in.bits.instr, 10, 9) @[build/NutShell.fir.opt.mlir 4679:23]
    node _immrvc_T_39 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4681:23]
    node _immrvc_T_40 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 4683:23]
    node _immrvc_T_41 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4685:23]
    node _immrvc_T_42 = bits(io.in.bits.instr, 11, 11) @[build/NutShell.fir.opt.mlir 4687:23]
    node _immrvc_T_43 = bits(io.in.bits.instr, 5, 3) @[build/NutShell.fir.opt.mlir 4689:23]
    node immrvc_lo_lo = cat(_immrvc_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4691:23]
    node immrvc_lo_hi = cat(_immrvc_T_41, _immrvc_T_42) @[build/NutShell.fir.opt.mlir 4693:23]
    node immrvc_lo_4 = cat(immrvc_lo_hi, immrvc_lo_lo) @[build/NutShell.fir.opt.mlir 4695:22]
    node immrvc_hi_lo = cat(_immrvc_T_39, _immrvc_T_40) @[build/NutShell.fir.opt.mlir 4697:23]
    node immrvc_hi_hi_hi = cat(_immrvc_T_36, _immrvc_T_37) @[build/NutShell.fir.opt.mlir 4699:26]
    node immrvc_hi_hi = cat(immrvc_hi_hi_hi, _immrvc_T_38) @[build/NutShell.fir.opt.mlir 4701:23]
    node immrvc_hi_8 = cat(immrvc_hi_hi, immrvc_hi_lo) @[build/NutShell.fir.opt.mlir 4703:22]
    node _immrvc_T_44 = cat(immrvc_hi_8, immrvc_lo_4) @[build/NutShell.fir.opt.mlir 4705:23]
    node immrvc_signBit = bits(_immrvc_T_44, 11, 11) @[build/NutShell.fir.opt.mlir 4707:25]
    node _immrvc_T_45 = mux(immrvc_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4709:23]
    node _immrvc_T_46 = cat(_immrvc_T_45, _immrvc_T_44) @[build/NutShell.fir.opt.mlir 4711:23]
    node _immrvc_T_47 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4713:23]
    node _immrvc_T_48 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4715:23]
    node _immrvc_T_49 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4717:23]
    node _immrvc_T_50 = bits(io.in.bits.instr, 11, 10) @[build/NutShell.fir.opt.mlir 4719:23]
    node _immrvc_T_51 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 4721:23]
    node immrvc_lo_hi_1 = cat(_immrvc_T_50, _immrvc_T_51) @[build/NutShell.fir.opt.mlir 4723:25]
    node immrvc_lo_5 = cat(immrvc_lo_hi_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4725:22]
    node immrvc_hi_hi_1 = cat(_immrvc_T_47, _immrvc_T_48) @[build/NutShell.fir.opt.mlir 4727:25]
    node immrvc_hi_9 = cat(immrvc_hi_hi_1, _immrvc_T_49) @[build/NutShell.fir.opt.mlir 4729:22]
    node _immrvc_T_52 = cat(immrvc_hi_9, immrvc_lo_5) @[build/NutShell.fir.opt.mlir 4731:23]
    node immrvc_signBit_1 = bits(_immrvc_T_52, 8, 8) @[build/NutShell.fir.opt.mlir 4733:27]
    node _immrvc_T_53 = mux(immrvc_signBit_1, UInt<55>(36028797018963967), UInt<55>(0)) @[build/NutShell.fir.opt.mlir 4736:23]
    node _immrvc_T_54 = cat(_immrvc_T_53, _immrvc_T_52) @[build/NutShell.fir.opt.mlir 4738:23]
    node _immrvc_T_55 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4740:23]
    node _immrvc_T_56 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4742:23]
    node _immrvc_T_57 = cat(_immrvc_T_55, _immrvc_T_56) @[build/NutShell.fir.opt.mlir 4744:23]
    node immrvc_signBit_2 = bits(_immrvc_T_57, 5, 5) @[build/NutShell.fir.opt.mlir 4746:27]
    node _immrvc_T_58 = mux(immrvc_signBit_2, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 4750:23]
    node _immrvc_T_59 = cat(_immrvc_T_58, _immrvc_T_57) @[build/NutShell.fir.opt.mlir 4752:23]
    node _immrvc_T_60 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4754:23]
    node _immrvc_T_61 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4756:23]
    node immrvc_hi_10 = cat(_immrvc_T_60, _immrvc_T_61) @[build/NutShell.fir.opt.mlir 4758:23]
    node _immrvc_T_62 = cat(immrvc_hi_10, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 4760:23]
    node immrvc_signBit_3 = bits(_immrvc_T_62, 17, 17) @[build/NutShell.fir.opt.mlir 4762:27]
    node _immrvc_T_63 = mux(immrvc_signBit_3, UInt<46>(70368744177663), UInt<46>(0)) @[build/NutShell.fir.opt.mlir 4766:23]
    node _immrvc_T_64 = cat(_immrvc_T_63, _immrvc_T_62) @[build/NutShell.fir.opt.mlir 4768:23]
    node _immrvc_T_65 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4770:23]
    node _immrvc_T_66 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4772:23]
    node _immrvc_T_67 = cat(_immrvc_T_65, _immrvc_T_66) @[build/NutShell.fir.opt.mlir 4774:23]
    node immrvc_signBit_4 = bits(_immrvc_T_67, 5, 5) @[build/NutShell.fir.opt.mlir 4776:27]
    node _immrvc_T_68 = mux(immrvc_signBit_4, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 4778:23]
    node _immrvc_T_69 = cat(_immrvc_T_68, _immrvc_T_67) @[build/NutShell.fir.opt.mlir 4780:23]
    node _immrvc_T_70 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4782:23]
    node _immrvc_T_71 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 4784:23]
    node _immrvc_T_72 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4786:23]
    node _immrvc_T_73 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4788:23]
    node _immrvc_T_74 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4790:23]
    node immrvc_lo_hi_2 = cat(_immrvc_T_73, _immrvc_T_74) @[build/NutShell.fir.opt.mlir 4792:25]
    node immrvc_lo_6 = cat(immrvc_lo_hi_2, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 4795:22]
    node immrvc_hi_hi_2 = cat(_immrvc_T_70, _immrvc_T_71) @[build/NutShell.fir.opt.mlir 4797:25]
    node immrvc_hi_11 = cat(immrvc_hi_hi_2, _immrvc_T_72) @[build/NutShell.fir.opt.mlir 4799:23]
    node _immrvc_T_75 = cat(immrvc_hi_11, immrvc_lo_6) @[build/NutShell.fir.opt.mlir 4801:23]
    node immrvc_signBit_5 = bits(_immrvc_T_75, 9, 9) @[build/NutShell.fir.opt.mlir 4803:27]
    node _immrvc_T_76 = mux(immrvc_signBit_5, UInt<54>(18014398509481983), UInt<54>(0)) @[build/NutShell.fir.opt.mlir 4807:23]
    node _immrvc_T_77 = cat(_immrvc_T_76, _immrvc_T_75) @[build/NutShell.fir.opt.mlir 4809:23]
    node _immrvc_T_78 = bits(io.in.bits.instr, 10, 7) @[build/NutShell.fir.opt.mlir 4811:23]
    node _immrvc_T_79 = bits(io.in.bits.instr, 12, 11) @[build/NutShell.fir.opt.mlir 4813:23]
    node _immrvc_T_80 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4815:23]
    node _immrvc_T_81 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4817:23]
    node immrvc_lo_7 = cat(_immrvc_T_81, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4819:22]
    node immrvc_hi_hi_3 = cat(_immrvc_T_78, _immrvc_T_79) @[build/NutShell.fir.opt.mlir 4821:25]
    node immrvc_hi_12 = cat(immrvc_hi_hi_3, _immrvc_T_80) @[build/NutShell.fir.opt.mlir 4823:23]
    node _immrvc_T_82 = cat(immrvc_hi_12, immrvc_lo_7) @[build/NutShell.fir.opt.mlir 4825:23]
    node _immrvc_T_83 = cat(UInt<54>(0), _immrvc_T_82) @[build/NutShell.fir.opt.mlir 4827:23]
    node _immrvc_T_84 = eq(UInt<5>(16), rvcImmType) @[build/NutShell.fir.opt.mlir 4829:23]
    node _immrvc_T_85 = eq(UInt<1>(0), rvcImmType) @[build/NutShell.fir.opt.mlir 4831:23]
    node _immrvc_T_86 = eq(UInt<1>(1), rvcImmType) @[build/NutShell.fir.opt.mlir 4833:23]
    node _immrvc_T_87 = eq(UInt<2>(2), rvcImmType) @[build/NutShell.fir.opt.mlir 4835:23]
    node _immrvc_T_88 = eq(UInt<2>(3), rvcImmType) @[build/NutShell.fir.opt.mlir 4837:23]
    node _immrvc_T_89 = eq(UInt<3>(4), rvcImmType) @[build/NutShell.fir.opt.mlir 4839:23]
    node _immrvc_T_90 = eq(UInt<3>(5), rvcImmType) @[build/NutShell.fir.opt.mlir 4841:23]
    node _immrvc_T_91 = eq(UInt<3>(6), rvcImmType) @[build/NutShell.fir.opt.mlir 4843:23]
    node _immrvc_T_92 = eq(UInt<3>(7), rvcImmType) @[build/NutShell.fir.opt.mlir 4845:23]
    node _immrvc_T_93 = eq(UInt<4>(8), rvcImmType) @[build/NutShell.fir.opt.mlir 4847:23]
    node _immrvc_T_94 = eq(UInt<4>(9), rvcImmType) @[build/NutShell.fir.opt.mlir 4849:23]
    node _immrvc_T_95 = eq(UInt<4>(10), rvcImmType) @[build/NutShell.fir.opt.mlir 4851:23]
    node _immrvc_T_96 = eq(UInt<4>(11), rvcImmType) @[build/NutShell.fir.opt.mlir 4853:23]
    node _immrvc_T_97 = eq(UInt<4>(12), rvcImmType) @[build/NutShell.fir.opt.mlir 4855:23]
    node _immrvc_T_98 = eq(UInt<4>(13), rvcImmType) @[build/NutShell.fir.opt.mlir 4857:23]
    node _immrvc_T_99 = eq(UInt<4>(14), rvcImmType) @[build/NutShell.fir.opt.mlir 4859:23]
    node _immrvc_T_100 = eq(UInt<4>(15), rvcImmType) @[build/NutShell.fir.opt.mlir 4861:24]
    node _immrvc_T_101 = mux(_immrvc_T_84, UInt<64>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4864:24]
    node _immrvc_T_102 = mux(_immrvc_T_85, _immrvc_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4866:24]
    node _immrvc_T_103 = mux(_immrvc_T_86, _immrvc_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4868:24]
    node _immrvc_T_104 = mux(_immrvc_T_87, _immrvc_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4870:24]
    node _immrvc_T_105 = mux(_immrvc_T_88, _immrvc_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4872:24]
    node _immrvc_T_106 = mux(_immrvc_T_89, _immrvc_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4874:24]
    node _immrvc_T_107 = mux(_immrvc_T_90, _immrvc_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4876:24]
    node _immrvc_T_108 = mux(_immrvc_T_91, _immrvc_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4878:24]
    node _immrvc_T_109 = mux(_immrvc_T_92, _immrvc_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4880:24]
    node _immrvc_T_110 = mux(_immrvc_T_93, _immrvc_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4882:24]
    node _immrvc_T_111 = mux(_immrvc_T_94, _immrvc_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4884:24]
    node _immrvc_T_112 = mux(_immrvc_T_95, _immrvc_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4886:24]
    node _immrvc_T_113 = mux(_immrvc_T_96, _immrvc_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4888:24]
    node _immrvc_T_114 = mux(_immrvc_T_97, _immrvc_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4890:24]
    node _immrvc_T_115 = mux(_immrvc_T_98, _immrvc_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4892:24]
    node _immrvc_T_116 = mux(_immrvc_T_99, _immrvc_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4894:24]
    node _immrvc_T_117 = mux(_immrvc_T_100, UInt<64>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4897:24]
    node _immrvc_T_118 = or(_immrvc_T_101, _immrvc_T_102) @[build/NutShell.fir.opt.mlir 4899:24]
    node _immrvc_T_119 = or(_immrvc_T_118, _immrvc_T_103) @[build/NutShell.fir.opt.mlir 4901:24]
    node _immrvc_T_120 = or(_immrvc_T_119, _immrvc_T_104) @[build/NutShell.fir.opt.mlir 4903:24]
    node _immrvc_T_121 = or(_immrvc_T_120, _immrvc_T_105) @[build/NutShell.fir.opt.mlir 4905:24]
    node _immrvc_T_122 = or(_immrvc_T_121, _immrvc_T_106) @[build/NutShell.fir.opt.mlir 4907:24]
    node _immrvc_T_123 = or(_immrvc_T_122, _immrvc_T_107) @[build/NutShell.fir.opt.mlir 4909:24]
    node _immrvc_T_124 = or(_immrvc_T_123, _immrvc_T_108) @[build/NutShell.fir.opt.mlir 4911:24]
    node _immrvc_T_125 = or(_immrvc_T_124, _immrvc_T_109) @[build/NutShell.fir.opt.mlir 4913:24]
    node _immrvc_T_126 = or(_immrvc_T_125, _immrvc_T_110) @[build/NutShell.fir.opt.mlir 4915:24]
    node _immrvc_T_127 = or(_immrvc_T_126, _immrvc_T_111) @[build/NutShell.fir.opt.mlir 4917:24]
    node _immrvc_T_128 = or(_immrvc_T_127, _immrvc_T_112) @[build/NutShell.fir.opt.mlir 4919:24]
    node _immrvc_T_129 = or(_immrvc_T_128, _immrvc_T_113) @[build/NutShell.fir.opt.mlir 4921:24]
    node _immrvc_T_130 = or(_immrvc_T_129, _immrvc_T_114) @[build/NutShell.fir.opt.mlir 4923:24]
    node _immrvc_T_131 = or(_immrvc_T_130, _immrvc_T_115) @[build/NutShell.fir.opt.mlir 4925:24]
    node _immrvc_T_132 = or(_immrvc_T_131, _immrvc_T_116) @[build/NutShell.fir.opt.mlir 4927:24]
    node _immrvc_T_133 = or(_immrvc_T_132, _immrvc_T_117) @[build/NutShell.fir.opt.mlir 4929:24]
    wire immrvc : UInt<64> @[build/NutShell.fir.opt.mlir 4930:17]
    connect immrvc, _immrvc_T_133 @[build/NutShell.fir.opt.mlir 4931:7]
    node _io_out_bits_data_imm_T = mux(isRVC, immrvc, imm) @[build/NutShell.fir.opt.mlir 4933:34]
    connect io.out.bits.data.imm, _io_out_bits_data_imm_T @[build/NutShell.fir.opt.mlir 4934:7]
    node _T_200 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4936:17]
    when _T_200 : @[build/NutShell.fir.opt.mlir 4939:7]
      node _T_201 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4941:19]
      node _T_202 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4943:19]
      node _T_203 = or(_T_201, _T_202) @[build/NutShell.fir.opt.mlir 4945:19]
      node _T_204 = eq(fuOpType, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 4947:19]
      node _T_205 = and(_T_203, _T_204) @[build/NutShell.fir.opt.mlir 4949:19]
      when _T_205 : @[build/NutShell.fir.opt.mlir 4950:9]
        connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 4952:11]
      node _T_206 = eq(fuOpType, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 4955:19]
      when _T_206 : @[build/NutShell.fir.opt.mlir 4956:9]
        node _T_207 = eq(rfSrc1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4958:21]
        node _T_208 = eq(rfSrc1, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4960:21]
        node _T_209 = or(_T_207, _T_208) @[build/NutShell.fir.opt.mlir 4962:21]
        when _T_209 : @[build/NutShell.fir.opt.mlir 4963:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(94) @[build/NutShell.fir.opt.mlir 4965:13]
        node _T_210 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4968:21]
        node _T_211 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4970:21]
        node _T_212 = or(_T_210, _T_211) @[build/NutShell.fir.opt.mlir 4972:21]
        when _T_212 : @[build/NutShell.fir.opt.mlir 4973:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 4975:13]
    node _io_out_bits_ctrl_src1Type_T = bits(io.in.bits.instr, 6, 0) @[build/NutShell.fir.opt.mlir 4980:39]
    node _io_out_bits_ctrl_src1Type_T_1 = eq(_io_out_bits_ctrl_src1Type_T, UInt<6>(55)) @[build/NutShell.fir.opt.mlir 4982:41]
    node _io_out_bits_ctrl_src1Type_T_2 = mux(_io_out_bits_ctrl_src1Type_T_1, UInt<1>(0), src1Type) @[build/NutShell.fir.opt.mlir 4984:41]
    connect io.out.bits.ctrl.src1Type, _io_out_bits_ctrl_src1Type_T_2 @[build/NutShell.fir.opt.mlir 4985:7]
    connect io.out.bits.ctrl.src2Type, src2Type @[build/NutShell.fir.opt.mlir 4986:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T = bits(io.in.bits.instr, 31, 0) @[build/NutShell.fir.opt.mlir 4988:44]
    node _io_out_bits_ctrl_isNutCoreTrap_T_1 = and(_io_out_bits_ctrl_isNutCoreTrap_T, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 4990:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_2 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_1) @[build/NutShell.fir.opt.mlir 4992:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_3 = and(_io_out_bits_ctrl_isNutCoreTrap_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 4994:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_3 @[build/NutShell.fir.opt.mlir 4995:7]
    node _io_out_bits_ctrl_noSpecExec_T = eq(io.out.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 4997:41]
    connect io.out.bits.ctrl.noSpecExec, _io_out_bits_ctrl_noSpecExec_T @[build/NutShell.fir.opt.mlir 4998:7]
    node _io_out_bits_ctrl_isBlocked_T = eq(io.out.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 5000:40]
    node _io_out_bits_ctrl_isBlocked_T_1 = bits(io.out.bits.ctrl.fuOpType, 5, 5) @[build/NutShell.fir.opt.mlir 5002:42]
    node _io_out_bits_ctrl_isBlocked_T_2 = and(_io_out_bits_ctrl_isBlocked_T, _io_out_bits_ctrl_isBlocked_T_1) @[build/NutShell.fir.opt.mlir 5004:42]
    node _io_out_bits_ctrl_isBlocked_T_3 = eq(io.out.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 5006:42]
    node _io_out_bits_ctrl_isBlocked_T_4 = or(_io_out_bits_ctrl_isBlocked_T_2, _io_out_bits_ctrl_isBlocked_T_3) @[build/NutShell.fir.opt.mlir 5008:42]
    connect io.out.bits.ctrl.isBlocked, _io_out_bits_ctrl_isBlocked_T_4 @[build/NutShell.fir.opt.mlir 5009:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 5010:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5012:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 5014:27]
    node _io_in_ready_T_2 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5016:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 5018:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T, _io_in_ready_T_3) @[build/NutShell.fir.opt.mlir 5020:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 5021:7]
    connect io.out.bits.cf, io.in.bits @[build/NutShell.fir.opt.mlir 5022:7]
    node _T_213 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 5024:17]
    inst LogPerfHelper of LogPerfHelper_3 @[build/NutShell.fir.opt.mlir 5025:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 5026:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 5031:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 5032:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 5033:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 5034:7]
    node _T_214 = and(_T_213, c_control.logEnable) @[build/NutShell.fir.opt.mlir 5036:17]
    when _T_214 : @[build/NutShell.fir.opt.mlir 5037:7]
      node _T_215 = asUInt(reset) @[build/NutShell.fir.opt.mlir 5039:19]
      node _T_216 = eq(_T_215, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5041:19]
      when _T_216 : @[build/NutShell.fir.opt.mlir 5042:9]
        skip @[build/NutShell.fir.opt.mlir 5043:11]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 5046:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5048:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 5049:9]
        skip @[build/NutShell.fir.opt.mlir 5050:11]
    wire intrVec : UInt<12> @[build/NutShell.fir.opt.mlir 5053:18]
    connect intrVec, UInt<12>(0) @[build/NutShell.fir.opt.mlir 5055:7]
    node _T_219 = bits(intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 5057:17]
    node _T_220 = bits(intrVec, 1, 1) @[build/NutShell.fir.opt.mlir 5059:17]
    node _T_221 = bits(intrVec, 2, 2) @[build/NutShell.fir.opt.mlir 5061:17]
    node _T_222 = bits(intrVec, 3, 3) @[build/NutShell.fir.opt.mlir 5063:17]
    node _T_223 = bits(intrVec, 4, 4) @[build/NutShell.fir.opt.mlir 5065:17]
    node _T_224 = bits(intrVec, 5, 5) @[build/NutShell.fir.opt.mlir 5067:17]
    node _T_225 = bits(intrVec, 6, 6) @[build/NutShell.fir.opt.mlir 5069:17]
    node _T_226 = bits(intrVec, 7, 7) @[build/NutShell.fir.opt.mlir 5071:17]
    node _T_227 = bits(intrVec, 8, 8) @[build/NutShell.fir.opt.mlir 5073:17]
    node _T_228 = bits(intrVec, 9, 9) @[build/NutShell.fir.opt.mlir 5075:17]
    node _T_229 = bits(intrVec, 10, 10) @[build/NutShell.fir.opt.mlir 5077:17]
    node _T_230 = bits(intrVec, 11, 11) @[build/NutShell.fir.opt.mlir 5079:17]
    connect io.out.bits.cf.intrVec[0], _T_219 @[build/NutShell.fir.opt.mlir 5080:7]
    connect io.out.bits.cf.intrVec[1], _T_220 @[build/NutShell.fir.opt.mlir 5081:7]
    connect io.out.bits.cf.intrVec[2], _T_221 @[build/NutShell.fir.opt.mlir 5082:7]
    connect io.out.bits.cf.intrVec[3], _T_222 @[build/NutShell.fir.opt.mlir 5083:7]
    connect io.out.bits.cf.intrVec[4], _T_223 @[build/NutShell.fir.opt.mlir 5084:7]
    connect io.out.bits.cf.intrVec[5], _T_224 @[build/NutShell.fir.opt.mlir 5085:7]
    connect io.out.bits.cf.intrVec[6], _T_225 @[build/NutShell.fir.opt.mlir 5086:7]
    connect io.out.bits.cf.intrVec[7], _T_226 @[build/NutShell.fir.opt.mlir 5087:7]
    connect io.out.bits.cf.intrVec[8], _T_227 @[build/NutShell.fir.opt.mlir 5088:7]
    connect io.out.bits.cf.intrVec[9], _T_228 @[build/NutShell.fir.opt.mlir 5089:7]
    connect io.out.bits.cf.intrVec[10], _T_229 @[build/NutShell.fir.opt.mlir 5090:7]
    connect io.out.bits.cf.intrVec[11], _T_230 @[build/NutShell.fir.opt.mlir 5091:7]
    node _hasIntr_T = orr(intrVec) @[build/NutShell.fir.opt.mlir 5093:21]
    connect hasIntr, _hasIntr_T @[build/NutShell.fir.opt.mlir 5094:7]
    wire vmEnable : UInt<1> @[build/NutShell.fir.opt.mlir 5095:19]
    connect vmEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 5097:7]
    connect io.out.bits.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5099:7]
    connect io.out.bits.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5101:7]
    connect io.out.bits.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5103:7]
    connect io.out.bits.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5105:7]
    connect io.out.bits.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5107:7]
    connect io.out.bits.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5109:7]
    connect io.out.bits.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5111:7]
    connect io.out.bits.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5113:7]
    connect io.out.bits.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5115:7]
    connect io.out.bits.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5117:7]
    connect io.out.bits.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5119:7]
    connect io.out.bits.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5121:7]
    connect io.out.bits.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5123:7]
    connect io.out.bits.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5125:7]
    connect io.out.bits.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5127:7]
    connect io.out.bits.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5129:7]
    node _io_out_bits_cf_exceptionVec_2_T = eq(instrType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5131:43]
    node _io_out_bits_cf_exceptionVec_2_T_1 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5133:45]
    node _io_out_bits_cf_exceptionVec_2_T_2 = and(_io_out_bits_cf_exceptionVec_2_T, _io_out_bits_cf_exceptionVec_2_T_1) @[build/NutShell.fir.opt.mlir 5135:45]
    node _io_out_bits_cf_exceptionVec_2_T_3 = and(_io_out_bits_cf_exceptionVec_2_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 5137:45]
    connect io.out.bits.cf.exceptionVec[2], _io_out_bits_cf_exceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 5138:7]
    connect io.out.bits.cf.exceptionVec[12], io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 5139:7]
    node _io_out_bits_cf_exceptionVec_1_T = bits(io.in.bits.pc, 38, 32) @[build/NutShell.fir.opt.mlir 5141:43]
    node _io_out_bits_cf_exceptionVec_1_T_1 = orr(_io_out_bits_cf_exceptionVec_1_T) @[build/NutShell.fir.opt.mlir 5143:45]
    node _io_out_bits_cf_exceptionVec_1_T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5145:45]
    node _io_out_bits_cf_exceptionVec_1_T_3 = and(_io_out_bits_cf_exceptionVec_1_T_1, _io_out_bits_cf_exceptionVec_1_T_2) @[build/NutShell.fir.opt.mlir 5147:45]
    connect io.out.bits.cf.exceptionVec[1], _io_out_bits_cf_exceptionVec_1_T_3 @[build/NutShell.fir.opt.mlir 5148:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5150:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_5 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_4) @[build/NutShell.fir.opt.mlir 5152:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_6 = and(_io_out_bits_ctrl_isNutCoreTrap_T_5, io.in.valid) @[build/NutShell.fir.opt.mlir 5154:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_6 @[build/NutShell.fir.opt.mlir 5155:7]
    node _io_isWFI_T = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5157:22]
    node _io_isWFI_T_1 = eq(UInt<29>(273678451), _io_isWFI_T) @[build/NutShell.fir.opt.mlir 5159:24]
    node _io_isWFI_T_2 = and(_io_isWFI_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 5161:24]
    connect io.isWFI, _io_isWFI_T_2 @[build/NutShell.fir.opt.mlir 5162:7]
    node _io_isBranch_T = eq(UInt<7>(88), fuOpType) @[build/NutShell.fir.opt.mlir 5164:25]
    node _io_isBranch_T_1 = eq(UInt<7>(90), fuOpType) @[build/NutShell.fir.opt.mlir 5166:27]
    node _io_isBranch_T_2 = eq(UInt<5>(16), fuOpType) @[build/NutShell.fir.opt.mlir 5168:27]
    node _io_isBranch_T_3 = eq(UInt<5>(17), fuOpType) @[build/NutShell.fir.opt.mlir 5170:27]
    node _io_isBranch_T_4 = eq(UInt<5>(20), fuOpType) @[build/NutShell.fir.opt.mlir 5172:27]
    node _io_isBranch_T_5 = eq(UInt<5>(21), fuOpType) @[build/NutShell.fir.opt.mlir 5174:27]
    node _io_isBranch_T_6 = eq(UInt<5>(22), fuOpType) @[build/NutShell.fir.opt.mlir 5176:27]
    node _io_isBranch_T_7 = eq(UInt<5>(23), fuOpType) @[build/NutShell.fir.opt.mlir 5178:27]
    wire _io_isBranch_WIRE : UInt<1>[8] @[build/NutShell.fir.opt.mlir 5179:28]
    connect _io_isBranch_WIRE[0], _io_isBranch_T @[build/NutShell.fir.opt.mlir 5188:7]
    connect _io_isBranch_WIRE[1], _io_isBranch_T_1 @[build/NutShell.fir.opt.mlir 5189:7]
    connect _io_isBranch_WIRE[2], _io_isBranch_T_2 @[build/NutShell.fir.opt.mlir 5190:7]
    connect _io_isBranch_WIRE[3], _io_isBranch_T_3 @[build/NutShell.fir.opt.mlir 5191:7]
    connect _io_isBranch_WIRE[4], _io_isBranch_T_4 @[build/NutShell.fir.opt.mlir 5192:7]
    connect _io_isBranch_WIRE[5], _io_isBranch_T_5 @[build/NutShell.fir.opt.mlir 5193:7]
    connect _io_isBranch_WIRE[6], _io_isBranch_T_6 @[build/NutShell.fir.opt.mlir 5194:7]
    connect _io_isBranch_WIRE[7], _io_isBranch_T_7 @[build/NutShell.fir.opt.mlir 5195:7]
    node io_isBranch_lo_lo = cat(_io_isBranch_WIRE[1], _io_isBranch_WIRE[0]) @[build/NutShell.fir.opt.mlir 5197:28]
    node io_isBranch_lo_hi = cat(_io_isBranch_WIRE[3], _io_isBranch_WIRE[2]) @[build/NutShell.fir.opt.mlir 5199:28]
    node io_isBranch_lo = cat(io_isBranch_lo_hi, io_isBranch_lo_lo) @[build/NutShell.fir.opt.mlir 5201:25]
    node io_isBranch_hi_lo = cat(_io_isBranch_WIRE[5], _io_isBranch_WIRE[4]) @[build/NutShell.fir.opt.mlir 5203:28]
    node io_isBranch_hi_hi = cat(_io_isBranch_WIRE[7], _io_isBranch_WIRE[6]) @[build/NutShell.fir.opt.mlir 5205:28]
    node io_isBranch_hi = cat(io_isBranch_hi_hi, io_isBranch_hi_lo) @[build/NutShell.fir.opt.mlir 5207:25]
    node _io_isBranch_T_8 = cat(io_isBranch_hi, io_isBranch_lo) @[build/NutShell.fir.opt.mlir 5209:27]
    node _io_isBranch_T_9 = orr(_io_isBranch_T_8) @[build/NutShell.fir.opt.mlir 5211:27]
    node _io_isBranch_T_10 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5213:28]
    node _io_isBranch_T_11 = and(_io_isBranch_T_9, _io_isBranch_T_10) @[build/NutShell.fir.opt.mlir 5215:28]
    connect io.isBranch, _io_isBranch_T_11 @[build/NutShell.fir.opt.mlir 5216:7]

  extmodule LogPerfHelper_4 : @[build/NutShell.fir.opt.mlir 5218:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 5218:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 5218:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 5218:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 5218:140]
    defname = LogPerfHelper

  module Decoder_1 : @[build/NutShell.fir.opt.mlir 5219:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 5219:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 5219:67]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, isWFI : UInt<1>, isBranch : UInt<1> } @[build/NutShell.fir.opt.mlir 5219:94]

    wire hasIntr : UInt<1> @[build/NutShell.fir.opt.mlir 5295:18]
    node _decodeList_T = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5298:24]
    node _decodeList_T_1 = eq(UInt<5>(19), _decodeList_T) @[build/NutShell.fir.opt.mlir 5301:26]
    node _decodeList_T_2 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5304:26]
    node _decodeList_T_3 = eq(UInt<13>(4115), _decodeList_T_2) @[build/NutShell.fir.opt.mlir 5307:26]
    node _decodeList_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5309:26]
    node _decodeList_T_5 = eq(UInt<14>(8211), _decodeList_T_4) @[build/NutShell.fir.opt.mlir 5312:26]
    node _decodeList_T_6 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5314:26]
    node _decodeList_T_7 = eq(UInt<14>(12307), _decodeList_T_6) @[build/NutShell.fir.opt.mlir 5317:26]
    node _decodeList_T_8 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5319:26]
    node _decodeList_T_9 = eq(UInt<15>(16403), _decodeList_T_8) @[build/NutShell.fir.opt.mlir 5322:26]
    node _decodeList_T_10 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5324:27]
    node _decodeList_T_11 = eq(UInt<15>(20499), _decodeList_T_10) @[build/NutShell.fir.opt.mlir 5327:27]
    node _decodeList_T_12 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5329:27]
    node _decodeList_T_13 = eq(UInt<15>(24595), _decodeList_T_12) @[build/NutShell.fir.opt.mlir 5332:27]
    node _decodeList_T_14 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5334:27]
    node _decodeList_T_15 = eq(UInt<15>(28691), _decodeList_T_14) @[build/NutShell.fir.opt.mlir 5337:27]
    node _decodeList_T_16 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5339:27]
    node _decodeList_T_17 = eq(UInt<31>(1073762323), _decodeList_T_16) @[build/NutShell.fir.opt.mlir 5342:27]
    node _decodeList_T_18 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5345:27]
    node _decodeList_T_19 = eq(UInt<6>(51), _decodeList_T_18) @[build/NutShell.fir.opt.mlir 5348:27]
    node _decodeList_T_20 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5350:27]
    node _decodeList_T_21 = eq(UInt<13>(4147), _decodeList_T_20) @[build/NutShell.fir.opt.mlir 5353:27]
    node _decodeList_T_22 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5355:27]
    node _decodeList_T_23 = eq(UInt<14>(8243), _decodeList_T_22) @[build/NutShell.fir.opt.mlir 5358:27]
    node _decodeList_T_24 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5360:27]
    node _decodeList_T_25 = eq(UInt<14>(12339), _decodeList_T_24) @[build/NutShell.fir.opt.mlir 5363:27]
    node _decodeList_T_26 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5365:27]
    node _decodeList_T_27 = eq(UInt<15>(16435), _decodeList_T_26) @[build/NutShell.fir.opt.mlir 5368:27]
    node _decodeList_T_28 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5370:27]
    node _decodeList_T_29 = eq(UInt<15>(20531), _decodeList_T_28) @[build/NutShell.fir.opt.mlir 5373:27]
    node _decodeList_T_30 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5375:27]
    node _decodeList_T_31 = eq(UInt<15>(24627), _decodeList_T_30) @[build/NutShell.fir.opt.mlir 5378:27]
    node _decodeList_T_32 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5380:27]
    node _decodeList_T_33 = eq(UInt<15>(28723), _decodeList_T_32) @[build/NutShell.fir.opt.mlir 5383:27]
    node _decodeList_T_34 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5385:27]
    node _decodeList_T_35 = eq(UInt<31>(1073741875), _decodeList_T_34) @[build/NutShell.fir.opt.mlir 5388:27]
    node _decodeList_T_36 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5390:27]
    node _decodeList_T_37 = eq(UInt<31>(1073762355), _decodeList_T_36) @[build/NutShell.fir.opt.mlir 5393:27]
    node _decodeList_T_38 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5396:27]
    node _decodeList_T_39 = eq(UInt<5>(23), _decodeList_T_38) @[build/NutShell.fir.opt.mlir 5399:27]
    node _decodeList_T_40 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5401:27]
    node _decodeList_T_41 = eq(UInt<6>(55), _decodeList_T_40) @[build/NutShell.fir.opt.mlir 5404:27]
    node _decodeList_T_42 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5406:27]
    node _decodeList_T_43 = eq(UInt<7>(111), _decodeList_T_42) @[build/NutShell.fir.opt.mlir 5409:27]
    node _decodeList_T_44 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5411:27]
    node _decodeList_T_45 = eq(UInt<7>(103), _decodeList_T_44) @[build/NutShell.fir.opt.mlir 5414:27]
    node _decodeList_T_46 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5416:27]
    node _decodeList_T_47 = eq(UInt<7>(99), _decodeList_T_46) @[build/NutShell.fir.opt.mlir 5419:27]
    node _decodeList_T_48 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5421:27]
    node _decodeList_T_49 = eq(UInt<13>(4195), _decodeList_T_48) @[build/NutShell.fir.opt.mlir 5424:27]
    node _decodeList_T_50 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5426:27]
    node _decodeList_T_51 = eq(UInt<15>(16483), _decodeList_T_50) @[build/NutShell.fir.opt.mlir 5429:27]
    node _decodeList_T_52 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5431:27]
    node _decodeList_T_53 = eq(UInt<15>(20579), _decodeList_T_52) @[build/NutShell.fir.opt.mlir 5434:27]
    node _decodeList_T_54 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5436:27]
    node _decodeList_T_55 = eq(UInt<15>(24675), _decodeList_T_54) @[build/NutShell.fir.opt.mlir 5439:27]
    node _decodeList_T_56 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5441:27]
    node _decodeList_T_57 = eq(UInt<15>(28771), _decodeList_T_56) @[build/NutShell.fir.opt.mlir 5444:27]
    node _decodeList_T_58 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5446:27]
    node _decodeList_T_59 = eq(UInt<2>(3), _decodeList_T_58) @[build/NutShell.fir.opt.mlir 5449:27]
    node _decodeList_T_60 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5451:27]
    node _decodeList_T_61 = eq(UInt<13>(4099), _decodeList_T_60) @[build/NutShell.fir.opt.mlir 5454:27]
    node _decodeList_T_62 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5456:27]
    node _decodeList_T_63 = eq(UInt<14>(8195), _decodeList_T_62) @[build/NutShell.fir.opt.mlir 5459:27]
    node _decodeList_T_64 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5461:27]
    node _decodeList_T_65 = eq(UInt<15>(16387), _decodeList_T_64) @[build/NutShell.fir.opt.mlir 5464:27]
    node _decodeList_T_66 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5466:27]
    node _decodeList_T_67 = eq(UInt<15>(20483), _decodeList_T_66) @[build/NutShell.fir.opt.mlir 5469:27]
    node _decodeList_T_68 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5471:27]
    node _decodeList_T_69 = eq(UInt<6>(35), _decodeList_T_68) @[build/NutShell.fir.opt.mlir 5474:27]
    node _decodeList_T_70 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5476:27]
    node _decodeList_T_71 = eq(UInt<13>(4131), _decodeList_T_70) @[build/NutShell.fir.opt.mlir 5479:27]
    node _decodeList_T_72 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5481:27]
    node _decodeList_T_73 = eq(UInt<14>(8227), _decodeList_T_72) @[build/NutShell.fir.opt.mlir 5484:27]
    node _decodeList_T_74 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5486:27]
    node _decodeList_T_75 = eq(UInt<5>(27), _decodeList_T_74) @[build/NutShell.fir.opt.mlir 5489:27]
    node _decodeList_T_76 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5491:27]
    node _decodeList_T_77 = eq(UInt<13>(4123), _decodeList_T_76) @[build/NutShell.fir.opt.mlir 5494:27]
    node _decodeList_T_78 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5496:27]
    node _decodeList_T_79 = eq(UInt<15>(20507), _decodeList_T_78) @[build/NutShell.fir.opt.mlir 5499:27]
    node _decodeList_T_80 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5501:27]
    node _decodeList_T_81 = eq(UInt<31>(1073762331), _decodeList_T_80) @[build/NutShell.fir.opt.mlir 5504:27]
    node _decodeList_T_82 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5506:27]
    node _decodeList_T_83 = eq(UInt<13>(4155), _decodeList_T_82) @[build/NutShell.fir.opt.mlir 5509:27]
    node _decodeList_T_84 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5511:27]
    node _decodeList_T_85 = eq(UInt<15>(20539), _decodeList_T_84) @[build/NutShell.fir.opt.mlir 5514:27]
    node _decodeList_T_86 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5516:27]
    node _decodeList_T_87 = eq(UInt<31>(1073762363), _decodeList_T_86) @[build/NutShell.fir.opt.mlir 5519:27]
    node _decodeList_T_88 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5521:27]
    node _decodeList_T_89 = eq(UInt<6>(59), _decodeList_T_88) @[build/NutShell.fir.opt.mlir 5524:27]
    node _decodeList_T_90 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5526:27]
    node _decodeList_T_91 = eq(UInt<31>(1073741883), _decodeList_T_90) @[build/NutShell.fir.opt.mlir 5529:27]
    node _decodeList_T_92 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5531:27]
    node _decodeList_T_93 = eq(UInt<15>(24579), _decodeList_T_92) @[build/NutShell.fir.opt.mlir 5534:27]
    node _decodeList_T_94 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5536:27]
    node _decodeList_T_95 = eq(UInt<14>(12291), _decodeList_T_94) @[build/NutShell.fir.opt.mlir 5539:27]
    node _decodeList_T_96 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5541:27]
    node _decodeList_T_97 = eq(UInt<14>(12323), _decodeList_T_96) @[build/NutShell.fir.opt.mlir 5544:27]
    node _decodeList_T_98 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5546:27]
    node _decodeList_T_99 = eq(UInt<7>(107), _decodeList_T_98) @[build/NutShell.fir.opt.mlir 5549:27]
    node _decodeList_T_100 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5551:28]
    node _decodeList_T_101 = eq(UInt<26>(33554483), _decodeList_T_100) @[build/NutShell.fir.opt.mlir 5554:28]
    node _decodeList_T_102 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5556:28]
    node _decodeList_T_103 = eq(UInt<26>(33558579), _decodeList_T_102) @[build/NutShell.fir.opt.mlir 5559:28]
    node _decodeList_T_104 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5561:28]
    node _decodeList_T_105 = eq(UInt<26>(33562675), _decodeList_T_104) @[build/NutShell.fir.opt.mlir 5564:28]
    node _decodeList_T_106 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5566:28]
    node _decodeList_T_107 = eq(UInt<26>(33566771), _decodeList_T_106) @[build/NutShell.fir.opt.mlir 5569:28]
    node _decodeList_T_108 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5571:28]
    node _decodeList_T_109 = eq(UInt<26>(33570867), _decodeList_T_108) @[build/NutShell.fir.opt.mlir 5574:28]
    node _decodeList_T_110 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5576:28]
    node _decodeList_T_111 = eq(UInt<26>(33574963), _decodeList_T_110) @[build/NutShell.fir.opt.mlir 5579:28]
    node _decodeList_T_112 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5581:28]
    node _decodeList_T_113 = eq(UInt<26>(33579059), _decodeList_T_112) @[build/NutShell.fir.opt.mlir 5584:28]
    node _decodeList_T_114 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5586:28]
    node _decodeList_T_115 = eq(UInt<26>(33583155), _decodeList_T_114) @[build/NutShell.fir.opt.mlir 5589:28]
    node _decodeList_T_116 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5591:28]
    node _decodeList_T_117 = eq(UInt<26>(33554491), _decodeList_T_116) @[build/NutShell.fir.opt.mlir 5594:28]
    node _decodeList_T_118 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5596:28]
    node _decodeList_T_119 = eq(UInt<26>(33570875), _decodeList_T_118) @[build/NutShell.fir.opt.mlir 5599:28]
    node _decodeList_T_120 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5601:28]
    node _decodeList_T_121 = eq(UInt<26>(33574971), _decodeList_T_120) @[build/NutShell.fir.opt.mlir 5604:28]
    node _decodeList_T_122 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5606:28]
    node _decodeList_T_123 = eq(UInt<26>(33579067), _decodeList_T_122) @[build/NutShell.fir.opt.mlir 5609:28]
    node _decodeList_T_124 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5611:28]
    node _decodeList_T_125 = eq(UInt<26>(33583163), _decodeList_T_124) @[build/NutShell.fir.opt.mlir 5614:28]
    node _decodeList_T_126 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5617:28]
    node _decodeList_T_127 = eq(UInt<1>(0), _decodeList_T_126) @[build/NutShell.fir.opt.mlir 5620:28]
    node _decodeList_T_128 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5623:28]
    node _decodeList_T_129 = eq(UInt<1>(0), _decodeList_T_128) @[build/NutShell.fir.opt.mlir 5625:28]
    node _decodeList_T_130 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5627:28]
    node _decodeList_T_131 = eq(UInt<15>(16384), _decodeList_T_130) @[build/NutShell.fir.opt.mlir 5630:28]
    node _decodeList_T_132 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5632:28]
    node _decodeList_T_133 = eq(UInt<15>(24576), _decodeList_T_132) @[build/NutShell.fir.opt.mlir 5635:28]
    node _decodeList_T_134 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5637:28]
    node _decodeList_T_135 = eq(UInt<16>(49152), _decodeList_T_134) @[build/NutShell.fir.opt.mlir 5640:28]
    node _decodeList_T_136 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5642:28]
    node _decodeList_T_137 = eq(UInt<16>(57344), _decodeList_T_136) @[build/NutShell.fir.opt.mlir 5645:28]
    node _decodeList_T_138 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 5648:28]
    node _decodeList_T_139 = eq(UInt<1>(1), _decodeList_T_138) @[build/NutShell.fir.opt.mlir 5651:28]
    node _decodeList_T_140 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5653:28]
    node _decodeList_T_141 = eq(UInt<1>(1), _decodeList_T_140) @[build/NutShell.fir.opt.mlir 5655:28]
    node _decodeList_T_142 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5657:28]
    node _decodeList_T_143 = eq(UInt<14>(8193), _decodeList_T_142) @[build/NutShell.fir.opt.mlir 5660:28]
    node _decodeList_T_144 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5662:28]
    node _decodeList_T_145 = eq(UInt<15>(16385), _decodeList_T_144) @[build/NutShell.fir.opt.mlir 5665:28]
    node _decodeList_T_146 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 5667:28]
    node _decodeList_T_147 = eq(UInt<15>(24833), _decodeList_T_146) @[build/NutShell.fir.opt.mlir 5670:28]
    node _decodeList_T_148 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5672:28]
    node _decodeList_T_149 = eq(UInt<15>(24577), _decodeList_T_148) @[build/NutShell.fir.opt.mlir 5675:28]
    node _decodeList_T_150 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5678:28]
    node _decodeList_T_151 = eq(UInt<16>(32769), _decodeList_T_150) @[build/NutShell.fir.opt.mlir 5681:28]
    node _decodeList_T_152 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5683:28]
    node _decodeList_T_153 = eq(UInt<16>(33793), _decodeList_T_152) @[build/NutShell.fir.opt.mlir 5686:28]
    node _decodeList_T_154 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5688:28]
    node _decodeList_T_155 = eq(UInt<16>(34817), _decodeList_T_154) @[build/NutShell.fir.opt.mlir 5691:28]
    node _decodeList_T_156 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5694:28]
    node _decodeList_T_157 = eq(UInt<16>(35841), _decodeList_T_156) @[build/NutShell.fir.opt.mlir 5697:28]
    node _decodeList_T_158 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5699:28]
    node _decodeList_T_159 = eq(UInt<16>(35873), _decodeList_T_158) @[build/NutShell.fir.opt.mlir 5702:28]
    node _decodeList_T_160 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5704:28]
    node _decodeList_T_161 = eq(UInt<16>(35905), _decodeList_T_160) @[build/NutShell.fir.opt.mlir 5707:28]
    node _decodeList_T_162 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5709:28]
    node _decodeList_T_163 = eq(UInt<16>(35937), _decodeList_T_162) @[build/NutShell.fir.opt.mlir 5712:28]
    node _decodeList_T_164 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5714:28]
    node _decodeList_T_165 = eq(UInt<16>(39937), _decodeList_T_164) @[build/NutShell.fir.opt.mlir 5717:28]
    node _decodeList_T_166 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5719:28]
    node _decodeList_T_167 = eq(UInt<16>(39969), _decodeList_T_166) @[build/NutShell.fir.opt.mlir 5722:28]
    node _decodeList_T_168 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5724:28]
    node _decodeList_T_169 = eq(UInt<16>(40961), _decodeList_T_168) @[build/NutShell.fir.opt.mlir 5727:28]
    node _decodeList_T_170 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5729:28]
    node _decodeList_T_171 = eq(UInt<16>(49153), _decodeList_T_170) @[build/NutShell.fir.opt.mlir 5732:28]
    node _decodeList_T_172 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5734:28]
    node _decodeList_T_173 = eq(UInt<16>(57345), _decodeList_T_172) @[build/NutShell.fir.opt.mlir 5737:28]
    node _decodeList_T_174 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5739:28]
    node _decodeList_T_175 = eq(UInt<2>(2), _decodeList_T_174) @[build/NutShell.fir.opt.mlir 5742:28]
    node _decodeList_T_176 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5744:28]
    node _decodeList_T_177 = eq(UInt<15>(16386), _decodeList_T_176) @[build/NutShell.fir.opt.mlir 5747:28]
    node _decodeList_T_178 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5749:28]
    node _decodeList_T_179 = eq(UInt<15>(24578), _decodeList_T_178) @[build/NutShell.fir.opt.mlir 5752:28]
    node _decodeList_T_180 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 5755:28]
    node _decodeList_T_181 = eq(UInt<16>(32770), _decodeList_T_180) @[build/NutShell.fir.opt.mlir 5758:28]
    node _decodeList_T_182 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 5761:28]
    node _decodeList_T_183 = eq(UInt<16>(32770), _decodeList_T_182) @[build/NutShell.fir.opt.mlir 5763:28]
    node _decodeList_T_184 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 5766:28]
    node _decodeList_T_185 = eq(UInt<16>(36866), _decodeList_T_184) @[build/NutShell.fir.opt.mlir 5769:28]
    node _decodeList_T_186 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 5771:28]
    node _decodeList_T_187 = eq(UInt<16>(36866), _decodeList_T_186) @[build/NutShell.fir.opt.mlir 5773:28]
    node _decodeList_T_188 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 5775:28]
    node _decodeList_T_189 = eq(UInt<16>(36866), _decodeList_T_188) @[build/NutShell.fir.opt.mlir 5777:28]
    node _decodeList_T_190 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5779:28]
    node _decodeList_T_191 = eq(UInt<16>(49154), _decodeList_T_190) @[build/NutShell.fir.opt.mlir 5782:28]
    node _decodeList_T_192 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5784:28]
    node _decodeList_T_193 = eq(UInt<16>(57346), _decodeList_T_192) @[build/NutShell.fir.opt.mlir 5787:28]
    node _decodeList_T_194 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5789:28]
    node _decodeList_T_195 = eq(UInt<7>(115), _decodeList_T_194) @[build/NutShell.fir.opt.mlir 5792:28]
    node _decodeList_T_196 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5794:28]
    node _decodeList_T_197 = eq(UInt<21>(1048691), _decodeList_T_196) @[build/NutShell.fir.opt.mlir 5797:28]
    node _decodeList_T_198 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5799:28]
    node _decodeList_T_199 = eq(UInt<30>(807403635), _decodeList_T_198) @[build/NutShell.fir.opt.mlir 5802:28]
    node _decodeList_T_200 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5804:28]
    node _decodeList_T_201 = eq(UInt<4>(15), _decodeList_T_200) @[build/NutShell.fir.opt.mlir 5807:28]
    node _decodeList_T_202 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5809:28]
    node _decodeList_T_203 = eq(UInt<29>(273678451), _decodeList_T_202) @[build/NutShell.fir.opt.mlir 5812:28]
    node _decodeList_T_204 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5814:28]
    node _decodeList_T_205 = eq(UInt<29>(270532723), _decodeList_T_204) @[build/NutShell.fir.opt.mlir 5817:28]
    node _decodeList_T_206 = and(io.in.bits.instr, UInt<32>(4261445631)) @[build/NutShell.fir.opt.mlir 5820:28]
    node _decodeList_T_207 = eq(UInt<29>(301990003), _decodeList_T_206) @[build/NutShell.fir.opt.mlir 5823:28]
    node _decodeList_T_208 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 5826:28]
    node _decodeList_T_209 = eq(UInt<29>(268447791), _decodeList_T_208) @[build/NutShell.fir.opt.mlir 5829:28]
    node _decodeList_T_210 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 5831:28]
    node _decodeList_T_211 = eq(UInt<29>(268443695), _decodeList_T_210) @[build/NutShell.fir.opt.mlir 5834:28]
    node _decodeList_T_212 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 5837:28]
    node _decodeList_T_213 = eq(UInt<29>(402665519), _decodeList_T_212) @[build/NutShell.fir.opt.mlir 5840:28]
    node _decodeList_T_214 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 5842:28]
    node _decodeList_T_215 = eq(UInt<29>(402661423), _decodeList_T_214) @[build/NutShell.fir.opt.mlir 5845:28]
    node _decodeList_T_216 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5848:28]
    node _decodeList_T_217 = eq(UInt<28>(134225967), _decodeList_T_216) @[build/NutShell.fir.opt.mlir 5851:28]
    node _decodeList_T_218 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5853:28]
    node _decodeList_T_219 = eq(UInt<14>(8239), _decodeList_T_218) @[build/NutShell.fir.opt.mlir 5856:28]
    node _decodeList_T_220 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5858:28]
    node _decodeList_T_221 = eq(UInt<30>(536879151), _decodeList_T_220) @[build/NutShell.fir.opt.mlir 5861:28]
    node _decodeList_T_222 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5863:28]
    node _decodeList_T_223 = eq(UInt<31>(1610620975), _decodeList_T_222) @[build/NutShell.fir.opt.mlir 5866:28]
    node _decodeList_T_224 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5868:28]
    node _decodeList_T_225 = eq(UInt<31>(1073750063), _decodeList_T_224) @[build/NutShell.fir.opt.mlir 5871:28]
    node _decodeList_T_226 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5873:28]
    node _decodeList_T_227 = eq(UInt<32>(2147491887), _decodeList_T_226) @[build/NutShell.fir.opt.mlir 5876:28]
    node _decodeList_T_228 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5878:28]
    node _decodeList_T_229 = eq(UInt<32>(2684362799), _decodeList_T_228) @[build/NutShell.fir.opt.mlir 5881:28]
    node _decodeList_T_230 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5883:28]
    node _decodeList_T_231 = eq(UInt<32>(3221233711), _decodeList_T_230) @[build/NutShell.fir.opt.mlir 5886:28]
    node _decodeList_T_232 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5888:28]
    node _decodeList_T_233 = eq(UInt<32>(3758104623), _decodeList_T_232) @[build/NutShell.fir.opt.mlir 5891:28]
    node _decodeList_T_234 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5893:28]
    node _decodeList_T_235 = eq(UInt<13>(4211), _decodeList_T_234) @[build/NutShell.fir.opt.mlir 5896:28]
    node _decodeList_T_236 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5898:28]
    node _decodeList_T_237 = eq(UInt<14>(8307), _decodeList_T_236) @[build/NutShell.fir.opt.mlir 5901:28]
    node _decodeList_T_238 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5903:28]
    node _decodeList_T_239 = eq(UInt<14>(12403), _decodeList_T_238) @[build/NutShell.fir.opt.mlir 5906:28]
    node _decodeList_T_240 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5908:28]
    node _decodeList_T_241 = eq(UInt<15>(20595), _decodeList_T_240) @[build/NutShell.fir.opt.mlir 5911:28]
    node _decodeList_T_242 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5913:28]
    node _decodeList_T_243 = eq(UInt<15>(24691), _decodeList_T_242) @[build/NutShell.fir.opt.mlir 5916:28]
    node _decodeList_T_244 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5918:28]
    node _decodeList_T_245 = eq(UInt<15>(28787), _decodeList_T_244) @[build/NutShell.fir.opt.mlir 5921:28]
    node _decodeList_T_246 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5923:28]
    node _decodeList_T_247 = eq(UInt<13>(4111), _decodeList_T_246) @[build/NutShell.fir.opt.mlir 5926:28]
    node _decodeList_T_248 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5928:28]
    node _decodeList_T_249 = mux(_decodeList_T_245, UInt<3>(4), _decodeList_T_248) @[build/NutShell.fir.opt.mlir 5931:28]
    node _decodeList_T_250 = mux(_decodeList_T_243, UInt<3>(4), _decodeList_T_249) @[build/NutShell.fir.opt.mlir 5933:28]
    node _decodeList_T_251 = mux(_decodeList_T_241, UInt<3>(4), _decodeList_T_250) @[build/NutShell.fir.opt.mlir 5935:28]
    node _decodeList_T_252 = mux(_decodeList_T_239, UInt<3>(4), _decodeList_T_251) @[build/NutShell.fir.opt.mlir 5937:28]
    node _decodeList_T_253 = mux(_decodeList_T_237, UInt<3>(4), _decodeList_T_252) @[build/NutShell.fir.opt.mlir 5939:28]
    node _decodeList_T_254 = mux(_decodeList_T_235, UInt<3>(4), _decodeList_T_253) @[build/NutShell.fir.opt.mlir 5941:28]
    node _decodeList_T_255 = mux(_decodeList_T_233, UInt<3>(5), _decodeList_T_254) @[build/NutShell.fir.opt.mlir 5944:28]
    node _decodeList_T_256 = mux(_decodeList_T_231, UInt<3>(5), _decodeList_T_255) @[build/NutShell.fir.opt.mlir 5946:28]
    node _decodeList_T_257 = mux(_decodeList_T_229, UInt<3>(5), _decodeList_T_256) @[build/NutShell.fir.opt.mlir 5948:28]
    node _decodeList_T_258 = mux(_decodeList_T_227, UInt<3>(5), _decodeList_T_257) @[build/NutShell.fir.opt.mlir 5950:28]
    node _decodeList_T_259 = mux(_decodeList_T_225, UInt<3>(5), _decodeList_T_258) @[build/NutShell.fir.opt.mlir 5952:28]
    node _decodeList_T_260 = mux(_decodeList_T_223, UInt<3>(5), _decodeList_T_259) @[build/NutShell.fir.opt.mlir 5954:28]
    node _decodeList_T_261 = mux(_decodeList_T_221, UInt<3>(5), _decodeList_T_260) @[build/NutShell.fir.opt.mlir 5956:28]
    node _decodeList_T_262 = mux(_decodeList_T_219, UInt<3>(5), _decodeList_T_261) @[build/NutShell.fir.opt.mlir 5958:28]
    node _decodeList_T_263 = mux(_decodeList_T_217, UInt<3>(5), _decodeList_T_262) @[build/NutShell.fir.opt.mlir 5960:28]
    node _decodeList_T_264 = mux(_decodeList_T_215, UInt<4>(15), _decodeList_T_263) @[build/NutShell.fir.opt.mlir 5962:28]
    node _decodeList_T_265 = mux(_decodeList_T_213, UInt<4>(15), _decodeList_T_264) @[build/NutShell.fir.opt.mlir 5964:28]
    node _decodeList_T_266 = mux(_decodeList_T_211, UInt<3>(4), _decodeList_T_265) @[build/NutShell.fir.opt.mlir 5966:28]
    node _decodeList_T_267 = mux(_decodeList_T_209, UInt<3>(4), _decodeList_T_266) @[build/NutShell.fir.opt.mlir 5968:28]
    node _decodeList_T_268 = mux(_decodeList_T_207, UInt<3>(5), _decodeList_T_267) @[build/NutShell.fir.opt.mlir 5970:28]
    node _decodeList_T_269 = mux(_decodeList_T_205, UInt<3>(4), _decodeList_T_268) @[build/NutShell.fir.opt.mlir 5972:28]
    node _decodeList_T_270 = mux(_decodeList_T_203, UInt<3>(4), _decodeList_T_269) @[build/NutShell.fir.opt.mlir 5974:28]
    node _decodeList_T_271 = mux(_decodeList_T_201, UInt<2>(2), _decodeList_T_270) @[build/NutShell.fir.opt.mlir 5976:28]
    node _decodeList_T_272 = mux(_decodeList_T_199, UInt<3>(4), _decodeList_T_271) @[build/NutShell.fir.opt.mlir 5978:28]
    node _decodeList_T_273 = mux(_decodeList_T_197, UInt<3>(4), _decodeList_T_272) @[build/NutShell.fir.opt.mlir 5980:28]
    node _decodeList_T_274 = mux(_decodeList_T_195, UInt<3>(4), _decodeList_T_273) @[build/NutShell.fir.opt.mlir 5982:28]
    node _decodeList_T_275 = mux(_decodeList_T_193, UInt<2>(2), _decodeList_T_274) @[build/NutShell.fir.opt.mlir 5984:28]
    node _decodeList_T_276 = mux(_decodeList_T_191, UInt<2>(2), _decodeList_T_275) @[build/NutShell.fir.opt.mlir 5986:28]
    node _decodeList_T_277 = mux(_decodeList_T_189, UInt<3>(5), _decodeList_T_276) @[build/NutShell.fir.opt.mlir 5988:28]
    node _decodeList_T_278 = mux(_decodeList_T_187, UInt<3>(4), _decodeList_T_277) @[build/NutShell.fir.opt.mlir 5990:28]
    node _decodeList_T_279 = mux(_decodeList_T_185, UInt<3>(4), _decodeList_T_278) @[build/NutShell.fir.opt.mlir 5992:28]
    node _decodeList_T_280 = mux(_decodeList_T_183, UInt<3>(5), _decodeList_T_279) @[build/NutShell.fir.opt.mlir 5994:28]
    node _decodeList_T_281 = mux(_decodeList_T_181, UInt<3>(4), _decodeList_T_280) @[build/NutShell.fir.opt.mlir 5996:28]
    node _decodeList_T_282 = mux(_decodeList_T_179, UInt<3>(4), _decodeList_T_281) @[build/NutShell.fir.opt.mlir 5998:28]
    node _decodeList_T_283 = mux(_decodeList_T_177, UInt<3>(4), _decodeList_T_282) @[build/NutShell.fir.opt.mlir 6000:28]
    node _decodeList_T_284 = mux(_decodeList_T_175, UInt<3>(4), _decodeList_T_283) @[build/NutShell.fir.opt.mlir 6002:28]
    node _decodeList_T_285 = mux(_decodeList_T_173, UInt<1>(1), _decodeList_T_284) @[build/NutShell.fir.opt.mlir 6004:28]
    node _decodeList_T_286 = mux(_decodeList_T_171, UInt<1>(1), _decodeList_T_285) @[build/NutShell.fir.opt.mlir 6006:28]
    node _decodeList_T_287 = mux(_decodeList_T_169, UInt<3>(7), _decodeList_T_286) @[build/NutShell.fir.opt.mlir 6009:28]
    node _decodeList_T_288 = mux(_decodeList_T_167, UInt<3>(5), _decodeList_T_287) @[build/NutShell.fir.opt.mlir 6011:28]
    node _decodeList_T_289 = mux(_decodeList_T_165, UInt<3>(5), _decodeList_T_288) @[build/NutShell.fir.opt.mlir 6013:28]
    node _decodeList_T_290 = mux(_decodeList_T_163, UInt<3>(5), _decodeList_T_289) @[build/NutShell.fir.opt.mlir 6015:28]
    node _decodeList_T_291 = mux(_decodeList_T_161, UInt<3>(5), _decodeList_T_290) @[build/NutShell.fir.opt.mlir 6017:28]
    node _decodeList_T_292 = mux(_decodeList_T_159, UInt<3>(5), _decodeList_T_291) @[build/NutShell.fir.opt.mlir 6019:28]
    node _decodeList_T_293 = mux(_decodeList_T_157, UInt<3>(5), _decodeList_T_292) @[build/NutShell.fir.opt.mlir 6021:28]
    node _decodeList_T_294 = mux(_decodeList_T_155, UInt<3>(4), _decodeList_T_293) @[build/NutShell.fir.opt.mlir 6023:28]
    node _decodeList_T_295 = mux(_decodeList_T_153, UInt<3>(4), _decodeList_T_294) @[build/NutShell.fir.opt.mlir 6025:28]
    node _decodeList_T_296 = mux(_decodeList_T_151, UInt<3>(4), _decodeList_T_295) @[build/NutShell.fir.opt.mlir 6027:28]
    node _decodeList_T_297 = mux(_decodeList_T_149, UInt<3>(4), _decodeList_T_296) @[build/NutShell.fir.opt.mlir 6029:28]
    node _decodeList_T_298 = mux(_decodeList_T_147, UInt<3>(4), _decodeList_T_297) @[build/NutShell.fir.opt.mlir 6031:28]
    node _decodeList_T_299 = mux(_decodeList_T_145, UInt<3>(4), _decodeList_T_298) @[build/NutShell.fir.opt.mlir 6033:28]
    node _decodeList_T_300 = mux(_decodeList_T_143, UInt<3>(4), _decodeList_T_299) @[build/NutShell.fir.opt.mlir 6035:28]
    node _decodeList_T_301 = mux(_decodeList_T_141, UInt<3>(4), _decodeList_T_300) @[build/NutShell.fir.opt.mlir 6037:28]
    node _decodeList_T_302 = mux(_decodeList_T_139, UInt<3>(4), _decodeList_T_301) @[build/NutShell.fir.opt.mlir 6039:28]
    node _decodeList_T_303 = mux(_decodeList_T_137, UInt<2>(2), _decodeList_T_302) @[build/NutShell.fir.opt.mlir 6041:28]
    node _decodeList_T_304 = mux(_decodeList_T_135, UInt<2>(2), _decodeList_T_303) @[build/NutShell.fir.opt.mlir 6043:28]
    node _decodeList_T_305 = mux(_decodeList_T_133, UInt<3>(4), _decodeList_T_304) @[build/NutShell.fir.opt.mlir 6045:28]
    node _decodeList_T_306 = mux(_decodeList_T_131, UInt<3>(4), _decodeList_T_305) @[build/NutShell.fir.opt.mlir 6047:28]
    node _decodeList_T_307 = mux(_decodeList_T_129, UInt<3>(4), _decodeList_T_306) @[build/NutShell.fir.opt.mlir 6049:28]
    node _decodeList_T_308 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_307) @[build/NutShell.fir.opt.mlir 6051:28]
    node _decodeList_T_309 = mux(_decodeList_T_125, UInt<3>(5), _decodeList_T_308) @[build/NutShell.fir.opt.mlir 6053:28]
    node _decodeList_T_310 = mux(_decodeList_T_123, UInt<3>(5), _decodeList_T_309) @[build/NutShell.fir.opt.mlir 6055:28]
    node _decodeList_T_311 = mux(_decodeList_T_121, UInt<3>(5), _decodeList_T_310) @[build/NutShell.fir.opt.mlir 6057:28]
    node _decodeList_T_312 = mux(_decodeList_T_119, UInt<3>(5), _decodeList_T_311) @[build/NutShell.fir.opt.mlir 6059:28]
    node _decodeList_T_313 = mux(_decodeList_T_117, UInt<3>(5), _decodeList_T_312) @[build/NutShell.fir.opt.mlir 6061:28]
    node _decodeList_T_314 = mux(_decodeList_T_115, UInt<3>(5), _decodeList_T_313) @[build/NutShell.fir.opt.mlir 6063:28]
    node _decodeList_T_315 = mux(_decodeList_T_113, UInt<3>(5), _decodeList_T_314) @[build/NutShell.fir.opt.mlir 6065:28]
    node _decodeList_T_316 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_315) @[build/NutShell.fir.opt.mlir 6067:28]
    node _decodeList_T_317 = mux(_decodeList_T_109, UInt<3>(5), _decodeList_T_316) @[build/NutShell.fir.opt.mlir 6069:28]
    node _decodeList_T_318 = mux(_decodeList_T_107, UInt<3>(5), _decodeList_T_317) @[build/NutShell.fir.opt.mlir 6071:28]
    node _decodeList_T_319 = mux(_decodeList_T_105, UInt<3>(5), _decodeList_T_318) @[build/NutShell.fir.opt.mlir 6073:28]
    node _decodeList_T_320 = mux(_decodeList_T_103, UInt<3>(5), _decodeList_T_319) @[build/NutShell.fir.opt.mlir 6075:28]
    node _decodeList_T_321 = mux(_decodeList_T_101, UInt<3>(5), _decodeList_T_320) @[build/NutShell.fir.opt.mlir 6077:28]
    node _decodeList_T_322 = mux(_decodeList_T_99, UInt<3>(4), _decodeList_T_321) @[build/NutShell.fir.opt.mlir 6079:28]
    node _decodeList_T_323 = mux(_decodeList_T_97, UInt<2>(2), _decodeList_T_322) @[build/NutShell.fir.opt.mlir 6081:28]
    node _decodeList_T_324 = mux(_decodeList_T_95, UInt<3>(4), _decodeList_T_323) @[build/NutShell.fir.opt.mlir 6083:28]
    node _decodeList_T_325 = mux(_decodeList_T_93, UInt<3>(4), _decodeList_T_324) @[build/NutShell.fir.opt.mlir 6085:28]
    node _decodeList_T_326 = mux(_decodeList_T_91, UInt<3>(5), _decodeList_T_325) @[build/NutShell.fir.opt.mlir 6087:28]
    node _decodeList_T_327 = mux(_decodeList_T_89, UInt<3>(5), _decodeList_T_326) @[build/NutShell.fir.opt.mlir 6089:28]
    node _decodeList_T_328 = mux(_decodeList_T_87, UInt<3>(5), _decodeList_T_327) @[build/NutShell.fir.opt.mlir 6091:28]
    node _decodeList_T_329 = mux(_decodeList_T_85, UInt<3>(5), _decodeList_T_328) @[build/NutShell.fir.opt.mlir 6093:28]
    node _decodeList_T_330 = mux(_decodeList_T_83, UInt<3>(5), _decodeList_T_329) @[build/NutShell.fir.opt.mlir 6095:28]
    node _decodeList_T_331 = mux(_decodeList_T_81, UInt<3>(4), _decodeList_T_330) @[build/NutShell.fir.opt.mlir 6097:28]
    node _decodeList_T_332 = mux(_decodeList_T_79, UInt<3>(4), _decodeList_T_331) @[build/NutShell.fir.opt.mlir 6099:28]
    node _decodeList_T_333 = mux(_decodeList_T_77, UInt<3>(4), _decodeList_T_332) @[build/NutShell.fir.opt.mlir 6101:28]
    node _decodeList_T_334 = mux(_decodeList_T_75, UInt<3>(4), _decodeList_T_333) @[build/NutShell.fir.opt.mlir 6103:28]
    node _decodeList_T_335 = mux(_decodeList_T_73, UInt<2>(2), _decodeList_T_334) @[build/NutShell.fir.opt.mlir 6105:28]
    node _decodeList_T_336 = mux(_decodeList_T_71, UInt<2>(2), _decodeList_T_335) @[build/NutShell.fir.opt.mlir 6107:28]
    node _decodeList_T_337 = mux(_decodeList_T_69, UInt<2>(2), _decodeList_T_336) @[build/NutShell.fir.opt.mlir 6109:28]
    node _decodeList_T_338 = mux(_decodeList_T_67, UInt<3>(4), _decodeList_T_337) @[build/NutShell.fir.opt.mlir 6111:28]
    node _decodeList_T_339 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_338) @[build/NutShell.fir.opt.mlir 6113:28]
    node _decodeList_T_340 = mux(_decodeList_T_63, UInt<3>(4), _decodeList_T_339) @[build/NutShell.fir.opt.mlir 6115:28]
    node _decodeList_T_341 = mux(_decodeList_T_61, UInt<3>(4), _decodeList_T_340) @[build/NutShell.fir.opt.mlir 6117:28]
    node _decodeList_T_342 = mux(_decodeList_T_59, UInt<3>(4), _decodeList_T_341) @[build/NutShell.fir.opt.mlir 6119:28]
    node _decodeList_T_343 = mux(_decodeList_T_57, UInt<1>(1), _decodeList_T_342) @[build/NutShell.fir.opt.mlir 6121:28]
    node _decodeList_T_344 = mux(_decodeList_T_55, UInt<1>(1), _decodeList_T_343) @[build/NutShell.fir.opt.mlir 6123:28]
    node _decodeList_T_345 = mux(_decodeList_T_53, UInt<1>(1), _decodeList_T_344) @[build/NutShell.fir.opt.mlir 6125:28]
    node _decodeList_T_346 = mux(_decodeList_T_51, UInt<1>(1), _decodeList_T_345) @[build/NutShell.fir.opt.mlir 6127:28]
    node _decodeList_T_347 = mux(_decodeList_T_49, UInt<1>(1), _decodeList_T_346) @[build/NutShell.fir.opt.mlir 6129:28]
    node _decodeList_T_348 = mux(_decodeList_T_47, UInt<1>(1), _decodeList_T_347) @[build/NutShell.fir.opt.mlir 6131:28]
    node _decodeList_T_349 = mux(_decodeList_T_45, UInt<3>(4), _decodeList_T_348) @[build/NutShell.fir.opt.mlir 6133:28]
    node _decodeList_T_350 = mux(_decodeList_T_43, UInt<3>(7), _decodeList_T_349) @[build/NutShell.fir.opt.mlir 6135:28]
    node _decodeList_T_351 = mux(_decodeList_T_41, UInt<3>(6), _decodeList_T_350) @[build/NutShell.fir.opt.mlir 6138:28]
    node _decodeList_T_352 = mux(_decodeList_T_39, UInt<3>(6), _decodeList_T_351) @[build/NutShell.fir.opt.mlir 6140:28]
    node _decodeList_T_353 = mux(_decodeList_T_37, UInt<3>(5), _decodeList_T_352) @[build/NutShell.fir.opt.mlir 6142:28]
    node _decodeList_T_354 = mux(_decodeList_T_35, UInt<3>(5), _decodeList_T_353) @[build/NutShell.fir.opt.mlir 6144:28]
    node _decodeList_T_355 = mux(_decodeList_T_33, UInt<3>(5), _decodeList_T_354) @[build/NutShell.fir.opt.mlir 6146:28]
    node _decodeList_T_356 = mux(_decodeList_T_31, UInt<3>(5), _decodeList_T_355) @[build/NutShell.fir.opt.mlir 6148:28]
    node _decodeList_T_357 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_356) @[build/NutShell.fir.opt.mlir 6150:28]
    node _decodeList_T_358 = mux(_decodeList_T_27, UInt<3>(5), _decodeList_T_357) @[build/NutShell.fir.opt.mlir 6152:28]
    node _decodeList_T_359 = mux(_decodeList_T_25, UInt<3>(5), _decodeList_T_358) @[build/NutShell.fir.opt.mlir 6154:28]
    node _decodeList_T_360 = mux(_decodeList_T_23, UInt<3>(5), _decodeList_T_359) @[build/NutShell.fir.opt.mlir 6156:28]
    node _decodeList_T_361 = mux(_decodeList_T_21, UInt<3>(5), _decodeList_T_360) @[build/NutShell.fir.opt.mlir 6158:28]
    node _decodeList_T_362 = mux(_decodeList_T_19, UInt<3>(5), _decodeList_T_361) @[build/NutShell.fir.opt.mlir 6160:28]
    node _decodeList_T_363 = mux(_decodeList_T_17, UInt<3>(4), _decodeList_T_362) @[build/NutShell.fir.opt.mlir 6162:28]
    node _decodeList_T_364 = mux(_decodeList_T_15, UInt<3>(4), _decodeList_T_363) @[build/NutShell.fir.opt.mlir 6164:28]
    node _decodeList_T_365 = mux(_decodeList_T_13, UInt<3>(4), _decodeList_T_364) @[build/NutShell.fir.opt.mlir 6166:28]
    node _decodeList_T_366 = mux(_decodeList_T_11, UInt<3>(4), _decodeList_T_365) @[build/NutShell.fir.opt.mlir 6168:28]
    node _decodeList_T_367 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_366) @[build/NutShell.fir.opt.mlir 6170:28]
    node _decodeList_T_368 = mux(_decodeList_T_7, UInt<3>(4), _decodeList_T_367) @[build/NutShell.fir.opt.mlir 6172:28]
    node _decodeList_T_369 = mux(_decodeList_T_5, UInt<3>(4), _decodeList_T_368) @[build/NutShell.fir.opt.mlir 6174:28]
    node _decodeList_T_370 = mux(_decodeList_T_3, UInt<3>(4), _decodeList_T_369) @[build/NutShell.fir.opt.mlir 6176:28]
    node decodeList_0 = mux(_decodeList_T_1, UInt<3>(4), _decodeList_T_370) @[build/NutShell.fir.opt.mlir 6178:23]
    node _decodeList_T_371 = mux(_decodeList_T_247, UInt<3>(4), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 6180:28]
    node _decodeList_T_372 = mux(_decodeList_T_245, UInt<2>(3), _decodeList_T_371) @[build/NutShell.fir.opt.mlir 6182:28]
    node _decodeList_T_373 = mux(_decodeList_T_243, UInt<2>(3), _decodeList_T_372) @[build/NutShell.fir.opt.mlir 6184:28]
    node _decodeList_T_374 = mux(_decodeList_T_241, UInt<2>(3), _decodeList_T_373) @[build/NutShell.fir.opt.mlir 6186:28]
    node _decodeList_T_375 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_374) @[build/NutShell.fir.opt.mlir 6188:28]
    node _decodeList_T_376 = mux(_decodeList_T_237, UInt<2>(3), _decodeList_T_375) @[build/NutShell.fir.opt.mlir 6190:28]
    node _decodeList_T_377 = mux(_decodeList_T_235, UInt<2>(3), _decodeList_T_376) @[build/NutShell.fir.opt.mlir 6192:28]
    node _decodeList_T_378 = mux(_decodeList_T_233, UInt<1>(1), _decodeList_T_377) @[build/NutShell.fir.opt.mlir 6194:28]
    node _decodeList_T_379 = mux(_decodeList_T_231, UInt<1>(1), _decodeList_T_378) @[build/NutShell.fir.opt.mlir 6196:28]
    node _decodeList_T_380 = mux(_decodeList_T_229, UInt<1>(1), _decodeList_T_379) @[build/NutShell.fir.opt.mlir 6198:28]
    node _decodeList_T_381 = mux(_decodeList_T_227, UInt<1>(1), _decodeList_T_380) @[build/NutShell.fir.opt.mlir 6200:28]
    node _decodeList_T_382 = mux(_decodeList_T_225, UInt<1>(1), _decodeList_T_381) @[build/NutShell.fir.opt.mlir 6202:28]
    node _decodeList_T_383 = mux(_decodeList_T_223, UInt<1>(1), _decodeList_T_382) @[build/NutShell.fir.opt.mlir 6204:28]
    node _decodeList_T_384 = mux(_decodeList_T_221, UInt<1>(1), _decodeList_T_383) @[build/NutShell.fir.opt.mlir 6206:28]
    node _decodeList_T_385 = mux(_decodeList_T_219, UInt<1>(1), _decodeList_T_384) @[build/NutShell.fir.opt.mlir 6208:28]
    node _decodeList_T_386 = mux(_decodeList_T_217, UInt<1>(1), _decodeList_T_385) @[build/NutShell.fir.opt.mlir 6210:28]
    node _decodeList_T_387 = mux(_decodeList_T_215, UInt<1>(1), _decodeList_T_386) @[build/NutShell.fir.opt.mlir 6212:28]
    node _decodeList_T_388 = mux(_decodeList_T_213, UInt<1>(1), _decodeList_T_387) @[build/NutShell.fir.opt.mlir 6214:28]
    node _decodeList_T_389 = mux(_decodeList_T_211, UInt<1>(1), _decodeList_T_388) @[build/NutShell.fir.opt.mlir 6216:28]
    node _decodeList_T_390 = mux(_decodeList_T_209, UInt<1>(1), _decodeList_T_389) @[build/NutShell.fir.opt.mlir 6218:28]
    node _decodeList_T_391 = mux(_decodeList_T_207, UInt<3>(4), _decodeList_T_390) @[build/NutShell.fir.opt.mlir 6220:28]
    node _decodeList_T_392 = mux(_decodeList_T_205, UInt<2>(3), _decodeList_T_391) @[build/NutShell.fir.opt.mlir 6222:28]
    node _decodeList_T_393 = mux(_decodeList_T_203, UInt<1>(0), _decodeList_T_392) @[build/NutShell.fir.opt.mlir 6224:28]
    node _decodeList_T_394 = mux(_decodeList_T_201, UInt<3>(4), _decodeList_T_393) @[build/NutShell.fir.opt.mlir 6226:28]
    node _decodeList_T_395 = mux(_decodeList_T_199, UInt<2>(3), _decodeList_T_394) @[build/NutShell.fir.opt.mlir 6228:28]
    node _decodeList_T_396 = mux(_decodeList_T_197, UInt<2>(3), _decodeList_T_395) @[build/NutShell.fir.opt.mlir 6230:28]
    node _decodeList_T_397 = mux(_decodeList_T_195, UInt<2>(3), _decodeList_T_396) @[build/NutShell.fir.opt.mlir 6232:28]
    node _decodeList_T_398 = mux(_decodeList_T_193, UInt<1>(1), _decodeList_T_397) @[build/NutShell.fir.opt.mlir 6234:28]
    node _decodeList_T_399 = mux(_decodeList_T_191, UInt<1>(1), _decodeList_T_398) @[build/NutShell.fir.opt.mlir 6236:28]
    node _decodeList_T_400 = mux(_decodeList_T_189, UInt<1>(0), _decodeList_T_399) @[build/NutShell.fir.opt.mlir 6238:28]
    node _decodeList_T_401 = mux(_decodeList_T_187, UInt<1>(0), _decodeList_T_400) @[build/NutShell.fir.opt.mlir 6240:28]
    node _decodeList_T_402 = mux(_decodeList_T_185, UInt<2>(3), _decodeList_T_401) @[build/NutShell.fir.opt.mlir 6242:28]
    node _decodeList_T_403 = mux(_decodeList_T_183, UInt<1>(0), _decodeList_T_402) @[build/NutShell.fir.opt.mlir 6244:28]
    node _decodeList_T_404 = mux(_decodeList_T_181, UInt<1>(0), _decodeList_T_403) @[build/NutShell.fir.opt.mlir 6246:28]
    node _decodeList_T_405 = mux(_decodeList_T_179, UInt<1>(1), _decodeList_T_404) @[build/NutShell.fir.opt.mlir 6248:28]
    node _decodeList_T_406 = mux(_decodeList_T_177, UInt<1>(1), _decodeList_T_405) @[build/NutShell.fir.opt.mlir 6250:28]
    node _decodeList_T_407 = mux(_decodeList_T_175, UInt<1>(0), _decodeList_T_406) @[build/NutShell.fir.opt.mlir 6252:28]
    node _decodeList_T_408 = mux(_decodeList_T_173, UInt<1>(0), _decodeList_T_407) @[build/NutShell.fir.opt.mlir 6254:28]
    node _decodeList_T_409 = mux(_decodeList_T_171, UInt<1>(0), _decodeList_T_408) @[build/NutShell.fir.opt.mlir 6256:28]
    node _decodeList_T_410 = mux(_decodeList_T_169, UInt<1>(0), _decodeList_T_409) @[build/NutShell.fir.opt.mlir 6258:28]
    node _decodeList_T_411 = mux(_decodeList_T_167, UInt<1>(0), _decodeList_T_410) @[build/NutShell.fir.opt.mlir 6260:28]
    node _decodeList_T_412 = mux(_decodeList_T_165, UInt<1>(0), _decodeList_T_411) @[build/NutShell.fir.opt.mlir 6262:28]
    node _decodeList_T_413 = mux(_decodeList_T_163, UInt<1>(0), _decodeList_T_412) @[build/NutShell.fir.opt.mlir 6264:28]
    node _decodeList_T_414 = mux(_decodeList_T_161, UInt<1>(0), _decodeList_T_413) @[build/NutShell.fir.opt.mlir 6266:28]
    node _decodeList_T_415 = mux(_decodeList_T_159, UInt<1>(0), _decodeList_T_414) @[build/NutShell.fir.opt.mlir 6268:28]
    node _decodeList_T_416 = mux(_decodeList_T_157, UInt<1>(0), _decodeList_T_415) @[build/NutShell.fir.opt.mlir 6270:28]
    node _decodeList_T_417 = mux(_decodeList_T_155, UInt<1>(0), _decodeList_T_416) @[build/NutShell.fir.opt.mlir 6272:28]
    node _decodeList_T_418 = mux(_decodeList_T_153, UInt<1>(0), _decodeList_T_417) @[build/NutShell.fir.opt.mlir 6274:28]
    node _decodeList_T_419 = mux(_decodeList_T_151, UInt<1>(0), _decodeList_T_418) @[build/NutShell.fir.opt.mlir 6276:28]
    node _decodeList_T_420 = mux(_decodeList_T_149, UInt<1>(0), _decodeList_T_419) @[build/NutShell.fir.opt.mlir 6278:28]
    node _decodeList_T_421 = mux(_decodeList_T_147, UInt<1>(0), _decodeList_T_420) @[build/NutShell.fir.opt.mlir 6280:28]
    node _decodeList_T_422 = mux(_decodeList_T_145, UInt<1>(0), _decodeList_T_421) @[build/NutShell.fir.opt.mlir 6282:28]
    node _decodeList_T_423 = mux(_decodeList_T_143, UInt<1>(0), _decodeList_T_422) @[build/NutShell.fir.opt.mlir 6284:28]
    node _decodeList_T_424 = mux(_decodeList_T_141, UInt<1>(0), _decodeList_T_423) @[build/NutShell.fir.opt.mlir 6286:28]
    node _decodeList_T_425 = mux(_decodeList_T_139, UInt<1>(0), _decodeList_T_424) @[build/NutShell.fir.opt.mlir 6288:28]
    node _decodeList_T_426 = mux(_decodeList_T_137, UInt<1>(1), _decodeList_T_425) @[build/NutShell.fir.opt.mlir 6290:28]
    node _decodeList_T_427 = mux(_decodeList_T_135, UInt<1>(1), _decodeList_T_426) @[build/NutShell.fir.opt.mlir 6292:28]
    node _decodeList_T_428 = mux(_decodeList_T_133, UInt<1>(1), _decodeList_T_427) @[build/NutShell.fir.opt.mlir 6294:28]
    node _decodeList_T_429 = mux(_decodeList_T_131, UInt<1>(1), _decodeList_T_428) @[build/NutShell.fir.opt.mlir 6296:28]
    node _decodeList_T_430 = mux(_decodeList_T_129, UInt<1>(0), _decodeList_T_429) @[build/NutShell.fir.opt.mlir 6298:28]
    node _decodeList_T_431 = mux(_decodeList_T_127, UInt<2>(3), _decodeList_T_430) @[build/NutShell.fir.opt.mlir 6300:28]
    node _decodeList_T_432 = mux(_decodeList_T_125, UInt<2>(2), _decodeList_T_431) @[build/NutShell.fir.opt.mlir 6302:28]
    node _decodeList_T_433 = mux(_decodeList_T_123, UInt<2>(2), _decodeList_T_432) @[build/NutShell.fir.opt.mlir 6304:28]
    node _decodeList_T_434 = mux(_decodeList_T_121, UInt<2>(2), _decodeList_T_433) @[build/NutShell.fir.opt.mlir 6306:28]
    node _decodeList_T_435 = mux(_decodeList_T_119, UInt<2>(2), _decodeList_T_434) @[build/NutShell.fir.opt.mlir 6308:28]
    node _decodeList_T_436 = mux(_decodeList_T_117, UInt<2>(2), _decodeList_T_435) @[build/NutShell.fir.opt.mlir 6310:28]
    node _decodeList_T_437 = mux(_decodeList_T_115, UInt<2>(2), _decodeList_T_436) @[build/NutShell.fir.opt.mlir 6312:28]
    node _decodeList_T_438 = mux(_decodeList_T_113, UInt<2>(2), _decodeList_T_437) @[build/NutShell.fir.opt.mlir 6314:28]
    node _decodeList_T_439 = mux(_decodeList_T_111, UInt<2>(2), _decodeList_T_438) @[build/NutShell.fir.opt.mlir 6316:28]
    node _decodeList_T_440 = mux(_decodeList_T_109, UInt<2>(2), _decodeList_T_439) @[build/NutShell.fir.opt.mlir 6318:28]
    node _decodeList_T_441 = mux(_decodeList_T_107, UInt<2>(2), _decodeList_T_440) @[build/NutShell.fir.opt.mlir 6320:28]
    node _decodeList_T_442 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_441) @[build/NutShell.fir.opt.mlir 6322:28]
    node _decodeList_T_443 = mux(_decodeList_T_103, UInt<2>(2), _decodeList_T_442) @[build/NutShell.fir.opt.mlir 6324:28]
    node _decodeList_T_444 = mux(_decodeList_T_101, UInt<2>(2), _decodeList_T_443) @[build/NutShell.fir.opt.mlir 6326:28]
    node _decodeList_T_445 = mux(_decodeList_T_99, UInt<1>(0), _decodeList_T_444) @[build/NutShell.fir.opt.mlir 6328:28]
    node _decodeList_T_446 = mux(_decodeList_T_97, UInt<1>(1), _decodeList_T_445) @[build/NutShell.fir.opt.mlir 6330:28]
    node _decodeList_T_447 = mux(_decodeList_T_95, UInt<1>(1), _decodeList_T_446) @[build/NutShell.fir.opt.mlir 6332:28]
    node _decodeList_T_448 = mux(_decodeList_T_93, UInt<1>(1), _decodeList_T_447) @[build/NutShell.fir.opt.mlir 6334:28]
    node _decodeList_T_449 = mux(_decodeList_T_91, UInt<1>(0), _decodeList_T_448) @[build/NutShell.fir.opt.mlir 6336:28]
    node _decodeList_T_450 = mux(_decodeList_T_89, UInt<1>(0), _decodeList_T_449) @[build/NutShell.fir.opt.mlir 6338:28]
    node _decodeList_T_451 = mux(_decodeList_T_87, UInt<1>(0), _decodeList_T_450) @[build/NutShell.fir.opt.mlir 6340:28]
    node _decodeList_T_452 = mux(_decodeList_T_85, UInt<1>(0), _decodeList_T_451) @[build/NutShell.fir.opt.mlir 6342:28]
    node _decodeList_T_453 = mux(_decodeList_T_83, UInt<1>(0), _decodeList_T_452) @[build/NutShell.fir.opt.mlir 6344:28]
    node _decodeList_T_454 = mux(_decodeList_T_81, UInt<1>(0), _decodeList_T_453) @[build/NutShell.fir.opt.mlir 6346:28]
    node _decodeList_T_455 = mux(_decodeList_T_79, UInt<1>(0), _decodeList_T_454) @[build/NutShell.fir.opt.mlir 6348:28]
    node _decodeList_T_456 = mux(_decodeList_T_77, UInt<1>(0), _decodeList_T_455) @[build/NutShell.fir.opt.mlir 6350:28]
    node _decodeList_T_457 = mux(_decodeList_T_75, UInt<1>(0), _decodeList_T_456) @[build/NutShell.fir.opt.mlir 6352:28]
    node _decodeList_T_458 = mux(_decodeList_T_73, UInt<1>(1), _decodeList_T_457) @[build/NutShell.fir.opt.mlir 6354:28]
    node _decodeList_T_459 = mux(_decodeList_T_71, UInt<1>(1), _decodeList_T_458) @[build/NutShell.fir.opt.mlir 6356:28]
    node _decodeList_T_460 = mux(_decodeList_T_69, UInt<1>(1), _decodeList_T_459) @[build/NutShell.fir.opt.mlir 6358:28]
    node _decodeList_T_461 = mux(_decodeList_T_67, UInt<1>(1), _decodeList_T_460) @[build/NutShell.fir.opt.mlir 6360:28]
    node _decodeList_T_462 = mux(_decodeList_T_65, UInt<1>(1), _decodeList_T_461) @[build/NutShell.fir.opt.mlir 6362:28]
    node _decodeList_T_463 = mux(_decodeList_T_63, UInt<1>(1), _decodeList_T_462) @[build/NutShell.fir.opt.mlir 6364:28]
    node _decodeList_T_464 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_463) @[build/NutShell.fir.opt.mlir 6366:28]
    node _decodeList_T_465 = mux(_decodeList_T_59, UInt<1>(1), _decodeList_T_464) @[build/NutShell.fir.opt.mlir 6368:28]
    node _decodeList_T_466 = mux(_decodeList_T_57, UInt<1>(0), _decodeList_T_465) @[build/NutShell.fir.opt.mlir 6370:28]
    node _decodeList_T_467 = mux(_decodeList_T_55, UInt<1>(0), _decodeList_T_466) @[build/NutShell.fir.opt.mlir 6372:28]
    node _decodeList_T_468 = mux(_decodeList_T_53, UInt<1>(0), _decodeList_T_467) @[build/NutShell.fir.opt.mlir 6374:28]
    node _decodeList_T_469 = mux(_decodeList_T_51, UInt<1>(0), _decodeList_T_468) @[build/NutShell.fir.opt.mlir 6376:28]
    node _decodeList_T_470 = mux(_decodeList_T_49, UInt<1>(0), _decodeList_T_469) @[build/NutShell.fir.opt.mlir 6378:28]
    node _decodeList_T_471 = mux(_decodeList_T_47, UInt<1>(0), _decodeList_T_470) @[build/NutShell.fir.opt.mlir 6380:28]
    node _decodeList_T_472 = mux(_decodeList_T_45, UInt<1>(0), _decodeList_T_471) @[build/NutShell.fir.opt.mlir 6382:28]
    node _decodeList_T_473 = mux(_decodeList_T_43, UInt<1>(0), _decodeList_T_472) @[build/NutShell.fir.opt.mlir 6384:28]
    node _decodeList_T_474 = mux(_decodeList_T_41, UInt<1>(0), _decodeList_T_473) @[build/NutShell.fir.opt.mlir 6386:28]
    node _decodeList_T_475 = mux(_decodeList_T_39, UInt<1>(0), _decodeList_T_474) @[build/NutShell.fir.opt.mlir 6388:28]
    node _decodeList_T_476 = mux(_decodeList_T_37, UInt<1>(0), _decodeList_T_475) @[build/NutShell.fir.opt.mlir 6390:28]
    node _decodeList_T_477 = mux(_decodeList_T_35, UInt<1>(0), _decodeList_T_476) @[build/NutShell.fir.opt.mlir 6392:28]
    node _decodeList_T_478 = mux(_decodeList_T_33, UInt<1>(0), _decodeList_T_477) @[build/NutShell.fir.opt.mlir 6394:28]
    node _decodeList_T_479 = mux(_decodeList_T_31, UInt<1>(0), _decodeList_T_478) @[build/NutShell.fir.opt.mlir 6396:28]
    node _decodeList_T_480 = mux(_decodeList_T_29, UInt<1>(0), _decodeList_T_479) @[build/NutShell.fir.opt.mlir 6398:28]
    node _decodeList_T_481 = mux(_decodeList_T_27, UInt<1>(0), _decodeList_T_480) @[build/NutShell.fir.opt.mlir 6400:28]
    node _decodeList_T_482 = mux(_decodeList_T_25, UInt<1>(0), _decodeList_T_481) @[build/NutShell.fir.opt.mlir 6402:28]
    node _decodeList_T_483 = mux(_decodeList_T_23, UInt<1>(0), _decodeList_T_482) @[build/NutShell.fir.opt.mlir 6404:28]
    node _decodeList_T_484 = mux(_decodeList_T_21, UInt<1>(0), _decodeList_T_483) @[build/NutShell.fir.opt.mlir 6406:28]
    node _decodeList_T_485 = mux(_decodeList_T_19, UInt<1>(0), _decodeList_T_484) @[build/NutShell.fir.opt.mlir 6408:28]
    node _decodeList_T_486 = mux(_decodeList_T_17, UInt<1>(0), _decodeList_T_485) @[build/NutShell.fir.opt.mlir 6410:28]
    node _decodeList_T_487 = mux(_decodeList_T_15, UInt<1>(0), _decodeList_T_486) @[build/NutShell.fir.opt.mlir 6412:28]
    node _decodeList_T_488 = mux(_decodeList_T_13, UInt<1>(0), _decodeList_T_487) @[build/NutShell.fir.opt.mlir 6414:28]
    node _decodeList_T_489 = mux(_decodeList_T_11, UInt<1>(0), _decodeList_T_488) @[build/NutShell.fir.opt.mlir 6416:28]
    node _decodeList_T_490 = mux(_decodeList_T_9, UInt<1>(0), _decodeList_T_489) @[build/NutShell.fir.opt.mlir 6418:28]
    node _decodeList_T_491 = mux(_decodeList_T_7, UInt<1>(0), _decodeList_T_490) @[build/NutShell.fir.opt.mlir 6420:28]
    node _decodeList_T_492 = mux(_decodeList_T_5, UInt<1>(0), _decodeList_T_491) @[build/NutShell.fir.opt.mlir 6422:28]
    node _decodeList_T_493 = mux(_decodeList_T_3, UInt<1>(0), _decodeList_T_492) @[build/NutShell.fir.opt.mlir 6424:28]
    node decodeList_1 = mux(_decodeList_T_1, UInt<1>(0), _decodeList_T_493) @[build/NutShell.fir.opt.mlir 6426:23]
    node _decodeList_T_494 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6428:28]
    node _decodeList_T_495 = mux(_decodeList_T_245, UInt<3>(7), _decodeList_T_494) @[build/NutShell.fir.opt.mlir 6430:28]
    node _decodeList_T_496 = mux(_decodeList_T_243, UInt<3>(6), _decodeList_T_495) @[build/NutShell.fir.opt.mlir 6432:28]
    node _decodeList_T_497 = mux(_decodeList_T_241, UInt<3>(5), _decodeList_T_496) @[build/NutShell.fir.opt.mlir 6434:28]
    node _decodeList_T_498 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_497) @[build/NutShell.fir.opt.mlir 6436:28]
    node _decodeList_T_499 = mux(_decodeList_T_237, UInt<2>(2), _decodeList_T_498) @[build/NutShell.fir.opt.mlir 6438:28]
    node _decodeList_T_500 = mux(_decodeList_T_235, UInt<1>(1), _decodeList_T_499) @[build/NutShell.fir.opt.mlir 6440:28]
    node _decodeList_T_501 = mux(_decodeList_T_233, UInt<6>(50), _decodeList_T_500) @[build/NutShell.fir.opt.mlir 6443:28]
    node _decodeList_T_502 = mux(_decodeList_T_231, UInt<6>(49), _decodeList_T_501) @[build/NutShell.fir.opt.mlir 6446:28]
    node _decodeList_T_503 = mux(_decodeList_T_229, UInt<6>(48), _decodeList_T_502) @[build/NutShell.fir.opt.mlir 6449:28]
    node _decodeList_T_504 = mux(_decodeList_T_227, UInt<6>(55), _decodeList_T_503) @[build/NutShell.fir.opt.mlir 6451:28]
    node _decodeList_T_505 = mux(_decodeList_T_225, UInt<6>(38), _decodeList_T_504) @[build/NutShell.fir.opt.mlir 6454:28]
    node _decodeList_T_506 = mux(_decodeList_T_223, UInt<6>(37), _decodeList_T_505) @[build/NutShell.fir.opt.mlir 6457:28]
    node _decodeList_T_507 = mux(_decodeList_T_221, UInt<6>(36), _decodeList_T_506) @[build/NutShell.fir.opt.mlir 6460:28]
    node _decodeList_T_508 = mux(_decodeList_T_219, UInt<7>(99), _decodeList_T_507) @[build/NutShell.fir.opt.mlir 6462:28]
    node _decodeList_T_509 = mux(_decodeList_T_217, UInt<6>(34), _decodeList_T_508) @[build/NutShell.fir.opt.mlir 6465:28]
    node _decodeList_T_510 = mux(_decodeList_T_215, UInt<6>(33), _decodeList_T_509) @[build/NutShell.fir.opt.mlir 6468:28]
    node _decodeList_T_511 = mux(_decodeList_T_213, UInt<6>(33), _decodeList_T_510) @[build/NutShell.fir.opt.mlir 6470:28]
    node _decodeList_T_512 = mux(_decodeList_T_211, UInt<6>(32), _decodeList_T_511) @[build/NutShell.fir.opt.mlir 6473:28]
    node _decodeList_T_513 = mux(_decodeList_T_209, UInt<6>(32), _decodeList_T_512) @[build/NutShell.fir.opt.mlir 6475:28]
    node _decodeList_T_514 = mux(_decodeList_T_207, UInt<2>(2), _decodeList_T_513) @[build/NutShell.fir.opt.mlir 6477:28]
    node _decodeList_T_515 = mux(_decodeList_T_205, UInt<1>(0), _decodeList_T_514) @[build/NutShell.fir.opt.mlir 6479:28]
    node _decodeList_T_516 = mux(_decodeList_T_203, UInt<7>(64), _decodeList_T_515) @[build/NutShell.fir.opt.mlir 6482:28]
    node _decodeList_T_517 = mux(_decodeList_T_201, UInt<1>(0), _decodeList_T_516) @[build/NutShell.fir.opt.mlir 6484:28]
    node _decodeList_T_518 = mux(_decodeList_T_199, UInt<1>(0), _decodeList_T_517) @[build/NutShell.fir.opt.mlir 6486:28]
    node _decodeList_T_519 = mux(_decodeList_T_197, UInt<1>(0), _decodeList_T_518) @[build/NutShell.fir.opt.mlir 6488:28]
    node _decodeList_T_520 = mux(_decodeList_T_195, UInt<1>(0), _decodeList_T_519) @[build/NutShell.fir.opt.mlir 6490:28]
    node _decodeList_T_521 = mux(_decodeList_T_193, UInt<4>(11), _decodeList_T_520) @[build/NutShell.fir.opt.mlir 6493:28]
    node _decodeList_T_522 = mux(_decodeList_T_191, UInt<4>(10), _decodeList_T_521) @[build/NutShell.fir.opt.mlir 6496:28]
    node _decodeList_T_523 = mux(_decodeList_T_189, UInt<7>(64), _decodeList_T_522) @[build/NutShell.fir.opt.mlir 6498:28]
    node _decodeList_T_524 = mux(_decodeList_T_187, UInt<7>(90), _decodeList_T_523) @[build/NutShell.fir.opt.mlir 6501:28]
    node _decodeList_T_525 = mux(_decodeList_T_185, UInt<1>(0), _decodeList_T_524) @[build/NutShell.fir.opt.mlir 6503:28]
    node _decodeList_T_526 = mux(_decodeList_T_183, UInt<7>(64), _decodeList_T_525) @[build/NutShell.fir.opt.mlir 6505:28]
    node _decodeList_T_527 = mux(_decodeList_T_181, UInt<7>(90), _decodeList_T_526) @[build/NutShell.fir.opt.mlir 6507:28]
    node _decodeList_T_528 = mux(_decodeList_T_179, UInt<2>(3), _decodeList_T_527) @[build/NutShell.fir.opt.mlir 6509:28]
    node _decodeList_T_529 = mux(_decodeList_T_177, UInt<2>(2), _decodeList_T_528) @[build/NutShell.fir.opt.mlir 6511:28]
    node _decodeList_T_530 = mux(_decodeList_T_175, UInt<1>(1), _decodeList_T_529) @[build/NutShell.fir.opt.mlir 6513:28]
    node _decodeList_T_531 = mux(_decodeList_T_173, UInt<5>(17), _decodeList_T_530) @[build/NutShell.fir.opt.mlir 6516:28]
    node _decodeList_T_532 = mux(_decodeList_T_171, UInt<5>(16), _decodeList_T_531) @[build/NutShell.fir.opt.mlir 6519:28]
    node _decodeList_T_533 = mux(_decodeList_T_169, UInt<7>(88), _decodeList_T_532) @[build/NutShell.fir.opt.mlir 6522:28]
    node _decodeList_T_534 = mux(_decodeList_T_167, UInt<7>(96), _decodeList_T_533) @[build/NutShell.fir.opt.mlir 6525:28]
    node _decodeList_T_535 = mux(_decodeList_T_165, UInt<6>(40), _decodeList_T_534) @[build/NutShell.fir.opt.mlir 6528:28]
    node _decodeList_T_536 = mux(_decodeList_T_163, UInt<3>(7), _decodeList_T_535) @[build/NutShell.fir.opt.mlir 6530:28]
    node _decodeList_T_537 = mux(_decodeList_T_161, UInt<3>(6), _decodeList_T_536) @[build/NutShell.fir.opt.mlir 6532:28]
    node _decodeList_T_538 = mux(_decodeList_T_159, UInt<3>(4), _decodeList_T_537) @[build/NutShell.fir.opt.mlir 6534:28]
    node _decodeList_T_539 = mux(_decodeList_T_157, UInt<4>(8), _decodeList_T_538) @[build/NutShell.fir.opt.mlir 6537:28]
    node _decodeList_T_540 = mux(_decodeList_T_155, UInt<3>(7), _decodeList_T_539) @[build/NutShell.fir.opt.mlir 6539:28]
    node _decodeList_T_541 = mux(_decodeList_T_153, UInt<4>(13), _decodeList_T_540) @[build/NutShell.fir.opt.mlir 6542:28]
    node _decodeList_T_542 = mux(_decodeList_T_151, UInt<3>(5), _decodeList_T_541) @[build/NutShell.fir.opt.mlir 6544:28]
    node _decodeList_T_543 = mux(_decodeList_T_149, UInt<7>(64), _decodeList_T_542) @[build/NutShell.fir.opt.mlir 6546:28]
    node _decodeList_T_544 = mux(_decodeList_T_147, UInt<7>(64), _decodeList_T_543) @[build/NutShell.fir.opt.mlir 6548:28]
    node _decodeList_T_545 = mux(_decodeList_T_145, UInt<7>(64), _decodeList_T_544) @[build/NutShell.fir.opt.mlir 6550:28]
    node _decodeList_T_546 = mux(_decodeList_T_143, UInt<7>(96), _decodeList_T_545) @[build/NutShell.fir.opt.mlir 6552:28]
    node _decodeList_T_547 = mux(_decodeList_T_141, UInt<7>(64), _decodeList_T_546) @[build/NutShell.fir.opt.mlir 6554:28]
    node _decodeList_T_548 = mux(_decodeList_T_139, UInt<7>(64), _decodeList_T_547) @[build/NutShell.fir.opt.mlir 6556:28]
    node _decodeList_T_549 = mux(_decodeList_T_137, UInt<4>(11), _decodeList_T_548) @[build/NutShell.fir.opt.mlir 6558:28]
    node _decodeList_T_550 = mux(_decodeList_T_135, UInt<4>(10), _decodeList_T_549) @[build/NutShell.fir.opt.mlir 6560:28]
    node _decodeList_T_551 = mux(_decodeList_T_133, UInt<2>(3), _decodeList_T_550) @[build/NutShell.fir.opt.mlir 6562:28]
    node _decodeList_T_552 = mux(_decodeList_T_131, UInt<2>(2), _decodeList_T_551) @[build/NutShell.fir.opt.mlir 6564:28]
    node _decodeList_T_553 = mux(_decodeList_T_129, UInt<7>(64), _decodeList_T_552) @[build/NutShell.fir.opt.mlir 6566:28]
    node _decodeList_T_554 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_553) @[build/NutShell.fir.opt.mlir 6568:28]
    node _decodeList_T_555 = mux(_decodeList_T_125, UInt<4>(15), _decodeList_T_554) @[build/NutShell.fir.opt.mlir 6570:28]
    node _decodeList_T_556 = mux(_decodeList_T_123, UInt<4>(14), _decodeList_T_555) @[build/NutShell.fir.opt.mlir 6573:28]
    node _decodeList_T_557 = mux(_decodeList_T_121, UInt<4>(13), _decodeList_T_556) @[build/NutShell.fir.opt.mlir 6575:28]
    node _decodeList_T_558 = mux(_decodeList_T_119, UInt<4>(12), _decodeList_T_557) @[build/NutShell.fir.opt.mlir 6578:28]
    node _decodeList_T_559 = mux(_decodeList_T_117, UInt<4>(8), _decodeList_T_558) @[build/NutShell.fir.opt.mlir 6580:28]
    node _decodeList_T_560 = mux(_decodeList_T_115, UInt<3>(7), _decodeList_T_559) @[build/NutShell.fir.opt.mlir 6582:28]
    node _decodeList_T_561 = mux(_decodeList_T_113, UInt<3>(6), _decodeList_T_560) @[build/NutShell.fir.opt.mlir 6584:28]
    node _decodeList_T_562 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_561) @[build/NutShell.fir.opt.mlir 6586:28]
    node _decodeList_T_563 = mux(_decodeList_T_109, UInt<3>(4), _decodeList_T_562) @[build/NutShell.fir.opt.mlir 6588:28]
    node _decodeList_T_564 = mux(_decodeList_T_107, UInt<2>(3), _decodeList_T_563) @[build/NutShell.fir.opt.mlir 6590:28]
    node _decodeList_T_565 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_564) @[build/NutShell.fir.opt.mlir 6592:28]
    node _decodeList_T_566 = mux(_decodeList_T_103, UInt<1>(1), _decodeList_T_565) @[build/NutShell.fir.opt.mlir 6594:28]
    node _decodeList_T_567 = mux(_decodeList_T_101, UInt<1>(0), _decodeList_T_566) @[build/NutShell.fir.opt.mlir 6596:28]
    node _decodeList_T_568 = mux(_decodeList_T_99, UInt<7>(64), _decodeList_T_567) @[build/NutShell.fir.opt.mlir 6598:28]
    node _decodeList_T_569 = mux(_decodeList_T_97, UInt<4>(11), _decodeList_T_568) @[build/NutShell.fir.opt.mlir 6600:28]
    node _decodeList_T_570 = mux(_decodeList_T_95, UInt<2>(3), _decodeList_T_569) @[build/NutShell.fir.opt.mlir 6602:28]
    node _decodeList_T_571 = mux(_decodeList_T_93, UInt<3>(6), _decodeList_T_570) @[build/NutShell.fir.opt.mlir 6604:28]
    node _decodeList_T_572 = mux(_decodeList_T_91, UInt<6>(40), _decodeList_T_571) @[build/NutShell.fir.opt.mlir 6606:28]
    node _decodeList_T_573 = mux(_decodeList_T_89, UInt<7>(96), _decodeList_T_572) @[build/NutShell.fir.opt.mlir 6608:28]
    node _decodeList_T_574 = mux(_decodeList_T_87, UInt<6>(45), _decodeList_T_573) @[build/NutShell.fir.opt.mlir 6611:28]
    node _decodeList_T_575 = mux(_decodeList_T_85, UInt<6>(37), _decodeList_T_574) @[build/NutShell.fir.opt.mlir 6613:28]
    node _decodeList_T_576 = mux(_decodeList_T_83, UInt<6>(33), _decodeList_T_575) @[build/NutShell.fir.opt.mlir 6615:28]
    node _decodeList_T_577 = mux(_decodeList_T_81, UInt<6>(45), _decodeList_T_576) @[build/NutShell.fir.opt.mlir 6617:28]
    node _decodeList_T_578 = mux(_decodeList_T_79, UInt<6>(37), _decodeList_T_577) @[build/NutShell.fir.opt.mlir 6619:28]
    node _decodeList_T_579 = mux(_decodeList_T_77, UInt<6>(33), _decodeList_T_578) @[build/NutShell.fir.opt.mlir 6621:28]
    node _decodeList_T_580 = mux(_decodeList_T_75, UInt<7>(96), _decodeList_T_579) @[build/NutShell.fir.opt.mlir 6623:28]
    node _decodeList_T_581 = mux(_decodeList_T_73, UInt<4>(10), _decodeList_T_580) @[build/NutShell.fir.opt.mlir 6625:28]
    node _decodeList_T_582 = mux(_decodeList_T_71, UInt<4>(9), _decodeList_T_581) @[build/NutShell.fir.opt.mlir 6628:28]
    node _decodeList_T_583 = mux(_decodeList_T_69, UInt<4>(8), _decodeList_T_582) @[build/NutShell.fir.opt.mlir 6630:28]
    node _decodeList_T_584 = mux(_decodeList_T_67, UInt<3>(5), _decodeList_T_583) @[build/NutShell.fir.opt.mlir 6632:28]
    node _decodeList_T_585 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_584) @[build/NutShell.fir.opt.mlir 6634:28]
    node _decodeList_T_586 = mux(_decodeList_T_63, UInt<2>(2), _decodeList_T_585) @[build/NutShell.fir.opt.mlir 6636:28]
    node _decodeList_T_587 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_586) @[build/NutShell.fir.opt.mlir 6638:28]
    node _decodeList_T_588 = mux(_decodeList_T_59, UInt<1>(0), _decodeList_T_587) @[build/NutShell.fir.opt.mlir 6640:28]
    node _decodeList_T_589 = mux(_decodeList_T_57, UInt<5>(23), _decodeList_T_588) @[build/NutShell.fir.opt.mlir 6642:28]
    node _decodeList_T_590 = mux(_decodeList_T_55, UInt<5>(22), _decodeList_T_589) @[build/NutShell.fir.opt.mlir 6645:28]
    node _decodeList_T_591 = mux(_decodeList_T_53, UInt<5>(21), _decodeList_T_590) @[build/NutShell.fir.opt.mlir 6648:28]
    node _decodeList_T_592 = mux(_decodeList_T_51, UInt<5>(20), _decodeList_T_591) @[build/NutShell.fir.opt.mlir 6651:28]
    node _decodeList_T_593 = mux(_decodeList_T_49, UInt<5>(17), _decodeList_T_592) @[build/NutShell.fir.opt.mlir 6653:28]
    node _decodeList_T_594 = mux(_decodeList_T_47, UInt<5>(16), _decodeList_T_593) @[build/NutShell.fir.opt.mlir 6655:28]
    node _decodeList_T_595 = mux(_decodeList_T_45, UInt<7>(90), _decodeList_T_594) @[build/NutShell.fir.opt.mlir 6657:28]
    node _decodeList_T_596 = mux(_decodeList_T_43, UInt<7>(88), _decodeList_T_595) @[build/NutShell.fir.opt.mlir 6659:28]
    node _decodeList_T_597 = mux(_decodeList_T_41, UInt<7>(64), _decodeList_T_596) @[build/NutShell.fir.opt.mlir 6661:28]
    node _decodeList_T_598 = mux(_decodeList_T_39, UInt<7>(64), _decodeList_T_597) @[build/NutShell.fir.opt.mlir 6663:28]
    node _decodeList_T_599 = mux(_decodeList_T_37, UInt<4>(13), _decodeList_T_598) @[build/NutShell.fir.opt.mlir 6665:28]
    node _decodeList_T_600 = mux(_decodeList_T_35, UInt<4>(8), _decodeList_T_599) @[build/NutShell.fir.opt.mlir 6667:28]
    node _decodeList_T_601 = mux(_decodeList_T_33, UInt<3>(7), _decodeList_T_600) @[build/NutShell.fir.opt.mlir 6669:28]
    node _decodeList_T_602 = mux(_decodeList_T_31, UInt<3>(6), _decodeList_T_601) @[build/NutShell.fir.opt.mlir 6671:28]
    node _decodeList_T_603 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_602) @[build/NutShell.fir.opt.mlir 6673:28]
    node _decodeList_T_604 = mux(_decodeList_T_27, UInt<3>(4), _decodeList_T_603) @[build/NutShell.fir.opt.mlir 6675:28]
    node _decodeList_T_605 = mux(_decodeList_T_25, UInt<2>(3), _decodeList_T_604) @[build/NutShell.fir.opt.mlir 6677:28]
    node _decodeList_T_606 = mux(_decodeList_T_23, UInt<2>(2), _decodeList_T_605) @[build/NutShell.fir.opt.mlir 6679:28]
    node _decodeList_T_607 = mux(_decodeList_T_21, UInt<1>(1), _decodeList_T_606) @[build/NutShell.fir.opt.mlir 6681:28]
    node _decodeList_T_608 = mux(_decodeList_T_19, UInt<7>(64), _decodeList_T_607) @[build/NutShell.fir.opt.mlir 6683:28]
    node _decodeList_T_609 = mux(_decodeList_T_17, UInt<4>(13), _decodeList_T_608) @[build/NutShell.fir.opt.mlir 6685:28]
    node _decodeList_T_610 = mux(_decodeList_T_15, UInt<3>(7), _decodeList_T_609) @[build/NutShell.fir.opt.mlir 6687:28]
    node _decodeList_T_611 = mux(_decodeList_T_13, UInt<3>(6), _decodeList_T_610) @[build/NutShell.fir.opt.mlir 6689:28]
    node _decodeList_T_612 = mux(_decodeList_T_11, UInt<3>(5), _decodeList_T_611) @[build/NutShell.fir.opt.mlir 6691:28]
    node _decodeList_T_613 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_612) @[build/NutShell.fir.opt.mlir 6693:28]
    node _decodeList_T_614 = mux(_decodeList_T_7, UInt<2>(3), _decodeList_T_613) @[build/NutShell.fir.opt.mlir 6695:28]
    node _decodeList_T_615 = mux(_decodeList_T_5, UInt<2>(2), _decodeList_T_614) @[build/NutShell.fir.opt.mlir 6697:28]
    node _decodeList_T_616 = mux(_decodeList_T_3, UInt<1>(1), _decodeList_T_615) @[build/NutShell.fir.opt.mlir 6699:28]
    node decodeList_2 = mux(_decodeList_T_1, UInt<7>(64), _decodeList_T_616) @[build/NutShell.fir.opt.mlir 6701:23]
    node _T = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6703:13]
    node _T_1 = or(_T, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6705:15]
    node instrType = mux(_T_1, UInt<1>(0), decodeList_0) @[build/NutShell.fir.opt.mlir 6707:20]
    node _T_2 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6709:15]
    node _T_3 = or(_T_2, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6711:15]
    node fuType = mux(_T_3, UInt<2>(3), decodeList_1) @[build/NutShell.fir.opt.mlir 6713:17]
    node _T_4 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6715:15]
    node _T_5 = or(_T_4, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6717:15]
    node fuOpType = mux(_T_5, UInt<1>(0), decodeList_2) @[build/NutShell.fir.opt.mlir 6719:19]
    node _isRVC_T = bits(io.in.bits.instr, 1, 0) @[build/NutShell.fir.opt.mlir 6721:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 6723:16]
    node _T_6 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6725:15]
    node _T_7 = eq(UInt<1>(0), _T_6) @[build/NutShell.fir.opt.mlir 6727:15]
    node _T_8 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6729:15]
    node _T_9 = eq(UInt<15>(16384), _T_8) @[build/NutShell.fir.opt.mlir 6731:15]
    node _T_10 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6733:16]
    node _T_11 = eq(UInt<15>(24576), _T_10) @[build/NutShell.fir.opt.mlir 6735:16]
    node _T_12 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6737:16]
    node _T_13 = eq(UInt<16>(49152), _T_12) @[build/NutShell.fir.opt.mlir 6739:16]
    node _T_14 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6741:16]
    node _T_15 = eq(UInt<16>(57344), _T_14) @[build/NutShell.fir.opt.mlir 6743:16]
    node _T_16 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 6745:16]
    node _T_17 = eq(UInt<1>(1), _T_16) @[build/NutShell.fir.opt.mlir 6747:16]
    node _T_18 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6749:16]
    node _T_19 = eq(UInt<1>(1), _T_18) @[build/NutShell.fir.opt.mlir 6751:16]
    node _T_20 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6753:16]
    node _T_21 = eq(UInt<14>(8193), _T_20) @[build/NutShell.fir.opt.mlir 6755:16]
    node _T_22 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6757:16]
    node _T_23 = eq(UInt<15>(16385), _T_22) @[build/NutShell.fir.opt.mlir 6759:16]
    node _T_24 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 6761:16]
    node _T_25 = eq(UInt<15>(24833), _T_24) @[build/NutShell.fir.opt.mlir 6763:16]
    node _T_26 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6765:16]
    node _T_27 = eq(UInt<15>(24577), _T_26) @[build/NutShell.fir.opt.mlir 6767:16]
    node _T_28 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6769:16]
    node _T_29 = eq(UInt<16>(32769), _T_28) @[build/NutShell.fir.opt.mlir 6771:16]
    node _T_30 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6773:16]
    node _T_31 = eq(UInt<16>(33793), _T_30) @[build/NutShell.fir.opt.mlir 6775:16]
    node _T_32 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6777:16]
    node _T_33 = eq(UInt<16>(34817), _T_32) @[build/NutShell.fir.opt.mlir 6779:16]
    node _T_34 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6781:16]
    node _T_35 = eq(UInt<16>(35841), _T_34) @[build/NutShell.fir.opt.mlir 6783:16]
    node _T_36 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6785:16]
    node _T_37 = eq(UInt<16>(35873), _T_36) @[build/NutShell.fir.opt.mlir 6787:16]
    node _T_38 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6789:16]
    node _T_39 = eq(UInt<16>(35905), _T_38) @[build/NutShell.fir.opt.mlir 6791:16]
    node _T_40 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6793:16]
    node _T_41 = eq(UInt<16>(35937), _T_40) @[build/NutShell.fir.opt.mlir 6795:16]
    node _T_42 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6797:16]
    node _T_43 = eq(UInt<16>(39937), _T_42) @[build/NutShell.fir.opt.mlir 6799:16]
    node _T_44 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6801:16]
    node _T_45 = eq(UInt<16>(39969), _T_44) @[build/NutShell.fir.opt.mlir 6803:16]
    node _T_46 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6805:16]
    node _T_47 = eq(UInt<16>(40961), _T_46) @[build/NutShell.fir.opt.mlir 6807:16]
    node _T_48 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6809:16]
    node _T_49 = eq(UInt<16>(49153), _T_48) @[build/NutShell.fir.opt.mlir 6811:16]
    node _T_50 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6813:16]
    node _T_51 = eq(UInt<16>(57345), _T_50) @[build/NutShell.fir.opt.mlir 6815:16]
    node _T_52 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6817:16]
    node _T_53 = eq(UInt<2>(2), _T_52) @[build/NutShell.fir.opt.mlir 6819:16]
    node _T_54 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6821:16]
    node _T_55 = eq(UInt<15>(16386), _T_54) @[build/NutShell.fir.opt.mlir 6823:16]
    node _T_56 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6825:16]
    node _T_57 = eq(UInt<15>(24578), _T_56) @[build/NutShell.fir.opt.mlir 6827:16]
    node _T_58 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 6829:16]
    node _T_59 = eq(UInt<16>(32770), _T_58) @[build/NutShell.fir.opt.mlir 6831:16]
    node _T_60 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 6833:16]
    node _T_61 = eq(UInt<16>(32770), _T_60) @[build/NutShell.fir.opt.mlir 6835:16]
    node _T_62 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 6837:16]
    node _T_63 = eq(UInt<16>(36866), _T_62) @[build/NutShell.fir.opt.mlir 6839:16]
    node _T_64 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 6841:16]
    node _T_65 = eq(UInt<16>(36866), _T_64) @[build/NutShell.fir.opt.mlir 6843:16]
    node _T_66 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 6845:16]
    node _T_67 = eq(UInt<16>(36866), _T_66) @[build/NutShell.fir.opt.mlir 6847:16]
    node _T_68 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6849:16]
    node _T_69 = eq(UInt<16>(49154), _T_68) @[build/NutShell.fir.opt.mlir 6851:16]
    node _T_70 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6853:16]
    node _T_71 = eq(UInt<16>(57346), _T_70) @[build/NutShell.fir.opt.mlir 6855:16]
    node _T_72 = mux(_T_71, UInt<2>(3), UInt<5>(16)) @[build/NutShell.fir.opt.mlir 6857:16]
    node _T_73 = mux(_T_69, UInt<2>(2), _T_72) @[build/NutShell.fir.opt.mlir 6859:16]
    node _T_74 = mux(_T_67, UInt<5>(16), _T_73) @[build/NutShell.fir.opt.mlir 6861:16]
    node _T_75 = mux(_T_65, UInt<5>(16), _T_74) @[build/NutShell.fir.opt.mlir 6863:16]
    node _T_76 = mux(_T_63, UInt<4>(15), _T_75) @[build/NutShell.fir.opt.mlir 6865:16]
    node _T_77 = mux(_T_61, UInt<5>(16), _T_76) @[build/NutShell.fir.opt.mlir 6867:16]
    node _T_78 = mux(_T_59, UInt<5>(16), _T_77) @[build/NutShell.fir.opt.mlir 6869:16]
    node _T_79 = mux(_T_57, UInt<1>(1), _T_78) @[build/NutShell.fir.opt.mlir 6871:16]
    node _T_80 = mux(_T_55, UInt<1>(0), _T_79) @[build/NutShell.fir.opt.mlir 6873:16]
    node _T_81 = mux(_T_53, UInt<4>(10), _T_80) @[build/NutShell.fir.opt.mlir 6875:16]
    node _T_82 = mux(_T_51, UInt<4>(9), _T_81) @[build/NutShell.fir.opt.mlir 6877:16]
    node _T_83 = mux(_T_49, UInt<4>(9), _T_82) @[build/NutShell.fir.opt.mlir 6879:16]
    node _T_84 = mux(_T_47, UInt<4>(8), _T_83) @[build/NutShell.fir.opt.mlir 6881:16]
    node _T_85 = mux(_T_45, UInt<5>(16), _T_84) @[build/NutShell.fir.opt.mlir 6883:16]
    node _T_86 = mux(_T_43, UInt<5>(16), _T_85) @[build/NutShell.fir.opt.mlir 6885:16]
    node _T_87 = mux(_T_41, UInt<5>(16), _T_86) @[build/NutShell.fir.opt.mlir 6887:16]
    node _T_88 = mux(_T_39, UInt<5>(16), _T_87) @[build/NutShell.fir.opt.mlir 6889:16]
    node _T_89 = mux(_T_37, UInt<5>(16), _T_88) @[build/NutShell.fir.opt.mlir 6891:16]
    node _T_90 = mux(_T_35, UInt<5>(16), _T_89) @[build/NutShell.fir.opt.mlir 6893:16]
    node _T_91 = mux(_T_33, UInt<4>(10), _T_90) @[build/NutShell.fir.opt.mlir 6895:16]
    node _T_92 = mux(_T_31, UInt<4>(10), _T_91) @[build/NutShell.fir.opt.mlir 6897:16]
    node _T_93 = mux(_T_29, UInt<4>(10), _T_92) @[build/NutShell.fir.opt.mlir 6899:16]
    node _T_94 = mux(_T_27, UInt<4>(11), _T_93) @[build/NutShell.fir.opt.mlir 6901:16]
    node _T_95 = mux(_T_25, UInt<4>(13), _T_94) @[build/NutShell.fir.opt.mlir 6903:16]
    node _T_96 = mux(_T_23, UInt<4>(10), _T_95) @[build/NutShell.fir.opt.mlir 6905:16]
    node _T_97 = mux(_T_21, UInt<4>(12), _T_96) @[build/NutShell.fir.opt.mlir 6907:16]
    node _T_98 = mux(_T_19, UInt<4>(12), _T_97) @[build/NutShell.fir.opt.mlir 6909:16]
    node _T_99 = mux(_T_17, UInt<5>(16), _T_98) @[build/NutShell.fir.opt.mlir 6911:16]
    node _T_100 = mux(_T_15, UInt<3>(5), _T_99) @[build/NutShell.fir.opt.mlir 6913:17]
    node _T_101 = mux(_T_13, UInt<3>(4), _T_100) @[build/NutShell.fir.opt.mlir 6915:17]
    node _T_102 = mux(_T_11, UInt<3>(7), _T_101) @[build/NutShell.fir.opt.mlir 6917:17]
    node _T_103 = mux(_T_9, UInt<3>(6), _T_102) @[build/NutShell.fir.opt.mlir 6919:17]
    node rvcImmType = mux(_T_7, UInt<4>(14), _T_103) @[build/NutShell.fir.opt.mlir 6921:21]
    node _T_104 = mux(_T_71, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6923:17]
    node _T_105 = mux(_T_69, UInt<4>(9), _T_104) @[build/NutShell.fir.opt.mlir 6925:17]
    node _T_106 = mux(_T_67, UInt<2>(2), _T_105) @[build/NutShell.fir.opt.mlir 6927:17]
    node _T_107 = mux(_T_65, UInt<3>(4), _T_106) @[build/NutShell.fir.opt.mlir 6929:17]
    node _T_108 = mux(_T_63, UInt<1>(0), _T_107) @[build/NutShell.fir.opt.mlir 6931:17]
    node _T_109 = mux(_T_61, UInt<3>(5), _T_108) @[build/NutShell.fir.opt.mlir 6933:17]
    node _T_110 = mux(_T_59, UInt<3>(4), _T_109) @[build/NutShell.fir.opt.mlir 6935:17]
    node _T_111 = mux(_T_57, UInt<4>(9), _T_110) @[build/NutShell.fir.opt.mlir 6937:17]
    node _T_112 = mux(_T_55, UInt<4>(9), _T_111) @[build/NutShell.fir.opt.mlir 6939:17]
    node _T_113 = mux(_T_53, UInt<2>(2), _T_112) @[build/NutShell.fir.opt.mlir 6941:17]
    node _T_114 = mux(_T_51, UInt<3>(6), _T_113) @[build/NutShell.fir.opt.mlir 6943:17]
    node _T_115 = mux(_T_49, UInt<3>(6), _T_114) @[build/NutShell.fir.opt.mlir 6945:17]
    node _T_116 = mux(_T_47, UInt<1>(0), _T_115) @[build/NutShell.fir.opt.mlir 6947:17]
    node _T_117 = mux(_T_45, UInt<3>(6), _T_116) @[build/NutShell.fir.opt.mlir 6949:17]
    node _T_118 = mux(_T_43, UInt<3>(6), _T_117) @[build/NutShell.fir.opt.mlir 6951:17]
    node _T_119 = mux(_T_41, UInt<3>(6), _T_118) @[build/NutShell.fir.opt.mlir 6953:17]
    node _T_120 = mux(_T_39, UInt<3>(6), _T_119) @[build/NutShell.fir.opt.mlir 6955:17]
    node _T_121 = mux(_T_37, UInt<3>(6), _T_120) @[build/NutShell.fir.opt.mlir 6957:17]
    node _T_122 = mux(_T_35, UInt<3>(6), _T_121) @[build/NutShell.fir.opt.mlir 6959:17]
    node _T_123 = mux(_T_33, UInt<3>(6), _T_122) @[build/NutShell.fir.opt.mlir 6961:17]
    node _T_124 = mux(_T_31, UInt<3>(6), _T_123) @[build/NutShell.fir.opt.mlir 6963:17]
    node _T_125 = mux(_T_29, UInt<3>(6), _T_124) @[build/NutShell.fir.opt.mlir 6965:17]
    node _T_126 = mux(_T_27, UInt<1>(0), _T_125) @[build/NutShell.fir.opt.mlir 6967:17]
    node _T_127 = mux(_T_25, UInt<4>(9), _T_126) @[build/NutShell.fir.opt.mlir 6969:17]
    node _T_128 = mux(_T_23, UInt<1>(0), _T_127) @[build/NutShell.fir.opt.mlir 6971:17]
    node _T_129 = mux(_T_21, UInt<2>(2), _T_128) @[build/NutShell.fir.opt.mlir 6973:17]
    node _T_130 = mux(_T_19, UInt<2>(2), _T_129) @[build/NutShell.fir.opt.mlir 6975:17]
    node _T_131 = mux(_T_17, UInt<1>(0), _T_130) @[build/NutShell.fir.opt.mlir 6977:17]
    node _T_132 = mux(_T_15, UInt<3>(6), _T_131) @[build/NutShell.fir.opt.mlir 6979:17]
    node _T_133 = mux(_T_13, UInt<3>(6), _T_132) @[build/NutShell.fir.opt.mlir 6981:17]
    node _T_134 = mux(_T_11, UInt<3>(6), _T_133) @[build/NutShell.fir.opt.mlir 6983:17]
    node _T_135 = mux(_T_9, UInt<3>(6), _T_134) @[build/NutShell.fir.opt.mlir 6985:17]
    node rvcSrc1Type = mux(_T_7, UInt<4>(9), _T_135) @[build/NutShell.fir.opt.mlir 6987:22]
    node _T_136 = mux(_T_71, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6989:17]
    node _T_137 = mux(_T_69, UInt<3>(5), _T_136) @[build/NutShell.fir.opt.mlir 6991:17]
    node _T_138 = mux(_T_67, UInt<3>(5), _T_137) @[build/NutShell.fir.opt.mlir 6993:17]
    node _T_139 = mux(_T_65, UInt<1>(0), _T_138) @[build/NutShell.fir.opt.mlir 6995:17]
    node _T_140 = mux(_T_63, UInt<1>(0), _T_139) @[build/NutShell.fir.opt.mlir 6997:17]
    node _T_141 = mux(_T_61, UInt<1>(0), _T_140) @[build/NutShell.fir.opt.mlir 6999:17]
    node _T_142 = mux(_T_59, UInt<1>(0), _T_141) @[build/NutShell.fir.opt.mlir 7001:17]
    node _T_143 = mux(_T_57, UInt<1>(0), _T_142) @[build/NutShell.fir.opt.mlir 7003:17]
    node _T_144 = mux(_T_55, UInt<1>(0), _T_143) @[build/NutShell.fir.opt.mlir 7005:17]
    node _T_145 = mux(_T_53, UInt<1>(0), _T_144) @[build/NutShell.fir.opt.mlir 7007:17]
    node _T_146 = mux(_T_51, UInt<1>(0), _T_145) @[build/NutShell.fir.opt.mlir 7009:17]
    node _T_147 = mux(_T_49, UInt<1>(0), _T_146) @[build/NutShell.fir.opt.mlir 7011:17]
    node _T_148 = mux(_T_47, UInt<1>(0), _T_147) @[build/NutShell.fir.opt.mlir 7013:17]
    node _T_149 = mux(_T_45, UInt<3>(7), _T_148) @[build/NutShell.fir.opt.mlir 7015:17]
    node _T_150 = mux(_T_43, UInt<3>(7), _T_149) @[build/NutShell.fir.opt.mlir 7017:17]
    node _T_151 = mux(_T_41, UInt<3>(7), _T_150) @[build/NutShell.fir.opt.mlir 7019:17]
    node _T_152 = mux(_T_39, UInt<3>(7), _T_151) @[build/NutShell.fir.opt.mlir 7021:17]
    node _T_153 = mux(_T_37, UInt<3>(7), _T_152) @[build/NutShell.fir.opt.mlir 7023:17]
    node _T_154 = mux(_T_35, UInt<3>(7), _T_153) @[build/NutShell.fir.opt.mlir 7025:17]
    node _T_155 = mux(_T_33, UInt<1>(0), _T_154) @[build/NutShell.fir.opt.mlir 7027:17]
    node _T_156 = mux(_T_31, UInt<1>(0), _T_155) @[build/NutShell.fir.opt.mlir 7029:17]
    node _T_157 = mux(_T_29, UInt<1>(0), _T_156) @[build/NutShell.fir.opt.mlir 7031:17]
    node _T_158 = mux(_T_27, UInt<1>(0), _T_157) @[build/NutShell.fir.opt.mlir 7033:17]
    node _T_159 = mux(_T_25, UInt<1>(0), _T_158) @[build/NutShell.fir.opt.mlir 7035:17]
    node _T_160 = mux(_T_23, UInt<1>(0), _T_159) @[build/NutShell.fir.opt.mlir 7037:17]
    node _T_161 = mux(_T_21, UInt<1>(0), _T_160) @[build/NutShell.fir.opt.mlir 7039:17]
    node _T_162 = mux(_T_19, UInt<1>(0), _T_161) @[build/NutShell.fir.opt.mlir 7041:17]
    node _T_163 = mux(_T_17, UInt<1>(0), _T_162) @[build/NutShell.fir.opt.mlir 7043:17]
    node _T_164 = mux(_T_15, UInt<3>(7), _T_163) @[build/NutShell.fir.opt.mlir 7045:17]
    node _T_165 = mux(_T_13, UInt<3>(7), _T_164) @[build/NutShell.fir.opt.mlir 7047:17]
    node _T_166 = mux(_T_11, UInt<1>(0), _T_165) @[build/NutShell.fir.opt.mlir 7049:17]
    node _T_167 = mux(_T_9, UInt<1>(0), _T_166) @[build/NutShell.fir.opt.mlir 7051:17]
    node rvcSrc2Type = mux(_T_7, UInt<1>(0), _T_167) @[build/NutShell.fir.opt.mlir 7053:22]
    node _T_168 = mux(_T_71, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7055:17]
    node _T_169 = mux(_T_69, UInt<1>(0), _T_168) @[build/NutShell.fir.opt.mlir 7057:17]
    node _T_170 = mux(_T_67, UInt<2>(2), _T_169) @[build/NutShell.fir.opt.mlir 7059:17]
    node _T_171 = mux(_T_65, UInt<4>(8), _T_170) @[build/NutShell.fir.opt.mlir 7061:17]
    node _T_172 = mux(_T_63, UInt<1>(0), _T_171) @[build/NutShell.fir.opt.mlir 7063:17]
    node _T_173 = mux(_T_61, UInt<2>(2), _T_172) @[build/NutShell.fir.opt.mlir 7065:17]
    node _T_174 = mux(_T_59, UInt<1>(0), _T_173) @[build/NutShell.fir.opt.mlir 7067:17]
    node _T_175 = mux(_T_57, UInt<2>(2), _T_174) @[build/NutShell.fir.opt.mlir 7069:17]
    node _T_176 = mux(_T_55, UInt<2>(2), _T_175) @[build/NutShell.fir.opt.mlir 7071:17]
    node _T_177 = mux(_T_53, UInt<2>(2), _T_176) @[build/NutShell.fir.opt.mlir 7073:17]
    node _T_178 = mux(_T_51, UInt<1>(0), _T_177) @[build/NutShell.fir.opt.mlir 7075:17]
    node _T_179 = mux(_T_49, UInt<1>(0), _T_178) @[build/NutShell.fir.opt.mlir 7077:17]
    node _T_180 = mux(_T_47, UInt<1>(0), _T_179) @[build/NutShell.fir.opt.mlir 7079:17]
    node _T_181 = mux(_T_45, UInt<3>(6), _T_180) @[build/NutShell.fir.opt.mlir 7081:17]
    node _T_182 = mux(_T_43, UInt<3>(6), _T_181) @[build/NutShell.fir.opt.mlir 7083:17]
    node _T_183 = mux(_T_41, UInt<3>(6), _T_182) @[build/NutShell.fir.opt.mlir 7085:17]
    node _T_184 = mux(_T_39, UInt<3>(6), _T_183) @[build/NutShell.fir.opt.mlir 7087:17]
    node _T_185 = mux(_T_37, UInt<3>(6), _T_184) @[build/NutShell.fir.opt.mlir 7089:17]
    node _T_186 = mux(_T_35, UInt<3>(6), _T_185) @[build/NutShell.fir.opt.mlir 7091:17]
    node _T_187 = mux(_T_33, UInt<3>(6), _T_186) @[build/NutShell.fir.opt.mlir 7093:17]
    node _T_188 = mux(_T_31, UInt<3>(6), _T_187) @[build/NutShell.fir.opt.mlir 7095:17]
    node _T_189 = mux(_T_29, UInt<3>(6), _T_188) @[build/NutShell.fir.opt.mlir 7097:17]
    node _T_190 = mux(_T_27, UInt<2>(2), _T_189) @[build/NutShell.fir.opt.mlir 7099:17]
    node _T_191 = mux(_T_25, UInt<4>(9), _T_190) @[build/NutShell.fir.opt.mlir 7101:17]
    node _T_192 = mux(_T_23, UInt<2>(2), _T_191) @[build/NutShell.fir.opt.mlir 7103:17]
    node _T_193 = mux(_T_21, UInt<2>(2), _T_192) @[build/NutShell.fir.opt.mlir 7105:17]
    node _T_194 = mux(_T_19, UInt<2>(2), _T_193) @[build/NutShell.fir.opt.mlir 7107:17]
    node _T_195 = mux(_T_17, UInt<1>(0), _T_194) @[build/NutShell.fir.opt.mlir 7109:17]
    node _T_196 = mux(_T_15, UInt<1>(0), _T_195) @[build/NutShell.fir.opt.mlir 7111:17]
    node _T_197 = mux(_T_13, UInt<1>(0), _T_196) @[build/NutShell.fir.opt.mlir 7113:17]
    node _T_198 = mux(_T_11, UInt<3>(7), _T_197) @[build/NutShell.fir.opt.mlir 7115:17]
    node _T_199 = mux(_T_9, UInt<3>(7), _T_198) @[build/NutShell.fir.opt.mlir 7117:17]
    node rvcDestType = mux(_T_7, UInt<3>(7), _T_199) @[build/NutShell.fir.opt.mlir 7119:22]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 7121:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 7123:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 7125:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 7127:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 7129:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 7131:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 7133:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 7135:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 7137:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 7139:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 7141:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 7143:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 7145:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 7147:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 7149:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 7151:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 7153:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 7155:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 7157:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 7159:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 7161:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 7163:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 7165:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 7167:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 7169:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 7171:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 7173:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 7175:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 7177:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 7179:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 7181:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 7183:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 7185:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 7187:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 7189:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 7191:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 7193:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 7195:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 7197:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 7199:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 7201:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 7203:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 7205:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 7207:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 7209:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 7211:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 7213:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 7215:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 7217:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 7219:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 7221:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 7223:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 7225:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 7227:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 7229:7]
    connect io.out.bits.ctrl.fuType, fuType @[build/NutShell.fir.opt.mlir 7230:7]
    connect io.out.bits.ctrl.fuOpType, fuOpType @[build/NutShell.fir.opt.mlir 7231:7]
    node _src1Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7233:22]
    node _src1Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 7235:24]
    node _src1Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7237:24]
    node _src1Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7239:24]
    node _src1Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7241:24]
    node _src1Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7243:24]
    node _src1Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7245:24]
    node _src1Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 7247:24]
    node _src1Type_T_8 = mux(_src1Type_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7249:24]
    node _src1Type_T_9 = mux(_src1Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7251:24]
    node _src1Type_T_10 = mux(_src1Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7253:25]
    node _src1Type_T_11 = mux(_src1Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7255:25]
    node _src1Type_T_12 = mux(_src1Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7257:25]
    node _src1Type_T_13 = mux(_src1Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7259:25]
    node _src1Type_T_14 = mux(_src1Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7261:25]
    node _src1Type_T_15 = mux(_src1Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7263:25]
    node _src1Type_T_16 = or(_src1Type_T_8, _src1Type_T_9) @[build/NutShell.fir.opt.mlir 7265:25]
    node _src1Type_T_17 = or(_src1Type_T_16, _src1Type_T_10) @[build/NutShell.fir.opt.mlir 7267:25]
    node _src1Type_T_18 = or(_src1Type_T_17, _src1Type_T_11) @[build/NutShell.fir.opt.mlir 7269:25]
    node _src1Type_T_19 = or(_src1Type_T_18, _src1Type_T_12) @[build/NutShell.fir.opt.mlir 7271:25]
    node _src1Type_T_20 = or(_src1Type_T_19, _src1Type_T_13) @[build/NutShell.fir.opt.mlir 7273:25]
    node _src1Type_T_21 = or(_src1Type_T_20, _src1Type_T_14) @[build/NutShell.fir.opt.mlir 7275:25]
    node _src1Type_T_22 = or(_src1Type_T_21, _src1Type_T_15) @[build/NutShell.fir.opt.mlir 7277:25]
    wire src1Type : UInt<1> @[build/NutShell.fir.opt.mlir 7278:19]
    connect src1Type, _src1Type_T_22 @[build/NutShell.fir.opt.mlir 7279:7]
    node _src2Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7281:22]
    node _src2Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 7283:24]
    node _src2Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7285:24]
    node _src2Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7287:24]
    node _src2Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7289:24]
    node _src2Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7291:24]
    node _src2Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7293:24]
    node _src2Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 7295:24]
    node _src2Type_T_8 = mux(_src2Type_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7297:24]
    node _src2Type_T_9 = mux(_src2Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7299:24]
    node _src2Type_T_10 = mux(_src2Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7301:25]
    node _src2Type_T_11 = mux(_src2Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7303:25]
    node _src2Type_T_12 = mux(_src2Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7305:25]
    node _src2Type_T_13 = mux(_src2Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7307:25]
    node _src2Type_T_14 = mux(_src2Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7309:25]
    node _src2Type_T_15 = mux(_src2Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7311:25]
    node _src2Type_T_16 = or(_src2Type_T_8, _src2Type_T_9) @[build/NutShell.fir.opt.mlir 7313:25]
    node _src2Type_T_17 = or(_src2Type_T_16, _src2Type_T_10) @[build/NutShell.fir.opt.mlir 7315:25]
    node _src2Type_T_18 = or(_src2Type_T_17, _src2Type_T_11) @[build/NutShell.fir.opt.mlir 7317:25]
    node _src2Type_T_19 = or(_src2Type_T_18, _src2Type_T_12) @[build/NutShell.fir.opt.mlir 7319:25]
    node _src2Type_T_20 = or(_src2Type_T_19, _src2Type_T_13) @[build/NutShell.fir.opt.mlir 7321:25]
    node _src2Type_T_21 = or(_src2Type_T_20, _src2Type_T_14) @[build/NutShell.fir.opt.mlir 7323:25]
    node _src2Type_T_22 = or(_src2Type_T_21, _src2Type_T_15) @[build/NutShell.fir.opt.mlir 7325:25]
    wire src2Type : UInt<1> @[build/NutShell.fir.opt.mlir 7326:19]
    connect src2Type, _src2Type_T_22 @[build/NutShell.fir.opt.mlir 7327:7]
    node rs = bits(io.in.bits.instr, 19, 15) @[build/NutShell.fir.opt.mlir 7329:13]
    node rt = bits(io.in.bits.instr, 24, 20) @[build/NutShell.fir.opt.mlir 7331:13]
    node rd = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7333:13]
    node rs1 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7335:14]
    node rs2 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7337:14]
    node _rs1p_T = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 7339:18]
    node _rs1p_T_1 = eq(UInt<1>(0), _rs1p_T) @[build/NutShell.fir.opt.mlir 7341:20]
    node _rs1p_T_2 = eq(UInt<1>(1), _rs1p_T) @[build/NutShell.fir.opt.mlir 7343:20]
    node _rs1p_T_3 = eq(UInt<2>(2), _rs1p_T) @[build/NutShell.fir.opt.mlir 7345:20]
    node _rs1p_T_4 = eq(UInt<2>(3), _rs1p_T) @[build/NutShell.fir.opt.mlir 7347:20]
    node _rs1p_T_5 = eq(UInt<3>(4), _rs1p_T) @[build/NutShell.fir.opt.mlir 7349:20]
    node _rs1p_T_6 = eq(UInt<3>(5), _rs1p_T) @[build/NutShell.fir.opt.mlir 7351:20]
    node _rs1p_T_7 = eq(UInt<3>(6), _rs1p_T) @[build/NutShell.fir.opt.mlir 7353:20]
    node _rs1p_T_8 = eq(UInt<3>(7), _rs1p_T) @[build/NutShell.fir.opt.mlir 7355:20]
    node _rs1p_T_9 = mux(_rs1p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7357:20]
    node _rs1p_T_10 = mux(_rs1p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7359:21]
    node _rs1p_T_11 = mux(_rs1p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7361:21]
    node _rs1p_T_12 = mux(_rs1p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7363:21]
    node _rs1p_T_13 = mux(_rs1p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7365:21]
    node _rs1p_T_14 = mux(_rs1p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7367:21]
    node _rs1p_T_15 = mux(_rs1p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7369:21]
    node _rs1p_T_16 = mux(_rs1p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7371:21]
    node _rs1p_T_17 = or(_rs1p_T_9, _rs1p_T_10) @[build/NutShell.fir.opt.mlir 7373:21]
    node _rs1p_T_18 = or(_rs1p_T_17, _rs1p_T_11) @[build/NutShell.fir.opt.mlir 7375:21]
    node _rs1p_T_19 = or(_rs1p_T_18, _rs1p_T_12) @[build/NutShell.fir.opt.mlir 7377:21]
    node _rs1p_T_20 = or(_rs1p_T_19, _rs1p_T_13) @[build/NutShell.fir.opt.mlir 7379:21]
    node _rs1p_T_21 = or(_rs1p_T_20, _rs1p_T_14) @[build/NutShell.fir.opt.mlir 7381:21]
    node _rs1p_T_22 = or(_rs1p_T_21, _rs1p_T_15) @[build/NutShell.fir.opt.mlir 7383:21]
    node _rs1p_T_23 = or(_rs1p_T_22, _rs1p_T_16) @[build/NutShell.fir.opt.mlir 7385:21]
    wire rs1p : UInt<4> @[build/NutShell.fir.opt.mlir 7386:15]
    connect rs1p, _rs1p_T_23 @[build/NutShell.fir.opt.mlir 7387:7]
    node _rs2p_T = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 7389:18]
    node _rs2p_T_1 = eq(UInt<1>(0), _rs2p_T) @[build/NutShell.fir.opt.mlir 7391:20]
    node _rs2p_T_2 = eq(UInt<1>(1), _rs2p_T) @[build/NutShell.fir.opt.mlir 7393:20]
    node _rs2p_T_3 = eq(UInt<2>(2), _rs2p_T) @[build/NutShell.fir.opt.mlir 7395:20]
    node _rs2p_T_4 = eq(UInt<2>(3), _rs2p_T) @[build/NutShell.fir.opt.mlir 7397:20]
    node _rs2p_T_5 = eq(UInt<3>(4), _rs2p_T) @[build/NutShell.fir.opt.mlir 7399:20]
    node _rs2p_T_6 = eq(UInt<3>(5), _rs2p_T) @[build/NutShell.fir.opt.mlir 7401:20]
    node _rs2p_T_7 = eq(UInt<3>(6), _rs2p_T) @[build/NutShell.fir.opt.mlir 7403:20]
    node _rs2p_T_8 = eq(UInt<3>(7), _rs2p_T) @[build/NutShell.fir.opt.mlir 7405:20]
    node _rs2p_T_9 = mux(_rs2p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7407:20]
    node _rs2p_T_10 = mux(_rs2p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7409:21]
    node _rs2p_T_11 = mux(_rs2p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7411:21]
    node _rs2p_T_12 = mux(_rs2p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7413:21]
    node _rs2p_T_13 = mux(_rs2p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7415:21]
    node _rs2p_T_14 = mux(_rs2p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7417:21]
    node _rs2p_T_15 = mux(_rs2p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7419:21]
    node _rs2p_T_16 = mux(_rs2p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7421:21]
    node _rs2p_T_17 = or(_rs2p_T_9, _rs2p_T_10) @[build/NutShell.fir.opt.mlir 7423:21]
    node _rs2p_T_18 = or(_rs2p_T_17, _rs2p_T_11) @[build/NutShell.fir.opt.mlir 7425:21]
    node _rs2p_T_19 = or(_rs2p_T_18, _rs2p_T_12) @[build/NutShell.fir.opt.mlir 7427:21]
    node _rs2p_T_20 = or(_rs2p_T_19, _rs2p_T_13) @[build/NutShell.fir.opt.mlir 7429:21]
    node _rs2p_T_21 = or(_rs2p_T_20, _rs2p_T_14) @[build/NutShell.fir.opt.mlir 7431:21]
    node _rs2p_T_22 = or(_rs2p_T_21, _rs2p_T_15) @[build/NutShell.fir.opt.mlir 7433:21]
    node _rs2p_T_23 = or(_rs2p_T_22, _rs2p_T_16) @[build/NutShell.fir.opt.mlir 7435:21]
    wire rs2p : UInt<4> @[build/NutShell.fir.opt.mlir 7436:15]
    connect rs2p, _rs2p_T_23 @[build/NutShell.fir.opt.mlir 7437:7]
    node _rvc_shamt_T = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7439:23]
    node _rvc_shamt_T_1 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7441:25]
    node rvc_shamt = cat(_rvc_shamt_T, _rvc_shamt_T_1) @[build/NutShell.fir.opt.mlir 7443:20]
    node _rvc_src1_T = eq(UInt<1>(0), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7445:22]
    node _rvc_src1_T_1 = eq(UInt<2>(3), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7447:24]
    node _rvc_src1_T_2 = eq(UInt<1>(1), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7449:24]
    node _rvc_src1_T_3 = eq(UInt<2>(2), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7451:24]
    node _rvc_src1_T_4 = eq(UInt<3>(4), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7453:24]
    node _rvc_src1_T_5 = eq(UInt<3>(5), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7455:24]
    node _rvc_src1_T_6 = eq(UInt<3>(6), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7457:24]
    node _rvc_src1_T_7 = eq(UInt<3>(7), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7459:24]
    node _rvc_src1_T_8 = eq(UInt<4>(8), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7461:24]
    node _rvc_src1_T_9 = eq(UInt<4>(9), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7463:24]
    node _rvc_src1_T_10 = mux(_rvc_src1_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7465:25]
    node _rvc_src1_T_11 = mux(_rvc_src1_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7467:25]
    node _rvc_src1_T_12 = mux(_rvc_src1_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7469:25]
    node _rvc_src1_T_13 = mux(_rvc_src1_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7471:25]
    node _rvc_src1_T_14 = mux(_rvc_src1_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7473:25]
    node _rvc_src1_T_15 = mux(_rvc_src1_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7475:25]
    node _rvc_src1_T_16 = mux(_rvc_src1_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7477:25]
    node _rvc_src1_T_17 = mux(_rvc_src1_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7479:25]
    node _rvc_src1_T_18 = mux(_rvc_src1_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7481:25]
    node _rvc_src1_T_19 = mux(_rvc_src1_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7483:25]
    node _rvc_src1_T_20 = or(_rvc_src1_T_10, _rvc_src1_T_11) @[build/NutShell.fir.opt.mlir 7485:25]
    node _rvc_src1_T_21 = or(_rvc_src1_T_20, _rvc_src1_T_12) @[build/NutShell.fir.opt.mlir 7487:25]
    node _rvc_src1_T_22 = or(_rvc_src1_T_21, _rvc_src1_T_13) @[build/NutShell.fir.opt.mlir 7489:25]
    node _rvc_src1_T_23 = or(_rvc_src1_T_22, _rvc_src1_T_14) @[build/NutShell.fir.opt.mlir 7491:25]
    node _rvc_src1_T_24 = or(_rvc_src1_T_23, _rvc_src1_T_15) @[build/NutShell.fir.opt.mlir 7493:25]
    node _rvc_src1_T_25 = or(_rvc_src1_T_24, _rvc_src1_T_16) @[build/NutShell.fir.opt.mlir 7495:25]
    node _rvc_src1_T_26 = or(_rvc_src1_T_25, _rvc_src1_T_17) @[build/NutShell.fir.opt.mlir 7497:25]
    node _rvc_src1_T_27 = or(_rvc_src1_T_26, _rvc_src1_T_18) @[build/NutShell.fir.opt.mlir 7499:25]
    node _rvc_src1_T_28 = or(_rvc_src1_T_27, _rvc_src1_T_19) @[build/NutShell.fir.opt.mlir 7501:25]
    wire rvc_src1 : UInt<5> @[build/NutShell.fir.opt.mlir 7502:19]
    connect rvc_src1, _rvc_src1_T_28 @[build/NutShell.fir.opt.mlir 7503:7]
    node _rvc_src2_T = eq(UInt<1>(0), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7505:22]
    node _rvc_src2_T_1 = eq(UInt<2>(3), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7507:24]
    node _rvc_src2_T_2 = eq(UInt<1>(1), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7509:24]
    node _rvc_src2_T_3 = eq(UInt<2>(2), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7511:24]
    node _rvc_src2_T_4 = eq(UInt<3>(4), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7513:24]
    node _rvc_src2_T_5 = eq(UInt<3>(5), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7515:24]
    node _rvc_src2_T_6 = eq(UInt<3>(6), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7517:24]
    node _rvc_src2_T_7 = eq(UInt<3>(7), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7519:24]
    node _rvc_src2_T_8 = eq(UInt<4>(8), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7521:24]
    node _rvc_src2_T_9 = eq(UInt<4>(9), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7523:24]
    node _rvc_src2_T_10 = mux(_rvc_src2_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7525:25]
    node _rvc_src2_T_11 = mux(_rvc_src2_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7527:25]
    node _rvc_src2_T_12 = mux(_rvc_src2_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7529:25]
    node _rvc_src2_T_13 = mux(_rvc_src2_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7531:25]
    node _rvc_src2_T_14 = mux(_rvc_src2_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7533:25]
    node _rvc_src2_T_15 = mux(_rvc_src2_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7535:25]
    node _rvc_src2_T_16 = mux(_rvc_src2_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7537:25]
    node _rvc_src2_T_17 = mux(_rvc_src2_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7539:25]
    node _rvc_src2_T_18 = mux(_rvc_src2_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7541:25]
    node _rvc_src2_T_19 = mux(_rvc_src2_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7543:25]
    node _rvc_src2_T_20 = or(_rvc_src2_T_10, _rvc_src2_T_11) @[build/NutShell.fir.opt.mlir 7545:25]
    node _rvc_src2_T_21 = or(_rvc_src2_T_20, _rvc_src2_T_12) @[build/NutShell.fir.opt.mlir 7547:25]
    node _rvc_src2_T_22 = or(_rvc_src2_T_21, _rvc_src2_T_13) @[build/NutShell.fir.opt.mlir 7549:25]
    node _rvc_src2_T_23 = or(_rvc_src2_T_22, _rvc_src2_T_14) @[build/NutShell.fir.opt.mlir 7551:25]
    node _rvc_src2_T_24 = or(_rvc_src2_T_23, _rvc_src2_T_15) @[build/NutShell.fir.opt.mlir 7553:25]
    node _rvc_src2_T_25 = or(_rvc_src2_T_24, _rvc_src2_T_16) @[build/NutShell.fir.opt.mlir 7555:25]
    node _rvc_src2_T_26 = or(_rvc_src2_T_25, _rvc_src2_T_17) @[build/NutShell.fir.opt.mlir 7557:25]
    node _rvc_src2_T_27 = or(_rvc_src2_T_26, _rvc_src2_T_18) @[build/NutShell.fir.opt.mlir 7559:25]
    node _rvc_src2_T_28 = or(_rvc_src2_T_27, _rvc_src2_T_19) @[build/NutShell.fir.opt.mlir 7561:25]
    wire rvc_src2 : UInt<5> @[build/NutShell.fir.opt.mlir 7562:19]
    connect rvc_src2, _rvc_src2_T_28 @[build/NutShell.fir.opt.mlir 7563:7]
    node _rvc_dest_T = eq(UInt<1>(0), rvcDestType) @[build/NutShell.fir.opt.mlir 7565:22]
    node _rvc_dest_T_1 = eq(UInt<2>(3), rvcDestType) @[build/NutShell.fir.opt.mlir 7567:24]
    node _rvc_dest_T_2 = eq(UInt<1>(1), rvcDestType) @[build/NutShell.fir.opt.mlir 7569:24]
    node _rvc_dest_T_3 = eq(UInt<2>(2), rvcDestType) @[build/NutShell.fir.opt.mlir 7571:24]
    node _rvc_dest_T_4 = eq(UInt<3>(4), rvcDestType) @[build/NutShell.fir.opt.mlir 7573:24]
    node _rvc_dest_T_5 = eq(UInt<3>(5), rvcDestType) @[build/NutShell.fir.opt.mlir 7575:24]
    node _rvc_dest_T_6 = eq(UInt<3>(6), rvcDestType) @[build/NutShell.fir.opt.mlir 7577:24]
    node _rvc_dest_T_7 = eq(UInt<3>(7), rvcDestType) @[build/NutShell.fir.opt.mlir 7579:24]
    node _rvc_dest_T_8 = eq(UInt<4>(8), rvcDestType) @[build/NutShell.fir.opt.mlir 7581:24]
    node _rvc_dest_T_9 = eq(UInt<4>(9), rvcDestType) @[build/NutShell.fir.opt.mlir 7583:24]
    node _rvc_dest_T_10 = mux(_rvc_dest_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7585:25]
    node _rvc_dest_T_11 = mux(_rvc_dest_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7587:25]
    node _rvc_dest_T_12 = mux(_rvc_dest_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7589:25]
    node _rvc_dest_T_13 = mux(_rvc_dest_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7591:25]
    node _rvc_dest_T_14 = mux(_rvc_dest_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7593:25]
    node _rvc_dest_T_15 = mux(_rvc_dest_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7595:25]
    node _rvc_dest_T_16 = mux(_rvc_dest_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7597:25]
    node _rvc_dest_T_17 = mux(_rvc_dest_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7599:25]
    node _rvc_dest_T_18 = mux(_rvc_dest_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7601:25]
    node _rvc_dest_T_19 = mux(_rvc_dest_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7603:25]
    node _rvc_dest_T_20 = or(_rvc_dest_T_10, _rvc_dest_T_11) @[build/NutShell.fir.opt.mlir 7605:25]
    node _rvc_dest_T_21 = or(_rvc_dest_T_20, _rvc_dest_T_12) @[build/NutShell.fir.opt.mlir 7607:25]
    node _rvc_dest_T_22 = or(_rvc_dest_T_21, _rvc_dest_T_13) @[build/NutShell.fir.opt.mlir 7609:25]
    node _rvc_dest_T_23 = or(_rvc_dest_T_22, _rvc_dest_T_14) @[build/NutShell.fir.opt.mlir 7611:25]
    node _rvc_dest_T_24 = or(_rvc_dest_T_23, _rvc_dest_T_15) @[build/NutShell.fir.opt.mlir 7613:25]
    node _rvc_dest_T_25 = or(_rvc_dest_T_24, _rvc_dest_T_16) @[build/NutShell.fir.opt.mlir 7615:25]
    node _rvc_dest_T_26 = or(_rvc_dest_T_25, _rvc_dest_T_17) @[build/NutShell.fir.opt.mlir 7617:25]
    node _rvc_dest_T_27 = or(_rvc_dest_T_26, _rvc_dest_T_18) @[build/NutShell.fir.opt.mlir 7619:25]
    node _rvc_dest_T_28 = or(_rvc_dest_T_27, _rvc_dest_T_19) @[build/NutShell.fir.opt.mlir 7621:25]
    wire rvc_dest : UInt<5> @[build/NutShell.fir.opt.mlir 7622:19]
    connect rvc_dest, _rvc_dest_T_28 @[build/NutShell.fir.opt.mlir 7623:7]
    node rfSrc1 = mux(isRVC, rvc_src1, rs) @[build/NutShell.fir.opt.mlir 7625:17]
    node rfSrc2 = mux(isRVC, rvc_src2, rt) @[build/NutShell.fir.opt.mlir 7627:17]
    node rfDest = mux(isRVC, rvc_dest, rd) @[build/NutShell.fir.opt.mlir 7629:17]
    node _io_out_bits_ctrl_rfSrc1_T = eq(src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 7631:37]
    node _io_out_bits_ctrl_rfSrc1_T_1 = mux(_io_out_bits_ctrl_rfSrc1_T, UInt<1>(0), rfSrc1) @[build/NutShell.fir.opt.mlir 7633:39]
    connect io.out.bits.ctrl.rfSrc1, _io_out_bits_ctrl_rfSrc1_T_1 @[build/NutShell.fir.opt.mlir 7634:7]
    node _io_out_bits_ctrl_rfSrc2_T = eq(src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7636:37]
    node _io_out_bits_ctrl_rfSrc2_T_1 = mux(_io_out_bits_ctrl_rfSrc2_T, rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7638:39]
    connect io.out.bits.ctrl.rfSrc2, _io_out_bits_ctrl_rfSrc2_T_1 @[build/NutShell.fir.opt.mlir 7639:7]
    node _io_out_bits_ctrl_rfWen_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 7641:36]
    connect io.out.bits.ctrl.rfWen, _io_out_bits_ctrl_rfWen_T @[build/NutShell.fir.opt.mlir 7642:7]
    node _io_out_bits_ctrl_rfDest_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 7644:37]
    node _io_out_bits_ctrl_rfDest_T_1 = mux(_io_out_bits_ctrl_rfDest_T, rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7646:39]
    connect io.out.bits.ctrl.rfDest, _io_out_bits_ctrl_rfDest_T_1 @[build/NutShell.fir.opt.mlir 7647:7]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 7649:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 7651:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 7653:7]
    node _imm_T = bits(io.in.bits.instr, 31, 20) @[build/NutShell.fir.opt.mlir 7655:17]
    node imm_signBit = bits(_imm_T, 11, 11) @[build/NutShell.fir.opt.mlir 7657:22]
    node _imm_T_1 = mux(imm_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7661:19]
    node _imm_T_2 = cat(_imm_T_1, _imm_T) @[build/NutShell.fir.opt.mlir 7663:19]
    node _imm_T_3 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 7665:19]
    node _imm_T_4 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7667:19]
    node _imm_T_5 = cat(_imm_T_3, _imm_T_4) @[build/NutShell.fir.opt.mlir 7669:19]
    node imm_signBit_1 = bits(_imm_T_5, 11, 11) @[build/NutShell.fir.opt.mlir 7671:24]
    node _imm_T_6 = mux(imm_signBit_1, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7673:19]
    node _imm_T_7 = cat(_imm_T_6, _imm_T_5) @[build/NutShell.fir.opt.mlir 7675:19]
    node _imm_T_8 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 7677:19]
    node _imm_T_9 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7679:19]
    node _imm_T_10 = cat(_imm_T_8, _imm_T_9) @[build/NutShell.fir.opt.mlir 7681:20]
    node imm_signBit_2 = bits(_imm_T_10, 11, 11) @[build/NutShell.fir.opt.mlir 7683:24]
    node _imm_T_11 = mux(imm_signBit_2, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7685:20]
    node _imm_T_12 = cat(_imm_T_11, _imm_T_10) @[build/NutShell.fir.opt.mlir 7687:20]
    node _imm_T_13 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 7689:20]
    node _imm_T_14 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 7691:20]
    node _imm_T_15 = bits(io.in.bits.instr, 30, 25) @[build/NutShell.fir.opt.mlir 7693:20]
    node _imm_T_16 = bits(io.in.bits.instr, 11, 8) @[build/NutShell.fir.opt.mlir 7695:20]
    node imm_lo = cat(_imm_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7697:17]
    node imm_hi_hi = cat(_imm_T_13, _imm_T_14) @[build/NutShell.fir.opt.mlir 7699:20]
    node imm_hi = cat(imm_hi_hi, _imm_T_15) @[build/NutShell.fir.opt.mlir 7701:17]
    node _imm_T_17 = cat(imm_hi, imm_lo) @[build/NutShell.fir.opt.mlir 7703:20]
    node imm_signBit_3 = bits(_imm_T_17, 12, 12) @[build/NutShell.fir.opt.mlir 7705:24]
    node _imm_T_18 = mux(imm_signBit_3, UInt<51>(2251799813685247), UInt<51>(0)) @[build/NutShell.fir.opt.mlir 7709:20]
    node _imm_T_19 = cat(_imm_T_18, _imm_T_17) @[build/NutShell.fir.opt.mlir 7711:20]
    node _imm_T_20 = bits(io.in.bits.instr, 31, 12) @[build/NutShell.fir.opt.mlir 7713:20]
    node _imm_T_21 = cat(_imm_T_20, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 7716:20]
    node imm_signBit_4 = bits(_imm_T_21, 31, 31) @[build/NutShell.fir.opt.mlir 7718:24]
    node _imm_T_22 = mux(imm_signBit_4, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 7721:20]
    node _imm_T_23 = cat(_imm_T_22, _imm_T_21) @[build/NutShell.fir.opt.mlir 7723:20]
    node _imm_T_24 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 7725:20]
    node _imm_T_25 = bits(io.in.bits.instr, 19, 12) @[build/NutShell.fir.opt.mlir 7727:20]
    node _imm_T_26 = bits(io.in.bits.instr, 20, 20) @[build/NutShell.fir.opt.mlir 7729:20]
    node _imm_T_27 = bits(io.in.bits.instr, 30, 21) @[build/NutShell.fir.opt.mlir 7731:20]
    node imm_lo_1 = cat(_imm_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7733:19]
    node imm_hi_hi_1 = cat(_imm_T_24, _imm_T_25) @[build/NutShell.fir.opt.mlir 7735:22]
    node imm_hi_1 = cat(imm_hi_hi_1, _imm_T_26) @[build/NutShell.fir.opt.mlir 7737:19]
    node _imm_T_28 = cat(imm_hi_1, imm_lo_1) @[build/NutShell.fir.opt.mlir 7739:20]
    node imm_signBit_5 = bits(_imm_T_28, 20, 20) @[build/NutShell.fir.opt.mlir 7741:24]
    node _imm_T_29 = mux(imm_signBit_5, UInt<43>(8796093022207), UInt<43>(0)) @[build/NutShell.fir.opt.mlir 7745:20]
    node _imm_T_30 = cat(_imm_T_29, _imm_T_28) @[build/NutShell.fir.opt.mlir 7747:20]
    node _imm_T_31 = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7749:20]
    node _imm_T_32 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7751:20]
    node _imm_T_33 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7753:20]
    node _imm_T_34 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7755:20]
    node _imm_T_35 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7757:20]
    node _imm_T_36 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7759:20]
    node _imm_T_37 = mux(_imm_T_31, _imm_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7761:20]
    node _imm_T_38 = mux(_imm_T_32, _imm_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7763:20]
    node _imm_T_39 = mux(_imm_T_33, _imm_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7765:20]
    node _imm_T_40 = mux(_imm_T_34, _imm_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7767:20]
    node _imm_T_41 = mux(_imm_T_35, _imm_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7769:20]
    node _imm_T_42 = mux(_imm_T_36, _imm_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7771:20]
    node _imm_T_43 = or(_imm_T_37, _imm_T_38) @[build/NutShell.fir.opt.mlir 7773:20]
    node _imm_T_44 = or(_imm_T_43, _imm_T_39) @[build/NutShell.fir.opt.mlir 7775:20]
    node _imm_T_45 = or(_imm_T_44, _imm_T_40) @[build/NutShell.fir.opt.mlir 7777:20]
    node _imm_T_46 = or(_imm_T_45, _imm_T_41) @[build/NutShell.fir.opt.mlir 7779:20]
    node _imm_T_47 = or(_imm_T_46, _imm_T_42) @[build/NutShell.fir.opt.mlir 7781:20]
    wire imm : UInt<64> @[build/NutShell.fir.opt.mlir 7782:14]
    connect imm, _imm_T_47 @[build/NutShell.fir.opt.mlir 7783:7]
    node _immrvc_T = bits(io.in.bits.instr, 3, 2) @[build/NutShell.fir.opt.mlir 7785:20]
    node _immrvc_T_1 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7787:22]
    node _immrvc_T_2 = bits(io.in.bits.instr, 6, 4) @[build/NutShell.fir.opt.mlir 7789:22]
    node immrvc_lo = cat(_immrvc_T_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7792:20]
    node immrvc_hi = cat(_immrvc_T, _immrvc_T_1) @[build/NutShell.fir.opt.mlir 7794:20]
    node _immrvc_T_3 = cat(immrvc_hi, immrvc_lo) @[build/NutShell.fir.opt.mlir 7796:22]
    node _immrvc_T_4 = cat(UInt<56>(0), _immrvc_T_3) @[build/NutShell.fir.opt.mlir 7799:22]
    node _immrvc_T_5 = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 7801:22]
    node _immrvc_T_6 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7803:22]
    node _immrvc_T_7 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7805:22]
    node immrvc_lo_1 = cat(_immrvc_T_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7808:22]
    node immrvc_hi_1 = cat(_immrvc_T_5, _immrvc_T_6) @[build/NutShell.fir.opt.mlir 7810:22]
    node _immrvc_T_8 = cat(immrvc_hi_1, immrvc_lo_1) @[build/NutShell.fir.opt.mlir 7812:22]
    node _immrvc_T_9 = cat(UInt<55>(0), _immrvc_T_8) @[build/NutShell.fir.opt.mlir 7815:22]
    node _immrvc_T_10 = bits(io.in.bits.instr, 8, 7) @[build/NutShell.fir.opt.mlir 7817:23]
    node _immrvc_T_11 = bits(io.in.bits.instr, 12, 9) @[build/NutShell.fir.opt.mlir 7819:23]
    node immrvc_hi_2 = cat(_immrvc_T_10, _immrvc_T_11) @[build/NutShell.fir.opt.mlir 7821:22]
    node _immrvc_T_12 = cat(immrvc_hi_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7823:23]
    node _immrvc_T_13 = cat(UInt<56>(0), _immrvc_T_12) @[build/NutShell.fir.opt.mlir 7825:23]
    node _immrvc_T_14 = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 7827:23]
    node _immrvc_T_15 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7829:23]
    node immrvc_hi_3 = cat(_immrvc_T_14, _immrvc_T_15) @[build/NutShell.fir.opt.mlir 7831:22]
    node _immrvc_T_16 = cat(immrvc_hi_3, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7833:23]
    node _immrvc_T_17 = cat(UInt<55>(0), _immrvc_T_16) @[build/NutShell.fir.opt.mlir 7835:23]
    node _immrvc_T_18 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 7837:23]
    node _immrvc_T_19 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7839:23]
    node _immrvc_T_20 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7841:23]
    node immrvc_lo_2 = cat(_immrvc_T_20, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7843:22]
    node immrvc_hi_4 = cat(_immrvc_T_18, _immrvc_T_19) @[build/NutShell.fir.opt.mlir 7845:22]
    node _immrvc_T_21 = cat(immrvc_hi_4, immrvc_lo_2) @[build/NutShell.fir.opt.mlir 7847:23]
    node _immrvc_T_22 = cat(UInt<57>(0), _immrvc_T_21) @[build/NutShell.fir.opt.mlir 7850:23]
    node _immrvc_T_23 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7852:23]
    node _immrvc_T_24 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7854:23]
    node immrvc_hi_5 = cat(_immrvc_T_23, _immrvc_T_24) @[build/NutShell.fir.opt.mlir 7856:22]
    node _immrvc_T_25 = cat(immrvc_hi_5, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7858:23]
    node _immrvc_T_26 = cat(UInt<56>(0), _immrvc_T_25) @[build/NutShell.fir.opt.mlir 7860:23]
    node _immrvc_T_27 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 7862:23]
    node _immrvc_T_28 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7864:23]
    node _immrvc_T_29 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7866:23]
    node immrvc_lo_3 = cat(_immrvc_T_29, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7868:22]
    node immrvc_hi_6 = cat(_immrvc_T_27, _immrvc_T_28) @[build/NutShell.fir.opt.mlir 7870:22]
    node _immrvc_T_30 = cat(immrvc_hi_6, immrvc_lo_3) @[build/NutShell.fir.opt.mlir 7872:23]
    node _immrvc_T_31 = cat(UInt<57>(0), _immrvc_T_30) @[build/NutShell.fir.opt.mlir 7874:23]
    node _immrvc_T_32 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7876:23]
    node _immrvc_T_33 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7878:23]
    node immrvc_hi_7 = cat(_immrvc_T_32, _immrvc_T_33) @[build/NutShell.fir.opt.mlir 7880:22]
    node _immrvc_T_34 = cat(immrvc_hi_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7882:23]
    node _immrvc_T_35 = cat(UInt<56>(0), _immrvc_T_34) @[build/NutShell.fir.opt.mlir 7884:23]
    node _immrvc_T_36 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7886:23]
    node _immrvc_T_37 = bits(io.in.bits.instr, 8, 8) @[build/NutShell.fir.opt.mlir 7888:23]
    node _immrvc_T_38 = bits(io.in.bits.instr, 10, 9) @[build/NutShell.fir.opt.mlir 7890:23]
    node _immrvc_T_39 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7892:23]
    node _immrvc_T_40 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 7894:23]
    node _immrvc_T_41 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 7896:23]
    node _immrvc_T_42 = bits(io.in.bits.instr, 11, 11) @[build/NutShell.fir.opt.mlir 7898:23]
    node _immrvc_T_43 = bits(io.in.bits.instr, 5, 3) @[build/NutShell.fir.opt.mlir 7900:23]
    node immrvc_lo_lo = cat(_immrvc_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7902:23]
    node immrvc_lo_hi = cat(_immrvc_T_41, _immrvc_T_42) @[build/NutShell.fir.opt.mlir 7904:23]
    node immrvc_lo_4 = cat(immrvc_lo_hi, immrvc_lo_lo) @[build/NutShell.fir.opt.mlir 7906:22]
    node immrvc_hi_lo = cat(_immrvc_T_39, _immrvc_T_40) @[build/NutShell.fir.opt.mlir 7908:23]
    node immrvc_hi_hi_hi = cat(_immrvc_T_36, _immrvc_T_37) @[build/NutShell.fir.opt.mlir 7910:26]
    node immrvc_hi_hi = cat(immrvc_hi_hi_hi, _immrvc_T_38) @[build/NutShell.fir.opt.mlir 7912:23]
    node immrvc_hi_8 = cat(immrvc_hi_hi, immrvc_hi_lo) @[build/NutShell.fir.opt.mlir 7914:22]
    node _immrvc_T_44 = cat(immrvc_hi_8, immrvc_lo_4) @[build/NutShell.fir.opt.mlir 7916:23]
    node immrvc_signBit = bits(_immrvc_T_44, 11, 11) @[build/NutShell.fir.opt.mlir 7918:25]
    node _immrvc_T_45 = mux(immrvc_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7920:23]
    node _immrvc_T_46 = cat(_immrvc_T_45, _immrvc_T_44) @[build/NutShell.fir.opt.mlir 7922:23]
    node _immrvc_T_47 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7924:23]
    node _immrvc_T_48 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7926:23]
    node _immrvc_T_49 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 7928:23]
    node _immrvc_T_50 = bits(io.in.bits.instr, 11, 10) @[build/NutShell.fir.opt.mlir 7930:23]
    node _immrvc_T_51 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 7932:23]
    node immrvc_lo_hi_1 = cat(_immrvc_T_50, _immrvc_T_51) @[build/NutShell.fir.opt.mlir 7934:25]
    node immrvc_lo_5 = cat(immrvc_lo_hi_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7936:22]
    node immrvc_hi_hi_1 = cat(_immrvc_T_47, _immrvc_T_48) @[build/NutShell.fir.opt.mlir 7938:25]
    node immrvc_hi_9 = cat(immrvc_hi_hi_1, _immrvc_T_49) @[build/NutShell.fir.opt.mlir 7940:22]
    node _immrvc_T_52 = cat(immrvc_hi_9, immrvc_lo_5) @[build/NutShell.fir.opt.mlir 7942:23]
    node immrvc_signBit_1 = bits(_immrvc_T_52, 8, 8) @[build/NutShell.fir.opt.mlir 7944:27]
    node _immrvc_T_53 = mux(immrvc_signBit_1, UInt<55>(36028797018963967), UInt<55>(0)) @[build/NutShell.fir.opt.mlir 7947:23]
    node _immrvc_T_54 = cat(_immrvc_T_53, _immrvc_T_52) @[build/NutShell.fir.opt.mlir 7949:23]
    node _immrvc_T_55 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7951:23]
    node _immrvc_T_56 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7953:23]
    node _immrvc_T_57 = cat(_immrvc_T_55, _immrvc_T_56) @[build/NutShell.fir.opt.mlir 7955:23]
    node immrvc_signBit_2 = bits(_immrvc_T_57, 5, 5) @[build/NutShell.fir.opt.mlir 7957:27]
    node _immrvc_T_58 = mux(immrvc_signBit_2, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 7961:23]
    node _immrvc_T_59 = cat(_immrvc_T_58, _immrvc_T_57) @[build/NutShell.fir.opt.mlir 7963:23]
    node _immrvc_T_60 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7965:23]
    node _immrvc_T_61 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7967:23]
    node immrvc_hi_10 = cat(_immrvc_T_60, _immrvc_T_61) @[build/NutShell.fir.opt.mlir 7969:23]
    node _immrvc_T_62 = cat(immrvc_hi_10, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 7971:23]
    node immrvc_signBit_3 = bits(_immrvc_T_62, 17, 17) @[build/NutShell.fir.opt.mlir 7973:27]
    node _immrvc_T_63 = mux(immrvc_signBit_3, UInt<46>(70368744177663), UInt<46>(0)) @[build/NutShell.fir.opt.mlir 7977:23]
    node _immrvc_T_64 = cat(_immrvc_T_63, _immrvc_T_62) @[build/NutShell.fir.opt.mlir 7979:23]
    node _immrvc_T_65 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7981:23]
    node _immrvc_T_66 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7983:23]
    node _immrvc_T_67 = cat(_immrvc_T_65, _immrvc_T_66) @[build/NutShell.fir.opt.mlir 7985:23]
    node immrvc_signBit_4 = bits(_immrvc_T_67, 5, 5) @[build/NutShell.fir.opt.mlir 7987:27]
    node _immrvc_T_68 = mux(immrvc_signBit_4, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 7989:23]
    node _immrvc_T_69 = cat(_immrvc_T_68, _immrvc_T_67) @[build/NutShell.fir.opt.mlir 7991:23]
    node _immrvc_T_70 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7993:23]
    node _immrvc_T_71 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 7995:23]
    node _immrvc_T_72 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 7997:23]
    node _immrvc_T_73 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 7999:23]
    node _immrvc_T_74 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 8001:23]
    node immrvc_lo_hi_2 = cat(_immrvc_T_73, _immrvc_T_74) @[build/NutShell.fir.opt.mlir 8003:25]
    node immrvc_lo_6 = cat(immrvc_lo_hi_2, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 8006:22]
    node immrvc_hi_hi_2 = cat(_immrvc_T_70, _immrvc_T_71) @[build/NutShell.fir.opt.mlir 8008:25]
    node immrvc_hi_11 = cat(immrvc_hi_hi_2, _immrvc_T_72) @[build/NutShell.fir.opt.mlir 8010:23]
    node _immrvc_T_75 = cat(immrvc_hi_11, immrvc_lo_6) @[build/NutShell.fir.opt.mlir 8012:23]
    node immrvc_signBit_5 = bits(_immrvc_T_75, 9, 9) @[build/NutShell.fir.opt.mlir 8014:27]
    node _immrvc_T_76 = mux(immrvc_signBit_5, UInt<54>(18014398509481983), UInt<54>(0)) @[build/NutShell.fir.opt.mlir 8018:23]
    node _immrvc_T_77 = cat(_immrvc_T_76, _immrvc_T_75) @[build/NutShell.fir.opt.mlir 8020:23]
    node _immrvc_T_78 = bits(io.in.bits.instr, 10, 7) @[build/NutShell.fir.opt.mlir 8022:23]
    node _immrvc_T_79 = bits(io.in.bits.instr, 12, 11) @[build/NutShell.fir.opt.mlir 8024:23]
    node _immrvc_T_80 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 8026:23]
    node _immrvc_T_81 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 8028:23]
    node immrvc_lo_7 = cat(_immrvc_T_81, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 8030:22]
    node immrvc_hi_hi_3 = cat(_immrvc_T_78, _immrvc_T_79) @[build/NutShell.fir.opt.mlir 8032:25]
    node immrvc_hi_12 = cat(immrvc_hi_hi_3, _immrvc_T_80) @[build/NutShell.fir.opt.mlir 8034:23]
    node _immrvc_T_82 = cat(immrvc_hi_12, immrvc_lo_7) @[build/NutShell.fir.opt.mlir 8036:23]
    node _immrvc_T_83 = cat(UInt<54>(0), _immrvc_T_82) @[build/NutShell.fir.opt.mlir 8038:23]
    node _immrvc_T_84 = eq(UInt<5>(16), rvcImmType) @[build/NutShell.fir.opt.mlir 8040:23]
    node _immrvc_T_85 = eq(UInt<1>(0), rvcImmType) @[build/NutShell.fir.opt.mlir 8042:23]
    node _immrvc_T_86 = eq(UInt<1>(1), rvcImmType) @[build/NutShell.fir.opt.mlir 8044:23]
    node _immrvc_T_87 = eq(UInt<2>(2), rvcImmType) @[build/NutShell.fir.opt.mlir 8046:23]
    node _immrvc_T_88 = eq(UInt<2>(3), rvcImmType) @[build/NutShell.fir.opt.mlir 8048:23]
    node _immrvc_T_89 = eq(UInt<3>(4), rvcImmType) @[build/NutShell.fir.opt.mlir 8050:23]
    node _immrvc_T_90 = eq(UInt<3>(5), rvcImmType) @[build/NutShell.fir.opt.mlir 8052:23]
    node _immrvc_T_91 = eq(UInt<3>(6), rvcImmType) @[build/NutShell.fir.opt.mlir 8054:23]
    node _immrvc_T_92 = eq(UInt<3>(7), rvcImmType) @[build/NutShell.fir.opt.mlir 8056:23]
    node _immrvc_T_93 = eq(UInt<4>(8), rvcImmType) @[build/NutShell.fir.opt.mlir 8058:23]
    node _immrvc_T_94 = eq(UInt<4>(9), rvcImmType) @[build/NutShell.fir.opt.mlir 8060:23]
    node _immrvc_T_95 = eq(UInt<4>(10), rvcImmType) @[build/NutShell.fir.opt.mlir 8062:23]
    node _immrvc_T_96 = eq(UInt<4>(11), rvcImmType) @[build/NutShell.fir.opt.mlir 8064:23]
    node _immrvc_T_97 = eq(UInt<4>(12), rvcImmType) @[build/NutShell.fir.opt.mlir 8066:23]
    node _immrvc_T_98 = eq(UInt<4>(13), rvcImmType) @[build/NutShell.fir.opt.mlir 8068:23]
    node _immrvc_T_99 = eq(UInt<4>(14), rvcImmType) @[build/NutShell.fir.opt.mlir 8070:23]
    node _immrvc_T_100 = eq(UInt<4>(15), rvcImmType) @[build/NutShell.fir.opt.mlir 8072:24]
    node _immrvc_T_101 = mux(_immrvc_T_84, UInt<64>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8075:24]
    node _immrvc_T_102 = mux(_immrvc_T_85, _immrvc_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8077:24]
    node _immrvc_T_103 = mux(_immrvc_T_86, _immrvc_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8079:24]
    node _immrvc_T_104 = mux(_immrvc_T_87, _immrvc_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8081:24]
    node _immrvc_T_105 = mux(_immrvc_T_88, _immrvc_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8083:24]
    node _immrvc_T_106 = mux(_immrvc_T_89, _immrvc_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8085:24]
    node _immrvc_T_107 = mux(_immrvc_T_90, _immrvc_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8087:24]
    node _immrvc_T_108 = mux(_immrvc_T_91, _immrvc_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8089:24]
    node _immrvc_T_109 = mux(_immrvc_T_92, _immrvc_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8091:24]
    node _immrvc_T_110 = mux(_immrvc_T_93, _immrvc_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8093:24]
    node _immrvc_T_111 = mux(_immrvc_T_94, _immrvc_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8095:24]
    node _immrvc_T_112 = mux(_immrvc_T_95, _immrvc_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8097:24]
    node _immrvc_T_113 = mux(_immrvc_T_96, _immrvc_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8099:24]
    node _immrvc_T_114 = mux(_immrvc_T_97, _immrvc_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8101:24]
    node _immrvc_T_115 = mux(_immrvc_T_98, _immrvc_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8103:24]
    node _immrvc_T_116 = mux(_immrvc_T_99, _immrvc_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8105:24]
    node _immrvc_T_117 = mux(_immrvc_T_100, UInt<64>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8108:24]
    node _immrvc_T_118 = or(_immrvc_T_101, _immrvc_T_102) @[build/NutShell.fir.opt.mlir 8110:24]
    node _immrvc_T_119 = or(_immrvc_T_118, _immrvc_T_103) @[build/NutShell.fir.opt.mlir 8112:24]
    node _immrvc_T_120 = or(_immrvc_T_119, _immrvc_T_104) @[build/NutShell.fir.opt.mlir 8114:24]
    node _immrvc_T_121 = or(_immrvc_T_120, _immrvc_T_105) @[build/NutShell.fir.opt.mlir 8116:24]
    node _immrvc_T_122 = or(_immrvc_T_121, _immrvc_T_106) @[build/NutShell.fir.opt.mlir 8118:24]
    node _immrvc_T_123 = or(_immrvc_T_122, _immrvc_T_107) @[build/NutShell.fir.opt.mlir 8120:24]
    node _immrvc_T_124 = or(_immrvc_T_123, _immrvc_T_108) @[build/NutShell.fir.opt.mlir 8122:24]
    node _immrvc_T_125 = or(_immrvc_T_124, _immrvc_T_109) @[build/NutShell.fir.opt.mlir 8124:24]
    node _immrvc_T_126 = or(_immrvc_T_125, _immrvc_T_110) @[build/NutShell.fir.opt.mlir 8126:24]
    node _immrvc_T_127 = or(_immrvc_T_126, _immrvc_T_111) @[build/NutShell.fir.opt.mlir 8128:24]
    node _immrvc_T_128 = or(_immrvc_T_127, _immrvc_T_112) @[build/NutShell.fir.opt.mlir 8130:24]
    node _immrvc_T_129 = or(_immrvc_T_128, _immrvc_T_113) @[build/NutShell.fir.opt.mlir 8132:24]
    node _immrvc_T_130 = or(_immrvc_T_129, _immrvc_T_114) @[build/NutShell.fir.opt.mlir 8134:24]
    node _immrvc_T_131 = or(_immrvc_T_130, _immrvc_T_115) @[build/NutShell.fir.opt.mlir 8136:24]
    node _immrvc_T_132 = or(_immrvc_T_131, _immrvc_T_116) @[build/NutShell.fir.opt.mlir 8138:24]
    node _immrvc_T_133 = or(_immrvc_T_132, _immrvc_T_117) @[build/NutShell.fir.opt.mlir 8140:24]
    wire immrvc : UInt<64> @[build/NutShell.fir.opt.mlir 8141:17]
    connect immrvc, _immrvc_T_133 @[build/NutShell.fir.opt.mlir 8142:7]
    node _io_out_bits_data_imm_T = mux(isRVC, immrvc, imm) @[build/NutShell.fir.opt.mlir 8144:34]
    connect io.out.bits.data.imm, _io_out_bits_data_imm_T @[build/NutShell.fir.opt.mlir 8145:7]
    node _T_200 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8147:17]
    when _T_200 : @[build/NutShell.fir.opt.mlir 8150:7]
      node _T_201 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8152:19]
      node _T_202 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8154:19]
      node _T_203 = or(_T_201, _T_202) @[build/NutShell.fir.opt.mlir 8156:19]
      node _T_204 = eq(fuOpType, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 8158:19]
      node _T_205 = and(_T_203, _T_204) @[build/NutShell.fir.opt.mlir 8160:19]
      when _T_205 : @[build/NutShell.fir.opt.mlir 8161:9]
        connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 8163:11]
      node _T_206 = eq(fuOpType, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 8166:19]
      when _T_206 : @[build/NutShell.fir.opt.mlir 8167:9]
        node _T_207 = eq(rfSrc1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8169:21]
        node _T_208 = eq(rfSrc1, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8171:21]
        node _T_209 = or(_T_207, _T_208) @[build/NutShell.fir.opt.mlir 8173:21]
        when _T_209 : @[build/NutShell.fir.opt.mlir 8174:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(94) @[build/NutShell.fir.opt.mlir 8176:13]
        node _T_210 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8179:21]
        node _T_211 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8181:21]
        node _T_212 = or(_T_210, _T_211) @[build/NutShell.fir.opt.mlir 8183:21]
        when _T_212 : @[build/NutShell.fir.opt.mlir 8184:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 8186:13]
    node _io_out_bits_ctrl_src1Type_T = bits(io.in.bits.instr, 6, 0) @[build/NutShell.fir.opt.mlir 8191:39]
    node _io_out_bits_ctrl_src1Type_T_1 = eq(_io_out_bits_ctrl_src1Type_T, UInt<6>(55)) @[build/NutShell.fir.opt.mlir 8193:41]
    node _io_out_bits_ctrl_src1Type_T_2 = mux(_io_out_bits_ctrl_src1Type_T_1, UInt<1>(0), src1Type) @[build/NutShell.fir.opt.mlir 8195:41]
    connect io.out.bits.ctrl.src1Type, _io_out_bits_ctrl_src1Type_T_2 @[build/NutShell.fir.opt.mlir 8196:7]
    connect io.out.bits.ctrl.src2Type, src2Type @[build/NutShell.fir.opt.mlir 8197:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T = bits(io.in.bits.instr, 31, 0) @[build/NutShell.fir.opt.mlir 8199:44]
    node _io_out_bits_ctrl_isNutCoreTrap_T_1 = and(_io_out_bits_ctrl_isNutCoreTrap_T, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 8201:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_2 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_1) @[build/NutShell.fir.opt.mlir 8203:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_3 = and(_io_out_bits_ctrl_isNutCoreTrap_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 8205:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_3 @[build/NutShell.fir.opt.mlir 8206:7]
    node _io_out_bits_ctrl_noSpecExec_T = eq(io.out.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8208:41]
    connect io.out.bits.ctrl.noSpecExec, _io_out_bits_ctrl_noSpecExec_T @[build/NutShell.fir.opt.mlir 8209:7]
    node _io_out_bits_ctrl_isBlocked_T = eq(io.out.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8211:40]
    node _io_out_bits_ctrl_isBlocked_T_1 = bits(io.out.bits.ctrl.fuOpType, 5, 5) @[build/NutShell.fir.opt.mlir 8213:42]
    node _io_out_bits_ctrl_isBlocked_T_2 = and(_io_out_bits_ctrl_isBlocked_T, _io_out_bits_ctrl_isBlocked_T_1) @[build/NutShell.fir.opt.mlir 8215:42]
    node _io_out_bits_ctrl_isBlocked_T_3 = eq(io.out.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 8217:42]
    node _io_out_bits_ctrl_isBlocked_T_4 = or(_io_out_bits_ctrl_isBlocked_T_2, _io_out_bits_ctrl_isBlocked_T_3) @[build/NutShell.fir.opt.mlir 8219:42]
    connect io.out.bits.ctrl.isBlocked, _io_out_bits_ctrl_isBlocked_T_4 @[build/NutShell.fir.opt.mlir 8220:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 8221:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8223:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 8225:27]
    node _io_in_ready_T_2 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8227:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 8229:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T, _io_in_ready_T_3) @[build/NutShell.fir.opt.mlir 8231:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 8232:7]
    connect io.out.bits.cf, io.in.bits @[build/NutShell.fir.opt.mlir 8233:7]
    node _T_213 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 8235:17]
    inst LogPerfHelper of LogPerfHelper_4 @[build/NutShell.fir.opt.mlir 8236:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 8237:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 8242:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 8243:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 8244:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 8245:7]
    node _T_214 = and(_T_213, c_control.logEnable) @[build/NutShell.fir.opt.mlir 8247:17]
    when _T_214 : @[build/NutShell.fir.opt.mlir 8248:7]
      node _T_215 = asUInt(reset) @[build/NutShell.fir.opt.mlir 8250:19]
      node _T_216 = eq(_T_215, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8252:19]
      when _T_216 : @[build/NutShell.fir.opt.mlir 8253:9]
        skip @[build/NutShell.fir.opt.mlir 8254:11]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 8257:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8259:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 8260:9]
        skip @[build/NutShell.fir.opt.mlir 8261:11]
    wire intrVec : UInt<12> @[build/NutShell.fir.opt.mlir 8264:18]
    connect intrVec, UInt<12>(0) @[build/NutShell.fir.opt.mlir 8266:7]
    node _T_219 = bits(intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 8268:17]
    node _T_220 = bits(intrVec, 1, 1) @[build/NutShell.fir.opt.mlir 8270:17]
    node _T_221 = bits(intrVec, 2, 2) @[build/NutShell.fir.opt.mlir 8272:17]
    node _T_222 = bits(intrVec, 3, 3) @[build/NutShell.fir.opt.mlir 8274:17]
    node _T_223 = bits(intrVec, 4, 4) @[build/NutShell.fir.opt.mlir 8276:17]
    node _T_224 = bits(intrVec, 5, 5) @[build/NutShell.fir.opt.mlir 8278:17]
    node _T_225 = bits(intrVec, 6, 6) @[build/NutShell.fir.opt.mlir 8280:17]
    node _T_226 = bits(intrVec, 7, 7) @[build/NutShell.fir.opt.mlir 8282:17]
    node _T_227 = bits(intrVec, 8, 8) @[build/NutShell.fir.opt.mlir 8284:17]
    node _T_228 = bits(intrVec, 9, 9) @[build/NutShell.fir.opt.mlir 8286:17]
    node _T_229 = bits(intrVec, 10, 10) @[build/NutShell.fir.opt.mlir 8288:17]
    node _T_230 = bits(intrVec, 11, 11) @[build/NutShell.fir.opt.mlir 8290:17]
    connect io.out.bits.cf.intrVec[0], _T_219 @[build/NutShell.fir.opt.mlir 8291:7]
    connect io.out.bits.cf.intrVec[1], _T_220 @[build/NutShell.fir.opt.mlir 8292:7]
    connect io.out.bits.cf.intrVec[2], _T_221 @[build/NutShell.fir.opt.mlir 8293:7]
    connect io.out.bits.cf.intrVec[3], _T_222 @[build/NutShell.fir.opt.mlir 8294:7]
    connect io.out.bits.cf.intrVec[4], _T_223 @[build/NutShell.fir.opt.mlir 8295:7]
    connect io.out.bits.cf.intrVec[5], _T_224 @[build/NutShell.fir.opt.mlir 8296:7]
    connect io.out.bits.cf.intrVec[6], _T_225 @[build/NutShell.fir.opt.mlir 8297:7]
    connect io.out.bits.cf.intrVec[7], _T_226 @[build/NutShell.fir.opt.mlir 8298:7]
    connect io.out.bits.cf.intrVec[8], _T_227 @[build/NutShell.fir.opt.mlir 8299:7]
    connect io.out.bits.cf.intrVec[9], _T_228 @[build/NutShell.fir.opt.mlir 8300:7]
    connect io.out.bits.cf.intrVec[10], _T_229 @[build/NutShell.fir.opt.mlir 8301:7]
    connect io.out.bits.cf.intrVec[11], _T_230 @[build/NutShell.fir.opt.mlir 8302:7]
    node _hasIntr_T = orr(intrVec) @[build/NutShell.fir.opt.mlir 8304:21]
    connect hasIntr, _hasIntr_T @[build/NutShell.fir.opt.mlir 8305:7]
    wire vmEnable : UInt<1> @[build/NutShell.fir.opt.mlir 8306:19]
    connect vmEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8308:7]
    connect io.out.bits.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8310:7]
    connect io.out.bits.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8312:7]
    connect io.out.bits.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8314:7]
    connect io.out.bits.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8316:7]
    connect io.out.bits.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8318:7]
    connect io.out.bits.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8320:7]
    connect io.out.bits.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8322:7]
    connect io.out.bits.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8324:7]
    connect io.out.bits.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8326:7]
    connect io.out.bits.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8328:7]
    connect io.out.bits.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8330:7]
    connect io.out.bits.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8332:7]
    connect io.out.bits.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8334:7]
    connect io.out.bits.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8336:7]
    connect io.out.bits.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8338:7]
    connect io.out.bits.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8340:7]
    node _io_out_bits_cf_exceptionVec_2_T = eq(instrType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8342:43]
    node _io_out_bits_cf_exceptionVec_2_T_1 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8344:45]
    node _io_out_bits_cf_exceptionVec_2_T_2 = and(_io_out_bits_cf_exceptionVec_2_T, _io_out_bits_cf_exceptionVec_2_T_1) @[build/NutShell.fir.opt.mlir 8346:45]
    node _io_out_bits_cf_exceptionVec_2_T_3 = and(_io_out_bits_cf_exceptionVec_2_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 8348:45]
    connect io.out.bits.cf.exceptionVec[2], _io_out_bits_cf_exceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 8349:7]
    connect io.out.bits.cf.exceptionVec[12], io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 8350:7]
    node _io_out_bits_cf_exceptionVec_1_T = bits(io.in.bits.pc, 38, 32) @[build/NutShell.fir.opt.mlir 8352:43]
    node _io_out_bits_cf_exceptionVec_1_T_1 = orr(_io_out_bits_cf_exceptionVec_1_T) @[build/NutShell.fir.opt.mlir 8354:45]
    node _io_out_bits_cf_exceptionVec_1_T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8356:45]
    node _io_out_bits_cf_exceptionVec_1_T_3 = and(_io_out_bits_cf_exceptionVec_1_T_1, _io_out_bits_cf_exceptionVec_1_T_2) @[build/NutShell.fir.opt.mlir 8358:45]
    connect io.out.bits.cf.exceptionVec[1], _io_out_bits_cf_exceptionVec_1_T_3 @[build/NutShell.fir.opt.mlir 8359:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 8361:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_5 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_4) @[build/NutShell.fir.opt.mlir 8363:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_6 = and(_io_out_bits_ctrl_isNutCoreTrap_T_5, io.in.valid) @[build/NutShell.fir.opt.mlir 8365:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_6 @[build/NutShell.fir.opt.mlir 8366:7]
    node _io_isWFI_T = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 8368:22]
    node _io_isWFI_T_1 = eq(UInt<29>(273678451), _io_isWFI_T) @[build/NutShell.fir.opt.mlir 8370:24]
    node _io_isWFI_T_2 = and(_io_isWFI_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 8372:24]
    connect io.isWFI, _io_isWFI_T_2 @[build/NutShell.fir.opt.mlir 8373:7]
    node _io_isBranch_T = eq(UInt<7>(88), fuOpType) @[build/NutShell.fir.opt.mlir 8375:25]
    node _io_isBranch_T_1 = eq(UInt<7>(90), fuOpType) @[build/NutShell.fir.opt.mlir 8377:27]
    node _io_isBranch_T_2 = eq(UInt<5>(16), fuOpType) @[build/NutShell.fir.opt.mlir 8379:27]
    node _io_isBranch_T_3 = eq(UInt<5>(17), fuOpType) @[build/NutShell.fir.opt.mlir 8381:27]
    node _io_isBranch_T_4 = eq(UInt<5>(20), fuOpType) @[build/NutShell.fir.opt.mlir 8383:27]
    node _io_isBranch_T_5 = eq(UInt<5>(21), fuOpType) @[build/NutShell.fir.opt.mlir 8385:27]
    node _io_isBranch_T_6 = eq(UInt<5>(22), fuOpType) @[build/NutShell.fir.opt.mlir 8387:27]
    node _io_isBranch_T_7 = eq(UInt<5>(23), fuOpType) @[build/NutShell.fir.opt.mlir 8389:27]
    wire _io_isBranch_WIRE : UInt<1>[8] @[build/NutShell.fir.opt.mlir 8390:28]
    connect _io_isBranch_WIRE[0], _io_isBranch_T @[build/NutShell.fir.opt.mlir 8399:7]
    connect _io_isBranch_WIRE[1], _io_isBranch_T_1 @[build/NutShell.fir.opt.mlir 8400:7]
    connect _io_isBranch_WIRE[2], _io_isBranch_T_2 @[build/NutShell.fir.opt.mlir 8401:7]
    connect _io_isBranch_WIRE[3], _io_isBranch_T_3 @[build/NutShell.fir.opt.mlir 8402:7]
    connect _io_isBranch_WIRE[4], _io_isBranch_T_4 @[build/NutShell.fir.opt.mlir 8403:7]
    connect _io_isBranch_WIRE[5], _io_isBranch_T_5 @[build/NutShell.fir.opt.mlir 8404:7]
    connect _io_isBranch_WIRE[6], _io_isBranch_T_6 @[build/NutShell.fir.opt.mlir 8405:7]
    connect _io_isBranch_WIRE[7], _io_isBranch_T_7 @[build/NutShell.fir.opt.mlir 8406:7]
    node io_isBranch_lo_lo = cat(_io_isBranch_WIRE[1], _io_isBranch_WIRE[0]) @[build/NutShell.fir.opt.mlir 8408:28]
    node io_isBranch_lo_hi = cat(_io_isBranch_WIRE[3], _io_isBranch_WIRE[2]) @[build/NutShell.fir.opt.mlir 8410:28]
    node io_isBranch_lo = cat(io_isBranch_lo_hi, io_isBranch_lo_lo) @[build/NutShell.fir.opt.mlir 8412:25]
    node io_isBranch_hi_lo = cat(_io_isBranch_WIRE[5], _io_isBranch_WIRE[4]) @[build/NutShell.fir.opt.mlir 8414:28]
    node io_isBranch_hi_hi = cat(_io_isBranch_WIRE[7], _io_isBranch_WIRE[6]) @[build/NutShell.fir.opt.mlir 8416:28]
    node io_isBranch_hi = cat(io_isBranch_hi_hi, io_isBranch_hi_lo) @[build/NutShell.fir.opt.mlir 8418:25]
    node _io_isBranch_T_8 = cat(io_isBranch_hi, io_isBranch_lo) @[build/NutShell.fir.opt.mlir 8420:27]
    node _io_isBranch_T_9 = orr(_io_isBranch_T_8) @[build/NutShell.fir.opt.mlir 8422:27]
    node _io_isBranch_T_10 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8424:28]
    node _io_isBranch_T_11 = and(_io_isBranch_T_9, _io_isBranch_T_10) @[build/NutShell.fir.opt.mlir 8426:28]
    connect io.isBranch, _io_isBranch_T_11 @[build/NutShell.fir.opt.mlir 8427:7]

  module IDU : @[build/NutShell.fir.opt.mlir 8429:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8429:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8429:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2] } @[build/NutShell.fir.opt.mlir 8429:88]

    inst decoder1 of Decoder @[build/NutShell.fir.opt.mlir 8446:56]
    connect decoder1.clock, clock @[build/NutShell.fir.opt.mlir 8454:7]
    connect decoder1.reset, reset @[build/NutShell.fir.opt.mlir 8455:7]
    inst decoder2 of Decoder_1 @[build/NutShell.fir.opt.mlir 8456:56]
    connect decoder2.clock, clock @[build/NutShell.fir.opt.mlir 8464:7]
    connect decoder2.reset, reset @[build/NutShell.fir.opt.mlir 8465:7]
    connect io.in[0].ready, decoder1.io.in.ready @[build/NutShell.fir.opt.mlir 8468:7]
    connect decoder1.io.in.valid, io.in[0].valid @[build/NutShell.fir.opt.mlir 8471:7]
    connect decoder1.io.in.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 8474:7]
    connect io.in[1].ready, decoder2.io.in.ready @[build/NutShell.fir.opt.mlir 8477:7]
    connect decoder2.io.in.valid, io.in[1].valid @[build/NutShell.fir.opt.mlir 8480:7]
    connect decoder2.io.in.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 8483:7]
    connect io.out[0].bits, decoder1.io.out.bits @[build/NutShell.fir.opt.mlir 8484:7]
    connect io.out[0].valid, decoder1.io.out.valid @[build/NutShell.fir.opt.mlir 8485:7]
    connect decoder1.io.out.ready, io.out[0].ready @[build/NutShell.fir.opt.mlir 8486:7]
    connect io.out[1].bits, decoder2.io.out.bits @[build/NutShell.fir.opt.mlir 8487:7]
    connect io.out[1].valid, decoder2.io.out.valid @[build/NutShell.fir.opt.mlir 8488:7]
    connect decoder2.io.out.ready, io.out[1].ready @[build/NutShell.fir.opt.mlir 8489:7]
    connect io.in[1].ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8492:7]
    connect decoder2.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8494:7]
    regreset checkpoint_id : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 8496:24]
    connect io.out[0].bits.cf.isBranch, decoder1.io.isBranch @[build/NutShell.fir.opt.mlir 8497:7]
    connect io.out[0].bits.cf.runahead_checkpoint_id, checkpoint_id @[build/NutShell.fir.opt.mlir 8498:7]
    node _T = or(decoder1.io.isWFI, decoder2.io.isWFI) @[build/NutShell.fir.opt.mlir 8500:13]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 8501:16]
    connect _WIRE, _T @[build/NutShell.fir.opt.mlir 8502:7]

  module FlushableQueue : @[build/NutShell.fir.opt.mlir 8504:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8504:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8504:72]
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, count : UInt<3>, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 8504:99]

    mem ram : @[build/NutShell.fir.opt.mlir 8521:44]
      data-type => { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }
      depth => 4
      read-latency => 0
      write-latency => 1
      reader => io_deq_bits_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate ram.MPORT.addr @[build/NutShell.fir.opt.mlir 8523:7]
    connect ram.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8525:7]
    invalidate ram.MPORT.clk @[build/NutShell.fir.opt.mlir 8527:7]
    invalidate ram.MPORT.data @[build/NutShell.fir.opt.mlir 8529:7]
    invalidate ram.MPORT.mask @[build/NutShell.fir.opt.mlir 8531:7]
    invalidate ram.io_deq_bits_MPORT.addr @[build/NutShell.fir.opt.mlir 8533:7]
    connect ram.io_deq_bits_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8535:7]
    invalidate ram.io_deq_bits_MPORT.clk @[build/NutShell.fir.opt.mlir 8537:7]
    regreset enq_ptr_value : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 8540:24]
    regreset deq_ptr_value : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 8541:24]
    regreset maybe_full : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8543:21]
    node ptr_match = eq(enq_ptr_value, deq_ptr_value) @[build/NutShell.fir.opt.mlir 8545:20]
    node _empty_T = eq(maybe_full, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8547:19]
    node empty = and(ptr_match, _empty_T) @[build/NutShell.fir.opt.mlir 8549:16]
    node full = and(ptr_match, maybe_full) @[build/NutShell.fir.opt.mlir 8551:15]
    node _do_enq_T = and(io.enq.ready, io.enq.valid) @[build/NutShell.fir.opt.mlir 8553:20]
    wire do_enq : UInt<1> @[build/NutShell.fir.opt.mlir 8554:17]
    connect do_enq, _do_enq_T @[build/NutShell.fir.opt.mlir 8555:7]
    node _do_deq_T = and(io.deq.ready, io.deq.valid) @[build/NutShell.fir.opt.mlir 8557:20]
    wire do_deq : UInt<1> @[build/NutShell.fir.opt.mlir 8558:17]
    connect do_deq, _do_deq_T @[build/NutShell.fir.opt.mlir 8559:7]
    when do_enq : @[build/NutShell.fir.opt.mlir 8562:7]
      connect ram.MPORT.addr, enq_ptr_value @[build/NutShell.fir.opt.mlir 8563:9]
      connect ram.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8564:9]
      connect ram.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 8565:9]
      connect ram.MPORT.mask.instr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8567:9]
      connect ram.MPORT.mask.pc, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8569:9]
      connect ram.MPORT.mask.pnpc, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8571:9]
      connect ram.MPORT.mask.redirect.target, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8574:9]
      connect ram.MPORT.mask.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8576:9]
      connect ram.MPORT.mask.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8578:9]
      connect ram.MPORT.mask.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8581:9]
      connect ram.MPORT.mask.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8583:9]
      connect ram.MPORT.mask.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8585:9]
      connect ram.MPORT.mask.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8587:9]
      connect ram.MPORT.mask.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8589:9]
      connect ram.MPORT.mask.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8591:9]
      connect ram.MPORT.mask.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8593:9]
      connect ram.MPORT.mask.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8595:9]
      connect ram.MPORT.mask.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8597:9]
      connect ram.MPORT.mask.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8599:9]
      connect ram.MPORT.mask.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8601:9]
      connect ram.MPORT.mask.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8603:9]
      connect ram.MPORT.mask.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8605:9]
      connect ram.MPORT.mask.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8607:9]
      connect ram.MPORT.mask.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8609:9]
      connect ram.MPORT.mask.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8611:9]
      connect ram.MPORT.mask.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8614:9]
      connect ram.MPORT.mask.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8616:9]
      connect ram.MPORT.mask.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8618:9]
      connect ram.MPORT.mask.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8620:9]
      connect ram.MPORT.mask.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8622:9]
      connect ram.MPORT.mask.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8624:9]
      connect ram.MPORT.mask.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8626:9]
      connect ram.MPORT.mask.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8628:9]
      connect ram.MPORT.mask.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8630:9]
      connect ram.MPORT.mask.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8632:9]
      connect ram.MPORT.mask.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8634:9]
      connect ram.MPORT.mask.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8636:9]
      connect ram.MPORT.mask.brIdx, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8638:9]
      connect ram.MPORT.mask.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8640:9]
      connect ram.MPORT.mask.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8642:9]
      connect ram.MPORT.mask.runahead_checkpoint_id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8644:9]
      connect ram.MPORT.mask.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8646:9]
      connect ram.MPORT.mask.instr, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8648:9]
      connect ram.MPORT.mask.pc, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8650:9]
      connect ram.MPORT.mask.pnpc, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8652:9]
      connect ram.MPORT.mask.redirect.target, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8655:9]
      connect ram.MPORT.mask.redirect.rtype, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8657:9]
      connect ram.MPORT.mask.redirect.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8659:9]
      connect ram.MPORT.mask.exceptionVec[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8662:9]
      connect ram.MPORT.mask.exceptionVec[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8664:9]
      connect ram.MPORT.mask.exceptionVec[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8666:9]
      connect ram.MPORT.mask.exceptionVec[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8668:9]
      connect ram.MPORT.mask.exceptionVec[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8670:9]
      connect ram.MPORT.mask.exceptionVec[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8672:9]
      connect ram.MPORT.mask.exceptionVec[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8674:9]
      connect ram.MPORT.mask.exceptionVec[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8676:9]
      connect ram.MPORT.mask.exceptionVec[8], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8678:9]
      connect ram.MPORT.mask.exceptionVec[9], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8680:9]
      connect ram.MPORT.mask.exceptionVec[10], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8682:9]
      connect ram.MPORT.mask.exceptionVec[11], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8684:9]
      connect ram.MPORT.mask.exceptionVec[12], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8686:9]
      connect ram.MPORT.mask.exceptionVec[13], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8688:9]
      connect ram.MPORT.mask.exceptionVec[14], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8690:9]
      connect ram.MPORT.mask.exceptionVec[15], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8692:9]
      connect ram.MPORT.mask.intrVec[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8695:9]
      connect ram.MPORT.mask.intrVec[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8697:9]
      connect ram.MPORT.mask.intrVec[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8699:9]
      connect ram.MPORT.mask.intrVec[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8701:9]
      connect ram.MPORT.mask.intrVec[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8703:9]
      connect ram.MPORT.mask.intrVec[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8705:9]
      connect ram.MPORT.mask.intrVec[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8707:9]
      connect ram.MPORT.mask.intrVec[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8709:9]
      connect ram.MPORT.mask.intrVec[8], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8711:9]
      connect ram.MPORT.mask.intrVec[9], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8713:9]
      connect ram.MPORT.mask.intrVec[10], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8715:9]
      connect ram.MPORT.mask.intrVec[11], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8717:9]
      connect ram.MPORT.mask.brIdx, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8719:9]
      connect ram.MPORT.mask.isRVC, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8721:9]
      connect ram.MPORT.mask.crossPageIPFFix, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8723:9]
      connect ram.MPORT.mask.runahead_checkpoint_id, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8725:9]
      connect ram.MPORT.mask.isBranch, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8727:9]
      connect ram.MPORT.data, io.enq.bits @[build/NutShell.fir.opt.mlir 8728:9]
      node wrap = eq(enq_ptr_value, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8730:17]
      node _value_T = add(enq_ptr_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8732:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 8734:23]
      connect enq_ptr_value, _value_T_1 @[build/NutShell.fir.opt.mlir 8735:9]
    when do_deq : @[build/NutShell.fir.opt.mlir 8737:7]
      node wrap_1 = eq(deq_ptr_value, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8739:19]
      node _value_T_2 = add(deq_ptr_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8741:23]
      node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 8743:23]
      connect deq_ptr_value, _value_T_3 @[build/NutShell.fir.opt.mlir 8744:9]
    node _T = neq(do_enq, do_deq) @[build/NutShell.fir.opt.mlir 8747:13]
    when _T : @[build/NutShell.fir.opt.mlir 8748:7]
      connect maybe_full, do_enq @[build/NutShell.fir.opt.mlir 8749:9]
    node _io_deq_valid_T = eq(empty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8752:26]
    connect io.deq.valid, _io_deq_valid_T @[build/NutShell.fir.opt.mlir 8753:7]
    node _io_enq_ready_T = eq(full, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8755:26]
    connect io.enq.ready, _io_enq_ready_T @[build/NutShell.fir.opt.mlir 8756:7]
    connect ram.io_deq_bits_MPORT.addr, deq_ptr_value @[build/NutShell.fir.opt.mlir 8757:7]
    connect ram.io_deq_bits_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8758:7]
    connect ram.io_deq_bits_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 8759:7]
    connect io.deq.bits, ram.io_deq_bits_MPORT.data @[build/NutShell.fir.opt.mlir 8760:7]
    when io.flush : @[build/NutShell.fir.opt.mlir 8761:7]
      connect enq_ptr_value, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 8764:9]
      connect deq_ptr_value, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 8767:9]
      connect maybe_full, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8769:9]
    node _ptr_diff_T = sub(enq_ptr_value, deq_ptr_value) @[build/NutShell.fir.opt.mlir 8772:22]
    node ptr_diff = tail(_ptr_diff_T, 1) @[build/NutShell.fir.opt.mlir 8774:19]
    node _io_count_T = and(maybe_full, ptr_match) @[build/NutShell.fir.opt.mlir 8776:22]
    node _io_count_T_1 = cat(_io_count_T, ptr_diff) @[build/NutShell.fir.opt.mlir 8778:24]
    connect io.count, _io_count_T_1 @[build/NutShell.fir.opt.mlir 8779:7]

  extmodule LogPerfHelper_5 : @[build/NutShell.fir.opt.mlir 8781:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 8781:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 8781:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 8781:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 8781:140]
    defname = LogPerfHelper

  module Frontend_inorder : @[build/NutShell.fir.opt.mlir 8782:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8782:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8782:74]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], flushVec : UInt<4>, flip redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, bpFlush : UInt<1>, flip ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 8782:101]

    inst ifu of IFU_inorder @[build/NutShell.fir.opt.mlir 8802:41]
    connect ifu.clock, clock @[build/NutShell.fir.opt.mlir 8859:7]
    connect ifu.reset, reset @[build/NutShell.fir.opt.mlir 8860:7]
    inst ibf of NaiveRVCAlignBuffer @[build/NutShell.fir.opt.mlir 8861:41]
    connect ibf.clock, clock @[build/NutShell.fir.opt.mlir 8868:7]
    connect ibf.reset, reset @[build/NutShell.fir.opt.mlir 8869:7]
    inst idu of IDU @[build/NutShell.fir.opt.mlir 8870:41]
    connect idu.clock, clock @[build/NutShell.fir.opt.mlir 8973:7]
    connect idu.reset, reset @[build/NutShell.fir.opt.mlir 8974:7]
    node _T = bits(ifu.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 8976:13]
    inst ibf_io_in_q of FlushableQueue @[build/NutShell.fir.opt.mlir 8977:65]
    connect ibf_io_in_q.clock, clock @[build/NutShell.fir.opt.mlir 9026:7]
    connect ibf_io_in_q.reset, reset @[build/NutShell.fir.opt.mlir 9027:7]
    connect ibf_io_in_q.io.enq.valid, ifu.io.out.valid @[build/NutShell.fir.opt.mlir 9028:7]
    connect ibf_io_in_q.io.enq.bits.isBranch, ifu.io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 9029:7]
    connect ibf_io_in_q.io.enq.bits.runahead_checkpoint_id, ifu.io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9030:7]
    connect ibf_io_in_q.io.enq.bits.crossPageIPFFix, ifu.io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9031:7]
    connect ibf_io_in_q.io.enq.bits.isRVC, ifu.io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 9032:7]
    connect ibf_io_in_q.io.enq.bits.brIdx, ifu.io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 9033:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[0], ifu.io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 9034:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[1], ifu.io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 9035:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[2], ifu.io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 9036:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[3], ifu.io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 9037:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[4], ifu.io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 9038:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[5], ifu.io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 9039:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[6], ifu.io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 9040:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[7], ifu.io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 9041:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[8], ifu.io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 9042:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[9], ifu.io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 9043:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[10], ifu.io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 9044:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[11], ifu.io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 9045:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[0], ifu.io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9046:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[1], ifu.io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9047:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[2], ifu.io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9048:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[3], ifu.io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9049:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[4], ifu.io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9050:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[5], ifu.io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9051:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[6], ifu.io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9052:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[7], ifu.io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9053:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[8], ifu.io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9054:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[9], ifu.io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9055:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[10], ifu.io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9056:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[11], ifu.io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9057:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[12], ifu.io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9058:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[13], ifu.io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9059:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[14], ifu.io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9060:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[15], ifu.io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9061:7]
    connect ibf_io_in_q.io.enq.bits.redirect.valid, ifu.io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 9062:7]
    connect ibf_io_in_q.io.enq.bits.redirect.rtype, ifu.io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 9063:7]
    connect ibf_io_in_q.io.enq.bits.redirect.target, ifu.io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 9064:7]
    connect ibf_io_in_q.io.enq.bits.pnpc, ifu.io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 9065:7]
    connect ibf_io_in_q.io.enq.bits.pc, ifu.io.out.bits.pc @[build/NutShell.fir.opt.mlir 9066:7]
    connect ibf_io_in_q.io.enq.bits.instr, ifu.io.out.bits.instr @[build/NutShell.fir.opt.mlir 9067:7]
    connect ibf_io_in_q.io.flush, _T @[build/NutShell.fir.opt.mlir 9068:7]
    connect ifu.io.out.ready, ibf_io_in_q.io.enq.ready @[build/NutShell.fir.opt.mlir 9069:7]
    connect ibf_io_in_q.io.deq.ready, ibf.io.in.ready @[build/NutShell.fir.opt.mlir 9072:7]
    connect ibf.io.in.valid, ibf_io_in_q.io.deq.valid @[build/NutShell.fir.opt.mlir 9075:7]
    connect ibf.io.in.bits, ibf_io_in_q.io.deq.bits @[build/NutShell.fir.opt.mlir 9078:7]
    node _T_1 = and(idu.io.out[0].ready, idu.io.out[0].valid) @[build/NutShell.fir.opt.mlir 9080:15]
    node _T_2 = bits(ifu.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 9082:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9084:16]
    when _T_1 : @[build/NutShell.fir.opt.mlir 9085:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9087:9]
    node _T_3 = and(ibf.io.out.valid, idu.io.in[0].ready) @[build/NutShell.fir.opt.mlir 9090:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 9092:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 9094:9]
    when _T_2 : @[build/NutShell.fir.opt.mlir 9096:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9098:9]
    connect ibf.io.out.ready, idu.io.in[0].ready @[build/NutShell.fir.opt.mlir 9100:7]
    node _idu_io_in_0_bits_T = and(ibf.io.out.valid, idu.io.in[0].ready) @[build/NutShell.fir.opt.mlir 9102:30]
    reg idu_io_in_0_bits_r : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 9103:29]
    when _idu_io_in_0_bits_T : @[build/NutShell.fir.opt.mlir 9146:7]
      connect idu_io_in_0_bits_r, ibf.io.out.bits @[build/NutShell.fir.opt.mlir 9147:9]
    connect idu.io.in[0].bits.isBranch, idu_io_in_0_bits_r.isBranch @[build/NutShell.fir.opt.mlir 9149:7]
    connect idu.io.in[0].bits.runahead_checkpoint_id, idu_io_in_0_bits_r.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9150:7]
    connect idu.io.in[0].bits.crossPageIPFFix, idu_io_in_0_bits_r.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9151:7]
    connect idu.io.in[0].bits.isRVC, idu_io_in_0_bits_r.isRVC @[build/NutShell.fir.opt.mlir 9152:7]
    connect idu.io.in[0].bits.brIdx, idu_io_in_0_bits_r.brIdx @[build/NutShell.fir.opt.mlir 9153:7]
    connect idu.io.in[0].bits.intrVec[0], idu_io_in_0_bits_r.intrVec[0] @[build/NutShell.fir.opt.mlir 9154:7]
    connect idu.io.in[0].bits.intrVec[1], idu_io_in_0_bits_r.intrVec[1] @[build/NutShell.fir.opt.mlir 9155:7]
    connect idu.io.in[0].bits.intrVec[2], idu_io_in_0_bits_r.intrVec[2] @[build/NutShell.fir.opt.mlir 9156:7]
    connect idu.io.in[0].bits.intrVec[3], idu_io_in_0_bits_r.intrVec[3] @[build/NutShell.fir.opt.mlir 9157:7]
    connect idu.io.in[0].bits.intrVec[4], idu_io_in_0_bits_r.intrVec[4] @[build/NutShell.fir.opt.mlir 9158:7]
    connect idu.io.in[0].bits.intrVec[5], idu_io_in_0_bits_r.intrVec[5] @[build/NutShell.fir.opt.mlir 9159:7]
    connect idu.io.in[0].bits.intrVec[6], idu_io_in_0_bits_r.intrVec[6] @[build/NutShell.fir.opt.mlir 9160:7]
    connect idu.io.in[0].bits.intrVec[7], idu_io_in_0_bits_r.intrVec[7] @[build/NutShell.fir.opt.mlir 9161:7]
    connect idu.io.in[0].bits.intrVec[8], idu_io_in_0_bits_r.intrVec[8] @[build/NutShell.fir.opt.mlir 9162:7]
    connect idu.io.in[0].bits.intrVec[9], idu_io_in_0_bits_r.intrVec[9] @[build/NutShell.fir.opt.mlir 9163:7]
    connect idu.io.in[0].bits.intrVec[10], idu_io_in_0_bits_r.intrVec[10] @[build/NutShell.fir.opt.mlir 9164:7]
    connect idu.io.in[0].bits.intrVec[11], idu_io_in_0_bits_r.intrVec[11] @[build/NutShell.fir.opt.mlir 9165:7]
    connect idu.io.in[0].bits.exceptionVec[0], idu_io_in_0_bits_r.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9166:7]
    connect idu.io.in[0].bits.exceptionVec[1], idu_io_in_0_bits_r.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9167:7]
    connect idu.io.in[0].bits.exceptionVec[2], idu_io_in_0_bits_r.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9168:7]
    connect idu.io.in[0].bits.exceptionVec[3], idu_io_in_0_bits_r.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9169:7]
    connect idu.io.in[0].bits.exceptionVec[4], idu_io_in_0_bits_r.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9170:7]
    connect idu.io.in[0].bits.exceptionVec[5], idu_io_in_0_bits_r.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9171:7]
    connect idu.io.in[0].bits.exceptionVec[6], idu_io_in_0_bits_r.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9172:7]
    connect idu.io.in[0].bits.exceptionVec[7], idu_io_in_0_bits_r.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9173:7]
    connect idu.io.in[0].bits.exceptionVec[8], idu_io_in_0_bits_r.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9174:7]
    connect idu.io.in[0].bits.exceptionVec[9], idu_io_in_0_bits_r.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9175:7]
    connect idu.io.in[0].bits.exceptionVec[10], idu_io_in_0_bits_r.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9176:7]
    connect idu.io.in[0].bits.exceptionVec[11], idu_io_in_0_bits_r.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9177:7]
    connect idu.io.in[0].bits.exceptionVec[12], idu_io_in_0_bits_r.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9178:7]
    connect idu.io.in[0].bits.exceptionVec[13], idu_io_in_0_bits_r.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9179:7]
    connect idu.io.in[0].bits.exceptionVec[14], idu_io_in_0_bits_r.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9180:7]
    connect idu.io.in[0].bits.exceptionVec[15], idu_io_in_0_bits_r.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9181:7]
    connect idu.io.in[0].bits.redirect.valid, idu_io_in_0_bits_r.redirect.valid @[build/NutShell.fir.opt.mlir 9182:7]
    connect idu.io.in[0].bits.redirect.rtype, idu_io_in_0_bits_r.redirect.rtype @[build/NutShell.fir.opt.mlir 9183:7]
    connect idu.io.in[0].bits.redirect.target, idu_io_in_0_bits_r.redirect.target @[build/NutShell.fir.opt.mlir 9184:7]
    connect idu.io.in[0].bits.pnpc, idu_io_in_0_bits_r.pnpc @[build/NutShell.fir.opt.mlir 9185:7]
    connect idu.io.in[0].bits.pc, idu_io_in_0_bits_r.pc @[build/NutShell.fir.opt.mlir 9186:7]
    connect idu.io.in[0].bits.instr, idu_io_in_0_bits_r.instr @[build/NutShell.fir.opt.mlir 9187:7]
    connect idu.io.in[0].valid, valid @[build/NutShell.fir.opt.mlir 9188:7]
    invalidate idu.io.in[1].bits.isBranch @[build/NutShell.fir.opt.mlir 9190:7]
    invalidate idu.io.in[1].bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9192:7]
    invalidate idu.io.in[1].bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9194:7]
    invalidate idu.io.in[1].bits.isRVC @[build/NutShell.fir.opt.mlir 9196:7]
    invalidate idu.io.in[1].bits.brIdx @[build/NutShell.fir.opt.mlir 9198:7]
    invalidate idu.io.in[1].bits.intrVec[0] @[build/NutShell.fir.opt.mlir 9200:7]
    invalidate idu.io.in[1].bits.intrVec[1] @[build/NutShell.fir.opt.mlir 9202:7]
    invalidate idu.io.in[1].bits.intrVec[2] @[build/NutShell.fir.opt.mlir 9204:7]
    invalidate idu.io.in[1].bits.intrVec[3] @[build/NutShell.fir.opt.mlir 9206:7]
    invalidate idu.io.in[1].bits.intrVec[4] @[build/NutShell.fir.opt.mlir 9208:7]
    invalidate idu.io.in[1].bits.intrVec[5] @[build/NutShell.fir.opt.mlir 9210:7]
    invalidate idu.io.in[1].bits.intrVec[6] @[build/NutShell.fir.opt.mlir 9212:7]
    invalidate idu.io.in[1].bits.intrVec[7] @[build/NutShell.fir.opt.mlir 9214:7]
    invalidate idu.io.in[1].bits.intrVec[8] @[build/NutShell.fir.opt.mlir 9216:7]
    invalidate idu.io.in[1].bits.intrVec[9] @[build/NutShell.fir.opt.mlir 9218:7]
    invalidate idu.io.in[1].bits.intrVec[10] @[build/NutShell.fir.opt.mlir 9220:7]
    invalidate idu.io.in[1].bits.intrVec[11] @[build/NutShell.fir.opt.mlir 9222:7]
    invalidate idu.io.in[1].bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9224:7]
    invalidate idu.io.in[1].bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9226:7]
    invalidate idu.io.in[1].bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9228:7]
    invalidate idu.io.in[1].bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9230:7]
    invalidate idu.io.in[1].bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9232:7]
    invalidate idu.io.in[1].bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9234:7]
    invalidate idu.io.in[1].bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9236:7]
    invalidate idu.io.in[1].bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9238:7]
    invalidate idu.io.in[1].bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9240:7]
    invalidate idu.io.in[1].bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9242:7]
    invalidate idu.io.in[1].bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9244:7]
    invalidate idu.io.in[1].bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9246:7]
    invalidate idu.io.in[1].bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9248:7]
    invalidate idu.io.in[1].bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9250:7]
    invalidate idu.io.in[1].bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9252:7]
    invalidate idu.io.in[1].bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9254:7]
    invalidate idu.io.in[1].bits.redirect.valid @[build/NutShell.fir.opt.mlir 9256:7]
    invalidate idu.io.in[1].bits.redirect.rtype @[build/NutShell.fir.opt.mlir 9258:7]
    invalidate idu.io.in[1].bits.redirect.target @[build/NutShell.fir.opt.mlir 9260:7]
    invalidate idu.io.in[1].bits.pnpc @[build/NutShell.fir.opt.mlir 9262:7]
    invalidate idu.io.in[1].bits.pc @[build/NutShell.fir.opt.mlir 9264:7]
    invalidate idu.io.in[1].bits.instr @[build/NutShell.fir.opt.mlir 9266:7]
    invalidate idu.io.in[1].valid @[build/NutShell.fir.opt.mlir 9268:7]
    node _ibf_io_flush_T = bits(ifu.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 9270:26]
    connect ibf.io.flush, _ibf_io_flush_T @[build/NutShell.fir.opt.mlir 9271:7]
    connect io.out[0].bits, idu.io.out[0].bits @[build/NutShell.fir.opt.mlir 9272:7]
    connect io.out[0].valid, idu.io.out[0].valid @[build/NutShell.fir.opt.mlir 9273:7]
    connect idu.io.out[0].ready, io.out[0].ready @[build/NutShell.fir.opt.mlir 9274:7]
    connect io.out[1].bits, idu.io.out[1].bits @[build/NutShell.fir.opt.mlir 9275:7]
    connect io.out[1].valid, idu.io.out[1].valid @[build/NutShell.fir.opt.mlir 9276:7]
    connect idu.io.out[1].ready, io.out[1].ready @[build/NutShell.fir.opt.mlir 9277:7]
    connect ifu.io.redirect, io.redirect @[build/NutShell.fir.opt.mlir 9278:7]
    connect io.flushVec, ifu.io.flushVec @[build/NutShell.fir.opt.mlir 9279:7]
    connect io.bpFlush, ifu.io.bpFlush @[build/NutShell.fir.opt.mlir 9280:7]
    connect ifu.io.ipf, io.ipf @[build/NutShell.fir.opt.mlir 9281:7]
    connect io.imem.resp.ready, ifu.io.imem.resp.ready @[build/NutShell.fir.opt.mlir 9284:7]
    connect ifu.io.imem.resp.valid, io.imem.resp.valid @[build/NutShell.fir.opt.mlir 9287:7]
    connect ifu.io.imem.resp.bits.cmd, io.imem.resp.bits.cmd @[build/NutShell.fir.opt.mlir 9292:7]
    connect ifu.io.imem.resp.bits.rdata, io.imem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 9295:7]
    connect ifu.io.imem.resp.bits.user, tail(io.imem.resp.bits.user, 5) @[build/NutShell.fir.opt.mlir 9299:7]
    connect io.imem.req.bits.addr, ifu.io.imem.req.bits.addr @[build/NutShell.fir.opt.mlir 9302:7]
    connect io.imem.req.bits.size, ifu.io.imem.req.bits.size @[build/NutShell.fir.opt.mlir 9305:7]
    connect io.imem.req.bits.cmd, ifu.io.imem.req.bits.cmd @[build/NutShell.fir.opt.mlir 9308:7]
    connect io.imem.req.bits.wmask, ifu.io.imem.req.bits.wmask @[build/NutShell.fir.opt.mlir 9311:7]
    connect io.imem.req.bits.wdata, ifu.io.imem.req.bits.wdata @[build/NutShell.fir.opt.mlir 9314:7]
    connect io.imem.req.bits.user, pad(ifu.io.imem.req.bits.user, 87) @[build/NutShell.fir.opt.mlir 9318:7]
    connect io.imem.req.valid, ifu.io.imem.req.valid @[build/NutShell.fir.opt.mlir 9319:7]
    connect ifu.io.imem.req.ready, io.imem.req.ready @[build/NutShell.fir.opt.mlir 9320:7]
    inst LogPerfHelper of LogPerfHelper_5 @[build/NutShell.fir.opt.mlir 9321:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 9322:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 9327:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 9328:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 9329:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 9330:7]
    node _T_4 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 9332:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 9333:7]
      node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9335:17]
      node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9337:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 9338:9]
        skip @[build/NutShell.fir.opt.mlir 9339:11]
      node _T_7 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9342:17]
      node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9344:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 9345:9]
        skip @[build/NutShell.fir.opt.mlir 9346:11]
    node _T_9 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 9350:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 9351:7]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9353:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9355:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 9356:9]
        skip @[build/NutShell.fir.opt.mlir 9357:11]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9360:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9362:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 9363:9]
        skip @[build/NutShell.fir.opt.mlir 9364:11]
    node _T_14 = and(ifu.io.out.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 9368:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 9369:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9371:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9373:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 9374:9]
        skip @[build/NutShell.fir.opt.mlir 9375:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9378:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9380:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 9381:9]
        skip @[build/NutShell.fir.opt.mlir 9382:11]
    node _T_19 = and(idu.io.in[0].valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 9386:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 9387:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9389:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9391:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 9392:9]
        skip @[build/NutShell.fir.opt.mlir 9393:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9396:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9398:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 9399:9]
        skip @[build/NutShell.fir.opt.mlir 9400:11]

  extmodule LogPerfHelper_6 : @[build/NutShell.fir.opt.mlir 9404:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 9404:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 9404:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 9404:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 9404:140]
    defname = LogPerfHelper

  extmodule DifftestArchIntRegState : @[build/NutShell.fir.opt.mlir 9405:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9405:58]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 9405:83]
    input io : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 9405:111]
    defname = DifftestArchIntRegState

  module DummyDPICWrapper : @[build/NutShell.fir.opt.mlir 9406:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9406:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 9406:74]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 9406:100]
    input io : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 9406:146]

    inst dpic of DifftestArchIntRegState @[build/NutShell.fir.opt.mlir 9442:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 9477:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 9480:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 9481:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 9482:7]
    connect dpic.io.value[0], io.value[0] @[build/NutShell.fir.opt.mlir 9483:7]
    connect dpic.io.value[1], io.value[1] @[build/NutShell.fir.opt.mlir 9484:7]
    connect dpic.io.value[2], io.value[2] @[build/NutShell.fir.opt.mlir 9485:7]
    connect dpic.io.value[3], io.value[3] @[build/NutShell.fir.opt.mlir 9486:7]
    connect dpic.io.value[4], io.value[4] @[build/NutShell.fir.opt.mlir 9487:7]
    connect dpic.io.value[5], io.value[5] @[build/NutShell.fir.opt.mlir 9488:7]
    connect dpic.io.value[6], io.value[6] @[build/NutShell.fir.opt.mlir 9489:7]
    connect dpic.io.value[7], io.value[7] @[build/NutShell.fir.opt.mlir 9490:7]
    connect dpic.io.value[8], io.value[8] @[build/NutShell.fir.opt.mlir 9491:7]
    connect dpic.io.value[9], io.value[9] @[build/NutShell.fir.opt.mlir 9492:7]
    connect dpic.io.value[10], io.value[10] @[build/NutShell.fir.opt.mlir 9493:7]
    connect dpic.io.value[11], io.value[11] @[build/NutShell.fir.opt.mlir 9494:7]
    connect dpic.io.value[12], io.value[12] @[build/NutShell.fir.opt.mlir 9495:7]
    connect dpic.io.value[13], io.value[13] @[build/NutShell.fir.opt.mlir 9496:7]
    connect dpic.io.value[14], io.value[14] @[build/NutShell.fir.opt.mlir 9497:7]
    connect dpic.io.value[15], io.value[15] @[build/NutShell.fir.opt.mlir 9498:7]
    connect dpic.io.value[16], io.value[16] @[build/NutShell.fir.opt.mlir 9499:7]
    connect dpic.io.value[17], io.value[17] @[build/NutShell.fir.opt.mlir 9500:7]
    connect dpic.io.value[18], io.value[18] @[build/NutShell.fir.opt.mlir 9501:7]
    connect dpic.io.value[19], io.value[19] @[build/NutShell.fir.opt.mlir 9502:7]
    connect dpic.io.value[20], io.value[20] @[build/NutShell.fir.opt.mlir 9503:7]
    connect dpic.io.value[21], io.value[21] @[build/NutShell.fir.opt.mlir 9504:7]
    connect dpic.io.value[22], io.value[22] @[build/NutShell.fir.opt.mlir 9505:7]
    connect dpic.io.value[23], io.value[23] @[build/NutShell.fir.opt.mlir 9506:7]
    connect dpic.io.value[24], io.value[24] @[build/NutShell.fir.opt.mlir 9507:7]
    connect dpic.io.value[25], io.value[25] @[build/NutShell.fir.opt.mlir 9508:7]
    connect dpic.io.value[26], io.value[26] @[build/NutShell.fir.opt.mlir 9509:7]
    connect dpic.io.value[27], io.value[27] @[build/NutShell.fir.opt.mlir 9510:7]
    connect dpic.io.value[28], io.value[28] @[build/NutShell.fir.opt.mlir 9511:7]
    connect dpic.io.value[29], io.value[29] @[build/NutShell.fir.opt.mlir 9512:7]
    connect dpic.io.value[30], io.value[30] @[build/NutShell.fir.opt.mlir 9513:7]
    connect dpic.io.value[31], io.value[31] @[build/NutShell.fir.opt.mlir 9514:7]

  module ISU : @[build/NutShell.fir.opt.mlir 9516:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9516:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 9516:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, flip wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, flip forward : { valid : UInt<1>, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, fuType : UInt<3> }, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 9516:88]

    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 9618:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 9620:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 9622:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 9624:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 9626:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 9628:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 9630:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 9632:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 9634:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 9636:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 9638:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 9640:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 9642:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 9644:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 9646:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 9648:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 9650:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9652:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9654:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 9656:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 9658:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 9660:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 9662:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 9664:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 9666:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 9668:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 9670:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 9672:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 9674:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 9676:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 9678:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 9680:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 9682:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9684:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9686:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9688:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9690:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9692:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9694:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9696:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9698:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9700:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9702:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9704:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9706:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9708:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9710:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9712:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9714:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 9716:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 9718:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 9720:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 9722:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 9724:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 9726:7]
    node forwardRfWen = and(io.forward.wb.rfWen, io.forward.valid) @[build/NutShell.fir.opt.mlir 9728:23]
    node _dontForward1_T = neq(io.forward.fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9731:26]
    node _dontForward1_T_1 = neq(io.forward.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9734:28]
    node dontForward1 = and(_dontForward1_T, _dontForward1_T_1) @[build/NutShell.fir.opt.mlir 9736:23]
    node _src1DependEX_T = neq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9738:26]
    node _src1DependEX_T_1 = eq(io.in[0].bits.ctrl.rfSrc1, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 9740:28]
    node _src1DependEX_T_2 = and(_src1DependEX_T, _src1DependEX_T_1) @[build/NutShell.fir.opt.mlir 9742:28]
    node src1DependEX = and(_src1DependEX_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 9744:23]
    node _src2DependEX_T = neq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9746:26]
    node _src2DependEX_T_1 = eq(io.in[0].bits.ctrl.rfSrc2, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 9748:28]
    node _src2DependEX_T_2 = and(_src2DependEX_T, _src2DependEX_T_1) @[build/NutShell.fir.opt.mlir 9750:28]
    node src2DependEX = and(_src2DependEX_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 9752:23]
    node _src1DependWB_T = neq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9754:26]
    node _src1DependWB_T_1 = eq(io.in[0].bits.ctrl.rfSrc1, io.wb.rfDest) @[build/NutShell.fir.opt.mlir 9756:28]
    node _src1DependWB_T_2 = and(_src1DependWB_T, _src1DependWB_T_1) @[build/NutShell.fir.opt.mlir 9758:28]
    node src1DependWB = and(_src1DependWB_T_2, io.wb.rfWen) @[build/NutShell.fir.opt.mlir 9760:23]
    node _src2DependWB_T = neq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9762:26]
    node _src2DependWB_T_1 = eq(io.in[0].bits.ctrl.rfSrc2, io.wb.rfDest) @[build/NutShell.fir.opt.mlir 9764:28]
    node _src2DependWB_T_2 = and(_src2DependWB_T, _src2DependWB_T_1) @[build/NutShell.fir.opt.mlir 9766:28]
    node src2DependWB = and(_src2DependWB_T_2, io.wb.rfWen) @[build/NutShell.fir.opt.mlir 9768:23]
    node _src1ForwardNextCycle_T = eq(dontForward1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9770:34]
    node src1ForwardNextCycle = and(src1DependEX, _src1ForwardNextCycle_T) @[build/NutShell.fir.opt.mlir 9772:31]
    node _src2ForwardNextCycle_T = eq(dontForward1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9774:34]
    node src2ForwardNextCycle = and(src2DependEX, _src2ForwardNextCycle_T) @[build/NutShell.fir.opt.mlir 9776:31]
    node _src1Forward_T = eq(src1DependEX, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9778:25]
    node _src1Forward_T_1 = mux(dontForward1, _src1Forward_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9780:27]
    node src1Forward = and(src1DependWB, _src1Forward_T_1) @[build/NutShell.fir.opt.mlir 9782:22]
    node _src2Forward_T = eq(src2DependEX, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9784:25]
    node _src2Forward_T_1 = mux(dontForward1, _src2Forward_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9786:27]
    node src2Forward = and(src2DependWB, _src2Forward_T_1) @[build/NutShell.fir.opt.mlir 9788:22]
    regreset busy : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 9790:15]
    node _src1Ready_T = dshr(busy, io.in[0].bits.ctrl.rfSrc1) @[build/NutShell.fir.opt.mlir 9792:23]
    node _src1Ready_T_1 = bits(_src1Ready_T, 0, 0) @[build/NutShell.fir.opt.mlir 9794:25]
    node _src1Ready_T_2 = eq(_src1Ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9796:25]
    node _src1Ready_T_3 = or(_src1Ready_T_2, src1ForwardNextCycle) @[build/NutShell.fir.opt.mlir 9798:25]
    node src1Ready = or(_src1Ready_T_3, src1Forward) @[build/NutShell.fir.opt.mlir 9800:20]
    node _src2Ready_T = dshr(busy, io.in[0].bits.ctrl.rfSrc2) @[build/NutShell.fir.opt.mlir 9802:23]
    node _src2Ready_T_1 = bits(_src2Ready_T, 0, 0) @[build/NutShell.fir.opt.mlir 9804:25]
    node _src2Ready_T_2 = eq(_src2Ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9806:25]
    node _src2Ready_T_3 = or(_src2Ready_T_2, src2ForwardNextCycle) @[build/NutShell.fir.opt.mlir 9808:25]
    node src2Ready = or(_src2Ready_T_3, src2Forward) @[build/NutShell.fir.opt.mlir 9810:20]
    node _io_out_valid_T = and(io.in[0].valid, src1Ready) @[build/NutShell.fir.opt.mlir 9812:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, src2Ready) @[build/NutShell.fir.opt.mlir 9814:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 9815:7]
    mem rf : @[build/NutShell.fir.opt.mlir 9816:524]
      data-type => UInt<64>
      depth => 32
      read-latency => 0
      write-latency => 1
      reader => MPORT_1
      reader => MPORT_10
      reader => MPORT_11
      reader => MPORT_12
      reader => MPORT_13
      reader => MPORT_14
      reader => MPORT_15
      reader => MPORT_16
      reader => MPORT_17
      reader => MPORT_18
      reader => MPORT_19
      reader => MPORT_2
      reader => MPORT_20
      reader => MPORT_21
      reader => MPORT_22
      reader => MPORT_23
      reader => MPORT_24
      reader => MPORT_25
      reader => MPORT_26
      reader => MPORT_27
      reader => MPORT_28
      reader => MPORT_29
      reader => MPORT_3
      reader => MPORT_30
      reader => MPORT_31
      reader => MPORT_32
      reader => MPORT_4
      reader => MPORT_5
      reader => MPORT_6
      reader => MPORT_7
      reader => MPORT_8
      reader => MPORT_9
      reader => io_out_bits_data_src1_MPORT
      reader => io_out_bits_data_src2_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate rf.MPORT.addr @[build/NutShell.fir.opt.mlir 9818:7]
    connect rf.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9820:7]
    invalidate rf.MPORT.clk @[build/NutShell.fir.opt.mlir 9822:7]
    invalidate rf.MPORT.data @[build/NutShell.fir.opt.mlir 9824:7]
    invalidate rf.MPORT.mask @[build/NutShell.fir.opt.mlir 9826:7]
    invalidate rf.MPORT_1.addr @[build/NutShell.fir.opt.mlir 9828:7]
    connect rf.MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9830:7]
    invalidate rf.MPORT_1.clk @[build/NutShell.fir.opt.mlir 9832:7]
    invalidate rf.MPORT_10.addr @[build/NutShell.fir.opt.mlir 9835:7]
    connect rf.MPORT_10.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9837:7]
    invalidate rf.MPORT_10.clk @[build/NutShell.fir.opt.mlir 9839:7]
    invalidate rf.MPORT_11.addr @[build/NutShell.fir.opt.mlir 9842:7]
    connect rf.MPORT_11.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9844:7]
    invalidate rf.MPORT_11.clk @[build/NutShell.fir.opt.mlir 9846:7]
    invalidate rf.MPORT_12.addr @[build/NutShell.fir.opt.mlir 9849:7]
    connect rf.MPORT_12.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9851:7]
    invalidate rf.MPORT_12.clk @[build/NutShell.fir.opt.mlir 9853:7]
    invalidate rf.MPORT_13.addr @[build/NutShell.fir.opt.mlir 9856:7]
    connect rf.MPORT_13.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9858:7]
    invalidate rf.MPORT_13.clk @[build/NutShell.fir.opt.mlir 9860:7]
    invalidate rf.MPORT_14.addr @[build/NutShell.fir.opt.mlir 9863:7]
    connect rf.MPORT_14.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9865:7]
    invalidate rf.MPORT_14.clk @[build/NutShell.fir.opt.mlir 9867:7]
    invalidate rf.MPORT_15.addr @[build/NutShell.fir.opt.mlir 9870:7]
    connect rf.MPORT_15.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9872:7]
    invalidate rf.MPORT_15.clk @[build/NutShell.fir.opt.mlir 9874:7]
    invalidate rf.MPORT_16.addr @[build/NutShell.fir.opt.mlir 9877:7]
    connect rf.MPORT_16.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9879:7]
    invalidate rf.MPORT_16.clk @[build/NutShell.fir.opt.mlir 9881:7]
    invalidate rf.MPORT_17.addr @[build/NutShell.fir.opt.mlir 9884:7]
    connect rf.MPORT_17.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9886:7]
    invalidate rf.MPORT_17.clk @[build/NutShell.fir.opt.mlir 9888:7]
    invalidate rf.MPORT_18.addr @[build/NutShell.fir.opt.mlir 9891:7]
    connect rf.MPORT_18.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9893:7]
    invalidate rf.MPORT_18.clk @[build/NutShell.fir.opt.mlir 9895:7]
    invalidate rf.MPORT_19.addr @[build/NutShell.fir.opt.mlir 9898:7]
    connect rf.MPORT_19.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9900:7]
    invalidate rf.MPORT_19.clk @[build/NutShell.fir.opt.mlir 9902:7]
    invalidate rf.MPORT_2.addr @[build/NutShell.fir.opt.mlir 9905:7]
    connect rf.MPORT_2.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9907:7]
    invalidate rf.MPORT_2.clk @[build/NutShell.fir.opt.mlir 9909:7]
    invalidate rf.MPORT_20.addr @[build/NutShell.fir.opt.mlir 9912:7]
    connect rf.MPORT_20.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9914:7]
    invalidate rf.MPORT_20.clk @[build/NutShell.fir.opt.mlir 9916:7]
    invalidate rf.MPORT_21.addr @[build/NutShell.fir.opt.mlir 9919:7]
    connect rf.MPORT_21.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9921:7]
    invalidate rf.MPORT_21.clk @[build/NutShell.fir.opt.mlir 9923:7]
    invalidate rf.MPORT_22.addr @[build/NutShell.fir.opt.mlir 9926:7]
    connect rf.MPORT_22.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9928:7]
    invalidate rf.MPORT_22.clk @[build/NutShell.fir.opt.mlir 9930:7]
    invalidate rf.MPORT_23.addr @[build/NutShell.fir.opt.mlir 9933:7]
    connect rf.MPORT_23.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9935:7]
    invalidate rf.MPORT_23.clk @[build/NutShell.fir.opt.mlir 9937:7]
    invalidate rf.MPORT_24.addr @[build/NutShell.fir.opt.mlir 9940:7]
    connect rf.MPORT_24.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9942:7]
    invalidate rf.MPORT_24.clk @[build/NutShell.fir.opt.mlir 9944:7]
    invalidate rf.MPORT_25.addr @[build/NutShell.fir.opt.mlir 9947:7]
    connect rf.MPORT_25.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9949:7]
    invalidate rf.MPORT_25.clk @[build/NutShell.fir.opt.mlir 9951:7]
    invalidate rf.MPORT_26.addr @[build/NutShell.fir.opt.mlir 9954:7]
    connect rf.MPORT_26.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9956:7]
    invalidate rf.MPORT_26.clk @[build/NutShell.fir.opt.mlir 9958:7]
    invalidate rf.MPORT_27.addr @[build/NutShell.fir.opt.mlir 9961:7]
    connect rf.MPORT_27.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9963:7]
    invalidate rf.MPORT_27.clk @[build/NutShell.fir.opt.mlir 9965:7]
    invalidate rf.MPORT_28.addr @[build/NutShell.fir.opt.mlir 9968:7]
    connect rf.MPORT_28.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9970:7]
    invalidate rf.MPORT_28.clk @[build/NutShell.fir.opt.mlir 9972:7]
    invalidate rf.MPORT_29.addr @[build/NutShell.fir.opt.mlir 9975:7]
    connect rf.MPORT_29.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9977:7]
    invalidate rf.MPORT_29.clk @[build/NutShell.fir.opt.mlir 9979:7]
    invalidate rf.MPORT_3.addr @[build/NutShell.fir.opt.mlir 9982:7]
    connect rf.MPORT_3.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9984:7]
    invalidate rf.MPORT_3.clk @[build/NutShell.fir.opt.mlir 9986:7]
    invalidate rf.MPORT_30.addr @[build/NutShell.fir.opt.mlir 9989:7]
    connect rf.MPORT_30.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9991:7]
    invalidate rf.MPORT_30.clk @[build/NutShell.fir.opt.mlir 9993:7]
    invalidate rf.MPORT_31.addr @[build/NutShell.fir.opt.mlir 9996:7]
    connect rf.MPORT_31.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9998:7]
    invalidate rf.MPORT_31.clk @[build/NutShell.fir.opt.mlir 10000:7]
    invalidate rf.MPORT_32.addr @[build/NutShell.fir.opt.mlir 10003:7]
    connect rf.MPORT_32.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10005:7]
    invalidate rf.MPORT_32.clk @[build/NutShell.fir.opt.mlir 10007:7]
    invalidate rf.MPORT_4.addr @[build/NutShell.fir.opt.mlir 10010:7]
    connect rf.MPORT_4.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10012:7]
    invalidate rf.MPORT_4.clk @[build/NutShell.fir.opt.mlir 10014:7]
    invalidate rf.MPORT_5.addr @[build/NutShell.fir.opt.mlir 10017:7]
    connect rf.MPORT_5.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10019:7]
    invalidate rf.MPORT_5.clk @[build/NutShell.fir.opt.mlir 10021:7]
    invalidate rf.MPORT_6.addr @[build/NutShell.fir.opt.mlir 10024:7]
    connect rf.MPORT_6.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10026:7]
    invalidate rf.MPORT_6.clk @[build/NutShell.fir.opt.mlir 10028:7]
    invalidate rf.MPORT_7.addr @[build/NutShell.fir.opt.mlir 10031:7]
    connect rf.MPORT_7.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10033:7]
    invalidate rf.MPORT_7.clk @[build/NutShell.fir.opt.mlir 10035:7]
    invalidate rf.MPORT_8.addr @[build/NutShell.fir.opt.mlir 10038:7]
    connect rf.MPORT_8.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10040:7]
    invalidate rf.MPORT_8.clk @[build/NutShell.fir.opt.mlir 10042:7]
    invalidate rf.MPORT_9.addr @[build/NutShell.fir.opt.mlir 10045:7]
    connect rf.MPORT_9.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10047:7]
    invalidate rf.MPORT_9.clk @[build/NutShell.fir.opt.mlir 10049:7]
    invalidate rf.io_out_bits_data_src1_MPORT.addr @[build/NutShell.fir.opt.mlir 10052:7]
    connect rf.io_out_bits_data_src1_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10054:7]
    invalidate rf.io_out_bits_data_src1_MPORT.clk @[build/NutShell.fir.opt.mlir 10056:7]
    invalidate rf.io_out_bits_data_src2_MPORT.addr @[build/NutShell.fir.opt.mlir 10059:7]
    connect rf.io_out_bits_data_src2_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10061:7]
    invalidate rf.io_out_bits_data_src2_MPORT.clk @[build/NutShell.fir.opt.mlir 10063:7]
    node _io_out_bits_data_src1_T = eq(io.in[0].bits.ctrl.src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 10066:35]
    node io_out_bits_data_src1_signBit = bits(io.in[0].bits.cf.pc, 38, 38) @[build/NutShell.fir.opt.mlir 10068:40]
    node _io_out_bits_data_src1_T_1 = mux(io_out_bits_data_src1_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 10072:37]
    node _io_out_bits_data_src1_T_2 = cat(_io_out_bits_data_src1_T_1, io.in[0].bits.cf.pc) @[build/NutShell.fir.opt.mlir 10074:37]
    node _io_out_bits_data_src1_T_3 = eq(src1ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10076:37]
    node _io_out_bits_data_src1_T_4 = and(src1Forward, _io_out_bits_data_src1_T_3) @[build/NutShell.fir.opt.mlir 10078:37]
    node _io_out_bits_data_src1_T_5 = neq(io.in[0].bits.ctrl.src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 10080:37]
    node _io_out_bits_data_src1_T_6 = eq(src1ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10082:37]
    node _io_out_bits_data_src1_T_7 = and(_io_out_bits_data_src1_T_5, _io_out_bits_data_src1_T_6) @[build/NutShell.fir.opt.mlir 10084:37]
    node _io_out_bits_data_src1_T_8 = eq(src1Forward, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10086:37]
    node _io_out_bits_data_src1_T_9 = and(_io_out_bits_data_src1_T_7, _io_out_bits_data_src1_T_8) @[build/NutShell.fir.opt.mlir 10088:37]
    node _io_out_bits_data_src1_T_10 = eq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10090:38]
    connect rf.io_out_bits_data_src1_MPORT.addr, io.in[0].bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 10091:7]
    connect rf.io_out_bits_data_src1_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10092:7]
    connect rf.io_out_bits_data_src1_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10093:7]
    node _io_out_bits_data_src1_T_11 = mux(_io_out_bits_data_src1_T_10, UInt<1>(0), rf.io_out_bits_data_src1_MPORT.data) @[build/NutShell.fir.opt.mlir 10095:38]
    node _io_out_bits_data_src1_T_12 = mux(_io_out_bits_data_src1_T, _io_out_bits_data_src1_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10097:38]
    node _io_out_bits_data_src1_T_13 = mux(src1ForwardNextCycle, io.forward.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10099:38]
    node _io_out_bits_data_src1_T_14 = mux(_io_out_bits_data_src1_T_4, io.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10101:38]
    node _io_out_bits_data_src1_T_15 = mux(_io_out_bits_data_src1_T_9, _io_out_bits_data_src1_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10103:38]
    node _io_out_bits_data_src1_T_16 = or(_io_out_bits_data_src1_T_12, _io_out_bits_data_src1_T_13) @[build/NutShell.fir.opt.mlir 10105:38]
    node _io_out_bits_data_src1_T_17 = or(_io_out_bits_data_src1_T_16, _io_out_bits_data_src1_T_14) @[build/NutShell.fir.opt.mlir 10107:38]
    node _io_out_bits_data_src1_T_18 = or(_io_out_bits_data_src1_T_17, _io_out_bits_data_src1_T_15) @[build/NutShell.fir.opt.mlir 10109:38]
    wire _io_out_bits_data_src1_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 10110:38]
    connect _io_out_bits_data_src1_WIRE, _io_out_bits_data_src1_T_18 @[build/NutShell.fir.opt.mlir 10111:7]
    connect io.out.bits.data.src1, _io_out_bits_data_src1_WIRE @[build/NutShell.fir.opt.mlir 10112:7]
    node _io_out_bits_data_src2_T = neq(io.in[0].bits.ctrl.src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10114:35]
    node _io_out_bits_data_src2_T_1 = eq(src2ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10116:37]
    node _io_out_bits_data_src2_T_2 = and(src2Forward, _io_out_bits_data_src2_T_1) @[build/NutShell.fir.opt.mlir 10118:37]
    node _io_out_bits_data_src2_T_3 = eq(io.in[0].bits.ctrl.src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10120:37]
    node _io_out_bits_data_src2_T_4 = eq(src2ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10122:37]
    node _io_out_bits_data_src2_T_5 = and(_io_out_bits_data_src2_T_3, _io_out_bits_data_src2_T_4) @[build/NutShell.fir.opt.mlir 10124:37]
    node _io_out_bits_data_src2_T_6 = eq(src2Forward, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10126:37]
    node _io_out_bits_data_src2_T_7 = and(_io_out_bits_data_src2_T_5, _io_out_bits_data_src2_T_6) @[build/NutShell.fir.opt.mlir 10128:37]
    node _io_out_bits_data_src2_T_8 = eq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10130:37]
    connect rf.io_out_bits_data_src2_MPORT.addr, io.in[0].bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 10131:7]
    connect rf.io_out_bits_data_src2_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10132:7]
    connect rf.io_out_bits_data_src2_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10133:7]
    node _io_out_bits_data_src2_T_9 = mux(_io_out_bits_data_src2_T_8, UInt<1>(0), rf.io_out_bits_data_src2_MPORT.data) @[build/NutShell.fir.opt.mlir 10135:37]
    node _io_out_bits_data_src2_T_10 = mux(_io_out_bits_data_src2_T, io.in[0].bits.data.imm, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10137:38]
    node _io_out_bits_data_src2_T_11 = mux(src2ForwardNextCycle, io.forward.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10139:38]
    node _io_out_bits_data_src2_T_12 = mux(_io_out_bits_data_src2_T_2, io.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10141:38]
    node _io_out_bits_data_src2_T_13 = mux(_io_out_bits_data_src2_T_7, _io_out_bits_data_src2_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10143:38]
    node _io_out_bits_data_src2_T_14 = or(_io_out_bits_data_src2_T_10, _io_out_bits_data_src2_T_11) @[build/NutShell.fir.opt.mlir 10145:38]
    node _io_out_bits_data_src2_T_15 = or(_io_out_bits_data_src2_T_14, _io_out_bits_data_src2_T_12) @[build/NutShell.fir.opt.mlir 10147:38]
    node _io_out_bits_data_src2_T_16 = or(_io_out_bits_data_src2_T_15, _io_out_bits_data_src2_T_13) @[build/NutShell.fir.opt.mlir 10149:38]
    wire _io_out_bits_data_src2_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 10150:38]
    connect _io_out_bits_data_src2_WIRE, _io_out_bits_data_src2_T_16 @[build/NutShell.fir.opt.mlir 10151:7]
    connect io.out.bits.data.src2, _io_out_bits_data_src2_WIRE @[build/NutShell.fir.opt.mlir 10152:7]
    connect io.out.bits.data.imm, io.in[0].bits.data.imm @[build/NutShell.fir.opt.mlir 10153:7]
    connect io.out.bits.cf, io.in[0].bits.cf @[build/NutShell.fir.opt.mlir 10154:7]
    connect io.out.bits.ctrl, io.in[0].bits.ctrl @[build/NutShell.fir.opt.mlir 10155:7]
    connect io.out.bits.ctrl.isSrc1Forward, src1ForwardNextCycle @[build/NutShell.fir.opt.mlir 10156:7]
    connect io.out.bits.ctrl.isSrc2Forward, src2ForwardNextCycle @[build/NutShell.fir.opt.mlir 10157:7]
    when io.wb.rfWen : @[build/NutShell.fir.opt.mlir 10158:7]
      connect rf.MPORT.addr, io.wb.rfDest @[build/NutShell.fir.opt.mlir 10159:9]
      connect rf.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10160:9]
      connect rf.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10161:9]
      connect rf.MPORT.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10162:9]
      node _T = bits(io.wb.rfData, 63, 0) @[build/NutShell.fir.opt.mlir 10164:15]
      connect rf.MPORT.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10165:9]
      connect rf.MPORT.data, _T @[build/NutShell.fir.opt.mlir 10166:9]
    node _wbClearMask_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10169:25]
    node _wbClearMask_T_1 = eq(io.wb.rfDest, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 10171:27]
    node _wbClearMask_T_2 = and(_wbClearMask_T, _wbClearMask_T_1) @[build/NutShell.fir.opt.mlir 10173:27]
    node _wbClearMask_T_3 = and(_wbClearMask_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 10175:27]
    node _wbClearMask_T_4 = eq(_wbClearMask_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10177:27]
    node _wbClearMask_T_5 = and(io.wb.rfWen, _wbClearMask_T_4) @[build/NutShell.fir.opt.mlir 10179:27]
    node _wbClearMask_T_6 = dshl(UInt<32>(1), io.wb.rfDest) @[build/NutShell.fir.opt.mlir 10182:27]
    node _wbClearMask_T_7 = bits(_wbClearMask_T_6, 31, 0) @[build/NutShell.fir.opt.mlir 10184:27]
    node wbClearMask = mux(_wbClearMask_T_5, _wbClearMask_T_7, UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10186:22]
    node _isuFireSetMask_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10188:28]
    node _isuFireSetMask_T_1 = dshl(UInt<32>(1), io.in[0].bits.ctrl.rfDest) @[build/NutShell.fir.opt.mlir 10190:30]
    node _isuFireSetMask_T_2 = bits(_isuFireSetMask_T_1, 31, 0) @[build/NutShell.fir.opt.mlir 10192:30]
    node isuFireSetMask = mux(_isuFireSetMask_T, _isuFireSetMask_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10194:25]
    when io.flush : @[build/NutShell.fir.opt.mlir 10196:7]
      node _T_1 = mux(UInt<1>(1), UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10198:17]
      node _busy_T = not(_T_1) @[build/NutShell.fir.opt.mlir 10200:20]
      node _busy_T_1 = and(busy, _busy_T) @[build/NutShell.fir.opt.mlir 10202:22]
      node _busy_T_2 = or(_busy_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10204:22]
      node _busy_T_3 = bits(_busy_T_2, 31, 1) @[build/NutShell.fir.opt.mlir 10206:22]
      node _busy_T_4 = cat(_busy_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10208:22]
      connect busy, _busy_T_4 @[build/NutShell.fir.opt.mlir 10209:9]
    else :
      node _busy_T_5 = not(wbClearMask) @[build/NutShell.fir.opt.mlir 10212:22]
      node _busy_T_6 = and(busy, _busy_T_5) @[build/NutShell.fir.opt.mlir 10214:22]
      node _busy_T_7 = or(_busy_T_6, isuFireSetMask) @[build/NutShell.fir.opt.mlir 10216:22]
      node _busy_T_8 = bits(_busy_T_7, 31, 1) @[build/NutShell.fir.opt.mlir 10218:22]
      node _busy_T_9 = cat(_busy_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10220:22]
      connect busy, _busy_T_9 @[build/NutShell.fir.opt.mlir 10221:9]
    node _io_in_0_ready_T = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10224:27]
    node _io_in_0_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10226:29]
    node _io_in_0_ready_T_2 = or(_io_in_0_ready_T, _io_in_0_ready_T_1) @[build/NutShell.fir.opt.mlir 10228:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 10229:7]
    connect io.in[1].ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10231:7]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10233:15]
    inst LogPerfHelper of LogPerfHelper_6 @[build/NutShell.fir.opt.mlir 10234:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 10235:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 10240:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 10241:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 10242:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 10243:7]
    node _T_3 = and(_T_2, c_control.logEnable) @[build/NutShell.fir.opt.mlir 10245:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 10246:7]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 10248:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10250:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 10251:9]
        skip @[build/NutShell.fir.opt.mlir 10252:11]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 10255:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10257:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 10258:9]
        skip @[build/NutShell.fir.opt.mlir 10259:11]
    node _T_8 = eq(io.out.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10263:15]
    node _T_9 = and(io.in[0].valid, _T_8) @[build/NutShell.fir.opt.mlir 10265:15]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 10266:16]
    connect _WIRE, _T_9 @[build/NutShell.fir.opt.mlir 10267:7]
    node _T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10269:16]
    node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10271:16]
    node _T_12 = and(io.out.valid, _T_11) @[build/NutShell.fir.opt.mlir 10273:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 10274:18]
    connect _WIRE_1, _T_12 @[build/NutShell.fir.opt.mlir 10275:7]
    node _T_13 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10277:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 10278:18]
    connect _WIRE_2, _T_13 @[build/NutShell.fir.opt.mlir 10279:7]
    wire difftest : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10280:19]
    wire _difftest_sink_bundle_WIRE : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10283:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 10320:7]
    connect _difftest_sink_bundle_WIRE.value[0], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10323:7]
    connect _difftest_sink_bundle_WIRE.value[1], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10325:7]
    connect _difftest_sink_bundle_WIRE.value[2], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10327:7]
    connect _difftest_sink_bundle_WIRE.value[3], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10329:7]
    connect _difftest_sink_bundle_WIRE.value[4], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10331:7]
    connect _difftest_sink_bundle_WIRE.value[5], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10333:7]
    connect _difftest_sink_bundle_WIRE.value[6], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10335:7]
    connect _difftest_sink_bundle_WIRE.value[7], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10337:7]
    connect _difftest_sink_bundle_WIRE.value[8], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10339:7]
    connect _difftest_sink_bundle_WIRE.value[9], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10341:7]
    connect _difftest_sink_bundle_WIRE.value[10], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10343:7]
    connect _difftest_sink_bundle_WIRE.value[11], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10345:7]
    connect _difftest_sink_bundle_WIRE.value[12], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10347:7]
    connect _difftest_sink_bundle_WIRE.value[13], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10349:7]
    connect _difftest_sink_bundle_WIRE.value[14], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10351:7]
    connect _difftest_sink_bundle_WIRE.value[15], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10353:7]
    connect _difftest_sink_bundle_WIRE.value[16], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10355:7]
    connect _difftest_sink_bundle_WIRE.value[17], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10357:7]
    connect _difftest_sink_bundle_WIRE.value[18], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10359:7]
    connect _difftest_sink_bundle_WIRE.value[19], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10361:7]
    connect _difftest_sink_bundle_WIRE.value[20], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10363:7]
    connect _difftest_sink_bundle_WIRE.value[21], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10365:7]
    connect _difftest_sink_bundle_WIRE.value[22], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10367:7]
    connect _difftest_sink_bundle_WIRE.value[23], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10369:7]
    connect _difftest_sink_bundle_WIRE.value[24], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10371:7]
    connect _difftest_sink_bundle_WIRE.value[25], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10373:7]
    connect _difftest_sink_bundle_WIRE.value[26], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10375:7]
    connect _difftest_sink_bundle_WIRE.value[27], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10377:7]
    connect _difftest_sink_bundle_WIRE.value[28], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10379:7]
    connect _difftest_sink_bundle_WIRE.value[29], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10381:7]
    connect _difftest_sink_bundle_WIRE.value[30], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10383:7]
    connect _difftest_sink_bundle_WIRE.value[31], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10385:7]
    wire difftest_sink : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10386:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 10421:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 10422:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10425:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 10426:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 10428:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10430:7]
    inst difftest_sink_module of DummyDPICWrapper @[build/NutShell.fir.opt.mlir 10431:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 10467:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 10468:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 10469:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 10470:7]
    connect difftest_sink_module.io.value[0], difftest_sink.value[0] @[build/NutShell.fir.opt.mlir 10471:7]
    connect difftest_sink_module.io.value[1], difftest_sink.value[1] @[build/NutShell.fir.opt.mlir 10472:7]
    connect difftest_sink_module.io.value[2], difftest_sink.value[2] @[build/NutShell.fir.opt.mlir 10473:7]
    connect difftest_sink_module.io.value[3], difftest_sink.value[3] @[build/NutShell.fir.opt.mlir 10474:7]
    connect difftest_sink_module.io.value[4], difftest_sink.value[4] @[build/NutShell.fir.opt.mlir 10475:7]
    connect difftest_sink_module.io.value[5], difftest_sink.value[5] @[build/NutShell.fir.opt.mlir 10476:7]
    connect difftest_sink_module.io.value[6], difftest_sink.value[6] @[build/NutShell.fir.opt.mlir 10477:7]
    connect difftest_sink_module.io.value[7], difftest_sink.value[7] @[build/NutShell.fir.opt.mlir 10478:7]
    connect difftest_sink_module.io.value[8], difftest_sink.value[8] @[build/NutShell.fir.opt.mlir 10479:7]
    connect difftest_sink_module.io.value[9], difftest_sink.value[9] @[build/NutShell.fir.opt.mlir 10480:7]
    connect difftest_sink_module.io.value[10], difftest_sink.value[10] @[build/NutShell.fir.opt.mlir 10481:7]
    connect difftest_sink_module.io.value[11], difftest_sink.value[11] @[build/NutShell.fir.opt.mlir 10482:7]
    connect difftest_sink_module.io.value[12], difftest_sink.value[12] @[build/NutShell.fir.opt.mlir 10483:7]
    connect difftest_sink_module.io.value[13], difftest_sink.value[13] @[build/NutShell.fir.opt.mlir 10484:7]
    connect difftest_sink_module.io.value[14], difftest_sink.value[14] @[build/NutShell.fir.opt.mlir 10485:7]
    connect difftest_sink_module.io.value[15], difftest_sink.value[15] @[build/NutShell.fir.opt.mlir 10486:7]
    connect difftest_sink_module.io.value[16], difftest_sink.value[16] @[build/NutShell.fir.opt.mlir 10487:7]
    connect difftest_sink_module.io.value[17], difftest_sink.value[17] @[build/NutShell.fir.opt.mlir 10488:7]
    connect difftest_sink_module.io.value[18], difftest_sink.value[18] @[build/NutShell.fir.opt.mlir 10489:7]
    connect difftest_sink_module.io.value[19], difftest_sink.value[19] @[build/NutShell.fir.opt.mlir 10490:7]
    connect difftest_sink_module.io.value[20], difftest_sink.value[20] @[build/NutShell.fir.opt.mlir 10491:7]
    connect difftest_sink_module.io.value[21], difftest_sink.value[21] @[build/NutShell.fir.opt.mlir 10492:7]
    connect difftest_sink_module.io.value[22], difftest_sink.value[22] @[build/NutShell.fir.opt.mlir 10493:7]
    connect difftest_sink_module.io.value[23], difftest_sink.value[23] @[build/NutShell.fir.opt.mlir 10494:7]
    connect difftest_sink_module.io.value[24], difftest_sink.value[24] @[build/NutShell.fir.opt.mlir 10495:7]
    connect difftest_sink_module.io.value[25], difftest_sink.value[25] @[build/NutShell.fir.opt.mlir 10496:7]
    connect difftest_sink_module.io.value[26], difftest_sink.value[26] @[build/NutShell.fir.opt.mlir 10497:7]
    connect difftest_sink_module.io.value[27], difftest_sink.value[27] @[build/NutShell.fir.opt.mlir 10498:7]
    connect difftest_sink_module.io.value[28], difftest_sink.value[28] @[build/NutShell.fir.opt.mlir 10499:7]
    connect difftest_sink_module.io.value[29], difftest_sink.value[29] @[build/NutShell.fir.opt.mlir 10500:7]
    connect difftest_sink_module.io.value[30], difftest_sink.value[30] @[build/NutShell.fir.opt.mlir 10501:7]
    connect difftest_sink_module.io.value[31], difftest_sink.value[31] @[build/NutShell.fir.opt.mlir 10502:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 10503:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 10504:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 10507:7]
    node _T_14 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10509:16]
    connect rf.MPORT_1.addr, pad(UInt<1>(0), 5) @[build/NutShell.fir.opt.mlir 10512:7]
    connect rf.MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10513:7]
    connect rf.MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 10514:7]
    node _T_15 = mux(_T_14, UInt<1>(0), rf.MPORT_1.data) @[build/NutShell.fir.opt.mlir 10516:16]
    node _T_16 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10518:16]
    connect rf.MPORT_2.addr, pad(UInt<1>(1), 5) @[build/NutShell.fir.opt.mlir 10521:7]
    connect rf.MPORT_2.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10522:7]
    connect rf.MPORT_2.clk, clock @[build/NutShell.fir.opt.mlir 10523:7]
    node _T_17 = mux(_T_16, UInt<1>(0), rf.MPORT_2.data) @[build/NutShell.fir.opt.mlir 10525:16]
    node _T_18 = eq(UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10528:16]
    connect rf.MPORT_3.addr, pad(UInt<2>(2), 5) @[build/NutShell.fir.opt.mlir 10531:7]
    connect rf.MPORT_3.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10532:7]
    connect rf.MPORT_3.clk, clock @[build/NutShell.fir.opt.mlir 10533:7]
    node _T_19 = mux(_T_18, UInt<1>(0), rf.MPORT_3.data) @[build/NutShell.fir.opt.mlir 10535:16]
    node _T_20 = eq(UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10538:16]
    connect rf.MPORT_4.addr, pad(UInt<2>(3), 5) @[build/NutShell.fir.opt.mlir 10541:7]
    connect rf.MPORT_4.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10542:7]
    connect rf.MPORT_4.clk, clock @[build/NutShell.fir.opt.mlir 10543:7]
    node _T_21 = mux(_T_20, UInt<1>(0), rf.MPORT_4.data) @[build/NutShell.fir.opt.mlir 10545:16]
    node _T_22 = eq(UInt<3>(4), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10548:16]
    connect rf.MPORT_5.addr, pad(UInt<3>(4), 5) @[build/NutShell.fir.opt.mlir 10551:7]
    connect rf.MPORT_5.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10552:7]
    connect rf.MPORT_5.clk, clock @[build/NutShell.fir.opt.mlir 10553:7]
    node _T_23 = mux(_T_22, UInt<1>(0), rf.MPORT_5.data) @[build/NutShell.fir.opt.mlir 10555:16]
    node _T_24 = eq(UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10558:16]
    connect rf.MPORT_6.addr, pad(UInt<3>(5), 5) @[build/NutShell.fir.opt.mlir 10561:7]
    connect rf.MPORT_6.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10562:7]
    connect rf.MPORT_6.clk, clock @[build/NutShell.fir.opt.mlir 10563:7]
    node _T_25 = mux(_T_24, UInt<1>(0), rf.MPORT_6.data) @[build/NutShell.fir.opt.mlir 10565:16]
    node _T_26 = eq(UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10568:16]
    connect rf.MPORT_7.addr, pad(UInt<3>(6), 5) @[build/NutShell.fir.opt.mlir 10571:7]
    connect rf.MPORT_7.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10572:7]
    connect rf.MPORT_7.clk, clock @[build/NutShell.fir.opt.mlir 10573:7]
    node _T_27 = mux(_T_26, UInt<1>(0), rf.MPORT_7.data) @[build/NutShell.fir.opt.mlir 10575:16]
    node _T_28 = eq(UInt<3>(7), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10578:16]
    connect rf.MPORT_8.addr, pad(UInt<3>(7), 5) @[build/NutShell.fir.opt.mlir 10581:7]
    connect rf.MPORT_8.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10582:7]
    connect rf.MPORT_8.clk, clock @[build/NutShell.fir.opt.mlir 10583:7]
    node _T_29 = mux(_T_28, UInt<1>(0), rf.MPORT_8.data) @[build/NutShell.fir.opt.mlir 10585:16]
    node _T_30 = eq(UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10588:16]
    connect rf.MPORT_9.addr, pad(UInt<4>(8), 5) @[build/NutShell.fir.opt.mlir 10591:7]
    connect rf.MPORT_9.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10592:7]
    connect rf.MPORT_9.clk, clock @[build/NutShell.fir.opt.mlir 10593:7]
    node _T_31 = mux(_T_30, UInt<1>(0), rf.MPORT_9.data) @[build/NutShell.fir.opt.mlir 10595:16]
    node _T_32 = eq(UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10598:16]
    connect rf.MPORT_10.addr, pad(UInt<4>(9), 5) @[build/NutShell.fir.opt.mlir 10601:7]
    connect rf.MPORT_10.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10602:7]
    connect rf.MPORT_10.clk, clock @[build/NutShell.fir.opt.mlir 10603:7]
    node _T_33 = mux(_T_32, UInt<1>(0), rf.MPORT_10.data) @[build/NutShell.fir.opt.mlir 10605:16]
    node _T_34 = eq(UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10608:16]
    connect rf.MPORT_11.addr, pad(UInt<4>(10), 5) @[build/NutShell.fir.opt.mlir 10611:7]
    connect rf.MPORT_11.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10612:7]
    connect rf.MPORT_11.clk, clock @[build/NutShell.fir.opt.mlir 10613:7]
    node _T_35 = mux(_T_34, UInt<1>(0), rf.MPORT_11.data) @[build/NutShell.fir.opt.mlir 10615:16]
    node _T_36 = eq(UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10618:16]
    connect rf.MPORT_12.addr, pad(UInt<4>(11), 5) @[build/NutShell.fir.opt.mlir 10621:7]
    connect rf.MPORT_12.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10622:7]
    connect rf.MPORT_12.clk, clock @[build/NutShell.fir.opt.mlir 10623:7]
    node _T_37 = mux(_T_36, UInt<1>(0), rf.MPORT_12.data) @[build/NutShell.fir.opt.mlir 10625:16]
    node _T_38 = eq(UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10628:16]
    connect rf.MPORT_13.addr, pad(UInt<4>(12), 5) @[build/NutShell.fir.opt.mlir 10631:7]
    connect rf.MPORT_13.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10632:7]
    connect rf.MPORT_13.clk, clock @[build/NutShell.fir.opt.mlir 10633:7]
    node _T_39 = mux(_T_38, UInt<1>(0), rf.MPORT_13.data) @[build/NutShell.fir.opt.mlir 10635:16]
    node _T_40 = eq(UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10638:16]
    connect rf.MPORT_14.addr, pad(UInt<4>(13), 5) @[build/NutShell.fir.opt.mlir 10641:7]
    connect rf.MPORT_14.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10642:7]
    connect rf.MPORT_14.clk, clock @[build/NutShell.fir.opt.mlir 10643:7]
    node _T_41 = mux(_T_40, UInt<1>(0), rf.MPORT_14.data) @[build/NutShell.fir.opt.mlir 10645:16]
    node _T_42 = eq(UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10648:16]
    connect rf.MPORT_15.addr, pad(UInt<4>(14), 5) @[build/NutShell.fir.opt.mlir 10651:7]
    connect rf.MPORT_15.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10652:7]
    connect rf.MPORT_15.clk, clock @[build/NutShell.fir.opt.mlir 10653:7]
    node _T_43 = mux(_T_42, UInt<1>(0), rf.MPORT_15.data) @[build/NutShell.fir.opt.mlir 10655:16]
    node _T_44 = eq(UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10658:16]
    connect rf.MPORT_16.addr, pad(UInt<4>(15), 5) @[build/NutShell.fir.opt.mlir 10661:7]
    connect rf.MPORT_16.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10662:7]
    connect rf.MPORT_16.clk, clock @[build/NutShell.fir.opt.mlir 10663:7]
    node _T_45 = mux(_T_44, UInt<1>(0), rf.MPORT_16.data) @[build/NutShell.fir.opt.mlir 10665:16]
    node _T_46 = eq(UInt<5>(16), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10668:16]
    connect rf.MPORT_17.addr, UInt<5>(16) @[build/NutShell.fir.opt.mlir 10670:7]
    connect rf.MPORT_17.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10671:7]
    connect rf.MPORT_17.clk, clock @[build/NutShell.fir.opt.mlir 10672:7]
    node _T_47 = mux(_T_46, UInt<1>(0), rf.MPORT_17.data) @[build/NutShell.fir.opt.mlir 10674:16]
    node _T_48 = eq(UInt<5>(17), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10677:16]
    connect rf.MPORT_18.addr, UInt<5>(17) @[build/NutShell.fir.opt.mlir 10679:7]
    connect rf.MPORT_18.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10680:7]
    connect rf.MPORT_18.clk, clock @[build/NutShell.fir.opt.mlir 10681:7]
    node _T_49 = mux(_T_48, UInt<1>(0), rf.MPORT_18.data) @[build/NutShell.fir.opt.mlir 10683:16]
    node _T_50 = eq(UInt<5>(18), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10686:16]
    connect rf.MPORT_19.addr, UInt<5>(18) @[build/NutShell.fir.opt.mlir 10688:7]
    connect rf.MPORT_19.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10689:7]
    connect rf.MPORT_19.clk, clock @[build/NutShell.fir.opt.mlir 10690:7]
    node _T_51 = mux(_T_50, UInt<1>(0), rf.MPORT_19.data) @[build/NutShell.fir.opt.mlir 10692:16]
    node _T_52 = eq(UInt<5>(19), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10695:16]
    connect rf.MPORT_20.addr, UInt<5>(19) @[build/NutShell.fir.opt.mlir 10697:7]
    connect rf.MPORT_20.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10698:7]
    connect rf.MPORT_20.clk, clock @[build/NutShell.fir.opt.mlir 10699:7]
    node _T_53 = mux(_T_52, UInt<1>(0), rf.MPORT_20.data) @[build/NutShell.fir.opt.mlir 10701:16]
    node _T_54 = eq(UInt<5>(20), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10704:16]
    connect rf.MPORT_21.addr, UInt<5>(20) @[build/NutShell.fir.opt.mlir 10706:7]
    connect rf.MPORT_21.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10707:7]
    connect rf.MPORT_21.clk, clock @[build/NutShell.fir.opt.mlir 10708:7]
    node _T_55 = mux(_T_54, UInt<1>(0), rf.MPORT_21.data) @[build/NutShell.fir.opt.mlir 10710:16]
    node _T_56 = eq(UInt<5>(21), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10713:16]
    connect rf.MPORT_22.addr, UInt<5>(21) @[build/NutShell.fir.opt.mlir 10715:7]
    connect rf.MPORT_22.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10716:7]
    connect rf.MPORT_22.clk, clock @[build/NutShell.fir.opt.mlir 10717:7]
    node _T_57 = mux(_T_56, UInt<1>(0), rf.MPORT_22.data) @[build/NutShell.fir.opt.mlir 10719:16]
    node _T_58 = eq(UInt<5>(22), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10722:16]
    connect rf.MPORT_23.addr, UInt<5>(22) @[build/NutShell.fir.opt.mlir 10724:7]
    connect rf.MPORT_23.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10725:7]
    connect rf.MPORT_23.clk, clock @[build/NutShell.fir.opt.mlir 10726:7]
    node _T_59 = mux(_T_58, UInt<1>(0), rf.MPORT_23.data) @[build/NutShell.fir.opt.mlir 10728:16]
    node _T_60 = eq(UInt<5>(23), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10731:16]
    connect rf.MPORT_24.addr, UInt<5>(23) @[build/NutShell.fir.opt.mlir 10733:7]
    connect rf.MPORT_24.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10734:7]
    connect rf.MPORT_24.clk, clock @[build/NutShell.fir.opt.mlir 10735:7]
    node _T_61 = mux(_T_60, UInt<1>(0), rf.MPORT_24.data) @[build/NutShell.fir.opt.mlir 10737:16]
    node _T_62 = eq(UInt<5>(24), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10740:16]
    connect rf.MPORT_25.addr, UInt<5>(24) @[build/NutShell.fir.opt.mlir 10742:7]
    connect rf.MPORT_25.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10743:7]
    connect rf.MPORT_25.clk, clock @[build/NutShell.fir.opt.mlir 10744:7]
    node _T_63 = mux(_T_62, UInt<1>(0), rf.MPORT_25.data) @[build/NutShell.fir.opt.mlir 10746:16]
    node _T_64 = eq(UInt<5>(25), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10749:16]
    connect rf.MPORT_26.addr, UInt<5>(25) @[build/NutShell.fir.opt.mlir 10751:7]
    connect rf.MPORT_26.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10752:7]
    connect rf.MPORT_26.clk, clock @[build/NutShell.fir.opt.mlir 10753:7]
    node _T_65 = mux(_T_64, UInt<1>(0), rf.MPORT_26.data) @[build/NutShell.fir.opt.mlir 10755:16]
    node _T_66 = eq(UInt<5>(26), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10758:16]
    connect rf.MPORT_27.addr, UInt<5>(26) @[build/NutShell.fir.opt.mlir 10760:7]
    connect rf.MPORT_27.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10761:7]
    connect rf.MPORT_27.clk, clock @[build/NutShell.fir.opt.mlir 10762:7]
    node _T_67 = mux(_T_66, UInt<1>(0), rf.MPORT_27.data) @[build/NutShell.fir.opt.mlir 10764:16]
    node _T_68 = eq(UInt<5>(27), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10767:16]
    connect rf.MPORT_28.addr, UInt<5>(27) @[build/NutShell.fir.opt.mlir 10769:7]
    connect rf.MPORT_28.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10770:7]
    connect rf.MPORT_28.clk, clock @[build/NutShell.fir.opt.mlir 10771:7]
    node _T_69 = mux(_T_68, UInt<1>(0), rf.MPORT_28.data) @[build/NutShell.fir.opt.mlir 10773:16]
    node _T_70 = eq(UInt<5>(28), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10776:16]
    connect rf.MPORT_29.addr, UInt<5>(28) @[build/NutShell.fir.opt.mlir 10778:7]
    connect rf.MPORT_29.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10779:7]
    connect rf.MPORT_29.clk, clock @[build/NutShell.fir.opt.mlir 10780:7]
    node _T_71 = mux(_T_70, UInt<1>(0), rf.MPORT_29.data) @[build/NutShell.fir.opt.mlir 10782:16]
    node _T_72 = eq(UInt<5>(29), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10785:16]
    connect rf.MPORT_30.addr, UInt<5>(29) @[build/NutShell.fir.opt.mlir 10787:7]
    connect rf.MPORT_30.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10788:7]
    connect rf.MPORT_30.clk, clock @[build/NutShell.fir.opt.mlir 10789:7]
    node _T_73 = mux(_T_72, UInt<1>(0), rf.MPORT_30.data) @[build/NutShell.fir.opt.mlir 10791:16]
    node _T_74 = eq(UInt<5>(30), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10794:16]
    connect rf.MPORT_31.addr, UInt<5>(30) @[build/NutShell.fir.opt.mlir 10796:7]
    connect rf.MPORT_31.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10797:7]
    connect rf.MPORT_31.clk, clock @[build/NutShell.fir.opt.mlir 10798:7]
    node _T_75 = mux(_T_74, UInt<1>(0), rf.MPORT_31.data) @[build/NutShell.fir.opt.mlir 10800:16]
    node _T_76 = eq(UInt<5>(31), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10803:16]
    connect rf.MPORT_32.addr, UInt<5>(31) @[build/NutShell.fir.opt.mlir 10805:7]
    connect rf.MPORT_32.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10806:7]
    connect rf.MPORT_32.clk, clock @[build/NutShell.fir.opt.mlir 10807:7]
    node _T_77 = mux(_T_76, UInt<1>(0), rf.MPORT_32.data) @[build/NutShell.fir.opt.mlir 10809:16]
    wire _WIRE_3 : UInt<64>[32] @[build/NutShell.fir.opt.mlir 10810:18]
    connect _WIRE_3[0], _T_15 @[build/NutShell.fir.opt.mlir 10843:7]
    connect _WIRE_3[1], _T_17 @[build/NutShell.fir.opt.mlir 10844:7]
    connect _WIRE_3[2], _T_19 @[build/NutShell.fir.opt.mlir 10845:7]
    connect _WIRE_3[3], _T_21 @[build/NutShell.fir.opt.mlir 10846:7]
    connect _WIRE_3[4], _T_23 @[build/NutShell.fir.opt.mlir 10847:7]
    connect _WIRE_3[5], _T_25 @[build/NutShell.fir.opt.mlir 10848:7]
    connect _WIRE_3[6], _T_27 @[build/NutShell.fir.opt.mlir 10849:7]
    connect _WIRE_3[7], _T_29 @[build/NutShell.fir.opt.mlir 10850:7]
    connect _WIRE_3[8], _T_31 @[build/NutShell.fir.opt.mlir 10851:7]
    connect _WIRE_3[9], _T_33 @[build/NutShell.fir.opt.mlir 10852:7]
    connect _WIRE_3[10], _T_35 @[build/NutShell.fir.opt.mlir 10853:7]
    connect _WIRE_3[11], _T_37 @[build/NutShell.fir.opt.mlir 10854:7]
    connect _WIRE_3[12], _T_39 @[build/NutShell.fir.opt.mlir 10855:7]
    connect _WIRE_3[13], _T_41 @[build/NutShell.fir.opt.mlir 10856:7]
    connect _WIRE_3[14], _T_43 @[build/NutShell.fir.opt.mlir 10857:7]
    connect _WIRE_3[15], _T_45 @[build/NutShell.fir.opt.mlir 10858:7]
    connect _WIRE_3[16], _T_47 @[build/NutShell.fir.opt.mlir 10859:7]
    connect _WIRE_3[17], _T_49 @[build/NutShell.fir.opt.mlir 10860:7]
    connect _WIRE_3[18], _T_51 @[build/NutShell.fir.opt.mlir 10861:7]
    connect _WIRE_3[19], _T_53 @[build/NutShell.fir.opt.mlir 10862:7]
    connect _WIRE_3[20], _T_55 @[build/NutShell.fir.opt.mlir 10863:7]
    connect _WIRE_3[21], _T_57 @[build/NutShell.fir.opt.mlir 10864:7]
    connect _WIRE_3[22], _T_59 @[build/NutShell.fir.opt.mlir 10865:7]
    connect _WIRE_3[23], _T_61 @[build/NutShell.fir.opt.mlir 10866:7]
    connect _WIRE_3[24], _T_63 @[build/NutShell.fir.opt.mlir 10867:7]
    connect _WIRE_3[25], _T_65 @[build/NutShell.fir.opt.mlir 10868:7]
    connect _WIRE_3[26], _T_67 @[build/NutShell.fir.opt.mlir 10869:7]
    connect _WIRE_3[27], _T_69 @[build/NutShell.fir.opt.mlir 10870:7]
    connect _WIRE_3[28], _T_71 @[build/NutShell.fir.opt.mlir 10871:7]
    connect _WIRE_3[29], _T_73 @[build/NutShell.fir.opt.mlir 10872:7]
    connect _WIRE_3[30], _T_75 @[build/NutShell.fir.opt.mlir 10873:7]
    connect _WIRE_3[31], _T_77 @[build/NutShell.fir.opt.mlir 10874:7]
    connect difftest.value, _WIRE_3 @[build/NutShell.fir.opt.mlir 10875:7]

  extmodule LogPerfHelper_7 : @[build/NutShell.fir.opt.mlir 10877:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 10877:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 10877:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 10877:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 10877:140]
    defname = LogPerfHelper

  module ALU : @[build/NutShell.fir.opt.mlir 10878:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 10878:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 10878:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip offset : UInt<64> } @[build/NutShell.fir.opt.mlir 10878:88]

    node _isAdderSub_T = bits(io.in.bits.func, 6, 6) @[build/NutShell.fir.opt.mlir 10901:24]
    node isAdderSub = eq(_isAdderSub_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10904:21]
    node _adderRes_T = mux(isAdderSub, UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 10908:22]
    node _adderRes_T_1 = xor(io.in.bits.src2, _adderRes_T) @[build/NutShell.fir.opt.mlir 10910:24]
    node _adderRes_T_2 = add(io.in.bits.src1, _adderRes_T_1) @[build/NutShell.fir.opt.mlir 10912:24]
    node _adderRes_T_3 = add(_adderRes_T_2, isAdderSub) @[build/NutShell.fir.opt.mlir 10914:24]
    node adderRes = tail(_adderRes_T_3, 1) @[build/NutShell.fir.opt.mlir 10916:19]
    node xorRes = xor(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 10918:17]
    node _sltu_T = bits(adderRes, 64, 64) @[build/NutShell.fir.opt.mlir 10920:18]
    node sltu = eq(_sltu_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10922:15]
    node _slt_T = bits(xorRes, 63, 63) @[build/NutShell.fir.opt.mlir 10924:17]
    node slt = xor(_slt_T, sltu) @[build/NutShell.fir.opt.mlir 10926:14]
    node _shsrc1_T = bits(io.in.bits.src1, 63, 0) @[build/NutShell.fir.opt.mlir 10928:20]
    node _shsrc1_T_1 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 10930:22]
    node _shsrc1_T_2 = cat(UInt<32>(0), _shsrc1_T_1) @[build/NutShell.fir.opt.mlir 10933:22]
    node _shsrc1_T_3 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 10935:22]
    node shsrc1_signBit = bits(_shsrc1_T_3, 31, 31) @[build/NutShell.fir.opt.mlir 10937:25]
    node _shsrc1_T_4 = mux(shsrc1_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10940:22]
    node _shsrc1_T_5 = cat(_shsrc1_T_4, _shsrc1_T_3) @[build/NutShell.fir.opt.mlir 10942:22]
    node _shsrc1_T_6 = eq(UInt<6>(37), io.in.bits.func) @[build/NutShell.fir.opt.mlir 10945:22]
    node _shsrc1_T_7 = mux(_shsrc1_T_6, _shsrc1_T_2, _shsrc1_T) @[build/NutShell.fir.opt.mlir 10947:22]
    node _shsrc1_T_8 = eq(UInt<6>(45), io.in.bits.func) @[build/NutShell.fir.opt.mlir 10950:22]
    node shsrc1 = mux(_shsrc1_T_8, _shsrc1_T_5, _shsrc1_T_7) @[build/NutShell.fir.opt.mlir 10952:17]
    node _shamt_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 10954:19]
    node _shamt_T_1 = bits(io.in.bits.src2, 4, 0) @[build/NutShell.fir.opt.mlir 10956:21]
    node _shamt_T_2 = bits(io.in.bits.src2, 5, 0) @[build/NutShell.fir.opt.mlir 10958:21]
    node shamt = mux(_shamt_T, _shamt_T_1, _shamt_T_2) @[build/NutShell.fir.opt.mlir 10960:16]
    node _res_T = bits(io.in.bits.func, 3, 0) @[build/NutShell.fir.opt.mlir 10962:17]
    node _res_T_1 = dshl(shsrc1, shamt) @[build/NutShell.fir.opt.mlir 10964:19]
    node _res_T_2 = bits(_res_T_1, 63, 0) @[build/NutShell.fir.opt.mlir 10966:19]
    node _res_T_3 = cat(UInt<63>(0), slt) @[build/NutShell.fir.opt.mlir 10969:19]
    node _res_T_4 = cat(UInt<63>(0), sltu) @[build/NutShell.fir.opt.mlir 10971:19]
    node _res_T_5 = dshr(shsrc1, shamt) @[build/NutShell.fir.opt.mlir 10973:19]
    node _res_T_6 = or(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 10975:19]
    node _res_T_7 = and(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 10977:19]
    node _res_T_8 = asSInt(shsrc1) @[build/NutShell.fir.opt.mlir 10979:19]
    node _res_T_9 = dshr(_res_T_8, shamt) @[build/NutShell.fir.opt.mlir 10981:19]
    node _res_T_10 = asUInt(_res_T_9) @[build/NutShell.fir.opt.mlir 10983:20]
    node _res_T_11 = eq(UInt<1>(1), _res_T) @[build/NutShell.fir.opt.mlir 10986:20]
    node _res_T_12 = mux(_res_T_11, _res_T_2, adderRes) @[build/NutShell.fir.opt.mlir 10988:20]
    node _res_T_13 = eq(UInt<2>(2), _res_T) @[build/NutShell.fir.opt.mlir 10991:20]
    node _res_T_14 = mux(_res_T_13, _res_T_3, _res_T_12) @[build/NutShell.fir.opt.mlir 10993:20]
    node _res_T_15 = eq(UInt<2>(3), _res_T) @[build/NutShell.fir.opt.mlir 10996:20]
    node _res_T_16 = mux(_res_T_15, _res_T_4, _res_T_14) @[build/NutShell.fir.opt.mlir 10998:20]
    node _res_T_17 = eq(UInt<3>(4), _res_T) @[build/NutShell.fir.opt.mlir 11001:20]
    node _res_T_18 = mux(_res_T_17, xorRes, _res_T_16) @[build/NutShell.fir.opt.mlir 11003:20]
    node _res_T_19 = eq(UInt<3>(5), _res_T) @[build/NutShell.fir.opt.mlir 11006:20]
    node _res_T_20 = mux(_res_T_19, _res_T_5, _res_T_18) @[build/NutShell.fir.opt.mlir 11008:20]
    node _res_T_21 = eq(UInt<3>(6), _res_T) @[build/NutShell.fir.opt.mlir 11011:20]
    node _res_T_22 = mux(_res_T_21, _res_T_6, _res_T_20) @[build/NutShell.fir.opt.mlir 11013:20]
    node _res_T_23 = eq(UInt<3>(7), _res_T) @[build/NutShell.fir.opt.mlir 11016:20]
    node _res_T_24 = mux(_res_T_23, _res_T_7, _res_T_22) @[build/NutShell.fir.opt.mlir 11018:20]
    node _res_T_25 = eq(UInt<4>(13), _res_T) @[build/NutShell.fir.opt.mlir 11021:20]
    node res = mux(_res_T_25, _res_T_10, _res_T_24) @[build/NutShell.fir.opt.mlir 11023:14]
    node _aluRes_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 11025:20]
    node _aluRes_T_1 = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 11027:22]
    node aluRes_signBit = bits(_aluRes_T_1, 31, 31) @[build/NutShell.fir.opt.mlir 11029:25]
    node _aluRes_T_2 = mux(aluRes_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 11031:22]
    node _aluRes_T_3 = cat(_aluRes_T_2, _aluRes_T_1) @[build/NutShell.fir.opt.mlir 11033:22]
    node aluRes = mux(_aluRes_T, _aluRes_T_3, res) @[build/NutShell.fir.opt.mlir 11035:17]
    node _branchOpTable_T = orr(xorRes) @[build/NutShell.fir.opt.mlir 11037:27]
    node branchOpTable_0_2 = eq(_branchOpTable_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11039:28]
    node _isBranch_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 11041:22]
    node isBranch = eq(_isBranch_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11043:19]
    node isBru = bits(io.in.bits.func, 4, 4) @[build/NutShell.fir.opt.mlir 11045:16]
    node _taken_T = bits(io.in.bits.func, 2, 1) @[build/NutShell.fir.opt.mlir 11047:19]
    node _taken_T_1 = eq(UInt<2>(0), _taken_T) @[build/NutShell.fir.opt.mlir 11050:21]
    node _taken_T_2 = eq(UInt<2>(2), _taken_T) @[build/NutShell.fir.opt.mlir 11052:21]
    node _taken_T_3 = eq(UInt<2>(3), _taken_T) @[build/NutShell.fir.opt.mlir 11054:21]
    node _taken_T_4 = mux(_taken_T_1, branchOpTable_0_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11056:21]
    node _taken_T_5 = mux(_taken_T_2, slt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11058:21]
    node _taken_T_6 = mux(_taken_T_3, sltu, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11060:21]
    node _taken_T_7 = or(_taken_T_4, _taken_T_5) @[build/NutShell.fir.opt.mlir 11062:21]
    node _taken_T_8 = or(_taken_T_7, _taken_T_6) @[build/NutShell.fir.opt.mlir 11064:21]
    wire _taken_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 11065:22]
    connect _taken_WIRE, _taken_T_8 @[build/NutShell.fir.opt.mlir 11066:7]
    node _taken_T_9 = bits(io.in.bits.func, 0, 0) @[build/NutShell.fir.opt.mlir 11068:21]
    node taken = xor(_taken_WIRE, _taken_T_9) @[build/NutShell.fir.opt.mlir 11070:16]
    node _target_T = add(io.cfIn.pc, io.offset) @[build/NutShell.fir.opt.mlir 11072:20]
    node _target_T_1 = tail(_target_T, 1) @[build/NutShell.fir.opt.mlir 11074:22]
    node _target_T_2 = bits(adderRes, 63, 1) @[build/NutShell.fir.opt.mlir 11076:22]
    node _target_T_3 = cat(_target_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11078:22]
    node _target_T_4 = mux(isBranch, _target_T_1, _target_T_3) @[build/NutShell.fir.opt.mlir 11080:22]
    node target = bits(_target_T_4, 38, 0) @[build/NutShell.fir.opt.mlir 11082:17]
    node _predictWrong_T = eq(taken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11084:26]
    node _predictWrong_T_1 = and(_predictWrong_T, isBranch) @[build/NutShell.fir.opt.mlir 11086:28]
    node _predictWrong_T_2 = bits(io.cfIn.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 11088:28]
    node _predictWrong_T_3 = bits(io.cfIn.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 11090:28]
    node _predictWrong_T_4 = eq(_predictWrong_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11092:28]
    node _predictWrong_T_5 = neq(io.redirect.target, io.cfIn.pnpc) @[build/NutShell.fir.opt.mlir 11094:28]
    node _predictWrong_T_6 = or(_predictWrong_T_4, _predictWrong_T_5) @[build/NutShell.fir.opt.mlir 11096:28]
    node predictWrong = mux(_predictWrong_T_1, _predictWrong_T_2, _predictWrong_T_6) @[build/NutShell.fir.opt.mlir 11098:23]
    node _isRVC_T = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11100:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11102:16]
    node _T = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11104:13]
    node _T_1 = eq(_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11106:15]
    node _T_2 = or(_T_1, isRVC) @[build/NutShell.fir.opt.mlir 11108:15]
    node _T_3 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11110:15]
    node _T_4 = or(_T_2, _T_3) @[build/NutShell.fir.opt.mlir 11112:15]
    node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11114:15]
    node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11116:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 11117:7]
      node _T_7 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11119:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 11120:9]
        skip @[build/NutShell.fir.opt.mlir 11121:11]
      assert(clock, _T_4, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 11123:9]
    node _T_8 = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11126:15]
    node _T_9 = eq(_T_8, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11128:15]
    node _T_10 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11130:16]
    node _T_11 = neq(_T_9, _T_10) @[build/NutShell.fir.opt.mlir 11132:16]
    node _T_12 = and(io.in.valid, _T_11) @[build/NutShell.fir.opt.mlir 11134:16]
    inst LogPerfHelper of LogPerfHelper_7 @[build/NutShell.fir.opt.mlir 11135:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 11136:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 11141:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 11142:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 11143:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 11144:7]
    node _T_13 = and(_T_12, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11146:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 11147:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11149:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11151:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 11152:9]
        skip @[build/NutShell.fir.opt.mlir 11153:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11156:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11158:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 11159:9]
        skip @[build/NutShell.fir.opt.mlir 11160:11]
    node _io_redirect_target_T = eq(taken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11164:32]
    node _io_redirect_target_T_1 = and(_io_redirect_target_T, isBranch) @[build/NutShell.fir.opt.mlir 11166:34]
    node _io_redirect_target_T_2 = add(io.cfIn.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11168:34]
    node _io_redirect_target_T_3 = tail(_io_redirect_target_T_2, 1) @[build/NutShell.fir.opt.mlir 11170:34]
    node _io_redirect_target_T_4 = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11172:34]
    node _io_redirect_target_T_5 = tail(_io_redirect_target_T_4, 1) @[build/NutShell.fir.opt.mlir 11174:34]
    node _io_redirect_target_T_6 = mux(isRVC, _io_redirect_target_T_3, _io_redirect_target_T_5) @[build/NutShell.fir.opt.mlir 11176:34]
    node _io_redirect_target_T_7 = mux(_io_redirect_target_T_1, _io_redirect_target_T_6, target) @[build/NutShell.fir.opt.mlir 11178:34]
    connect io.redirect.target, _io_redirect_target_T_7 @[build/NutShell.fir.opt.mlir 11179:7]
    node _io_redirect_valid_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11181:31]
    node _io_redirect_valid_T_1 = and(_io_redirect_valid_T, predictWrong) @[build/NutShell.fir.opt.mlir 11183:33]
    connect io.redirect.valid, _io_redirect_valid_T_1 @[build/NutShell.fir.opt.mlir 11184:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11186:7]
    node _io_out_bits_T = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11188:25]
    node io_out_bits_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 11190:30]
    node _io_out_bits_T_1 = mux(io_out_bits_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 11194:27]
    node _io_out_bits_T_2 = cat(_io_out_bits_T_1, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 11196:27]
    node _io_out_bits_T_3 = add(_io_out_bits_T_2, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11198:27]
    node _io_out_bits_T_4 = tail(_io_out_bits_T_3, 1) @[build/NutShell.fir.opt.mlir 11200:27]
    node io_out_bits_signBit_1 = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 11202:32]
    node _io_out_bits_T_5 = mux(io_out_bits_signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 11204:27]
    node _io_out_bits_T_6 = cat(_io_out_bits_T_5, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 11206:27]
    node _io_out_bits_T_7 = add(_io_out_bits_T_6, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11208:27]
    node _io_out_bits_T_8 = tail(_io_out_bits_T_7, 1) @[build/NutShell.fir.opt.mlir 11210:27]
    node _io_out_bits_T_9 = mux(_io_out_bits_T, _io_out_bits_T_4, _io_out_bits_T_8) @[build/NutShell.fir.opt.mlir 11212:27]
    node _io_out_bits_T_10 = mux(isBru, _io_out_bits_T_9, aluRes) @[build/NutShell.fir.opt.mlir 11214:28]
    connect io.out.bits, tail(_io_out_bits_T_10, 1) @[build/NutShell.fir.opt.mlir 11216:7]
    node _T_18 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11218:16]
    node _T_19 = and(_T_18, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11220:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 11221:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11223:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11225:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 11226:9]
        skip @[build/NutShell.fir.opt.mlir 11227:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11230:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11232:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 11233:9]
        skip @[build/NutShell.fir.opt.mlir 11234:11]
    node _T_24 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11238:16]
    node _T_25 = and(_T_24, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11240:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 11241:7]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11243:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11245:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 11246:9]
        skip @[build/NutShell.fir.opt.mlir 11247:11]
      node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11250:18]
      node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11252:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 11253:9]
        skip @[build/NutShell.fir.opt.mlir 11254:11]
    node _T_30 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11258:16]
    node _T_31 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11261:16]
    node _T_32 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11264:16]
    node _T_33 = or(_T_31, _T_32) @[build/NutShell.fir.opt.mlir 11266:16]
    node _T_34 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11269:16]
    node _T_35 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11272:16]
    node _T_36 = and(_T_30, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11274:16]
    when _T_36 : @[build/NutShell.fir.opt.mlir 11275:7]
      node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11277:18]
      node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11279:18]
      when _T_38 : @[build/NutShell.fir.opt.mlir 11280:9]
        skip @[build/NutShell.fir.opt.mlir 11281:11]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11284:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11286:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 11287:9]
        skip @[build/NutShell.fir.opt.mlir 11288:11]
    node _T_41 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 11292:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 11293:7]
      node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11295:18]
      node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11297:18]
      when _T_43 : @[build/NutShell.fir.opt.mlir 11298:9]
        skip @[build/NutShell.fir.opt.mlir 11299:11]
      node _T_44 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11302:18]
      node _T_45 = eq(_T_44, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11304:18]
      when _T_45 : @[build/NutShell.fir.opt.mlir 11305:9]
        skip @[build/NutShell.fir.opt.mlir 11306:11]
    node _T_46 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11310:16]
    node _T_47 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11312:16]
    node _T_48 = eq(UInt<5>(16), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11315:16]
    node _T_49 = eq(UInt<5>(17), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11318:16]
    node _T_50 = eq(UInt<5>(20), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11321:16]
    node _T_51 = eq(UInt<5>(21), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11324:16]
    node _T_52 = eq(UInt<5>(22), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11327:16]
    node _T_53 = eq(UInt<5>(23), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11330:16]
    node _T_54 = eq(UInt<7>(92), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11332:16]
    node _T_55 = eq(UInt<7>(94), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11334:16]
    node _T_56 = eq(UInt<7>(88), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11336:16]
    node _T_57 = eq(UInt<7>(90), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11338:16]
    node _T_58 = mux(_T_48, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11340:16]
    node _T_59 = mux(_T_49, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11342:16]
    node _T_60 = mux(_T_50, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11344:16]
    node _T_61 = mux(_T_51, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11346:16]
    node _T_62 = mux(_T_52, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11348:16]
    node _T_63 = mux(_T_53, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11350:16]
    node _T_64 = mux(_T_54, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11352:16]
    node _T_65 = mux(_T_55, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11354:16]
    node _T_66 = mux(_T_56, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11356:16]
    node _T_67 = mux(_T_57, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11358:16]
    node _T_68 = or(_T_58, _T_59) @[build/NutShell.fir.opt.mlir 11360:16]
    node _T_69 = or(_T_68, _T_60) @[build/NutShell.fir.opt.mlir 11362:16]
    node _T_70 = or(_T_69, _T_61) @[build/NutShell.fir.opt.mlir 11364:16]
    node _T_71 = or(_T_70, _T_62) @[build/NutShell.fir.opt.mlir 11366:16]
    node _T_72 = or(_T_71, _T_63) @[build/NutShell.fir.opt.mlir 11368:16]
    node _T_73 = or(_T_72, _T_64) @[build/NutShell.fir.opt.mlir 11370:16]
    node _T_74 = or(_T_73, _T_65) @[build/NutShell.fir.opt.mlir 11372:16]
    node _T_75 = or(_T_74, _T_66) @[build/NutShell.fir.opt.mlir 11374:16]
    node _T_76 = or(_T_75, _T_67) @[build/NutShell.fir.opt.mlir 11376:16]
    wire _WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 11377:16]
    connect _WIRE, _T_76 @[build/NutShell.fir.opt.mlir 11378:7]
    node _T_77 = and(_T_46, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11380:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 11381:7]
      node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11383:18]
      node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11385:18]
      when _T_79 : @[build/NutShell.fir.opt.mlir 11386:9]
        skip @[build/NutShell.fir.opt.mlir 11387:11]
      node _T_80 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11390:18]
      node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11392:18]
      when _T_81 : @[build/NutShell.fir.opt.mlir 11393:9]
        skip @[build/NutShell.fir.opt.mlir 11394:11]
    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 11397:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 11398:7]
    wire _bpuUpdateReq_WIRE : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 11399:29]
    connect _bpuUpdateReq_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11409:7]
    connect _bpuUpdateReq_WIRE.btbType, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11411:7]
    connect _bpuUpdateReq_WIRE.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 11414:7]
    connect _bpuUpdateReq_WIRE.actualTaken, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11416:7]
    connect _bpuUpdateReq_WIRE.actualTarget, UInt<39>(0) @[build/NutShell.fir.opt.mlir 11419:7]
    connect _bpuUpdateReq_WIRE.isMissPredict, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11421:7]
    connect _bpuUpdateReq_WIRE.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 11423:7]
    connect _bpuUpdateReq_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11425:7]
    wire bpuUpdateReq : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 11426:23]
    connect bpuUpdateReq, _bpuUpdateReq_WIRE @[build/NutShell.fir.opt.mlir 11435:7]
    node _bpuUpdateReq_valid_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11437:32]
    connect bpuUpdateReq.valid, _bpuUpdateReq_valid_T @[build/NutShell.fir.opt.mlir 11438:7]
    connect bpuUpdateReq.pc, io.cfIn.pc @[build/NutShell.fir.opt.mlir 11439:7]
    connect bpuUpdateReq.isMissPredict, predictWrong @[build/NutShell.fir.opt.mlir 11440:7]
    connect bpuUpdateReq.actualTarget, target @[build/NutShell.fir.opt.mlir 11441:7]
    connect bpuUpdateReq.actualTaken, taken @[build/NutShell.fir.opt.mlir 11442:7]
    connect bpuUpdateReq.fuOpType, io.in.bits.func @[build/NutShell.fir.opt.mlir 11443:7]
    node _bpuUpdateReq_btbType_T = eq(UInt<5>(16), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11445:34]
    node _bpuUpdateReq_btbType_T_1 = eq(UInt<5>(17), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11447:36]
    node _bpuUpdateReq_btbType_T_2 = eq(UInt<5>(20), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11449:36]
    node _bpuUpdateReq_btbType_T_3 = eq(UInt<5>(21), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11451:36]
    node _bpuUpdateReq_btbType_T_4 = eq(UInt<5>(22), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11453:36]
    node _bpuUpdateReq_btbType_T_5 = eq(UInt<5>(23), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11455:36]
    node _bpuUpdateReq_btbType_T_6 = eq(UInt<7>(92), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11457:36]
    node _bpuUpdateReq_btbType_T_7 = eq(UInt<7>(94), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11459:36]
    node _bpuUpdateReq_btbType_T_8 = eq(UInt<7>(88), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11461:36]
    node _bpuUpdateReq_btbType_T_9 = eq(UInt<7>(90), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11463:36]
    node _bpuUpdateReq_btbType_T_10 = mux(_bpuUpdateReq_btbType_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11465:37]
    node _bpuUpdateReq_btbType_T_11 = mux(_bpuUpdateReq_btbType_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11467:37]
    node _bpuUpdateReq_btbType_T_12 = mux(_bpuUpdateReq_btbType_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11469:37]
    node _bpuUpdateReq_btbType_T_13 = mux(_bpuUpdateReq_btbType_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11471:37]
    node _bpuUpdateReq_btbType_T_14 = mux(_bpuUpdateReq_btbType_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11473:37]
    node _bpuUpdateReq_btbType_T_15 = mux(_bpuUpdateReq_btbType_T_5, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11475:37]
    node _bpuUpdateReq_btbType_T_16 = mux(_bpuUpdateReq_btbType_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11477:37]
    node _bpuUpdateReq_btbType_T_17 = mux(_bpuUpdateReq_btbType_T_7, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11479:37]
    node _bpuUpdateReq_btbType_T_18 = mux(_bpuUpdateReq_btbType_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11481:37]
    node _bpuUpdateReq_btbType_T_19 = mux(_bpuUpdateReq_btbType_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11483:37]
    node _bpuUpdateReq_btbType_T_20 = or(_bpuUpdateReq_btbType_T_10, _bpuUpdateReq_btbType_T_11) @[build/NutShell.fir.opt.mlir 11485:37]
    node _bpuUpdateReq_btbType_T_21 = or(_bpuUpdateReq_btbType_T_20, _bpuUpdateReq_btbType_T_12) @[build/NutShell.fir.opt.mlir 11487:37]
    node _bpuUpdateReq_btbType_T_22 = or(_bpuUpdateReq_btbType_T_21, _bpuUpdateReq_btbType_T_13) @[build/NutShell.fir.opt.mlir 11489:37]
    node _bpuUpdateReq_btbType_T_23 = or(_bpuUpdateReq_btbType_T_22, _bpuUpdateReq_btbType_T_14) @[build/NutShell.fir.opt.mlir 11491:37]
    node _bpuUpdateReq_btbType_T_24 = or(_bpuUpdateReq_btbType_T_23, _bpuUpdateReq_btbType_T_15) @[build/NutShell.fir.opt.mlir 11493:37]
    node _bpuUpdateReq_btbType_T_25 = or(_bpuUpdateReq_btbType_T_24, _bpuUpdateReq_btbType_T_16) @[build/NutShell.fir.opt.mlir 11495:37]
    node _bpuUpdateReq_btbType_T_26 = or(_bpuUpdateReq_btbType_T_25, _bpuUpdateReq_btbType_T_17) @[build/NutShell.fir.opt.mlir 11497:37]
    node _bpuUpdateReq_btbType_T_27 = or(_bpuUpdateReq_btbType_T_26, _bpuUpdateReq_btbType_T_18) @[build/NutShell.fir.opt.mlir 11499:37]
    node _bpuUpdateReq_btbType_T_28 = or(_bpuUpdateReq_btbType_T_27, _bpuUpdateReq_btbType_T_19) @[build/NutShell.fir.opt.mlir 11501:37]
    wire _bpuUpdateReq_btbType_WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 11502:37]
    connect _bpuUpdateReq_btbType_WIRE, _bpuUpdateReq_btbType_T_28 @[build/NutShell.fir.opt.mlir 11503:7]
    connect bpuUpdateReq.btbType, _bpuUpdateReq_btbType_WIRE @[build/NutShell.fir.opt.mlir 11504:7]
    connect bpuUpdateReq.isRVC, isRVC @[build/NutShell.fir.opt.mlir 11505:7]
    reg REG : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 11506:14]
    connect REG, bpuUpdateReq @[build/NutShell.fir.opt.mlir 11507:7]
    node _right_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11509:19]
    node _right_T_1 = eq(predictWrong, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11511:21]
    node right = and(_right_T, _right_T_1) @[build/NutShell.fir.opt.mlir 11513:16]
    node _wrong_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11515:19]
    node wrong = and(_wrong_T, predictWrong) @[build/NutShell.fir.opt.mlir 11517:16]
    node _T_82 = and(right, isBranch) @[build/NutShell.fir.opt.mlir 11519:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 11520:18]
    connect _WIRE_1, _T_82 @[build/NutShell.fir.opt.mlir 11521:7]
    node _T_83 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11523:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 11524:18]
    connect _WIRE_2, _T_83 @[build/NutShell.fir.opt.mlir 11525:7]
    node _T_84 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11527:16]
    node _T_85 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11529:16]
    node _T_86 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11531:16]
    node _T_87 = and(_T_84, _T_86) @[build/NutShell.fir.opt.mlir 11533:16]
    node _T_88 = and(_T_87, isRVC) @[build/NutShell.fir.opt.mlir 11535:16]
    wire _WIRE_3 : UInt<1> @[build/NutShell.fir.opt.mlir 11536:18]
    connect _WIRE_3, _T_88 @[build/NutShell.fir.opt.mlir 11537:7]
    node _T_89 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11539:16]
    node _T_90 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11541:16]
    node _T_91 = eq(_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11543:16]
    node _T_92 = and(_T_89, _T_91) @[build/NutShell.fir.opt.mlir 11545:16]
    node _T_93 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11547:16]
    node _T_94 = and(_T_92, _T_93) @[build/NutShell.fir.opt.mlir 11549:16]
    wire _WIRE_4 : UInt<1> @[build/NutShell.fir.opt.mlir 11550:18]
    connect _WIRE_4, _T_94 @[build/NutShell.fir.opt.mlir 11551:7]
    node _T_95 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11553:16]
    node _T_96 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11555:16]
    node _T_97 = eq(_T_96, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11557:16]
    node _T_98 = and(_T_95, _T_97) @[build/NutShell.fir.opt.mlir 11559:16]
    node _T_99 = and(_T_98, isRVC) @[build/NutShell.fir.opt.mlir 11561:16]
    wire _WIRE_5 : UInt<1> @[build/NutShell.fir.opt.mlir 11562:18]
    connect _WIRE_5, _T_99 @[build/NutShell.fir.opt.mlir 11563:7]
    node _T_100 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11565:17]
    node _T_101 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11567:17]
    node _T_102 = eq(_T_101, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11569:17]
    node _T_103 = and(_T_100, _T_102) @[build/NutShell.fir.opt.mlir 11571:17]
    node _T_104 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11573:17]
    node _T_105 = and(_T_103, _T_104) @[build/NutShell.fir.opt.mlir 11575:17]
    wire _WIRE_6 : UInt<1> @[build/NutShell.fir.opt.mlir 11576:18]
    connect _WIRE_6, _T_105 @[build/NutShell.fir.opt.mlir 11577:7]
    node _T_106 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11579:17]
    node _T_107 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11581:17]
    node _T_108 = eq(_T_107, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11583:17]
    node _T_109 = and(_T_106, _T_108) @[build/NutShell.fir.opt.mlir 11585:17]
    node _T_110 = and(_T_109, isRVC) @[build/NutShell.fir.opt.mlir 11587:17]
    wire _WIRE_7 : UInt<1> @[build/NutShell.fir.opt.mlir 11588:18]
    connect _WIRE_7, _T_110 @[build/NutShell.fir.opt.mlir 11589:7]
    node _T_111 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11591:17]
    node _T_112 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11593:17]
    node _T_113 = eq(_T_112, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11595:17]
    node _T_114 = and(_T_111, _T_113) @[build/NutShell.fir.opt.mlir 11597:17]
    node _T_115 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11599:17]
    node _T_116 = and(_T_114, _T_115) @[build/NutShell.fir.opt.mlir 11601:17]
    wire _WIRE_8 : UInt<1> @[build/NutShell.fir.opt.mlir 11602:18]
    connect _WIRE_8, _T_116 @[build/NutShell.fir.opt.mlir 11603:7]
    node _T_117 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11605:17]
    node _T_118 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11607:17]
    node _T_119 = eq(_T_118, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 11609:17]
    node _T_120 = and(_T_117, _T_119) @[build/NutShell.fir.opt.mlir 11611:17]
    node _T_121 = and(_T_120, isRVC) @[build/NutShell.fir.opt.mlir 11613:17]
    wire _WIRE_9 : UInt<1> @[build/NutShell.fir.opt.mlir 11614:18]
    connect _WIRE_9, _T_121 @[build/NutShell.fir.opt.mlir 11615:7]
    node _T_122 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11617:17]
    node _T_123 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11619:17]
    node _T_124 = eq(_T_123, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 11621:17]
    node _T_125 = and(_T_122, _T_124) @[build/NutShell.fir.opt.mlir 11623:17]
    node _T_126 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11625:17]
    node _T_127 = and(_T_125, _T_126) @[build/NutShell.fir.opt.mlir 11627:17]
    wire _WIRE_10 : UInt<1> @[build/NutShell.fir.opt.mlir 11628:19]
    connect _WIRE_10, _T_127 @[build/NutShell.fir.opt.mlir 11629:7]
    node _T_128 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11631:17]
    node _T_129 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11633:17]
    node _T_130 = or(_T_128, _T_129) @[build/NutShell.fir.opt.mlir 11635:17]
    node _T_131 = and(right, _T_130) @[build/NutShell.fir.opt.mlir 11637:17]
    wire _WIRE_11 : UInt<1> @[build/NutShell.fir.opt.mlir 11638:19]
    connect _WIRE_11, _T_131 @[build/NutShell.fir.opt.mlir 11639:7]
    node _T_132 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11641:17]
    node _T_133 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11643:17]
    node _T_134 = or(_T_132, _T_133) @[build/NutShell.fir.opt.mlir 11645:17]
    node _T_135 = and(wrong, _T_134) @[build/NutShell.fir.opt.mlir 11647:17]
    wire _WIRE_12 : UInt<1> @[build/NutShell.fir.opt.mlir 11648:19]
    connect _WIRE_12, _T_135 @[build/NutShell.fir.opt.mlir 11649:7]
    node _T_136 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11651:17]
    node _T_137 = and(right, _T_136) @[build/NutShell.fir.opt.mlir 11653:17]
    wire _WIRE_13 : UInt<1> @[build/NutShell.fir.opt.mlir 11654:19]
    connect _WIRE_13, _T_137 @[build/NutShell.fir.opt.mlir 11655:7]
    node _T_138 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11657:17]
    node _T_139 = and(wrong, _T_138) @[build/NutShell.fir.opt.mlir 11659:17]
    wire _WIRE_14 : UInt<1> @[build/NutShell.fir.opt.mlir 11660:19]
    connect _WIRE_14, _T_139 @[build/NutShell.fir.opt.mlir 11661:7]
    node _T_140 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11663:17]
    node _T_141 = and(right, _T_140) @[build/NutShell.fir.opt.mlir 11665:17]
    wire _WIRE_15 : UInt<1> @[build/NutShell.fir.opt.mlir 11666:19]
    connect _WIRE_15, _T_141 @[build/NutShell.fir.opt.mlir 11667:7]
    node _T_142 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11669:17]
    node _T_143 = and(wrong, _T_142) @[build/NutShell.fir.opt.mlir 11671:17]
    wire _WIRE_16 : UInt<1> @[build/NutShell.fir.opt.mlir 11672:19]
    connect _WIRE_16, _T_143 @[build/NutShell.fir.opt.mlir 11673:7]

  extmodule LogPerfHelper_8 : @[build/NutShell.fir.opt.mlir 11675:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 11675:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 11675:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 11675:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 11675:140]
    defname = LogPerfHelper

  module LSExecUnit : @[build/NutShell.fir.opt.mlir 11676:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 11676:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 11676:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip wdata : UInt<64>, flip instr : UInt<32>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, isMMIO : UInt<1>, dtlbPF : UInt<1>, loadAddrMisaligned : UInt<1>, storeAddrMisaligned : UInt<1> } @[build/NutShell.fir.opt.mlir 11676:95]

    reg addrLatch : UInt<64>, clock @[build/NutShell.fir.opt.mlir 11707:20]
    connect addrLatch, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 11708:7]
    node _isStore_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 11710:21]
    node isStore = and(io.in.valid, _isStore_T) @[build/NutShell.fir.opt.mlir 11712:18]
    node _partialLoad_T = eq(isStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11715:25]
    node _partialLoad_T_1 = neq(io.in.bits.func, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11718:27]
    node partialLoad = and(_partialLoad_T, _partialLoad_T_1) @[build/NutShell.fir.opt.mlir 11720:22]
    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11722:16]
    wire dtlbFinish : UInt<1> @[build/NutShell.fir.opt.mlir 11723:21]
    connect dtlbFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11725:7]
    wire dtlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 11726:17]
    connect dtlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11728:7]
    wire dtlbEnable : UInt<1> @[build/NutShell.fir.opt.mlir 11729:21]
    connect dtlbEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11731:7]
    connect io.dtlbPF, dtlbPF @[build/NutShell.fir.opt.mlir 11732:7]
    node _T = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 11734:13]
    when _T : @[build/NutShell.fir.opt.mlir 11737:7]
      node _T_1 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11739:17]
      node _T_2 = and(_T_1, dtlbEnable) @[build/NutShell.fir.opt.mlir 11741:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 11742:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 11744:11]
      node _T_3 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11747:17]
      node _T_4 = eq(dtlbEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11749:17]
      node _T_5 = and(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 11751:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 11752:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 11754:11]
    else :
      node _T_6 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 11758:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 11759:9]
        node _T_7 = and(dtlbFinish, dtlbPF) @[build/NutShell.fir.opt.mlir 11761:19]
        when _T_7 : @[build/NutShell.fir.opt.mlir 11762:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11764:13]
        node _T_8 = eq(dtlbPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11767:19]
        node _T_9 = and(dtlbFinish, _T_8) @[build/NutShell.fir.opt.mlir 11769:19]
        when _T_9 : @[build/NutShell.fir.opt.mlir 11770:11]
          connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 11772:13]
      else :
        node _T_10 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 11776:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 11777:11]
          node _T_11 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11779:22]
          when _T_11 : @[build/NutShell.fir.opt.mlir 11780:13]
            node _state_T = mux(partialLoad, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 11782:27]
            connect state, _state_T @[build/NutShell.fir.opt.mlir 11783:15]
        else :
          node _T_12 = eq(UInt<2>(3), state) @[build/NutShell.fir.opt.mlir 11787:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 11788:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11790:15]
    node _T_13 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11796:16]
    node _T_14 = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 11798:16]
    inst LogPerfHelper of LogPerfHelper_8 @[build/NutShell.fir.opt.mlir 11799:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 11800:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 11805:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 11806:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 11807:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 11808:7]
    node _T_15 = and(_T_13, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11810:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 11811:7]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11813:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11815:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 11816:9]
        skip @[build/NutShell.fir.opt.mlir 11817:11]
      node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11820:18]
      node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11822:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 11823:9]
        skip @[build/NutShell.fir.opt.mlir 11824:11]
    node _T_20 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11828:16]
    node _T_21 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11830:16]
    node _T_22 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11832:16]
    node _T_23 = and(_T_20, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11834:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 11835:7]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11837:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11839:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 11840:9]
        skip @[build/NutShell.fir.opt.mlir 11841:11]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11844:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11846:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 11847:9]
        skip @[build/NutShell.fir.opt.mlir 11848:11]
    node _T_28 = and(dtlbFinish, dtlbEnable) @[build/NutShell.fir.opt.mlir 11852:16]
    node _T_29 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11854:16]
    node _T_30 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11856:16]
    node _T_31 = and(_T_28, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11858:16]
    when _T_31 : @[build/NutShell.fir.opt.mlir 11859:7]
      node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11861:18]
      node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11863:18]
      when _T_33 : @[build/NutShell.fir.opt.mlir 11864:9]
        skip @[build/NutShell.fir.opt.mlir 11865:11]
      node _T_34 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11868:18]
      node _T_35 = eq(_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11870:18]
      when _T_35 : @[build/NutShell.fir.opt.mlir 11871:9]
        skip @[build/NutShell.fir.opt.mlir 11872:11]
    node size = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 11876:15]
    node reqAddr = bits(io.in.bits.src1, 38, 0) @[build/NutShell.fir.opt.mlir 11878:18]
    node _reqWdata_T = bits(io.wdata, 7, 0) @[build/NutShell.fir.opt.mlir 11880:22]
    node _reqWdata_T_1 = cat(_reqWdata_T, _reqWdata_T) @[build/NutShell.fir.opt.mlir 11882:24]
    node _reqWdata_T_2 = cat(_reqWdata_T_1, _reqWdata_T_1) @[build/NutShell.fir.opt.mlir 11884:24]
    node _reqWdata_T_3 = cat(_reqWdata_T_2, _reqWdata_T_2) @[build/NutShell.fir.opt.mlir 11886:24]
    node _reqWdata_T_4 = bits(io.wdata, 15, 0) @[build/NutShell.fir.opt.mlir 11888:24]
    node _reqWdata_T_5 = cat(_reqWdata_T_4, _reqWdata_T_4) @[build/NutShell.fir.opt.mlir 11890:24]
    node _reqWdata_T_6 = cat(_reqWdata_T_5, _reqWdata_T_5) @[build/NutShell.fir.opt.mlir 11892:24]
    node _reqWdata_T_7 = bits(io.wdata, 31, 0) @[build/NutShell.fir.opt.mlir 11894:24]
    node _reqWdata_T_8 = cat(_reqWdata_T_7, _reqWdata_T_7) @[build/NutShell.fir.opt.mlir 11896:24]
    node _reqWdata_T_9 = eq(UInt<1>(0), size) @[build/NutShell.fir.opt.mlir 11898:24]
    node _reqWdata_T_10 = eq(UInt<1>(1), size) @[build/NutShell.fir.opt.mlir 11901:25]
    node _reqWdata_T_11 = eq(UInt<2>(2), size) @[build/NutShell.fir.opt.mlir 11903:25]
    node _reqWdata_T_12 = eq(UInt<2>(3), size) @[build/NutShell.fir.opt.mlir 11905:25]
    node _reqWdata_T_13 = mux(_reqWdata_T_9, _reqWdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11907:25]
    node _reqWdata_T_14 = mux(_reqWdata_T_10, _reqWdata_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11909:25]
    node _reqWdata_T_15 = mux(_reqWdata_T_11, _reqWdata_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11911:25]
    node _reqWdata_T_16 = mux(_reqWdata_T_12, io.wdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11913:25]
    node _reqWdata_T_17 = or(_reqWdata_T_13, _reqWdata_T_14) @[build/NutShell.fir.opt.mlir 11915:25]
    node _reqWdata_T_18 = or(_reqWdata_T_17, _reqWdata_T_15) @[build/NutShell.fir.opt.mlir 11917:25]
    node _reqWdata_T_19 = or(_reqWdata_T_18, _reqWdata_T_16) @[build/NutShell.fir.opt.mlir 11919:25]
    wire reqWdata : UInt<64> @[build/NutShell.fir.opt.mlir 11920:19]
    connect reqWdata, _reqWdata_T_19 @[build/NutShell.fir.opt.mlir 11921:7]
    node _reqWmask_T = eq(UInt<1>(0), size) @[build/NutShell.fir.opt.mlir 11923:22]
    node _reqWmask_T_1 = eq(UInt<1>(1), size) @[build/NutShell.fir.opt.mlir 11925:24]
    node _reqWmask_T_2 = eq(UInt<2>(2), size) @[build/NutShell.fir.opt.mlir 11927:24]
    node _reqWmask_T_3 = eq(UInt<2>(3), size) @[build/NutShell.fir.opt.mlir 11929:24]
    node _reqWmask_T_4 = mux(_reqWmask_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11931:24]
    node _reqWmask_T_5 = mux(_reqWmask_T_1, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11933:24]
    node _reqWmask_T_6 = mux(_reqWmask_T_2, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11936:24]
    node _reqWmask_T_7 = mux(_reqWmask_T_3, UInt<8>(255), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11939:24]
    node _reqWmask_T_8 = or(_reqWmask_T_4, _reqWmask_T_5) @[build/NutShell.fir.opt.mlir 11941:24]
    node _reqWmask_T_9 = or(_reqWmask_T_8, _reqWmask_T_6) @[build/NutShell.fir.opt.mlir 11943:24]
    node _reqWmask_T_10 = or(_reqWmask_T_9, _reqWmask_T_7) @[build/NutShell.fir.opt.mlir 11945:25]
    wire _reqWmask_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 11946:25]
    connect _reqWmask_WIRE, _reqWmask_T_10 @[build/NutShell.fir.opt.mlir 11947:7]
    node _reqWmask_T_11 = bits(io.in.bits.src1, 2, 0) @[build/NutShell.fir.opt.mlir 11949:25]
    node reqWmask = dshl(_reqWmask_WIRE, _reqWmask_T_11) @[build/NutShell.fir.opt.mlir 11951:19]
    node x5 = mux(isStore, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11953:13]
    connect io.dmem.req.bits.addr, reqAddr @[build/NutShell.fir.opt.mlir 11954:7]
    connect io.dmem.req.bits.cmd, pad(x5, 4) @[build/NutShell.fir.opt.mlir 11956:7]
    connect io.dmem.req.bits.size, pad(size, 3) @[build/NutShell.fir.opt.mlir 11958:7]
    connect io.dmem.req.bits.wdata, reqWdata @[build/NutShell.fir.opt.mlir 11959:7]
    connect io.dmem.req.bits.wmask, tail(reqWmask, 7) @[build/NutShell.fir.opt.mlir 11961:7]
    node _io_dmem_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 11963:31]
    node _io_dmem_req_valid_T_1 = and(io.in.valid, _io_dmem_req_valid_T) @[build/NutShell.fir.opt.mlir 11965:33]
    node _io_dmem_req_valid_T_2 = eq(io.loadAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11967:33]
    node _io_dmem_req_valid_T_3 = and(_io_dmem_req_valid_T_1, _io_dmem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 11969:33]
    node _io_dmem_req_valid_T_4 = eq(io.storeAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11971:33]
    node _io_dmem_req_valid_T_5 = and(_io_dmem_req_valid_T_3, _io_dmem_req_valid_T_4) @[build/NutShell.fir.opt.mlir 11973:33]
    connect io.dmem.req.valid, _io_dmem_req_valid_T_5 @[build/NutShell.fir.opt.mlir 11974:7]
    connect io.dmem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 11976:7]
    node _io_out_valid_T = neq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 11978:26]
    node _io_out_valid_T_1 = and(dtlbPF, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 11980:28]
    node _io_out_valid_T_2 = or(_io_out_valid_T_1, io.loadAddrMisaligned) @[build/NutShell.fir.opt.mlir 11982:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 11984:28]
    node _io_out_valid_T_4 = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11986:28]
    node _io_out_valid_T_5 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11988:28]
    node _io_out_valid_T_6 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11990:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 11992:28]
    node _io_out_valid_T_8 = mux(partialLoad, _io_out_valid_T_4, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 11994:28]
    node _io_out_valid_T_9 = mux(_io_out_valid_T_3, UInt<1>(1), _io_out_valid_T_8) @[build/NutShell.fir.opt.mlir 11996:28]
    connect io.out.valid, _io_out_valid_T_9 @[build/NutShell.fir.opt.mlir 11997:7]
    node _io_in_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 11999:25]
    node _io_in_ready_T_1 = or(_io_in_ready_T, dtlbPF) @[build/NutShell.fir.opt.mlir 12001:27]
    connect io.in.ready, _io_in_ready_T_1 @[build/NutShell.fir.opt.mlir 12002:7]
    node _T_36 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 12004:16]
    node _T_37 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12006:16]
    node _T_38 = and(_T_36, c_control.logEnable) @[build/NutShell.fir.opt.mlir 12008:16]
    when _T_38 : @[build/NutShell.fir.opt.mlir 12009:7]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12011:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12013:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 12014:9]
        skip @[build/NutShell.fir.opt.mlir 12015:11]
      node _T_41 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12018:18]
      node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12020:18]
      when _T_42 : @[build/NutShell.fir.opt.mlir 12021:9]
        skip @[build/NutShell.fir.opt.mlir 12022:11]
    reg rdataLatch : UInt<64>, clock @[build/NutShell.fir.opt.mlir 12025:21]
    connect rdataLatch, io.dmem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 12026:7]
    node _rdataSel64_T = bits(addrLatch, 2, 0) @[build/NutShell.fir.opt.mlir 12028:24]
    node _rdataSel64_T_1 = bits(rdataLatch, 63, 0) @[build/NutShell.fir.opt.mlir 12030:26]
    node _rdataSel64_T_2 = bits(rdataLatch, 63, 8) @[build/NutShell.fir.opt.mlir 12032:26]
    node _rdataSel64_T_3 = bits(rdataLatch, 63, 16) @[build/NutShell.fir.opt.mlir 12034:26]
    node _rdataSel64_T_4 = bits(rdataLatch, 63, 24) @[build/NutShell.fir.opt.mlir 12036:26]
    node _rdataSel64_T_5 = bits(rdataLatch, 63, 32) @[build/NutShell.fir.opt.mlir 12038:26]
    node _rdataSel64_T_6 = bits(rdataLatch, 63, 40) @[build/NutShell.fir.opt.mlir 12040:26]
    node _rdataSel64_T_7 = bits(rdataLatch, 63, 48) @[build/NutShell.fir.opt.mlir 12042:26]
    node _rdataSel64_T_8 = bits(rdataLatch, 63, 56) @[build/NutShell.fir.opt.mlir 12044:26]
    node _rdataSel64_T_9 = eq(UInt<1>(0), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12046:26]
    node _rdataSel64_T_10 = eq(UInt<1>(1), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12048:27]
    node _rdataSel64_T_11 = eq(UInt<2>(2), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12050:27]
    node _rdataSel64_T_12 = eq(UInt<2>(3), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12052:27]
    node _rdataSel64_T_13 = eq(UInt<3>(4), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12055:27]
    node _rdataSel64_T_14 = eq(UInt<3>(5), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12058:27]
    node _rdataSel64_T_15 = eq(UInt<3>(6), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12061:27]
    node _rdataSel64_T_16 = eq(UInt<3>(7), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12064:27]
    node _rdataSel64_T_17 = mux(_rdataSel64_T_9, _rdataSel64_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12066:27]
    node _rdataSel64_T_18 = mux(_rdataSel64_T_10, _rdataSel64_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12068:27]
    node _rdataSel64_T_19 = mux(_rdataSel64_T_11, _rdataSel64_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12070:27]
    node _rdataSel64_T_20 = mux(_rdataSel64_T_12, _rdataSel64_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12072:27]
    node _rdataSel64_T_21 = mux(_rdataSel64_T_13, _rdataSel64_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12074:27]
    node _rdataSel64_T_22 = mux(_rdataSel64_T_14, _rdataSel64_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12076:27]
    node _rdataSel64_T_23 = mux(_rdataSel64_T_15, _rdataSel64_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12078:27]
    node _rdataSel64_T_24 = mux(_rdataSel64_T_16, _rdataSel64_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12080:27]
    node _rdataSel64_T_25 = or(_rdataSel64_T_17, _rdataSel64_T_18) @[build/NutShell.fir.opt.mlir 12082:27]
    node _rdataSel64_T_26 = or(_rdataSel64_T_25, _rdataSel64_T_19) @[build/NutShell.fir.opt.mlir 12084:27]
    node _rdataSel64_T_27 = or(_rdataSel64_T_26, _rdataSel64_T_20) @[build/NutShell.fir.opt.mlir 12086:27]
    node _rdataSel64_T_28 = or(_rdataSel64_T_27, _rdataSel64_T_21) @[build/NutShell.fir.opt.mlir 12088:27]
    node _rdataSel64_T_29 = or(_rdataSel64_T_28, _rdataSel64_T_22) @[build/NutShell.fir.opt.mlir 12090:27]
    node _rdataSel64_T_30 = or(_rdataSel64_T_29, _rdataSel64_T_23) @[build/NutShell.fir.opt.mlir 12092:27]
    node _rdataSel64_T_31 = or(_rdataSel64_T_30, _rdataSel64_T_24) @[build/NutShell.fir.opt.mlir 12094:27]
    wire rdataSel64 : UInt<64> @[build/NutShell.fir.opt.mlir 12095:21]
    connect rdataSel64, _rdataSel64_T_31 @[build/NutShell.fir.opt.mlir 12096:7]
    node _rdataSel32_T = bits(addrLatch, 1, 0) @[build/NutShell.fir.opt.mlir 12098:24]
    node _rdataSel32_T_1 = bits(rdataLatch, 31, 0) @[build/NutShell.fir.opt.mlir 12100:26]
    node _rdataSel32_T_2 = bits(rdataLatch, 31, 8) @[build/NutShell.fir.opt.mlir 12102:26]
    node _rdataSel32_T_3 = bits(rdataLatch, 31, 16) @[build/NutShell.fir.opt.mlir 12104:26]
    node _rdataSel32_T_4 = bits(rdataLatch, 31, 24) @[build/NutShell.fir.opt.mlir 12106:26]
    node _rdataSel32_T_5 = eq(UInt<1>(0), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12108:26]
    node _rdataSel32_T_6 = eq(UInt<1>(1), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12110:26]
    node _rdataSel32_T_7 = eq(UInt<2>(2), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12112:26]
    node _rdataSel32_T_8 = eq(UInt<2>(3), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12114:26]
    node _rdataSel32_T_9 = mux(_rdataSel32_T_5, _rdataSel32_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12116:26]
    node _rdataSel32_T_10 = mux(_rdataSel32_T_6, _rdataSel32_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12118:27]
    node _rdataSel32_T_11 = mux(_rdataSel32_T_7, _rdataSel32_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12120:27]
    node _rdataSel32_T_12 = mux(_rdataSel32_T_8, _rdataSel32_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12122:27]
    node _rdataSel32_T_13 = or(_rdataSel32_T_9, _rdataSel32_T_10) @[build/NutShell.fir.opt.mlir 12124:27]
    node _rdataSel32_T_14 = or(_rdataSel32_T_13, _rdataSel32_T_11) @[build/NutShell.fir.opt.mlir 12126:27]
    node _rdataSel32_T_15 = or(_rdataSel32_T_14, _rdataSel32_T_12) @[build/NutShell.fir.opt.mlir 12128:27]
    wire rdataSel32 : UInt<32> @[build/NutShell.fir.opt.mlir 12129:21]
    connect rdataSel32, _rdataSel32_T_15 @[build/NutShell.fir.opt.mlir 12130:7]
    node _rdataPartialLoad_T = bits(rdataSel64, 7, 0) @[build/NutShell.fir.opt.mlir 12132:30]
    node rdataPartialLoad_signBit = bits(_rdataPartialLoad_T, 7, 7) @[build/NutShell.fir.opt.mlir 12134:35]
    node _rdataPartialLoad_T_1 = mux(rdataPartialLoad_signBit, UInt<56>(72057594037927935), UInt<56>(0)) @[build/NutShell.fir.opt.mlir 12138:32]
    node _rdataPartialLoad_T_2 = cat(_rdataPartialLoad_T_1, _rdataPartialLoad_T) @[build/NutShell.fir.opt.mlir 12140:32]
    node _rdataPartialLoad_T_3 = bits(rdataSel64, 15, 0) @[build/NutShell.fir.opt.mlir 12142:32]
    node rdataPartialLoad_signBit_1 = bits(_rdataPartialLoad_T_3, 15, 15) @[build/NutShell.fir.opt.mlir 12144:37]
    node _rdataPartialLoad_T_4 = mux(rdataPartialLoad_signBit_1, UInt<48>(281474976710655), UInt<48>(0)) @[build/NutShell.fir.opt.mlir 12148:32]
    node _rdataPartialLoad_T_5 = cat(_rdataPartialLoad_T_4, _rdataPartialLoad_T_3) @[build/NutShell.fir.opt.mlir 12150:32]
    node _rdataPartialLoad_T_6 = bits(rdataSel64, 31, 0) @[build/NutShell.fir.opt.mlir 12152:32]
    node rdataPartialLoad_signBit_2 = bits(_rdataPartialLoad_T_6, 31, 31) @[build/NutShell.fir.opt.mlir 12154:37]
    node _rdataPartialLoad_T_7 = mux(rdataPartialLoad_signBit_2, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 12158:32]
    node _rdataPartialLoad_T_8 = cat(_rdataPartialLoad_T_7, _rdataPartialLoad_T_6) @[build/NutShell.fir.opt.mlir 12160:32]
    node _rdataPartialLoad_T_9 = bits(rdataSel64, 7, 0) @[build/NutShell.fir.opt.mlir 12162:32]
    node _rdataPartialLoad_T_10 = cat(UInt<56>(0), _rdataPartialLoad_T_9) @[build/NutShell.fir.opt.mlir 12164:33]
    node _rdataPartialLoad_T_11 = bits(rdataSel64, 15, 0) @[build/NutShell.fir.opt.mlir 12166:33]
    node _rdataPartialLoad_T_12 = cat(UInt<48>(0), _rdataPartialLoad_T_11) @[build/NutShell.fir.opt.mlir 12168:33]
    node _rdataPartialLoad_T_13 = bits(rdataSel64, 31, 0) @[build/NutShell.fir.opt.mlir 12170:33]
    node _rdataPartialLoad_T_14 = cat(UInt<32>(0), _rdataPartialLoad_T_13) @[build/NutShell.fir.opt.mlir 12172:33]
    node _rdataPartialLoad_T_15 = eq(UInt<1>(0), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12174:33]
    node _rdataPartialLoad_T_16 = eq(UInt<1>(1), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12176:33]
    node _rdataPartialLoad_T_17 = eq(UInt<2>(2), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12178:33]
    node _rdataPartialLoad_T_18 = eq(UInt<3>(4), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12180:33]
    node _rdataPartialLoad_T_19 = eq(UInt<3>(5), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12182:33]
    node _rdataPartialLoad_T_20 = eq(UInt<3>(6), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12184:33]
    node _rdataPartialLoad_T_21 = mux(_rdataPartialLoad_T_15, _rdataPartialLoad_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12186:33]
    node _rdataPartialLoad_T_22 = mux(_rdataPartialLoad_T_16, _rdataPartialLoad_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12188:33]
    node _rdataPartialLoad_T_23 = mux(_rdataPartialLoad_T_17, _rdataPartialLoad_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12190:33]
    node _rdataPartialLoad_T_24 = mux(_rdataPartialLoad_T_18, _rdataPartialLoad_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12192:33]
    node _rdataPartialLoad_T_25 = mux(_rdataPartialLoad_T_19, _rdataPartialLoad_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12194:33]
    node _rdataPartialLoad_T_26 = mux(_rdataPartialLoad_T_20, _rdataPartialLoad_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12196:33]
    node _rdataPartialLoad_T_27 = or(_rdataPartialLoad_T_21, _rdataPartialLoad_T_22) @[build/NutShell.fir.opt.mlir 12198:33]
    node _rdataPartialLoad_T_28 = or(_rdataPartialLoad_T_27, _rdataPartialLoad_T_23) @[build/NutShell.fir.opt.mlir 12200:33]
    node _rdataPartialLoad_T_29 = or(_rdataPartialLoad_T_28, _rdataPartialLoad_T_24) @[build/NutShell.fir.opt.mlir 12202:33]
    node _rdataPartialLoad_T_30 = or(_rdataPartialLoad_T_29, _rdataPartialLoad_T_25) @[build/NutShell.fir.opt.mlir 12204:33]
    node _rdataPartialLoad_T_31 = or(_rdataPartialLoad_T_30, _rdataPartialLoad_T_26) @[build/NutShell.fir.opt.mlir 12206:33]
    wire rdataPartialLoad : UInt<64> @[build/NutShell.fir.opt.mlir 12207:27]
    connect rdataPartialLoad, _rdataPartialLoad_T_31 @[build/NutShell.fir.opt.mlir 12208:7]
    node _addrAligned_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 12210:25]
    node _addrAligned_T_1 = bits(io.in.bits.src1, 0, 0) @[build/NutShell.fir.opt.mlir 12212:27]
    node _addrAligned_T_2 = eq(_addrAligned_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12214:27]
    node _addrAligned_T_3 = bits(io.in.bits.src1, 1, 0) @[build/NutShell.fir.opt.mlir 12216:27]
    node _addrAligned_T_4 = eq(_addrAligned_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12218:27]
    node _addrAligned_T_5 = bits(io.in.bits.src1, 2, 0) @[build/NutShell.fir.opt.mlir 12220:27]
    node _addrAligned_T_6 = eq(_addrAligned_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12222:27]
    node _addrAligned_T_7 = eq(UInt<1>(0), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12224:27]
    node _addrAligned_T_8 = eq(UInt<1>(1), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12226:27]
    node _addrAligned_T_9 = eq(UInt<2>(2), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12228:27]
    node _addrAligned_T_10 = eq(UInt<2>(3), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12230:28]
    node _addrAligned_T_11 = mux(_addrAligned_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12232:28]
    node _addrAligned_T_12 = mux(_addrAligned_T_8, _addrAligned_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12234:28]
    node _addrAligned_T_13 = mux(_addrAligned_T_9, _addrAligned_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12236:28]
    node _addrAligned_T_14 = mux(_addrAligned_T_10, _addrAligned_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12238:28]
    node _addrAligned_T_15 = or(_addrAligned_T_11, _addrAligned_T_12) @[build/NutShell.fir.opt.mlir 12240:28]
    node _addrAligned_T_16 = or(_addrAligned_T_15, _addrAligned_T_13) @[build/NutShell.fir.opt.mlir 12242:28]
    node _addrAligned_T_17 = or(_addrAligned_T_16, _addrAligned_T_14) @[build/NutShell.fir.opt.mlir 12244:28]
    wire addrAligned : UInt<1> @[build/NutShell.fir.opt.mlir 12245:22]
    connect addrAligned, _addrAligned_T_17 @[build/NutShell.fir.opt.mlir 12246:7]
    node _io_out_bits_T = bits(io.dmem.resp.bits.rdata, 63, 0) @[build/NutShell.fir.opt.mlir 12248:25]
    node _io_out_bits_T_1 = mux(partialLoad, rdataPartialLoad, _io_out_bits_T) @[build/NutShell.fir.opt.mlir 12250:27]
    connect io.out.bits, _io_out_bits_T_1 @[build/NutShell.fir.opt.mlir 12251:7]
    invalidate io.isMMIO @[build/NutShell.fir.opt.mlir 12253:7]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 12254:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12256:7]
    node _io_loadAddrMisaligned_T = eq(isStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12258:35]
    node _io_loadAddrMisaligned_T_1 = and(io.in.valid, _io_loadAddrMisaligned_T) @[build/NutShell.fir.opt.mlir 12260:37]
    node _io_loadAddrMisaligned_T_2 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12262:37]
    node _io_loadAddrMisaligned_T_3 = and(_io_loadAddrMisaligned_T_1, _io_loadAddrMisaligned_T_2) @[build/NutShell.fir.opt.mlir 12264:37]
    node _io_loadAddrMisaligned_T_4 = eq(addrAligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12266:37]
    node _io_loadAddrMisaligned_T_5 = and(_io_loadAddrMisaligned_T_3, _io_loadAddrMisaligned_T_4) @[build/NutShell.fir.opt.mlir 12268:37]
    connect io.loadAddrMisaligned, _io_loadAddrMisaligned_T_5 @[build/NutShell.fir.opt.mlir 12269:7]
    node _io_storeAddrMisaligned_T = or(isStore, isAMO) @[build/NutShell.fir.opt.mlir 12271:36]
    node _io_storeAddrMisaligned_T_1 = and(io.in.valid, _io_storeAddrMisaligned_T) @[build/NutShell.fir.opt.mlir 12273:38]
    node _io_storeAddrMisaligned_T_2 = eq(addrAligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12275:38]
    node _io_storeAddrMisaligned_T_3 = and(_io_storeAddrMisaligned_T_1, _io_storeAddrMisaligned_T_2) @[build/NutShell.fir.opt.mlir 12277:38]
    connect io.storeAddrMisaligned, _io_storeAddrMisaligned_T_3 @[build/NutShell.fir.opt.mlir 12278:7]
    node _T_43 = or(io.loadAddrMisaligned, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 12280:16]
    node _T_44 = and(_T_43, c_control.logEnable) @[build/NutShell.fir.opt.mlir 12282:16]
    when _T_44 : @[build/NutShell.fir.opt.mlir 12283:7]
      node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12285:18]
      node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12287:18]
      when _T_46 : @[build/NutShell.fir.opt.mlir 12288:9]
        skip @[build/NutShell.fir.opt.mlir 12289:11]
      node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12292:18]
      node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12294:18]
      when _T_48 : @[build/NutShell.fir.opt.mlir 12295:9]
        skip @[build/NutShell.fir.opt.mlir 12296:11]
    node _T_49 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12300:16]
    node _T_50 = eq(_T_49, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12302:16]
    node _T_51 = bits(io.dmem.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 12304:16]
    node _T_52 = eq(_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12306:16]
    node _T_53 = and(_T_50, _T_52) @[build/NutShell.fir.opt.mlir 12308:16]
    node _T_54 = and(io.dmem.req.valid, _T_53) @[build/NutShell.fir.opt.mlir 12310:16]
    node _T_55 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 12312:16]
    node _T_56 = and(_T_54, _T_55) @[build/NutShell.fir.opt.mlir 12314:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 12315:16]
    connect _WIRE, _T_56 @[build/NutShell.fir.opt.mlir 12316:7]
    node _T_57 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12318:16]
    node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12320:16]
    node _T_59 = bits(io.dmem.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 12322:16]
    node _T_60 = eq(_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12324:16]
    node _T_61 = and(_T_58, _T_60) @[build/NutShell.fir.opt.mlir 12326:16]
    node _T_62 = and(io.dmem.req.valid, _T_61) @[build/NutShell.fir.opt.mlir 12328:16]
    node _T_63 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12330:16]
    regreset r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12331:12]
    when _T_62 : @[build/NutShell.fir.opt.mlir 12332:7]
      connect r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12334:9]
    when _T_63 : @[build/NutShell.fir.opt.mlir 12336:7]
      connect r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12338:9]
    node _T_64 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12341:16]
    node _T_65 = and(io.dmem.req.valid, _T_64) @[build/NutShell.fir.opt.mlir 12343:16]
    node _T_66 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12345:16]
    regreset r_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12346:14]
    when _T_65 : @[build/NutShell.fir.opt.mlir 12347:7]
      connect r_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12349:9]
    when _T_66 : @[build/NutShell.fir.opt.mlir 12351:7]
      connect r_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12353:9]

  module AtomALU : @[build/NutShell.fir.opt.mlir 12356:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 12356:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 12356:65]
    output io : { flip src1 : UInt<64>, flip src2 : UInt<64>, flip func : UInt<7>, flip isWordOp : UInt<1>, result : UInt<64> } @[build/NutShell.fir.opt.mlir 12356:92]

    node _isAdderSub_T = bits(io.func, 6, 6) @[build/NutShell.fir.opt.mlir 12363:24]
    node isAdderSub = eq(_isAdderSub_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12366:21]
    node _adderRes_T = mux(isAdderSub, UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 12370:22]
    node _adderRes_T_1 = xor(io.src2, _adderRes_T) @[build/NutShell.fir.opt.mlir 12372:24]
    node _adderRes_T_2 = add(io.src1, _adderRes_T_1) @[build/NutShell.fir.opt.mlir 12374:24]
    node _adderRes_T_3 = add(_adderRes_T_2, isAdderSub) @[build/NutShell.fir.opt.mlir 12376:24]
    node adderRes = tail(_adderRes_T_3, 1) @[build/NutShell.fir.opt.mlir 12378:19]
    node xorRes = xor(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12380:17]
    node _sltu_T = bits(adderRes, 64, 64) @[build/NutShell.fir.opt.mlir 12382:18]
    node sltu = eq(_sltu_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12384:15]
    node _slt_T = bits(xorRes, 63, 63) @[build/NutShell.fir.opt.mlir 12386:17]
    node slt = xor(_slt_T, sltu) @[build/NutShell.fir.opt.mlir 12388:14]
    node _res_T = bits(io.func, 5, 0) @[build/NutShell.fir.opt.mlir 12390:17]
    node _res_T_1 = and(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12392:19]
    node _res_T_2 = or(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12394:19]
    node _res_T_3 = bits(slt, 0, 0) @[build/NutShell.fir.opt.mlir 12396:19]
    node _res_T_4 = mux(_res_T_3, io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12398:19]
    node _res_T_5 = bits(slt, 0, 0) @[build/NutShell.fir.opt.mlir 12400:19]
    node _res_T_6 = mux(_res_T_5, io.src2, io.src1) @[build/NutShell.fir.opt.mlir 12402:19]
    node _res_T_7 = bits(sltu, 0, 0) @[build/NutShell.fir.opt.mlir 12404:19]
    node _res_T_8 = mux(_res_T_7, io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12406:19]
    node _res_T_9 = bits(sltu, 0, 0) @[build/NutShell.fir.opt.mlir 12408:19]
    node _res_T_10 = mux(_res_T_9, io.src2, io.src1) @[build/NutShell.fir.opt.mlir 12410:20]
    node _res_T_11 = eq(UInt<6>(34), _res_T) @[build/NutShell.fir.opt.mlir 12413:20]
    node _res_T_12 = mux(_res_T_11, io.src2, adderRes) @[build/NutShell.fir.opt.mlir 12415:20]
    node _res_T_13 = eq(UInt<6>(36), _res_T) @[build/NutShell.fir.opt.mlir 12418:20]
    node _res_T_14 = mux(_res_T_13, xorRes, _res_T_12) @[build/NutShell.fir.opt.mlir 12420:20]
    node _res_T_15 = eq(UInt<6>(37), _res_T) @[build/NutShell.fir.opt.mlir 12423:20]
    node _res_T_16 = mux(_res_T_15, _res_T_1, _res_T_14) @[build/NutShell.fir.opt.mlir 12425:20]
    node _res_T_17 = eq(UInt<6>(38), _res_T) @[build/NutShell.fir.opt.mlir 12428:20]
    node _res_T_18 = mux(_res_T_17, _res_T_2, _res_T_16) @[build/NutShell.fir.opt.mlir 12430:20]
    node _res_T_19 = eq(UInt<6>(55), _res_T) @[build/NutShell.fir.opt.mlir 12433:20]
    node _res_T_20 = mux(_res_T_19, _res_T_4, _res_T_18) @[build/NutShell.fir.opt.mlir 12435:20]
    node _res_T_21 = eq(UInt<6>(48), _res_T) @[build/NutShell.fir.opt.mlir 12438:20]
    node _res_T_22 = mux(_res_T_21, _res_T_6, _res_T_20) @[build/NutShell.fir.opt.mlir 12440:20]
    node _res_T_23 = eq(UInt<6>(49), _res_T) @[build/NutShell.fir.opt.mlir 12443:20]
    node _res_T_24 = mux(_res_T_23, _res_T_8, _res_T_22) @[build/NutShell.fir.opt.mlir 12445:20]
    node _res_T_25 = eq(UInt<6>(50), _res_T) @[build/NutShell.fir.opt.mlir 12448:20]
    node res = mux(_res_T_25, _res_T_10, _res_T_24) @[build/NutShell.fir.opt.mlir 12450:14]
    node _io_result_T = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 12452:23]
    node io_result_signBit = bits(_io_result_T, 31, 31) @[build/NutShell.fir.opt.mlir 12454:28]
    node _io_result_T_1 = mux(io_result_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 12458:25]
    node _io_result_T_2 = cat(_io_result_T_1, _io_result_T) @[build/NutShell.fir.opt.mlir 12460:25]
    node _io_result_T_3 = bits(res, 63, 0) @[build/NutShell.fir.opt.mlir 12462:25]
    node _io_result_T_4 = mux(io.isWordOp, _io_result_T_2, _io_result_T_3) @[build/NutShell.fir.opt.mlir 12464:25]
    connect io.result, _io_result_T_4 @[build/NutShell.fir.opt.mlir 12465:7]

  extmodule LogPerfHelper_9 : @[build/NutShell.fir.opt.mlir 12467:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12467:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12467:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12467:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12467:140]
    defname = LogPerfHelper

  extmodule LogPerfHelper_10 : @[build/NutShell.fir.opt.mlir 12468:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12468:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12468:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12468:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12468:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_11 : @[build/NutShell.fir.opt.mlir 12469:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12469:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12469:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12469:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12469:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_12 : @[build/NutShell.fir.opt.mlir 12470:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12470:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12470:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12470:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12470:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_13 : @[build/NutShell.fir.opt.mlir 12471:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12471:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12471:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12471:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12471:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_14 : @[build/NutShell.fir.opt.mlir 12472:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12472:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12472:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12472:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12472:141]
    defname = LogPerfHelper

  module UnpipelinedLSU : @[build/NutShell.fir.opt.mlir 12473:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 12473:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 12473:72]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip wdata : UInt<64>, flip instr : UInt<32>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, isMMIO : UInt<1>, dtlbPF : UInt<1>, loadAddrMisaligned : UInt<1>, storeAddrMisaligned : UInt<1> } @[build/NutShell.fir.opt.mlir 12473:99]

    inst lsExecUnit of LSExecUnit @[build/NutShell.fir.opt.mlir 12497:62]
    connect lsExecUnit.clock, clock @[build/NutShell.fir.opt.mlir 12519:7]
    connect lsExecUnit.reset, reset @[build/NutShell.fir.opt.mlir 12520:7]
    invalidate lsExecUnit.io.instr @[build/NutShell.fir.opt.mlir 12522:7]
    connect io.dtlbPF, lsExecUnit.io.dtlbPF @[build/NutShell.fir.opt.mlir 12523:7]
    node _storeReq_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 12525:22]
    node storeReq = and(io.in.valid, _storeReq_T) @[build/NutShell.fir.opt.mlir 12527:19]
    node _loadReq_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 12529:21]
    node _loadReq_T_1 = eq(_loadReq_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12532:23]
    node _loadReq_T_2 = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12534:23]
    node _loadReq_T_3 = eq(_loadReq_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12536:23]
    node _loadReq_T_4 = and(_loadReq_T_1, _loadReq_T_3) @[build/NutShell.fir.opt.mlir 12538:23]
    node loadReq = and(io.in.valid, _loadReq_T_4) @[build/NutShell.fir.opt.mlir 12540:18]
    node _atomReq_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12542:21]
    node atomReq = and(io.in.valid, _atomReq_T) @[build/NutShell.fir.opt.mlir 12544:18]
    node _amoReq_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12546:20]
    node _amoReq_T_1 = eq(io.in.bits.func, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 12549:22]
    node _amoReq_T_2 = eq(_amoReq_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12551:22]
    node _amoReq_T_3 = and(_amoReq_T, _amoReq_T_2) @[build/NutShell.fir.opt.mlir 12553:22]
    node _amoReq_T_4 = eq(io.in.bits.func, UInt<6>(33)) @[build/NutShell.fir.opt.mlir 12556:22]
    node _amoReq_T_5 = eq(_amoReq_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12558:22]
    node _amoReq_T_6 = and(_amoReq_T_3, _amoReq_T_5) @[build/NutShell.fir.opt.mlir 12560:22]
    node amoReq = and(io.in.valid, _amoReq_T_6) @[build/NutShell.fir.opt.mlir 12562:17]
    node _lrReq_T = eq(io.in.bits.func, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 12564:19]
    node lrReq = and(io.in.valid, _lrReq_T) @[build/NutShell.fir.opt.mlir 12566:16]
    node _scReq_T = eq(io.in.bits.func, UInt<6>(33)) @[build/NutShell.fir.opt.mlir 12568:19]
    node scReq = and(io.in.valid, _scReq_T) @[build/NutShell.fir.opt.mlir 12570:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 12571:16]
    connect _WIRE, amoReq @[build/NutShell.fir.opt.mlir 12572:7]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 12573:18]
    connect _WIRE_1, amoReq @[build/NutShell.fir.opt.mlir 12574:7]
    node aq = bits(io.instr, 26, 26) @[build/NutShell.fir.opt.mlir 12576:13]
    node rl = bits(io.instr, 25, 25) @[build/NutShell.fir.opt.mlir 12578:13]
    node funct3 = bits(io.instr, 14, 12) @[build/NutShell.fir.opt.mlir 12580:17]
    node _atomWidthW_T = bits(funct3, 0, 0) @[build/NutShell.fir.opt.mlir 12582:24]
    node atomWidthW = eq(_atomWidthW_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12584:21]
    node atomWidthD = bits(funct3, 0, 0) @[build/NutShell.fir.opt.mlir 12586:21]
    wire setLr : UInt<1> @[build/NutShell.fir.opt.mlir 12587:16]
    wire setLrVal : UInt<1> @[build/NutShell.fir.opt.mlir 12588:19]
    wire setLrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 12589:20]
    wire lr : UInt<1> @[build/NutShell.fir.opt.mlir 12590:13]
    connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12592:7]
    wire lrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 12593:17]
    invalidate lrAddr @[build/NutShell.fir.opt.mlir 12595:7]
    node _scInvalid_T = neq(io.in.bits.src1, lrAddr) @[build/NutShell.fir.opt.mlir 12597:23]
    node _scInvalid_T_1 = eq(lr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12599:25]
    node _scInvalid_T_2 = or(_scInvalid_T, _scInvalid_T_1) @[build/NutShell.fir.opt.mlir 12601:25]
    node scInvalid = and(_scInvalid_T_2, scReq) @[build/NutShell.fir.opt.mlir 12603:20]
    wire dtlbFinish : UInt<1> @[build/NutShell.fir.opt.mlir 12604:21]
    connect dtlbFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12606:7]
    wire dtlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 12607:17]
    connect dtlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12609:7]
    wire dtlbEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12610:21]
    connect dtlbEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12612:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12614:16]
    reg atomMemReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 12615:21]
    reg atomRegReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 12616:21]
    inst atomALU of AtomALU @[build/NutShell.fir.opt.mlir 12617:53]
    connect atomALU.clock, clock @[build/NutShell.fir.opt.mlir 12623:7]
    connect atomALU.reset, reset @[build/NutShell.fir.opt.mlir 12624:7]
    connect atomALU.io.src1, atomMemReg @[build/NutShell.fir.opt.mlir 12625:7]
    connect atomALU.io.src2, io.wdata @[build/NutShell.fir.opt.mlir 12626:7]
    connect atomALU.io.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12627:7]
    connect atomALU.io.isWordOp, atomWidthW @[build/NutShell.fir.opt.mlir 12628:7]
    connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12630:7]
    invalidate lsExecUnit.io.out.ready @[build/NutShell.fir.opt.mlir 12632:7]
    invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12634:7]
    invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12636:7]
    invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12638:7]
    invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12640:7]
    connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12642:7]
    connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12644:7]
    node _T = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 12646:13]
    when _T : @[build/NutShell.fir.opt.mlir 12658:7]
      connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12660:9]
      invalidate lsExecUnit.io.out.ready @[build/NutShell.fir.opt.mlir 12662:9]
      invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12664:9]
      invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12666:9]
      invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12668:9]
      invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12670:9]
      node _io_in_ready_T = or(UInt<1>(0), scInvalid) @[build/NutShell.fir.opt.mlir 12672:27]
      connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 12673:9]
      node _io_out_valid_T = or(UInt<1>(0), scInvalid) @[build/NutShell.fir.opt.mlir 12675:28]
      connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 12676:9]
      when io.in.valid : @[build/NutShell.fir.opt.mlir 12677:9]
        connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 12679:11]
      node _lsExecUnit_io_in_valid_T = eq(atomReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12682:38]
      node _lsExecUnit_io_in_valid_T_1 = and(io.in.valid, _lsExecUnit_io_in_valid_T) @[build/NutShell.fir.opt.mlir 12684:40]
      connect lsExecUnit.io.in.valid, _lsExecUnit_io_in_valid_T_1 @[build/NutShell.fir.opt.mlir 12685:9]
      connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12686:9]
      node _lsExecUnit_io_in_bits_src1_T = add(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 12688:42]
      node _lsExecUnit_io_in_bits_src1_T_1 = tail(_lsExecUnit_io_in_bits_src1_T, 1) @[build/NutShell.fir.opt.mlir 12690:44]
      connect lsExecUnit.io.in.bits.src1, _lsExecUnit_io_in_bits_src1_T_1 @[build/NutShell.fir.opt.mlir 12691:9]
      invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12693:9]
      connect lsExecUnit.io.in.bits.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12694:9]
      connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 12695:9]
      node _io_in_ready_T_1 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12697:29]
      node _io_in_ready_T_2 = or(_io_in_ready_T_1, scInvalid) @[build/NutShell.fir.opt.mlir 12699:29]
      connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 12700:9]
      node _io_out_valid_T_1 = or(lsExecUnit.io.out.valid, scInvalid) @[build/NutShell.fir.opt.mlir 12702:30]
      connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 12703:9]
      connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12705:9]
      when amoReq : @[build/NutShell.fir.opt.mlir 12706:9]
        connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 12708:11]
      when lrReq : @[build/NutShell.fir.opt.mlir 12710:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 12712:11]
      when scReq : @[build/NutShell.fir.opt.mlir 12714:9]
        node _state_T = mux(scInvalid, UInt<3>(0), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 12716:23]
        connect state, _state_T @[build/NutShell.fir.opt.mlir 12717:11]
    else :
      node _T_1 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 12721:17]
      when _T_1 : @[build/NutShell.fir.opt.mlir 12722:9]
        connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12724:11]
        connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12725:11]
        invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12727:11]
        invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12729:11]
        connect lsExecUnit.io.in.bits.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12730:11]
        connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 12731:11]
        node _io_in_ready_T_3 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12733:31]
        connect io.in.ready, _io_in_ready_T_3 @[build/NutShell.fir.opt.mlir 12734:11]
        connect io.out.valid, lsExecUnit.io.out.valid @[build/NutShell.fir.opt.mlir 12735:11]
        node _T_2 = eq(atomReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12737:19]
        node _T_3 = eq(amoReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12739:19]
        node _T_4 = or(_T_2, _T_3) @[build/NutShell.fir.opt.mlir 12741:19]
        node _T_5 = eq(lrReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12743:19]
        node _T_6 = or(_T_4, _T_5) @[build/NutShell.fir.opt.mlir 12745:19]
        node _T_7 = eq(scReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12747:19]
        node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 12749:19]
        node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12751:19]
        node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12753:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 12754:11]
          node _T_11 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12756:22]
          when _T_11 : @[build/NutShell.fir.opt.mlir 12757:13]
            skip @[build/NutShell.fir.opt.mlir 12758:15]
          assert(clock, _T_8, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 12760:13]
        node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 12763:20]
        when _T_12 : @[build/NutShell.fir.opt.mlir 12764:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12766:13]
      else :
        node _T_13 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 12770:20]
        when _T_13 : @[build/NutShell.fir.opt.mlir 12771:11]
          connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12773:13]
          connect lsExecUnit.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12775:13]
          connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12776:13]
          invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12778:13]
          node _lsExecUnit_io_in_bits_func_T = mux(atomWidthD, UInt<2>(3), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 12780:46]
          connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T, 7) @[build/NutShell.fir.opt.mlir 12782:13]
          invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12784:13]
          connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12786:13]
          connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12788:13]
          node _T_14 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12790:22]
          when _T_14 : @[build/NutShell.fir.opt.mlir 12791:13]
            connect state, UInt<3>(6) @[build/NutShell.fir.opt.mlir 12793:15]
            inst LogPerfHelper of LogPerfHelper_9 @[build/NutShell.fir.opt.mlir 12794:107]
            wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12795:28]
            connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 12800:15]
            connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 12801:15]
            connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 12802:15]
            connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 12803:15]
            node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 12805:24]
            when _T_15 : @[build/NutShell.fir.opt.mlir 12806:15]
              node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12808:26]
              node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12810:26]
              when _T_17 : @[build/NutShell.fir.opt.mlir 12811:17]
                skip @[build/NutShell.fir.opt.mlir 12812:19]
              node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12815:26]
              node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12817:26]
              when _T_19 : @[build/NutShell.fir.opt.mlir 12818:17]
                skip @[build/NutShell.fir.opt.mlir 12819:19]
          connect atomMemReg, lsExecUnit.io.out.bits @[build/NutShell.fir.opt.mlir 12823:13]
          connect atomRegReg, lsExecUnit.io.out.bits @[build/NutShell.fir.opt.mlir 12824:13]
        else :
          node _T_20 = eq(UInt<3>(6), state) @[build/NutShell.fir.opt.mlir 12827:22]
          when _T_20 : @[build/NutShell.fir.opt.mlir 12828:13]
            connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12830:15]
            connect lsExecUnit.io.out.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12832:15]
            invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12834:15]
            invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12836:15]
            invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12838:15]
            invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12840:15]
            connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12842:15]
            connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12844:15]
            connect state, UInt<3>(7) @[build/NutShell.fir.opt.mlir 12846:15]
            connect atomMemReg, atomALU.io.result @[build/NutShell.fir.opt.mlir 12847:15]
            inst LogPerfHelper_1 of LogPerfHelper_10 @[build/NutShell.fir.opt.mlir 12848:115]
            wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12849:30]
            connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 12854:15]
            connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 12855:15]
            connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 12856:15]
            connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 12857:15]
            node _T_21 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 12859:24]
            when _T_21 : @[build/NutShell.fir.opt.mlir 12860:15]
              node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12862:26]
              node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12864:26]
              when _T_23 : @[build/NutShell.fir.opt.mlir 12865:17]
                skip @[build/NutShell.fir.opt.mlir 12866:19]
              node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12869:26]
              node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12871:26]
              when _T_25 : @[build/NutShell.fir.opt.mlir 12872:17]
                skip @[build/NutShell.fir.opt.mlir 12873:19]
          else :
            node _T_26 = eq(UInt<3>(7), state) @[build/NutShell.fir.opt.mlir 12878:24]
            when _T_26 : @[build/NutShell.fir.opt.mlir 12879:15]
              connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12881:17]
              connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12882:17]
              connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12883:17]
              invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12885:17]
              node _lsExecUnit_io_in_bits_func_T_1 = mux(atomWidthD, UInt<4>(11), UInt<4>(10)) @[build/NutShell.fir.opt.mlir 12887:52]
              connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_1, 7) @[build/NutShell.fir.opt.mlir 12889:17]
              connect lsExecUnit.io.wdata, atomMemReg @[build/NutShell.fir.opt.mlir 12890:17]
              node _io_in_ready_T_4 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12892:37]
              connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 12893:17]
              node _io_out_valid_T_2 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12895:38]
              connect io.out.valid, _io_out_valid_T_2 @[build/NutShell.fir.opt.mlir 12896:17]
              node _T_27 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12898:26]
              when _T_27 : @[build/NutShell.fir.opt.mlir 12899:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12901:19]
                inst LogPerfHelper_2 of LogPerfHelper_11 @[build/NutShell.fir.opt.mlir 12902:119]
                wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12903:34]
                connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 12908:19]
                connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 12909:19]
                connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 12910:19]
                connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 12911:19]
                node _T_28 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 12913:28]
                when _T_28 : @[build/NutShell.fir.opt.mlir 12914:19]
                  node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12916:30]
                  node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12918:30]
                  when _T_30 : @[build/NutShell.fir.opt.mlir 12919:21]
                    skip @[build/NutShell.fir.opt.mlir 12920:23]
                  node _T_31 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12923:30]
                  node _T_32 = eq(_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12925:30]
                  when _T_32 : @[build/NutShell.fir.opt.mlir 12926:21]
                    skip @[build/NutShell.fir.opt.mlir 12927:23]
            else :
              node _T_33 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 12933:26]
              when _T_33 : @[build/NutShell.fir.opt.mlir 12934:17]
                connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12936:19]
                connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12937:19]
                connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12938:19]
                invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12940:19]
                node _lsExecUnit_io_in_bits_func_T_2 = mux(atomWidthD, UInt<2>(3), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 12942:54]
                connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_2, 7) @[build/NutShell.fir.opt.mlir 12944:19]
                invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12946:19]
                node _io_in_ready_T_5 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12948:39]
                connect io.in.ready, _io_in_ready_T_5 @[build/NutShell.fir.opt.mlir 12949:19]
                node _io_out_valid_T_3 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12951:40]
                connect io.out.valid, _io_out_valid_T_3 @[build/NutShell.fir.opt.mlir 12952:19]
                node _T_34 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12954:28]
                when _T_34 : @[build/NutShell.fir.opt.mlir 12955:19]
                  connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12957:21]
                  inst LogPerfHelper_3 of LogPerfHelper_12 @[build/NutShell.fir.opt.mlir 12958:121]
                  wire c_control_3 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12959:36]
                  connect c_control_3.dump, LogPerfHelper_3.dump @[build/NutShell.fir.opt.mlir 12964:21]
                  connect c_control_3.clean, LogPerfHelper_3.clean @[build/NutShell.fir.opt.mlir 12965:21]
                  connect c_control_3.logEnable, LogPerfHelper_3.logEnable @[build/NutShell.fir.opt.mlir 12966:21]
                  connect c_control_3.timer, LogPerfHelper_3.timer @[build/NutShell.fir.opt.mlir 12967:21]
                  node _T_35 = and(UInt<1>(1), c_control_3.logEnable) @[build/NutShell.fir.opt.mlir 12969:30]
                  when _T_35 : @[build/NutShell.fir.opt.mlir 12970:21]
                    node _T_36 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12972:32]
                    node _T_37 = eq(_T_36, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12974:32]
                    when _T_37 : @[build/NutShell.fir.opt.mlir 12975:23]
                      skip @[build/NutShell.fir.opt.mlir 12976:25]
                    node _T_38 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12979:32]
                    node _T_39 = eq(_T_38, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12981:32]
                    when _T_39 : @[build/NutShell.fir.opt.mlir 12982:23]
                      skip @[build/NutShell.fir.opt.mlir 12983:25]
              else :
                node _T_40 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 12989:28]
                when _T_40 : @[build/NutShell.fir.opt.mlir 12990:19]
                  connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12992:21]
                  connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12993:21]
                  connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12994:21]
                  invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12996:21]
                  node _lsExecUnit_io_in_bits_func_T_3 = mux(atomWidthD, UInt<4>(11), UInt<4>(10)) @[build/NutShell.fir.opt.mlir 12998:56]
                  connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_3, 7) @[build/NutShell.fir.opt.mlir 13000:21]
                  connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 13001:21]
                  node _io_in_ready_T_6 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13003:41]
                  connect io.in.ready, _io_in_ready_T_6 @[build/NutShell.fir.opt.mlir 13004:21]
                  node _io_out_valid_T_4 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13006:42]
                  connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 13007:21]
                  node _T_41 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13009:30]
                  when _T_41 : @[build/NutShell.fir.opt.mlir 13010:21]
                    connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13012:23]
                    inst LogPerfHelper_4 of LogPerfHelper_13 @[build/NutShell.fir.opt.mlir 13013:123]
                    wire c_control_4 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 13014:38]
                    connect c_control_4.dump, LogPerfHelper_4.dump @[build/NutShell.fir.opt.mlir 13019:23]
                    connect c_control_4.clean, LogPerfHelper_4.clean @[build/NutShell.fir.opt.mlir 13020:23]
                    connect c_control_4.logEnable, LogPerfHelper_4.logEnable @[build/NutShell.fir.opt.mlir 13021:23]
                    connect c_control_4.timer, LogPerfHelper_4.timer @[build/NutShell.fir.opt.mlir 13022:23]
                    node _T_42 = and(UInt<1>(1), c_control_4.logEnable) @[build/NutShell.fir.opt.mlir 13024:32]
                    when _T_42 : @[build/NutShell.fir.opt.mlir 13025:23]
                      node _T_43 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13027:34]
                      node _T_44 = eq(_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13029:34]
                      when _T_44 : @[build/NutShell.fir.opt.mlir 13030:25]
                        skip @[build/NutShell.fir.opt.mlir 13031:27]
                      node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13034:34]
                      node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13036:34]
                      when _T_46 : @[build/NutShell.fir.opt.mlir 13037:25]
                        skip @[build/NutShell.fir.opt.mlir 13038:27]
    node _T_47 = or(dtlbPF, io.loadAddrMisaligned) @[build/NutShell.fir.opt.mlir 13050:16]
    node _T_48 = or(_T_47, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 13052:16]
    when _T_48 : @[build/NutShell.fir.opt.mlir 13053:7]
      connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13055:9]
      connect io.out.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13057:9]
      connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13059:9]
    node _T_49 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 13062:16]
    inst LogPerfHelper_5 of LogPerfHelper_14 @[build/NutShell.fir.opt.mlir 13063:107]
    wire c_control_5 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 13064:22]
    connect c_control_5.dump, LogPerfHelper_5.dump @[build/NutShell.fir.opt.mlir 13069:7]
    connect c_control_5.clean, LogPerfHelper_5.clean @[build/NutShell.fir.opt.mlir 13070:7]
    connect c_control_5.logEnable, LogPerfHelper_5.logEnable @[build/NutShell.fir.opt.mlir 13071:7]
    connect c_control_5.timer, LogPerfHelper_5.timer @[build/NutShell.fir.opt.mlir 13072:7]
    node _T_50 = and(_T_49, c_control_5.logEnable) @[build/NutShell.fir.opt.mlir 13074:16]
    when _T_50 : @[build/NutShell.fir.opt.mlir 13075:7]
      node _T_51 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13077:18]
      node _T_52 = eq(_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13079:18]
      when _T_52 : @[build/NutShell.fir.opt.mlir 13080:9]
        skip @[build/NutShell.fir.opt.mlir 13081:11]
      node _T_53 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13084:18]
      node _T_54 = eq(_T_53, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13086:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 13087:9]
        skip @[build/NutShell.fir.opt.mlir 13088:11]
    node _setLr_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 13092:19]
    node _setLr_T_1 = or(lrReq, scReq) @[build/NutShell.fir.opt.mlir 13094:21]
    node _setLr_T_2 = and(_setLr_T, _setLr_T_1) @[build/NutShell.fir.opt.mlir 13096:21]
    connect setLr, _setLr_T_2 @[build/NutShell.fir.opt.mlir 13097:7]
    connect setLrVal, lrReq @[build/NutShell.fir.opt.mlir 13098:7]
    connect setLrAddr, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 13099:7]
    connect io.dmem.resp.ready, lsExecUnit.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 13102:7]
    connect lsExecUnit.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 13105:7]
    connect lsExecUnit.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 13108:7]
    connect io.dmem.req.bits, lsExecUnit.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 13109:7]
    connect io.dmem.req.valid, lsExecUnit.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 13110:7]
    connect lsExecUnit.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 13111:7]
    node _io_out_bits_T = eq(state, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 13113:25]
    node _io_out_bits_T_1 = mux(_io_out_bits_T, atomRegReg, lsExecUnit.io.out.bits) @[build/NutShell.fir.opt.mlir 13115:27]
    node _io_out_bits_T_2 = mux(scReq, scInvalid, _io_out_bits_T_1) @[build/NutShell.fir.opt.mlir 13117:27]
    connect io.out.bits, _io_out_bits_T_2 @[build/NutShell.fir.opt.mlir 13118:7]
    wire lsuMMIO : UInt<1> @[build/NutShell.fir.opt.mlir 13119:18]
    connect lsuMMIO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13121:7]
    regreset mmioReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13122:18]
    node _T_55 = eq(mmioReg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13124:16]
    when _T_55 : @[build/NutShell.fir.opt.mlir 13125:7]
      connect mmioReg, lsuMMIO @[build/NutShell.fir.opt.mlir 13126:9]
    when io.out.valid : @[build/NutShell.fir.opt.mlir 13128:7]
      connect mmioReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13130:9]
    node _io_isMMIO_T = and(mmioReg, io.out.valid) @[build/NutShell.fir.opt.mlir 13133:23]
    connect io.isMMIO, _io_isMMIO_T @[build/NutShell.fir.opt.mlir 13134:7]
    connect io.loadAddrMisaligned, lsExecUnit.io.loadAddrMisaligned @[build/NutShell.fir.opt.mlir 13135:7]
    connect io.storeAddrMisaligned, lsExecUnit.io.storeAddrMisaligned @[build/NutShell.fir.opt.mlir 13136:7]

  module Multiplier : @[build/NutShell.fir.opt.mlir 13138:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 13138:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 13138:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<65>[2] }, flip sign : UInt<1>, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130> } } @[build/NutShell.fir.opt.mlir 13138:95]

    reg mulRes_REG : UInt<65>, clock @[build/NutShell.fir.opt.mlir 13148:21]
    connect mulRes_REG, io.in.bits[0] @[build/NutShell.fir.opt.mlir 13149:7]
    node _mulRes_T = asSInt(mulRes_REG) @[build/NutShell.fir.opt.mlir 13151:20]
    reg mulRes_REG_1 : UInt<65>, clock @[build/NutShell.fir.opt.mlir 13152:23]
    connect mulRes_REG_1, io.in.bits[1] @[build/NutShell.fir.opt.mlir 13153:7]
    node _mulRes_T_1 = asSInt(mulRes_REG_1) @[build/NutShell.fir.opt.mlir 13155:22]
    node mulRes = mul(_mulRes_T, _mulRes_T_1) @[build/NutShell.fir.opt.mlir 13157:17]
    reg io_out_bits_REG : SInt<65>, clock @[build/NutShell.fir.opt.mlir 13158:26]
    connect io_out_bits_REG, mulRes @[build/NutShell.fir.opt.mlir 13159:7]
    reg io_out_bits_REG_1 : SInt<65>, clock @[build/NutShell.fir.opt.mlir 13160:28]
    connect io_out_bits_REG_1, io_out_bits_REG @[build/NutShell.fir.opt.mlir 13161:7]
    reg io_out_bits_REG_2 : SInt<65>, clock @[build/NutShell.fir.opt.mlir 13162:28]
    connect io_out_bits_REG_2, io_out_bits_REG_1 @[build/NutShell.fir.opt.mlir 13163:7]
    node _io_out_bits_T = asUInt(io_out_bits_REG_2) @[build/NutShell.fir.opt.mlir 13165:25]
    connect io.out.bits, _io_out_bits_T @[build/NutShell.fir.opt.mlir 13166:7]
    node _io_out_valid_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 13168:26]
    reg io_out_valid_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13169:27]
    connect io_out_valid_REG, _io_out_valid_T @[build/NutShell.fir.opt.mlir 13170:7]
    reg io_out_valid_REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13171:29]
    connect io_out_valid_REG_1, io_out_valid_REG @[build/NutShell.fir.opt.mlir 13172:7]
    reg io_out_valid_REG_2 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13173:29]
    connect io_out_valid_REG_2, io_out_valid_REG_1 @[build/NutShell.fir.opt.mlir 13174:7]
    reg io_out_valid_REG_3 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13175:29]
    connect io_out_valid_REG_3, io_out_valid_REG_2 @[build/NutShell.fir.opt.mlir 13176:7]
    connect io.out.valid, io_out_valid_REG_3 @[build/NutShell.fir.opt.mlir 13177:7]
    regreset busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13179:15]
    node _T = eq(busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13181:13]
    node _T_1 = and(io.in.valid, _T) @[build/NutShell.fir.opt.mlir 13183:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 13185:7]
      connect busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13187:9]
    when io.out.valid : @[build/NutShell.fir.opt.mlir 13189:7]
      connect busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13191:9]
    node _io_in_ready_T = eq(busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13194:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 13195:7]

  module Divider : @[build/NutShell.fir.opt.mlir 13197:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 13197:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 13197:65]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>[2] }, flip sign : UInt<1>, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128> } } @[build/NutShell.fir.opt.mlir 13197:92]

    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13209:16]
    node _newReq_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 13211:20]
    node _newReq_T_1 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 13213:22]
    node newReq = and(_newReq_T, _newReq_T_1) @[build/NutShell.fir.opt.mlir 13215:17]
    node divBy0 = eq(io.in.bits[1], UInt<64>(0)) @[build/NutShell.fir.opt.mlir 13218:17]
    reg shiftReg : UInt<129>, clock @[build/NutShell.fir.opt.mlir 13219:19]
    node hi = bits(shiftReg, 128, 64) @[build/NutShell.fir.opt.mlir 13221:13]
    node lo = bits(shiftReg, 63, 0) @[build/NutShell.fir.opt.mlir 13223:13]
    node _s_T = bits(io.in.bits[0], 63, 63) @[build/NutShell.fir.opt.mlir 13225:15]
    node aSign = and(_s_T, io.sign) @[build/NutShell.fir.opt.mlir 13227:16]
    node _T = sub(UInt<1>(0), io.in.bits[0]) @[build/NutShell.fir.opt.mlir 13230:13]
    node _T_1 = tail(_T, 1) @[build/NutShell.fir.opt.mlir 13232:15]
    node aVal = mux(aSign, _T_1, io.in.bits[0]) @[build/NutShell.fir.opt.mlir 13234:15]
    node _s_T_1 = bits(io.in.bits[1], 63, 63) @[build/NutShell.fir.opt.mlir 13236:17]
    node bSign = and(_s_T_1, io.sign) @[build/NutShell.fir.opt.mlir 13238:16]
    node _T_2 = sub(UInt<1>(0), io.in.bits[1]) @[build/NutShell.fir.opt.mlir 13240:15]
    node _T_3 = tail(_T_2, 1) @[build/NutShell.fir.opt.mlir 13242:15]
    node bVal = mux(bSign, _T_3, io.in.bits[1]) @[build/NutShell.fir.opt.mlir 13244:15]
    reg aSignReg : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13245:19]
    when newReq : @[build/NutShell.fir.opt.mlir 13246:7]
      connect aSignReg, aSign @[build/NutShell.fir.opt.mlir 13247:9]
    node _qSignReg_T = xor(aSign, bSign) @[build/NutShell.fir.opt.mlir 13250:22]
    node _qSignReg_T_1 = eq(divBy0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13252:24]
    node _qSignReg_T_2 = and(_qSignReg_T, _qSignReg_T_1) @[build/NutShell.fir.opt.mlir 13254:24]
    reg qSignReg : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13255:19]
    when newReq : @[build/NutShell.fir.opt.mlir 13256:7]
      connect qSignReg, _qSignReg_T_2 @[build/NutShell.fir.opt.mlir 13257:9]
    reg bReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 13259:15]
    when newReq : @[build/NutShell.fir.opt.mlir 13260:7]
      connect bReg, bVal @[build/NutShell.fir.opt.mlir 13261:9]
    node _aValx2Reg_T = cat(aVal, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13264:23]
    reg aValx2Reg : UInt<65>, clock @[build/NutShell.fir.opt.mlir 13265:20]
    when newReq : @[build/NutShell.fir.opt.mlir 13266:7]
      connect aValx2Reg, _aValx2Reg_T @[build/NutShell.fir.opt.mlir 13267:9]
    regreset cnt_value : UInt<6>, clock, reset, UInt<6>(0) @[build/NutShell.fir.opt.mlir 13270:20]
    when newReq : @[build/NutShell.fir.opt.mlir 13280:7]
      connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 13282:9]
    else :
      node _T_4 = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 13285:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 13286:9]
        node canSkipShift_hi = bits(bReg, 63, 32) @[build/NutShell.fir.opt.mlir 13288:30]
        node canSkipShift_lo = bits(bReg, 31, 0) @[build/NutShell.fir.opt.mlir 13290:30]
        node canSkipShift_useHi = orr(canSkipShift_hi) @[build/NutShell.fir.opt.mlir 13292:33]
        node canSkipShift_hi_1 = bits(canSkipShift_hi, 31, 16) @[build/NutShell.fir.opt.mlir 13294:32]
        node canSkipShift_lo_1 = bits(canSkipShift_hi, 15, 0) @[build/NutShell.fir.opt.mlir 13296:32]
        node canSkipShift_useHi_1 = orr(canSkipShift_hi_1) @[build/NutShell.fir.opt.mlir 13298:35]
        node canSkipShift_hi_2 = bits(canSkipShift_hi_1, 15, 8) @[build/NutShell.fir.opt.mlir 13300:32]
        node canSkipShift_lo_2 = bits(canSkipShift_hi_1, 7, 0) @[build/NutShell.fir.opt.mlir 13302:32]
        node canSkipShift_useHi_2 = orr(canSkipShift_hi_2) @[build/NutShell.fir.opt.mlir 13304:35]
        node canSkipShift_hi_3 = bits(canSkipShift_hi_2, 7, 4) @[build/NutShell.fir.opt.mlir 13306:32]
        node canSkipShift_lo_3 = bits(canSkipShift_hi_2, 3, 0) @[build/NutShell.fir.opt.mlir 13308:32]
        node canSkipShift_useHi_3 = orr(canSkipShift_hi_3) @[build/NutShell.fir.opt.mlir 13310:35]
        node _canSkipShift_T = bits(canSkipShift_hi_3, 3, 3) @[build/NutShell.fir.opt.mlir 13312:30]
        node _canSkipShift_T_1 = bits(canSkipShift_hi_3, 2, 2) @[build/NutShell.fir.opt.mlir 13314:32]
        node _canSkipShift_T_2 = bits(canSkipShift_hi_3, 1, 1) @[build/NutShell.fir.opt.mlir 13316:32]
        node _canSkipShift_T_3 = mux(_canSkipShift_T_1, UInt<2>(2), _canSkipShift_T_2) @[build/NutShell.fir.opt.mlir 13318:32]
        node _canSkipShift_T_4 = mux(_canSkipShift_T, UInt<2>(3), _canSkipShift_T_3) @[build/NutShell.fir.opt.mlir 13320:32]
        node _canSkipShift_T_5 = bits(canSkipShift_lo_3, 3, 3) @[build/NutShell.fir.opt.mlir 13322:32]
        node _canSkipShift_T_6 = bits(canSkipShift_lo_3, 2, 2) @[build/NutShell.fir.opt.mlir 13324:32]
        node _canSkipShift_T_7 = bits(canSkipShift_lo_3, 1, 1) @[build/NutShell.fir.opt.mlir 13326:32]
        node _canSkipShift_T_8 = mux(_canSkipShift_T_6, UInt<2>(2), _canSkipShift_T_7) @[build/NutShell.fir.opt.mlir 13328:32]
        node _canSkipShift_T_9 = mux(_canSkipShift_T_5, UInt<2>(3), _canSkipShift_T_8) @[build/NutShell.fir.opt.mlir 13330:32]
        node _canSkipShift_T_10 = mux(canSkipShift_useHi_3, _canSkipShift_T_4, _canSkipShift_T_9) @[build/NutShell.fir.opt.mlir 13332:33]
        node _canSkipShift_T_11 = cat(canSkipShift_useHi_3, _canSkipShift_T_10) @[build/NutShell.fir.opt.mlir 13334:33]
        node canSkipShift_hi_4 = bits(canSkipShift_lo_2, 7, 4) @[build/NutShell.fir.opt.mlir 13336:32]
        node canSkipShift_lo_4 = bits(canSkipShift_lo_2, 3, 0) @[build/NutShell.fir.opt.mlir 13338:32]
        node canSkipShift_useHi_4 = orr(canSkipShift_hi_4) @[build/NutShell.fir.opt.mlir 13340:35]
        node _canSkipShift_T_12 = bits(canSkipShift_hi_4, 3, 3) @[build/NutShell.fir.opt.mlir 13342:33]
        node _canSkipShift_T_13 = bits(canSkipShift_hi_4, 2, 2) @[build/NutShell.fir.opt.mlir 13344:33]
        node _canSkipShift_T_14 = bits(canSkipShift_hi_4, 1, 1) @[build/NutShell.fir.opt.mlir 13346:33]
        node _canSkipShift_T_15 = mux(_canSkipShift_T_13, UInt<2>(2), _canSkipShift_T_14) @[build/NutShell.fir.opt.mlir 13348:33]
        node _canSkipShift_T_16 = mux(_canSkipShift_T_12, UInt<2>(3), _canSkipShift_T_15) @[build/NutShell.fir.opt.mlir 13350:33]
        node _canSkipShift_T_17 = bits(canSkipShift_lo_4, 3, 3) @[build/NutShell.fir.opt.mlir 13352:33]
        node _canSkipShift_T_18 = bits(canSkipShift_lo_4, 2, 2) @[build/NutShell.fir.opt.mlir 13354:33]
        node _canSkipShift_T_19 = bits(canSkipShift_lo_4, 1, 1) @[build/NutShell.fir.opt.mlir 13356:33]
        node _canSkipShift_T_20 = mux(_canSkipShift_T_18, UInt<2>(2), _canSkipShift_T_19) @[build/NutShell.fir.opt.mlir 13358:33]
        node _canSkipShift_T_21 = mux(_canSkipShift_T_17, UInt<2>(3), _canSkipShift_T_20) @[build/NutShell.fir.opt.mlir 13360:33]
        node _canSkipShift_T_22 = mux(canSkipShift_useHi_4, _canSkipShift_T_16, _canSkipShift_T_21) @[build/NutShell.fir.opt.mlir 13362:33]
        node _canSkipShift_T_23 = cat(canSkipShift_useHi_4, _canSkipShift_T_22) @[build/NutShell.fir.opt.mlir 13364:33]
        node _canSkipShift_T_24 = mux(canSkipShift_useHi_2, _canSkipShift_T_11, _canSkipShift_T_23) @[build/NutShell.fir.opt.mlir 13366:33]
        node _canSkipShift_T_25 = cat(canSkipShift_useHi_2, _canSkipShift_T_24) @[build/NutShell.fir.opt.mlir 13368:33]
        node canSkipShift_hi_5 = bits(canSkipShift_lo_1, 15, 8) @[build/NutShell.fir.opt.mlir 13370:32]
        node canSkipShift_lo_5 = bits(canSkipShift_lo_1, 7, 0) @[build/NutShell.fir.opt.mlir 13372:32]
        node canSkipShift_useHi_5 = orr(canSkipShift_hi_5) @[build/NutShell.fir.opt.mlir 13374:35]
        node canSkipShift_hi_6 = bits(canSkipShift_hi_5, 7, 4) @[build/NutShell.fir.opt.mlir 13376:32]
        node canSkipShift_lo_6 = bits(canSkipShift_hi_5, 3, 0) @[build/NutShell.fir.opt.mlir 13378:32]
        node canSkipShift_useHi_6 = orr(canSkipShift_hi_6) @[build/NutShell.fir.opt.mlir 13380:35]
        node _canSkipShift_T_26 = bits(canSkipShift_hi_6, 3, 3) @[build/NutShell.fir.opt.mlir 13382:33]
        node _canSkipShift_T_27 = bits(canSkipShift_hi_6, 2, 2) @[build/NutShell.fir.opt.mlir 13384:33]
        node _canSkipShift_T_28 = bits(canSkipShift_hi_6, 1, 1) @[build/NutShell.fir.opt.mlir 13386:33]
        node _canSkipShift_T_29 = mux(_canSkipShift_T_27, UInt<2>(2), _canSkipShift_T_28) @[build/NutShell.fir.opt.mlir 13388:33]
        node _canSkipShift_T_30 = mux(_canSkipShift_T_26, UInt<2>(3), _canSkipShift_T_29) @[build/NutShell.fir.opt.mlir 13390:33]
        node _canSkipShift_T_31 = bits(canSkipShift_lo_6, 3, 3) @[build/NutShell.fir.opt.mlir 13392:33]
        node _canSkipShift_T_32 = bits(canSkipShift_lo_6, 2, 2) @[build/NutShell.fir.opt.mlir 13394:33]
        node _canSkipShift_T_33 = bits(canSkipShift_lo_6, 1, 1) @[build/NutShell.fir.opt.mlir 13396:33]
        node _canSkipShift_T_34 = mux(_canSkipShift_T_32, UInt<2>(2), _canSkipShift_T_33) @[build/NutShell.fir.opt.mlir 13398:33]
        node _canSkipShift_T_35 = mux(_canSkipShift_T_31, UInt<2>(3), _canSkipShift_T_34) @[build/NutShell.fir.opt.mlir 13400:33]
        node _canSkipShift_T_36 = mux(canSkipShift_useHi_6, _canSkipShift_T_30, _canSkipShift_T_35) @[build/NutShell.fir.opt.mlir 13402:33]
        node _canSkipShift_T_37 = cat(canSkipShift_useHi_6, _canSkipShift_T_36) @[build/NutShell.fir.opt.mlir 13404:33]
        node canSkipShift_hi_7 = bits(canSkipShift_lo_5, 7, 4) @[build/NutShell.fir.opt.mlir 13406:32]
        node canSkipShift_lo_7 = bits(canSkipShift_lo_5, 3, 0) @[build/NutShell.fir.opt.mlir 13408:32]
        node canSkipShift_useHi_7 = orr(canSkipShift_hi_7) @[build/NutShell.fir.opt.mlir 13410:35]
        node _canSkipShift_T_38 = bits(canSkipShift_hi_7, 3, 3) @[build/NutShell.fir.opt.mlir 13412:33]
        node _canSkipShift_T_39 = bits(canSkipShift_hi_7, 2, 2) @[build/NutShell.fir.opt.mlir 13414:33]
        node _canSkipShift_T_40 = bits(canSkipShift_hi_7, 1, 1) @[build/NutShell.fir.opt.mlir 13416:33]
        node _canSkipShift_T_41 = mux(_canSkipShift_T_39, UInt<2>(2), _canSkipShift_T_40) @[build/NutShell.fir.opt.mlir 13418:33]
        node _canSkipShift_T_42 = mux(_canSkipShift_T_38, UInt<2>(3), _canSkipShift_T_41) @[build/NutShell.fir.opt.mlir 13420:33]
        node _canSkipShift_T_43 = bits(canSkipShift_lo_7, 3, 3) @[build/NutShell.fir.opt.mlir 13422:33]
        node _canSkipShift_T_44 = bits(canSkipShift_lo_7, 2, 2) @[build/NutShell.fir.opt.mlir 13424:33]
        node _canSkipShift_T_45 = bits(canSkipShift_lo_7, 1, 1) @[build/NutShell.fir.opt.mlir 13426:33]
        node _canSkipShift_T_46 = mux(_canSkipShift_T_44, UInt<2>(2), _canSkipShift_T_45) @[build/NutShell.fir.opt.mlir 13428:33]
        node _canSkipShift_T_47 = mux(_canSkipShift_T_43, UInt<2>(3), _canSkipShift_T_46) @[build/NutShell.fir.opt.mlir 13430:33]
        node _canSkipShift_T_48 = mux(canSkipShift_useHi_7, _canSkipShift_T_42, _canSkipShift_T_47) @[build/NutShell.fir.opt.mlir 13432:33]
        node _canSkipShift_T_49 = cat(canSkipShift_useHi_7, _canSkipShift_T_48) @[build/NutShell.fir.opt.mlir 13434:33]
        node _canSkipShift_T_50 = mux(canSkipShift_useHi_5, _canSkipShift_T_37, _canSkipShift_T_49) @[build/NutShell.fir.opt.mlir 13436:33]
        node _canSkipShift_T_51 = cat(canSkipShift_useHi_5, _canSkipShift_T_50) @[build/NutShell.fir.opt.mlir 13438:33]
        node _canSkipShift_T_52 = mux(canSkipShift_useHi_1, _canSkipShift_T_25, _canSkipShift_T_51) @[build/NutShell.fir.opt.mlir 13440:33]
        node _canSkipShift_T_53 = cat(canSkipShift_useHi_1, _canSkipShift_T_52) @[build/NutShell.fir.opt.mlir 13442:33]
        node canSkipShift_hi_8 = bits(canSkipShift_lo, 31, 16) @[build/NutShell.fir.opt.mlir 13444:32]
        node canSkipShift_lo_8 = bits(canSkipShift_lo, 15, 0) @[build/NutShell.fir.opt.mlir 13446:32]
        node canSkipShift_useHi_8 = orr(canSkipShift_hi_8) @[build/NutShell.fir.opt.mlir 13448:35]
        node canSkipShift_hi_9 = bits(canSkipShift_hi_8, 15, 8) @[build/NutShell.fir.opt.mlir 13450:32]
        node canSkipShift_lo_9 = bits(canSkipShift_hi_8, 7, 0) @[build/NutShell.fir.opt.mlir 13452:32]
        node canSkipShift_useHi_9 = orr(canSkipShift_hi_9) @[build/NutShell.fir.opt.mlir 13454:35]
        node canSkipShift_hi_10 = bits(canSkipShift_hi_9, 7, 4) @[build/NutShell.fir.opt.mlir 13456:33]
        node canSkipShift_lo_10 = bits(canSkipShift_hi_9, 3, 0) @[build/NutShell.fir.opt.mlir 13458:33]
        node canSkipShift_useHi_10 = orr(canSkipShift_hi_10) @[build/NutShell.fir.opt.mlir 13460:36]
        node _canSkipShift_T_54 = bits(canSkipShift_hi_10, 3, 3) @[build/NutShell.fir.opt.mlir 13462:33]
        node _canSkipShift_T_55 = bits(canSkipShift_hi_10, 2, 2) @[build/NutShell.fir.opt.mlir 13464:33]
        node _canSkipShift_T_56 = bits(canSkipShift_hi_10, 1, 1) @[build/NutShell.fir.opt.mlir 13466:33]
        node _canSkipShift_T_57 = mux(_canSkipShift_T_55, UInt<2>(2), _canSkipShift_T_56) @[build/NutShell.fir.opt.mlir 13468:33]
        node _canSkipShift_T_58 = mux(_canSkipShift_T_54, UInt<2>(3), _canSkipShift_T_57) @[build/NutShell.fir.opt.mlir 13470:33]
        node _canSkipShift_T_59 = bits(canSkipShift_lo_10, 3, 3) @[build/NutShell.fir.opt.mlir 13472:33]
        node _canSkipShift_T_60 = bits(canSkipShift_lo_10, 2, 2) @[build/NutShell.fir.opt.mlir 13474:33]
        node _canSkipShift_T_61 = bits(canSkipShift_lo_10, 1, 1) @[build/NutShell.fir.opt.mlir 13476:33]
        node _canSkipShift_T_62 = mux(_canSkipShift_T_60, UInt<2>(2), _canSkipShift_T_61) @[build/NutShell.fir.opt.mlir 13478:33]
        node _canSkipShift_T_63 = mux(_canSkipShift_T_59, UInt<2>(3), _canSkipShift_T_62) @[build/NutShell.fir.opt.mlir 13480:33]
        node _canSkipShift_T_64 = mux(canSkipShift_useHi_10, _canSkipShift_T_58, _canSkipShift_T_63) @[build/NutShell.fir.opt.mlir 13482:33]
        node _canSkipShift_T_65 = cat(canSkipShift_useHi_10, _canSkipShift_T_64) @[build/NutShell.fir.opt.mlir 13484:33]
        node canSkipShift_hi_11 = bits(canSkipShift_lo_9, 7, 4) @[build/NutShell.fir.opt.mlir 13486:33]
        node canSkipShift_lo_11 = bits(canSkipShift_lo_9, 3, 0) @[build/NutShell.fir.opt.mlir 13488:33]
        node canSkipShift_useHi_11 = orr(canSkipShift_hi_11) @[build/NutShell.fir.opt.mlir 13490:36]
        node _canSkipShift_T_66 = bits(canSkipShift_hi_11, 3, 3) @[build/NutShell.fir.opt.mlir 13492:33]
        node _canSkipShift_T_67 = bits(canSkipShift_hi_11, 2, 2) @[build/NutShell.fir.opt.mlir 13494:33]
        node _canSkipShift_T_68 = bits(canSkipShift_hi_11, 1, 1) @[build/NutShell.fir.opt.mlir 13496:33]
        node _canSkipShift_T_69 = mux(_canSkipShift_T_67, UInt<2>(2), _canSkipShift_T_68) @[build/NutShell.fir.opt.mlir 13498:33]
        node _canSkipShift_T_70 = mux(_canSkipShift_T_66, UInt<2>(3), _canSkipShift_T_69) @[build/NutShell.fir.opt.mlir 13500:33]
        node _canSkipShift_T_71 = bits(canSkipShift_lo_11, 3, 3) @[build/NutShell.fir.opt.mlir 13502:33]
        node _canSkipShift_T_72 = bits(canSkipShift_lo_11, 2, 2) @[build/NutShell.fir.opt.mlir 13504:33]
        node _canSkipShift_T_73 = bits(canSkipShift_lo_11, 1, 1) @[build/NutShell.fir.opt.mlir 13506:33]
        node _canSkipShift_T_74 = mux(_canSkipShift_T_72, UInt<2>(2), _canSkipShift_T_73) @[build/NutShell.fir.opt.mlir 13508:33]
        node _canSkipShift_T_75 = mux(_canSkipShift_T_71, UInt<2>(3), _canSkipShift_T_74) @[build/NutShell.fir.opt.mlir 13510:33]
        node _canSkipShift_T_76 = mux(canSkipShift_useHi_11, _canSkipShift_T_70, _canSkipShift_T_75) @[build/NutShell.fir.opt.mlir 13512:33]
        node _canSkipShift_T_77 = cat(canSkipShift_useHi_11, _canSkipShift_T_76) @[build/NutShell.fir.opt.mlir 13514:33]
        node _canSkipShift_T_78 = mux(canSkipShift_useHi_9, _canSkipShift_T_65, _canSkipShift_T_77) @[build/NutShell.fir.opt.mlir 13516:33]
        node _canSkipShift_T_79 = cat(canSkipShift_useHi_9, _canSkipShift_T_78) @[build/NutShell.fir.opt.mlir 13518:33]
        node canSkipShift_hi_12 = bits(canSkipShift_lo_8, 15, 8) @[build/NutShell.fir.opt.mlir 13520:33]
        node canSkipShift_lo_12 = bits(canSkipShift_lo_8, 7, 0) @[build/NutShell.fir.opt.mlir 13522:33]
        node canSkipShift_useHi_12 = orr(canSkipShift_hi_12) @[build/NutShell.fir.opt.mlir 13524:36]
        node canSkipShift_hi_13 = bits(canSkipShift_hi_12, 7, 4) @[build/NutShell.fir.opt.mlir 13526:33]
        node canSkipShift_lo_13 = bits(canSkipShift_hi_12, 3, 0) @[build/NutShell.fir.opt.mlir 13528:33]
        node canSkipShift_useHi_13 = orr(canSkipShift_hi_13) @[build/NutShell.fir.opt.mlir 13530:36]
        node _canSkipShift_T_80 = bits(canSkipShift_hi_13, 3, 3) @[build/NutShell.fir.opt.mlir 13532:33]
        node _canSkipShift_T_81 = bits(canSkipShift_hi_13, 2, 2) @[build/NutShell.fir.opt.mlir 13534:33]
        node _canSkipShift_T_82 = bits(canSkipShift_hi_13, 1, 1) @[build/NutShell.fir.opt.mlir 13536:33]
        node _canSkipShift_T_83 = mux(_canSkipShift_T_81, UInt<2>(2), _canSkipShift_T_82) @[build/NutShell.fir.opt.mlir 13538:33]
        node _canSkipShift_T_84 = mux(_canSkipShift_T_80, UInt<2>(3), _canSkipShift_T_83) @[build/NutShell.fir.opt.mlir 13540:33]
        node _canSkipShift_T_85 = bits(canSkipShift_lo_13, 3, 3) @[build/NutShell.fir.opt.mlir 13542:33]
        node _canSkipShift_T_86 = bits(canSkipShift_lo_13, 2, 2) @[build/NutShell.fir.opt.mlir 13544:33]
        node _canSkipShift_T_87 = bits(canSkipShift_lo_13, 1, 1) @[build/NutShell.fir.opt.mlir 13546:33]
        node _canSkipShift_T_88 = mux(_canSkipShift_T_86, UInt<2>(2), _canSkipShift_T_87) @[build/NutShell.fir.opt.mlir 13548:33]
        node _canSkipShift_T_89 = mux(_canSkipShift_T_85, UInt<2>(3), _canSkipShift_T_88) @[build/NutShell.fir.opt.mlir 13550:33]
        node _canSkipShift_T_90 = mux(canSkipShift_useHi_13, _canSkipShift_T_84, _canSkipShift_T_89) @[build/NutShell.fir.opt.mlir 13552:33]
        node _canSkipShift_T_91 = cat(canSkipShift_useHi_13, _canSkipShift_T_90) @[build/NutShell.fir.opt.mlir 13554:33]
        node canSkipShift_hi_14 = bits(canSkipShift_lo_12, 7, 4) @[build/NutShell.fir.opt.mlir 13556:33]
        node canSkipShift_lo_14 = bits(canSkipShift_lo_12, 3, 0) @[build/NutShell.fir.opt.mlir 13558:33]
        node canSkipShift_useHi_14 = orr(canSkipShift_hi_14) @[build/NutShell.fir.opt.mlir 13560:36]
        node _canSkipShift_T_92 = bits(canSkipShift_hi_14, 3, 3) @[build/NutShell.fir.opt.mlir 13562:33]
        node _canSkipShift_T_93 = bits(canSkipShift_hi_14, 2, 2) @[build/NutShell.fir.opt.mlir 13564:33]
        node _canSkipShift_T_94 = bits(canSkipShift_hi_14, 1, 1) @[build/NutShell.fir.opt.mlir 13566:33]
        node _canSkipShift_T_95 = mux(_canSkipShift_T_93, UInt<2>(2), _canSkipShift_T_94) @[build/NutShell.fir.opt.mlir 13568:33]
        node _canSkipShift_T_96 = mux(_canSkipShift_T_92, UInt<2>(3), _canSkipShift_T_95) @[build/NutShell.fir.opt.mlir 13570:33]
        node _canSkipShift_T_97 = bits(canSkipShift_lo_14, 3, 3) @[build/NutShell.fir.opt.mlir 13572:33]
        node _canSkipShift_T_98 = bits(canSkipShift_lo_14, 2, 2) @[build/NutShell.fir.opt.mlir 13574:33]
        node _canSkipShift_T_99 = bits(canSkipShift_lo_14, 1, 1) @[build/NutShell.fir.opt.mlir 13576:33]
        node _canSkipShift_T_100 = mux(_canSkipShift_T_98, UInt<2>(2), _canSkipShift_T_99) @[build/NutShell.fir.opt.mlir 13578:34]
        node _canSkipShift_T_101 = mux(_canSkipShift_T_97, UInt<2>(3), _canSkipShift_T_100) @[build/NutShell.fir.opt.mlir 13580:34]
        node _canSkipShift_T_102 = mux(canSkipShift_useHi_14, _canSkipShift_T_96, _canSkipShift_T_101) @[build/NutShell.fir.opt.mlir 13582:34]
        node _canSkipShift_T_103 = cat(canSkipShift_useHi_14, _canSkipShift_T_102) @[build/NutShell.fir.opt.mlir 13584:34]
        node _canSkipShift_T_104 = mux(canSkipShift_useHi_12, _canSkipShift_T_91, _canSkipShift_T_103) @[build/NutShell.fir.opt.mlir 13586:34]
        node _canSkipShift_T_105 = cat(canSkipShift_useHi_12, _canSkipShift_T_104) @[build/NutShell.fir.opt.mlir 13588:34]
        node _canSkipShift_T_106 = mux(canSkipShift_useHi_8, _canSkipShift_T_79, _canSkipShift_T_105) @[build/NutShell.fir.opt.mlir 13590:34]
        node _canSkipShift_T_107 = cat(canSkipShift_useHi_8, _canSkipShift_T_106) @[build/NutShell.fir.opt.mlir 13592:34]
        node _canSkipShift_T_108 = mux(canSkipShift_useHi, _canSkipShift_T_53, _canSkipShift_T_107) @[build/NutShell.fir.opt.mlir 13594:34]
        node _canSkipShift_T_109 = cat(canSkipShift_useHi, _canSkipShift_T_108) @[build/NutShell.fir.opt.mlir 13596:34]
        node _canSkipShift_T_110 = or(UInt<7>(64), _canSkipShift_T_109) @[build/NutShell.fir.opt.mlir 13598:34]
        node canSkipShift_hi_15 = bits(aValx2Reg, 64, 64) @[build/NutShell.fir.opt.mlir 13600:33]
        node canSkipShift_lo_15 = bits(aValx2Reg, 63, 0) @[build/NutShell.fir.opt.mlir 13602:33]
        node canSkipShift_useHi_15 = orr(canSkipShift_hi_15) @[build/NutShell.fir.opt.mlir 13604:36]
        node canSkipShift_hi_16 = bits(canSkipShift_lo_15, 63, 32) @[build/NutShell.fir.opt.mlir 13606:33]
        node canSkipShift_lo_16 = bits(canSkipShift_lo_15, 31, 0) @[build/NutShell.fir.opt.mlir 13608:33]
        node canSkipShift_useHi_16 = orr(canSkipShift_hi_16) @[build/NutShell.fir.opt.mlir 13610:36]
        node canSkipShift_hi_17 = bits(canSkipShift_hi_16, 31, 16) @[build/NutShell.fir.opt.mlir 13612:33]
        node canSkipShift_lo_17 = bits(canSkipShift_hi_16, 15, 0) @[build/NutShell.fir.opt.mlir 13614:33]
        node canSkipShift_useHi_17 = orr(canSkipShift_hi_17) @[build/NutShell.fir.opt.mlir 13616:36]
        node canSkipShift_hi_18 = bits(canSkipShift_hi_17, 15, 8) @[build/NutShell.fir.opt.mlir 13618:33]
        node canSkipShift_lo_18 = bits(canSkipShift_hi_17, 7, 0) @[build/NutShell.fir.opt.mlir 13620:33]
        node canSkipShift_useHi_18 = orr(canSkipShift_hi_18) @[build/NutShell.fir.opt.mlir 13622:36]
        node canSkipShift_hi_19 = bits(canSkipShift_hi_18, 7, 4) @[build/NutShell.fir.opt.mlir 13624:33]
        node canSkipShift_lo_19 = bits(canSkipShift_hi_18, 3, 0) @[build/NutShell.fir.opt.mlir 13626:33]
        node canSkipShift_useHi_19 = orr(canSkipShift_hi_19) @[build/NutShell.fir.opt.mlir 13628:36]
        node _canSkipShift_T_111 = bits(canSkipShift_hi_19, 3, 3) @[build/NutShell.fir.opt.mlir 13630:34]
        node _canSkipShift_T_112 = bits(canSkipShift_hi_19, 2, 2) @[build/NutShell.fir.opt.mlir 13632:34]
        node _canSkipShift_T_113 = bits(canSkipShift_hi_19, 1, 1) @[build/NutShell.fir.opt.mlir 13634:34]
        node _canSkipShift_T_114 = mux(_canSkipShift_T_112, UInt<2>(2), _canSkipShift_T_113) @[build/NutShell.fir.opt.mlir 13636:34]
        node _canSkipShift_T_115 = mux(_canSkipShift_T_111, UInt<2>(3), _canSkipShift_T_114) @[build/NutShell.fir.opt.mlir 13638:34]
        node _canSkipShift_T_116 = bits(canSkipShift_lo_19, 3, 3) @[build/NutShell.fir.opt.mlir 13640:34]
        node _canSkipShift_T_117 = bits(canSkipShift_lo_19, 2, 2) @[build/NutShell.fir.opt.mlir 13642:34]
        node _canSkipShift_T_118 = bits(canSkipShift_lo_19, 1, 1) @[build/NutShell.fir.opt.mlir 13644:34]
        node _canSkipShift_T_119 = mux(_canSkipShift_T_117, UInt<2>(2), _canSkipShift_T_118) @[build/NutShell.fir.opt.mlir 13646:34]
        node _canSkipShift_T_120 = mux(_canSkipShift_T_116, UInt<2>(3), _canSkipShift_T_119) @[build/NutShell.fir.opt.mlir 13648:34]
        node _canSkipShift_T_121 = mux(canSkipShift_useHi_19, _canSkipShift_T_115, _canSkipShift_T_120) @[build/NutShell.fir.opt.mlir 13650:34]
        node _canSkipShift_T_122 = cat(canSkipShift_useHi_19, _canSkipShift_T_121) @[build/NutShell.fir.opt.mlir 13652:34]
        node canSkipShift_hi_20 = bits(canSkipShift_lo_18, 7, 4) @[build/NutShell.fir.opt.mlir 13654:33]
        node canSkipShift_lo_20 = bits(canSkipShift_lo_18, 3, 0) @[build/NutShell.fir.opt.mlir 13656:33]
        node canSkipShift_useHi_20 = orr(canSkipShift_hi_20) @[build/NutShell.fir.opt.mlir 13658:36]
        node _canSkipShift_T_123 = bits(canSkipShift_hi_20, 3, 3) @[build/NutShell.fir.opt.mlir 13660:34]
        node _canSkipShift_T_124 = bits(canSkipShift_hi_20, 2, 2) @[build/NutShell.fir.opt.mlir 13662:34]
        node _canSkipShift_T_125 = bits(canSkipShift_hi_20, 1, 1) @[build/NutShell.fir.opt.mlir 13664:34]
        node _canSkipShift_T_126 = mux(_canSkipShift_T_124, UInt<2>(2), _canSkipShift_T_125) @[build/NutShell.fir.opt.mlir 13666:34]
        node _canSkipShift_T_127 = mux(_canSkipShift_T_123, UInt<2>(3), _canSkipShift_T_126) @[build/NutShell.fir.opt.mlir 13668:34]
        node _canSkipShift_T_128 = bits(canSkipShift_lo_20, 3, 3) @[build/NutShell.fir.opt.mlir 13670:34]
        node _canSkipShift_T_129 = bits(canSkipShift_lo_20, 2, 2) @[build/NutShell.fir.opt.mlir 13672:34]
        node _canSkipShift_T_130 = bits(canSkipShift_lo_20, 1, 1) @[build/NutShell.fir.opt.mlir 13674:34]
        node _canSkipShift_T_131 = mux(_canSkipShift_T_129, UInt<2>(2), _canSkipShift_T_130) @[build/NutShell.fir.opt.mlir 13676:34]
        node _canSkipShift_T_132 = mux(_canSkipShift_T_128, UInt<2>(3), _canSkipShift_T_131) @[build/NutShell.fir.opt.mlir 13678:34]
        node _canSkipShift_T_133 = mux(canSkipShift_useHi_20, _canSkipShift_T_127, _canSkipShift_T_132) @[build/NutShell.fir.opt.mlir 13680:34]
        node _canSkipShift_T_134 = cat(canSkipShift_useHi_20, _canSkipShift_T_133) @[build/NutShell.fir.opt.mlir 13682:34]
        node _canSkipShift_T_135 = mux(canSkipShift_useHi_18, _canSkipShift_T_122, _canSkipShift_T_134) @[build/NutShell.fir.opt.mlir 13684:34]
        node _canSkipShift_T_136 = cat(canSkipShift_useHi_18, _canSkipShift_T_135) @[build/NutShell.fir.opt.mlir 13686:34]
        node canSkipShift_hi_21 = bits(canSkipShift_lo_17, 15, 8) @[build/NutShell.fir.opt.mlir 13688:33]
        node canSkipShift_lo_21 = bits(canSkipShift_lo_17, 7, 0) @[build/NutShell.fir.opt.mlir 13690:33]
        node canSkipShift_useHi_21 = orr(canSkipShift_hi_21) @[build/NutShell.fir.opt.mlir 13692:36]
        node canSkipShift_hi_22 = bits(canSkipShift_hi_21, 7, 4) @[build/NutShell.fir.opt.mlir 13694:33]
        node canSkipShift_lo_22 = bits(canSkipShift_hi_21, 3, 0) @[build/NutShell.fir.opt.mlir 13696:33]
        node canSkipShift_useHi_22 = orr(canSkipShift_hi_22) @[build/NutShell.fir.opt.mlir 13698:36]
        node _canSkipShift_T_137 = bits(canSkipShift_hi_22, 3, 3) @[build/NutShell.fir.opt.mlir 13700:34]
        node _canSkipShift_T_138 = bits(canSkipShift_hi_22, 2, 2) @[build/NutShell.fir.opt.mlir 13702:34]
        node _canSkipShift_T_139 = bits(canSkipShift_hi_22, 1, 1) @[build/NutShell.fir.opt.mlir 13704:34]
        node _canSkipShift_T_140 = mux(_canSkipShift_T_138, UInt<2>(2), _canSkipShift_T_139) @[build/NutShell.fir.opt.mlir 13706:34]
        node _canSkipShift_T_141 = mux(_canSkipShift_T_137, UInt<2>(3), _canSkipShift_T_140) @[build/NutShell.fir.opt.mlir 13708:34]
        node _canSkipShift_T_142 = bits(canSkipShift_lo_22, 3, 3) @[build/NutShell.fir.opt.mlir 13710:34]
        node _canSkipShift_T_143 = bits(canSkipShift_lo_22, 2, 2) @[build/NutShell.fir.opt.mlir 13712:34]
        node _canSkipShift_T_144 = bits(canSkipShift_lo_22, 1, 1) @[build/NutShell.fir.opt.mlir 13714:34]
        node _canSkipShift_T_145 = mux(_canSkipShift_T_143, UInt<2>(2), _canSkipShift_T_144) @[build/NutShell.fir.opt.mlir 13716:34]
        node _canSkipShift_T_146 = mux(_canSkipShift_T_142, UInt<2>(3), _canSkipShift_T_145) @[build/NutShell.fir.opt.mlir 13718:34]
        node _canSkipShift_T_147 = mux(canSkipShift_useHi_22, _canSkipShift_T_141, _canSkipShift_T_146) @[build/NutShell.fir.opt.mlir 13720:34]
        node _canSkipShift_T_148 = cat(canSkipShift_useHi_22, _canSkipShift_T_147) @[build/NutShell.fir.opt.mlir 13722:34]
        node canSkipShift_hi_23 = bits(canSkipShift_lo_21, 7, 4) @[build/NutShell.fir.opt.mlir 13724:33]
        node canSkipShift_lo_23 = bits(canSkipShift_lo_21, 3, 0) @[build/NutShell.fir.opt.mlir 13726:33]
        node canSkipShift_useHi_23 = orr(canSkipShift_hi_23) @[build/NutShell.fir.opt.mlir 13728:36]
        node _canSkipShift_T_149 = bits(canSkipShift_hi_23, 3, 3) @[build/NutShell.fir.opt.mlir 13730:34]
        node _canSkipShift_T_150 = bits(canSkipShift_hi_23, 2, 2) @[build/NutShell.fir.opt.mlir 13732:34]
        node _canSkipShift_T_151 = bits(canSkipShift_hi_23, 1, 1) @[build/NutShell.fir.opt.mlir 13734:34]
        node _canSkipShift_T_152 = mux(_canSkipShift_T_150, UInt<2>(2), _canSkipShift_T_151) @[build/NutShell.fir.opt.mlir 13736:34]
        node _canSkipShift_T_153 = mux(_canSkipShift_T_149, UInt<2>(3), _canSkipShift_T_152) @[build/NutShell.fir.opt.mlir 13738:34]
        node _canSkipShift_T_154 = bits(canSkipShift_lo_23, 3, 3) @[build/NutShell.fir.opt.mlir 13740:34]
        node _canSkipShift_T_155 = bits(canSkipShift_lo_23, 2, 2) @[build/NutShell.fir.opt.mlir 13742:34]
        node _canSkipShift_T_156 = bits(canSkipShift_lo_23, 1, 1) @[build/NutShell.fir.opt.mlir 13744:34]
        node _canSkipShift_T_157 = mux(_canSkipShift_T_155, UInt<2>(2), _canSkipShift_T_156) @[build/NutShell.fir.opt.mlir 13746:34]
        node _canSkipShift_T_158 = mux(_canSkipShift_T_154, UInt<2>(3), _canSkipShift_T_157) @[build/NutShell.fir.opt.mlir 13748:34]
        node _canSkipShift_T_159 = mux(canSkipShift_useHi_23, _canSkipShift_T_153, _canSkipShift_T_158) @[build/NutShell.fir.opt.mlir 13750:34]
        node _canSkipShift_T_160 = cat(canSkipShift_useHi_23, _canSkipShift_T_159) @[build/NutShell.fir.opt.mlir 13752:34]
        node _canSkipShift_T_161 = mux(canSkipShift_useHi_21, _canSkipShift_T_148, _canSkipShift_T_160) @[build/NutShell.fir.opt.mlir 13754:34]
        node _canSkipShift_T_162 = cat(canSkipShift_useHi_21, _canSkipShift_T_161) @[build/NutShell.fir.opt.mlir 13756:34]
        node _canSkipShift_T_163 = mux(canSkipShift_useHi_17, _canSkipShift_T_136, _canSkipShift_T_162) @[build/NutShell.fir.opt.mlir 13758:34]
        node _canSkipShift_T_164 = cat(canSkipShift_useHi_17, _canSkipShift_T_163) @[build/NutShell.fir.opt.mlir 13760:34]
        node canSkipShift_hi_24 = bits(canSkipShift_lo_16, 31, 16) @[build/NutShell.fir.opt.mlir 13762:33]
        node canSkipShift_lo_24 = bits(canSkipShift_lo_16, 15, 0) @[build/NutShell.fir.opt.mlir 13764:33]
        node canSkipShift_useHi_24 = orr(canSkipShift_hi_24) @[build/NutShell.fir.opt.mlir 13766:36]
        node canSkipShift_hi_25 = bits(canSkipShift_hi_24, 15, 8) @[build/NutShell.fir.opt.mlir 13768:33]
        node canSkipShift_lo_25 = bits(canSkipShift_hi_24, 7, 0) @[build/NutShell.fir.opt.mlir 13770:33]
        node canSkipShift_useHi_25 = orr(canSkipShift_hi_25) @[build/NutShell.fir.opt.mlir 13772:36]
        node canSkipShift_hi_26 = bits(canSkipShift_hi_25, 7, 4) @[build/NutShell.fir.opt.mlir 13774:33]
        node canSkipShift_lo_26 = bits(canSkipShift_hi_25, 3, 0) @[build/NutShell.fir.opt.mlir 13776:33]
        node canSkipShift_useHi_26 = orr(canSkipShift_hi_26) @[build/NutShell.fir.opt.mlir 13778:36]
        node _canSkipShift_T_165 = bits(canSkipShift_hi_26, 3, 3) @[build/NutShell.fir.opt.mlir 13780:34]
        node _canSkipShift_T_166 = bits(canSkipShift_hi_26, 2, 2) @[build/NutShell.fir.opt.mlir 13782:34]
        node _canSkipShift_T_167 = bits(canSkipShift_hi_26, 1, 1) @[build/NutShell.fir.opt.mlir 13784:34]
        node _canSkipShift_T_168 = mux(_canSkipShift_T_166, UInt<2>(2), _canSkipShift_T_167) @[build/NutShell.fir.opt.mlir 13786:34]
        node _canSkipShift_T_169 = mux(_canSkipShift_T_165, UInt<2>(3), _canSkipShift_T_168) @[build/NutShell.fir.opt.mlir 13788:34]
        node _canSkipShift_T_170 = bits(canSkipShift_lo_26, 3, 3) @[build/NutShell.fir.opt.mlir 13790:34]
        node _canSkipShift_T_171 = bits(canSkipShift_lo_26, 2, 2) @[build/NutShell.fir.opt.mlir 13792:34]
        node _canSkipShift_T_172 = bits(canSkipShift_lo_26, 1, 1) @[build/NutShell.fir.opt.mlir 13794:34]
        node _canSkipShift_T_173 = mux(_canSkipShift_T_171, UInt<2>(2), _canSkipShift_T_172) @[build/NutShell.fir.opt.mlir 13796:34]
        node _canSkipShift_T_174 = mux(_canSkipShift_T_170, UInt<2>(3), _canSkipShift_T_173) @[build/NutShell.fir.opt.mlir 13798:34]
        node _canSkipShift_T_175 = mux(canSkipShift_useHi_26, _canSkipShift_T_169, _canSkipShift_T_174) @[build/NutShell.fir.opt.mlir 13800:34]
        node _canSkipShift_T_176 = cat(canSkipShift_useHi_26, _canSkipShift_T_175) @[build/NutShell.fir.opt.mlir 13802:34]
        node canSkipShift_hi_27 = bits(canSkipShift_lo_25, 7, 4) @[build/NutShell.fir.opt.mlir 13804:33]
        node canSkipShift_lo_27 = bits(canSkipShift_lo_25, 3, 0) @[build/NutShell.fir.opt.mlir 13806:33]
        node canSkipShift_useHi_27 = orr(canSkipShift_hi_27) @[build/NutShell.fir.opt.mlir 13808:36]
        node _canSkipShift_T_177 = bits(canSkipShift_hi_27, 3, 3) @[build/NutShell.fir.opt.mlir 13810:34]
        node _canSkipShift_T_178 = bits(canSkipShift_hi_27, 2, 2) @[build/NutShell.fir.opt.mlir 13812:34]
        node _canSkipShift_T_179 = bits(canSkipShift_hi_27, 1, 1) @[build/NutShell.fir.opt.mlir 13814:34]
        node _canSkipShift_T_180 = mux(_canSkipShift_T_178, UInt<2>(2), _canSkipShift_T_179) @[build/NutShell.fir.opt.mlir 13816:34]
        node _canSkipShift_T_181 = mux(_canSkipShift_T_177, UInt<2>(3), _canSkipShift_T_180) @[build/NutShell.fir.opt.mlir 13818:34]
        node _canSkipShift_T_182 = bits(canSkipShift_lo_27, 3, 3) @[build/NutShell.fir.opt.mlir 13820:34]
        node _canSkipShift_T_183 = bits(canSkipShift_lo_27, 2, 2) @[build/NutShell.fir.opt.mlir 13822:34]
        node _canSkipShift_T_184 = bits(canSkipShift_lo_27, 1, 1) @[build/NutShell.fir.opt.mlir 13824:34]
        node _canSkipShift_T_185 = mux(_canSkipShift_T_183, UInt<2>(2), _canSkipShift_T_184) @[build/NutShell.fir.opt.mlir 13826:34]
        node _canSkipShift_T_186 = mux(_canSkipShift_T_182, UInt<2>(3), _canSkipShift_T_185) @[build/NutShell.fir.opt.mlir 13828:34]
        node _canSkipShift_T_187 = mux(canSkipShift_useHi_27, _canSkipShift_T_181, _canSkipShift_T_186) @[build/NutShell.fir.opt.mlir 13830:34]
        node _canSkipShift_T_188 = cat(canSkipShift_useHi_27, _canSkipShift_T_187) @[build/NutShell.fir.opt.mlir 13832:34]
        node _canSkipShift_T_189 = mux(canSkipShift_useHi_25, _canSkipShift_T_176, _canSkipShift_T_188) @[build/NutShell.fir.opt.mlir 13834:34]
        node _canSkipShift_T_190 = cat(canSkipShift_useHi_25, _canSkipShift_T_189) @[build/NutShell.fir.opt.mlir 13836:34]
        node canSkipShift_hi_28 = bits(canSkipShift_lo_24, 15, 8) @[build/NutShell.fir.opt.mlir 13838:33]
        node canSkipShift_lo_28 = bits(canSkipShift_lo_24, 7, 0) @[build/NutShell.fir.opt.mlir 13840:33]
        node canSkipShift_useHi_28 = orr(canSkipShift_hi_28) @[build/NutShell.fir.opt.mlir 13842:36]
        node canSkipShift_hi_29 = bits(canSkipShift_hi_28, 7, 4) @[build/NutShell.fir.opt.mlir 13844:33]
        node canSkipShift_lo_29 = bits(canSkipShift_hi_28, 3, 0) @[build/NutShell.fir.opt.mlir 13846:33]
        node canSkipShift_useHi_29 = orr(canSkipShift_hi_29) @[build/NutShell.fir.opt.mlir 13848:36]
        node _canSkipShift_T_191 = bits(canSkipShift_hi_29, 3, 3) @[build/NutShell.fir.opt.mlir 13850:34]
        node _canSkipShift_T_192 = bits(canSkipShift_hi_29, 2, 2) @[build/NutShell.fir.opt.mlir 13852:34]
        node _canSkipShift_T_193 = bits(canSkipShift_hi_29, 1, 1) @[build/NutShell.fir.opt.mlir 13854:34]
        node _canSkipShift_T_194 = mux(_canSkipShift_T_192, UInt<2>(2), _canSkipShift_T_193) @[build/NutShell.fir.opt.mlir 13856:34]
        node _canSkipShift_T_195 = mux(_canSkipShift_T_191, UInt<2>(3), _canSkipShift_T_194) @[build/NutShell.fir.opt.mlir 13858:34]
        node _canSkipShift_T_196 = bits(canSkipShift_lo_29, 3, 3) @[build/NutShell.fir.opt.mlir 13860:34]
        node _canSkipShift_T_197 = bits(canSkipShift_lo_29, 2, 2) @[build/NutShell.fir.opt.mlir 13862:34]
        node _canSkipShift_T_198 = bits(canSkipShift_lo_29, 1, 1) @[build/NutShell.fir.opt.mlir 13864:34]
        node _canSkipShift_T_199 = mux(_canSkipShift_T_197, UInt<2>(2), _canSkipShift_T_198) @[build/NutShell.fir.opt.mlir 13866:34]
        node _canSkipShift_T_200 = mux(_canSkipShift_T_196, UInt<2>(3), _canSkipShift_T_199) @[build/NutShell.fir.opt.mlir 13868:34]
        node _canSkipShift_T_201 = mux(canSkipShift_useHi_29, _canSkipShift_T_195, _canSkipShift_T_200) @[build/NutShell.fir.opt.mlir 13870:34]
        node _canSkipShift_T_202 = cat(canSkipShift_useHi_29, _canSkipShift_T_201) @[build/NutShell.fir.opt.mlir 13872:34]
        node canSkipShift_hi_30 = bits(canSkipShift_lo_28, 7, 4) @[build/NutShell.fir.opt.mlir 13874:33]
        node canSkipShift_lo_30 = bits(canSkipShift_lo_28, 3, 0) @[build/NutShell.fir.opt.mlir 13876:33]
        node canSkipShift_useHi_30 = orr(canSkipShift_hi_30) @[build/NutShell.fir.opt.mlir 13878:36]
        node _canSkipShift_T_203 = bits(canSkipShift_hi_30, 3, 3) @[build/NutShell.fir.opt.mlir 13880:34]
        node _canSkipShift_T_204 = bits(canSkipShift_hi_30, 2, 2) @[build/NutShell.fir.opt.mlir 13882:34]
        node _canSkipShift_T_205 = bits(canSkipShift_hi_30, 1, 1) @[build/NutShell.fir.opt.mlir 13884:34]
        node _canSkipShift_T_206 = mux(_canSkipShift_T_204, UInt<2>(2), _canSkipShift_T_205) @[build/NutShell.fir.opt.mlir 13886:34]
        node _canSkipShift_T_207 = mux(_canSkipShift_T_203, UInt<2>(3), _canSkipShift_T_206) @[build/NutShell.fir.opt.mlir 13888:34]
        node _canSkipShift_T_208 = bits(canSkipShift_lo_30, 3, 3) @[build/NutShell.fir.opt.mlir 13890:34]
        node _canSkipShift_T_209 = bits(canSkipShift_lo_30, 2, 2) @[build/NutShell.fir.opt.mlir 13892:34]
        node _canSkipShift_T_210 = bits(canSkipShift_lo_30, 1, 1) @[build/NutShell.fir.opt.mlir 13894:34]
        node _canSkipShift_T_211 = mux(_canSkipShift_T_209, UInt<2>(2), _canSkipShift_T_210) @[build/NutShell.fir.opt.mlir 13896:34]
        node _canSkipShift_T_212 = mux(_canSkipShift_T_208, UInt<2>(3), _canSkipShift_T_211) @[build/NutShell.fir.opt.mlir 13898:34]
        node _canSkipShift_T_213 = mux(canSkipShift_useHi_30, _canSkipShift_T_207, _canSkipShift_T_212) @[build/NutShell.fir.opt.mlir 13900:34]
        node _canSkipShift_T_214 = cat(canSkipShift_useHi_30, _canSkipShift_T_213) @[build/NutShell.fir.opt.mlir 13902:34]
        node _canSkipShift_T_215 = mux(canSkipShift_useHi_28, _canSkipShift_T_202, _canSkipShift_T_214) @[build/NutShell.fir.opt.mlir 13904:34]
        node _canSkipShift_T_216 = cat(canSkipShift_useHi_28, _canSkipShift_T_215) @[build/NutShell.fir.opt.mlir 13906:34]
        node _canSkipShift_T_217 = mux(canSkipShift_useHi_24, _canSkipShift_T_190, _canSkipShift_T_216) @[build/NutShell.fir.opt.mlir 13908:34]
        node _canSkipShift_T_218 = cat(canSkipShift_useHi_24, _canSkipShift_T_217) @[build/NutShell.fir.opt.mlir 13910:34]
        node _canSkipShift_T_219 = mux(canSkipShift_useHi_16, _canSkipShift_T_164, _canSkipShift_T_218) @[build/NutShell.fir.opt.mlir 13912:34]
        node _canSkipShift_T_220 = cat(canSkipShift_useHi_16, _canSkipShift_T_219) @[build/NutShell.fir.opt.mlir 13914:34]
        node _canSkipShift_T_221 = mux(canSkipShift_useHi_15, UInt<1>(0), _canSkipShift_T_220) @[build/NutShell.fir.opt.mlir 13916:34]
        node _canSkipShift_T_222 = cat(canSkipShift_useHi_15, _canSkipShift_T_221) @[build/NutShell.fir.opt.mlir 13918:34]
        node _canSkipShift_T_223 = sub(_canSkipShift_T_110, _canSkipShift_T_222) @[build/NutShell.fir.opt.mlir 13920:34]
        node canSkipShift = tail(_canSkipShift_T_223, 1) @[build/NutShell.fir.opt.mlir 13922:27]
        node _value_T = geq(canSkipShift, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 13924:23]
        node _value_T_1 = mux(_value_T, UInt<6>(63), canSkipShift) @[build/NutShell.fir.opt.mlir 13926:25]
        node _value_T_2 = mux(divBy0, UInt<1>(0), _value_T_1) @[build/NutShell.fir.opt.mlir 13928:25]
        connect cnt_value, tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 13930:11]
        connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 13932:11]
      else :
        node _T_5 = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 13935:19]
        when _T_5 : @[build/NutShell.fir.opt.mlir 13936:11]
          node _shiftReg_T = dshl(aValx2Reg, cnt_value) @[build/NutShell.fir.opt.mlir 13938:28]
          connect shiftReg, pad(_shiftReg_T, 129) @[build/NutShell.fir.opt.mlir 13940:13]
          connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 13942:13]
        else :
          node _T_6 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 13945:21]
          when _T_6 : @[build/NutShell.fir.opt.mlir 13946:13]
            node enough = geq(hi, bReg) @[build/NutShell.fir.opt.mlir 13948:25]
            node _shiftReg_T_1 = sub(hi, bReg) @[build/NutShell.fir.opt.mlir 13950:32]
            node _shiftReg_T_2 = tail(_shiftReg_T_1, 1) @[build/NutShell.fir.opt.mlir 13952:32]
            node _shiftReg_T_3 = mux(enough, _shiftReg_T_2, hi) @[build/NutShell.fir.opt.mlir 13954:32]
            node _shiftReg_T_4 = bits(_shiftReg_T_3, 63, 0) @[build/NutShell.fir.opt.mlir 13956:32]
            node shiftReg_hi = cat(_shiftReg_T_4, lo) @[build/NutShell.fir.opt.mlir 13958:30]
            node _shiftReg_T_5 = cat(shiftReg_hi, enough) @[build/NutShell.fir.opt.mlir 13960:32]
            connect shiftReg, _shiftReg_T_5 @[build/NutShell.fir.opt.mlir 13961:15]
            node wrap = eq(cnt_value, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 13963:23]
            node _value_T_3 = add(cnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 13965:29]
            node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 13967:29]
            connect cnt_value, _value_T_4 @[build/NutShell.fir.opt.mlir 13968:15]
            node _T_7 = eq(cnt_value, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 13970:23]
            when _T_7 : @[build/NutShell.fir.opt.mlir 13971:15]
              connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 13973:17]
          else :
            node _T_8 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 13977:23]
            when _T_8 : @[build/NutShell.fir.opt.mlir 13978:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13980:17]
    node r = bits(hi, 64, 1) @[build/NutShell.fir.opt.mlir 13987:12]
    node _resQ_T = sub(UInt<1>(0), lo) @[build/NutShell.fir.opt.mlir 13989:18]
    node _resQ_T_1 = tail(_resQ_T, 1) @[build/NutShell.fir.opt.mlir 13991:20]
    node resQ = mux(qSignReg, _resQ_T_1, lo) @[build/NutShell.fir.opt.mlir 13993:15]
    node _resR_T = sub(UInt<1>(0), r) @[build/NutShell.fir.opt.mlir 13995:18]
    node _resR_T_1 = tail(_resR_T, 1) @[build/NutShell.fir.opt.mlir 13997:20]
    node resR = mux(aSignReg, _resR_T_1, r) @[build/NutShell.fir.opt.mlir 13999:15]
    node _io_out_bits_T = cat(resR, resQ) @[build/NutShell.fir.opt.mlir 14001:25]
    connect io.out.bits, _io_out_bits_T @[build/NutShell.fir.opt.mlir 14002:7]
    node _io_out_valid_T = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 14004:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 14005:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 14007:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 14008:7]

  extmodule LogPerfHelper_15 : @[build/NutShell.fir.opt.mlir 14010:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 14010:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 14010:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 14010:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 14010:141]
    defname = LogPerfHelper

  module MDU : @[build/NutShell.fir.opt.mlir 14011:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14011:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14011:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> } } @[build/NutShell.fir.opt.mlir 14011:88]

    node isDiv = bits(io.in.bits.func, 2, 2) @[build/NutShell.fir.opt.mlir 14024:16]
    node _isDivSign_T = bits(io.in.bits.func, 2, 2) @[build/NutShell.fir.opt.mlir 14026:23]
    node _isDivSign_T_1 = bits(io.in.bits.func, 0, 0) @[build/NutShell.fir.opt.mlir 14028:25]
    node _isDivSign_T_2 = eq(_isDivSign_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14031:25]
    node isDivSign = and(_isDivSign_T, _isDivSign_T_2) @[build/NutShell.fir.opt.mlir 14033:20]
    node isW = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 14035:14]
    inst mul of Multiplier @[build/NutShell.fir.opt.mlir 14036:41]
    connect mul.clock, clock @[build/NutShell.fir.opt.mlir 14048:7]
    connect mul.reset, reset @[build/NutShell.fir.opt.mlir 14049:7]
    inst div of Divider @[build/NutShell.fir.opt.mlir 14050:41]
    connect div.clock, clock @[build/NutShell.fir.opt.mlir 14062:7]
    connect div.reset, reset @[build/NutShell.fir.opt.mlir 14063:7]
    connect mul.io.sign, isDivSign @[build/NutShell.fir.opt.mlir 14064:7]
    connect mul.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 14065:7]
    connect div.io.sign, isDivSign @[build/NutShell.fir.opt.mlir 14066:7]
    connect div.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 14067:7]
    node _mul_io_in_bits_0_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14069:30]
    node _mul_io_in_bits_0_T_1 = cat(UInt<1>(0), io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14071:32]
    node mul_io_in_bits_0_signBit = bits(io.in.bits.src1, 63, 63) @[build/NutShell.fir.opt.mlir 14073:35]
    node _mul_io_in_bits_0_T_2 = cat(mul_io_in_bits_0_signBit, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14075:32]
    node mul_io_in_bits_0_signBit_1 = bits(io.in.bits.src1, 63, 63) @[build/NutShell.fir.opt.mlir 14077:37]
    node _mul_io_in_bits_0_T_3 = cat(mul_io_in_bits_0_signBit_1, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14079:32]
    node _mul_io_in_bits_0_T_4 = cat(UInt<1>(0), io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14081:32]
    node _mul_io_in_bits_0_T_5 = eq(UInt<2>(0), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14084:32]
    node _mul_io_in_bits_0_T_6 = eq(UInt<2>(1), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14087:32]
    node _mul_io_in_bits_0_T_7 = eq(UInt<2>(2), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14090:32]
    node _mul_io_in_bits_0_T_8 = eq(UInt<2>(3), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14093:32]
    node _mul_io_in_bits_0_T_9 = mux(_mul_io_in_bits_0_T_5, _mul_io_in_bits_0_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14095:32]
    node _mul_io_in_bits_0_T_10 = mux(_mul_io_in_bits_0_T_6, _mul_io_in_bits_0_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14097:33]
    node _mul_io_in_bits_0_T_11 = mux(_mul_io_in_bits_0_T_7, _mul_io_in_bits_0_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14099:33]
    node _mul_io_in_bits_0_T_12 = mux(_mul_io_in_bits_0_T_8, _mul_io_in_bits_0_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14101:33]
    node _mul_io_in_bits_0_T_13 = or(_mul_io_in_bits_0_T_9, _mul_io_in_bits_0_T_10) @[build/NutShell.fir.opt.mlir 14103:33]
    node _mul_io_in_bits_0_T_14 = or(_mul_io_in_bits_0_T_13, _mul_io_in_bits_0_T_11) @[build/NutShell.fir.opt.mlir 14105:33]
    node _mul_io_in_bits_0_T_15 = or(_mul_io_in_bits_0_T_14, _mul_io_in_bits_0_T_12) @[build/NutShell.fir.opt.mlir 14107:33]
    wire _mul_io_in_bits_0_WIRE : UInt<65> @[build/NutShell.fir.opt.mlir 14108:33]
    connect _mul_io_in_bits_0_WIRE, _mul_io_in_bits_0_T_15 @[build/NutShell.fir.opt.mlir 14109:7]
    connect mul.io.in.bits[0], _mul_io_in_bits_0_WIRE @[build/NutShell.fir.opt.mlir 14110:7]
    node _mul_io_in_bits_1_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14112:30]
    node _mul_io_in_bits_1_T_1 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14114:32]
    node mul_io_in_bits_1_signBit = bits(io.in.bits.src2, 63, 63) @[build/NutShell.fir.opt.mlir 14116:35]
    node _mul_io_in_bits_1_T_2 = cat(mul_io_in_bits_1_signBit, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14118:32]
    node _mul_io_in_bits_1_T_3 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14120:32]
    node _mul_io_in_bits_1_T_4 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14122:32]
    node _mul_io_in_bits_1_T_5 = eq(UInt<2>(0), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14124:32]
    node _mul_io_in_bits_1_T_6 = eq(UInt<2>(1), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14126:32]
    node _mul_io_in_bits_1_T_7 = eq(UInt<2>(2), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14128:32]
    node _mul_io_in_bits_1_T_8 = eq(UInt<2>(3), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14130:32]
    node _mul_io_in_bits_1_T_9 = mux(_mul_io_in_bits_1_T_5, _mul_io_in_bits_1_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14132:32]
    node _mul_io_in_bits_1_T_10 = mux(_mul_io_in_bits_1_T_6, _mul_io_in_bits_1_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14134:33]
    node _mul_io_in_bits_1_T_11 = mux(_mul_io_in_bits_1_T_7, _mul_io_in_bits_1_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14136:33]
    node _mul_io_in_bits_1_T_12 = mux(_mul_io_in_bits_1_T_8, _mul_io_in_bits_1_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14138:33]
    node _mul_io_in_bits_1_T_13 = or(_mul_io_in_bits_1_T_9, _mul_io_in_bits_1_T_10) @[build/NutShell.fir.opt.mlir 14140:33]
    node _mul_io_in_bits_1_T_14 = or(_mul_io_in_bits_1_T_13, _mul_io_in_bits_1_T_11) @[build/NutShell.fir.opt.mlir 14142:33]
    node _mul_io_in_bits_1_T_15 = or(_mul_io_in_bits_1_T_14, _mul_io_in_bits_1_T_12) @[build/NutShell.fir.opt.mlir 14144:33]
    wire _mul_io_in_bits_1_WIRE : UInt<65> @[build/NutShell.fir.opt.mlir 14145:33]
    connect _mul_io_in_bits_1_WIRE, _mul_io_in_bits_1_T_15 @[build/NutShell.fir.opt.mlir 14146:7]
    connect mul.io.in.bits[1], _mul_io_in_bits_1_WIRE @[build/NutShell.fir.opt.mlir 14147:7]
    node _div_io_in_bits_0_T = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 14149:30]
    node div_io_in_bits_0_signBit = bits(_div_io_in_bits_0_T, 31, 31) @[build/NutShell.fir.opt.mlir 14151:35]
    node _div_io_in_bits_0_T_1 = mux(div_io_in_bits_0_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14155:32]
    node _div_io_in_bits_0_T_2 = cat(_div_io_in_bits_0_T_1, _div_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14157:32]
    node _div_io_in_bits_0_T_3 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 14159:32]
    node _div_io_in_bits_0_T_4 = cat(UInt<32>(0), _div_io_in_bits_0_T_3) @[build/NutShell.fir.opt.mlir 14161:32]
    node _div_io_in_bits_0_T_5 = mux(isDivSign, _div_io_in_bits_0_T_2, _div_io_in_bits_0_T_4) @[build/NutShell.fir.opt.mlir 14163:32]
    node _div_io_in_bits_0_T_6 = mux(isW, _div_io_in_bits_0_T_5, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14165:32]
    connect div.io.in.bits[0], _div_io_in_bits_0_T_6 @[build/NutShell.fir.opt.mlir 14166:7]
    node _div_io_in_bits_1_T = bits(io.in.bits.src2, 31, 0) @[build/NutShell.fir.opt.mlir 14168:30]
    node div_io_in_bits_1_signBit = bits(_div_io_in_bits_1_T, 31, 31) @[build/NutShell.fir.opt.mlir 14170:35]
    node _div_io_in_bits_1_T_1 = mux(div_io_in_bits_1_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14172:32]
    node _div_io_in_bits_1_T_2 = cat(_div_io_in_bits_1_T_1, _div_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14174:32]
    node _div_io_in_bits_1_T_3 = bits(io.in.bits.src2, 31, 0) @[build/NutShell.fir.opt.mlir 14176:32]
    node _div_io_in_bits_1_T_4 = cat(UInt<32>(0), _div_io_in_bits_1_T_3) @[build/NutShell.fir.opt.mlir 14178:32]
    node _div_io_in_bits_1_T_5 = mux(isDivSign, _div_io_in_bits_1_T_2, _div_io_in_bits_1_T_4) @[build/NutShell.fir.opt.mlir 14180:32]
    node _div_io_in_bits_1_T_6 = mux(isW, _div_io_in_bits_1_T_5, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14182:32]
    connect div.io.in.bits[1], _div_io_in_bits_1_T_6 @[build/NutShell.fir.opt.mlir 14183:7]
    node _mul_io_in_valid_T = eq(isDiv, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14185:29]
    node _mul_io_in_valid_T_1 = and(io.in.valid, _mul_io_in_valid_T) @[build/NutShell.fir.opt.mlir 14187:31]
    connect mul.io.in.valid, _mul_io_in_valid_T_1 @[build/NutShell.fir.opt.mlir 14188:7]
    node _div_io_in_valid_T = and(io.in.valid, isDiv) @[build/NutShell.fir.opt.mlir 14190:29]
    connect div.io.in.valid, _div_io_in_valid_T @[build/NutShell.fir.opt.mlir 14191:7]
    node _mulRes_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14193:20]
    node _mulRes_T_1 = eq(_mulRes_T, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 14195:22]
    node _mulRes_T_2 = bits(mul.io.out.bits, 63, 0) @[build/NutShell.fir.opt.mlir 14197:22]
    node _mulRes_T_3 = bits(mul.io.out.bits, 127, 64) @[build/NutShell.fir.opt.mlir 14199:22]
    node mulRes = mux(_mulRes_T_1, _mulRes_T_2, _mulRes_T_3) @[build/NutShell.fir.opt.mlir 14201:17]
    node _divRes_T = bits(io.in.bits.func, 1, 1) @[build/NutShell.fir.opt.mlir 14203:20]
    node _divRes_T_1 = bits(div.io.out.bits, 127, 64) @[build/NutShell.fir.opt.mlir 14205:22]
    node _divRes_T_2 = bits(div.io.out.bits, 63, 0) @[build/NutShell.fir.opt.mlir 14207:22]
    node divRes = mux(_divRes_T, _divRes_T_1, _divRes_T_2) @[build/NutShell.fir.opt.mlir 14209:17]
    node res = mux(isDiv, divRes, mulRes) @[build/NutShell.fir.opt.mlir 14211:14]
    node _io_out_bits_T = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 14213:25]
    node io_out_bits_signBit = bits(_io_out_bits_T, 31, 31) @[build/NutShell.fir.opt.mlir 14215:30]
    node _io_out_bits_T_1 = mux(io_out_bits_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14217:27]
    node _io_out_bits_T_2 = cat(_io_out_bits_T_1, _io_out_bits_T) @[build/NutShell.fir.opt.mlir 14219:27]
    node _io_out_bits_T_3 = mux(isW, _io_out_bits_T_2, res) @[build/NutShell.fir.opt.mlir 14221:27]
    connect io.out.bits, _io_out_bits_T_3 @[build/NutShell.fir.opt.mlir 14222:7]
    node _isDivReg_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 14224:22]
    reg isDivReg_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 14225:23]
    connect isDivReg_REG, isDiv @[build/NutShell.fir.opt.mlir 14226:7]
    node isDivReg = mux(_isDivReg_T, isDiv, isDivReg_REG) @[build/NutShell.fir.opt.mlir 14228:19]
    node _io_in_ready_T = mux(isDiv, div.io.in.ready, mul.io.in.ready) @[build/NutShell.fir.opt.mlir 14230:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 14231:7]
    node _io_out_valid_T = mux(isDivReg, div.io.out.valid, mul.io.out.valid) @[build/NutShell.fir.opt.mlir 14233:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 14234:7]
    inst LogPerfHelper of LogPerfHelper_15 @[build/NutShell.fir.opt.mlir 14235:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 14236:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 14241:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 14242:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 14243:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 14244:7]
    node _T = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 14247:13]
    when _T : @[build/NutShell.fir.opt.mlir 14248:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 14250:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14252:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 14253:9]
        skip @[build/NutShell.fir.opt.mlir 14254:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 14257:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14259:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 14260:9]
        skip @[build/NutShell.fir.opt.mlir 14261:11]
    node _T_5 = and(mul.io.out.ready, mul.io.out.valid) @[build/NutShell.fir.opt.mlir 14265:15]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 14266:16]
    connect _WIRE, _T_5 @[build/NutShell.fir.opt.mlir 14267:7]

  extmodule LogPerfHelper_16 : @[build/NutShell.fir.opt.mlir 14269:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 14269:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 14269:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 14269:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 14269:141]
    defname = LogPerfHelper

  extmodule DifftestCSRState : @[build/NutShell.fir.opt.mlir 14270:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14270:51]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 14270:76]
    input io : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14270:104]
    defname = DifftestCSRState

  module DummyDPICWrapper_1 : @[build/NutShell.fir.opt.mlir 14271:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14271:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14271:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14271:102]
    input io : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14271:148]

    inst dpic of DifftestCSRState @[build/NutShell.fir.opt.mlir 14292:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 14312:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 14315:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 14316:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 14317:7]
    connect dpic.io.medeleg, io.medeleg @[build/NutShell.fir.opt.mlir 14318:7]
    connect dpic.io.mideleg, io.mideleg @[build/NutShell.fir.opt.mlir 14319:7]
    connect dpic.io.sscratch, io.sscratch @[build/NutShell.fir.opt.mlir 14320:7]
    connect dpic.io.mscratch, io.mscratch @[build/NutShell.fir.opt.mlir 14321:7]
    connect dpic.io.mie, io.mie @[build/NutShell.fir.opt.mlir 14322:7]
    connect dpic.io.mip, io.mip @[build/NutShell.fir.opt.mlir 14323:7]
    connect dpic.io.satp, io.satp @[build/NutShell.fir.opt.mlir 14324:7]
    connect dpic.io.scause, io.scause @[build/NutShell.fir.opt.mlir 14325:7]
    connect dpic.io.mcause, io.mcause @[build/NutShell.fir.opt.mlir 14326:7]
    connect dpic.io.stvec, io.stvec @[build/NutShell.fir.opt.mlir 14327:7]
    connect dpic.io.mtvec, io.mtvec @[build/NutShell.fir.opt.mlir 14328:7]
    connect dpic.io.stval, io.stval @[build/NutShell.fir.opt.mlir 14329:7]
    connect dpic.io.mtval, io.mtval @[build/NutShell.fir.opt.mlir 14330:7]
    connect dpic.io.sepc, io.sepc @[build/NutShell.fir.opt.mlir 14331:7]
    connect dpic.io.mepc, io.mepc @[build/NutShell.fir.opt.mlir 14332:7]
    connect dpic.io.sstatus, io.sstatus @[build/NutShell.fir.opt.mlir 14333:7]
    connect dpic.io.mstatus, io.mstatus @[build/NutShell.fir.opt.mlir 14334:7]
    connect dpic.io.privilegeMode, io.privilegeMode @[build/NutShell.fir.opt.mlir 14335:7]

  extmodule DifftestArchEvent : @[build/NutShell.fir.opt.mlir 14337:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14337:52]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 14337:77]
    input io : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14337:105]
    defname = DifftestArchEvent

  module DummyDPICWrapper_2 : @[build/NutShell.fir.opt.mlir 14338:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14338:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14338:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14338:102]
    input io : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14338:148]

    inst dpic of DifftestArchEvent @[build/NutShell.fir.opt.mlir 14346:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 14353:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 14355:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 14356:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 14357:7]
    connect dpic.io.exceptionInst, io.exceptionInst @[build/NutShell.fir.opt.mlir 14358:7]
    connect dpic.io.exceptionPC, io.exceptionPC @[build/NutShell.fir.opt.mlir 14359:7]
    connect dpic.io.exception, io.exception @[build/NutShell.fir.opt.mlir 14360:7]
    connect dpic.io.interrupt, io.interrupt @[build/NutShell.fir.opt.mlir 14361:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 14362:7]

  module CSRDiffWrapper : @[build/NutShell.fir.opt.mlir 14364:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14364:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14364:72]
    output io : { flip csrState : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> }, flip archEvent : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } } @[build/NutShell.fir.opt.mlir 14364:99]

    wire difftest : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14392:19]
    wire _difftest_sink_bundle_WIRE : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14394:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 14416:7]
    connect _difftest_sink_bundle_WIRE.medeleg, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14419:7]
    connect _difftest_sink_bundle_WIRE.mideleg, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14421:7]
    connect _difftest_sink_bundle_WIRE.sscratch, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14423:7]
    connect _difftest_sink_bundle_WIRE.mscratch, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14425:7]
    connect _difftest_sink_bundle_WIRE.mie, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14427:7]
    connect _difftest_sink_bundle_WIRE.mip, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14429:7]
    connect _difftest_sink_bundle_WIRE.satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14431:7]
    connect _difftest_sink_bundle_WIRE.scause, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14433:7]
    connect _difftest_sink_bundle_WIRE.mcause, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14435:7]
    connect _difftest_sink_bundle_WIRE.stvec, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14437:7]
    connect _difftest_sink_bundle_WIRE.mtvec, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14439:7]
    connect _difftest_sink_bundle_WIRE.stval, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14441:7]
    connect _difftest_sink_bundle_WIRE.mtval, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14443:7]
    connect _difftest_sink_bundle_WIRE.sepc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14445:7]
    connect _difftest_sink_bundle_WIRE.mepc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14447:7]
    connect _difftest_sink_bundle_WIRE.sstatus, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14449:7]
    connect _difftest_sink_bundle_WIRE.mstatus, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14451:7]
    connect _difftest_sink_bundle_WIRE.privilegeMode, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14453:7]
    wire difftest_sink : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14454:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 14474:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14475:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14479:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14480:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 14482:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 14485:7]
    inst difftest_sink_module of DummyDPICWrapper_1 @[build/NutShell.fir.opt.mlir 14486:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 14507:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 14508:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 14509:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 14510:7]
    connect difftest_sink_module.io.medeleg, difftest_sink.medeleg @[build/NutShell.fir.opt.mlir 14511:7]
    connect difftest_sink_module.io.mideleg, difftest_sink.mideleg @[build/NutShell.fir.opt.mlir 14512:7]
    connect difftest_sink_module.io.sscratch, difftest_sink.sscratch @[build/NutShell.fir.opt.mlir 14513:7]
    connect difftest_sink_module.io.mscratch, difftest_sink.mscratch @[build/NutShell.fir.opt.mlir 14514:7]
    connect difftest_sink_module.io.mie, difftest_sink.mie @[build/NutShell.fir.opt.mlir 14515:7]
    connect difftest_sink_module.io.mip, difftest_sink.mip @[build/NutShell.fir.opt.mlir 14516:7]
    connect difftest_sink_module.io.satp, difftest_sink.satp @[build/NutShell.fir.opt.mlir 14517:7]
    connect difftest_sink_module.io.scause, difftest_sink.scause @[build/NutShell.fir.opt.mlir 14518:7]
    connect difftest_sink_module.io.mcause, difftest_sink.mcause @[build/NutShell.fir.opt.mlir 14519:7]
    connect difftest_sink_module.io.stvec, difftest_sink.stvec @[build/NutShell.fir.opt.mlir 14520:7]
    connect difftest_sink_module.io.mtvec, difftest_sink.mtvec @[build/NutShell.fir.opt.mlir 14521:7]
    connect difftest_sink_module.io.stval, difftest_sink.stval @[build/NutShell.fir.opt.mlir 14522:7]
    connect difftest_sink_module.io.mtval, difftest_sink.mtval @[build/NutShell.fir.opt.mlir 14523:7]
    connect difftest_sink_module.io.sepc, difftest_sink.sepc @[build/NutShell.fir.opt.mlir 14524:7]
    connect difftest_sink_module.io.mepc, difftest_sink.mepc @[build/NutShell.fir.opt.mlir 14525:7]
    connect difftest_sink_module.io.sstatus, difftest_sink.sstatus @[build/NutShell.fir.opt.mlir 14526:7]
    connect difftest_sink_module.io.mstatus, difftest_sink.mstatus @[build/NutShell.fir.opt.mlir 14527:7]
    connect difftest_sink_module.io.privilegeMode, difftest_sink.privilegeMode @[build/NutShell.fir.opt.mlir 14528:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 14529:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 14530:7]
    reg difftest_REG : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14531:23]
    connect difftest_REG.coreid, io.csrState.coreid @[build/NutShell.fir.opt.mlir 14551:7]
    connect difftest_REG.medeleg, io.csrState.medeleg @[build/NutShell.fir.opt.mlir 14552:7]
    connect difftest_REG.mideleg, io.csrState.mideleg @[build/NutShell.fir.opt.mlir 14553:7]
    connect difftest_REG.sscratch, io.csrState.sscratch @[build/NutShell.fir.opt.mlir 14554:7]
    connect difftest_REG.mscratch, io.csrState.mscratch @[build/NutShell.fir.opt.mlir 14555:7]
    connect difftest_REG.mie, io.csrState.mie @[build/NutShell.fir.opt.mlir 14556:7]
    connect difftest_REG.mip, io.csrState.mip @[build/NutShell.fir.opt.mlir 14557:7]
    connect difftest_REG.satp, io.csrState.satp @[build/NutShell.fir.opt.mlir 14558:7]
    connect difftest_REG.scause, io.csrState.scause @[build/NutShell.fir.opt.mlir 14559:7]
    connect difftest_REG.mcause, io.csrState.mcause @[build/NutShell.fir.opt.mlir 14560:7]
    connect difftest_REG.stvec, io.csrState.stvec @[build/NutShell.fir.opt.mlir 14561:7]
    connect difftest_REG.mtvec, io.csrState.mtvec @[build/NutShell.fir.opt.mlir 14562:7]
    connect difftest_REG.stval, io.csrState.stval @[build/NutShell.fir.opt.mlir 14563:7]
    connect difftest_REG.mtval, io.csrState.mtval @[build/NutShell.fir.opt.mlir 14564:7]
    connect difftest_REG.sepc, io.csrState.sepc @[build/NutShell.fir.opt.mlir 14565:7]
    connect difftest_REG.mepc, io.csrState.mepc @[build/NutShell.fir.opt.mlir 14566:7]
    connect difftest_REG.sstatus, io.csrState.sstatus @[build/NutShell.fir.opt.mlir 14567:7]
    connect difftest_REG.mstatus, io.csrState.mstatus @[build/NutShell.fir.opt.mlir 14568:7]
    connect difftest_REG.privilegeMode, io.csrState.privilegeMode @[build/NutShell.fir.opt.mlir 14569:7]
    connect difftest, difftest_REG @[build/NutShell.fir.opt.mlir 14570:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 14573:7]
    wire difftestArchEvent : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14574:28]
    wire _difftestArchEvent_sink_bundle_WIRE : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14576:46]
    connect _difftestArchEvent_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 14584:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exceptionInst, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14587:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exceptionPC, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14589:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exception, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14591:7]
    connect _difftestArchEvent_sink_bundle_WIRE.interrupt, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14593:7]
    connect _difftestArchEvent_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14595:7]
    wire difftestArchEvent_sink : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14596:33]
    connect difftestArchEvent_sink, _difftestArchEvent_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 14603:7]
    wire _difftestArchEvent_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14604:47]
    connect _difftestArchEvent_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14607:7]
    wire difftestArchEvent_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14608:41]
    connect difftestArchEvent_sink_control, _difftestArchEvent_sink_control_WIRE @[build/NutShell.fir.opt.mlir 14610:7]
    connect difftestArchEvent_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 14612:7]
    inst difftestArchEvent_sink_module of DummyDPICWrapper_2 @[build/NutShell.fir.opt.mlir 14613:159]
    connect difftestArchEvent_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 14621:7]
    connect difftestArchEvent_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 14622:7]
    connect difftestArchEvent_sink_module.control.enable, difftestArchEvent_sink_control.enable @[build/NutShell.fir.opt.mlir 14623:7]
    connect difftestArchEvent_sink_module.io.coreid, difftestArchEvent_sink.coreid @[build/NutShell.fir.opt.mlir 14624:7]
    connect difftestArchEvent_sink_module.io.exceptionInst, difftestArchEvent_sink.exceptionInst @[build/NutShell.fir.opt.mlir 14625:7]
    connect difftestArchEvent_sink_module.io.exceptionPC, difftestArchEvent_sink.exceptionPC @[build/NutShell.fir.opt.mlir 14626:7]
    connect difftestArchEvent_sink_module.io.exception, difftestArchEvent_sink.exception @[build/NutShell.fir.opt.mlir 14627:7]
    connect difftestArchEvent_sink_module.io.interrupt, difftestArchEvent_sink.interrupt @[build/NutShell.fir.opt.mlir 14628:7]
    connect difftestArchEvent_sink_module.io.valid, difftestArchEvent_sink.valid @[build/NutShell.fir.opt.mlir 14629:7]
    connect difftestArchEvent_sink, difftestArchEvent @[build/NutShell.fir.opt.mlir 14630:7]
    connect difftestArchEvent_sink.coreid, difftestArchEvent.coreid @[build/NutShell.fir.opt.mlir 14631:7]
    reg difftestArchEvent_REG : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14632:32]
    connect difftestArchEvent_REG.coreid, io.archEvent.coreid @[build/NutShell.fir.opt.mlir 14639:7]
    connect difftestArchEvent_REG.exceptionInst, io.archEvent.exceptionInst @[build/NutShell.fir.opt.mlir 14640:7]
    connect difftestArchEvent_REG.exceptionPC, io.archEvent.exceptionPC @[build/NutShell.fir.opt.mlir 14641:7]
    connect difftestArchEvent_REG.exception, io.archEvent.exception @[build/NutShell.fir.opt.mlir 14642:7]
    connect difftestArchEvent_REG.interrupt, io.archEvent.interrupt @[build/NutShell.fir.opt.mlir 14643:7]
    connect difftestArchEvent_REG.valid, io.archEvent.valid @[build/NutShell.fir.opt.mlir 14644:7]
    reg difftestArchEvent_REG_1 : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14645:34]
    connect difftestArchEvent_REG_1.coreid, difftestArchEvent_REG.coreid @[build/NutShell.fir.opt.mlir 14652:7]
    connect difftestArchEvent_REG_1.exceptionInst, difftestArchEvent_REG.exceptionInst @[build/NutShell.fir.opt.mlir 14653:7]
    connect difftestArchEvent_REG_1.exceptionPC, difftestArchEvent_REG.exceptionPC @[build/NutShell.fir.opt.mlir 14654:7]
    connect difftestArchEvent_REG_1.exception, difftestArchEvent_REG.exception @[build/NutShell.fir.opt.mlir 14655:7]
    connect difftestArchEvent_REG_1.interrupt, difftestArchEvent_REG.interrupt @[build/NutShell.fir.opt.mlir 14656:7]
    connect difftestArchEvent_REG_1.valid, difftestArchEvent_REG.valid @[build/NutShell.fir.opt.mlir 14657:7]
    connect difftestArchEvent, difftestArchEvent_REG_1 @[build/NutShell.fir.opt.mlir 14658:7]
    connect difftestArchEvent.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 14661:7]

  module CSR : @[build/NutShell.fir.opt.mlir 14663:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14663:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14663:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip instrValid : UInt<1>, flip isBackendException : UInt<1>, intrNO : UInt<64>, flip imemMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip dmemMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, wenFix : UInt<1> } @[build/NutShell.fir.opt.mlir 14663:88]

    regreset csrNotImplemented : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14728:28]
    regreset mtvec : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14729:16]
    regreset mcounteren : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14730:21]
    regreset mcause : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14731:17]
    regreset mtval : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14732:16]
    regreset mepc : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14733:15]
    regreset mie : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14735:14]
    wire _mipWire_WIRE : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14736:24]
    connect _mipWire_WIRE.s.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14753:7]
    connect _mipWire_WIRE.s.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14755:7]
    connect _mipWire_WIRE.s.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14757:7]
    connect _mipWire_WIRE.s.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14759:7]
    connect _mipWire_WIRE.t.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14761:7]
    connect _mipWire_WIRE.t.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14763:7]
    connect _mipWire_WIRE.t.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14765:7]
    connect _mipWire_WIRE.t.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14767:7]
    connect _mipWire_WIRE.e.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14769:7]
    connect _mipWire_WIRE.e.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14771:7]
    connect _mipWire_WIRE.e.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14773:7]
    connect _mipWire_WIRE.e.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14775:7]
    wire mipWire : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14776:18]
    connect mipWire, _mipWire_WIRE @[build/NutShell.fir.opt.mlir 14792:7]
    regreset mipReg : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14793:17]
    node mip_lo = cat(mipWire.s.s, mipWire.s.u) @[build/NutShell.fir.opt.mlir 14795:17]
    node mip_hi = cat(mipWire.s.m, mipWire.s.h) @[build/NutShell.fir.opt.mlir 14797:17]
    node _mip_T = cat(mip_hi, mip_lo) @[build/NutShell.fir.opt.mlir 14799:17]
    node mip_lo_1 = cat(mipWire.t.s, mipWire.t.u) @[build/NutShell.fir.opt.mlir 14801:19]
    node mip_hi_1 = cat(mipWire.t.m, mipWire.t.h) @[build/NutShell.fir.opt.mlir 14803:19]
    node _mip_T_1 = cat(mip_hi_1, mip_lo_1) @[build/NutShell.fir.opt.mlir 14805:19]
    node mip_lo_2 = cat(mipWire.e.s, mipWire.e.u) @[build/NutShell.fir.opt.mlir 14807:19]
    node mip_hi_2 = cat(mipWire.e.m, mipWire.e.h) @[build/NutShell.fir.opt.mlir 14809:19]
    node _mip_T_2 = cat(mip_hi_2, mip_lo_2) @[build/NutShell.fir.opt.mlir 14811:19]
    node mip_hi_3 = cat(_mip_T_2, _mip_T_1) @[build/NutShell.fir.opt.mlir 14813:19]
    node _mip_T_3 = cat(mip_hi_3, _mip_T) @[build/NutShell.fir.opt.mlir 14815:19]
    node _mip_T_4 = or(_mip_T_3, mipReg) @[build/NutShell.fir.opt.mlir 14817:19]
    wire mip : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14818:14]
    wire _mip_WIRE : UInt<12> @[build/NutShell.fir.opt.mlir 14834:20]
    connect _mip_WIRE, tail(_mip_T_4, 52) @[build/NutShell.fir.opt.mlir 14836:7]
    node _mip_T_5 = bits(_mip_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 14838:19]
    connect mip.s.u, _mip_T_5 @[build/NutShell.fir.opt.mlir 14839:7]
    node _mip_T_6 = bits(_mip_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 14841:19]
    connect mip.s.s, _mip_T_6 @[build/NutShell.fir.opt.mlir 14842:7]
    node _mip_T_7 = bits(_mip_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 14844:19]
    connect mip.s.h, _mip_T_7 @[build/NutShell.fir.opt.mlir 14845:7]
    node _mip_T_8 = bits(_mip_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 14847:19]
    connect mip.s.m, _mip_T_8 @[build/NutShell.fir.opt.mlir 14848:7]
    node _mip_T_9 = bits(_mip_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 14850:19]
    connect mip.t.u, _mip_T_9 @[build/NutShell.fir.opt.mlir 14851:7]
    node _mip_T_10 = bits(_mip_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 14853:20]
    connect mip.t.s, _mip_T_10 @[build/NutShell.fir.opt.mlir 14854:7]
    node _mip_T_11 = bits(_mip_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 14856:20]
    connect mip.t.h, _mip_T_11 @[build/NutShell.fir.opt.mlir 14857:7]
    node _mip_T_12 = bits(_mip_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 14859:20]
    connect mip.t.m, _mip_T_12 @[build/NutShell.fir.opt.mlir 14860:7]
    node _mip_T_13 = bits(_mip_WIRE, 8, 8) @[build/NutShell.fir.opt.mlir 14862:20]
    connect mip.e.u, _mip_T_13 @[build/NutShell.fir.opt.mlir 14863:7]
    node _mip_T_14 = bits(_mip_WIRE, 9, 9) @[build/NutShell.fir.opt.mlir 14865:20]
    connect mip.e.s, _mip_T_14 @[build/NutShell.fir.opt.mlir 14866:7]
    node _mip_T_15 = bits(_mip_WIRE, 10, 10) @[build/NutShell.fir.opt.mlir 14868:20]
    connect mip.e.h, _mip_T_15 @[build/NutShell.fir.opt.mlir 14869:7]
    node _mip_T_16 = bits(_mip_WIRE, 11, 11) @[build/NutShell.fir.opt.mlir 14871:20]
    connect mip.e.m, _mip_T_16 @[build/NutShell.fir.opt.mlir 14872:7]
    node _misaInitVal_T = shl(UInt<2>(2), 62) @[build/NutShell.fir.opt.mlir 14875:25]
    node _misaInitVal_T_1 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 14878:27]
    node _misaInitVal_T_2 = or(UInt<1>(0), _misaInitVal_T_1) @[build/NutShell.fir.opt.mlir 14880:27]
    node _misaInitVal_T_3 = shl(UInt<1>(1), 18) @[build/NutShell.fir.opt.mlir 14882:27]
    node _misaInitVal_T_4 = or(_misaInitVal_T_2, _misaInitVal_T_3) @[build/NutShell.fir.opt.mlir 14884:27]
    node _misaInitVal_T_5 = shl(UInt<1>(1), 8) @[build/NutShell.fir.opt.mlir 14886:27]
    node _misaInitVal_T_6 = or(_misaInitVal_T_4, _misaInitVal_T_5) @[build/NutShell.fir.opt.mlir 14888:27]
    node _misaInitVal_T_7 = shl(UInt<1>(1), 20) @[build/NutShell.fir.opt.mlir 14890:27]
    node _misaInitVal_T_8 = or(_misaInitVal_T_6, _misaInitVal_T_7) @[build/NutShell.fir.opt.mlir 14892:27]
    node _misaInitVal_T_9 = shl(UInt<1>(1), 12) @[build/NutShell.fir.opt.mlir 14894:27]
    node _misaInitVal_T_10 = or(_misaInitVal_T_8, _misaInitVal_T_9) @[build/NutShell.fir.opt.mlir 14896:28]
    node _misaInitVal_T_11 = shl(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 14898:28]
    node _misaInitVal_T_12 = or(_misaInitVal_T_10, _misaInitVal_T_11) @[build/NutShell.fir.opt.mlir 14900:28]
    node misaInitVal = or(_misaInitVal_T, _misaInitVal_T_12) @[build/NutShell.fir.opt.mlir 14902:22]
    regreset misa : UInt<64>, clock, reset, misaInitVal @[build/NutShell.fir.opt.mlir 14903:15]
    regreset mvendorid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14904:20]
    regreset marchid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14905:18]
    regreset mimpid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14906:17]
    regreset mhartid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14907:18]
    regreset mstatus : UInt<64>, clock, reset, UInt<36>(42949679104) @[build/NutShell.fir.opt.mlir 14909:18]
    node _mstatusWMask_T = shl(UInt<1>(1), 63) @[build/NutShell.fir.opt.mlir 14911:26]
    node _mstatusWMask_T_1 = bits(_mstatusWMask_T, 63, 0) @[build/NutShell.fir.opt.mlir 14913:28]
    node _mstatusWMask_T_2 = mux(UInt<1>(1), UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 14917:28]
    node _mstatusWMask_T_3 = shl(_mstatusWMask_T_2, 38) @[build/NutShell.fir.opt.mlir 14919:28]
    node _mstatusWMask_T_4 = cat(UInt<1>(0), _mstatusWMask_T_3) @[build/NutShell.fir.opt.mlir 14921:28]
    node _mstatusWMask_T_5 = or(_mstatusWMask_T_1, _mstatusWMask_T_4) @[build/NutShell.fir.opt.mlir 14923:28]
    node _mstatusWMask_T_6 = shl(UInt<1>(1), 37) @[build/NutShell.fir.opt.mlir 14925:28]
    node _mstatusWMask_T_7 = cat(UInt<26>(0), _mstatusWMask_T_6) @[build/NutShell.fir.opt.mlir 14928:28]
    node _mstatusWMask_T_8 = or(_mstatusWMask_T_5, _mstatusWMask_T_7) @[build/NutShell.fir.opt.mlir 14930:28]
    node _mstatusWMask_T_9 = shl(UInt<1>(1), 36) @[build/NutShell.fir.opt.mlir 14932:28]
    node _mstatusWMask_T_10 = cat(UInt<27>(0), _mstatusWMask_T_9) @[build/NutShell.fir.opt.mlir 14935:29]
    node _mstatusWMask_T_11 = or(_mstatusWMask_T_8, _mstatusWMask_T_10) @[build/NutShell.fir.opt.mlir 14937:29]
    node _mstatusWMask_T_12 = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 14941:29]
    node _mstatusWMask_T_13 = shl(_mstatusWMask_T_12, 32) @[build/NutShell.fir.opt.mlir 14943:29]
    node _mstatusWMask_T_14 = cat(UInt<28>(0), _mstatusWMask_T_13) @[build/NutShell.fir.opt.mlir 14946:29]
    node _mstatusWMask_T_15 = or(_mstatusWMask_T_11, _mstatusWMask_T_14) @[build/NutShell.fir.opt.mlir 14948:29]
    node _mstatusWMask_T_16 = mux(UInt<1>(1), UInt<9>(511), UInt<9>(0)) @[build/NutShell.fir.opt.mlir 14952:29]
    node _mstatusWMask_T_17 = shl(_mstatusWMask_T_16, 23) @[build/NutShell.fir.opt.mlir 14954:29]
    node _mstatusWMask_T_18 = cat(UInt<32>(0), _mstatusWMask_T_17) @[build/NutShell.fir.opt.mlir 14957:29]
    node _mstatusWMask_T_19 = or(_mstatusWMask_T_15, _mstatusWMask_T_18) @[build/NutShell.fir.opt.mlir 14959:29]
    node _mstatusWMask_T_20 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 14963:29]
    node _mstatusWMask_T_21 = shl(_mstatusWMask_T_20, 15) @[build/NutShell.fir.opt.mlir 14965:29]
    node _mstatusWMask_T_22 = cat(UInt<47>(0), _mstatusWMask_T_21) @[build/NutShell.fir.opt.mlir 14968:29]
    node _mstatusWMask_T_23 = or(_mstatusWMask_T_19, _mstatusWMask_T_22) @[build/NutShell.fir.opt.mlir 14970:29]
    node _mstatusWMask_T_24 = shl(UInt<1>(1), 6) @[build/NutShell.fir.opt.mlir 14972:29]
    node _mstatusWMask_T_25 = cat(UInt<57>(0), _mstatusWMask_T_24) @[build/NutShell.fir.opt.mlir 14975:29]
    node _mstatusWMask_T_26 = or(_mstatusWMask_T_23, _mstatusWMask_T_25) @[build/NutShell.fir.opt.mlir 14977:29]
    node _mstatusWMask_T_27 = shl(UInt<1>(1), 4) @[build/NutShell.fir.opt.mlir 14979:29]
    node _mstatusWMask_T_28 = cat(UInt<59>(0), _mstatusWMask_T_27) @[build/NutShell.fir.opt.mlir 14982:29]
    node _mstatusWMask_T_29 = or(_mstatusWMask_T_26, _mstatusWMask_T_28) @[build/NutShell.fir.opt.mlir 14984:29]
    node _mstatusWMask_T_30 = shl(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 14986:29]
    node _mstatusWMask_T_31 = cat(UInt<61>(0), _mstatusWMask_T_30) @[build/NutShell.fir.opt.mlir 14989:29]
    node _mstatusWMask_T_32 = or(_mstatusWMask_T_29, _mstatusWMask_T_31) @[build/NutShell.fir.opt.mlir 14991:29]
    node _mstatusWMask_T_33 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 14993:29]
    node _mstatusWMask_T_34 = cat(UInt<63>(0), _mstatusWMask_T_33) @[build/NutShell.fir.opt.mlir 14996:29]
    node _mstatusWMask_T_35 = or(_mstatusWMask_T_32, _mstatusWMask_T_34) @[build/NutShell.fir.opt.mlir 14998:29]
    node _mstatusWMask_T_36 = bits(_mstatusWMask_T_35, 63, 0) @[build/NutShell.fir.opt.mlir 15000:29]
    node mstatusWMask = not(_mstatusWMask_T_36) @[build/NutShell.fir.opt.mlir 15002:23]
    wire mstatusStruct : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 15003:24]
    wire _mstatusStruct_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 15030:30]
    connect _mstatusStruct_WIRE, mstatus @[build/NutShell.fir.opt.mlir 15031:7]
    node _mstatusStruct_T = bits(_mstatusStruct_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 15033:27]
    connect mstatusStruct.ie.u, _mstatusStruct_T @[build/NutShell.fir.opt.mlir 15034:7]
    node _mstatusStruct_T_1 = bits(_mstatusStruct_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 15036:29]
    connect mstatusStruct.ie.s, _mstatusStruct_T_1 @[build/NutShell.fir.opt.mlir 15037:7]
    node _mstatusStruct_T_2 = bits(_mstatusStruct_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 15039:29]
    connect mstatusStruct.ie.h, _mstatusStruct_T_2 @[build/NutShell.fir.opt.mlir 15040:7]
    node _mstatusStruct_T_3 = bits(_mstatusStruct_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 15042:29]
    connect mstatusStruct.ie.m, _mstatusStruct_T_3 @[build/NutShell.fir.opt.mlir 15043:7]
    node _mstatusStruct_T_4 = bits(_mstatusStruct_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 15045:29]
    connect mstatusStruct.pie.u, _mstatusStruct_T_4 @[build/NutShell.fir.opt.mlir 15046:7]
    node _mstatusStruct_T_5 = bits(_mstatusStruct_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 15048:29]
    connect mstatusStruct.pie.s, _mstatusStruct_T_5 @[build/NutShell.fir.opt.mlir 15049:7]
    node _mstatusStruct_T_6 = bits(_mstatusStruct_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 15051:29]
    connect mstatusStruct.pie.h, _mstatusStruct_T_6 @[build/NutShell.fir.opt.mlir 15052:7]
    node _mstatusStruct_T_7 = bits(_mstatusStruct_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 15054:29]
    connect mstatusStruct.pie.m, _mstatusStruct_T_7 @[build/NutShell.fir.opt.mlir 15055:7]
    node _mstatusStruct_T_8 = bits(_mstatusStruct_WIRE, 8, 8) @[build/NutShell.fir.opt.mlir 15057:29]
    connect mstatusStruct.spp, _mstatusStruct_T_8 @[build/NutShell.fir.opt.mlir 15058:7]
    node _mstatusStruct_T_9 = bits(_mstatusStruct_WIRE, 10, 9) @[build/NutShell.fir.opt.mlir 15060:29]
    connect mstatusStruct.hpp, _mstatusStruct_T_9 @[build/NutShell.fir.opt.mlir 15061:7]
    node _mstatusStruct_T_10 = bits(_mstatusStruct_WIRE, 12, 11) @[build/NutShell.fir.opt.mlir 15063:30]
    connect mstatusStruct.mpp, _mstatusStruct_T_10 @[build/NutShell.fir.opt.mlir 15064:7]
    node _mstatusStruct_T_11 = bits(_mstatusStruct_WIRE, 14, 13) @[build/NutShell.fir.opt.mlir 15066:30]
    connect mstatusStruct.fs, _mstatusStruct_T_11 @[build/NutShell.fir.opt.mlir 15067:7]
    node _mstatusStruct_T_12 = bits(_mstatusStruct_WIRE, 16, 15) @[build/NutShell.fir.opt.mlir 15069:30]
    connect mstatusStruct.xs, _mstatusStruct_T_12 @[build/NutShell.fir.opt.mlir 15070:7]
    node _mstatusStruct_T_13 = bits(_mstatusStruct_WIRE, 17, 17) @[build/NutShell.fir.opt.mlir 15072:30]
    connect mstatusStruct.mprv, _mstatusStruct_T_13 @[build/NutShell.fir.opt.mlir 15073:7]
    node _mstatusStruct_T_14 = bits(_mstatusStruct_WIRE, 18, 18) @[build/NutShell.fir.opt.mlir 15075:30]
    connect mstatusStruct.sum, _mstatusStruct_T_14 @[build/NutShell.fir.opt.mlir 15076:7]
    node _mstatusStruct_T_15 = bits(_mstatusStruct_WIRE, 19, 19) @[build/NutShell.fir.opt.mlir 15078:30]
    connect mstatusStruct.mxr, _mstatusStruct_T_15 @[build/NutShell.fir.opt.mlir 15079:7]
    node _mstatusStruct_T_16 = bits(_mstatusStruct_WIRE, 20, 20) @[build/NutShell.fir.opt.mlir 15081:30]
    connect mstatusStruct.tvm, _mstatusStruct_T_16 @[build/NutShell.fir.opt.mlir 15082:7]
    node _mstatusStruct_T_17 = bits(_mstatusStruct_WIRE, 21, 21) @[build/NutShell.fir.opt.mlir 15084:30]
    connect mstatusStruct.tw, _mstatusStruct_T_17 @[build/NutShell.fir.opt.mlir 15085:7]
    node _mstatusStruct_T_18 = bits(_mstatusStruct_WIRE, 22, 22) @[build/NutShell.fir.opt.mlir 15087:30]
    connect mstatusStruct.tsr, _mstatusStruct_T_18 @[build/NutShell.fir.opt.mlir 15088:7]
    node _mstatusStruct_T_19 = bits(_mstatusStruct_WIRE, 31, 23) @[build/NutShell.fir.opt.mlir 15090:30]
    connect mstatusStruct.pad0, _mstatusStruct_T_19 @[build/NutShell.fir.opt.mlir 15091:7]
    node _mstatusStruct_T_20 = bits(_mstatusStruct_WIRE, 33, 32) @[build/NutShell.fir.opt.mlir 15093:30]
    connect mstatusStruct.uxl, _mstatusStruct_T_20 @[build/NutShell.fir.opt.mlir 15094:7]
    node _mstatusStruct_T_21 = bits(_mstatusStruct_WIRE, 35, 34) @[build/NutShell.fir.opt.mlir 15096:30]
    connect mstatusStruct.sxl, _mstatusStruct_T_21 @[build/NutShell.fir.opt.mlir 15097:7]
    node _mstatusStruct_T_22 = bits(_mstatusStruct_WIRE, 62, 36) @[build/NutShell.fir.opt.mlir 15099:30]
    connect mstatusStruct.pad1, _mstatusStruct_T_22 @[build/NutShell.fir.opt.mlir 15100:7]
    node _mstatusStruct_T_23 = bits(_mstatusStruct_WIRE, 63, 63) @[build/NutShell.fir.opt.mlir 15102:30]
    connect mstatusStruct.sd, _mstatusStruct_T_23 @[build/NutShell.fir.opt.mlir 15103:7]
    regreset medeleg : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15104:18]
    regreset mideleg : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15105:18]
    regreset mscratch : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15106:19]
    regreset pmpcfg0 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15107:18]
    regreset pmpcfg1 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15108:18]
    regreset pmpcfg2 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15109:18]
    regreset pmpcfg3 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15110:18]
    regreset pmpaddr0 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15111:19]
    regreset pmpaddr1 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15112:19]
    regreset pmpaddr2 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15113:19]
    regreset pmpaddr3 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15114:19]
    node _sstatusWmask_T = mux(UInt<1>(1), UInt<44>(17592186044415), UInt<44>(0)) @[build/NutShell.fir.opt.mlir 15118:26]
    node _sstatusWmask_T_1 = shl(_sstatusWmask_T, 20) @[build/NutShell.fir.opt.mlir 15120:28]
    node _sstatusWmask_T_2 = bits(_sstatusWmask_T_1, 63, 0) @[build/NutShell.fir.opt.mlir 15122:28]
    node _sstatusWmask_T_3 = mux(UInt<1>(1), UInt<3>(7), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 15126:28]
    node _sstatusWmask_T_4 = shl(_sstatusWmask_T_3, 15) @[build/NutShell.fir.opt.mlir 15128:28]
    node _sstatusWmask_T_5 = cat(UInt<46>(0), _sstatusWmask_T_4) @[build/NutShell.fir.opt.mlir 15131:28]
    node _sstatusWmask_T_6 = or(_sstatusWmask_T_2, _sstatusWmask_T_5) @[build/NutShell.fir.opt.mlir 15133:28]
    node _sstatusWmask_T_7 = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 15135:28]
    node _sstatusWmask_T_8 = shl(_sstatusWmask_T_7, 9) @[build/NutShell.fir.opt.mlir 15137:28]
    node _sstatusWmask_T_9 = cat(UInt<51>(0), _sstatusWmask_T_8) @[build/NutShell.fir.opt.mlir 15140:28]
    node _sstatusWmask_T_10 = or(_sstatusWmask_T_6, _sstatusWmask_T_9) @[build/NutShell.fir.opt.mlir 15142:29]
    node _sstatusWmask_T_11 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 15144:29]
    node _sstatusWmask_T_12 = shl(_sstatusWmask_T_11, 6) @[build/NutShell.fir.opt.mlir 15146:29]
    node _sstatusWmask_T_13 = cat(UInt<56>(0), _sstatusWmask_T_12) @[build/NutShell.fir.opt.mlir 15149:29]
    node _sstatusWmask_T_14 = or(_sstatusWmask_T_10, _sstatusWmask_T_13) @[build/NutShell.fir.opt.mlir 15151:29]
    node _sstatusWmask_T_15 = mux(UInt<1>(1), UInt<3>(7), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 15153:29]
    node _sstatusWmask_T_16 = shl(_sstatusWmask_T_15, 2) @[build/NutShell.fir.opt.mlir 15155:29]
    node _sstatusWmask_T_17 = cat(UInt<59>(0), _sstatusWmask_T_16) @[build/NutShell.fir.opt.mlir 15157:29]
    node _sstatusWmask_T_18 = or(_sstatusWmask_T_14, _sstatusWmask_T_17) @[build/NutShell.fir.opt.mlir 15159:29]
    node _sstatusWmask_T_19 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 15161:29]
    node _sstatusWmask_T_20 = cat(UInt<63>(0), _sstatusWmask_T_19) @[build/NutShell.fir.opt.mlir 15163:29]
    node _sstatusWmask_T_21 = or(_sstatusWmask_T_18, _sstatusWmask_T_20) @[build/NutShell.fir.opt.mlir 15165:29]
    node _sstatusWmask_T_22 = bits(_sstatusWmask_T_21, 63, 0) @[build/NutShell.fir.opt.mlir 15167:29]
    node sstatusWmask = not(_sstatusWmask_T_22) @[build/NutShell.fir.opt.mlir 15169:23]
    node sstatusRmask = or(sstatusWmask, UInt<64>(9223372049739776000)) @[build/NutShell.fir.opt.mlir 15172:23]
    regreset stvec : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15173:16]
    node sieMask = and(UInt<64>(546), mideleg) @[build/NutShell.fir.opt.mlir 15176:18]
    node sipMask = and(UInt<64>(546), mideleg) @[build/NutShell.fir.opt.mlir 15178:18]
    regreset satp : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15179:15]
    regreset sepc : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15180:15]
    regreset scause : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15181:17]
    reg stval : UInt<64>, clock @[build/NutShell.fir.opt.mlir 15182:16]
    regreset sscratch : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15183:19]
    regreset scounteren : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15184:21]
    reg uepc : UInt<64>, clock @[build/NutShell.fir.opt.mlir 15185:15]
    wire setLr : UInt<1> @[build/NutShell.fir.opt.mlir 15186:16]
    connect setLr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15188:7]
    wire setLrVal : UInt<1> @[build/NutShell.fir.opt.mlir 15189:19]
    connect setLrVal, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15191:7]
    wire setLrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 15192:20]
    invalidate setLrAddr @[build/NutShell.fir.opt.mlir 15194:7]
    regreset lr : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15195:13]
    regreset lrAddr : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15196:17]
    when setLr : @[build/NutShell.fir.opt.mlir 15197:7]
      connect lr, setLrVal @[build/NutShell.fir.opt.mlir 15198:9]
      connect lrAddr, setLrAddr @[build/NutShell.fir.opt.mlir 15199:9]
    regreset privilegeMode : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 15201:24]
    regreset perfCnts_0 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15202:21]
    regreset perfCnts_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15203:21]
    regreset perfCnts_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15204:21]
    regreset perfCnts_3 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15205:21]
    regreset perfCnts_4 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15206:21]
    regreset perfCnts_5 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15207:21]
    regreset perfCnts_6 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15208:21]
    regreset perfCnts_7 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15209:21]
    regreset perfCnts_8 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15210:21]
    regreset perfCnts_9 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15211:21]
    regreset perfCnts_10 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15212:22]
    regreset perfCnts_11 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15213:22]
    regreset perfCnts_12 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15214:22]
    regreset perfCnts_13 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15215:22]
    regreset perfCnts_14 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15216:22]
    regreset perfCnts_15 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15217:22]
    regreset perfCnts_16 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15218:22]
    regreset perfCnts_17 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15219:22]
    regreset perfCnts_18 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15220:22]
    regreset perfCnts_19 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15221:22]
    regreset perfCnts_20 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15222:22]
    regreset perfCnts_21 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15223:22]
    regreset perfCnts_22 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15224:22]
    regreset perfCnts_23 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15225:22]
    regreset perfCnts_24 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15226:22]
    regreset perfCnts_25 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15227:22]
    regreset perfCnts_26 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15228:22]
    regreset perfCnts_27 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15229:22]
    regreset perfCnts_28 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15230:22]
    regreset perfCnts_29 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15231:22]
    regreset perfCnts_30 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15232:22]
    regreset perfCnts_31 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15233:22]
    regreset perfCnts_32 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15234:22]
    regreset perfCnts_33 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15235:22]
    regreset perfCnts_34 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15236:22]
    regreset perfCnts_35 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15237:22]
    regreset perfCnts_36 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15238:22]
    regreset perfCnts_37 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15239:22]
    regreset perfCnts_38 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15240:22]
    regreset perfCnts_39 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15241:22]
    regreset perfCnts_40 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15242:22]
    regreset perfCnts_41 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15243:22]
    regreset perfCnts_42 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15244:22]
    regreset perfCnts_43 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15245:22]
    regreset perfCnts_44 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15246:22]
    regreset perfCnts_45 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15247:22]
    regreset perfCnts_46 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15248:22]
    regreset perfCnts_47 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15249:22]
    regreset perfCnts_48 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15250:22]
    regreset perfCnts_49 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15251:22]
    regreset perfCnts_50 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15252:22]
    regreset perfCnts_51 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15253:22]
    regreset perfCnts_52 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15254:22]
    regreset perfCnts_53 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15255:22]
    regreset perfCnts_54 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15256:22]
    regreset perfCnts_55 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15257:22]
    regreset perfCnts_56 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15258:22]
    regreset perfCnts_57 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15259:22]
    regreset perfCnts_58 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15260:22]
    regreset perfCnts_59 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15261:22]
    regreset perfCnts_60 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15262:22]
    regreset perfCnts_61 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15263:22]
    regreset perfCnts_62 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15264:22]
    regreset perfCnts_63 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15265:22]
    regreset perfCnts_64 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15266:22]
    regreset perfCnts_65 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15267:22]
    regreset perfCnts_66 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15268:22]
    regreset perfCnts_67 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15269:22]
    regreset perfCnts_68 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15270:22]
    regreset perfCnts_69 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15271:22]
    regreset perfCnts_70 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15272:22]
    regreset perfCnts_71 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15273:22]
    regreset perfCnts_72 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15274:22]
    regreset perfCnts_73 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15275:22]
    regreset perfCnts_74 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15276:22]
    regreset perfCnts_75 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15277:22]
    regreset perfCnts_76 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15278:22]
    regreset perfCnts_77 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15279:22]
    regreset perfCnts_78 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15280:22]
    regreset perfCnts_79 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15281:22]
    regreset perfCnts_80 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15282:22]
    regreset perfCnts_81 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15283:22]
    regreset perfCnts_82 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15284:22]
    regreset perfCnts_83 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15285:22]
    regreset perfCnts_84 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15286:22]
    regreset perfCnts_85 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15287:22]
    regreset perfCnts_86 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15288:22]
    regreset perfCnts_87 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15289:22]
    regreset perfCnts_88 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15290:22]
    regreset perfCnts_89 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15291:22]
    regreset perfCnts_90 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15292:22]
    regreset perfCnts_91 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15293:22]
    regreset perfCnts_92 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15294:22]
    regreset perfCnts_93 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15295:22]
    regreset perfCnts_94 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15296:22]
    regreset perfCnts_95 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15297:22]
    regreset perfCnts_96 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15298:22]
    regreset perfCnts_97 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15299:22]
    regreset perfCnts_98 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15300:22]
    regreset perfCnts_99 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15301:22]
    regreset perfCnts_100 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15302:23]
    regreset perfCnts_101 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15303:23]
    regreset perfCnts_102 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15304:23]
    regreset perfCnts_103 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15305:23]
    regreset perfCnts_104 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15306:23]
    regreset perfCnts_105 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15307:23]
    regreset perfCnts_106 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15308:23]
    regreset perfCnts_107 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15309:23]
    regreset perfCnts_108 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15310:23]
    regreset perfCnts_109 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15311:23]
    regreset perfCnts_110 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15312:23]
    regreset perfCnts_111 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15313:23]
    regreset perfCnts_112 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15314:23]
    regreset perfCnts_113 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15315:23]
    regreset perfCnts_114 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15316:23]
    regreset perfCnts_115 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15317:23]
    regreset perfCnts_116 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15318:23]
    regreset perfCnts_117 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15319:23]
    regreset perfCnts_118 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15320:23]
    regreset perfCnts_119 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15321:23]
    regreset perfCnts_120 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15322:23]
    regreset perfCnts_121 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15323:23]
    regreset perfCnts_122 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15324:23]
    regreset perfCnts_123 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15325:23]
    regreset perfCnts_124 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15326:23]
    regreset perfCnts_125 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15327:23]
    regreset perfCnts_126 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15328:23]
    regreset perfCnts_127 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15329:23]
    node perfCntsLoMapping_0_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15332:34]
    node perfCntsLoMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15334:34]
    node perfCntsLoMapping_1_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15336:34]
    node perfCntsLoMapping_1_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15338:34]
    node perfCntsLoMapping_2_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15340:34]
    node perfCntsLoMapping_2_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15342:34]
    node perfCntsLoMapping_3_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15344:34]
    node perfCntsLoMapping_3_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15346:34]
    node perfCntsLoMapping_4_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15348:34]
    node perfCntsLoMapping_4_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15350:34]
    node perfCntsLoMapping_5_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15352:34]
    node perfCntsLoMapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15354:34]
    node perfCntsLoMapping_6_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15356:34]
    node perfCntsLoMapping_6_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15358:34]
    node perfCntsLoMapping_7_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15360:34]
    node perfCntsLoMapping_7_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15362:34]
    node perfCntsLoMapping_8_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15364:34]
    node perfCntsLoMapping_8_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15366:34]
    node perfCntsLoMapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15368:34]
    node perfCntsLoMapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15370:34]
    node perfCntsLoMapping_10_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15372:35]
    node perfCntsLoMapping_10_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15374:35]
    node perfCntsLoMapping_11_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15376:35]
    node perfCntsLoMapping_11_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15378:35]
    node perfCntsLoMapping_12_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15380:35]
    node perfCntsLoMapping_12_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15382:35]
    node perfCntsLoMapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15384:35]
    node perfCntsLoMapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15386:35]
    node perfCntsLoMapping_14_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15388:35]
    node perfCntsLoMapping_14_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15390:35]
    node perfCntsLoMapping_15_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15392:35]
    node perfCntsLoMapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15394:35]
    node perfCntsLoMapping_16_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15396:35]
    node perfCntsLoMapping_16_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15398:35]
    node perfCntsLoMapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15400:35]
    node perfCntsLoMapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15402:35]
    node perfCntsLoMapping_18_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15404:35]
    node perfCntsLoMapping_18_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15406:35]
    node perfCntsLoMapping_19_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15408:35]
    node perfCntsLoMapping_19_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15410:35]
    node perfCntsLoMapping_20_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15412:35]
    node perfCntsLoMapping_20_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15414:35]
    node perfCntsLoMapping_21_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15416:35]
    node perfCntsLoMapping_21_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15418:35]
    node perfCntsLoMapping_22_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15420:35]
    node perfCntsLoMapping_22_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15422:35]
    node perfCntsLoMapping_23_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15424:35]
    node perfCntsLoMapping_23_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15426:35]
    node perfCntsLoMapping_24_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15428:35]
    node perfCntsLoMapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15430:35]
    node perfCntsLoMapping_25_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15432:35]
    node perfCntsLoMapping_25_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15434:35]
    node perfCntsLoMapping_26_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15436:35]
    node perfCntsLoMapping_26_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15438:35]
    node perfCntsLoMapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15440:35]
    node perfCntsLoMapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15442:35]
    node perfCntsLoMapping_28_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15444:35]
    node perfCntsLoMapping_28_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15446:35]
    node perfCntsLoMapping_29_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15448:35]
    node perfCntsLoMapping_29_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15450:35]
    node perfCntsLoMapping_30_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15452:35]
    node perfCntsLoMapping_30_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15454:35]
    node perfCntsLoMapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15456:35]
    node perfCntsLoMapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15458:35]
    node perfCntsLoMapping_32_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15460:35]
    node perfCntsLoMapping_32_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15462:35]
    node perfCntsLoMapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15464:35]
    node perfCntsLoMapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15466:35]
    node perfCntsLoMapping_34_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15468:35]
    node perfCntsLoMapping_34_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15470:35]
    node perfCntsLoMapping_35_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15472:35]
    node perfCntsLoMapping_35_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15474:35]
    node perfCntsLoMapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15476:35]
    node perfCntsLoMapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15478:35]
    node perfCntsLoMapping_37_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15480:35]
    node perfCntsLoMapping_37_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15482:35]
    node perfCntsLoMapping_38_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15484:35]
    node perfCntsLoMapping_38_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15486:35]
    node perfCntsLoMapping_39_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15488:35]
    node perfCntsLoMapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15490:35]
    node perfCntsLoMapping_40_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15492:35]
    node perfCntsLoMapping_40_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15494:35]
    node perfCntsLoMapping_41_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15496:35]
    node perfCntsLoMapping_41_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15498:35]
    node perfCntsLoMapping_42_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15500:35]
    node perfCntsLoMapping_42_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15502:35]
    node perfCntsLoMapping_43_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15504:35]
    node perfCntsLoMapping_43_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15506:35]
    node perfCntsLoMapping_44_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15508:35]
    node perfCntsLoMapping_44_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15510:35]
    node perfCntsLoMapping_45_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15512:35]
    node perfCntsLoMapping_45_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15514:35]
    node perfCntsLoMapping_46_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15516:35]
    node perfCntsLoMapping_46_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15518:35]
    node perfCntsLoMapping_47_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15520:35]
    node perfCntsLoMapping_47_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15522:35]
    node perfCntsLoMapping_48_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15524:35]
    node perfCntsLoMapping_48_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15526:35]
    node perfCntsLoMapping_49_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15528:35]
    node perfCntsLoMapping_49_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15530:35]
    node perfCntsLoMapping_50_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15532:35]
    node perfCntsLoMapping_50_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15534:35]
    node perfCntsLoMapping_51_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15536:35]
    node perfCntsLoMapping_51_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15538:35]
    node perfCntsLoMapping_52_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15540:35]
    node perfCntsLoMapping_52_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15542:35]
    node perfCntsLoMapping_53_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15544:35]
    node perfCntsLoMapping_53_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15546:35]
    node perfCntsLoMapping_54_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15548:35]
    node perfCntsLoMapping_54_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15550:35]
    node perfCntsLoMapping_55_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15552:35]
    node perfCntsLoMapping_55_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15554:35]
    node perfCntsLoMapping_56_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15556:35]
    node perfCntsLoMapping_56_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15558:35]
    node perfCntsLoMapping_57_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15560:35]
    node perfCntsLoMapping_57_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15562:35]
    node perfCntsLoMapping_58_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15564:35]
    node perfCntsLoMapping_58_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15566:35]
    node perfCntsLoMapping_59_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15568:35]
    node perfCntsLoMapping_59_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15570:35]
    node perfCntsLoMapping_60_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15572:35]
    node perfCntsLoMapping_60_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15574:35]
    node perfCntsLoMapping_61_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15576:35]
    node perfCntsLoMapping_61_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15578:35]
    node perfCntsLoMapping_62_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15580:35]
    node perfCntsLoMapping_62_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15582:35]
    node perfCntsLoMapping_63_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15584:35]
    node perfCntsLoMapping_63_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15586:35]
    node perfCntsLoMapping_64_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15588:35]
    node perfCntsLoMapping_64_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15590:35]
    node perfCntsLoMapping_65_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15592:35]
    node perfCntsLoMapping_65_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15594:35]
    node perfCntsLoMapping_66_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15596:35]
    node perfCntsLoMapping_66_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15598:35]
    node perfCntsLoMapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15600:35]
    node perfCntsLoMapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15602:35]
    node perfCntsLoMapping_68_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15604:35]
    node perfCntsLoMapping_68_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15606:35]
    node perfCntsLoMapping_69_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15608:35]
    node perfCntsLoMapping_69_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15610:35]
    node perfCntsLoMapping_70_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15612:35]
    node perfCntsLoMapping_70_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15614:35]
    node perfCntsLoMapping_71_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15616:35]
    node perfCntsLoMapping_71_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15618:35]
    node perfCntsLoMapping_72_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15620:35]
    node perfCntsLoMapping_72_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15622:35]
    node perfCntsLoMapping_73_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15624:35]
    node perfCntsLoMapping_73_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15626:35]
    node perfCntsLoMapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15628:35]
    node perfCntsLoMapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15630:35]
    node perfCntsLoMapping_75_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15632:35]
    node perfCntsLoMapping_75_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15634:35]
    node perfCntsLoMapping_76_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15636:35]
    node perfCntsLoMapping_76_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15638:35]
    node perfCntsLoMapping_77_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15640:35]
    node perfCntsLoMapping_77_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15642:35]
    node perfCntsLoMapping_78_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15644:35]
    node perfCntsLoMapping_78_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15646:35]
    node perfCntsLoMapping_79_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15648:35]
    node perfCntsLoMapping_79_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15650:35]
    node perfCntsLoMapping_80_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15652:35]
    node perfCntsLoMapping_80_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15654:35]
    node perfCntsLoMapping_81_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15656:35]
    node perfCntsLoMapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15658:35]
    node perfCntsLoMapping_82_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15660:35]
    node perfCntsLoMapping_82_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15662:35]
    node perfCntsLoMapping_83_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15664:35]
    node perfCntsLoMapping_83_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15666:35]
    node perfCntsLoMapping_84_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15668:35]
    node perfCntsLoMapping_84_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15670:35]
    node perfCntsLoMapping_85_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15672:35]
    node perfCntsLoMapping_85_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15674:35]
    node perfCntsLoMapping_86_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15676:35]
    node perfCntsLoMapping_86_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15678:35]
    node perfCntsLoMapping_87_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15680:35]
    node perfCntsLoMapping_87_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15682:35]
    node perfCntsLoMapping_88_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15684:35]
    node perfCntsLoMapping_88_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15686:35]
    node perfCntsLoMapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15688:35]
    node perfCntsLoMapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15690:35]
    node perfCntsLoMapping_90_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15692:35]
    node perfCntsLoMapping_90_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15694:35]
    node perfCntsLoMapping_91_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15696:35]
    node perfCntsLoMapping_91_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15698:35]
    node perfCntsLoMapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15700:35]
    node perfCntsLoMapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15702:35]
    node perfCntsLoMapping_93_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15704:35]
    node perfCntsLoMapping_93_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15706:35]
    node perfCntsLoMapping_94_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15708:35]
    node perfCntsLoMapping_94_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15710:35]
    node perfCntsLoMapping_95_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15712:35]
    node perfCntsLoMapping_95_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15714:35]
    node perfCntsLoMapping_96_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15716:35]
    node perfCntsLoMapping_96_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15718:35]
    node perfCntsLoMapping_97_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15720:35]
    node perfCntsLoMapping_97_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15722:35]
    node perfCntsLoMapping_98_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15724:35]
    node perfCntsLoMapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15726:35]
    node perfCntsLoMapping_99_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15728:35]
    node perfCntsLoMapping_99_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15730:35]
    node perfCntsLoMapping_100_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15732:36]
    node perfCntsLoMapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15734:36]
    node perfCntsLoMapping_101_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15736:36]
    node perfCntsLoMapping_101_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15738:36]
    node perfCntsLoMapping_102_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15740:36]
    node perfCntsLoMapping_102_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15742:36]
    node perfCntsLoMapping_103_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15744:36]
    node perfCntsLoMapping_103_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15746:36]
    node perfCntsLoMapping_104_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15748:36]
    node perfCntsLoMapping_104_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15750:36]
    node perfCntsLoMapping_105_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15752:36]
    node perfCntsLoMapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15754:36]
    node perfCntsLoMapping_106_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15756:36]
    node perfCntsLoMapping_106_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15758:36]
    node perfCntsLoMapping_107_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15760:36]
    node perfCntsLoMapping_107_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15762:36]
    node perfCntsLoMapping_108_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15764:36]
    node perfCntsLoMapping_108_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15766:36]
    node perfCntsLoMapping_109_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15768:36]
    node perfCntsLoMapping_109_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15770:36]
    node perfCntsLoMapping_110_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15772:36]
    node perfCntsLoMapping_110_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15774:36]
    node perfCntsLoMapping_111_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15776:36]
    node perfCntsLoMapping_111_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15778:36]
    node perfCntsLoMapping_112_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15780:36]
    node perfCntsLoMapping_112_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15782:36]
    node perfCntsLoMapping_113_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15784:36]
    node perfCntsLoMapping_113_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15786:36]
    node perfCntsLoMapping_114_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15788:36]
    node perfCntsLoMapping_114_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15790:36]
    node perfCntsLoMapping_115_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15792:36]
    node perfCntsLoMapping_115_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15794:36]
    node perfCntsLoMapping_116_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15796:36]
    node perfCntsLoMapping_116_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15798:36]
    node perfCntsLoMapping_117_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15800:36]
    node perfCntsLoMapping_117_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15802:36]
    node perfCntsLoMapping_118_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15804:36]
    node perfCntsLoMapping_118_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15806:36]
    node perfCntsLoMapping_119_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15808:36]
    node perfCntsLoMapping_119_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15810:36]
    node perfCntsLoMapping_120_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15812:36]
    node perfCntsLoMapping_120_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15814:36]
    node perfCntsLoMapping_121_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15816:36]
    node perfCntsLoMapping_121_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15818:36]
    node perfCntsLoMapping_122_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15820:36]
    node perfCntsLoMapping_122_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15822:36]
    node perfCntsLoMapping_123_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15824:36]
    node perfCntsLoMapping_123_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15826:36]
    node perfCntsLoMapping_124_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15828:36]
    node perfCntsLoMapping_124_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15830:36]
    node perfCntsLoMapping_125_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15832:36]
    node perfCntsLoMapping_125_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15834:36]
    node perfCntsLoMapping_126_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15836:36]
    node perfCntsLoMapping_126_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15838:36]
    node perfCntsLoMapping_127_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15840:36]
    node perfCntsLoMapping_127_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15842:36]
    node perfCntsHiMapping_0_2_1 = bits(perfCnts_0, 63, 32) @[build/NutShell.fir.opt.mlir 15844:34]
    node perfCntsHiMapping_0_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15846:34]
    node perfCntsHiMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15848:34]
    node perfCntsHiMapping_1_2_1 = bits(perfCnts_1, 63, 32) @[build/NutShell.fir.opt.mlir 15850:34]
    node perfCntsHiMapping_1_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15852:34]
    node perfCntsHiMapping_1_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15854:34]
    node perfCntsHiMapping_2_2_1 = bits(perfCnts_2, 63, 32) @[build/NutShell.fir.opt.mlir 15856:34]
    node perfCntsHiMapping_2_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15858:34]
    node perfCntsHiMapping_2_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15860:34]
    node perfCntsHiMapping_3_2_1 = bits(perfCnts_3, 63, 32) @[build/NutShell.fir.opt.mlir 15862:34]
    node perfCntsHiMapping_3_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15864:34]
    node perfCntsHiMapping_3_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15866:34]
    node perfCntsHiMapping_4_2_1 = bits(perfCnts_4, 63, 32) @[build/NutShell.fir.opt.mlir 15868:34]
    node perfCntsHiMapping_4_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15870:34]
    node perfCntsHiMapping_4_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15872:34]
    node perfCntsHiMapping_5_2_1 = bits(perfCnts_5, 63, 32) @[build/NutShell.fir.opt.mlir 15874:34]
    node perfCntsHiMapping_5_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15876:34]
    node perfCntsHiMapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15878:34]
    node perfCntsHiMapping_6_2_1 = bits(perfCnts_6, 63, 32) @[build/NutShell.fir.opt.mlir 15880:34]
    node perfCntsHiMapping_6_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15882:34]
    node perfCntsHiMapping_6_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15884:34]
    node perfCntsHiMapping_7_2_1 = bits(perfCnts_7, 63, 32) @[build/NutShell.fir.opt.mlir 15886:34]
    node perfCntsHiMapping_7_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15888:34]
    node perfCntsHiMapping_7_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15890:34]
    node perfCntsHiMapping_8_2_1 = bits(perfCnts_8, 63, 32) @[build/NutShell.fir.opt.mlir 15892:34]
    node perfCntsHiMapping_8_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15894:34]
    node perfCntsHiMapping_8_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15896:34]
    node perfCntsHiMapping_9_2_1 = bits(perfCnts_9, 63, 32) @[build/NutShell.fir.opt.mlir 15898:34]
    node perfCntsHiMapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15900:34]
    node perfCntsHiMapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15902:34]
    node perfCntsHiMapping_10_2_1 = bits(perfCnts_10, 63, 32) @[build/NutShell.fir.opt.mlir 15904:35]
    node perfCntsHiMapping_10_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15906:35]
    node perfCntsHiMapping_10_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15908:35]
    node perfCntsHiMapping_11_2_1 = bits(perfCnts_11, 63, 32) @[build/NutShell.fir.opt.mlir 15910:35]
    node perfCntsHiMapping_11_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15912:35]
    node perfCntsHiMapping_11_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15914:35]
    node perfCntsHiMapping_12_2_1 = bits(perfCnts_12, 63, 32) @[build/NutShell.fir.opt.mlir 15916:35]
    node perfCntsHiMapping_12_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15918:35]
    node perfCntsHiMapping_12_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15920:35]
    node perfCntsHiMapping_13_2_1 = bits(perfCnts_13, 63, 32) @[build/NutShell.fir.opt.mlir 15922:35]
    node perfCntsHiMapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15924:35]
    node perfCntsHiMapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15926:35]
    node perfCntsHiMapping_14_2_1 = bits(perfCnts_14, 63, 32) @[build/NutShell.fir.opt.mlir 15928:35]
    node perfCntsHiMapping_14_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15930:35]
    node perfCntsHiMapping_14_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15932:35]
    node perfCntsHiMapping_15_2_1 = bits(perfCnts_15, 63, 32) @[build/NutShell.fir.opt.mlir 15934:35]
    node perfCntsHiMapping_15_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15936:35]
    node perfCntsHiMapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15938:35]
    node perfCntsHiMapping_16_2_1 = bits(perfCnts_16, 63, 32) @[build/NutShell.fir.opt.mlir 15940:35]
    node perfCntsHiMapping_16_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15942:35]
    node perfCntsHiMapping_16_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15944:35]
    node perfCntsHiMapping_17_2_1 = bits(perfCnts_17, 63, 32) @[build/NutShell.fir.opt.mlir 15946:35]
    node perfCntsHiMapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15948:35]
    node perfCntsHiMapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15950:35]
    node perfCntsHiMapping_18_2_1 = bits(perfCnts_18, 63, 32) @[build/NutShell.fir.opt.mlir 15952:35]
    node perfCntsHiMapping_18_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15954:35]
    node perfCntsHiMapping_18_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15956:35]
    node perfCntsHiMapping_19_2_1 = bits(perfCnts_19, 63, 32) @[build/NutShell.fir.opt.mlir 15958:35]
    node perfCntsHiMapping_19_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15960:35]
    node perfCntsHiMapping_19_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15962:35]
    node perfCntsHiMapping_20_2_1 = bits(perfCnts_20, 63, 32) @[build/NutShell.fir.opt.mlir 15964:35]
    node perfCntsHiMapping_20_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15966:35]
    node perfCntsHiMapping_20_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15968:35]
    node perfCntsHiMapping_21_2_1 = bits(perfCnts_21, 63, 32) @[build/NutShell.fir.opt.mlir 15970:35]
    node perfCntsHiMapping_21_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15972:35]
    node perfCntsHiMapping_21_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15974:35]
    node perfCntsHiMapping_22_2_1 = bits(perfCnts_22, 63, 32) @[build/NutShell.fir.opt.mlir 15976:35]
    node perfCntsHiMapping_22_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15978:35]
    node perfCntsHiMapping_22_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15980:35]
    node perfCntsHiMapping_23_2_1 = bits(perfCnts_23, 63, 32) @[build/NutShell.fir.opt.mlir 15982:35]
    node perfCntsHiMapping_23_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15984:35]
    node perfCntsHiMapping_23_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15986:35]
    node perfCntsHiMapping_24_2_1 = bits(perfCnts_24, 63, 32) @[build/NutShell.fir.opt.mlir 15988:35]
    node perfCntsHiMapping_24_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15990:35]
    node perfCntsHiMapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15992:35]
    node perfCntsHiMapping_25_2_1 = bits(perfCnts_25, 63, 32) @[build/NutShell.fir.opt.mlir 15994:35]
    node perfCntsHiMapping_25_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15996:35]
    node perfCntsHiMapping_25_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15998:35]
    node perfCntsHiMapping_26_2_1 = bits(perfCnts_26, 63, 32) @[build/NutShell.fir.opt.mlir 16000:35]
    node perfCntsHiMapping_26_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16002:35]
    node perfCntsHiMapping_26_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16004:35]
    node perfCntsHiMapping_27_2_1 = bits(perfCnts_27, 63, 32) @[build/NutShell.fir.opt.mlir 16006:35]
    node perfCntsHiMapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16008:35]
    node perfCntsHiMapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16010:35]
    node perfCntsHiMapping_28_2_1 = bits(perfCnts_28, 63, 32) @[build/NutShell.fir.opt.mlir 16012:35]
    node perfCntsHiMapping_28_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16014:35]
    node perfCntsHiMapping_28_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16016:35]
    node perfCntsHiMapping_29_2_1 = bits(perfCnts_29, 63, 32) @[build/NutShell.fir.opt.mlir 16018:35]
    node perfCntsHiMapping_29_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16020:35]
    node perfCntsHiMapping_29_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16022:35]
    node perfCntsHiMapping_30_2_1 = bits(perfCnts_30, 63, 32) @[build/NutShell.fir.opt.mlir 16024:35]
    node perfCntsHiMapping_30_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16026:35]
    node perfCntsHiMapping_30_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16028:35]
    node perfCntsHiMapping_31_2_1 = bits(perfCnts_31, 63, 32) @[build/NutShell.fir.opt.mlir 16030:35]
    node perfCntsHiMapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16032:35]
    node perfCntsHiMapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16034:35]
    node perfCntsHiMapping_32_2_1 = bits(perfCnts_32, 63, 32) @[build/NutShell.fir.opt.mlir 16036:35]
    node perfCntsHiMapping_32_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16038:35]
    node perfCntsHiMapping_32_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16040:35]
    node perfCntsHiMapping_33_2_1 = bits(perfCnts_33, 63, 32) @[build/NutShell.fir.opt.mlir 16042:35]
    node perfCntsHiMapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16044:35]
    node perfCntsHiMapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16046:35]
    node perfCntsHiMapping_34_2_1 = bits(perfCnts_34, 63, 32) @[build/NutShell.fir.opt.mlir 16048:35]
    node perfCntsHiMapping_34_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16050:35]
    node perfCntsHiMapping_34_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16052:35]
    node perfCntsHiMapping_35_2_1 = bits(perfCnts_35, 63, 32) @[build/NutShell.fir.opt.mlir 16054:35]
    node perfCntsHiMapping_35_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16056:35]
    node perfCntsHiMapping_35_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16058:35]
    node perfCntsHiMapping_36_2_1 = bits(perfCnts_36, 63, 32) @[build/NutShell.fir.opt.mlir 16060:35]
    node perfCntsHiMapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16062:35]
    node perfCntsHiMapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16064:35]
    node perfCntsHiMapping_37_2_1 = bits(perfCnts_37, 63, 32) @[build/NutShell.fir.opt.mlir 16066:35]
    node perfCntsHiMapping_37_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16068:35]
    node perfCntsHiMapping_37_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16070:35]
    node perfCntsHiMapping_38_2_1 = bits(perfCnts_38, 63, 32) @[build/NutShell.fir.opt.mlir 16072:35]
    node perfCntsHiMapping_38_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16074:35]
    node perfCntsHiMapping_38_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16076:35]
    node perfCntsHiMapping_39_2_1 = bits(perfCnts_39, 63, 32) @[build/NutShell.fir.opt.mlir 16078:35]
    node perfCntsHiMapping_39_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16080:35]
    node perfCntsHiMapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16082:35]
    node perfCntsHiMapping_40_2_1 = bits(perfCnts_40, 63, 32) @[build/NutShell.fir.opt.mlir 16084:35]
    node perfCntsHiMapping_40_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16086:35]
    node perfCntsHiMapping_40_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16088:35]
    node perfCntsHiMapping_41_2_1 = bits(perfCnts_41, 63, 32) @[build/NutShell.fir.opt.mlir 16090:35]
    node perfCntsHiMapping_41_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16092:35]
    node perfCntsHiMapping_41_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16094:35]
    node perfCntsHiMapping_42_2_1 = bits(perfCnts_42, 63, 32) @[build/NutShell.fir.opt.mlir 16096:35]
    node perfCntsHiMapping_42_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16098:35]
    node perfCntsHiMapping_42_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16100:35]
    node perfCntsHiMapping_43_2_1 = bits(perfCnts_43, 63, 32) @[build/NutShell.fir.opt.mlir 16102:35]
    node perfCntsHiMapping_43_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16104:35]
    node perfCntsHiMapping_43_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16106:35]
    node perfCntsHiMapping_44_2_1 = bits(perfCnts_44, 63, 32) @[build/NutShell.fir.opt.mlir 16108:35]
    node perfCntsHiMapping_44_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16110:35]
    node perfCntsHiMapping_44_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16112:35]
    node perfCntsHiMapping_45_2_1 = bits(perfCnts_45, 63, 32) @[build/NutShell.fir.opt.mlir 16114:35]
    node perfCntsHiMapping_45_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16116:35]
    node perfCntsHiMapping_45_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16118:35]
    node perfCntsHiMapping_46_2_1 = bits(perfCnts_46, 63, 32) @[build/NutShell.fir.opt.mlir 16120:35]
    node perfCntsHiMapping_46_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16122:35]
    node perfCntsHiMapping_46_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16124:35]
    node perfCntsHiMapping_47_2_1 = bits(perfCnts_47, 63, 32) @[build/NutShell.fir.opt.mlir 16126:35]
    node perfCntsHiMapping_47_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16128:35]
    node perfCntsHiMapping_47_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16130:35]
    node perfCntsHiMapping_48_2_1 = bits(perfCnts_48, 63, 32) @[build/NutShell.fir.opt.mlir 16132:35]
    node perfCntsHiMapping_48_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16134:35]
    node perfCntsHiMapping_48_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16136:35]
    node perfCntsHiMapping_49_2_1 = bits(perfCnts_49, 63, 32) @[build/NutShell.fir.opt.mlir 16138:35]
    node perfCntsHiMapping_49_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16140:35]
    node perfCntsHiMapping_49_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16142:35]
    node perfCntsHiMapping_50_2_1 = bits(perfCnts_50, 63, 32) @[build/NutShell.fir.opt.mlir 16144:35]
    node perfCntsHiMapping_50_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16146:35]
    node perfCntsHiMapping_50_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16148:35]
    node perfCntsHiMapping_51_2_1 = bits(perfCnts_51, 63, 32) @[build/NutShell.fir.opt.mlir 16150:35]
    node perfCntsHiMapping_51_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16152:35]
    node perfCntsHiMapping_51_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16154:35]
    node perfCntsHiMapping_52_2_1 = bits(perfCnts_52, 63, 32) @[build/NutShell.fir.opt.mlir 16156:35]
    node perfCntsHiMapping_52_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16158:35]
    node perfCntsHiMapping_52_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16160:35]
    node perfCntsHiMapping_53_2_1 = bits(perfCnts_53, 63, 32) @[build/NutShell.fir.opt.mlir 16162:35]
    node perfCntsHiMapping_53_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16164:35]
    node perfCntsHiMapping_53_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16166:35]
    node perfCntsHiMapping_54_2_1 = bits(perfCnts_54, 63, 32) @[build/NutShell.fir.opt.mlir 16168:35]
    node perfCntsHiMapping_54_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16170:35]
    node perfCntsHiMapping_54_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16172:35]
    node perfCntsHiMapping_55_2_1 = bits(perfCnts_55, 63, 32) @[build/NutShell.fir.opt.mlir 16174:35]
    node perfCntsHiMapping_55_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16176:35]
    node perfCntsHiMapping_55_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16178:35]
    node perfCntsHiMapping_56_2_1 = bits(perfCnts_56, 63, 32) @[build/NutShell.fir.opt.mlir 16180:35]
    node perfCntsHiMapping_56_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16182:35]
    node perfCntsHiMapping_56_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16184:35]
    node perfCntsHiMapping_57_2_1 = bits(perfCnts_57, 63, 32) @[build/NutShell.fir.opt.mlir 16186:35]
    node perfCntsHiMapping_57_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16188:35]
    node perfCntsHiMapping_57_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16190:35]
    node perfCntsHiMapping_58_2_1 = bits(perfCnts_58, 63, 32) @[build/NutShell.fir.opt.mlir 16192:35]
    node perfCntsHiMapping_58_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16194:35]
    node perfCntsHiMapping_58_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16196:35]
    node perfCntsHiMapping_59_2_1 = bits(perfCnts_59, 63, 32) @[build/NutShell.fir.opt.mlir 16198:35]
    node perfCntsHiMapping_59_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16200:35]
    node perfCntsHiMapping_59_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16202:35]
    node perfCntsHiMapping_60_2_1 = bits(perfCnts_60, 63, 32) @[build/NutShell.fir.opt.mlir 16204:35]
    node perfCntsHiMapping_60_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16206:35]
    node perfCntsHiMapping_60_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16208:35]
    node perfCntsHiMapping_61_2_1 = bits(perfCnts_61, 63, 32) @[build/NutShell.fir.opt.mlir 16210:35]
    node perfCntsHiMapping_61_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16212:35]
    node perfCntsHiMapping_61_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16214:35]
    node perfCntsHiMapping_62_2_1 = bits(perfCnts_62, 63, 32) @[build/NutShell.fir.opt.mlir 16216:35]
    node perfCntsHiMapping_62_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16218:35]
    node perfCntsHiMapping_62_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16220:35]
    node perfCntsHiMapping_63_2_1 = bits(perfCnts_63, 63, 32) @[build/NutShell.fir.opt.mlir 16222:35]
    node perfCntsHiMapping_63_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16224:35]
    node perfCntsHiMapping_63_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16226:35]
    node perfCntsHiMapping_64_2_1 = bits(perfCnts_64, 63, 32) @[build/NutShell.fir.opt.mlir 16228:35]
    node perfCntsHiMapping_64_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16230:35]
    node perfCntsHiMapping_64_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16232:35]
    node perfCntsHiMapping_65_2_1 = bits(perfCnts_65, 63, 32) @[build/NutShell.fir.opt.mlir 16234:35]
    node perfCntsHiMapping_65_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16236:35]
    node perfCntsHiMapping_65_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16238:35]
    node perfCntsHiMapping_66_2_1 = bits(perfCnts_66, 63, 32) @[build/NutShell.fir.opt.mlir 16240:35]
    node perfCntsHiMapping_66_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16242:35]
    node perfCntsHiMapping_66_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16244:35]
    node perfCntsHiMapping_67_2_1 = bits(perfCnts_67, 63, 32) @[build/NutShell.fir.opt.mlir 16246:35]
    node perfCntsHiMapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16248:35]
    node perfCntsHiMapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16250:35]
    node perfCntsHiMapping_68_2_1 = bits(perfCnts_68, 63, 32) @[build/NutShell.fir.opt.mlir 16252:35]
    node perfCntsHiMapping_68_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16254:35]
    node perfCntsHiMapping_68_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16256:35]
    node perfCntsHiMapping_69_2_1 = bits(perfCnts_69, 63, 32) @[build/NutShell.fir.opt.mlir 16258:35]
    node perfCntsHiMapping_69_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16260:35]
    node perfCntsHiMapping_69_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16262:35]
    node perfCntsHiMapping_70_2_1 = bits(perfCnts_70, 63, 32) @[build/NutShell.fir.opt.mlir 16264:35]
    node perfCntsHiMapping_70_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16266:35]
    node perfCntsHiMapping_70_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16268:35]
    node perfCntsHiMapping_71_2_1 = bits(perfCnts_71, 63, 32) @[build/NutShell.fir.opt.mlir 16270:35]
    node perfCntsHiMapping_71_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16272:35]
    node perfCntsHiMapping_71_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16274:35]
    node perfCntsHiMapping_72_2_1 = bits(perfCnts_72, 63, 32) @[build/NutShell.fir.opt.mlir 16276:35]
    node perfCntsHiMapping_72_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16278:35]
    node perfCntsHiMapping_72_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16280:35]
    node perfCntsHiMapping_73_2_1 = bits(perfCnts_73, 63, 32) @[build/NutShell.fir.opt.mlir 16282:35]
    node perfCntsHiMapping_73_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16284:35]
    node perfCntsHiMapping_73_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16286:35]
    node perfCntsHiMapping_74_2_1 = bits(perfCnts_74, 63, 32) @[build/NutShell.fir.opt.mlir 16288:35]
    node perfCntsHiMapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16290:35]
    node perfCntsHiMapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16292:35]
    node perfCntsHiMapping_75_2_1 = bits(perfCnts_75, 63, 32) @[build/NutShell.fir.opt.mlir 16294:35]
    node perfCntsHiMapping_75_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16296:35]
    node perfCntsHiMapping_75_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16298:35]
    node perfCntsHiMapping_76_2_1 = bits(perfCnts_76, 63, 32) @[build/NutShell.fir.opt.mlir 16300:35]
    node perfCntsHiMapping_76_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16302:35]
    node perfCntsHiMapping_76_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16304:35]
    node perfCntsHiMapping_77_2_1 = bits(perfCnts_77, 63, 32) @[build/NutShell.fir.opt.mlir 16306:35]
    node perfCntsHiMapping_77_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16308:35]
    node perfCntsHiMapping_77_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16310:35]
    node perfCntsHiMapping_78_2_1 = bits(perfCnts_78, 63, 32) @[build/NutShell.fir.opt.mlir 16312:35]
    node perfCntsHiMapping_78_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16314:35]
    node perfCntsHiMapping_78_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16316:35]
    node perfCntsHiMapping_79_2_1 = bits(perfCnts_79, 63, 32) @[build/NutShell.fir.opt.mlir 16318:35]
    node perfCntsHiMapping_79_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16320:35]
    node perfCntsHiMapping_79_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16322:35]
    node perfCntsHiMapping_80_2_1 = bits(perfCnts_80, 63, 32) @[build/NutShell.fir.opt.mlir 16324:35]
    node perfCntsHiMapping_80_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16326:35]
    node perfCntsHiMapping_80_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16328:35]
    node perfCntsHiMapping_81_2_1 = bits(perfCnts_81, 63, 32) @[build/NutShell.fir.opt.mlir 16330:35]
    node perfCntsHiMapping_81_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16332:35]
    node perfCntsHiMapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16334:35]
    node perfCntsHiMapping_82_2_1 = bits(perfCnts_82, 63, 32) @[build/NutShell.fir.opt.mlir 16336:35]
    node perfCntsHiMapping_82_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16338:35]
    node perfCntsHiMapping_82_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16340:35]
    node perfCntsHiMapping_83_2_1 = bits(perfCnts_83, 63, 32) @[build/NutShell.fir.opt.mlir 16342:35]
    node perfCntsHiMapping_83_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16344:35]
    node perfCntsHiMapping_83_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16346:35]
    node perfCntsHiMapping_84_2_1 = bits(perfCnts_84, 63, 32) @[build/NutShell.fir.opt.mlir 16348:35]
    node perfCntsHiMapping_84_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16350:35]
    node perfCntsHiMapping_84_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16352:35]
    node perfCntsHiMapping_85_2_1 = bits(perfCnts_85, 63, 32) @[build/NutShell.fir.opt.mlir 16354:35]
    node perfCntsHiMapping_85_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16356:35]
    node perfCntsHiMapping_85_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16358:35]
    node perfCntsHiMapping_86_2_1 = bits(perfCnts_86, 63, 32) @[build/NutShell.fir.opt.mlir 16360:35]
    node perfCntsHiMapping_86_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16362:35]
    node perfCntsHiMapping_86_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16364:35]
    node perfCntsHiMapping_87_2_1 = bits(perfCnts_87, 63, 32) @[build/NutShell.fir.opt.mlir 16366:35]
    node perfCntsHiMapping_87_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16368:35]
    node perfCntsHiMapping_87_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16370:35]
    node perfCntsHiMapping_88_2_1 = bits(perfCnts_88, 63, 32) @[build/NutShell.fir.opt.mlir 16372:35]
    node perfCntsHiMapping_88_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16374:35]
    node perfCntsHiMapping_88_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16376:35]
    node perfCntsHiMapping_89_2_1 = bits(perfCnts_89, 63, 32) @[build/NutShell.fir.opt.mlir 16378:35]
    node perfCntsHiMapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16380:35]
    node perfCntsHiMapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16382:35]
    node perfCntsHiMapping_90_2_1 = bits(perfCnts_90, 63, 32) @[build/NutShell.fir.opt.mlir 16384:35]
    node perfCntsHiMapping_90_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16386:35]
    node perfCntsHiMapping_90_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16388:35]
    node perfCntsHiMapping_91_2_1 = bits(perfCnts_91, 63, 32) @[build/NutShell.fir.opt.mlir 16390:35]
    node perfCntsHiMapping_91_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16392:35]
    node perfCntsHiMapping_91_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16394:35]
    node perfCntsHiMapping_92_2_1 = bits(perfCnts_92, 63, 32) @[build/NutShell.fir.opt.mlir 16396:35]
    node perfCntsHiMapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16398:35]
    node perfCntsHiMapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16400:35]
    node perfCntsHiMapping_93_2_1 = bits(perfCnts_93, 63, 32) @[build/NutShell.fir.opt.mlir 16402:35]
    node perfCntsHiMapping_93_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16404:35]
    node perfCntsHiMapping_93_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16406:35]
    node perfCntsHiMapping_94_2_1 = bits(perfCnts_94, 63, 32) @[build/NutShell.fir.opt.mlir 16408:35]
    node perfCntsHiMapping_94_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16410:35]
    node perfCntsHiMapping_94_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16412:35]
    node perfCntsHiMapping_95_2_1 = bits(perfCnts_95, 63, 32) @[build/NutShell.fir.opt.mlir 16414:35]
    node perfCntsHiMapping_95_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16416:35]
    node perfCntsHiMapping_95_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16418:35]
    node perfCntsHiMapping_96_2_1 = bits(perfCnts_96, 63, 32) @[build/NutShell.fir.opt.mlir 16420:35]
    node perfCntsHiMapping_96_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16422:35]
    node perfCntsHiMapping_96_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16424:35]
    node perfCntsHiMapping_97_2_1 = bits(perfCnts_97, 63, 32) @[build/NutShell.fir.opt.mlir 16426:35]
    node perfCntsHiMapping_97_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16428:35]
    node perfCntsHiMapping_97_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16430:35]
    node perfCntsHiMapping_98_2_1 = bits(perfCnts_98, 63, 32) @[build/NutShell.fir.opt.mlir 16432:35]
    node perfCntsHiMapping_98_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16434:35]
    node perfCntsHiMapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16436:35]
    node perfCntsHiMapping_99_2_1 = bits(perfCnts_99, 63, 32) @[build/NutShell.fir.opt.mlir 16438:35]
    node perfCntsHiMapping_99_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16440:35]
    node perfCntsHiMapping_99_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16442:35]
    node perfCntsHiMapping_100_2_1 = bits(perfCnts_100, 63, 32) @[build/NutShell.fir.opt.mlir 16444:36]
    node perfCntsHiMapping_100_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16446:36]
    node perfCntsHiMapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16448:36]
    node perfCntsHiMapping_101_2_1 = bits(perfCnts_101, 63, 32) @[build/NutShell.fir.opt.mlir 16450:36]
    node perfCntsHiMapping_101_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16452:36]
    node perfCntsHiMapping_101_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16454:36]
    node perfCntsHiMapping_102_2_1 = bits(perfCnts_102, 63, 32) @[build/NutShell.fir.opt.mlir 16456:36]
    node perfCntsHiMapping_102_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16458:36]
    node perfCntsHiMapping_102_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16460:36]
    node perfCntsHiMapping_103_2_1 = bits(perfCnts_103, 63, 32) @[build/NutShell.fir.opt.mlir 16462:36]
    node perfCntsHiMapping_103_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16464:36]
    node perfCntsHiMapping_103_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16466:36]
    node perfCntsHiMapping_104_2_1 = bits(perfCnts_104, 63, 32) @[build/NutShell.fir.opt.mlir 16468:36]
    node perfCntsHiMapping_104_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16470:36]
    node perfCntsHiMapping_104_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16472:36]
    node perfCntsHiMapping_105_2_1 = bits(perfCnts_105, 63, 32) @[build/NutShell.fir.opt.mlir 16474:36]
    node perfCntsHiMapping_105_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16476:36]
    node perfCntsHiMapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16478:36]
    node perfCntsHiMapping_106_2_1 = bits(perfCnts_106, 63, 32) @[build/NutShell.fir.opt.mlir 16480:36]
    node perfCntsHiMapping_106_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16482:36]
    node perfCntsHiMapping_106_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16484:36]
    node perfCntsHiMapping_107_2_1 = bits(perfCnts_107, 63, 32) @[build/NutShell.fir.opt.mlir 16486:36]
    node perfCntsHiMapping_107_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16488:36]
    node perfCntsHiMapping_107_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16490:36]
    node perfCntsHiMapping_108_2_1 = bits(perfCnts_108, 63, 32) @[build/NutShell.fir.opt.mlir 16492:36]
    node perfCntsHiMapping_108_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16494:36]
    node perfCntsHiMapping_108_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16496:36]
    node perfCntsHiMapping_109_2_1 = bits(perfCnts_109, 63, 32) @[build/NutShell.fir.opt.mlir 16498:36]
    node perfCntsHiMapping_109_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16500:36]
    node perfCntsHiMapping_109_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16502:36]
    node perfCntsHiMapping_110_2_1 = bits(perfCnts_110, 63, 32) @[build/NutShell.fir.opt.mlir 16504:36]
    node perfCntsHiMapping_110_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16506:36]
    node perfCntsHiMapping_110_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16508:36]
    node perfCntsHiMapping_111_2_1 = bits(perfCnts_111, 63, 32) @[build/NutShell.fir.opt.mlir 16510:36]
    node perfCntsHiMapping_111_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16512:36]
    node perfCntsHiMapping_111_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16514:36]
    node perfCntsHiMapping_112_2_1 = bits(perfCnts_112, 63, 32) @[build/NutShell.fir.opt.mlir 16516:36]
    node perfCntsHiMapping_112_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16518:36]
    node perfCntsHiMapping_112_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16520:36]
    node perfCntsHiMapping_113_2_1 = bits(perfCnts_113, 63, 32) @[build/NutShell.fir.opt.mlir 16522:36]
    node perfCntsHiMapping_113_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16524:36]
    node perfCntsHiMapping_113_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16526:36]
    node perfCntsHiMapping_114_2_1 = bits(perfCnts_114, 63, 32) @[build/NutShell.fir.opt.mlir 16528:36]
    node perfCntsHiMapping_114_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16530:36]
    node perfCntsHiMapping_114_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16532:36]
    node perfCntsHiMapping_115_2_1 = bits(perfCnts_115, 63, 32) @[build/NutShell.fir.opt.mlir 16534:36]
    node perfCntsHiMapping_115_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16536:36]
    node perfCntsHiMapping_115_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16538:36]
    node perfCntsHiMapping_116_2_1 = bits(perfCnts_116, 63, 32) @[build/NutShell.fir.opt.mlir 16540:36]
    node perfCntsHiMapping_116_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16542:36]
    node perfCntsHiMapping_116_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16544:36]
    node perfCntsHiMapping_117_2_1 = bits(perfCnts_117, 63, 32) @[build/NutShell.fir.opt.mlir 16546:36]
    node perfCntsHiMapping_117_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16548:36]
    node perfCntsHiMapping_117_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16550:36]
    node perfCntsHiMapping_118_2_1 = bits(perfCnts_118, 63, 32) @[build/NutShell.fir.opt.mlir 16552:36]
    node perfCntsHiMapping_118_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16554:36]
    node perfCntsHiMapping_118_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16556:36]
    node perfCntsHiMapping_119_2_1 = bits(perfCnts_119, 63, 32) @[build/NutShell.fir.opt.mlir 16558:36]
    node perfCntsHiMapping_119_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16560:36]
    node perfCntsHiMapping_119_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16562:36]
    node perfCntsHiMapping_120_2_1 = bits(perfCnts_120, 63, 32) @[build/NutShell.fir.opt.mlir 16564:36]
    node perfCntsHiMapping_120_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16566:36]
    node perfCntsHiMapping_120_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16568:36]
    node perfCntsHiMapping_121_2_1 = bits(perfCnts_121, 63, 32) @[build/NutShell.fir.opt.mlir 16570:36]
    node perfCntsHiMapping_121_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16572:36]
    node perfCntsHiMapping_121_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16574:36]
    node perfCntsHiMapping_122_2_1 = bits(perfCnts_122, 63, 32) @[build/NutShell.fir.opt.mlir 16576:36]
    node perfCntsHiMapping_122_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16578:36]
    node perfCntsHiMapping_122_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16580:36]
    node perfCntsHiMapping_123_2_1 = bits(perfCnts_123, 63, 32) @[build/NutShell.fir.opt.mlir 16582:36]
    node perfCntsHiMapping_123_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16584:36]
    node perfCntsHiMapping_123_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16586:36]
    node perfCntsHiMapping_124_2_1 = bits(perfCnts_124, 63, 32) @[build/NutShell.fir.opt.mlir 16588:36]
    node perfCntsHiMapping_124_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16590:36]
    node perfCntsHiMapping_124_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16592:36]
    node perfCntsHiMapping_125_2_1 = bits(perfCnts_125, 63, 32) @[build/NutShell.fir.opt.mlir 16594:36]
    node perfCntsHiMapping_125_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16596:36]
    node perfCntsHiMapping_125_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16598:36]
    node perfCntsHiMapping_126_2_1 = bits(perfCnts_126, 63, 32) @[build/NutShell.fir.opt.mlir 16600:36]
    node perfCntsHiMapping_126_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16602:36]
    node perfCntsHiMapping_126_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16604:36]
    node perfCntsHiMapping_127_2_1 = bits(perfCnts_127, 63, 32) @[build/NutShell.fir.opt.mlir 16606:36]
    node perfCntsHiMapping_127_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16608:36]
    node perfCntsHiMapping_127_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16610:36]
    node mapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16612:25]
    node mapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16614:25]
    node mapping_149_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16616:26]
    node mapping_149_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16618:26]
    node mapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16620:25]
    node mapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16622:25]
    node mapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16624:25]
    node mapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16626:25]
    node mapping_155_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16628:26]
    node mapping_155_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16630:26]
    node mapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16632:25]
    node mapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16634:25]
    node mapping_lo = cat(mip.s.s, mip.s.u) @[build/NutShell.fir.opt.mlir 16636:21]
    node mapping_hi = cat(mip.s.m, mip.s.h) @[build/NutShell.fir.opt.mlir 16638:21]
    node _mapping_T = cat(mapping_hi, mapping_lo) @[build/NutShell.fir.opt.mlir 16640:21]
    node mapping_lo_1 = cat(mip.t.s, mip.t.u) @[build/NutShell.fir.opt.mlir 16642:23]
    node mapping_hi_1 = cat(mip.t.m, mip.t.h) @[build/NutShell.fir.opt.mlir 16644:23]
    node _mapping_T_1 = cat(mapping_hi_1, mapping_lo_1) @[build/NutShell.fir.opt.mlir 16646:23]
    node mapping_lo_2 = cat(mip.e.s, mip.e.u) @[build/NutShell.fir.opt.mlir 16648:23]
    node mapping_hi_2 = cat(mip.e.m, mip.e.h) @[build/NutShell.fir.opt.mlir 16650:23]
    node _mapping_T_2 = cat(mapping_hi_2, mapping_lo_2) @[build/NutShell.fir.opt.mlir 16652:23]
    node mapping_hi_3 = cat(_mapping_T_2, _mapping_T_1) @[build/NutShell.fir.opt.mlir 16654:23]
    node mapping_47_2_1 = cat(mapping_hi_3, _mapping_T) @[build/NutShell.fir.opt.mlir 16656:25]
    node mapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16658:24]
    node mapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16660:24]
    node mapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16662:25]
    node mapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16664:24]
    node mapping_138_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16666:26]
    node mapping_146_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16668:26]
    node mapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16670:25]
    node mapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16672:25]
    node mapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16674:25]
    node mapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16676:25]
    node mapping_132_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16678:26]
    node mapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16680:25]
    node mapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16682:25]
    node mapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16684:25]
    node mapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16686:25]
    node mapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16688:25]
    node mapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16690:25]
    node mapping_143_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16692:26]
    node mapping_143_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16694:26]
    node mapping_147_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16696:26]
    node mapping_147_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16698:26]
    node mapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16700:25]
    node mapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16702:25]
    node mapping_148_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16704:26]
    node mapping_148_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16706:26]
    node mapping_lo_3 = cat(mip.s.s, mip.s.u) @[build/NutShell.fir.opt.mlir 16708:23]
    node mapping_hi_4 = cat(mip.s.m, mip.s.h) @[build/NutShell.fir.opt.mlir 16710:23]
    node _mapping_T_3 = cat(mapping_hi_4, mapping_lo_3) @[build/NutShell.fir.opt.mlir 16712:23]
    node mapping_lo_4 = cat(mip.t.s, mip.t.u) @[build/NutShell.fir.opt.mlir 16714:23]
    node mapping_hi_5 = cat(mip.t.m, mip.t.h) @[build/NutShell.fir.opt.mlir 16716:23]
    node _mapping_T_4 = cat(mapping_hi_5, mapping_lo_4) @[build/NutShell.fir.opt.mlir 16718:23]
    node mapping_lo_5 = cat(mip.e.s, mip.e.u) @[build/NutShell.fir.opt.mlir 16720:23]
    node mapping_hi_6 = cat(mip.e.m, mip.e.h) @[build/NutShell.fir.opt.mlir 16722:23]
    node _mapping_T_5 = cat(mapping_hi_6, mapping_lo_5) @[build/NutShell.fir.opt.mlir 16724:23]
    node mapping_hi_7 = cat(_mapping_T_5, _mapping_T_4) @[build/NutShell.fir.opt.mlir 16726:23]
    node mapping_105_2_1 = cat(mapping_hi_7, _mapping_T_3) @[build/NutShell.fir.opt.mlir 16728:26]
    node mapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16730:26]
    node mapping_151_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16732:26]
    node mapping_151_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16734:26]
    node mapping_141_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16736:26]
    node mapping_141_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16738:26]
    node mapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16740:25]
    node mapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16742:25]
    node mapping_128_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16744:26]
    node mapping_128_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16746:26]
    node mapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16748:26]
    node mapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16750:25]
    node mapping_136_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16752:26]
    node mapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16754:25]
    node addr = bits(io.in.bits.src2, 11, 0) @[build/NutShell.fir.opt.mlir 16756:15]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 16757:16]
    node _csri_T = bits(io.cfIn.instr, 19, 15) @[build/NutShell.fir.opt.mlir 16759:18]
    node csri = cat(UInt<59>(0), _csri_T) @[build/NutShell.fir.opt.mlir 16761:15]
    node _wdata_T = or(rdata, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 16763:19]
    node _wdata_T_1 = not(io.in.bits.src1) @[build/NutShell.fir.opt.mlir 16765:21]
    node _wdata_T_2 = and(rdata, _wdata_T_1) @[build/NutShell.fir.opt.mlir 16767:21]
    node _wdata_T_3 = or(rdata, csri) @[build/NutShell.fir.opt.mlir 16769:21]
    node _wdata_T_4 = not(csri) @[build/NutShell.fir.opt.mlir 16771:21]
    node _wdata_T_5 = and(rdata, _wdata_T_4) @[build/NutShell.fir.opt.mlir 16773:21]
    node _wdata_T_6 = eq(UInt<1>(1), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16775:21]
    node _wdata_T_7 = eq(UInt<2>(2), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16777:21]
    node _wdata_T_8 = eq(UInt<2>(3), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16779:21]
    node _wdata_T_9 = eq(UInt<3>(5), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16782:21]
    node _wdata_T_10 = eq(UInt<3>(6), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16785:22]
    node _wdata_T_11 = eq(UInt<3>(7), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16787:22]
    node _wdata_T_12 = mux(_wdata_T_6, io.in.bits.src1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16789:22]
    node _wdata_T_13 = mux(_wdata_T_7, _wdata_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16791:22]
    node _wdata_T_14 = mux(_wdata_T_8, _wdata_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16793:22]
    node _wdata_T_15 = mux(_wdata_T_9, csri, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16795:22]
    node _wdata_T_16 = mux(_wdata_T_10, _wdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16797:22]
    node _wdata_T_17 = mux(_wdata_T_11, _wdata_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16799:22]
    node _wdata_T_18 = or(_wdata_T_12, _wdata_T_13) @[build/NutShell.fir.opt.mlir 16801:22]
    node _wdata_T_19 = or(_wdata_T_18, _wdata_T_14) @[build/NutShell.fir.opt.mlir 16803:22]
    node _wdata_T_20 = or(_wdata_T_19, _wdata_T_15) @[build/NutShell.fir.opt.mlir 16805:22]
    node _wdata_T_21 = or(_wdata_T_20, _wdata_T_16) @[build/NutShell.fir.opt.mlir 16807:22]
    node _wdata_T_22 = or(_wdata_T_21, _wdata_T_17) @[build/NutShell.fir.opt.mlir 16809:22]
    wire wdata : UInt<64> @[build/NutShell.fir.opt.mlir 16810:16]
    connect wdata, _wdata_T_22 @[build/NutShell.fir.opt.mlir 16811:7]
    wire _satpLegalMode_WIRE : { mode : UInt<4>, asid : UInt<16>, ppn : UInt<44> } @[build/NutShell.fir.opt.mlir 16812:30]
    wire _satpLegalMode_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 16816:32]
    connect _satpLegalMode_WIRE_1, wdata @[build/NutShell.fir.opt.mlir 16817:7]
    node _satpLegalMode_T = bits(_satpLegalMode_WIRE_1, 43, 0) @[build/NutShell.fir.opt.mlir 16819:27]
    connect _satpLegalMode_WIRE.ppn, _satpLegalMode_T @[build/NutShell.fir.opt.mlir 16820:7]
    node _satpLegalMode_T_1 = bits(_satpLegalMode_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 16822:29]
    connect _satpLegalMode_WIRE.asid, _satpLegalMode_T_1 @[build/NutShell.fir.opt.mlir 16823:7]
    node _satpLegalMode_T_2 = bits(_satpLegalMode_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 16825:29]
    connect _satpLegalMode_WIRE.mode, _satpLegalMode_T_2 @[build/NutShell.fir.opt.mlir 16826:7]
    node _satpLegalMode_T_3 = eq(_satpLegalMode_WIRE.mode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16828:29]
    wire _satpLegalMode_WIRE_2 : { mode : UInt<4>, asid : UInt<16>, ppn : UInt<44> } @[build/NutShell.fir.opt.mlir 16829:32]
    wire _satpLegalMode_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 16833:32]
    connect _satpLegalMode_WIRE_3, wdata @[build/NutShell.fir.opt.mlir 16834:7]
    node _satpLegalMode_T_4 = bits(_satpLegalMode_WIRE_3, 43, 0) @[build/NutShell.fir.opt.mlir 16836:29]
    connect _satpLegalMode_WIRE_2.ppn, _satpLegalMode_T_4 @[build/NutShell.fir.opt.mlir 16837:7]
    node _satpLegalMode_T_5 = bits(_satpLegalMode_WIRE_3, 59, 44) @[build/NutShell.fir.opt.mlir 16839:29]
    connect _satpLegalMode_WIRE_2.asid, _satpLegalMode_T_5 @[build/NutShell.fir.opt.mlir 16840:7]
    node _satpLegalMode_T_6 = bits(_satpLegalMode_WIRE_3, 63, 60) @[build/NutShell.fir.opt.mlir 16842:29]
    connect _satpLegalMode_WIRE_2.mode, _satpLegalMode_T_6 @[build/NutShell.fir.opt.mlir 16843:7]
    node _satpLegalMode_T_7 = eq(_satpLegalMode_WIRE_2.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 16846:29]
    node satpLegalMode = or(_satpLegalMode_T_3, _satpLegalMode_T_7) @[build/NutShell.fir.opt.mlir 16848:24]
    node _wen_T = neq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16850:17]
    node _wen_T_1 = and(io.in.valid, _wen_T) @[build/NutShell.fir.opt.mlir 16852:19]
    node _wen_T_2 = neq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 16855:19]
    node _wen_T_3 = or(_wen_T_2, satpLegalMode) @[build/NutShell.fir.opt.mlir 16857:19]
    node _wen_T_4 = and(_wen_T_1, _wen_T_3) @[build/NutShell.fir.opt.mlir 16859:19]
    node _wen_T_5 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16861:19]
    node wen = and(_wen_T_4, _wen_T_5) @[build/NutShell.fir.opt.mlir 16863:14]
    node _isIllegalMode_T = bits(addr, 9, 8) @[build/NutShell.fir.opt.mlir 16865:27]
    node isIllegalMode = lt(privilegeMode, _isIllegalMode_T) @[build/NutShell.fir.opt.mlir 16867:24]
    node _justRead_T = eq(io.in.bits.func, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 16869:22]
    node _justRead_T_1 = eq(io.in.bits.func, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 16871:24]
    node _justRead_T_2 = or(_justRead_T, _justRead_T_1) @[build/NutShell.fir.opt.mlir 16873:24]
    node _justRead_T_3 = eq(io.in.bits.src1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16875:24]
    node justRead = and(_justRead_T_2, _justRead_T_3) @[build/NutShell.fir.opt.mlir 16877:19]
    node _isIllegalWrite_T = bits(addr, 11, 10) @[build/NutShell.fir.opt.mlir 16879:28]
    node _isIllegalWrite_T_1 = eq(_isIllegalWrite_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 16881:30]
    node _isIllegalWrite_T_2 = and(wen, _isIllegalWrite_T_1) @[build/NutShell.fir.opt.mlir 16883:30]
    node _isIllegalWrite_T_3 = eq(justRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16885:30]
    node isIllegalWrite = and(_isIllegalWrite_T_2, _isIllegalWrite_T_3) @[build/NutShell.fir.opt.mlir 16887:25]
    node isIllegalAccess = or(isIllegalMode, isIllegalWrite) @[build/NutShell.fir.opt.mlir 16889:26]
    node _T = eq(isIllegalAccess, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16891:13]
    node _T_1 = and(wen, _T) @[build/NutShell.fir.opt.mlir 16893:15]
    node _rdata_T = and(perfCnts_6, perfCntsLoMapping_6_2_4) @[build/NutShell.fir.opt.mlir 16895:19]
    node _rdata_T_1 = and(perfCnts_73, perfCntsLoMapping_73_2_4) @[build/NutShell.fir.opt.mlir 16897:21]
    node _rdata_T_2 = and(perfCnts_60, perfCntsLoMapping_60_2_4) @[build/NutShell.fir.opt.mlir 16899:21]
    node _rdata_T_3 = and(perfCnts_105, perfCntsLoMapping_105_2_4) @[build/NutShell.fir.opt.mlir 16901:21]
    node _rdata_T_4 = and(perfCnts_124, perfCntsLoMapping_124_2_4) @[build/NutShell.fir.opt.mlir 16903:21]
    node _rdata_T_5 = and(marchid, mapping_5_2_4) @[build/NutShell.fir.opt.mlir 16905:21]
    node _rdata_T_6 = and(perfCnts_92, perfCntsLoMapping_92_2_4) @[build/NutShell.fir.opt.mlir 16907:21]
    node _rdata_T_7 = and(perfCnts_21, perfCntsLoMapping_21_2_4) @[build/NutShell.fir.opt.mlir 16909:21]
    node _rdata_T_8 = and(perfCnts_38, perfCntsLoMapping_38_2_4) @[build/NutShell.fir.opt.mlir 16911:21]
    node _rdata_T_9 = and(satp, mapping_9_2_4) @[build/NutShell.fir.opt.mlir 16913:21]
    node _rdata_T_10 = and(perfCnts_102, perfCntsLoMapping_102_2_4) @[build/NutShell.fir.opt.mlir 16915:22]
    node _rdata_T_11 = and(perfCnts_117, perfCntsLoMapping_117_2_4) @[build/NutShell.fir.opt.mlir 16917:22]
    node _rdata_T_12 = and(perfCnts_28, perfCntsLoMapping_28_2_4) @[build/NutShell.fir.opt.mlir 16919:22]
    node _rdata_T_13 = and(pmpcfg2, mapping_13_2_4) @[build/NutShell.fir.opt.mlir 16921:22]
    node _rdata_T_14 = and(perfCnts_85, perfCntsLoMapping_85_2_4) @[build/NutShell.fir.opt.mlir 16923:22]
    node _rdata_T_15 = and(pmpaddr1, mapping_15_2_4) @[build/NutShell.fir.opt.mlir 16925:22]
    node _rdata_T_16 = and(perfCnts_70, perfCntsLoMapping_70_2_4) @[build/NutShell.fir.opt.mlir 16927:22]
    node _rdata_T_17 = and(sscratch, mapping_17_2_4) @[build/NutShell.fir.opt.mlir 16929:22]
    node _rdata_T_18 = and(perfCnts_9, perfCntsLoMapping_9_2_4) @[build/NutShell.fir.opt.mlir 16931:22]
    node _rdata_T_19 = and(perfCnts_3, perfCntsLoMapping_3_2_4) @[build/NutShell.fir.opt.mlir 16933:22]
    node _rdata_T_20 = and(perfCnts_53, perfCntsLoMapping_53_2_4) @[build/NutShell.fir.opt.mlir 16935:22]
    node _rdata_T_21 = and(perfCnts_100, perfCntsLoMapping_100_2_4) @[build/NutShell.fir.opt.mlir 16937:22]
    node _rdata_T_22 = and(perfCnts_81, perfCntsLoMapping_81_2_4) @[build/NutShell.fir.opt.mlir 16939:22]
    node _rdata_T_23 = and(perfCnts_41, perfCntsLoMapping_41_2_4) @[build/NutShell.fir.opt.mlir 16941:22]
    node _rdata_T_24 = and(medeleg, mapping_24_2_4) @[build/NutShell.fir.opt.mlir 16943:22]
    node _rdata_T_25 = and(perfCnts_113, perfCntsLoMapping_113_2_4) @[build/NutShell.fir.opt.mlir 16945:22]
    node _rdata_T_26 = and(perfCnts_36, perfCntsLoMapping_36_2_4) @[build/NutShell.fir.opt.mlir 16947:22]
    node _rdata_T_27 = and(stvec, mapping_27_2_4) @[build/NutShell.fir.opt.mlir 16949:22]
    node _rdata_T_28 = and(perfCnts_13, perfCntsLoMapping_13_2_4) @[build/NutShell.fir.opt.mlir 16951:22]
    node _rdata_T_29 = and(perfCnts_109, perfCntsLoMapping_109_2_4) @[build/NutShell.fir.opt.mlir 16953:22]
    node _rdata_T_30 = and(perfCnts_77, perfCntsLoMapping_77_2_4) @[build/NutShell.fir.opt.mlir 16955:22]
    node _rdata_T_31 = and(sepc, mapping_31_2_4) @[build/NutShell.fir.opt.mlir 16957:22]
    node _rdata_T_32 = and(perfCnts_64, perfCntsLoMapping_64_2_4) @[build/NutShell.fir.opt.mlir 16959:22]
    node _rdata_T_33 = and(mcause, mapping_33_2_4) @[build/NutShell.fir.opt.mlir 16961:22]
    node _rdata_T_34 = and(perfCnts_17, perfCntsLoMapping_17_2_4) @[build/NutShell.fir.opt.mlir 16963:22]
    node _rdata_T_35 = and(perfCnts_45, perfCntsLoMapping_45_2_4) @[build/NutShell.fir.opt.mlir 16965:22]
    node _rdata_T_36 = and(mcounteren, mapping_36_2_4) @[build/NutShell.fir.opt.mlir 16967:22]
    node _rdata_T_37 = and(perfCnts_68, perfCntsLoMapping_68_2_4) @[build/NutShell.fir.opt.mlir 16969:22]
    node _rdata_T_38 = and(perfCnts_106, perfCntsLoMapping_106_2_4) @[build/NutShell.fir.opt.mlir 16971:22]
    node _rdata_T_39 = and(mvendorid, mapping_39_2_4) @[build/NutShell.fir.opt.mlir 16973:22]
    node _rdata_T_40 = and(perfCnts_94, perfCntsLoMapping_94_2_4) @[build/NutShell.fir.opt.mlir 16975:22]
    node _rdata_T_41 = and(perfCnts_89, perfCntsLoMapping_89_2_4) @[build/NutShell.fir.opt.mlir 16977:22]
    node _rdata_T_42 = and(mie, sieMask) @[build/NutShell.fir.opt.mlir 16979:22]
    node _rdata_T_43 = and(perfCnts_121, perfCntsLoMapping_121_2_4) @[build/NutShell.fir.opt.mlir 16981:22]
    node _rdata_T_44 = and(perfCnts_74, perfCntsLoMapping_74_2_4) @[build/NutShell.fir.opt.mlir 16983:22]
    node _rdata_T_45 = and(perfCnts_57, perfCntsLoMapping_57_2_4) @[build/NutShell.fir.opt.mlir 16985:22]
    node _rdata_T_46 = and(perfCnts_56, perfCntsLoMapping_56_2_4) @[build/NutShell.fir.opt.mlir 16987:22]
    node _rdata_T_47 = and(mapping_47_2_1, sipMask) @[build/NutShell.fir.opt.mlir 16989:22]
    node _rdata_T_48 = and(perfCnts_10, perfCntsLoMapping_10_2_4) @[build/NutShell.fir.opt.mlir 16991:22]
    node _rdata_T_49 = and(perfCnts_4, perfCntsLoMapping_4_2_4) @[build/NutShell.fir.opt.mlir 16993:22]
    node _rdata_T_50 = and(perfCnts_24, perfCntsLoMapping_24_2_4) @[build/NutShell.fir.opt.mlir 16995:22]
    node _rdata_T_51 = and(perfCnts_79, perfCntsLoMapping_79_2_4) @[build/NutShell.fir.opt.mlir 16997:22]
    node _rdata_T_52 = and(perfCnts_25, perfCntsLoMapping_25_2_4) @[build/NutShell.fir.opt.mlir 16999:22]
    node _rdata_T_53 = and(perfCnts_42, perfCntsLoMapping_42_2_4) @[build/NutShell.fir.opt.mlir 17001:22]
    node _rdata_T_54 = and(mstatus, sstatusRmask) @[build/NutShell.fir.opt.mlir 17003:22]
    node _rdata_T_55 = and(perfCnts_61, perfCntsLoMapping_61_2_4) @[build/NutShell.fir.opt.mlir 17005:22]
    node _rdata_T_56 = and(perfCnts_14, perfCntsLoMapping_14_2_4) @[build/NutShell.fir.opt.mlir 17007:22]
    node _rdata_T_57 = and(perfCnts_52, perfCntsLoMapping_52_2_4) @[build/NutShell.fir.opt.mlir 17009:22]
    node _rdata_T_58 = and(perfCnts_116, perfCntsLoMapping_116_2_4) @[build/NutShell.fir.opt.mlir 17011:22]
    node _rdata_T_59 = and(perfCnts_20, perfCntsLoMapping_20_2_4) @[build/NutShell.fir.opt.mlir 17013:22]
    node _rdata_T_60 = and(perfCnts_29, perfCntsLoMapping_29_2_4) @[build/NutShell.fir.opt.mlir 17015:22]
    node _rdata_T_61 = and(perfCnts_84, perfCntsLoMapping_84_2_4) @[build/NutShell.fir.opt.mlir 17017:22]
    node _rdata_T_62 = and(perfCnts_35, perfCntsLoMapping_35_2_4) @[build/NutShell.fir.opt.mlir 17019:22]
    node _rdata_T_63 = and(perfCnts_46, perfCntsLoMapping_46_2_4) @[build/NutShell.fir.opt.mlir 17021:22]
    node _rdata_T_64 = and(perfCnts_110, perfCntsLoMapping_110_2_4) @[build/NutShell.fir.opt.mlir 17023:22]
    node _rdata_T_65 = and(perfCnts_67, perfCntsLoMapping_67_2_4) @[build/NutShell.fir.opt.mlir 17025:22]
    node _rdata_T_66 = and(perfCnts_99, perfCntsLoMapping_99_2_4) @[build/NutShell.fir.opt.mlir 17027:22]
    node _rdata_T_67 = and(mtvec, mapping_67_2_4) @[build/NutShell.fir.opt.mlir 17029:22]
    node _rdata_T_68 = and(perfCnts_93, perfCntsLoMapping_93_2_4) @[build/NutShell.fir.opt.mlir 17031:22]
    node _rdata_T_69 = and(perfCnts_120, perfCntsLoMapping_120_2_4) @[build/NutShell.fir.opt.mlir 17033:22]
    node _rdata_T_70 = and(perfCnts_88, perfCntsLoMapping_88_2_4) @[build/NutShell.fir.opt.mlir 17035:22]
    node _rdata_T_71 = and(perfCnts_125, perfCntsLoMapping_125_2_4) @[build/NutShell.fir.opt.mlir 17037:22]
    node _rdata_T_72 = and(perfCnts_78, perfCntsLoMapping_78_2_4) @[build/NutShell.fir.opt.mlir 17039:22]
    node _rdata_T_73 = and(perfCnts_33, perfCntsLoMapping_33_2_4) @[build/NutShell.fir.opt.mlir 17041:22]
    node _rdata_T_74 = and(mie, mapping_74_2_4) @[build/NutShell.fir.opt.mlir 17043:22]
    node _rdata_T_75 = and(perfCnts_1, perfCntsLoMapping_1_2_4) @[build/NutShell.fir.opt.mlir 17045:22]
    node _rdata_T_76 = and(perfCnts_11, perfCntsLoMapping_11_2_4) @[build/NutShell.fir.opt.mlir 17047:22]
    node _rdata_T_77 = and(perfCnts_43, perfCntsLoMapping_43_2_4) @[build/NutShell.fir.opt.mlir 17049:22]
    node _rdata_T_78 = and(perfCnts_122, perfCntsLoMapping_122_2_4) @[build/NutShell.fir.opt.mlir 17051:22]
    node _rdata_T_79 = and(perfCnts_75, perfCntsLoMapping_75_2_4) @[build/NutShell.fir.opt.mlir 17053:22]
    node _rdata_T_80 = and(perfCnts_119, perfCntsLoMapping_119_2_4) @[build/NutShell.fir.opt.mlir 17055:22]
    node _rdata_T_81 = and(pmpaddr3, mapping_81_2_4) @[build/NutShell.fir.opt.mlir 17057:22]
    node _rdata_T_82 = and(perfCnts_90, perfCntsLoMapping_90_2_4) @[build/NutShell.fir.opt.mlir 17059:22]
    node _rdata_T_83 = and(perfCnts_23, perfCntsLoMapping_23_2_4) @[build/NutShell.fir.opt.mlir 17061:22]
    node _rdata_T_84 = and(perfCnts_127, perfCntsLoMapping_127_2_4) @[build/NutShell.fir.opt.mlir 17063:22]
    node _rdata_T_85 = and(perfCnts_40, perfCntsLoMapping_40_2_4) @[build/NutShell.fir.opt.mlir 17065:22]
    node _rdata_T_86 = and(perfCnts_80, perfCntsLoMapping_80_2_4) @[build/NutShell.fir.opt.mlir 17067:22]
    node _rdata_T_87 = and(perfCnts_55, perfCntsLoMapping_55_2_4) @[build/NutShell.fir.opt.mlir 17069:22]
    node _rdata_T_88 = and(perfCnts_8, perfCntsLoMapping_8_2_4) @[build/NutShell.fir.opt.mlir 17071:22]
    node _rdata_T_89 = and(stval, mapping_89_2_4) @[build/NutShell.fir.opt.mlir 17073:22]
    node _rdata_T_90 = and(perfCnts_107, perfCntsLoMapping_107_2_4) @[build/NutShell.fir.opt.mlir 17075:22]
    node _rdata_T_91 = and(perfCnts_58, perfCntsLoMapping_58_2_4) @[build/NutShell.fir.opt.mlir 17077:22]
    node _rdata_T_92 = and(misa, mapping_92_2_4) @[build/NutShell.fir.opt.mlir 17079:22]
    node _rdata_T_93 = and(perfCnts_112, perfCntsLoMapping_112_2_4) @[build/NutShell.fir.opt.mlir 17081:22]
    node _rdata_T_94 = and(perfCnts_26, perfCntsLoMapping_26_2_4) @[build/NutShell.fir.opt.mlir 17083:22]
    node _rdata_T_95 = and(perfCnts_95, perfCntsLoMapping_95_2_4) @[build/NutShell.fir.opt.mlir 17085:22]
    node _rdata_T_96 = and(perfCnts_115, perfCntsLoMapping_115_2_4) @[build/NutShell.fir.opt.mlir 17087:22]
    node _rdata_T_97 = and(perfCnts_51, perfCntsLoMapping_51_2_4) @[build/NutShell.fir.opt.mlir 17089:22]
    node _rdata_T_98 = and(mstatus, mapping_98_2_4) @[build/NutShell.fir.opt.mlir 17091:22]
    node _rdata_T_99 = and(perfCnts_19, perfCntsLoMapping_19_2_4) @[build/NutShell.fir.opt.mlir 17093:22]
    node _rdata_T_100 = and(pmpaddr0, mapping_100_2_4) @[build/NutShell.fir.opt.mlir 17095:23]
    node _rdata_T_101 = and(perfCnts_62, perfCntsLoMapping_62_2_4) @[build/NutShell.fir.opt.mlir 17097:23]
    node _rdata_T_102 = and(perfCnts_111, perfCntsLoMapping_111_2_4) @[build/NutShell.fir.opt.mlir 17099:23]
    node _rdata_T_103 = and(perfCnts_30, perfCntsLoMapping_30_2_4) @[build/NutShell.fir.opt.mlir 17101:23]
    node _rdata_T_104 = and(perfCnts_83, perfCntsLoMapping_83_2_4) @[build/NutShell.fir.opt.mlir 17103:23]
    node _rdata_T_105 = and(mapping_105_2_1, mapping_105_2_4) @[build/NutShell.fir.opt.mlir 17105:23]
    node _rdata_T_106 = and(perfCnts_98, perfCntsLoMapping_98_2_4) @[build/NutShell.fir.opt.mlir 17107:23]
    node _rdata_T_107 = and(perfCnts_0, perfCntsLoMapping_0_2_4) @[build/NutShell.fir.opt.mlir 17109:23]
    node _rdata_T_108 = and(perfCnts_126, perfCntsLoMapping_126_2_4) @[build/NutShell.fir.opt.mlir 17111:23]
    node _rdata_T_109 = and(perfCnts_47, perfCntsLoMapping_47_2_4) @[build/NutShell.fir.opt.mlir 17113:23]
    node _rdata_T_110 = and(perfCnts_5, perfCntsLoMapping_5_2_4) @[build/NutShell.fir.opt.mlir 17115:23]
    node _rdata_T_111 = and(perfCnts_34, perfCntsLoMapping_34_2_4) @[build/NutShell.fir.opt.mlir 17117:23]
    node _rdata_T_112 = and(perfCnts_72, perfCntsLoMapping_72_2_4) @[build/NutShell.fir.opt.mlir 17119:23]
    node _rdata_T_113 = and(perfCnts_66, perfCntsLoMapping_66_2_4) @[build/NutShell.fir.opt.mlir 17121:23]
    node _rdata_T_114 = and(perfCnts_15, perfCntsLoMapping_15_2_4) @[build/NutShell.fir.opt.mlir 17123:23]
    node _rdata_T_115 = and(perfCnts_104, perfCntsLoMapping_104_2_4) @[build/NutShell.fir.opt.mlir 17125:23]
    node _rdata_T_116 = and(perfCnts_87, perfCntsLoMapping_87_2_4) @[build/NutShell.fir.opt.mlir 17127:23]
    node _rdata_T_117 = and(perfCnts_22, perfCntsLoMapping_22_2_4) @[build/NutShell.fir.opt.mlir 17129:23]
    node _rdata_T_118 = and(perfCnts_27, perfCntsLoMapping_27_2_4) @[build/NutShell.fir.opt.mlir 17131:23]
    node _rdata_T_119 = and(perfCnts_44, perfCntsLoMapping_44_2_4) @[build/NutShell.fir.opt.mlir 17133:23]
    node _rdata_T_120 = and(perfCnts_123, perfCntsLoMapping_123_2_4) @[build/NutShell.fir.opt.mlir 17135:23]
    node _rdata_T_121 = and(perfCnts_76, perfCntsLoMapping_76_2_4) @[build/NutShell.fir.opt.mlir 17137:23]
    node _rdata_T_122 = and(perfCnts_32, perfCntsLoMapping_32_2_4) @[build/NutShell.fir.opt.mlir 17139:23]
    node _rdata_T_123 = and(perfCnts_108, perfCntsLoMapping_108_2_4) @[build/NutShell.fir.opt.mlir 17141:23]
    node _rdata_T_124 = and(perfCnts_2, perfCntsLoMapping_2_2_4) @[build/NutShell.fir.opt.mlir 17143:23]
    node _rdata_T_125 = and(perfCnts_103, perfCntsLoMapping_103_2_4) @[build/NutShell.fir.opt.mlir 17145:23]
    node _rdata_T_126 = and(perfCnts_49, perfCntsLoMapping_49_2_4) @[build/NutShell.fir.opt.mlir 17147:23]
    node _rdata_T_127 = and(perfCnts_59, perfCntsLoMapping_59_2_4) @[build/NutShell.fir.opt.mlir 17149:23]
    node _rdata_T_128 = and(pmpcfg3, mapping_128_2_4) @[build/NutShell.fir.opt.mlir 17151:23]
    node _rdata_T_129 = and(perfCnts_69, perfCntsLoMapping_69_2_4) @[build/NutShell.fir.opt.mlir 17153:23]
    node _rdata_T_130 = and(perfCnts_54, perfCntsLoMapping_54_2_4) @[build/NutShell.fir.opt.mlir 17155:23]
    node _rdata_T_131 = and(perfCnts_12, perfCntsLoMapping_12_2_4) @[build/NutShell.fir.opt.mlir 17157:23]
    node _rdata_T_132 = and(mideleg, mapping_132_2_4) @[build/NutShell.fir.opt.mlir 17159:23]
    node _rdata_T_133 = and(perfCnts_91, perfCntsLoMapping_91_2_4) @[build/NutShell.fir.opt.mlir 17161:23]
    node _rdata_T_134 = and(perfCnts_39, perfCntsLoMapping_39_2_4) @[build/NutShell.fir.opt.mlir 17163:23]
    node _rdata_T_135 = and(perfCnts_37, perfCntsLoMapping_37_2_4) @[build/NutShell.fir.opt.mlir 17165:23]
    node _rdata_T_136 = and(pmpaddr2, mapping_136_2_4) @[build/NutShell.fir.opt.mlir 17167:23]
    node _rdata_T_137 = and(perfCnts_7, perfCntsLoMapping_7_2_4) @[build/NutShell.fir.opt.mlir 17169:23]
    node _rdata_T_138 = and(mimpid, mapping_138_2_4) @[build/NutShell.fir.opt.mlir 17171:23]
    node _rdata_T_139 = and(perfCnts_118, perfCntsLoMapping_118_2_4) @[build/NutShell.fir.opt.mlir 17173:23]
    node _rdata_T_140 = and(perfCnts_96, perfCntsLoMapping_96_2_4) @[build/NutShell.fir.opt.mlir 17175:23]
    node _rdata_T_141 = and(pmpcfg1, mapping_141_2_4) @[build/NutShell.fir.opt.mlir 17177:23]
    node _rdata_T_142 = and(perfCnts_86, perfCntsLoMapping_86_2_4) @[build/NutShell.fir.opt.mlir 17179:23]
    node _rdata_T_143 = and(mscratch, mapping_143_2_4) @[build/NutShell.fir.opt.mlir 17181:23]
    node _rdata_T_144 = and(perfCnts_101, perfCntsLoMapping_101_2_4) @[build/NutShell.fir.opt.mlir 17183:23]
    node _rdata_T_145 = and(perfCnts_114, perfCntsLoMapping_114_2_4) @[build/NutShell.fir.opt.mlir 17185:23]
    node _rdata_T_146 = and(mhartid, mapping_146_2_4) @[build/NutShell.fir.opt.mlir 17187:23]
    node _rdata_T_147 = and(mepc, mapping_147_2_4) @[build/NutShell.fir.opt.mlir 17189:23]
    node _rdata_T_148 = and(mtval, mapping_148_2_4) @[build/NutShell.fir.opt.mlir 17191:23]
    node _rdata_T_149 = and(scounteren, mapping_149_2_4) @[build/NutShell.fir.opt.mlir 17193:23]
    node _rdata_T_150 = and(perfCnts_97, perfCntsLoMapping_97_2_4) @[build/NutShell.fir.opt.mlir 17195:23]
    node _rdata_T_151 = and(pmpcfg0, mapping_151_2_4) @[build/NutShell.fir.opt.mlir 17197:23]
    node _rdata_T_152 = and(perfCnts_31, perfCntsLoMapping_31_2_4) @[build/NutShell.fir.opt.mlir 17199:23]
    node _rdata_T_153 = and(perfCnts_82, perfCntsLoMapping_82_2_4) @[build/NutShell.fir.opt.mlir 17201:23]
    node _rdata_T_154 = and(perfCnts_48, perfCntsLoMapping_48_2_4) @[build/NutShell.fir.opt.mlir 17203:23]
    node _rdata_T_155 = and(scause, mapping_155_2_4) @[build/NutShell.fir.opt.mlir 17205:23]
    node _rdata_T_156 = and(perfCnts_63, perfCntsLoMapping_63_2_4) @[build/NutShell.fir.opt.mlir 17207:23]
    node _rdata_T_157 = and(perfCnts_65, perfCntsLoMapping_65_2_4) @[build/NutShell.fir.opt.mlir 17209:23]
    node _rdata_T_158 = and(perfCnts_71, perfCntsLoMapping_71_2_4) @[build/NutShell.fir.opt.mlir 17211:23]
    node _rdata_T_159 = and(perfCnts_18, perfCntsLoMapping_18_2_4) @[build/NutShell.fir.opt.mlir 17213:23]
    node _rdata_T_160 = and(perfCnts_50, perfCntsLoMapping_50_2_4) @[build/NutShell.fir.opt.mlir 17215:23]
    node _rdata_T_161 = and(perfCnts_16, perfCntsLoMapping_16_2_4) @[build/NutShell.fir.opt.mlir 17217:23]
    node _rdata_T_162 = eq(UInt<12>(2822), addr) @[build/NutShell.fir.opt.mlir 17220:23]
    node _rdata_T_163 = eq(UInt<12>(2889), addr) @[build/NutShell.fir.opt.mlir 17223:23]
    node _rdata_T_164 = eq(UInt<12>(2876), addr) @[build/NutShell.fir.opt.mlir 17226:23]
    node _rdata_T_165 = eq(UInt<12>(2921), addr) @[build/NutShell.fir.opt.mlir 17229:23]
    node _rdata_T_166 = eq(UInt<12>(2940), addr) @[build/NutShell.fir.opt.mlir 17232:23]
    node _rdata_T_167 = eq(UInt<12>(3858), addr) @[build/NutShell.fir.opt.mlir 17235:23]
    node _rdata_T_168 = eq(UInt<12>(2908), addr) @[build/NutShell.fir.opt.mlir 17238:23]
    node _rdata_T_169 = eq(UInt<12>(2837), addr) @[build/NutShell.fir.opt.mlir 17241:23]
    node _rdata_T_170 = eq(UInt<12>(2854), addr) @[build/NutShell.fir.opt.mlir 17244:23]
    node _rdata_T_171 = eq(UInt<9>(384), addr) @[build/NutShell.fir.opt.mlir 17246:23]
    node _rdata_T_172 = eq(UInt<12>(2918), addr) @[build/NutShell.fir.opt.mlir 17249:23]
    node _rdata_T_173 = eq(UInt<12>(2933), addr) @[build/NutShell.fir.opt.mlir 17252:23]
    node _rdata_T_174 = eq(UInt<12>(2844), addr) @[build/NutShell.fir.opt.mlir 17255:23]
    node _rdata_T_175 = eq(UInt<10>(930), addr) @[build/NutShell.fir.opt.mlir 17258:23]
    node _rdata_T_176 = eq(UInt<12>(2901), addr) @[build/NutShell.fir.opt.mlir 17261:23]
    node _rdata_T_177 = eq(UInt<10>(945), addr) @[build/NutShell.fir.opt.mlir 17264:23]
    node _rdata_T_178 = eq(UInt<12>(2886), addr) @[build/NutShell.fir.opt.mlir 17267:23]
    node _rdata_T_179 = eq(UInt<9>(320), addr) @[build/NutShell.fir.opt.mlir 17270:23]
    node _rdata_T_180 = eq(UInt<12>(2825), addr) @[build/NutShell.fir.opt.mlir 17273:23]
    node _rdata_T_181 = eq(UInt<12>(2819), addr) @[build/NutShell.fir.opt.mlir 17276:23]
    node _rdata_T_182 = eq(UInt<12>(2869), addr) @[build/NutShell.fir.opt.mlir 17279:23]
    node _rdata_T_183 = eq(UInt<12>(2916), addr) @[build/NutShell.fir.opt.mlir 17282:23]
    node _rdata_T_184 = eq(UInt<12>(2897), addr) @[build/NutShell.fir.opt.mlir 17285:23]
    node _rdata_T_185 = eq(UInt<12>(2857), addr) @[build/NutShell.fir.opt.mlir 17288:23]
    node _rdata_T_186 = eq(UInt<10>(770), addr) @[build/NutShell.fir.opt.mlir 17291:23]
    node _rdata_T_187 = eq(UInt<12>(2929), addr) @[build/NutShell.fir.opt.mlir 17294:23]
    node _rdata_T_188 = eq(UInt<12>(2852), addr) @[build/NutShell.fir.opt.mlir 17297:23]
    node _rdata_T_189 = eq(UInt<9>(261), addr) @[build/NutShell.fir.opt.mlir 17300:23]
    node _rdata_T_190 = eq(UInt<12>(2829), addr) @[build/NutShell.fir.opt.mlir 17303:23]
    node _rdata_T_191 = eq(UInt<12>(2925), addr) @[build/NutShell.fir.opt.mlir 17306:23]
    node _rdata_T_192 = eq(UInt<12>(2893), addr) @[build/NutShell.fir.opt.mlir 17309:23]
    node _rdata_T_193 = eq(UInt<9>(321), addr) @[build/NutShell.fir.opt.mlir 17312:23]
    node _rdata_T_194 = eq(UInt<12>(2880), addr) @[build/NutShell.fir.opt.mlir 17315:23]
    node _rdata_T_195 = eq(UInt<10>(834), addr) @[build/NutShell.fir.opt.mlir 17318:23]
    node _rdata_T_196 = eq(UInt<12>(2833), addr) @[build/NutShell.fir.opt.mlir 17321:23]
    node _rdata_T_197 = eq(UInt<12>(2861), addr) @[build/NutShell.fir.opt.mlir 17324:23]
    node _rdata_T_198 = eq(UInt<10>(774), addr) @[build/NutShell.fir.opt.mlir 17327:23]
    node _rdata_T_199 = eq(UInt<12>(2884), addr) @[build/NutShell.fir.opt.mlir 17330:23]
    node _rdata_T_200 = eq(UInt<12>(2922), addr) @[build/NutShell.fir.opt.mlir 17333:23]
    node _rdata_T_201 = eq(UInt<12>(3857), addr) @[build/NutShell.fir.opt.mlir 17336:23]
    node _rdata_T_202 = eq(UInt<12>(2910), addr) @[build/NutShell.fir.opt.mlir 17339:23]
    node _rdata_T_203 = eq(UInt<12>(2905), addr) @[build/NutShell.fir.opt.mlir 17342:23]
    node _rdata_T_204 = eq(UInt<9>(260), addr) @[build/NutShell.fir.opt.mlir 17345:23]
    node _rdata_T_205 = eq(UInt<12>(2937), addr) @[build/NutShell.fir.opt.mlir 17348:23]
    node _rdata_T_206 = eq(UInt<12>(2890), addr) @[build/NutShell.fir.opt.mlir 17351:23]
    node _rdata_T_207 = eq(UInt<12>(2873), addr) @[build/NutShell.fir.opt.mlir 17354:23]
    node _rdata_T_208 = eq(UInt<12>(2872), addr) @[build/NutShell.fir.opt.mlir 17357:23]
    node _rdata_T_209 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 17360:23]
    node _rdata_T_210 = eq(UInt<12>(2826), addr) @[build/NutShell.fir.opt.mlir 17363:23]
    node _rdata_T_211 = eq(UInt<12>(2820), addr) @[build/NutShell.fir.opt.mlir 17366:23]
    node _rdata_T_212 = eq(UInt<12>(2840), addr) @[build/NutShell.fir.opt.mlir 17369:23]
    node _rdata_T_213 = eq(UInt<12>(2895), addr) @[build/NutShell.fir.opt.mlir 17372:23]
    node _rdata_T_214 = eq(UInt<12>(2841), addr) @[build/NutShell.fir.opt.mlir 17375:23]
    node _rdata_T_215 = eq(UInt<12>(2858), addr) @[build/NutShell.fir.opt.mlir 17378:23]
    node _rdata_T_216 = eq(UInt<9>(256), addr) @[build/NutShell.fir.opt.mlir 17381:23]
    node _rdata_T_217 = eq(UInt<12>(2877), addr) @[build/NutShell.fir.opt.mlir 17384:23]
    node _rdata_T_218 = eq(UInt<12>(2830), addr) @[build/NutShell.fir.opt.mlir 17387:23]
    node _rdata_T_219 = eq(UInt<12>(2868), addr) @[build/NutShell.fir.opt.mlir 17390:23]
    node _rdata_T_220 = eq(UInt<12>(2932), addr) @[build/NutShell.fir.opt.mlir 17393:23]
    node _rdata_T_221 = eq(UInt<12>(2836), addr) @[build/NutShell.fir.opt.mlir 17396:23]
    node _rdata_T_222 = eq(UInt<12>(2845), addr) @[build/NutShell.fir.opt.mlir 17399:23]
    node _rdata_T_223 = eq(UInt<12>(2900), addr) @[build/NutShell.fir.opt.mlir 17402:23]
    node _rdata_T_224 = eq(UInt<12>(2851), addr) @[build/NutShell.fir.opt.mlir 17405:23]
    node _rdata_T_225 = eq(UInt<12>(2862), addr) @[build/NutShell.fir.opt.mlir 17408:23]
    node _rdata_T_226 = eq(UInt<12>(2926), addr) @[build/NutShell.fir.opt.mlir 17411:23]
    node _rdata_T_227 = eq(UInt<12>(2883), addr) @[build/NutShell.fir.opt.mlir 17414:23]
    node _rdata_T_228 = eq(UInt<12>(2915), addr) @[build/NutShell.fir.opt.mlir 17417:23]
    node _rdata_T_229 = eq(UInt<10>(773), addr) @[build/NutShell.fir.opt.mlir 17420:23]
    node _rdata_T_230 = eq(UInt<12>(2909), addr) @[build/NutShell.fir.opt.mlir 17423:23]
    node _rdata_T_231 = eq(UInt<12>(2936), addr) @[build/NutShell.fir.opt.mlir 17426:23]
    node _rdata_T_232 = eq(UInt<12>(2904), addr) @[build/NutShell.fir.opt.mlir 17429:23]
    node _rdata_T_233 = eq(UInt<12>(2941), addr) @[build/NutShell.fir.opt.mlir 17432:23]
    node _rdata_T_234 = eq(UInt<12>(2894), addr) @[build/NutShell.fir.opt.mlir 17435:23]
    node _rdata_T_235 = eq(UInt<12>(2849), addr) @[build/NutShell.fir.opt.mlir 17438:23]
    node _rdata_T_236 = eq(UInt<10>(772), addr) @[build/NutShell.fir.opt.mlir 17441:23]
    node _rdata_T_237 = eq(UInt<12>(2817), addr) @[build/NutShell.fir.opt.mlir 17444:23]
    node _rdata_T_238 = eq(UInt<12>(2827), addr) @[build/NutShell.fir.opt.mlir 17447:23]
    node _rdata_T_239 = eq(UInt<12>(2859), addr) @[build/NutShell.fir.opt.mlir 17450:23]
    node _rdata_T_240 = eq(UInt<12>(2938), addr) @[build/NutShell.fir.opt.mlir 17453:23]
    node _rdata_T_241 = eq(UInt<12>(2891), addr) @[build/NutShell.fir.opt.mlir 17456:23]
    node _rdata_T_242 = eq(UInt<12>(2935), addr) @[build/NutShell.fir.opt.mlir 17459:23]
    node _rdata_T_243 = eq(UInt<10>(947), addr) @[build/NutShell.fir.opt.mlir 17462:23]
    node _rdata_T_244 = eq(UInt<12>(2906), addr) @[build/NutShell.fir.opt.mlir 17465:23]
    node _rdata_T_245 = eq(UInt<12>(2839), addr) @[build/NutShell.fir.opt.mlir 17468:23]
    node _rdata_T_246 = eq(UInt<12>(2943), addr) @[build/NutShell.fir.opt.mlir 17471:23]
    node _rdata_T_247 = eq(UInt<12>(2856), addr) @[build/NutShell.fir.opt.mlir 17474:23]
    node _rdata_T_248 = eq(UInt<12>(2896), addr) @[build/NutShell.fir.opt.mlir 17477:23]
    node _rdata_T_249 = eq(UInt<12>(2871), addr) @[build/NutShell.fir.opt.mlir 17480:23]
    node _rdata_T_250 = eq(UInt<12>(2824), addr) @[build/NutShell.fir.opt.mlir 17483:23]
    node _rdata_T_251 = eq(UInt<9>(323), addr) @[build/NutShell.fir.opt.mlir 17486:23]
    node _rdata_T_252 = eq(UInt<12>(2923), addr) @[build/NutShell.fir.opt.mlir 17489:23]
    node _rdata_T_253 = eq(UInt<12>(2874), addr) @[build/NutShell.fir.opt.mlir 17492:23]
    node _rdata_T_254 = eq(UInt<10>(769), addr) @[build/NutShell.fir.opt.mlir 17495:23]
    node _rdata_T_255 = eq(UInt<12>(2928), addr) @[build/NutShell.fir.opt.mlir 17498:23]
    node _rdata_T_256 = eq(UInt<12>(2842), addr) @[build/NutShell.fir.opt.mlir 17501:23]
    node _rdata_T_257 = eq(UInt<12>(2911), addr) @[build/NutShell.fir.opt.mlir 17504:23]
    node _rdata_T_258 = eq(UInt<12>(2931), addr) @[build/NutShell.fir.opt.mlir 17507:23]
    node _rdata_T_259 = eq(UInt<12>(2867), addr) @[build/NutShell.fir.opt.mlir 17510:23]
    node _rdata_T_260 = eq(UInt<10>(768), addr) @[build/NutShell.fir.opt.mlir 17513:23]
    node _rdata_T_261 = eq(UInt<12>(2835), addr) @[build/NutShell.fir.opt.mlir 17516:23]
    node _rdata_T_262 = eq(UInt<10>(944), addr) @[build/NutShell.fir.opt.mlir 17519:23]
    node _rdata_T_263 = eq(UInt<12>(2878), addr) @[build/NutShell.fir.opt.mlir 17522:23]
    node _rdata_T_264 = eq(UInt<12>(2927), addr) @[build/NutShell.fir.opt.mlir 17525:23]
    node _rdata_T_265 = eq(UInt<12>(2846), addr) @[build/NutShell.fir.opt.mlir 17528:23]
    node _rdata_T_266 = eq(UInt<12>(2899), addr) @[build/NutShell.fir.opt.mlir 17531:23]
    node _rdata_T_267 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 17534:23]
    node _rdata_T_268 = eq(UInt<12>(2914), addr) @[build/NutShell.fir.opt.mlir 17537:23]
    node _rdata_T_269 = eq(UInt<12>(2816), addr) @[build/NutShell.fir.opt.mlir 17540:23]
    node _rdata_T_270 = eq(UInt<12>(2942), addr) @[build/NutShell.fir.opt.mlir 17543:23]
    node _rdata_T_271 = eq(UInt<12>(2863), addr) @[build/NutShell.fir.opt.mlir 17546:23]
    node _rdata_T_272 = eq(UInt<12>(2821), addr) @[build/NutShell.fir.opt.mlir 17549:23]
    node _rdata_T_273 = eq(UInt<12>(2850), addr) @[build/NutShell.fir.opt.mlir 17552:23]
    node _rdata_T_274 = eq(UInt<12>(2888), addr) @[build/NutShell.fir.opt.mlir 17555:23]
    node _rdata_T_275 = eq(UInt<12>(2882), addr) @[build/NutShell.fir.opt.mlir 17558:23]
    node _rdata_T_276 = eq(UInt<12>(2831), addr) @[build/NutShell.fir.opt.mlir 17561:23]
    node _rdata_T_277 = eq(UInt<12>(2920), addr) @[build/NutShell.fir.opt.mlir 17564:23]
    node _rdata_T_278 = eq(UInt<12>(2903), addr) @[build/NutShell.fir.opt.mlir 17567:23]
    node _rdata_T_279 = eq(UInt<12>(2838), addr) @[build/NutShell.fir.opt.mlir 17570:23]
    node _rdata_T_280 = eq(UInt<12>(2843), addr) @[build/NutShell.fir.opt.mlir 17573:23]
    node _rdata_T_281 = eq(UInt<12>(2860), addr) @[build/NutShell.fir.opt.mlir 17576:23]
    node _rdata_T_282 = eq(UInt<12>(2939), addr) @[build/NutShell.fir.opt.mlir 17579:23]
    node _rdata_T_283 = eq(UInt<12>(2892), addr) @[build/NutShell.fir.opt.mlir 17582:23]
    node _rdata_T_284 = eq(UInt<12>(2848), addr) @[build/NutShell.fir.opt.mlir 17585:23]
    node _rdata_T_285 = eq(UInt<12>(2924), addr) @[build/NutShell.fir.opt.mlir 17588:23]
    node _rdata_T_286 = eq(UInt<12>(2818), addr) @[build/NutShell.fir.opt.mlir 17591:23]
    node _rdata_T_287 = eq(UInt<12>(2919), addr) @[build/NutShell.fir.opt.mlir 17594:23]
    node _rdata_T_288 = eq(UInt<12>(2865), addr) @[build/NutShell.fir.opt.mlir 17597:23]
    node _rdata_T_289 = eq(UInt<12>(2875), addr) @[build/NutShell.fir.opt.mlir 17600:23]
    node _rdata_T_290 = eq(UInt<10>(931), addr) @[build/NutShell.fir.opt.mlir 17603:23]
    node _rdata_T_291 = eq(UInt<12>(2885), addr) @[build/NutShell.fir.opt.mlir 17606:23]
    node _rdata_T_292 = eq(UInt<12>(2870), addr) @[build/NutShell.fir.opt.mlir 17609:23]
    node _rdata_T_293 = eq(UInt<12>(2828), addr) @[build/NutShell.fir.opt.mlir 17612:23]
    node _rdata_T_294 = eq(UInt<10>(771), addr) @[build/NutShell.fir.opt.mlir 17615:23]
    node _rdata_T_295 = eq(UInt<12>(2907), addr) @[build/NutShell.fir.opt.mlir 17618:23]
    node _rdata_T_296 = eq(UInt<12>(2855), addr) @[build/NutShell.fir.opt.mlir 17621:23]
    node _rdata_T_297 = eq(UInt<12>(2853), addr) @[build/NutShell.fir.opt.mlir 17624:23]
    node _rdata_T_298 = eq(UInt<10>(946), addr) @[build/NutShell.fir.opt.mlir 17627:23]
    node _rdata_T_299 = eq(UInt<12>(2823), addr) @[build/NutShell.fir.opt.mlir 17630:23]
    node _rdata_T_300 = eq(UInt<12>(3859), addr) @[build/NutShell.fir.opt.mlir 17633:23]
    node _rdata_T_301 = eq(UInt<12>(2934), addr) @[build/NutShell.fir.opt.mlir 17636:23]
    node _rdata_T_302 = eq(UInt<12>(2912), addr) @[build/NutShell.fir.opt.mlir 17639:23]
    node _rdata_T_303 = eq(UInt<10>(929), addr) @[build/NutShell.fir.opt.mlir 17642:23]
    node _rdata_T_304 = eq(UInt<12>(2902), addr) @[build/NutShell.fir.opt.mlir 17645:23]
    node _rdata_T_305 = eq(UInt<10>(832), addr) @[build/NutShell.fir.opt.mlir 17648:23]
    node _rdata_T_306 = eq(UInt<12>(2917), addr) @[build/NutShell.fir.opt.mlir 17651:23]
    node _rdata_T_307 = eq(UInt<12>(2930), addr) @[build/NutShell.fir.opt.mlir 17654:23]
    node _rdata_T_308 = eq(UInt<12>(3860), addr) @[build/NutShell.fir.opt.mlir 17657:23]
    node _rdata_T_309 = eq(UInt<10>(833), addr) @[build/NutShell.fir.opt.mlir 17660:23]
    node _rdata_T_310 = eq(UInt<10>(835), addr) @[build/NutShell.fir.opt.mlir 17663:23]
    node _rdata_T_311 = eq(UInt<9>(262), addr) @[build/NutShell.fir.opt.mlir 17666:23]
    node _rdata_T_312 = eq(UInt<12>(2913), addr) @[build/NutShell.fir.opt.mlir 17669:23]
    node _rdata_T_313 = eq(UInt<10>(928), addr) @[build/NutShell.fir.opt.mlir 17672:23]
    node _rdata_T_314 = eq(UInt<12>(2847), addr) @[build/NutShell.fir.opt.mlir 17675:23]
    node _rdata_T_315 = eq(UInt<12>(2898), addr) @[build/NutShell.fir.opt.mlir 17678:23]
    node _rdata_T_316 = eq(UInt<12>(2864), addr) @[build/NutShell.fir.opt.mlir 17681:23]
    node _rdata_T_317 = eq(UInt<9>(322), addr) @[build/NutShell.fir.opt.mlir 17684:23]
    node _rdata_T_318 = eq(UInt<12>(2879), addr) @[build/NutShell.fir.opt.mlir 17687:23]
    node _rdata_T_319 = eq(UInt<12>(2881), addr) @[build/NutShell.fir.opt.mlir 17690:23]
    node _rdata_T_320 = eq(UInt<12>(2887), addr) @[build/NutShell.fir.opt.mlir 17693:23]
    node _rdata_T_321 = eq(UInt<12>(2834), addr) @[build/NutShell.fir.opt.mlir 17696:23]
    node _rdata_T_322 = eq(UInt<12>(2866), addr) @[build/NutShell.fir.opt.mlir 17699:23]
    node _rdata_T_323 = eq(UInt<12>(2832), addr) @[build/NutShell.fir.opt.mlir 17702:23]
    node _rdata_T_324 = mux(_rdata_T_162, _rdata_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17704:23]
    node _rdata_T_325 = mux(_rdata_T_163, _rdata_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17706:23]
    node _rdata_T_326 = mux(_rdata_T_164, _rdata_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17708:23]
    node _rdata_T_327 = mux(_rdata_T_165, _rdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17710:23]
    node _rdata_T_328 = mux(_rdata_T_166, _rdata_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17712:23]
    node _rdata_T_329 = mux(_rdata_T_167, _rdata_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17714:23]
    node _rdata_T_330 = mux(_rdata_T_168, _rdata_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17716:23]
    node _rdata_T_331 = mux(_rdata_T_169, _rdata_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17718:23]
    node _rdata_T_332 = mux(_rdata_T_170, _rdata_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17720:23]
    node _rdata_T_333 = mux(_rdata_T_171, _rdata_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17722:23]
    node _rdata_T_334 = mux(_rdata_T_172, _rdata_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17724:23]
    node _rdata_T_335 = mux(_rdata_T_173, _rdata_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17726:23]
    node _rdata_T_336 = mux(_rdata_T_174, _rdata_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17728:23]
    node _rdata_T_337 = mux(_rdata_T_175, _rdata_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17730:23]
    node _rdata_T_338 = mux(_rdata_T_176, _rdata_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17732:23]
    node _rdata_T_339 = mux(_rdata_T_177, _rdata_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17734:23]
    node _rdata_T_340 = mux(_rdata_T_178, _rdata_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17736:23]
    node _rdata_T_341 = mux(_rdata_T_179, _rdata_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17738:23]
    node _rdata_T_342 = mux(_rdata_T_180, _rdata_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17740:23]
    node _rdata_T_343 = mux(_rdata_T_181, _rdata_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17742:23]
    node _rdata_T_344 = mux(_rdata_T_182, _rdata_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17744:23]
    node _rdata_T_345 = mux(_rdata_T_183, _rdata_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17746:23]
    node _rdata_T_346 = mux(_rdata_T_184, _rdata_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17748:23]
    node _rdata_T_347 = mux(_rdata_T_185, _rdata_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17750:23]
    node _rdata_T_348 = mux(_rdata_T_186, _rdata_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17752:23]
    node _rdata_T_349 = mux(_rdata_T_187, _rdata_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17754:23]
    node _rdata_T_350 = mux(_rdata_T_188, _rdata_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17756:23]
    node _rdata_T_351 = mux(_rdata_T_189, _rdata_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17758:23]
    node _rdata_T_352 = mux(_rdata_T_190, _rdata_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17760:23]
    node _rdata_T_353 = mux(_rdata_T_191, _rdata_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17762:23]
    node _rdata_T_354 = mux(_rdata_T_192, _rdata_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17764:23]
    node _rdata_T_355 = mux(_rdata_T_193, _rdata_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17766:23]
    node _rdata_T_356 = mux(_rdata_T_194, _rdata_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17768:23]
    node _rdata_T_357 = mux(_rdata_T_195, _rdata_T_33, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17770:23]
    node _rdata_T_358 = mux(_rdata_T_196, _rdata_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17772:23]
    node _rdata_T_359 = mux(_rdata_T_197, _rdata_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17774:23]
    node _rdata_T_360 = mux(_rdata_T_198, _rdata_T_36, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17776:23]
    node _rdata_T_361 = mux(_rdata_T_199, _rdata_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17778:23]
    node _rdata_T_362 = mux(_rdata_T_200, _rdata_T_38, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17780:23]
    node _rdata_T_363 = mux(_rdata_T_201, _rdata_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17782:23]
    node _rdata_T_364 = mux(_rdata_T_202, _rdata_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17784:23]
    node _rdata_T_365 = mux(_rdata_T_203, _rdata_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17786:23]
    node _rdata_T_366 = mux(_rdata_T_204, _rdata_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17788:23]
    node _rdata_T_367 = mux(_rdata_T_205, _rdata_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17790:23]
    node _rdata_T_368 = mux(_rdata_T_206, _rdata_T_44, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17792:23]
    node _rdata_T_369 = mux(_rdata_T_207, _rdata_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17794:23]
    node _rdata_T_370 = mux(_rdata_T_208, _rdata_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17796:23]
    node _rdata_T_371 = mux(_rdata_T_209, _rdata_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17798:23]
    node _rdata_T_372 = mux(_rdata_T_210, _rdata_T_48, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17800:23]
    node _rdata_T_373 = mux(_rdata_T_211, _rdata_T_49, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17802:23]
    node _rdata_T_374 = mux(_rdata_T_212, _rdata_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17804:23]
    node _rdata_T_375 = mux(_rdata_T_213, _rdata_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17806:23]
    node _rdata_T_376 = mux(_rdata_T_214, _rdata_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17808:23]
    node _rdata_T_377 = mux(_rdata_T_215, _rdata_T_53, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17810:23]
    node _rdata_T_378 = mux(_rdata_T_216, _rdata_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17812:23]
    node _rdata_T_379 = mux(_rdata_T_217, _rdata_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17814:23]
    node _rdata_T_380 = mux(_rdata_T_218, _rdata_T_56, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17816:23]
    node _rdata_T_381 = mux(_rdata_T_219, _rdata_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17818:23]
    node _rdata_T_382 = mux(_rdata_T_220, _rdata_T_58, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17820:23]
    node _rdata_T_383 = mux(_rdata_T_221, _rdata_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17822:23]
    node _rdata_T_384 = mux(_rdata_T_222, _rdata_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17824:23]
    node _rdata_T_385 = mux(_rdata_T_223, _rdata_T_61, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17826:23]
    node _rdata_T_386 = mux(_rdata_T_224, _rdata_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17828:23]
    node _rdata_T_387 = mux(_rdata_T_225, _rdata_T_63, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17830:23]
    node _rdata_T_388 = mux(_rdata_T_226, _rdata_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17832:23]
    node _rdata_T_389 = mux(_rdata_T_227, _rdata_T_65, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17834:23]
    node _rdata_T_390 = mux(_rdata_T_228, _rdata_T_66, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17836:23]
    node _rdata_T_391 = mux(_rdata_T_229, _rdata_T_67, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17838:23]
    node _rdata_T_392 = mux(_rdata_T_230, _rdata_T_68, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17840:23]
    node _rdata_T_393 = mux(_rdata_T_231, _rdata_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17842:23]
    node _rdata_T_394 = mux(_rdata_T_232, _rdata_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17844:23]
    node _rdata_T_395 = mux(_rdata_T_233, _rdata_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17846:23]
    node _rdata_T_396 = mux(_rdata_T_234, _rdata_T_72, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17848:23]
    node _rdata_T_397 = mux(_rdata_T_235, _rdata_T_73, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17850:23]
    node _rdata_T_398 = mux(_rdata_T_236, _rdata_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17852:23]
    node _rdata_T_399 = mux(_rdata_T_237, _rdata_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17854:23]
    node _rdata_T_400 = mux(_rdata_T_238, _rdata_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17856:23]
    node _rdata_T_401 = mux(_rdata_T_239, _rdata_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17858:23]
    node _rdata_T_402 = mux(_rdata_T_240, _rdata_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17860:23]
    node _rdata_T_403 = mux(_rdata_T_241, _rdata_T_79, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17862:23]
    node _rdata_T_404 = mux(_rdata_T_242, _rdata_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17864:23]
    node _rdata_T_405 = mux(_rdata_T_243, _rdata_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17866:23]
    node _rdata_T_406 = mux(_rdata_T_244, _rdata_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17868:23]
    node _rdata_T_407 = mux(_rdata_T_245, _rdata_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17870:23]
    node _rdata_T_408 = mux(_rdata_T_246, _rdata_T_84, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17872:23]
    node _rdata_T_409 = mux(_rdata_T_247, _rdata_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17874:23]
    node _rdata_T_410 = mux(_rdata_T_248, _rdata_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17876:23]
    node _rdata_T_411 = mux(_rdata_T_249, _rdata_T_87, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17878:23]
    node _rdata_T_412 = mux(_rdata_T_250, _rdata_T_88, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17880:23]
    node _rdata_T_413 = mux(_rdata_T_251, _rdata_T_89, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17882:23]
    node _rdata_T_414 = mux(_rdata_T_252, _rdata_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17884:23]
    node _rdata_T_415 = mux(_rdata_T_253, _rdata_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17886:23]
    node _rdata_T_416 = mux(_rdata_T_254, _rdata_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17888:23]
    node _rdata_T_417 = mux(_rdata_T_255, _rdata_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17890:23]
    node _rdata_T_418 = mux(_rdata_T_256, _rdata_T_94, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17892:23]
    node _rdata_T_419 = mux(_rdata_T_257, _rdata_T_95, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17894:23]
    node _rdata_T_420 = mux(_rdata_T_258, _rdata_T_96, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17896:23]
    node _rdata_T_421 = mux(_rdata_T_259, _rdata_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17898:23]
    node _rdata_T_422 = mux(_rdata_T_260, _rdata_T_98, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17900:23]
    node _rdata_T_423 = mux(_rdata_T_261, _rdata_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17902:23]
    node _rdata_T_424 = mux(_rdata_T_262, _rdata_T_100, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17904:23]
    node _rdata_T_425 = mux(_rdata_T_263, _rdata_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17906:23]
    node _rdata_T_426 = mux(_rdata_T_264, _rdata_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17908:23]
    node _rdata_T_427 = mux(_rdata_T_265, _rdata_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17910:23]
    node _rdata_T_428 = mux(_rdata_T_266, _rdata_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17912:23]
    node _rdata_T_429 = mux(_rdata_T_267, _rdata_T_105, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17914:23]
    node _rdata_T_430 = mux(_rdata_T_268, _rdata_T_106, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17916:23]
    node _rdata_T_431 = mux(_rdata_T_269, _rdata_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17918:23]
    node _rdata_T_432 = mux(_rdata_T_270, _rdata_T_108, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17920:23]
    node _rdata_T_433 = mux(_rdata_T_271, _rdata_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17922:23]
    node _rdata_T_434 = mux(_rdata_T_272, _rdata_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17924:23]
    node _rdata_T_435 = mux(_rdata_T_273, _rdata_T_111, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17926:23]
    node _rdata_T_436 = mux(_rdata_T_274, _rdata_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17928:23]
    node _rdata_T_437 = mux(_rdata_T_275, _rdata_T_113, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17930:23]
    node _rdata_T_438 = mux(_rdata_T_276, _rdata_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17932:23]
    node _rdata_T_439 = mux(_rdata_T_277, _rdata_T_115, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17934:23]
    node _rdata_T_440 = mux(_rdata_T_278, _rdata_T_116, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17936:23]
    node _rdata_T_441 = mux(_rdata_T_279, _rdata_T_117, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17938:23]
    node _rdata_T_442 = mux(_rdata_T_280, _rdata_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17940:23]
    node _rdata_T_443 = mux(_rdata_T_281, _rdata_T_119, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17942:23]
    node _rdata_T_444 = mux(_rdata_T_282, _rdata_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17944:23]
    node _rdata_T_445 = mux(_rdata_T_283, _rdata_T_121, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17946:23]
    node _rdata_T_446 = mux(_rdata_T_284, _rdata_T_122, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17948:23]
    node _rdata_T_447 = mux(_rdata_T_285, _rdata_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17950:23]
    node _rdata_T_448 = mux(_rdata_T_286, _rdata_T_124, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17952:23]
    node _rdata_T_449 = mux(_rdata_T_287, _rdata_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17954:23]
    node _rdata_T_450 = mux(_rdata_T_288, _rdata_T_126, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17956:23]
    node _rdata_T_451 = mux(_rdata_T_289, _rdata_T_127, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17958:23]
    node _rdata_T_452 = mux(_rdata_T_290, _rdata_T_128, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17960:23]
    node _rdata_T_453 = mux(_rdata_T_291, _rdata_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17962:23]
    node _rdata_T_454 = mux(_rdata_T_292, _rdata_T_130, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17964:23]
    node _rdata_T_455 = mux(_rdata_T_293, _rdata_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17966:23]
    node _rdata_T_456 = mux(_rdata_T_294, _rdata_T_132, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17968:23]
    node _rdata_T_457 = mux(_rdata_T_295, _rdata_T_133, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17970:23]
    node _rdata_T_458 = mux(_rdata_T_296, _rdata_T_134, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17972:23]
    node _rdata_T_459 = mux(_rdata_T_297, _rdata_T_135, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17974:23]
    node _rdata_T_460 = mux(_rdata_T_298, _rdata_T_136, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17976:23]
    node _rdata_T_461 = mux(_rdata_T_299, _rdata_T_137, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17978:23]
    node _rdata_T_462 = mux(_rdata_T_300, _rdata_T_138, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17980:23]
    node _rdata_T_463 = mux(_rdata_T_301, _rdata_T_139, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17982:23]
    node _rdata_T_464 = mux(_rdata_T_302, _rdata_T_140, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17984:23]
    node _rdata_T_465 = mux(_rdata_T_303, _rdata_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17986:23]
    node _rdata_T_466 = mux(_rdata_T_304, _rdata_T_142, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17988:23]
    node _rdata_T_467 = mux(_rdata_T_305, _rdata_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17990:23]
    node _rdata_T_468 = mux(_rdata_T_306, _rdata_T_144, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17992:23]
    node _rdata_T_469 = mux(_rdata_T_307, _rdata_T_145, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17994:23]
    node _rdata_T_470 = mux(_rdata_T_308, _rdata_T_146, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17996:23]
    node _rdata_T_471 = mux(_rdata_T_309, _rdata_T_147, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17998:23]
    node _rdata_T_472 = mux(_rdata_T_310, _rdata_T_148, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18000:23]
    node _rdata_T_473 = mux(_rdata_T_311, _rdata_T_149, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18002:23]
    node _rdata_T_474 = mux(_rdata_T_312, _rdata_T_150, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18004:23]
    node _rdata_T_475 = mux(_rdata_T_313, _rdata_T_151, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18006:23]
    node _rdata_T_476 = mux(_rdata_T_314, _rdata_T_152, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18008:23]
    node _rdata_T_477 = mux(_rdata_T_315, _rdata_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18010:23]
    node _rdata_T_478 = mux(_rdata_T_316, _rdata_T_154, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18012:23]
    node _rdata_T_479 = mux(_rdata_T_317, _rdata_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18014:23]
    node _rdata_T_480 = mux(_rdata_T_318, _rdata_T_156, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18016:23]
    node _rdata_T_481 = mux(_rdata_T_319, _rdata_T_157, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18018:23]
    node _rdata_T_482 = mux(_rdata_T_320, _rdata_T_158, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18020:23]
    node _rdata_T_483 = mux(_rdata_T_321, _rdata_T_159, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18022:23]
    node _rdata_T_484 = mux(_rdata_T_322, _rdata_T_160, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18024:23]
    node _rdata_T_485 = mux(_rdata_T_323, _rdata_T_161, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18026:23]
    node _rdata_T_486 = or(_rdata_T_324, _rdata_T_325) @[build/NutShell.fir.opt.mlir 18028:23]
    node _rdata_T_487 = or(_rdata_T_486, _rdata_T_326) @[build/NutShell.fir.opt.mlir 18030:23]
    node _rdata_T_488 = or(_rdata_T_487, _rdata_T_327) @[build/NutShell.fir.opt.mlir 18032:23]
    node _rdata_T_489 = or(_rdata_T_488, _rdata_T_328) @[build/NutShell.fir.opt.mlir 18034:23]
    node _rdata_T_490 = or(_rdata_T_489, _rdata_T_329) @[build/NutShell.fir.opt.mlir 18036:23]
    node _rdata_T_491 = or(_rdata_T_490, _rdata_T_330) @[build/NutShell.fir.opt.mlir 18038:23]
    node _rdata_T_492 = or(_rdata_T_491, _rdata_T_331) @[build/NutShell.fir.opt.mlir 18040:23]
    node _rdata_T_493 = or(_rdata_T_492, _rdata_T_332) @[build/NutShell.fir.opt.mlir 18042:23]
    node _rdata_T_494 = or(_rdata_T_493, _rdata_T_333) @[build/NutShell.fir.opt.mlir 18044:23]
    node _rdata_T_495 = or(_rdata_T_494, _rdata_T_334) @[build/NutShell.fir.opt.mlir 18046:23]
    node _rdata_T_496 = or(_rdata_T_495, _rdata_T_335) @[build/NutShell.fir.opt.mlir 18048:23]
    node _rdata_T_497 = or(_rdata_T_496, _rdata_T_336) @[build/NutShell.fir.opt.mlir 18050:23]
    node _rdata_T_498 = or(_rdata_T_497, _rdata_T_337) @[build/NutShell.fir.opt.mlir 18052:23]
    node _rdata_T_499 = or(_rdata_T_498, _rdata_T_338) @[build/NutShell.fir.opt.mlir 18054:23]
    node _rdata_T_500 = or(_rdata_T_499, _rdata_T_339) @[build/NutShell.fir.opt.mlir 18056:23]
    node _rdata_T_501 = or(_rdata_T_500, _rdata_T_340) @[build/NutShell.fir.opt.mlir 18058:23]
    node _rdata_T_502 = or(_rdata_T_501, _rdata_T_341) @[build/NutShell.fir.opt.mlir 18060:23]
    node _rdata_T_503 = or(_rdata_T_502, _rdata_T_342) @[build/NutShell.fir.opt.mlir 18062:23]
    node _rdata_T_504 = or(_rdata_T_503, _rdata_T_343) @[build/NutShell.fir.opt.mlir 18064:23]
    node _rdata_T_505 = or(_rdata_T_504, _rdata_T_344) @[build/NutShell.fir.opt.mlir 18066:23]
    node _rdata_T_506 = or(_rdata_T_505, _rdata_T_345) @[build/NutShell.fir.opt.mlir 18068:23]
    node _rdata_T_507 = or(_rdata_T_506, _rdata_T_346) @[build/NutShell.fir.opt.mlir 18070:23]
    node _rdata_T_508 = or(_rdata_T_507, _rdata_T_347) @[build/NutShell.fir.opt.mlir 18072:23]
    node _rdata_T_509 = or(_rdata_T_508, _rdata_T_348) @[build/NutShell.fir.opt.mlir 18074:23]
    node _rdata_T_510 = or(_rdata_T_509, _rdata_T_349) @[build/NutShell.fir.opt.mlir 18076:23]
    node _rdata_T_511 = or(_rdata_T_510, _rdata_T_350) @[build/NutShell.fir.opt.mlir 18078:23]
    node _rdata_T_512 = or(_rdata_T_511, _rdata_T_351) @[build/NutShell.fir.opt.mlir 18080:23]
    node _rdata_T_513 = or(_rdata_T_512, _rdata_T_352) @[build/NutShell.fir.opt.mlir 18082:23]
    node _rdata_T_514 = or(_rdata_T_513, _rdata_T_353) @[build/NutShell.fir.opt.mlir 18084:23]
    node _rdata_T_515 = or(_rdata_T_514, _rdata_T_354) @[build/NutShell.fir.opt.mlir 18086:23]
    node _rdata_T_516 = or(_rdata_T_515, _rdata_T_355) @[build/NutShell.fir.opt.mlir 18088:23]
    node _rdata_T_517 = or(_rdata_T_516, _rdata_T_356) @[build/NutShell.fir.opt.mlir 18090:23]
    node _rdata_T_518 = or(_rdata_T_517, _rdata_T_357) @[build/NutShell.fir.opt.mlir 18092:23]
    node _rdata_T_519 = or(_rdata_T_518, _rdata_T_358) @[build/NutShell.fir.opt.mlir 18094:23]
    node _rdata_T_520 = or(_rdata_T_519, _rdata_T_359) @[build/NutShell.fir.opt.mlir 18096:23]
    node _rdata_T_521 = or(_rdata_T_520, _rdata_T_360) @[build/NutShell.fir.opt.mlir 18098:23]
    node _rdata_T_522 = or(_rdata_T_521, _rdata_T_361) @[build/NutShell.fir.opt.mlir 18100:23]
    node _rdata_T_523 = or(_rdata_T_522, _rdata_T_362) @[build/NutShell.fir.opt.mlir 18102:23]
    node _rdata_T_524 = or(_rdata_T_523, _rdata_T_363) @[build/NutShell.fir.opt.mlir 18104:23]
    node _rdata_T_525 = or(_rdata_T_524, _rdata_T_364) @[build/NutShell.fir.opt.mlir 18106:23]
    node _rdata_T_526 = or(_rdata_T_525, _rdata_T_365) @[build/NutShell.fir.opt.mlir 18108:23]
    node _rdata_T_527 = or(_rdata_T_526, _rdata_T_366) @[build/NutShell.fir.opt.mlir 18110:23]
    node _rdata_T_528 = or(_rdata_T_527, _rdata_T_367) @[build/NutShell.fir.opt.mlir 18112:23]
    node _rdata_T_529 = or(_rdata_T_528, _rdata_T_368) @[build/NutShell.fir.opt.mlir 18114:23]
    node _rdata_T_530 = or(_rdata_T_529, _rdata_T_369) @[build/NutShell.fir.opt.mlir 18116:23]
    node _rdata_T_531 = or(_rdata_T_530, _rdata_T_370) @[build/NutShell.fir.opt.mlir 18118:23]
    node _rdata_T_532 = or(_rdata_T_531, _rdata_T_371) @[build/NutShell.fir.opt.mlir 18120:23]
    node _rdata_T_533 = or(_rdata_T_532, _rdata_T_372) @[build/NutShell.fir.opt.mlir 18122:23]
    node _rdata_T_534 = or(_rdata_T_533, _rdata_T_373) @[build/NutShell.fir.opt.mlir 18124:23]
    node _rdata_T_535 = or(_rdata_T_534, _rdata_T_374) @[build/NutShell.fir.opt.mlir 18126:23]
    node _rdata_T_536 = or(_rdata_T_535, _rdata_T_375) @[build/NutShell.fir.opt.mlir 18128:23]
    node _rdata_T_537 = or(_rdata_T_536, _rdata_T_376) @[build/NutShell.fir.opt.mlir 18130:23]
    node _rdata_T_538 = or(_rdata_T_537, _rdata_T_377) @[build/NutShell.fir.opt.mlir 18132:23]
    node _rdata_T_539 = or(_rdata_T_538, _rdata_T_378) @[build/NutShell.fir.opt.mlir 18134:23]
    node _rdata_T_540 = or(_rdata_T_539, _rdata_T_379) @[build/NutShell.fir.opt.mlir 18136:23]
    node _rdata_T_541 = or(_rdata_T_540, _rdata_T_380) @[build/NutShell.fir.opt.mlir 18138:23]
    node _rdata_T_542 = or(_rdata_T_541, _rdata_T_381) @[build/NutShell.fir.opt.mlir 18140:23]
    node _rdata_T_543 = or(_rdata_T_542, _rdata_T_382) @[build/NutShell.fir.opt.mlir 18142:23]
    node _rdata_T_544 = or(_rdata_T_543, _rdata_T_383) @[build/NutShell.fir.opt.mlir 18144:23]
    node _rdata_T_545 = or(_rdata_T_544, _rdata_T_384) @[build/NutShell.fir.opt.mlir 18146:23]
    node _rdata_T_546 = or(_rdata_T_545, _rdata_T_385) @[build/NutShell.fir.opt.mlir 18148:23]
    node _rdata_T_547 = or(_rdata_T_546, _rdata_T_386) @[build/NutShell.fir.opt.mlir 18150:23]
    node _rdata_T_548 = or(_rdata_T_547, _rdata_T_387) @[build/NutShell.fir.opt.mlir 18152:23]
    node _rdata_T_549 = or(_rdata_T_548, _rdata_T_388) @[build/NutShell.fir.opt.mlir 18154:23]
    node _rdata_T_550 = or(_rdata_T_549, _rdata_T_389) @[build/NutShell.fir.opt.mlir 18156:23]
    node _rdata_T_551 = or(_rdata_T_550, _rdata_T_390) @[build/NutShell.fir.opt.mlir 18158:23]
    node _rdata_T_552 = or(_rdata_T_551, _rdata_T_391) @[build/NutShell.fir.opt.mlir 18160:23]
    node _rdata_T_553 = or(_rdata_T_552, _rdata_T_392) @[build/NutShell.fir.opt.mlir 18162:23]
    node _rdata_T_554 = or(_rdata_T_553, _rdata_T_393) @[build/NutShell.fir.opt.mlir 18164:23]
    node _rdata_T_555 = or(_rdata_T_554, _rdata_T_394) @[build/NutShell.fir.opt.mlir 18166:23]
    node _rdata_T_556 = or(_rdata_T_555, _rdata_T_395) @[build/NutShell.fir.opt.mlir 18168:23]
    node _rdata_T_557 = or(_rdata_T_556, _rdata_T_396) @[build/NutShell.fir.opt.mlir 18170:23]
    node _rdata_T_558 = or(_rdata_T_557, _rdata_T_397) @[build/NutShell.fir.opt.mlir 18172:23]
    node _rdata_T_559 = or(_rdata_T_558, _rdata_T_398) @[build/NutShell.fir.opt.mlir 18174:23]
    node _rdata_T_560 = or(_rdata_T_559, _rdata_T_399) @[build/NutShell.fir.opt.mlir 18176:23]
    node _rdata_T_561 = or(_rdata_T_560, _rdata_T_400) @[build/NutShell.fir.opt.mlir 18178:23]
    node _rdata_T_562 = or(_rdata_T_561, _rdata_T_401) @[build/NutShell.fir.opt.mlir 18180:23]
    node _rdata_T_563 = or(_rdata_T_562, _rdata_T_402) @[build/NutShell.fir.opt.mlir 18182:23]
    node _rdata_T_564 = or(_rdata_T_563, _rdata_T_403) @[build/NutShell.fir.opt.mlir 18184:23]
    node _rdata_T_565 = or(_rdata_T_564, _rdata_T_404) @[build/NutShell.fir.opt.mlir 18186:23]
    node _rdata_T_566 = or(_rdata_T_565, _rdata_T_405) @[build/NutShell.fir.opt.mlir 18188:23]
    node _rdata_T_567 = or(_rdata_T_566, _rdata_T_406) @[build/NutShell.fir.opt.mlir 18190:23]
    node _rdata_T_568 = or(_rdata_T_567, _rdata_T_407) @[build/NutShell.fir.opt.mlir 18192:23]
    node _rdata_T_569 = or(_rdata_T_568, _rdata_T_408) @[build/NutShell.fir.opt.mlir 18194:23]
    node _rdata_T_570 = or(_rdata_T_569, _rdata_T_409) @[build/NutShell.fir.opt.mlir 18196:23]
    node _rdata_T_571 = or(_rdata_T_570, _rdata_T_410) @[build/NutShell.fir.opt.mlir 18198:23]
    node _rdata_T_572 = or(_rdata_T_571, _rdata_T_411) @[build/NutShell.fir.opt.mlir 18200:23]
    node _rdata_T_573 = or(_rdata_T_572, _rdata_T_412) @[build/NutShell.fir.opt.mlir 18202:23]
    node _rdata_T_574 = or(_rdata_T_573, _rdata_T_413) @[build/NutShell.fir.opt.mlir 18204:23]
    node _rdata_T_575 = or(_rdata_T_574, _rdata_T_414) @[build/NutShell.fir.opt.mlir 18206:23]
    node _rdata_T_576 = or(_rdata_T_575, _rdata_T_415) @[build/NutShell.fir.opt.mlir 18208:23]
    node _rdata_T_577 = or(_rdata_T_576, _rdata_T_416) @[build/NutShell.fir.opt.mlir 18210:23]
    node _rdata_T_578 = or(_rdata_T_577, _rdata_T_417) @[build/NutShell.fir.opt.mlir 18212:23]
    node _rdata_T_579 = or(_rdata_T_578, _rdata_T_418) @[build/NutShell.fir.opt.mlir 18214:23]
    node _rdata_T_580 = or(_rdata_T_579, _rdata_T_419) @[build/NutShell.fir.opt.mlir 18216:23]
    node _rdata_T_581 = or(_rdata_T_580, _rdata_T_420) @[build/NutShell.fir.opt.mlir 18218:23]
    node _rdata_T_582 = or(_rdata_T_581, _rdata_T_421) @[build/NutShell.fir.opt.mlir 18220:23]
    node _rdata_T_583 = or(_rdata_T_582, _rdata_T_422) @[build/NutShell.fir.opt.mlir 18222:23]
    node _rdata_T_584 = or(_rdata_T_583, _rdata_T_423) @[build/NutShell.fir.opt.mlir 18224:23]
    node _rdata_T_585 = or(_rdata_T_584, _rdata_T_424) @[build/NutShell.fir.opt.mlir 18226:23]
    node _rdata_T_586 = or(_rdata_T_585, _rdata_T_425) @[build/NutShell.fir.opt.mlir 18228:23]
    node _rdata_T_587 = or(_rdata_T_586, _rdata_T_426) @[build/NutShell.fir.opt.mlir 18230:23]
    node _rdata_T_588 = or(_rdata_T_587, _rdata_T_427) @[build/NutShell.fir.opt.mlir 18232:23]
    node _rdata_T_589 = or(_rdata_T_588, _rdata_T_428) @[build/NutShell.fir.opt.mlir 18234:23]
    node _rdata_T_590 = or(_rdata_T_589, _rdata_T_429) @[build/NutShell.fir.opt.mlir 18236:23]
    node _rdata_T_591 = or(_rdata_T_590, _rdata_T_430) @[build/NutShell.fir.opt.mlir 18238:23]
    node _rdata_T_592 = or(_rdata_T_591, _rdata_T_431) @[build/NutShell.fir.opt.mlir 18240:23]
    node _rdata_T_593 = or(_rdata_T_592, _rdata_T_432) @[build/NutShell.fir.opt.mlir 18242:23]
    node _rdata_T_594 = or(_rdata_T_593, _rdata_T_433) @[build/NutShell.fir.opt.mlir 18244:23]
    node _rdata_T_595 = or(_rdata_T_594, _rdata_T_434) @[build/NutShell.fir.opt.mlir 18246:23]
    node _rdata_T_596 = or(_rdata_T_595, _rdata_T_435) @[build/NutShell.fir.opt.mlir 18248:23]
    node _rdata_T_597 = or(_rdata_T_596, _rdata_T_436) @[build/NutShell.fir.opt.mlir 18250:23]
    node _rdata_T_598 = or(_rdata_T_597, _rdata_T_437) @[build/NutShell.fir.opt.mlir 18252:23]
    node _rdata_T_599 = or(_rdata_T_598, _rdata_T_438) @[build/NutShell.fir.opt.mlir 18254:23]
    node _rdata_T_600 = or(_rdata_T_599, _rdata_T_439) @[build/NutShell.fir.opt.mlir 18256:23]
    node _rdata_T_601 = or(_rdata_T_600, _rdata_T_440) @[build/NutShell.fir.opt.mlir 18258:23]
    node _rdata_T_602 = or(_rdata_T_601, _rdata_T_441) @[build/NutShell.fir.opt.mlir 18260:23]
    node _rdata_T_603 = or(_rdata_T_602, _rdata_T_442) @[build/NutShell.fir.opt.mlir 18262:23]
    node _rdata_T_604 = or(_rdata_T_603, _rdata_T_443) @[build/NutShell.fir.opt.mlir 18264:23]
    node _rdata_T_605 = or(_rdata_T_604, _rdata_T_444) @[build/NutShell.fir.opt.mlir 18266:23]
    node _rdata_T_606 = or(_rdata_T_605, _rdata_T_445) @[build/NutShell.fir.opt.mlir 18268:23]
    node _rdata_T_607 = or(_rdata_T_606, _rdata_T_446) @[build/NutShell.fir.opt.mlir 18270:23]
    node _rdata_T_608 = or(_rdata_T_607, _rdata_T_447) @[build/NutShell.fir.opt.mlir 18272:23]
    node _rdata_T_609 = or(_rdata_T_608, _rdata_T_448) @[build/NutShell.fir.opt.mlir 18274:23]
    node _rdata_T_610 = or(_rdata_T_609, _rdata_T_449) @[build/NutShell.fir.opt.mlir 18276:23]
    node _rdata_T_611 = or(_rdata_T_610, _rdata_T_450) @[build/NutShell.fir.opt.mlir 18278:23]
    node _rdata_T_612 = or(_rdata_T_611, _rdata_T_451) @[build/NutShell.fir.opt.mlir 18280:23]
    node _rdata_T_613 = or(_rdata_T_612, _rdata_T_452) @[build/NutShell.fir.opt.mlir 18282:23]
    node _rdata_T_614 = or(_rdata_T_613, _rdata_T_453) @[build/NutShell.fir.opt.mlir 18284:23]
    node _rdata_T_615 = or(_rdata_T_614, _rdata_T_454) @[build/NutShell.fir.opt.mlir 18286:23]
    node _rdata_T_616 = or(_rdata_T_615, _rdata_T_455) @[build/NutShell.fir.opt.mlir 18288:23]
    node _rdata_T_617 = or(_rdata_T_616, _rdata_T_456) @[build/NutShell.fir.opt.mlir 18290:23]
    node _rdata_T_618 = or(_rdata_T_617, _rdata_T_457) @[build/NutShell.fir.opt.mlir 18292:23]
    node _rdata_T_619 = or(_rdata_T_618, _rdata_T_458) @[build/NutShell.fir.opt.mlir 18294:23]
    node _rdata_T_620 = or(_rdata_T_619, _rdata_T_459) @[build/NutShell.fir.opt.mlir 18296:23]
    node _rdata_T_621 = or(_rdata_T_620, _rdata_T_460) @[build/NutShell.fir.opt.mlir 18298:23]
    node _rdata_T_622 = or(_rdata_T_621, _rdata_T_461) @[build/NutShell.fir.opt.mlir 18300:23]
    node _rdata_T_623 = or(_rdata_T_622, _rdata_T_462) @[build/NutShell.fir.opt.mlir 18302:23]
    node _rdata_T_624 = or(_rdata_T_623, _rdata_T_463) @[build/NutShell.fir.opt.mlir 18304:23]
    node _rdata_T_625 = or(_rdata_T_624, _rdata_T_464) @[build/NutShell.fir.opt.mlir 18306:23]
    node _rdata_T_626 = or(_rdata_T_625, _rdata_T_465) @[build/NutShell.fir.opt.mlir 18308:23]
    node _rdata_T_627 = or(_rdata_T_626, _rdata_T_466) @[build/NutShell.fir.opt.mlir 18310:23]
    node _rdata_T_628 = or(_rdata_T_627, _rdata_T_467) @[build/NutShell.fir.opt.mlir 18312:23]
    node _rdata_T_629 = or(_rdata_T_628, _rdata_T_468) @[build/NutShell.fir.opt.mlir 18314:23]
    node _rdata_T_630 = or(_rdata_T_629, _rdata_T_469) @[build/NutShell.fir.opt.mlir 18316:23]
    node _rdata_T_631 = or(_rdata_T_630, _rdata_T_470) @[build/NutShell.fir.opt.mlir 18318:23]
    node _rdata_T_632 = or(_rdata_T_631, _rdata_T_471) @[build/NutShell.fir.opt.mlir 18320:23]
    node _rdata_T_633 = or(_rdata_T_632, _rdata_T_472) @[build/NutShell.fir.opt.mlir 18322:23]
    node _rdata_T_634 = or(_rdata_T_633, _rdata_T_473) @[build/NutShell.fir.opt.mlir 18324:23]
    node _rdata_T_635 = or(_rdata_T_634, _rdata_T_474) @[build/NutShell.fir.opt.mlir 18326:23]
    node _rdata_T_636 = or(_rdata_T_635, _rdata_T_475) @[build/NutShell.fir.opt.mlir 18328:23]
    node _rdata_T_637 = or(_rdata_T_636, _rdata_T_476) @[build/NutShell.fir.opt.mlir 18330:23]
    node _rdata_T_638 = or(_rdata_T_637, _rdata_T_477) @[build/NutShell.fir.opt.mlir 18332:23]
    node _rdata_T_639 = or(_rdata_T_638, _rdata_T_478) @[build/NutShell.fir.opt.mlir 18334:23]
    node _rdata_T_640 = or(_rdata_T_639, _rdata_T_479) @[build/NutShell.fir.opt.mlir 18336:23]
    node _rdata_T_641 = or(_rdata_T_640, _rdata_T_480) @[build/NutShell.fir.opt.mlir 18338:23]
    node _rdata_T_642 = or(_rdata_T_641, _rdata_T_481) @[build/NutShell.fir.opt.mlir 18340:23]
    node _rdata_T_643 = or(_rdata_T_642, _rdata_T_482) @[build/NutShell.fir.opt.mlir 18342:23]
    node _rdata_T_644 = or(_rdata_T_643, _rdata_T_483) @[build/NutShell.fir.opt.mlir 18344:23]
    node _rdata_T_645 = or(_rdata_T_644, _rdata_T_484) @[build/NutShell.fir.opt.mlir 18346:23]
    node _rdata_T_646 = or(_rdata_T_645, _rdata_T_485) @[build/NutShell.fir.opt.mlir 18348:23]
    wire _rdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 18349:22]
    connect _rdata_WIRE, _rdata_T_646 @[build/NutShell.fir.opt.mlir 18350:7]
    connect rdata, _rdata_WIRE @[build/NutShell.fir.opt.mlir 18351:7]
    node _T_2 = eq(addr, UInt<12>(2822)) @[build/NutShell.fir.opt.mlir 18353:15]
    node _T_3 = and(_T_1, _T_2) @[build/NutShell.fir.opt.mlir 18355:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 18356:7]
      node _perfCnts_6_T = and(wdata, perfCntsLoMapping_6_2_2) @[build/NutShell.fir.opt.mlir 18358:26]
      node _perfCnts_6_T_1 = not(perfCntsLoMapping_6_2_2) @[build/NutShell.fir.opt.mlir 18360:28]
      node _perfCnts_6_T_2 = and(perfCnts_6, _perfCnts_6_T_1) @[build/NutShell.fir.opt.mlir 18362:28]
      node _perfCnts_6_T_3 = or(_perfCnts_6_T, _perfCnts_6_T_2) @[build/NutShell.fir.opt.mlir 18364:28]
      connect perfCnts_6, _perfCnts_6_T_3 @[build/NutShell.fir.opt.mlir 18365:9]
    node _T_4 = eq(addr, UInt<12>(2889)) @[build/NutShell.fir.opt.mlir 18368:15]
    node _T_5 = and(_T_1, _T_4) @[build/NutShell.fir.opt.mlir 18370:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 18371:7]
      node _perfCnts_73_T = and(wdata, perfCntsLoMapping_73_2_2) @[build/NutShell.fir.opt.mlir 18373:27]
      node _perfCnts_73_T_1 = not(perfCntsLoMapping_73_2_2) @[build/NutShell.fir.opt.mlir 18375:29]
      node _perfCnts_73_T_2 = and(perfCnts_73, _perfCnts_73_T_1) @[build/NutShell.fir.opt.mlir 18377:29]
      node _perfCnts_73_T_3 = or(_perfCnts_73_T, _perfCnts_73_T_2) @[build/NutShell.fir.opt.mlir 18379:29]
      connect perfCnts_73, _perfCnts_73_T_3 @[build/NutShell.fir.opt.mlir 18380:9]
    node _T_6 = eq(addr, UInt<12>(2876)) @[build/NutShell.fir.opt.mlir 18383:15]
    node _T_7 = and(_T_1, _T_6) @[build/NutShell.fir.opt.mlir 18385:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 18386:7]
      node _perfCnts_60_T = and(wdata, perfCntsLoMapping_60_2_2) @[build/NutShell.fir.opt.mlir 18388:27]
      node _perfCnts_60_T_1 = not(perfCntsLoMapping_60_2_2) @[build/NutShell.fir.opt.mlir 18390:29]
      node _perfCnts_60_T_2 = and(perfCnts_60, _perfCnts_60_T_1) @[build/NutShell.fir.opt.mlir 18392:29]
      node _perfCnts_60_T_3 = or(_perfCnts_60_T, _perfCnts_60_T_2) @[build/NutShell.fir.opt.mlir 18394:29]
      connect perfCnts_60, _perfCnts_60_T_3 @[build/NutShell.fir.opt.mlir 18395:9]
    node _T_8 = eq(addr, UInt<12>(2921)) @[build/NutShell.fir.opt.mlir 18398:15]
    node _T_9 = and(_T_1, _T_8) @[build/NutShell.fir.opt.mlir 18400:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 18401:7]
      node _perfCnts_105_T = and(wdata, perfCntsLoMapping_105_2_2) @[build/NutShell.fir.opt.mlir 18403:28]
      node _perfCnts_105_T_1 = not(perfCntsLoMapping_105_2_2) @[build/NutShell.fir.opt.mlir 18405:30]
      node _perfCnts_105_T_2 = and(perfCnts_105, _perfCnts_105_T_1) @[build/NutShell.fir.opt.mlir 18407:30]
      node _perfCnts_105_T_3 = or(_perfCnts_105_T, _perfCnts_105_T_2) @[build/NutShell.fir.opt.mlir 18409:30]
      connect perfCnts_105, _perfCnts_105_T_3 @[build/NutShell.fir.opt.mlir 18410:9]
    node _T_10 = eq(addr, UInt<12>(2940)) @[build/NutShell.fir.opt.mlir 18413:16]
    node _T_11 = and(_T_1, _T_10) @[build/NutShell.fir.opt.mlir 18415:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 18416:7]
      node _perfCnts_124_T = and(wdata, perfCntsLoMapping_124_2_2) @[build/NutShell.fir.opt.mlir 18418:28]
      node _perfCnts_124_T_1 = not(perfCntsLoMapping_124_2_2) @[build/NutShell.fir.opt.mlir 18420:30]
      node _perfCnts_124_T_2 = and(perfCnts_124, _perfCnts_124_T_1) @[build/NutShell.fir.opt.mlir 18422:30]
      node _perfCnts_124_T_3 = or(_perfCnts_124_T, _perfCnts_124_T_2) @[build/NutShell.fir.opt.mlir 18424:30]
      connect perfCnts_124, _perfCnts_124_T_3 @[build/NutShell.fir.opt.mlir 18425:9]
    node _T_12 = eq(addr, UInt<12>(2908)) @[build/NutShell.fir.opt.mlir 18428:16]
    node _T_13 = and(_T_1, _T_12) @[build/NutShell.fir.opt.mlir 18430:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 18431:7]
      node _perfCnts_92_T = and(wdata, perfCntsLoMapping_92_2_2) @[build/NutShell.fir.opt.mlir 18433:27]
      node _perfCnts_92_T_1 = not(perfCntsLoMapping_92_2_2) @[build/NutShell.fir.opt.mlir 18435:29]
      node _perfCnts_92_T_2 = and(perfCnts_92, _perfCnts_92_T_1) @[build/NutShell.fir.opt.mlir 18437:29]
      node _perfCnts_92_T_3 = or(_perfCnts_92_T, _perfCnts_92_T_2) @[build/NutShell.fir.opt.mlir 18439:29]
      connect perfCnts_92, _perfCnts_92_T_3 @[build/NutShell.fir.opt.mlir 18440:9]
    node _T_14 = eq(addr, UInt<12>(2837)) @[build/NutShell.fir.opt.mlir 18443:16]
    node _T_15 = and(_T_1, _T_14) @[build/NutShell.fir.opt.mlir 18445:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 18446:7]
      node _perfCnts_21_T = and(wdata, perfCntsLoMapping_21_2_2) @[build/NutShell.fir.opt.mlir 18448:27]
      node _perfCnts_21_T_1 = not(perfCntsLoMapping_21_2_2) @[build/NutShell.fir.opt.mlir 18450:29]
      node _perfCnts_21_T_2 = and(perfCnts_21, _perfCnts_21_T_1) @[build/NutShell.fir.opt.mlir 18452:29]
      node _perfCnts_21_T_3 = or(_perfCnts_21_T, _perfCnts_21_T_2) @[build/NutShell.fir.opt.mlir 18454:29]
      connect perfCnts_21, _perfCnts_21_T_3 @[build/NutShell.fir.opt.mlir 18455:9]
    node _T_16 = eq(addr, UInt<12>(2854)) @[build/NutShell.fir.opt.mlir 18458:16]
    node _T_17 = and(_T_1, _T_16) @[build/NutShell.fir.opt.mlir 18460:16]
    when _T_17 : @[build/NutShell.fir.opt.mlir 18461:7]
      node _perfCnts_38_T = and(wdata, perfCntsLoMapping_38_2_2) @[build/NutShell.fir.opt.mlir 18463:27]
      node _perfCnts_38_T_1 = not(perfCntsLoMapping_38_2_2) @[build/NutShell.fir.opt.mlir 18465:29]
      node _perfCnts_38_T_2 = and(perfCnts_38, _perfCnts_38_T_1) @[build/NutShell.fir.opt.mlir 18467:29]
      node _perfCnts_38_T_3 = or(_perfCnts_38_T, _perfCnts_38_T_2) @[build/NutShell.fir.opt.mlir 18469:29]
      connect perfCnts_38, _perfCnts_38_T_3 @[build/NutShell.fir.opt.mlir 18470:9]
    node _T_18 = eq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 18473:16]
    node _T_19 = and(_T_1, _T_18) @[build/NutShell.fir.opt.mlir 18475:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 18476:7]
      node _satp_T = and(wdata, mapping_9_2_2) @[build/NutShell.fir.opt.mlir 18478:20]
      node _satp_T_1 = not(mapping_9_2_2) @[build/NutShell.fir.opt.mlir 18480:22]
      node _satp_T_2 = and(satp, _satp_T_1) @[build/NutShell.fir.opt.mlir 18482:22]
      node _satp_T_3 = or(_satp_T, _satp_T_2) @[build/NutShell.fir.opt.mlir 18484:22]
      connect satp, _satp_T_3 @[build/NutShell.fir.opt.mlir 18485:9]
    node _T_20 = eq(addr, UInt<12>(2918)) @[build/NutShell.fir.opt.mlir 18488:16]
    node _T_21 = and(_T_1, _T_20) @[build/NutShell.fir.opt.mlir 18490:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 18491:7]
      node _perfCnts_102_T = and(wdata, perfCntsLoMapping_102_2_2) @[build/NutShell.fir.opt.mlir 18493:28]
      node _perfCnts_102_T_1 = not(perfCntsLoMapping_102_2_2) @[build/NutShell.fir.opt.mlir 18495:30]
      node _perfCnts_102_T_2 = and(perfCnts_102, _perfCnts_102_T_1) @[build/NutShell.fir.opt.mlir 18497:30]
      node _perfCnts_102_T_3 = or(_perfCnts_102_T, _perfCnts_102_T_2) @[build/NutShell.fir.opt.mlir 18499:30]
      connect perfCnts_102, _perfCnts_102_T_3 @[build/NutShell.fir.opt.mlir 18500:9]
    node _T_22 = eq(addr, UInt<12>(2933)) @[build/NutShell.fir.opt.mlir 18503:16]
    node _T_23 = and(_T_1, _T_22) @[build/NutShell.fir.opt.mlir 18505:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 18506:7]
      node _perfCnts_117_T = and(wdata, perfCntsLoMapping_117_2_2) @[build/NutShell.fir.opt.mlir 18508:28]
      node _perfCnts_117_T_1 = not(perfCntsLoMapping_117_2_2) @[build/NutShell.fir.opt.mlir 18510:30]
      node _perfCnts_117_T_2 = and(perfCnts_117, _perfCnts_117_T_1) @[build/NutShell.fir.opt.mlir 18512:30]
      node _perfCnts_117_T_3 = or(_perfCnts_117_T, _perfCnts_117_T_2) @[build/NutShell.fir.opt.mlir 18514:30]
      connect perfCnts_117, _perfCnts_117_T_3 @[build/NutShell.fir.opt.mlir 18515:9]
    node _T_24 = eq(addr, UInt<12>(2844)) @[build/NutShell.fir.opt.mlir 18518:16]
    node _T_25 = and(_T_1, _T_24) @[build/NutShell.fir.opt.mlir 18520:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 18521:7]
      node _perfCnts_28_T = and(wdata, perfCntsLoMapping_28_2_2) @[build/NutShell.fir.opt.mlir 18523:27]
      node _perfCnts_28_T_1 = not(perfCntsLoMapping_28_2_2) @[build/NutShell.fir.opt.mlir 18525:29]
      node _perfCnts_28_T_2 = and(perfCnts_28, _perfCnts_28_T_1) @[build/NutShell.fir.opt.mlir 18527:29]
      node _perfCnts_28_T_3 = or(_perfCnts_28_T, _perfCnts_28_T_2) @[build/NutShell.fir.opt.mlir 18529:29]
      connect perfCnts_28, _perfCnts_28_T_3 @[build/NutShell.fir.opt.mlir 18530:9]
    node _T_26 = eq(addr, UInt<10>(930)) @[build/NutShell.fir.opt.mlir 18533:16]
    node _T_27 = and(_T_1, _T_26) @[build/NutShell.fir.opt.mlir 18535:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 18536:7]
      node _pmpcfg2_T = and(wdata, mapping_13_2_2) @[build/NutShell.fir.opt.mlir 18538:23]
      node _pmpcfg2_T_1 = not(mapping_13_2_2) @[build/NutShell.fir.opt.mlir 18540:25]
      node _pmpcfg2_T_2 = and(pmpcfg2, _pmpcfg2_T_1) @[build/NutShell.fir.opt.mlir 18542:25]
      node _pmpcfg2_T_3 = or(_pmpcfg2_T, _pmpcfg2_T_2) @[build/NutShell.fir.opt.mlir 18544:25]
      connect pmpcfg2, _pmpcfg2_T_3 @[build/NutShell.fir.opt.mlir 18545:9]
    node _T_28 = eq(addr, UInt<12>(2901)) @[build/NutShell.fir.opt.mlir 18548:16]
    node _T_29 = and(_T_1, _T_28) @[build/NutShell.fir.opt.mlir 18550:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 18551:7]
      node _perfCnts_85_T = and(wdata, perfCntsLoMapping_85_2_2) @[build/NutShell.fir.opt.mlir 18553:27]
      node _perfCnts_85_T_1 = not(perfCntsLoMapping_85_2_2) @[build/NutShell.fir.opt.mlir 18555:29]
      node _perfCnts_85_T_2 = and(perfCnts_85, _perfCnts_85_T_1) @[build/NutShell.fir.opt.mlir 18557:29]
      node _perfCnts_85_T_3 = or(_perfCnts_85_T, _perfCnts_85_T_2) @[build/NutShell.fir.opt.mlir 18559:29]
      connect perfCnts_85, _perfCnts_85_T_3 @[build/NutShell.fir.opt.mlir 18560:9]
    node _T_30 = eq(addr, UInt<10>(945)) @[build/NutShell.fir.opt.mlir 18563:16]
    node _T_31 = and(_T_1, _T_30) @[build/NutShell.fir.opt.mlir 18565:16]
    when _T_31 : @[build/NutShell.fir.opt.mlir 18567:7]
      node _pmpaddr1_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 18569:24]
      node _pmpaddr1_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 18571:26]
      node _pmpaddr1_T_2 = and(pmpaddr1, _pmpaddr1_T_1) @[build/NutShell.fir.opt.mlir 18573:26]
      node _pmpaddr1_T_3 = or(_pmpaddr1_T, _pmpaddr1_T_2) @[build/NutShell.fir.opt.mlir 18575:26]
      connect pmpaddr1, _pmpaddr1_T_3 @[build/NutShell.fir.opt.mlir 18576:9]
    node _T_32 = eq(addr, UInt<12>(2886)) @[build/NutShell.fir.opt.mlir 18579:16]
    node _T_33 = and(_T_1, _T_32) @[build/NutShell.fir.opt.mlir 18581:16]
    when _T_33 : @[build/NutShell.fir.opt.mlir 18582:7]
      node _perfCnts_70_T = and(wdata, perfCntsLoMapping_70_2_2) @[build/NutShell.fir.opt.mlir 18584:27]
      node _perfCnts_70_T_1 = not(perfCntsLoMapping_70_2_2) @[build/NutShell.fir.opt.mlir 18586:29]
      node _perfCnts_70_T_2 = and(perfCnts_70, _perfCnts_70_T_1) @[build/NutShell.fir.opt.mlir 18588:29]
      node _perfCnts_70_T_3 = or(_perfCnts_70_T, _perfCnts_70_T_2) @[build/NutShell.fir.opt.mlir 18590:29]
      connect perfCnts_70, _perfCnts_70_T_3 @[build/NutShell.fir.opt.mlir 18591:9]
    node _T_34 = eq(addr, UInt<9>(320)) @[build/NutShell.fir.opt.mlir 18594:16]
    node _T_35 = and(_T_1, _T_34) @[build/NutShell.fir.opt.mlir 18596:16]
    when _T_35 : @[build/NutShell.fir.opt.mlir 18597:7]
      node _sscratch_T = and(wdata, mapping_17_2_2) @[build/NutShell.fir.opt.mlir 18599:24]
      node _sscratch_T_1 = not(mapping_17_2_2) @[build/NutShell.fir.opt.mlir 18601:26]
      node _sscratch_T_2 = and(sscratch, _sscratch_T_1) @[build/NutShell.fir.opt.mlir 18603:26]
      node _sscratch_T_3 = or(_sscratch_T, _sscratch_T_2) @[build/NutShell.fir.opt.mlir 18605:26]
      connect sscratch, _sscratch_T_3 @[build/NutShell.fir.opt.mlir 18606:9]
    node _T_36 = eq(addr, UInt<12>(2825)) @[build/NutShell.fir.opt.mlir 18609:16]
    node _T_37 = and(_T_1, _T_36) @[build/NutShell.fir.opt.mlir 18611:16]
    when _T_37 : @[build/NutShell.fir.opt.mlir 18612:7]
      node _perfCnts_9_T = and(wdata, perfCntsLoMapping_9_2_2) @[build/NutShell.fir.opt.mlir 18614:26]
      node _perfCnts_9_T_1 = not(perfCntsLoMapping_9_2_2) @[build/NutShell.fir.opt.mlir 18616:28]
      node _perfCnts_9_T_2 = and(perfCnts_9, _perfCnts_9_T_1) @[build/NutShell.fir.opt.mlir 18618:28]
      node _perfCnts_9_T_3 = or(_perfCnts_9_T, _perfCnts_9_T_2) @[build/NutShell.fir.opt.mlir 18620:28]
      connect perfCnts_9, _perfCnts_9_T_3 @[build/NutShell.fir.opt.mlir 18621:9]
    node _T_38 = eq(addr, UInt<12>(2819)) @[build/NutShell.fir.opt.mlir 18624:16]
    node _T_39 = and(_T_1, _T_38) @[build/NutShell.fir.opt.mlir 18626:16]
    when _T_39 : @[build/NutShell.fir.opt.mlir 18627:7]
      node _perfCnts_3_T = and(wdata, perfCntsLoMapping_3_2_2) @[build/NutShell.fir.opt.mlir 18629:26]
      node _perfCnts_3_T_1 = not(perfCntsLoMapping_3_2_2) @[build/NutShell.fir.opt.mlir 18631:28]
      node _perfCnts_3_T_2 = and(perfCnts_3, _perfCnts_3_T_1) @[build/NutShell.fir.opt.mlir 18633:28]
      node _perfCnts_3_T_3 = or(_perfCnts_3_T, _perfCnts_3_T_2) @[build/NutShell.fir.opt.mlir 18635:28]
      connect perfCnts_3, _perfCnts_3_T_3 @[build/NutShell.fir.opt.mlir 18636:9]
    node _T_40 = eq(addr, UInt<12>(2869)) @[build/NutShell.fir.opt.mlir 18639:16]
    node _T_41 = and(_T_1, _T_40) @[build/NutShell.fir.opt.mlir 18641:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 18642:7]
      node _perfCnts_53_T = and(wdata, perfCntsLoMapping_53_2_2) @[build/NutShell.fir.opt.mlir 18644:27]
      node _perfCnts_53_T_1 = not(perfCntsLoMapping_53_2_2) @[build/NutShell.fir.opt.mlir 18646:29]
      node _perfCnts_53_T_2 = and(perfCnts_53, _perfCnts_53_T_1) @[build/NutShell.fir.opt.mlir 18648:29]
      node _perfCnts_53_T_3 = or(_perfCnts_53_T, _perfCnts_53_T_2) @[build/NutShell.fir.opt.mlir 18650:29]
      connect perfCnts_53, _perfCnts_53_T_3 @[build/NutShell.fir.opt.mlir 18651:9]
    node _T_42 = eq(addr, UInt<12>(2916)) @[build/NutShell.fir.opt.mlir 18654:16]
    node _T_43 = and(_T_1, _T_42) @[build/NutShell.fir.opt.mlir 18656:16]
    when _T_43 : @[build/NutShell.fir.opt.mlir 18657:7]
      node _perfCnts_100_T = and(wdata, perfCntsLoMapping_100_2_2) @[build/NutShell.fir.opt.mlir 18659:28]
      node _perfCnts_100_T_1 = not(perfCntsLoMapping_100_2_2) @[build/NutShell.fir.opt.mlir 18661:30]
      node _perfCnts_100_T_2 = and(perfCnts_100, _perfCnts_100_T_1) @[build/NutShell.fir.opt.mlir 18663:30]
      node _perfCnts_100_T_3 = or(_perfCnts_100_T, _perfCnts_100_T_2) @[build/NutShell.fir.opt.mlir 18665:30]
      connect perfCnts_100, _perfCnts_100_T_3 @[build/NutShell.fir.opt.mlir 18666:9]
    node _T_44 = eq(addr, UInt<12>(2897)) @[build/NutShell.fir.opt.mlir 18669:16]
    node _T_45 = and(_T_1, _T_44) @[build/NutShell.fir.opt.mlir 18671:16]
    when _T_45 : @[build/NutShell.fir.opt.mlir 18672:7]
      node _perfCnts_81_T = and(wdata, perfCntsLoMapping_81_2_2) @[build/NutShell.fir.opt.mlir 18674:27]
      node _perfCnts_81_T_1 = not(perfCntsLoMapping_81_2_2) @[build/NutShell.fir.opt.mlir 18676:29]
      node _perfCnts_81_T_2 = and(perfCnts_81, _perfCnts_81_T_1) @[build/NutShell.fir.opt.mlir 18678:29]
      node _perfCnts_81_T_3 = or(_perfCnts_81_T, _perfCnts_81_T_2) @[build/NutShell.fir.opt.mlir 18680:29]
      connect perfCnts_81, _perfCnts_81_T_3 @[build/NutShell.fir.opt.mlir 18681:9]
    node _T_46 = eq(addr, UInt<12>(2857)) @[build/NutShell.fir.opt.mlir 18684:16]
    node _T_47 = and(_T_1, _T_46) @[build/NutShell.fir.opt.mlir 18686:16]
    when _T_47 : @[build/NutShell.fir.opt.mlir 18687:7]
      node _perfCnts_41_T = and(wdata, perfCntsLoMapping_41_2_2) @[build/NutShell.fir.opt.mlir 18689:27]
      node _perfCnts_41_T_1 = not(perfCntsLoMapping_41_2_2) @[build/NutShell.fir.opt.mlir 18691:29]
      node _perfCnts_41_T_2 = and(perfCnts_41, _perfCnts_41_T_1) @[build/NutShell.fir.opt.mlir 18693:29]
      node _perfCnts_41_T_3 = or(_perfCnts_41_T, _perfCnts_41_T_2) @[build/NutShell.fir.opt.mlir 18695:29]
      connect perfCnts_41, _perfCnts_41_T_3 @[build/NutShell.fir.opt.mlir 18696:9]
    node _T_48 = eq(addr, UInt<10>(770)) @[build/NutShell.fir.opt.mlir 18699:16]
    node _T_49 = and(_T_1, _T_48) @[build/NutShell.fir.opt.mlir 18701:16]
    when _T_49 : @[build/NutShell.fir.opt.mlir 18703:7]
      node _medeleg_T = and(wdata, UInt<64>(48127)) @[build/NutShell.fir.opt.mlir 18705:23]
      node _medeleg_T_1 = not(UInt<64>(48127)) @[build/NutShell.fir.opt.mlir 18707:25]
      node _medeleg_T_2 = and(medeleg, _medeleg_T_1) @[build/NutShell.fir.opt.mlir 18709:25]
      node _medeleg_T_3 = or(_medeleg_T, _medeleg_T_2) @[build/NutShell.fir.opt.mlir 18711:25]
      connect medeleg, _medeleg_T_3 @[build/NutShell.fir.opt.mlir 18712:9]
    node _T_50 = eq(addr, UInt<12>(2929)) @[build/NutShell.fir.opt.mlir 18715:16]
    node _T_51 = and(_T_1, _T_50) @[build/NutShell.fir.opt.mlir 18717:16]
    when _T_51 : @[build/NutShell.fir.opt.mlir 18718:7]
      node _perfCnts_113_T = and(wdata, perfCntsLoMapping_113_2_2) @[build/NutShell.fir.opt.mlir 18720:28]
      node _perfCnts_113_T_1 = not(perfCntsLoMapping_113_2_2) @[build/NutShell.fir.opt.mlir 18722:30]
      node _perfCnts_113_T_2 = and(perfCnts_113, _perfCnts_113_T_1) @[build/NutShell.fir.opt.mlir 18724:30]
      node _perfCnts_113_T_3 = or(_perfCnts_113_T, _perfCnts_113_T_2) @[build/NutShell.fir.opt.mlir 18726:30]
      connect perfCnts_113, _perfCnts_113_T_3 @[build/NutShell.fir.opt.mlir 18727:9]
    node _T_52 = eq(addr, UInt<12>(2852)) @[build/NutShell.fir.opt.mlir 18730:16]
    node _T_53 = and(_T_1, _T_52) @[build/NutShell.fir.opt.mlir 18732:16]
    when _T_53 : @[build/NutShell.fir.opt.mlir 18733:7]
      node _perfCnts_36_T = and(wdata, perfCntsLoMapping_36_2_2) @[build/NutShell.fir.opt.mlir 18735:27]
      node _perfCnts_36_T_1 = not(perfCntsLoMapping_36_2_2) @[build/NutShell.fir.opt.mlir 18737:29]
      node _perfCnts_36_T_2 = and(perfCnts_36, _perfCnts_36_T_1) @[build/NutShell.fir.opt.mlir 18739:29]
      node _perfCnts_36_T_3 = or(_perfCnts_36_T, _perfCnts_36_T_2) @[build/NutShell.fir.opt.mlir 18741:29]
      connect perfCnts_36, _perfCnts_36_T_3 @[build/NutShell.fir.opt.mlir 18742:9]
    node _T_54 = eq(addr, UInt<9>(261)) @[build/NutShell.fir.opt.mlir 18745:16]
    node _T_55 = and(_T_1, _T_54) @[build/NutShell.fir.opt.mlir 18747:16]
    when _T_55 : @[build/NutShell.fir.opt.mlir 18748:7]
      node _stvec_T = and(wdata, mapping_27_2_2) @[build/NutShell.fir.opt.mlir 18750:21]
      node _stvec_T_1 = not(mapping_27_2_2) @[build/NutShell.fir.opt.mlir 18752:23]
      node _stvec_T_2 = and(stvec, _stvec_T_1) @[build/NutShell.fir.opt.mlir 18754:23]
      node _stvec_T_3 = or(_stvec_T, _stvec_T_2) @[build/NutShell.fir.opt.mlir 18756:23]
      connect stvec, _stvec_T_3 @[build/NutShell.fir.opt.mlir 18757:9]
    node _T_56 = eq(addr, UInt<12>(2829)) @[build/NutShell.fir.opt.mlir 18760:16]
    node _T_57 = and(_T_1, _T_56) @[build/NutShell.fir.opt.mlir 18762:16]
    when _T_57 : @[build/NutShell.fir.opt.mlir 18763:7]
      node _perfCnts_13_T = and(wdata, perfCntsLoMapping_13_2_2) @[build/NutShell.fir.opt.mlir 18765:27]
      node _perfCnts_13_T_1 = not(perfCntsLoMapping_13_2_2) @[build/NutShell.fir.opt.mlir 18767:29]
      node _perfCnts_13_T_2 = and(perfCnts_13, _perfCnts_13_T_1) @[build/NutShell.fir.opt.mlir 18769:29]
      node _perfCnts_13_T_3 = or(_perfCnts_13_T, _perfCnts_13_T_2) @[build/NutShell.fir.opt.mlir 18771:29]
      connect perfCnts_13, _perfCnts_13_T_3 @[build/NutShell.fir.opt.mlir 18772:9]
    node _T_58 = eq(addr, UInt<12>(2925)) @[build/NutShell.fir.opt.mlir 18775:16]
    node _T_59 = and(_T_1, _T_58) @[build/NutShell.fir.opt.mlir 18777:16]
    when _T_59 : @[build/NutShell.fir.opt.mlir 18778:7]
      node _perfCnts_109_T = and(wdata, perfCntsLoMapping_109_2_2) @[build/NutShell.fir.opt.mlir 18780:28]
      node _perfCnts_109_T_1 = not(perfCntsLoMapping_109_2_2) @[build/NutShell.fir.opt.mlir 18782:30]
      node _perfCnts_109_T_2 = and(perfCnts_109, _perfCnts_109_T_1) @[build/NutShell.fir.opt.mlir 18784:30]
      node _perfCnts_109_T_3 = or(_perfCnts_109_T, _perfCnts_109_T_2) @[build/NutShell.fir.opt.mlir 18786:30]
      connect perfCnts_109, _perfCnts_109_T_3 @[build/NutShell.fir.opt.mlir 18787:9]
    node _T_60 = eq(addr, UInt<12>(2893)) @[build/NutShell.fir.opt.mlir 18790:16]
    node _T_61 = and(_T_1, _T_60) @[build/NutShell.fir.opt.mlir 18792:16]
    when _T_61 : @[build/NutShell.fir.opt.mlir 18793:7]
      node _perfCnts_77_T = and(wdata, perfCntsLoMapping_77_2_2) @[build/NutShell.fir.opt.mlir 18795:27]
      node _perfCnts_77_T_1 = not(perfCntsLoMapping_77_2_2) @[build/NutShell.fir.opt.mlir 18797:29]
      node _perfCnts_77_T_2 = and(perfCnts_77, _perfCnts_77_T_1) @[build/NutShell.fir.opt.mlir 18799:29]
      node _perfCnts_77_T_3 = or(_perfCnts_77_T, _perfCnts_77_T_2) @[build/NutShell.fir.opt.mlir 18801:29]
      connect perfCnts_77, _perfCnts_77_T_3 @[build/NutShell.fir.opt.mlir 18802:9]
    node _T_62 = eq(addr, UInt<9>(321)) @[build/NutShell.fir.opt.mlir 18805:16]
    node _T_63 = and(_T_1, _T_62) @[build/NutShell.fir.opt.mlir 18807:16]
    when _T_63 : @[build/NutShell.fir.opt.mlir 18808:7]
      node _sepc_T = and(wdata, mapping_31_2_2) @[build/NutShell.fir.opt.mlir 18810:20]
      node _sepc_T_1 = not(mapping_31_2_2) @[build/NutShell.fir.opt.mlir 18812:22]
      node _sepc_T_2 = and(sepc, _sepc_T_1) @[build/NutShell.fir.opt.mlir 18814:22]
      node _sepc_T_3 = or(_sepc_T, _sepc_T_2) @[build/NutShell.fir.opt.mlir 18816:22]
      connect sepc, _sepc_T_3 @[build/NutShell.fir.opt.mlir 18817:9]
    node _T_64 = eq(addr, UInt<12>(2880)) @[build/NutShell.fir.opt.mlir 18820:16]
    node _T_65 = and(_T_1, _T_64) @[build/NutShell.fir.opt.mlir 18822:16]
    when _T_65 : @[build/NutShell.fir.opt.mlir 18823:7]
      node _perfCnts_64_T = and(wdata, perfCntsLoMapping_64_2_2) @[build/NutShell.fir.opt.mlir 18825:27]
      node _perfCnts_64_T_1 = not(perfCntsLoMapping_64_2_2) @[build/NutShell.fir.opt.mlir 18827:29]
      node _perfCnts_64_T_2 = and(perfCnts_64, _perfCnts_64_T_1) @[build/NutShell.fir.opt.mlir 18829:29]
      node _perfCnts_64_T_3 = or(_perfCnts_64_T, _perfCnts_64_T_2) @[build/NutShell.fir.opt.mlir 18831:29]
      connect perfCnts_64, _perfCnts_64_T_3 @[build/NutShell.fir.opt.mlir 18832:9]
    node _T_66 = eq(addr, UInt<10>(834)) @[build/NutShell.fir.opt.mlir 18835:16]
    node _T_67 = and(_T_1, _T_66) @[build/NutShell.fir.opt.mlir 18837:16]
    when _T_67 : @[build/NutShell.fir.opt.mlir 18838:7]
      node _mcause_T = and(wdata, mapping_33_2_2) @[build/NutShell.fir.opt.mlir 18840:22]
      node _mcause_T_1 = not(mapping_33_2_2) @[build/NutShell.fir.opt.mlir 18842:24]
      node _mcause_T_2 = and(mcause, _mcause_T_1) @[build/NutShell.fir.opt.mlir 18844:24]
      node _mcause_T_3 = or(_mcause_T, _mcause_T_2) @[build/NutShell.fir.opt.mlir 18846:24]
      connect mcause, _mcause_T_3 @[build/NutShell.fir.opt.mlir 18847:9]
    node _T_68 = eq(addr, UInt<12>(2833)) @[build/NutShell.fir.opt.mlir 18850:16]
    node _T_69 = and(_T_1, _T_68) @[build/NutShell.fir.opt.mlir 18852:16]
    when _T_69 : @[build/NutShell.fir.opt.mlir 18853:7]
      node _perfCnts_17_T = and(wdata, perfCntsLoMapping_17_2_2) @[build/NutShell.fir.opt.mlir 18855:27]
      node _perfCnts_17_T_1 = not(perfCntsLoMapping_17_2_2) @[build/NutShell.fir.opt.mlir 18857:29]
      node _perfCnts_17_T_2 = and(perfCnts_17, _perfCnts_17_T_1) @[build/NutShell.fir.opt.mlir 18859:29]
      node _perfCnts_17_T_3 = or(_perfCnts_17_T, _perfCnts_17_T_2) @[build/NutShell.fir.opt.mlir 18861:29]
      connect perfCnts_17, _perfCnts_17_T_3 @[build/NutShell.fir.opt.mlir 18862:9]
    node _T_70 = eq(addr, UInt<12>(2861)) @[build/NutShell.fir.opt.mlir 18865:16]
    node _T_71 = and(_T_1, _T_70) @[build/NutShell.fir.opt.mlir 18867:16]
    when _T_71 : @[build/NutShell.fir.opt.mlir 18868:7]
      node _perfCnts_45_T = and(wdata, perfCntsLoMapping_45_2_2) @[build/NutShell.fir.opt.mlir 18870:27]
      node _perfCnts_45_T_1 = not(perfCntsLoMapping_45_2_2) @[build/NutShell.fir.opt.mlir 18872:29]
      node _perfCnts_45_T_2 = and(perfCnts_45, _perfCnts_45_T_1) @[build/NutShell.fir.opt.mlir 18874:29]
      node _perfCnts_45_T_3 = or(_perfCnts_45_T, _perfCnts_45_T_2) @[build/NutShell.fir.opt.mlir 18876:29]
      connect perfCnts_45, _perfCnts_45_T_3 @[build/NutShell.fir.opt.mlir 18877:9]
    node _T_72 = eq(addr, UInt<10>(774)) @[build/NutShell.fir.opt.mlir 18880:16]
    node _T_73 = and(_T_1, _T_72) @[build/NutShell.fir.opt.mlir 18882:16]
    when _T_73 : @[build/NutShell.fir.opt.mlir 18883:7]
      node _mcounteren_T = and(wdata, mapping_36_2_2) @[build/NutShell.fir.opt.mlir 18885:26]
      node _mcounteren_T_1 = not(mapping_36_2_2) @[build/NutShell.fir.opt.mlir 18887:28]
      node _mcounteren_T_2 = and(mcounteren, _mcounteren_T_1) @[build/NutShell.fir.opt.mlir 18889:28]
      node _mcounteren_T_3 = or(_mcounteren_T, _mcounteren_T_2) @[build/NutShell.fir.opt.mlir 18891:28]
      connect mcounteren, _mcounteren_T_3 @[build/NutShell.fir.opt.mlir 18892:9]
    node _T_74 = eq(addr, UInt<12>(2884)) @[build/NutShell.fir.opt.mlir 18895:16]
    node _T_75 = and(_T_1, _T_74) @[build/NutShell.fir.opt.mlir 18897:16]
    when _T_75 : @[build/NutShell.fir.opt.mlir 18898:7]
      node _perfCnts_68_T = and(wdata, perfCntsLoMapping_68_2_2) @[build/NutShell.fir.opt.mlir 18900:27]
      node _perfCnts_68_T_1 = not(perfCntsLoMapping_68_2_2) @[build/NutShell.fir.opt.mlir 18902:29]
      node _perfCnts_68_T_2 = and(perfCnts_68, _perfCnts_68_T_1) @[build/NutShell.fir.opt.mlir 18904:29]
      node _perfCnts_68_T_3 = or(_perfCnts_68_T, _perfCnts_68_T_2) @[build/NutShell.fir.opt.mlir 18906:29]
      connect perfCnts_68, _perfCnts_68_T_3 @[build/NutShell.fir.opt.mlir 18907:9]
    node _T_76 = eq(addr, UInt<12>(2922)) @[build/NutShell.fir.opt.mlir 18910:16]
    node _T_77 = and(_T_1, _T_76) @[build/NutShell.fir.opt.mlir 18912:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 18913:7]
      node _perfCnts_106_T = and(wdata, perfCntsLoMapping_106_2_2) @[build/NutShell.fir.opt.mlir 18915:28]
      node _perfCnts_106_T_1 = not(perfCntsLoMapping_106_2_2) @[build/NutShell.fir.opt.mlir 18917:30]
      node _perfCnts_106_T_2 = and(perfCnts_106, _perfCnts_106_T_1) @[build/NutShell.fir.opt.mlir 18919:30]
      node _perfCnts_106_T_3 = or(_perfCnts_106_T, _perfCnts_106_T_2) @[build/NutShell.fir.opt.mlir 18921:30]
      connect perfCnts_106, _perfCnts_106_T_3 @[build/NutShell.fir.opt.mlir 18922:9]
    node _T_78 = eq(addr, UInt<12>(2910)) @[build/NutShell.fir.opt.mlir 18925:16]
    node _T_79 = and(_T_1, _T_78) @[build/NutShell.fir.opt.mlir 18927:16]
    when _T_79 : @[build/NutShell.fir.opt.mlir 18928:7]
      node _perfCnts_94_T = and(wdata, perfCntsLoMapping_94_2_2) @[build/NutShell.fir.opt.mlir 18930:27]
      node _perfCnts_94_T_1 = not(perfCntsLoMapping_94_2_2) @[build/NutShell.fir.opt.mlir 18932:29]
      node _perfCnts_94_T_2 = and(perfCnts_94, _perfCnts_94_T_1) @[build/NutShell.fir.opt.mlir 18934:29]
      node _perfCnts_94_T_3 = or(_perfCnts_94_T, _perfCnts_94_T_2) @[build/NutShell.fir.opt.mlir 18936:29]
      connect perfCnts_94, _perfCnts_94_T_3 @[build/NutShell.fir.opt.mlir 18937:9]
    node _T_80 = eq(addr, UInt<12>(2905)) @[build/NutShell.fir.opt.mlir 18940:16]
    node _T_81 = and(_T_1, _T_80) @[build/NutShell.fir.opt.mlir 18942:16]
    when _T_81 : @[build/NutShell.fir.opt.mlir 18943:7]
      node _perfCnts_89_T = and(wdata, perfCntsLoMapping_89_2_2) @[build/NutShell.fir.opt.mlir 18945:27]
      node _perfCnts_89_T_1 = not(perfCntsLoMapping_89_2_2) @[build/NutShell.fir.opt.mlir 18947:29]
      node _perfCnts_89_T_2 = and(perfCnts_89, _perfCnts_89_T_1) @[build/NutShell.fir.opt.mlir 18949:29]
      node _perfCnts_89_T_3 = or(_perfCnts_89_T, _perfCnts_89_T_2) @[build/NutShell.fir.opt.mlir 18951:29]
      connect perfCnts_89, _perfCnts_89_T_3 @[build/NutShell.fir.opt.mlir 18952:9]
    node _T_82 = eq(addr, UInt<9>(260)) @[build/NutShell.fir.opt.mlir 18955:16]
    node _T_83 = and(_T_1, _T_82) @[build/NutShell.fir.opt.mlir 18957:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 18958:7]
      node _mie_T = and(wdata, sieMask) @[build/NutShell.fir.opt.mlir 18960:19]
      node _mie_T_1 = not(sieMask) @[build/NutShell.fir.opt.mlir 18962:21]
      node _mie_T_2 = and(mie, _mie_T_1) @[build/NutShell.fir.opt.mlir 18964:21]
      node _mie_T_3 = or(_mie_T, _mie_T_2) @[build/NutShell.fir.opt.mlir 18966:21]
      connect mie, _mie_T_3 @[build/NutShell.fir.opt.mlir 18967:9]
    node _T_84 = eq(addr, UInt<12>(2937)) @[build/NutShell.fir.opt.mlir 18970:16]
    node _T_85 = and(_T_1, _T_84) @[build/NutShell.fir.opt.mlir 18972:16]
    when _T_85 : @[build/NutShell.fir.opt.mlir 18973:7]
      node _perfCnts_121_T = and(wdata, perfCntsLoMapping_121_2_2) @[build/NutShell.fir.opt.mlir 18975:28]
      node _perfCnts_121_T_1 = not(perfCntsLoMapping_121_2_2) @[build/NutShell.fir.opt.mlir 18977:30]
      node _perfCnts_121_T_2 = and(perfCnts_121, _perfCnts_121_T_1) @[build/NutShell.fir.opt.mlir 18979:30]
      node _perfCnts_121_T_3 = or(_perfCnts_121_T, _perfCnts_121_T_2) @[build/NutShell.fir.opt.mlir 18981:30]
      connect perfCnts_121, _perfCnts_121_T_3 @[build/NutShell.fir.opt.mlir 18982:9]
    node _T_86 = eq(addr, UInt<12>(2890)) @[build/NutShell.fir.opt.mlir 18985:16]
    node _T_87 = and(_T_1, _T_86) @[build/NutShell.fir.opt.mlir 18987:16]
    when _T_87 : @[build/NutShell.fir.opt.mlir 18988:7]
      node _perfCnts_74_T = and(wdata, perfCntsLoMapping_74_2_2) @[build/NutShell.fir.opt.mlir 18990:27]
      node _perfCnts_74_T_1 = not(perfCntsLoMapping_74_2_2) @[build/NutShell.fir.opt.mlir 18992:29]
      node _perfCnts_74_T_2 = and(perfCnts_74, _perfCnts_74_T_1) @[build/NutShell.fir.opt.mlir 18994:29]
      node _perfCnts_74_T_3 = or(_perfCnts_74_T, _perfCnts_74_T_2) @[build/NutShell.fir.opt.mlir 18996:29]
      connect perfCnts_74, _perfCnts_74_T_3 @[build/NutShell.fir.opt.mlir 18997:9]
    node _T_88 = eq(addr, UInt<12>(2873)) @[build/NutShell.fir.opt.mlir 19000:16]
    node _T_89 = and(_T_1, _T_88) @[build/NutShell.fir.opt.mlir 19002:16]
    when _T_89 : @[build/NutShell.fir.opt.mlir 19003:7]
      node _perfCnts_57_T = and(wdata, perfCntsLoMapping_57_2_2) @[build/NutShell.fir.opt.mlir 19005:27]
      node _perfCnts_57_T_1 = not(perfCntsLoMapping_57_2_2) @[build/NutShell.fir.opt.mlir 19007:29]
      node _perfCnts_57_T_2 = and(perfCnts_57, _perfCnts_57_T_1) @[build/NutShell.fir.opt.mlir 19009:29]
      node _perfCnts_57_T_3 = or(_perfCnts_57_T, _perfCnts_57_T_2) @[build/NutShell.fir.opt.mlir 19011:29]
      connect perfCnts_57, _perfCnts_57_T_3 @[build/NutShell.fir.opt.mlir 19012:9]
    node _T_90 = eq(addr, UInt<12>(2872)) @[build/NutShell.fir.opt.mlir 19015:16]
    node _T_91 = and(_T_1, _T_90) @[build/NutShell.fir.opt.mlir 19017:16]
    when _T_91 : @[build/NutShell.fir.opt.mlir 19018:7]
      node _perfCnts_56_T = and(wdata, perfCntsLoMapping_56_2_2) @[build/NutShell.fir.opt.mlir 19020:27]
      node _perfCnts_56_T_1 = not(perfCntsLoMapping_56_2_2) @[build/NutShell.fir.opt.mlir 19022:29]
      node _perfCnts_56_T_2 = and(perfCnts_56, _perfCnts_56_T_1) @[build/NutShell.fir.opt.mlir 19024:29]
      node _perfCnts_56_T_3 = or(_perfCnts_56_T, _perfCnts_56_T_2) @[build/NutShell.fir.opt.mlir 19026:29]
      connect perfCnts_56, _perfCnts_56_T_3 @[build/NutShell.fir.opt.mlir 19027:9]
    node _T_92 = eq(addr, UInt<12>(2826)) @[build/NutShell.fir.opt.mlir 19030:16]
    node _T_93 = and(_T_1, _T_92) @[build/NutShell.fir.opt.mlir 19032:16]
    when _T_93 : @[build/NutShell.fir.opt.mlir 19033:7]
      node _perfCnts_10_T = and(wdata, perfCntsLoMapping_10_2_2) @[build/NutShell.fir.opt.mlir 19035:27]
      node _perfCnts_10_T_1 = not(perfCntsLoMapping_10_2_2) @[build/NutShell.fir.opt.mlir 19037:29]
      node _perfCnts_10_T_2 = and(perfCnts_10, _perfCnts_10_T_1) @[build/NutShell.fir.opt.mlir 19039:29]
      node _perfCnts_10_T_3 = or(_perfCnts_10_T, _perfCnts_10_T_2) @[build/NutShell.fir.opt.mlir 19041:29]
      connect perfCnts_10, _perfCnts_10_T_3 @[build/NutShell.fir.opt.mlir 19042:9]
    node _T_94 = eq(addr, UInt<12>(2820)) @[build/NutShell.fir.opt.mlir 19045:16]
    node _T_95 = and(_T_1, _T_94) @[build/NutShell.fir.opt.mlir 19047:16]
    when _T_95 : @[build/NutShell.fir.opt.mlir 19048:7]
      node _perfCnts_4_T = and(wdata, perfCntsLoMapping_4_2_2) @[build/NutShell.fir.opt.mlir 19050:26]
      node _perfCnts_4_T_1 = not(perfCntsLoMapping_4_2_2) @[build/NutShell.fir.opt.mlir 19052:28]
      node _perfCnts_4_T_2 = and(perfCnts_4, _perfCnts_4_T_1) @[build/NutShell.fir.opt.mlir 19054:28]
      node _perfCnts_4_T_3 = or(_perfCnts_4_T, _perfCnts_4_T_2) @[build/NutShell.fir.opt.mlir 19056:28]
      connect perfCnts_4, _perfCnts_4_T_3 @[build/NutShell.fir.opt.mlir 19057:9]
    node _T_96 = eq(addr, UInt<12>(2840)) @[build/NutShell.fir.opt.mlir 19060:16]
    node _T_97 = and(_T_1, _T_96) @[build/NutShell.fir.opt.mlir 19062:16]
    when _T_97 : @[build/NutShell.fir.opt.mlir 19063:7]
      node _perfCnts_24_T = and(wdata, perfCntsLoMapping_24_2_2) @[build/NutShell.fir.opt.mlir 19065:27]
      node _perfCnts_24_T_1 = not(perfCntsLoMapping_24_2_2) @[build/NutShell.fir.opt.mlir 19067:29]
      node _perfCnts_24_T_2 = and(perfCnts_24, _perfCnts_24_T_1) @[build/NutShell.fir.opt.mlir 19069:29]
      node _perfCnts_24_T_3 = or(_perfCnts_24_T, _perfCnts_24_T_2) @[build/NutShell.fir.opt.mlir 19071:29]
      connect perfCnts_24, _perfCnts_24_T_3 @[build/NutShell.fir.opt.mlir 19072:9]
    node _T_98 = eq(addr, UInt<12>(2895)) @[build/NutShell.fir.opt.mlir 19075:16]
    node _T_99 = and(_T_1, _T_98) @[build/NutShell.fir.opt.mlir 19077:16]
    when _T_99 : @[build/NutShell.fir.opt.mlir 19078:7]
      node _perfCnts_79_T = and(wdata, perfCntsLoMapping_79_2_2) @[build/NutShell.fir.opt.mlir 19080:27]
      node _perfCnts_79_T_1 = not(perfCntsLoMapping_79_2_2) @[build/NutShell.fir.opt.mlir 19082:29]
      node _perfCnts_79_T_2 = and(perfCnts_79, _perfCnts_79_T_1) @[build/NutShell.fir.opt.mlir 19084:29]
      node _perfCnts_79_T_3 = or(_perfCnts_79_T, _perfCnts_79_T_2) @[build/NutShell.fir.opt.mlir 19086:29]
      connect perfCnts_79, _perfCnts_79_T_3 @[build/NutShell.fir.opt.mlir 19087:9]
    node _T_100 = eq(addr, UInt<12>(2841)) @[build/NutShell.fir.opt.mlir 19090:17]
    node _T_101 = and(_T_1, _T_100) @[build/NutShell.fir.opt.mlir 19092:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 19093:7]
      node _perfCnts_25_T = and(wdata, perfCntsLoMapping_25_2_2) @[build/NutShell.fir.opt.mlir 19095:27]
      node _perfCnts_25_T_1 = not(perfCntsLoMapping_25_2_2) @[build/NutShell.fir.opt.mlir 19097:29]
      node _perfCnts_25_T_2 = and(perfCnts_25, _perfCnts_25_T_1) @[build/NutShell.fir.opt.mlir 19099:29]
      node _perfCnts_25_T_3 = or(_perfCnts_25_T, _perfCnts_25_T_2) @[build/NutShell.fir.opt.mlir 19101:29]
      connect perfCnts_25, _perfCnts_25_T_3 @[build/NutShell.fir.opt.mlir 19102:9]
    node _T_102 = eq(addr, UInt<12>(2858)) @[build/NutShell.fir.opt.mlir 19105:17]
    node _T_103 = and(_T_1, _T_102) @[build/NutShell.fir.opt.mlir 19107:17]
    when _T_103 : @[build/NutShell.fir.opt.mlir 19108:7]
      node _perfCnts_42_T = and(wdata, perfCntsLoMapping_42_2_2) @[build/NutShell.fir.opt.mlir 19110:27]
      node _perfCnts_42_T_1 = not(perfCntsLoMapping_42_2_2) @[build/NutShell.fir.opt.mlir 19112:29]
      node _perfCnts_42_T_2 = and(perfCnts_42, _perfCnts_42_T_1) @[build/NutShell.fir.opt.mlir 19114:29]
      node _perfCnts_42_T_3 = or(_perfCnts_42_T, _perfCnts_42_T_2) @[build/NutShell.fir.opt.mlir 19116:29]
      connect perfCnts_42, _perfCnts_42_T_3 @[build/NutShell.fir.opt.mlir 19117:9]
    node _T_104 = eq(addr, UInt<9>(256)) @[build/NutShell.fir.opt.mlir 19120:17]
    node _T_105 = and(_T_1, _T_104) @[build/NutShell.fir.opt.mlir 19122:17]
    when _T_105 : @[build/NutShell.fir.opt.mlir 19123:7]
      node _mstatus_T = and(wdata, sstatusWmask) @[build/NutShell.fir.opt.mlir 19125:23]
      node _mstatus_T_1 = not(sstatusWmask) @[build/NutShell.fir.opt.mlir 19127:25]
      node _mstatus_T_2 = and(mstatus, _mstatus_T_1) @[build/NutShell.fir.opt.mlir 19129:25]
      node _mstatus_T_3 = or(_mstatus_T, _mstatus_T_2) @[build/NutShell.fir.opt.mlir 19131:25]
      wire _mstatus_mstatusOld_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19132:37]
      wire _mstatus_mstatusOld_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 19159:39]
      connect _mstatus_mstatusOld_WIRE_1, _mstatus_T_3 @[build/NutShell.fir.opt.mlir 19160:9]
      node _mstatus_mstatusOld_T = bits(_mstatus_mstatusOld_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 19162:34]
      connect _mstatus_mstatusOld_WIRE.ie.u, _mstatus_mstatusOld_T @[build/NutShell.fir.opt.mlir 19163:9]
      node _mstatus_mstatusOld_T_1 = bits(_mstatus_mstatusOld_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 19165:36]
      connect _mstatus_mstatusOld_WIRE.ie.s, _mstatus_mstatusOld_T_1 @[build/NutShell.fir.opt.mlir 19166:9]
      node _mstatus_mstatusOld_T_2 = bits(_mstatus_mstatusOld_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 19168:36]
      connect _mstatus_mstatusOld_WIRE.ie.h, _mstatus_mstatusOld_T_2 @[build/NutShell.fir.opt.mlir 19169:9]
      node _mstatus_mstatusOld_T_3 = bits(_mstatus_mstatusOld_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 19171:36]
      connect _mstatus_mstatusOld_WIRE.ie.m, _mstatus_mstatusOld_T_3 @[build/NutShell.fir.opt.mlir 19172:9]
      node _mstatus_mstatusOld_T_4 = bits(_mstatus_mstatusOld_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 19174:36]
      connect _mstatus_mstatusOld_WIRE.pie.u, _mstatus_mstatusOld_T_4 @[build/NutShell.fir.opt.mlir 19175:9]
      node _mstatus_mstatusOld_T_5 = bits(_mstatus_mstatusOld_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 19177:36]
      connect _mstatus_mstatusOld_WIRE.pie.s, _mstatus_mstatusOld_T_5 @[build/NutShell.fir.opt.mlir 19178:9]
      node _mstatus_mstatusOld_T_6 = bits(_mstatus_mstatusOld_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 19180:36]
      connect _mstatus_mstatusOld_WIRE.pie.h, _mstatus_mstatusOld_T_6 @[build/NutShell.fir.opt.mlir 19181:9]
      node _mstatus_mstatusOld_T_7 = bits(_mstatus_mstatusOld_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 19183:36]
      connect _mstatus_mstatusOld_WIRE.pie.m, _mstatus_mstatusOld_T_7 @[build/NutShell.fir.opt.mlir 19184:9]
      node _mstatus_mstatusOld_T_8 = bits(_mstatus_mstatusOld_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 19186:36]
      connect _mstatus_mstatusOld_WIRE.spp, _mstatus_mstatusOld_T_8 @[build/NutShell.fir.opt.mlir 19187:9]
      node _mstatus_mstatusOld_T_9 = bits(_mstatus_mstatusOld_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 19189:36]
      connect _mstatus_mstatusOld_WIRE.hpp, _mstatus_mstatusOld_T_9 @[build/NutShell.fir.opt.mlir 19190:9]
      node _mstatus_mstatusOld_T_10 = bits(_mstatus_mstatusOld_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 19192:37]
      connect _mstatus_mstatusOld_WIRE.mpp, _mstatus_mstatusOld_T_10 @[build/NutShell.fir.opt.mlir 19193:9]
      node _mstatus_mstatusOld_T_11 = bits(_mstatus_mstatusOld_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 19195:37]
      connect _mstatus_mstatusOld_WIRE.fs, _mstatus_mstatusOld_T_11 @[build/NutShell.fir.opt.mlir 19196:9]
      node _mstatus_mstatusOld_T_12 = bits(_mstatus_mstatusOld_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 19198:37]
      connect _mstatus_mstatusOld_WIRE.xs, _mstatus_mstatusOld_T_12 @[build/NutShell.fir.opt.mlir 19199:9]
      node _mstatus_mstatusOld_T_13 = bits(_mstatus_mstatusOld_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 19201:37]
      connect _mstatus_mstatusOld_WIRE.mprv, _mstatus_mstatusOld_T_13 @[build/NutShell.fir.opt.mlir 19202:9]
      node _mstatus_mstatusOld_T_14 = bits(_mstatus_mstatusOld_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 19204:37]
      connect _mstatus_mstatusOld_WIRE.sum, _mstatus_mstatusOld_T_14 @[build/NutShell.fir.opt.mlir 19205:9]
      node _mstatus_mstatusOld_T_15 = bits(_mstatus_mstatusOld_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 19207:37]
      connect _mstatus_mstatusOld_WIRE.mxr, _mstatus_mstatusOld_T_15 @[build/NutShell.fir.opt.mlir 19208:9]
      node _mstatus_mstatusOld_T_16 = bits(_mstatus_mstatusOld_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 19210:37]
      connect _mstatus_mstatusOld_WIRE.tvm, _mstatus_mstatusOld_T_16 @[build/NutShell.fir.opt.mlir 19211:9]
      node _mstatus_mstatusOld_T_17 = bits(_mstatus_mstatusOld_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 19213:37]
      connect _mstatus_mstatusOld_WIRE.tw, _mstatus_mstatusOld_T_17 @[build/NutShell.fir.opt.mlir 19214:9]
      node _mstatus_mstatusOld_T_18 = bits(_mstatus_mstatusOld_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 19216:37]
      connect _mstatus_mstatusOld_WIRE.tsr, _mstatus_mstatusOld_T_18 @[build/NutShell.fir.opt.mlir 19217:9]
      node _mstatus_mstatusOld_T_19 = bits(_mstatus_mstatusOld_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 19219:37]
      connect _mstatus_mstatusOld_WIRE.pad0, _mstatus_mstatusOld_T_19 @[build/NutShell.fir.opt.mlir 19220:9]
      node _mstatus_mstatusOld_T_20 = bits(_mstatus_mstatusOld_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 19222:37]
      connect _mstatus_mstatusOld_WIRE.uxl, _mstatus_mstatusOld_T_20 @[build/NutShell.fir.opt.mlir 19223:9]
      node _mstatus_mstatusOld_T_21 = bits(_mstatus_mstatusOld_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 19225:37]
      connect _mstatus_mstatusOld_WIRE.sxl, _mstatus_mstatusOld_T_21 @[build/NutShell.fir.opt.mlir 19226:9]
      node _mstatus_mstatusOld_T_22 = bits(_mstatus_mstatusOld_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 19228:37]
      connect _mstatus_mstatusOld_WIRE.pad1, _mstatus_mstatusOld_T_22 @[build/NutShell.fir.opt.mlir 19229:9]
      node _mstatus_mstatusOld_T_23 = bits(_mstatus_mstatusOld_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 19231:37]
      connect _mstatus_mstatusOld_WIRE.sd, _mstatus_mstatusOld_T_23 @[build/NutShell.fir.opt.mlir 19232:9]
      wire mstatus_mstatusOld : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19233:31]
      connect mstatus_mstatusOld, _mstatus_mstatusOld_WIRE @[build/NutShell.fir.opt.mlir 19235:9]
      node _mstatus_mstatusNew_T = eq(mstatus_mstatusOld.fs, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 19237:34]
      node _mstatus_mstatusNew_T_1 = bits(_mstatus_T_3, 62, 0) @[build/NutShell.fir.opt.mlir 19239:36]
      node mstatus_mstatusNew = cat(_mstatus_mstatusNew_T, _mstatus_mstatusNew_T_1) @[build/NutShell.fir.opt.mlir 19241:31]
      connect mstatus, mstatus_mstatusNew @[build/NutShell.fir.opt.mlir 19242:9]
    node _T_106 = eq(addr, UInt<12>(2877)) @[build/NutShell.fir.opt.mlir 19245:17]
    node _T_107 = and(_T_1, _T_106) @[build/NutShell.fir.opt.mlir 19247:17]
    when _T_107 : @[build/NutShell.fir.opt.mlir 19248:7]
      node _perfCnts_61_T = and(wdata, perfCntsLoMapping_61_2_2) @[build/NutShell.fir.opt.mlir 19250:27]
      node _perfCnts_61_T_1 = not(perfCntsLoMapping_61_2_2) @[build/NutShell.fir.opt.mlir 19252:29]
      node _perfCnts_61_T_2 = and(perfCnts_61, _perfCnts_61_T_1) @[build/NutShell.fir.opt.mlir 19254:29]
      node _perfCnts_61_T_3 = or(_perfCnts_61_T, _perfCnts_61_T_2) @[build/NutShell.fir.opt.mlir 19256:29]
      connect perfCnts_61, _perfCnts_61_T_3 @[build/NutShell.fir.opt.mlir 19257:9]
    node _T_108 = eq(addr, UInt<12>(2830)) @[build/NutShell.fir.opt.mlir 19260:17]
    node _T_109 = and(_T_1, _T_108) @[build/NutShell.fir.opt.mlir 19262:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 19263:7]
      node _perfCnts_14_T = and(wdata, perfCntsLoMapping_14_2_2) @[build/NutShell.fir.opt.mlir 19265:27]
      node _perfCnts_14_T_1 = not(perfCntsLoMapping_14_2_2) @[build/NutShell.fir.opt.mlir 19267:29]
      node _perfCnts_14_T_2 = and(perfCnts_14, _perfCnts_14_T_1) @[build/NutShell.fir.opt.mlir 19269:29]
      node _perfCnts_14_T_3 = or(_perfCnts_14_T, _perfCnts_14_T_2) @[build/NutShell.fir.opt.mlir 19271:29]
      connect perfCnts_14, _perfCnts_14_T_3 @[build/NutShell.fir.opt.mlir 19272:9]
    node _T_110 = eq(addr, UInt<12>(2868)) @[build/NutShell.fir.opt.mlir 19275:17]
    node _T_111 = and(_T_1, _T_110) @[build/NutShell.fir.opt.mlir 19277:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 19278:7]
      node _perfCnts_52_T = and(wdata, perfCntsLoMapping_52_2_2) @[build/NutShell.fir.opt.mlir 19280:27]
      node _perfCnts_52_T_1 = not(perfCntsLoMapping_52_2_2) @[build/NutShell.fir.opt.mlir 19282:29]
      node _perfCnts_52_T_2 = and(perfCnts_52, _perfCnts_52_T_1) @[build/NutShell.fir.opt.mlir 19284:29]
      node _perfCnts_52_T_3 = or(_perfCnts_52_T, _perfCnts_52_T_2) @[build/NutShell.fir.opt.mlir 19286:29]
      connect perfCnts_52, _perfCnts_52_T_3 @[build/NutShell.fir.opt.mlir 19287:9]
    node _T_112 = eq(addr, UInt<12>(2932)) @[build/NutShell.fir.opt.mlir 19290:17]
    node _T_113 = and(_T_1, _T_112) @[build/NutShell.fir.opt.mlir 19292:17]
    when _T_113 : @[build/NutShell.fir.opt.mlir 19293:7]
      node _perfCnts_116_T = and(wdata, perfCntsLoMapping_116_2_2) @[build/NutShell.fir.opt.mlir 19295:28]
      node _perfCnts_116_T_1 = not(perfCntsLoMapping_116_2_2) @[build/NutShell.fir.opt.mlir 19297:30]
      node _perfCnts_116_T_2 = and(perfCnts_116, _perfCnts_116_T_1) @[build/NutShell.fir.opt.mlir 19299:30]
      node _perfCnts_116_T_3 = or(_perfCnts_116_T, _perfCnts_116_T_2) @[build/NutShell.fir.opt.mlir 19301:30]
      connect perfCnts_116, _perfCnts_116_T_3 @[build/NutShell.fir.opt.mlir 19302:9]
    node _T_114 = eq(addr, UInt<12>(2836)) @[build/NutShell.fir.opt.mlir 19305:17]
    node _T_115 = and(_T_1, _T_114) @[build/NutShell.fir.opt.mlir 19307:17]
    when _T_115 : @[build/NutShell.fir.opt.mlir 19308:7]
      node _perfCnts_20_T = and(wdata, perfCntsLoMapping_20_2_2) @[build/NutShell.fir.opt.mlir 19310:27]
      node _perfCnts_20_T_1 = not(perfCntsLoMapping_20_2_2) @[build/NutShell.fir.opt.mlir 19312:29]
      node _perfCnts_20_T_2 = and(perfCnts_20, _perfCnts_20_T_1) @[build/NutShell.fir.opt.mlir 19314:29]
      node _perfCnts_20_T_3 = or(_perfCnts_20_T, _perfCnts_20_T_2) @[build/NutShell.fir.opt.mlir 19316:29]
      connect perfCnts_20, _perfCnts_20_T_3 @[build/NutShell.fir.opt.mlir 19317:9]
    node _T_116 = eq(addr, UInt<12>(2845)) @[build/NutShell.fir.opt.mlir 19320:17]
    node _T_117 = and(_T_1, _T_116) @[build/NutShell.fir.opt.mlir 19322:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 19323:7]
      node _perfCnts_29_T = and(wdata, perfCntsLoMapping_29_2_2) @[build/NutShell.fir.opt.mlir 19325:27]
      node _perfCnts_29_T_1 = not(perfCntsLoMapping_29_2_2) @[build/NutShell.fir.opt.mlir 19327:29]
      node _perfCnts_29_T_2 = and(perfCnts_29, _perfCnts_29_T_1) @[build/NutShell.fir.opt.mlir 19329:29]
      node _perfCnts_29_T_3 = or(_perfCnts_29_T, _perfCnts_29_T_2) @[build/NutShell.fir.opt.mlir 19331:29]
      connect perfCnts_29, _perfCnts_29_T_3 @[build/NutShell.fir.opt.mlir 19332:9]
    node _T_118 = eq(addr, UInt<12>(2900)) @[build/NutShell.fir.opt.mlir 19335:17]
    node _T_119 = and(_T_1, _T_118) @[build/NutShell.fir.opt.mlir 19337:17]
    when _T_119 : @[build/NutShell.fir.opt.mlir 19338:7]
      node _perfCnts_84_T = and(wdata, perfCntsLoMapping_84_2_2) @[build/NutShell.fir.opt.mlir 19340:27]
      node _perfCnts_84_T_1 = not(perfCntsLoMapping_84_2_2) @[build/NutShell.fir.opt.mlir 19342:29]
      node _perfCnts_84_T_2 = and(perfCnts_84, _perfCnts_84_T_1) @[build/NutShell.fir.opt.mlir 19344:29]
      node _perfCnts_84_T_3 = or(_perfCnts_84_T, _perfCnts_84_T_2) @[build/NutShell.fir.opt.mlir 19346:29]
      connect perfCnts_84, _perfCnts_84_T_3 @[build/NutShell.fir.opt.mlir 19347:9]
    node _T_120 = eq(addr, UInt<12>(2851)) @[build/NutShell.fir.opt.mlir 19350:17]
    node _T_121 = and(_T_1, _T_120) @[build/NutShell.fir.opt.mlir 19352:17]
    when _T_121 : @[build/NutShell.fir.opt.mlir 19353:7]
      node _perfCnts_35_T = and(wdata, perfCntsLoMapping_35_2_2) @[build/NutShell.fir.opt.mlir 19355:27]
      node _perfCnts_35_T_1 = not(perfCntsLoMapping_35_2_2) @[build/NutShell.fir.opt.mlir 19357:29]
      node _perfCnts_35_T_2 = and(perfCnts_35, _perfCnts_35_T_1) @[build/NutShell.fir.opt.mlir 19359:29]
      node _perfCnts_35_T_3 = or(_perfCnts_35_T, _perfCnts_35_T_2) @[build/NutShell.fir.opt.mlir 19361:29]
      connect perfCnts_35, _perfCnts_35_T_3 @[build/NutShell.fir.opt.mlir 19362:9]
    node _T_122 = eq(addr, UInt<12>(2862)) @[build/NutShell.fir.opt.mlir 19365:17]
    node _T_123 = and(_T_1, _T_122) @[build/NutShell.fir.opt.mlir 19367:17]
    when _T_123 : @[build/NutShell.fir.opt.mlir 19368:7]
      node _perfCnts_46_T = and(wdata, perfCntsLoMapping_46_2_2) @[build/NutShell.fir.opt.mlir 19370:27]
      node _perfCnts_46_T_1 = not(perfCntsLoMapping_46_2_2) @[build/NutShell.fir.opt.mlir 19372:29]
      node _perfCnts_46_T_2 = and(perfCnts_46, _perfCnts_46_T_1) @[build/NutShell.fir.opt.mlir 19374:29]
      node _perfCnts_46_T_3 = or(_perfCnts_46_T, _perfCnts_46_T_2) @[build/NutShell.fir.opt.mlir 19376:29]
      connect perfCnts_46, _perfCnts_46_T_3 @[build/NutShell.fir.opt.mlir 19377:9]
    node _T_124 = eq(addr, UInt<12>(2926)) @[build/NutShell.fir.opt.mlir 19380:17]
    node _T_125 = and(_T_1, _T_124) @[build/NutShell.fir.opt.mlir 19382:17]
    when _T_125 : @[build/NutShell.fir.opt.mlir 19383:7]
      node _perfCnts_110_T = and(wdata, perfCntsLoMapping_110_2_2) @[build/NutShell.fir.opt.mlir 19385:28]
      node _perfCnts_110_T_1 = not(perfCntsLoMapping_110_2_2) @[build/NutShell.fir.opt.mlir 19387:30]
      node _perfCnts_110_T_2 = and(perfCnts_110, _perfCnts_110_T_1) @[build/NutShell.fir.opt.mlir 19389:30]
      node _perfCnts_110_T_3 = or(_perfCnts_110_T, _perfCnts_110_T_2) @[build/NutShell.fir.opt.mlir 19391:30]
      connect perfCnts_110, _perfCnts_110_T_3 @[build/NutShell.fir.opt.mlir 19392:9]
    node _T_126 = eq(addr, UInt<12>(2883)) @[build/NutShell.fir.opt.mlir 19395:17]
    node _T_127 = and(_T_1, _T_126) @[build/NutShell.fir.opt.mlir 19397:17]
    when _T_127 : @[build/NutShell.fir.opt.mlir 19398:7]
      node _perfCnts_67_T = and(wdata, perfCntsLoMapping_67_2_2) @[build/NutShell.fir.opt.mlir 19400:27]
      node _perfCnts_67_T_1 = not(perfCntsLoMapping_67_2_2) @[build/NutShell.fir.opt.mlir 19402:29]
      node _perfCnts_67_T_2 = and(perfCnts_67, _perfCnts_67_T_1) @[build/NutShell.fir.opt.mlir 19404:29]
      node _perfCnts_67_T_3 = or(_perfCnts_67_T, _perfCnts_67_T_2) @[build/NutShell.fir.opt.mlir 19406:29]
      connect perfCnts_67, _perfCnts_67_T_3 @[build/NutShell.fir.opt.mlir 19407:9]
    node _T_128 = eq(addr, UInt<12>(2915)) @[build/NutShell.fir.opt.mlir 19410:17]
    node _T_129 = and(_T_1, _T_128) @[build/NutShell.fir.opt.mlir 19412:17]
    when _T_129 : @[build/NutShell.fir.opt.mlir 19413:7]
      node _perfCnts_99_T = and(wdata, perfCntsLoMapping_99_2_2) @[build/NutShell.fir.opt.mlir 19415:27]
      node _perfCnts_99_T_1 = not(perfCntsLoMapping_99_2_2) @[build/NutShell.fir.opt.mlir 19417:29]
      node _perfCnts_99_T_2 = and(perfCnts_99, _perfCnts_99_T_1) @[build/NutShell.fir.opt.mlir 19419:29]
      node _perfCnts_99_T_3 = or(_perfCnts_99_T, _perfCnts_99_T_2) @[build/NutShell.fir.opt.mlir 19421:29]
      connect perfCnts_99, _perfCnts_99_T_3 @[build/NutShell.fir.opt.mlir 19422:9]
    node _T_130 = eq(addr, UInt<10>(773)) @[build/NutShell.fir.opt.mlir 19425:17]
    node _T_131 = and(_T_1, _T_130) @[build/NutShell.fir.opt.mlir 19427:17]
    when _T_131 : @[build/NutShell.fir.opt.mlir 19428:7]
      node _mtvec_T = and(wdata, mapping_67_2_2) @[build/NutShell.fir.opt.mlir 19430:21]
      node _mtvec_T_1 = not(mapping_67_2_2) @[build/NutShell.fir.opt.mlir 19432:23]
      node _mtvec_T_2 = and(mtvec, _mtvec_T_1) @[build/NutShell.fir.opt.mlir 19434:23]
      node _mtvec_T_3 = or(_mtvec_T, _mtvec_T_2) @[build/NutShell.fir.opt.mlir 19436:23]
      connect mtvec, _mtvec_T_3 @[build/NutShell.fir.opt.mlir 19437:9]
    node _T_132 = eq(addr, UInt<12>(2909)) @[build/NutShell.fir.opt.mlir 19440:17]
    node _T_133 = and(_T_1, _T_132) @[build/NutShell.fir.opt.mlir 19442:17]
    when _T_133 : @[build/NutShell.fir.opt.mlir 19443:7]
      node _perfCnts_93_T = and(wdata, perfCntsLoMapping_93_2_2) @[build/NutShell.fir.opt.mlir 19445:27]
      node _perfCnts_93_T_1 = not(perfCntsLoMapping_93_2_2) @[build/NutShell.fir.opt.mlir 19447:29]
      node _perfCnts_93_T_2 = and(perfCnts_93, _perfCnts_93_T_1) @[build/NutShell.fir.opt.mlir 19449:29]
      node _perfCnts_93_T_3 = or(_perfCnts_93_T, _perfCnts_93_T_2) @[build/NutShell.fir.opt.mlir 19451:29]
      connect perfCnts_93, _perfCnts_93_T_3 @[build/NutShell.fir.opt.mlir 19452:9]
    node _T_134 = eq(addr, UInt<12>(2936)) @[build/NutShell.fir.opt.mlir 19455:17]
    node _T_135 = and(_T_1, _T_134) @[build/NutShell.fir.opt.mlir 19457:17]
    when _T_135 : @[build/NutShell.fir.opt.mlir 19458:7]
      node _perfCnts_120_T = and(wdata, perfCntsLoMapping_120_2_2) @[build/NutShell.fir.opt.mlir 19460:28]
      node _perfCnts_120_T_1 = not(perfCntsLoMapping_120_2_2) @[build/NutShell.fir.opt.mlir 19462:30]
      node _perfCnts_120_T_2 = and(perfCnts_120, _perfCnts_120_T_1) @[build/NutShell.fir.opt.mlir 19464:30]
      node _perfCnts_120_T_3 = or(_perfCnts_120_T, _perfCnts_120_T_2) @[build/NutShell.fir.opt.mlir 19466:30]
      connect perfCnts_120, _perfCnts_120_T_3 @[build/NutShell.fir.opt.mlir 19467:9]
    node _T_136 = eq(addr, UInt<12>(2904)) @[build/NutShell.fir.opt.mlir 19470:17]
    node _T_137 = and(_T_1, _T_136) @[build/NutShell.fir.opt.mlir 19472:17]
    when _T_137 : @[build/NutShell.fir.opt.mlir 19473:7]
      node _perfCnts_88_T = and(wdata, perfCntsLoMapping_88_2_2) @[build/NutShell.fir.opt.mlir 19475:27]
      node _perfCnts_88_T_1 = not(perfCntsLoMapping_88_2_2) @[build/NutShell.fir.opt.mlir 19477:29]
      node _perfCnts_88_T_2 = and(perfCnts_88, _perfCnts_88_T_1) @[build/NutShell.fir.opt.mlir 19479:29]
      node _perfCnts_88_T_3 = or(_perfCnts_88_T, _perfCnts_88_T_2) @[build/NutShell.fir.opt.mlir 19481:29]
      connect perfCnts_88, _perfCnts_88_T_3 @[build/NutShell.fir.opt.mlir 19482:9]
    node _T_138 = eq(addr, UInt<12>(2941)) @[build/NutShell.fir.opt.mlir 19485:17]
    node _T_139 = and(_T_1, _T_138) @[build/NutShell.fir.opt.mlir 19487:17]
    when _T_139 : @[build/NutShell.fir.opt.mlir 19488:7]
      node _perfCnts_125_T = and(wdata, perfCntsLoMapping_125_2_2) @[build/NutShell.fir.opt.mlir 19490:28]
      node _perfCnts_125_T_1 = not(perfCntsLoMapping_125_2_2) @[build/NutShell.fir.opt.mlir 19492:30]
      node _perfCnts_125_T_2 = and(perfCnts_125, _perfCnts_125_T_1) @[build/NutShell.fir.opt.mlir 19494:30]
      node _perfCnts_125_T_3 = or(_perfCnts_125_T, _perfCnts_125_T_2) @[build/NutShell.fir.opt.mlir 19496:30]
      connect perfCnts_125, _perfCnts_125_T_3 @[build/NutShell.fir.opt.mlir 19497:9]
    node _T_140 = eq(addr, UInt<12>(2894)) @[build/NutShell.fir.opt.mlir 19500:17]
    node _T_141 = and(_T_1, _T_140) @[build/NutShell.fir.opt.mlir 19502:17]
    when _T_141 : @[build/NutShell.fir.opt.mlir 19503:7]
      node _perfCnts_78_T = and(wdata, perfCntsLoMapping_78_2_2) @[build/NutShell.fir.opt.mlir 19505:27]
      node _perfCnts_78_T_1 = not(perfCntsLoMapping_78_2_2) @[build/NutShell.fir.opt.mlir 19507:29]
      node _perfCnts_78_T_2 = and(perfCnts_78, _perfCnts_78_T_1) @[build/NutShell.fir.opt.mlir 19509:29]
      node _perfCnts_78_T_3 = or(_perfCnts_78_T, _perfCnts_78_T_2) @[build/NutShell.fir.opt.mlir 19511:29]
      connect perfCnts_78, _perfCnts_78_T_3 @[build/NutShell.fir.opt.mlir 19512:9]
    node _T_142 = eq(addr, UInt<12>(2849)) @[build/NutShell.fir.opt.mlir 19515:17]
    node _T_143 = and(_T_1, _T_142) @[build/NutShell.fir.opt.mlir 19517:17]
    when _T_143 : @[build/NutShell.fir.opt.mlir 19518:7]
      node _perfCnts_33_T = and(wdata, perfCntsLoMapping_33_2_2) @[build/NutShell.fir.opt.mlir 19520:27]
      node _perfCnts_33_T_1 = not(perfCntsLoMapping_33_2_2) @[build/NutShell.fir.opt.mlir 19522:29]
      node _perfCnts_33_T_2 = and(perfCnts_33, _perfCnts_33_T_1) @[build/NutShell.fir.opt.mlir 19524:29]
      node _perfCnts_33_T_3 = or(_perfCnts_33_T, _perfCnts_33_T_2) @[build/NutShell.fir.opt.mlir 19526:29]
      connect perfCnts_33, _perfCnts_33_T_3 @[build/NutShell.fir.opt.mlir 19527:9]
    node _T_144 = eq(addr, UInt<10>(772)) @[build/NutShell.fir.opt.mlir 19530:17]
    node _T_145 = and(_T_1, _T_144) @[build/NutShell.fir.opt.mlir 19532:17]
    when _T_145 : @[build/NutShell.fir.opt.mlir 19533:7]
      node _mie_T_4 = and(wdata, mapping_74_2_2) @[build/NutShell.fir.opt.mlir 19535:21]
      node _mie_T_5 = not(mapping_74_2_2) @[build/NutShell.fir.opt.mlir 19537:21]
      node _mie_T_6 = and(mie, _mie_T_5) @[build/NutShell.fir.opt.mlir 19539:21]
      node _mie_T_7 = or(_mie_T_4, _mie_T_6) @[build/NutShell.fir.opt.mlir 19541:21]
      connect mie, _mie_T_7 @[build/NutShell.fir.opt.mlir 19542:9]
    node _T_146 = eq(addr, UInt<12>(2817)) @[build/NutShell.fir.opt.mlir 19545:17]
    node _T_147 = and(_T_1, _T_146) @[build/NutShell.fir.opt.mlir 19547:17]
    when _T_147 : @[build/NutShell.fir.opt.mlir 19548:7]
      node _perfCnts_1_T = and(wdata, perfCntsLoMapping_1_2_2) @[build/NutShell.fir.opt.mlir 19550:26]
      node _perfCnts_1_T_1 = not(perfCntsLoMapping_1_2_2) @[build/NutShell.fir.opt.mlir 19552:28]
      node _perfCnts_1_T_2 = and(perfCnts_1, _perfCnts_1_T_1) @[build/NutShell.fir.opt.mlir 19554:28]
      node _perfCnts_1_T_3 = or(_perfCnts_1_T, _perfCnts_1_T_2) @[build/NutShell.fir.opt.mlir 19556:28]
      connect perfCnts_1, _perfCnts_1_T_3 @[build/NutShell.fir.opt.mlir 19557:9]
    node _T_148 = eq(addr, UInt<12>(2827)) @[build/NutShell.fir.opt.mlir 19560:17]
    node _T_149 = and(_T_1, _T_148) @[build/NutShell.fir.opt.mlir 19562:17]
    when _T_149 : @[build/NutShell.fir.opt.mlir 19563:7]
      node _perfCnts_11_T = and(wdata, perfCntsLoMapping_11_2_2) @[build/NutShell.fir.opt.mlir 19565:27]
      node _perfCnts_11_T_1 = not(perfCntsLoMapping_11_2_2) @[build/NutShell.fir.opt.mlir 19567:29]
      node _perfCnts_11_T_2 = and(perfCnts_11, _perfCnts_11_T_1) @[build/NutShell.fir.opt.mlir 19569:29]
      node _perfCnts_11_T_3 = or(_perfCnts_11_T, _perfCnts_11_T_2) @[build/NutShell.fir.opt.mlir 19571:29]
      connect perfCnts_11, _perfCnts_11_T_3 @[build/NutShell.fir.opt.mlir 19572:9]
    node _T_150 = eq(addr, UInt<12>(2859)) @[build/NutShell.fir.opt.mlir 19575:17]
    node _T_151 = and(_T_1, _T_150) @[build/NutShell.fir.opt.mlir 19577:17]
    when _T_151 : @[build/NutShell.fir.opt.mlir 19578:7]
      node _perfCnts_43_T = and(wdata, perfCntsLoMapping_43_2_2) @[build/NutShell.fir.opt.mlir 19580:27]
      node _perfCnts_43_T_1 = not(perfCntsLoMapping_43_2_2) @[build/NutShell.fir.opt.mlir 19582:29]
      node _perfCnts_43_T_2 = and(perfCnts_43, _perfCnts_43_T_1) @[build/NutShell.fir.opt.mlir 19584:29]
      node _perfCnts_43_T_3 = or(_perfCnts_43_T, _perfCnts_43_T_2) @[build/NutShell.fir.opt.mlir 19586:29]
      connect perfCnts_43, _perfCnts_43_T_3 @[build/NutShell.fir.opt.mlir 19587:9]
    node _T_152 = eq(addr, UInt<12>(2938)) @[build/NutShell.fir.opt.mlir 19590:17]
    node _T_153 = and(_T_1, _T_152) @[build/NutShell.fir.opt.mlir 19592:17]
    when _T_153 : @[build/NutShell.fir.opt.mlir 19593:7]
      node _perfCnts_122_T = and(wdata, perfCntsLoMapping_122_2_2) @[build/NutShell.fir.opt.mlir 19595:28]
      node _perfCnts_122_T_1 = not(perfCntsLoMapping_122_2_2) @[build/NutShell.fir.opt.mlir 19597:30]
      node _perfCnts_122_T_2 = and(perfCnts_122, _perfCnts_122_T_1) @[build/NutShell.fir.opt.mlir 19599:30]
      node _perfCnts_122_T_3 = or(_perfCnts_122_T, _perfCnts_122_T_2) @[build/NutShell.fir.opt.mlir 19601:30]
      connect perfCnts_122, _perfCnts_122_T_3 @[build/NutShell.fir.opt.mlir 19602:9]
    node _T_154 = eq(addr, UInt<12>(2891)) @[build/NutShell.fir.opt.mlir 19605:17]
    node _T_155 = and(_T_1, _T_154) @[build/NutShell.fir.opt.mlir 19607:17]
    when _T_155 : @[build/NutShell.fir.opt.mlir 19608:7]
      node _perfCnts_75_T = and(wdata, perfCntsLoMapping_75_2_2) @[build/NutShell.fir.opt.mlir 19610:27]
      node _perfCnts_75_T_1 = not(perfCntsLoMapping_75_2_2) @[build/NutShell.fir.opt.mlir 19612:29]
      node _perfCnts_75_T_2 = and(perfCnts_75, _perfCnts_75_T_1) @[build/NutShell.fir.opt.mlir 19614:29]
      node _perfCnts_75_T_3 = or(_perfCnts_75_T, _perfCnts_75_T_2) @[build/NutShell.fir.opt.mlir 19616:29]
      connect perfCnts_75, _perfCnts_75_T_3 @[build/NutShell.fir.opt.mlir 19617:9]
    node _T_156 = eq(addr, UInt<12>(2935)) @[build/NutShell.fir.opt.mlir 19620:17]
    node _T_157 = and(_T_1, _T_156) @[build/NutShell.fir.opt.mlir 19622:17]
    when _T_157 : @[build/NutShell.fir.opt.mlir 19623:7]
      node _perfCnts_119_T = and(wdata, perfCntsLoMapping_119_2_2) @[build/NutShell.fir.opt.mlir 19625:28]
      node _perfCnts_119_T_1 = not(perfCntsLoMapping_119_2_2) @[build/NutShell.fir.opt.mlir 19627:30]
      node _perfCnts_119_T_2 = and(perfCnts_119, _perfCnts_119_T_1) @[build/NutShell.fir.opt.mlir 19629:30]
      node _perfCnts_119_T_3 = or(_perfCnts_119_T, _perfCnts_119_T_2) @[build/NutShell.fir.opt.mlir 19631:30]
      connect perfCnts_119, _perfCnts_119_T_3 @[build/NutShell.fir.opt.mlir 19632:9]
    node _T_158 = eq(addr, UInt<10>(947)) @[build/NutShell.fir.opt.mlir 19635:17]
    node _T_159 = and(_T_1, _T_158) @[build/NutShell.fir.opt.mlir 19637:17]
    when _T_159 : @[build/NutShell.fir.opt.mlir 19638:7]
      node _pmpaddr3_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 19640:24]
      node _pmpaddr3_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 19642:26]
      node _pmpaddr3_T_2 = and(pmpaddr3, _pmpaddr3_T_1) @[build/NutShell.fir.opt.mlir 19644:26]
      node _pmpaddr3_T_3 = or(_pmpaddr3_T, _pmpaddr3_T_2) @[build/NutShell.fir.opt.mlir 19646:26]
      connect pmpaddr3, _pmpaddr3_T_3 @[build/NutShell.fir.opt.mlir 19647:9]
    node _T_160 = eq(addr, UInt<12>(2906)) @[build/NutShell.fir.opt.mlir 19650:17]
    node _T_161 = and(_T_1, _T_160) @[build/NutShell.fir.opt.mlir 19652:17]
    when _T_161 : @[build/NutShell.fir.opt.mlir 19653:7]
      node _perfCnts_90_T = and(wdata, perfCntsLoMapping_90_2_2) @[build/NutShell.fir.opt.mlir 19655:27]
      node _perfCnts_90_T_1 = not(perfCntsLoMapping_90_2_2) @[build/NutShell.fir.opt.mlir 19657:29]
      node _perfCnts_90_T_2 = and(perfCnts_90, _perfCnts_90_T_1) @[build/NutShell.fir.opt.mlir 19659:29]
      node _perfCnts_90_T_3 = or(_perfCnts_90_T, _perfCnts_90_T_2) @[build/NutShell.fir.opt.mlir 19661:29]
      connect perfCnts_90, _perfCnts_90_T_3 @[build/NutShell.fir.opt.mlir 19662:9]
    node _T_162 = eq(addr, UInt<12>(2839)) @[build/NutShell.fir.opt.mlir 19665:17]
    node _T_163 = and(_T_1, _T_162) @[build/NutShell.fir.opt.mlir 19667:17]
    when _T_163 : @[build/NutShell.fir.opt.mlir 19668:7]
      node _perfCnts_23_T = and(wdata, perfCntsLoMapping_23_2_2) @[build/NutShell.fir.opt.mlir 19670:27]
      node _perfCnts_23_T_1 = not(perfCntsLoMapping_23_2_2) @[build/NutShell.fir.opt.mlir 19672:29]
      node _perfCnts_23_T_2 = and(perfCnts_23, _perfCnts_23_T_1) @[build/NutShell.fir.opt.mlir 19674:29]
      node _perfCnts_23_T_3 = or(_perfCnts_23_T, _perfCnts_23_T_2) @[build/NutShell.fir.opt.mlir 19676:29]
      connect perfCnts_23, _perfCnts_23_T_3 @[build/NutShell.fir.opt.mlir 19677:9]
    node _T_164 = eq(addr, UInt<12>(2943)) @[build/NutShell.fir.opt.mlir 19680:17]
    node _T_165 = and(_T_1, _T_164) @[build/NutShell.fir.opt.mlir 19682:17]
    when _T_165 : @[build/NutShell.fir.opt.mlir 19683:7]
      node _perfCnts_127_T = and(wdata, perfCntsLoMapping_127_2_2) @[build/NutShell.fir.opt.mlir 19685:28]
      node _perfCnts_127_T_1 = not(perfCntsLoMapping_127_2_2) @[build/NutShell.fir.opt.mlir 19687:30]
      node _perfCnts_127_T_2 = and(perfCnts_127, _perfCnts_127_T_1) @[build/NutShell.fir.opt.mlir 19689:30]
      node _perfCnts_127_T_3 = or(_perfCnts_127_T, _perfCnts_127_T_2) @[build/NutShell.fir.opt.mlir 19691:30]
      connect perfCnts_127, _perfCnts_127_T_3 @[build/NutShell.fir.opt.mlir 19692:9]
    node _T_166 = eq(addr, UInt<12>(2856)) @[build/NutShell.fir.opt.mlir 19695:17]
    node _T_167 = and(_T_1, _T_166) @[build/NutShell.fir.opt.mlir 19697:17]
    when _T_167 : @[build/NutShell.fir.opt.mlir 19698:7]
      node _perfCnts_40_T = and(wdata, perfCntsLoMapping_40_2_2) @[build/NutShell.fir.opt.mlir 19700:27]
      node _perfCnts_40_T_1 = not(perfCntsLoMapping_40_2_2) @[build/NutShell.fir.opt.mlir 19702:29]
      node _perfCnts_40_T_2 = and(perfCnts_40, _perfCnts_40_T_1) @[build/NutShell.fir.opt.mlir 19704:29]
      node _perfCnts_40_T_3 = or(_perfCnts_40_T, _perfCnts_40_T_2) @[build/NutShell.fir.opt.mlir 19706:29]
      connect perfCnts_40, _perfCnts_40_T_3 @[build/NutShell.fir.opt.mlir 19707:9]
    node _T_168 = eq(addr, UInt<12>(2896)) @[build/NutShell.fir.opt.mlir 19710:17]
    node _T_169 = and(_T_1, _T_168) @[build/NutShell.fir.opt.mlir 19712:17]
    when _T_169 : @[build/NutShell.fir.opt.mlir 19713:7]
      node _perfCnts_80_T = and(wdata, perfCntsLoMapping_80_2_2) @[build/NutShell.fir.opt.mlir 19715:27]
      node _perfCnts_80_T_1 = not(perfCntsLoMapping_80_2_2) @[build/NutShell.fir.opt.mlir 19717:29]
      node _perfCnts_80_T_2 = and(perfCnts_80, _perfCnts_80_T_1) @[build/NutShell.fir.opt.mlir 19719:29]
      node _perfCnts_80_T_3 = or(_perfCnts_80_T, _perfCnts_80_T_2) @[build/NutShell.fir.opt.mlir 19721:29]
      connect perfCnts_80, _perfCnts_80_T_3 @[build/NutShell.fir.opt.mlir 19722:9]
    node _T_170 = eq(addr, UInt<12>(2871)) @[build/NutShell.fir.opt.mlir 19725:17]
    node _T_171 = and(_T_1, _T_170) @[build/NutShell.fir.opt.mlir 19727:17]
    when _T_171 : @[build/NutShell.fir.opt.mlir 19728:7]
      node _perfCnts_55_T = and(wdata, perfCntsLoMapping_55_2_2) @[build/NutShell.fir.opt.mlir 19730:27]
      node _perfCnts_55_T_1 = not(perfCntsLoMapping_55_2_2) @[build/NutShell.fir.opt.mlir 19732:29]
      node _perfCnts_55_T_2 = and(perfCnts_55, _perfCnts_55_T_1) @[build/NutShell.fir.opt.mlir 19734:29]
      node _perfCnts_55_T_3 = or(_perfCnts_55_T, _perfCnts_55_T_2) @[build/NutShell.fir.opt.mlir 19736:29]
      connect perfCnts_55, _perfCnts_55_T_3 @[build/NutShell.fir.opt.mlir 19737:9]
    node _T_172 = eq(addr, UInt<12>(2824)) @[build/NutShell.fir.opt.mlir 19740:17]
    node _T_173 = and(_T_1, _T_172) @[build/NutShell.fir.opt.mlir 19742:17]
    when _T_173 : @[build/NutShell.fir.opt.mlir 19743:7]
      node _perfCnts_8_T = and(wdata, perfCntsLoMapping_8_2_2) @[build/NutShell.fir.opt.mlir 19745:26]
      node _perfCnts_8_T_1 = not(perfCntsLoMapping_8_2_2) @[build/NutShell.fir.opt.mlir 19747:28]
      node _perfCnts_8_T_2 = and(perfCnts_8, _perfCnts_8_T_1) @[build/NutShell.fir.opt.mlir 19749:28]
      node _perfCnts_8_T_3 = or(_perfCnts_8_T, _perfCnts_8_T_2) @[build/NutShell.fir.opt.mlir 19751:28]
      connect perfCnts_8, _perfCnts_8_T_3 @[build/NutShell.fir.opt.mlir 19752:9]
    node _T_174 = eq(addr, UInt<9>(323)) @[build/NutShell.fir.opt.mlir 19755:17]
    node _T_175 = and(_T_1, _T_174) @[build/NutShell.fir.opt.mlir 19757:17]
    when _T_175 : @[build/NutShell.fir.opt.mlir 19758:7]
      node _stval_T = and(wdata, mapping_89_2_2) @[build/NutShell.fir.opt.mlir 19760:21]
      node _stval_T_1 = not(mapping_89_2_2) @[build/NutShell.fir.opt.mlir 19762:23]
      node _stval_T_2 = and(stval, _stval_T_1) @[build/NutShell.fir.opt.mlir 19764:23]
      node _stval_T_3 = or(_stval_T, _stval_T_2) @[build/NutShell.fir.opt.mlir 19766:23]
      connect stval, _stval_T_3 @[build/NutShell.fir.opt.mlir 19767:9]
    node _T_176 = eq(addr, UInt<12>(2923)) @[build/NutShell.fir.opt.mlir 19770:17]
    node _T_177 = and(_T_1, _T_176) @[build/NutShell.fir.opt.mlir 19772:17]
    when _T_177 : @[build/NutShell.fir.opt.mlir 19773:7]
      node _perfCnts_107_T = and(wdata, perfCntsLoMapping_107_2_2) @[build/NutShell.fir.opt.mlir 19775:28]
      node _perfCnts_107_T_1 = not(perfCntsLoMapping_107_2_2) @[build/NutShell.fir.opt.mlir 19777:30]
      node _perfCnts_107_T_2 = and(perfCnts_107, _perfCnts_107_T_1) @[build/NutShell.fir.opt.mlir 19779:30]
      node _perfCnts_107_T_3 = or(_perfCnts_107_T, _perfCnts_107_T_2) @[build/NutShell.fir.opt.mlir 19781:30]
      connect perfCnts_107, _perfCnts_107_T_3 @[build/NutShell.fir.opt.mlir 19782:9]
    node _T_178 = eq(addr, UInt<12>(2874)) @[build/NutShell.fir.opt.mlir 19785:17]
    node _T_179 = and(_T_1, _T_178) @[build/NutShell.fir.opt.mlir 19787:17]
    when _T_179 : @[build/NutShell.fir.opt.mlir 19788:7]
      node _perfCnts_58_T = and(wdata, perfCntsLoMapping_58_2_2) @[build/NutShell.fir.opt.mlir 19790:27]
      node _perfCnts_58_T_1 = not(perfCntsLoMapping_58_2_2) @[build/NutShell.fir.opt.mlir 19792:29]
      node _perfCnts_58_T_2 = and(perfCnts_58, _perfCnts_58_T_1) @[build/NutShell.fir.opt.mlir 19794:29]
      node _perfCnts_58_T_3 = or(_perfCnts_58_T, _perfCnts_58_T_2) @[build/NutShell.fir.opt.mlir 19796:29]
      connect perfCnts_58, _perfCnts_58_T_3 @[build/NutShell.fir.opt.mlir 19797:9]
    node _T_180 = eq(addr, UInt<10>(769)) @[build/NutShell.fir.opt.mlir 19800:17]
    node _T_181 = and(_T_1, _T_180) @[build/NutShell.fir.opt.mlir 19802:17]
    when _T_181 : @[build/NutShell.fir.opt.mlir 19803:7]
      node _misa_T = and(wdata, mapping_92_2_2) @[build/NutShell.fir.opt.mlir 19805:20]
      node _misa_T_1 = not(mapping_92_2_2) @[build/NutShell.fir.opt.mlir 19807:22]
      node _misa_T_2 = and(misa, _misa_T_1) @[build/NutShell.fir.opt.mlir 19809:22]
      node _misa_T_3 = or(_misa_T, _misa_T_2) @[build/NutShell.fir.opt.mlir 19811:22]
      connect misa, _misa_T_3 @[build/NutShell.fir.opt.mlir 19812:9]
    node _T_182 = eq(addr, UInt<12>(2928)) @[build/NutShell.fir.opt.mlir 19815:17]
    node _T_183 = and(_T_1, _T_182) @[build/NutShell.fir.opt.mlir 19817:17]
    when _T_183 : @[build/NutShell.fir.opt.mlir 19818:7]
      node _perfCnts_112_T = and(wdata, perfCntsLoMapping_112_2_2) @[build/NutShell.fir.opt.mlir 19820:28]
      node _perfCnts_112_T_1 = not(perfCntsLoMapping_112_2_2) @[build/NutShell.fir.opt.mlir 19822:30]
      node _perfCnts_112_T_2 = and(perfCnts_112, _perfCnts_112_T_1) @[build/NutShell.fir.opt.mlir 19824:30]
      node _perfCnts_112_T_3 = or(_perfCnts_112_T, _perfCnts_112_T_2) @[build/NutShell.fir.opt.mlir 19826:30]
      connect perfCnts_112, _perfCnts_112_T_3 @[build/NutShell.fir.opt.mlir 19827:9]
    node _T_184 = eq(addr, UInt<12>(2842)) @[build/NutShell.fir.opt.mlir 19830:17]
    node _T_185 = and(_T_1, _T_184) @[build/NutShell.fir.opt.mlir 19832:17]
    when _T_185 : @[build/NutShell.fir.opt.mlir 19833:7]
      node _perfCnts_26_T = and(wdata, perfCntsLoMapping_26_2_2) @[build/NutShell.fir.opt.mlir 19835:27]
      node _perfCnts_26_T_1 = not(perfCntsLoMapping_26_2_2) @[build/NutShell.fir.opt.mlir 19837:29]
      node _perfCnts_26_T_2 = and(perfCnts_26, _perfCnts_26_T_1) @[build/NutShell.fir.opt.mlir 19839:29]
      node _perfCnts_26_T_3 = or(_perfCnts_26_T, _perfCnts_26_T_2) @[build/NutShell.fir.opt.mlir 19841:29]
      connect perfCnts_26, _perfCnts_26_T_3 @[build/NutShell.fir.opt.mlir 19842:9]
    node _T_186 = eq(addr, UInt<12>(2911)) @[build/NutShell.fir.opt.mlir 19845:17]
    node _T_187 = and(_T_1, _T_186) @[build/NutShell.fir.opt.mlir 19847:17]
    when _T_187 : @[build/NutShell.fir.opt.mlir 19848:7]
      node _perfCnts_95_T = and(wdata, perfCntsLoMapping_95_2_2) @[build/NutShell.fir.opt.mlir 19850:27]
      node _perfCnts_95_T_1 = not(perfCntsLoMapping_95_2_2) @[build/NutShell.fir.opt.mlir 19852:29]
      node _perfCnts_95_T_2 = and(perfCnts_95, _perfCnts_95_T_1) @[build/NutShell.fir.opt.mlir 19854:29]
      node _perfCnts_95_T_3 = or(_perfCnts_95_T, _perfCnts_95_T_2) @[build/NutShell.fir.opt.mlir 19856:29]
      connect perfCnts_95, _perfCnts_95_T_3 @[build/NutShell.fir.opt.mlir 19857:9]
    node _T_188 = eq(addr, UInt<12>(2931)) @[build/NutShell.fir.opt.mlir 19860:17]
    node _T_189 = and(_T_1, _T_188) @[build/NutShell.fir.opt.mlir 19862:17]
    when _T_189 : @[build/NutShell.fir.opt.mlir 19863:7]
      node _perfCnts_115_T = and(wdata, perfCntsLoMapping_115_2_2) @[build/NutShell.fir.opt.mlir 19865:28]
      node _perfCnts_115_T_1 = not(perfCntsLoMapping_115_2_2) @[build/NutShell.fir.opt.mlir 19867:30]
      node _perfCnts_115_T_2 = and(perfCnts_115, _perfCnts_115_T_1) @[build/NutShell.fir.opt.mlir 19869:30]
      node _perfCnts_115_T_3 = or(_perfCnts_115_T, _perfCnts_115_T_2) @[build/NutShell.fir.opt.mlir 19871:30]
      connect perfCnts_115, _perfCnts_115_T_3 @[build/NutShell.fir.opt.mlir 19872:9]
    node _T_190 = eq(addr, UInt<12>(2867)) @[build/NutShell.fir.opt.mlir 19875:17]
    node _T_191 = and(_T_1, _T_190) @[build/NutShell.fir.opt.mlir 19877:17]
    when _T_191 : @[build/NutShell.fir.opt.mlir 19878:7]
      node _perfCnts_51_T = and(wdata, perfCntsLoMapping_51_2_2) @[build/NutShell.fir.opt.mlir 19880:27]
      node _perfCnts_51_T_1 = not(perfCntsLoMapping_51_2_2) @[build/NutShell.fir.opt.mlir 19882:29]
      node _perfCnts_51_T_2 = and(perfCnts_51, _perfCnts_51_T_1) @[build/NutShell.fir.opt.mlir 19884:29]
      node _perfCnts_51_T_3 = or(_perfCnts_51_T, _perfCnts_51_T_2) @[build/NutShell.fir.opt.mlir 19886:29]
      connect perfCnts_51, _perfCnts_51_T_3 @[build/NutShell.fir.opt.mlir 19887:9]
    node _T_192 = eq(addr, UInt<10>(768)) @[build/NutShell.fir.opt.mlir 19890:17]
    node _T_193 = and(_T_1, _T_192) @[build/NutShell.fir.opt.mlir 19892:17]
    when _T_193 : @[build/NutShell.fir.opt.mlir 19893:7]
      node _mstatus_T_4 = and(wdata, mstatusWMask) @[build/NutShell.fir.opt.mlir 19895:25]
      node _mstatus_T_5 = not(mstatusWMask) @[build/NutShell.fir.opt.mlir 19897:25]
      node _mstatus_T_6 = and(mstatus, _mstatus_T_5) @[build/NutShell.fir.opt.mlir 19899:25]
      node _mstatus_T_7 = or(_mstatus_T_4, _mstatus_T_6) @[build/NutShell.fir.opt.mlir 19901:25]
      wire _mstatus_mstatusOld_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19902:39]
      wire _mstatus_mstatusOld_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 19929:39]
      connect _mstatus_mstatusOld_WIRE_3, _mstatus_T_7 @[build/NutShell.fir.opt.mlir 19930:9]
      node _mstatus_mstatusOld_T_24 = bits(_mstatus_mstatusOld_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 19932:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.u, _mstatus_mstatusOld_T_24 @[build/NutShell.fir.opt.mlir 19933:9]
      node _mstatus_mstatusOld_T_25 = bits(_mstatus_mstatusOld_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 19935:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.s, _mstatus_mstatusOld_T_25 @[build/NutShell.fir.opt.mlir 19936:9]
      node _mstatus_mstatusOld_T_26 = bits(_mstatus_mstatusOld_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 19938:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.h, _mstatus_mstatusOld_T_26 @[build/NutShell.fir.opt.mlir 19939:9]
      node _mstatus_mstatusOld_T_27 = bits(_mstatus_mstatusOld_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 19941:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.m, _mstatus_mstatusOld_T_27 @[build/NutShell.fir.opt.mlir 19942:9]
      node _mstatus_mstatusOld_T_28 = bits(_mstatus_mstatusOld_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 19944:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.u, _mstatus_mstatusOld_T_28 @[build/NutShell.fir.opt.mlir 19945:9]
      node _mstatus_mstatusOld_T_29 = bits(_mstatus_mstatusOld_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 19947:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.s, _mstatus_mstatusOld_T_29 @[build/NutShell.fir.opt.mlir 19948:9]
      node _mstatus_mstatusOld_T_30 = bits(_mstatus_mstatusOld_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 19950:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.h, _mstatus_mstatusOld_T_30 @[build/NutShell.fir.opt.mlir 19951:9]
      node _mstatus_mstatusOld_T_31 = bits(_mstatus_mstatusOld_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 19953:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.m, _mstatus_mstatusOld_T_31 @[build/NutShell.fir.opt.mlir 19954:9]
      node _mstatus_mstatusOld_T_32 = bits(_mstatus_mstatusOld_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 19956:37]
      connect _mstatus_mstatusOld_WIRE_2.spp, _mstatus_mstatusOld_T_32 @[build/NutShell.fir.opt.mlir 19957:9]
      node _mstatus_mstatusOld_T_33 = bits(_mstatus_mstatusOld_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 19959:37]
      connect _mstatus_mstatusOld_WIRE_2.hpp, _mstatus_mstatusOld_T_33 @[build/NutShell.fir.opt.mlir 19960:9]
      node _mstatus_mstatusOld_T_34 = bits(_mstatus_mstatusOld_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 19962:37]
      connect _mstatus_mstatusOld_WIRE_2.mpp, _mstatus_mstatusOld_T_34 @[build/NutShell.fir.opt.mlir 19963:9]
      node _mstatus_mstatusOld_T_35 = bits(_mstatus_mstatusOld_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 19965:37]
      connect _mstatus_mstatusOld_WIRE_2.fs, _mstatus_mstatusOld_T_35 @[build/NutShell.fir.opt.mlir 19966:9]
      node _mstatus_mstatusOld_T_36 = bits(_mstatus_mstatusOld_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 19968:37]
      connect _mstatus_mstatusOld_WIRE_2.xs, _mstatus_mstatusOld_T_36 @[build/NutShell.fir.opt.mlir 19969:9]
      node _mstatus_mstatusOld_T_37 = bits(_mstatus_mstatusOld_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 19971:37]
      connect _mstatus_mstatusOld_WIRE_2.mprv, _mstatus_mstatusOld_T_37 @[build/NutShell.fir.opt.mlir 19972:9]
      node _mstatus_mstatusOld_T_38 = bits(_mstatus_mstatusOld_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 19974:37]
      connect _mstatus_mstatusOld_WIRE_2.sum, _mstatus_mstatusOld_T_38 @[build/NutShell.fir.opt.mlir 19975:9]
      node _mstatus_mstatusOld_T_39 = bits(_mstatus_mstatusOld_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 19977:37]
      connect _mstatus_mstatusOld_WIRE_2.mxr, _mstatus_mstatusOld_T_39 @[build/NutShell.fir.opt.mlir 19978:9]
      node _mstatus_mstatusOld_T_40 = bits(_mstatus_mstatusOld_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 19980:37]
      connect _mstatus_mstatusOld_WIRE_2.tvm, _mstatus_mstatusOld_T_40 @[build/NutShell.fir.opt.mlir 19981:9]
      node _mstatus_mstatusOld_T_41 = bits(_mstatus_mstatusOld_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 19983:37]
      connect _mstatus_mstatusOld_WIRE_2.tw, _mstatus_mstatusOld_T_41 @[build/NutShell.fir.opt.mlir 19984:9]
      node _mstatus_mstatusOld_T_42 = bits(_mstatus_mstatusOld_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 19986:37]
      connect _mstatus_mstatusOld_WIRE_2.tsr, _mstatus_mstatusOld_T_42 @[build/NutShell.fir.opt.mlir 19987:9]
      node _mstatus_mstatusOld_T_43 = bits(_mstatus_mstatusOld_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 19989:37]
      connect _mstatus_mstatusOld_WIRE_2.pad0, _mstatus_mstatusOld_T_43 @[build/NutShell.fir.opt.mlir 19990:9]
      node _mstatus_mstatusOld_T_44 = bits(_mstatus_mstatusOld_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 19992:37]
      connect _mstatus_mstatusOld_WIRE_2.uxl, _mstatus_mstatusOld_T_44 @[build/NutShell.fir.opt.mlir 19993:9]
      node _mstatus_mstatusOld_T_45 = bits(_mstatus_mstatusOld_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 19995:37]
      connect _mstatus_mstatusOld_WIRE_2.sxl, _mstatus_mstatusOld_T_45 @[build/NutShell.fir.opt.mlir 19996:9]
      node _mstatus_mstatusOld_T_46 = bits(_mstatus_mstatusOld_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 19998:37]
      connect _mstatus_mstatusOld_WIRE_2.pad1, _mstatus_mstatusOld_T_46 @[build/NutShell.fir.opt.mlir 19999:9]
      node _mstatus_mstatusOld_T_47 = bits(_mstatus_mstatusOld_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 20001:37]
      connect _mstatus_mstatusOld_WIRE_2.sd, _mstatus_mstatusOld_T_47 @[build/NutShell.fir.opt.mlir 20002:9]
      wire mstatus_mstatusOld_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 20003:33]
      connect mstatus_mstatusOld_1, _mstatus_mstatusOld_WIRE_2 @[build/NutShell.fir.opt.mlir 20005:9]
      node _mstatus_mstatusNew_T_2 = eq(mstatus_mstatusOld_1.fs, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 20007:36]
      node _mstatus_mstatusNew_T_3 = bits(_mstatus_T_7, 62, 0) @[build/NutShell.fir.opt.mlir 20009:36]
      node mstatus_mstatusNew_1 = cat(_mstatus_mstatusNew_T_2, _mstatus_mstatusNew_T_3) @[build/NutShell.fir.opt.mlir 20011:33]
      connect mstatus, mstatus_mstatusNew_1 @[build/NutShell.fir.opt.mlir 20012:9]
    node _T_194 = eq(addr, UInt<12>(2835)) @[build/NutShell.fir.opt.mlir 20015:17]
    node _T_195 = and(_T_1, _T_194) @[build/NutShell.fir.opt.mlir 20017:17]
    when _T_195 : @[build/NutShell.fir.opt.mlir 20018:7]
      node _perfCnts_19_T = and(wdata, perfCntsLoMapping_19_2_2) @[build/NutShell.fir.opt.mlir 20020:27]
      node _perfCnts_19_T_1 = not(perfCntsLoMapping_19_2_2) @[build/NutShell.fir.opt.mlir 20022:29]
      node _perfCnts_19_T_2 = and(perfCnts_19, _perfCnts_19_T_1) @[build/NutShell.fir.opt.mlir 20024:29]
      node _perfCnts_19_T_3 = or(_perfCnts_19_T, _perfCnts_19_T_2) @[build/NutShell.fir.opt.mlir 20026:29]
      connect perfCnts_19, _perfCnts_19_T_3 @[build/NutShell.fir.opt.mlir 20027:9]
    node _T_196 = eq(addr, UInt<10>(944)) @[build/NutShell.fir.opt.mlir 20030:17]
    node _T_197 = and(_T_1, _T_196) @[build/NutShell.fir.opt.mlir 20032:17]
    when _T_197 : @[build/NutShell.fir.opt.mlir 20033:7]
      node _pmpaddr0_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20035:24]
      node _pmpaddr0_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20037:26]
      node _pmpaddr0_T_2 = and(pmpaddr0, _pmpaddr0_T_1) @[build/NutShell.fir.opt.mlir 20039:26]
      node _pmpaddr0_T_3 = or(_pmpaddr0_T, _pmpaddr0_T_2) @[build/NutShell.fir.opt.mlir 20041:26]
      connect pmpaddr0, _pmpaddr0_T_3 @[build/NutShell.fir.opt.mlir 20042:9]
    node _T_198 = eq(addr, UInt<12>(2878)) @[build/NutShell.fir.opt.mlir 20045:17]
    node _T_199 = and(_T_1, _T_198) @[build/NutShell.fir.opt.mlir 20047:17]
    when _T_199 : @[build/NutShell.fir.opt.mlir 20048:7]
      node _perfCnts_62_T = and(wdata, perfCntsLoMapping_62_2_2) @[build/NutShell.fir.opt.mlir 20050:27]
      node _perfCnts_62_T_1 = not(perfCntsLoMapping_62_2_2) @[build/NutShell.fir.opt.mlir 20052:29]
      node _perfCnts_62_T_2 = and(perfCnts_62, _perfCnts_62_T_1) @[build/NutShell.fir.opt.mlir 20054:29]
      node _perfCnts_62_T_3 = or(_perfCnts_62_T, _perfCnts_62_T_2) @[build/NutShell.fir.opt.mlir 20056:29]
      connect perfCnts_62, _perfCnts_62_T_3 @[build/NutShell.fir.opt.mlir 20057:9]
    node _T_200 = eq(addr, UInt<12>(2927)) @[build/NutShell.fir.opt.mlir 20060:17]
    node _T_201 = and(_T_1, _T_200) @[build/NutShell.fir.opt.mlir 20062:17]
    when _T_201 : @[build/NutShell.fir.opt.mlir 20063:7]
      node _perfCnts_111_T = and(wdata, perfCntsLoMapping_111_2_2) @[build/NutShell.fir.opt.mlir 20065:28]
      node _perfCnts_111_T_1 = not(perfCntsLoMapping_111_2_2) @[build/NutShell.fir.opt.mlir 20067:30]
      node _perfCnts_111_T_2 = and(perfCnts_111, _perfCnts_111_T_1) @[build/NutShell.fir.opt.mlir 20069:30]
      node _perfCnts_111_T_3 = or(_perfCnts_111_T, _perfCnts_111_T_2) @[build/NutShell.fir.opt.mlir 20071:30]
      connect perfCnts_111, _perfCnts_111_T_3 @[build/NutShell.fir.opt.mlir 20072:9]
    node _T_202 = eq(addr, UInt<12>(2846)) @[build/NutShell.fir.opt.mlir 20075:17]
    node _T_203 = and(_T_1, _T_202) @[build/NutShell.fir.opt.mlir 20077:17]
    when _T_203 : @[build/NutShell.fir.opt.mlir 20078:7]
      node _perfCnts_30_T = and(wdata, perfCntsLoMapping_30_2_2) @[build/NutShell.fir.opt.mlir 20080:27]
      node _perfCnts_30_T_1 = not(perfCntsLoMapping_30_2_2) @[build/NutShell.fir.opt.mlir 20082:29]
      node _perfCnts_30_T_2 = and(perfCnts_30, _perfCnts_30_T_1) @[build/NutShell.fir.opt.mlir 20084:29]
      node _perfCnts_30_T_3 = or(_perfCnts_30_T, _perfCnts_30_T_2) @[build/NutShell.fir.opt.mlir 20086:29]
      connect perfCnts_30, _perfCnts_30_T_3 @[build/NutShell.fir.opt.mlir 20087:9]
    node _T_204 = eq(addr, UInt<12>(2899)) @[build/NutShell.fir.opt.mlir 20090:17]
    node _T_205 = and(_T_1, _T_204) @[build/NutShell.fir.opt.mlir 20092:17]
    when _T_205 : @[build/NutShell.fir.opt.mlir 20093:7]
      node _perfCnts_83_T = and(wdata, perfCntsLoMapping_83_2_2) @[build/NutShell.fir.opt.mlir 20095:27]
      node _perfCnts_83_T_1 = not(perfCntsLoMapping_83_2_2) @[build/NutShell.fir.opt.mlir 20097:29]
      node _perfCnts_83_T_2 = and(perfCnts_83, _perfCnts_83_T_1) @[build/NutShell.fir.opt.mlir 20099:29]
      node _perfCnts_83_T_3 = or(_perfCnts_83_T, _perfCnts_83_T_2) @[build/NutShell.fir.opt.mlir 20101:29]
      connect perfCnts_83, _perfCnts_83_T_3 @[build/NutShell.fir.opt.mlir 20102:9]
    node _T_206 = eq(addr, UInt<12>(2914)) @[build/NutShell.fir.opt.mlir 20105:17]
    node _T_207 = and(_T_1, _T_206) @[build/NutShell.fir.opt.mlir 20107:17]
    when _T_207 : @[build/NutShell.fir.opt.mlir 20108:7]
      node _perfCnts_98_T = and(wdata, perfCntsLoMapping_98_2_2) @[build/NutShell.fir.opt.mlir 20110:27]
      node _perfCnts_98_T_1 = not(perfCntsLoMapping_98_2_2) @[build/NutShell.fir.opt.mlir 20112:29]
      node _perfCnts_98_T_2 = and(perfCnts_98, _perfCnts_98_T_1) @[build/NutShell.fir.opt.mlir 20114:29]
      node _perfCnts_98_T_3 = or(_perfCnts_98_T, _perfCnts_98_T_2) @[build/NutShell.fir.opt.mlir 20116:29]
      connect perfCnts_98, _perfCnts_98_T_3 @[build/NutShell.fir.opt.mlir 20117:9]
    node _T_208 = eq(addr, UInt<12>(2816)) @[build/NutShell.fir.opt.mlir 20120:17]
    node _T_209 = and(_T_1, _T_208) @[build/NutShell.fir.opt.mlir 20122:17]
    when _T_209 : @[build/NutShell.fir.opt.mlir 20123:7]
      node _perfCnts_0_T = and(wdata, perfCntsLoMapping_0_2_2) @[build/NutShell.fir.opt.mlir 20125:26]
      node _perfCnts_0_T_1 = not(perfCntsLoMapping_0_2_2) @[build/NutShell.fir.opt.mlir 20127:28]
      node _perfCnts_0_T_2 = and(perfCnts_0, _perfCnts_0_T_1) @[build/NutShell.fir.opt.mlir 20129:28]
      node _perfCnts_0_T_3 = or(_perfCnts_0_T, _perfCnts_0_T_2) @[build/NutShell.fir.opt.mlir 20131:28]
      connect perfCnts_0, _perfCnts_0_T_3 @[build/NutShell.fir.opt.mlir 20132:9]
    node _T_210 = eq(addr, UInt<12>(2942)) @[build/NutShell.fir.opt.mlir 20135:17]
    node _T_211 = and(_T_1, _T_210) @[build/NutShell.fir.opt.mlir 20137:17]
    when _T_211 : @[build/NutShell.fir.opt.mlir 20138:7]
      node _perfCnts_126_T = and(wdata, perfCntsLoMapping_126_2_2) @[build/NutShell.fir.opt.mlir 20140:28]
      node _perfCnts_126_T_1 = not(perfCntsLoMapping_126_2_2) @[build/NutShell.fir.opt.mlir 20142:30]
      node _perfCnts_126_T_2 = and(perfCnts_126, _perfCnts_126_T_1) @[build/NutShell.fir.opt.mlir 20144:30]
      node _perfCnts_126_T_3 = or(_perfCnts_126_T, _perfCnts_126_T_2) @[build/NutShell.fir.opt.mlir 20146:30]
      connect perfCnts_126, _perfCnts_126_T_3 @[build/NutShell.fir.opt.mlir 20147:9]
    node _T_212 = eq(addr, UInt<12>(2863)) @[build/NutShell.fir.opt.mlir 20150:17]
    node _T_213 = and(_T_1, _T_212) @[build/NutShell.fir.opt.mlir 20152:17]
    when _T_213 : @[build/NutShell.fir.opt.mlir 20153:7]
      node _perfCnts_47_T = and(wdata, perfCntsLoMapping_47_2_2) @[build/NutShell.fir.opt.mlir 20155:27]
      node _perfCnts_47_T_1 = not(perfCntsLoMapping_47_2_2) @[build/NutShell.fir.opt.mlir 20157:29]
      node _perfCnts_47_T_2 = and(perfCnts_47, _perfCnts_47_T_1) @[build/NutShell.fir.opt.mlir 20159:29]
      node _perfCnts_47_T_3 = or(_perfCnts_47_T, _perfCnts_47_T_2) @[build/NutShell.fir.opt.mlir 20161:29]
      connect perfCnts_47, _perfCnts_47_T_3 @[build/NutShell.fir.opt.mlir 20162:9]
    node _T_214 = eq(addr, UInt<12>(2821)) @[build/NutShell.fir.opt.mlir 20165:17]
    node _T_215 = and(_T_1, _T_214) @[build/NutShell.fir.opt.mlir 20167:17]
    when _T_215 : @[build/NutShell.fir.opt.mlir 20168:7]
      node _perfCnts_5_T = and(wdata, perfCntsLoMapping_5_2_2) @[build/NutShell.fir.opt.mlir 20170:26]
      node _perfCnts_5_T_1 = not(perfCntsLoMapping_5_2_2) @[build/NutShell.fir.opt.mlir 20172:28]
      node _perfCnts_5_T_2 = and(perfCnts_5, _perfCnts_5_T_1) @[build/NutShell.fir.opt.mlir 20174:28]
      node _perfCnts_5_T_3 = or(_perfCnts_5_T, _perfCnts_5_T_2) @[build/NutShell.fir.opt.mlir 20176:28]
      connect perfCnts_5, _perfCnts_5_T_3 @[build/NutShell.fir.opt.mlir 20177:9]
    node _T_216 = eq(addr, UInt<12>(2850)) @[build/NutShell.fir.opt.mlir 20180:17]
    node _T_217 = and(_T_1, _T_216) @[build/NutShell.fir.opt.mlir 20182:17]
    when _T_217 : @[build/NutShell.fir.opt.mlir 20183:7]
      node _perfCnts_34_T = and(wdata, perfCntsLoMapping_34_2_2) @[build/NutShell.fir.opt.mlir 20185:27]
      node _perfCnts_34_T_1 = not(perfCntsLoMapping_34_2_2) @[build/NutShell.fir.opt.mlir 20187:29]
      node _perfCnts_34_T_2 = and(perfCnts_34, _perfCnts_34_T_1) @[build/NutShell.fir.opt.mlir 20189:29]
      node _perfCnts_34_T_3 = or(_perfCnts_34_T, _perfCnts_34_T_2) @[build/NutShell.fir.opt.mlir 20191:29]
      connect perfCnts_34, _perfCnts_34_T_3 @[build/NutShell.fir.opt.mlir 20192:9]
    node _T_218 = eq(addr, UInt<12>(2888)) @[build/NutShell.fir.opt.mlir 20195:17]
    node _T_219 = and(_T_1, _T_218) @[build/NutShell.fir.opt.mlir 20197:17]
    when _T_219 : @[build/NutShell.fir.opt.mlir 20198:7]
      node _perfCnts_72_T = and(wdata, perfCntsLoMapping_72_2_2) @[build/NutShell.fir.opt.mlir 20200:27]
      node _perfCnts_72_T_1 = not(perfCntsLoMapping_72_2_2) @[build/NutShell.fir.opt.mlir 20202:29]
      node _perfCnts_72_T_2 = and(perfCnts_72, _perfCnts_72_T_1) @[build/NutShell.fir.opt.mlir 20204:29]
      node _perfCnts_72_T_3 = or(_perfCnts_72_T, _perfCnts_72_T_2) @[build/NutShell.fir.opt.mlir 20206:29]
      connect perfCnts_72, _perfCnts_72_T_3 @[build/NutShell.fir.opt.mlir 20207:9]
    node _T_220 = eq(addr, UInt<12>(2882)) @[build/NutShell.fir.opt.mlir 20210:17]
    node _T_221 = and(_T_1, _T_220) @[build/NutShell.fir.opt.mlir 20212:17]
    when _T_221 : @[build/NutShell.fir.opt.mlir 20213:7]
      node _perfCnts_66_T = and(wdata, perfCntsLoMapping_66_2_2) @[build/NutShell.fir.opt.mlir 20215:27]
      node _perfCnts_66_T_1 = not(perfCntsLoMapping_66_2_2) @[build/NutShell.fir.opt.mlir 20217:29]
      node _perfCnts_66_T_2 = and(perfCnts_66, _perfCnts_66_T_1) @[build/NutShell.fir.opt.mlir 20219:29]
      node _perfCnts_66_T_3 = or(_perfCnts_66_T, _perfCnts_66_T_2) @[build/NutShell.fir.opt.mlir 20221:29]
      connect perfCnts_66, _perfCnts_66_T_3 @[build/NutShell.fir.opt.mlir 20222:9]
    node _T_222 = eq(addr, UInt<12>(2831)) @[build/NutShell.fir.opt.mlir 20225:17]
    node _T_223 = and(_T_1, _T_222) @[build/NutShell.fir.opt.mlir 20227:17]
    when _T_223 : @[build/NutShell.fir.opt.mlir 20228:7]
      node _perfCnts_15_T = and(wdata, perfCntsLoMapping_15_2_2) @[build/NutShell.fir.opt.mlir 20230:27]
      node _perfCnts_15_T_1 = not(perfCntsLoMapping_15_2_2) @[build/NutShell.fir.opt.mlir 20232:29]
      node _perfCnts_15_T_2 = and(perfCnts_15, _perfCnts_15_T_1) @[build/NutShell.fir.opt.mlir 20234:29]
      node _perfCnts_15_T_3 = or(_perfCnts_15_T, _perfCnts_15_T_2) @[build/NutShell.fir.opt.mlir 20236:29]
      connect perfCnts_15, _perfCnts_15_T_3 @[build/NutShell.fir.opt.mlir 20237:9]
    node _T_224 = eq(addr, UInt<12>(2920)) @[build/NutShell.fir.opt.mlir 20240:17]
    node _T_225 = and(_T_1, _T_224) @[build/NutShell.fir.opt.mlir 20242:17]
    when _T_225 : @[build/NutShell.fir.opt.mlir 20243:7]
      node _perfCnts_104_T = and(wdata, perfCntsLoMapping_104_2_2) @[build/NutShell.fir.opt.mlir 20245:28]
      node _perfCnts_104_T_1 = not(perfCntsLoMapping_104_2_2) @[build/NutShell.fir.opt.mlir 20247:30]
      node _perfCnts_104_T_2 = and(perfCnts_104, _perfCnts_104_T_1) @[build/NutShell.fir.opt.mlir 20249:30]
      node _perfCnts_104_T_3 = or(_perfCnts_104_T, _perfCnts_104_T_2) @[build/NutShell.fir.opt.mlir 20251:30]
      connect perfCnts_104, _perfCnts_104_T_3 @[build/NutShell.fir.opt.mlir 20252:9]
    node _T_226 = eq(addr, UInt<12>(2903)) @[build/NutShell.fir.opt.mlir 20255:17]
    node _T_227 = and(_T_1, _T_226) @[build/NutShell.fir.opt.mlir 20257:17]
    when _T_227 : @[build/NutShell.fir.opt.mlir 20258:7]
      node _perfCnts_87_T = and(wdata, perfCntsLoMapping_87_2_2) @[build/NutShell.fir.opt.mlir 20260:27]
      node _perfCnts_87_T_1 = not(perfCntsLoMapping_87_2_2) @[build/NutShell.fir.opt.mlir 20262:29]
      node _perfCnts_87_T_2 = and(perfCnts_87, _perfCnts_87_T_1) @[build/NutShell.fir.opt.mlir 20264:29]
      node _perfCnts_87_T_3 = or(_perfCnts_87_T, _perfCnts_87_T_2) @[build/NutShell.fir.opt.mlir 20266:29]
      connect perfCnts_87, _perfCnts_87_T_3 @[build/NutShell.fir.opt.mlir 20267:9]
    node _T_228 = eq(addr, UInt<12>(2838)) @[build/NutShell.fir.opt.mlir 20270:17]
    node _T_229 = and(_T_1, _T_228) @[build/NutShell.fir.opt.mlir 20272:17]
    when _T_229 : @[build/NutShell.fir.opt.mlir 20273:7]
      node _perfCnts_22_T = and(wdata, perfCntsLoMapping_22_2_2) @[build/NutShell.fir.opt.mlir 20275:27]
      node _perfCnts_22_T_1 = not(perfCntsLoMapping_22_2_2) @[build/NutShell.fir.opt.mlir 20277:29]
      node _perfCnts_22_T_2 = and(perfCnts_22, _perfCnts_22_T_1) @[build/NutShell.fir.opt.mlir 20279:29]
      node _perfCnts_22_T_3 = or(_perfCnts_22_T, _perfCnts_22_T_2) @[build/NutShell.fir.opt.mlir 20281:29]
      connect perfCnts_22, _perfCnts_22_T_3 @[build/NutShell.fir.opt.mlir 20282:9]
    node _T_230 = eq(addr, UInt<12>(2843)) @[build/NutShell.fir.opt.mlir 20285:17]
    node _T_231 = and(_T_1, _T_230) @[build/NutShell.fir.opt.mlir 20287:17]
    when _T_231 : @[build/NutShell.fir.opt.mlir 20288:7]
      node _perfCnts_27_T = and(wdata, perfCntsLoMapping_27_2_2) @[build/NutShell.fir.opt.mlir 20290:27]
      node _perfCnts_27_T_1 = not(perfCntsLoMapping_27_2_2) @[build/NutShell.fir.opt.mlir 20292:29]
      node _perfCnts_27_T_2 = and(perfCnts_27, _perfCnts_27_T_1) @[build/NutShell.fir.opt.mlir 20294:29]
      node _perfCnts_27_T_3 = or(_perfCnts_27_T, _perfCnts_27_T_2) @[build/NutShell.fir.opt.mlir 20296:29]
      connect perfCnts_27, _perfCnts_27_T_3 @[build/NutShell.fir.opt.mlir 20297:9]
    node _T_232 = eq(addr, UInt<12>(2860)) @[build/NutShell.fir.opt.mlir 20300:17]
    node _T_233 = and(_T_1, _T_232) @[build/NutShell.fir.opt.mlir 20302:17]
    when _T_233 : @[build/NutShell.fir.opt.mlir 20303:7]
      node _perfCnts_44_T = and(wdata, perfCntsLoMapping_44_2_2) @[build/NutShell.fir.opt.mlir 20305:27]
      node _perfCnts_44_T_1 = not(perfCntsLoMapping_44_2_2) @[build/NutShell.fir.opt.mlir 20307:29]
      node _perfCnts_44_T_2 = and(perfCnts_44, _perfCnts_44_T_1) @[build/NutShell.fir.opt.mlir 20309:29]
      node _perfCnts_44_T_3 = or(_perfCnts_44_T, _perfCnts_44_T_2) @[build/NutShell.fir.opt.mlir 20311:29]
      connect perfCnts_44, _perfCnts_44_T_3 @[build/NutShell.fir.opt.mlir 20312:9]
    node _T_234 = eq(addr, UInt<12>(2939)) @[build/NutShell.fir.opt.mlir 20315:17]
    node _T_235 = and(_T_1, _T_234) @[build/NutShell.fir.opt.mlir 20317:17]
    when _T_235 : @[build/NutShell.fir.opt.mlir 20318:7]
      node _perfCnts_123_T = and(wdata, perfCntsLoMapping_123_2_2) @[build/NutShell.fir.opt.mlir 20320:28]
      node _perfCnts_123_T_1 = not(perfCntsLoMapping_123_2_2) @[build/NutShell.fir.opt.mlir 20322:30]
      node _perfCnts_123_T_2 = and(perfCnts_123, _perfCnts_123_T_1) @[build/NutShell.fir.opt.mlir 20324:30]
      node _perfCnts_123_T_3 = or(_perfCnts_123_T, _perfCnts_123_T_2) @[build/NutShell.fir.opt.mlir 20326:30]
      connect perfCnts_123, _perfCnts_123_T_3 @[build/NutShell.fir.opt.mlir 20327:9]
    node _T_236 = eq(addr, UInt<12>(2892)) @[build/NutShell.fir.opt.mlir 20330:17]
    node _T_237 = and(_T_1, _T_236) @[build/NutShell.fir.opt.mlir 20332:17]
    when _T_237 : @[build/NutShell.fir.opt.mlir 20333:7]
      node _perfCnts_76_T = and(wdata, perfCntsLoMapping_76_2_2) @[build/NutShell.fir.opt.mlir 20335:27]
      node _perfCnts_76_T_1 = not(perfCntsLoMapping_76_2_2) @[build/NutShell.fir.opt.mlir 20337:29]
      node _perfCnts_76_T_2 = and(perfCnts_76, _perfCnts_76_T_1) @[build/NutShell.fir.opt.mlir 20339:29]
      node _perfCnts_76_T_3 = or(_perfCnts_76_T, _perfCnts_76_T_2) @[build/NutShell.fir.opt.mlir 20341:29]
      connect perfCnts_76, _perfCnts_76_T_3 @[build/NutShell.fir.opt.mlir 20342:9]
    node _T_238 = eq(addr, UInt<12>(2848)) @[build/NutShell.fir.opt.mlir 20345:17]
    node _T_239 = and(_T_1, _T_238) @[build/NutShell.fir.opt.mlir 20347:17]
    when _T_239 : @[build/NutShell.fir.opt.mlir 20348:7]
      node _perfCnts_32_T = and(wdata, perfCntsLoMapping_32_2_2) @[build/NutShell.fir.opt.mlir 20350:27]
      node _perfCnts_32_T_1 = not(perfCntsLoMapping_32_2_2) @[build/NutShell.fir.opt.mlir 20352:29]
      node _perfCnts_32_T_2 = and(perfCnts_32, _perfCnts_32_T_1) @[build/NutShell.fir.opt.mlir 20354:29]
      node _perfCnts_32_T_3 = or(_perfCnts_32_T, _perfCnts_32_T_2) @[build/NutShell.fir.opt.mlir 20356:29]
      connect perfCnts_32, _perfCnts_32_T_3 @[build/NutShell.fir.opt.mlir 20357:9]
    node _T_240 = eq(addr, UInt<12>(2924)) @[build/NutShell.fir.opt.mlir 20360:17]
    node _T_241 = and(_T_1, _T_240) @[build/NutShell.fir.opt.mlir 20362:17]
    when _T_241 : @[build/NutShell.fir.opt.mlir 20363:7]
      node _perfCnts_108_T = and(wdata, perfCntsLoMapping_108_2_2) @[build/NutShell.fir.opt.mlir 20365:28]
      node _perfCnts_108_T_1 = not(perfCntsLoMapping_108_2_2) @[build/NutShell.fir.opt.mlir 20367:30]
      node _perfCnts_108_T_2 = and(perfCnts_108, _perfCnts_108_T_1) @[build/NutShell.fir.opt.mlir 20369:30]
      node _perfCnts_108_T_3 = or(_perfCnts_108_T, _perfCnts_108_T_2) @[build/NutShell.fir.opt.mlir 20371:30]
      connect perfCnts_108, _perfCnts_108_T_3 @[build/NutShell.fir.opt.mlir 20372:9]
    node _T_242 = eq(addr, UInt<12>(2818)) @[build/NutShell.fir.opt.mlir 20375:17]
    node _T_243 = and(_T_1, _T_242) @[build/NutShell.fir.opt.mlir 20377:17]
    when _T_243 : @[build/NutShell.fir.opt.mlir 20378:7]
      node _perfCnts_2_T = and(wdata, perfCntsLoMapping_2_2_2) @[build/NutShell.fir.opt.mlir 20380:26]
      node _perfCnts_2_T_1 = not(perfCntsLoMapping_2_2_2) @[build/NutShell.fir.opt.mlir 20382:28]
      node _perfCnts_2_T_2 = and(perfCnts_2, _perfCnts_2_T_1) @[build/NutShell.fir.opt.mlir 20384:28]
      node _perfCnts_2_T_3 = or(_perfCnts_2_T, _perfCnts_2_T_2) @[build/NutShell.fir.opt.mlir 20386:28]
      connect perfCnts_2, _perfCnts_2_T_3 @[build/NutShell.fir.opt.mlir 20387:9]
    node _T_244 = eq(addr, UInt<12>(2919)) @[build/NutShell.fir.opt.mlir 20390:17]
    node _T_245 = and(_T_1, _T_244) @[build/NutShell.fir.opt.mlir 20392:17]
    when _T_245 : @[build/NutShell.fir.opt.mlir 20393:7]
      node _perfCnts_103_T = and(wdata, perfCntsLoMapping_103_2_2) @[build/NutShell.fir.opt.mlir 20395:28]
      node _perfCnts_103_T_1 = not(perfCntsLoMapping_103_2_2) @[build/NutShell.fir.opt.mlir 20397:30]
      node _perfCnts_103_T_2 = and(perfCnts_103, _perfCnts_103_T_1) @[build/NutShell.fir.opt.mlir 20399:30]
      node _perfCnts_103_T_3 = or(_perfCnts_103_T, _perfCnts_103_T_2) @[build/NutShell.fir.opt.mlir 20401:30]
      connect perfCnts_103, _perfCnts_103_T_3 @[build/NutShell.fir.opt.mlir 20402:9]
    node _T_246 = eq(addr, UInt<12>(2865)) @[build/NutShell.fir.opt.mlir 20405:17]
    node _T_247 = and(_T_1, _T_246) @[build/NutShell.fir.opt.mlir 20407:17]
    when _T_247 : @[build/NutShell.fir.opt.mlir 20408:7]
      node _perfCnts_49_T = and(wdata, perfCntsLoMapping_49_2_2) @[build/NutShell.fir.opt.mlir 20410:27]
      node _perfCnts_49_T_1 = not(perfCntsLoMapping_49_2_2) @[build/NutShell.fir.opt.mlir 20412:29]
      node _perfCnts_49_T_2 = and(perfCnts_49, _perfCnts_49_T_1) @[build/NutShell.fir.opt.mlir 20414:29]
      node _perfCnts_49_T_3 = or(_perfCnts_49_T, _perfCnts_49_T_2) @[build/NutShell.fir.opt.mlir 20416:29]
      connect perfCnts_49, _perfCnts_49_T_3 @[build/NutShell.fir.opt.mlir 20417:9]
    node _T_248 = eq(addr, UInt<12>(2875)) @[build/NutShell.fir.opt.mlir 20420:17]
    node _T_249 = and(_T_1, _T_248) @[build/NutShell.fir.opt.mlir 20422:17]
    when _T_249 : @[build/NutShell.fir.opt.mlir 20423:7]
      node _perfCnts_59_T = and(wdata, perfCntsLoMapping_59_2_2) @[build/NutShell.fir.opt.mlir 20425:27]
      node _perfCnts_59_T_1 = not(perfCntsLoMapping_59_2_2) @[build/NutShell.fir.opt.mlir 20427:29]
      node _perfCnts_59_T_2 = and(perfCnts_59, _perfCnts_59_T_1) @[build/NutShell.fir.opt.mlir 20429:29]
      node _perfCnts_59_T_3 = or(_perfCnts_59_T, _perfCnts_59_T_2) @[build/NutShell.fir.opt.mlir 20431:29]
      connect perfCnts_59, _perfCnts_59_T_3 @[build/NutShell.fir.opt.mlir 20432:9]
    node _T_250 = eq(addr, UInt<10>(931)) @[build/NutShell.fir.opt.mlir 20435:17]
    node _T_251 = and(_T_1, _T_250) @[build/NutShell.fir.opt.mlir 20437:17]
    when _T_251 : @[build/NutShell.fir.opt.mlir 20438:7]
      node _pmpcfg3_T = and(wdata, mapping_128_2_2) @[build/NutShell.fir.opt.mlir 20440:23]
      node _pmpcfg3_T_1 = not(mapping_128_2_2) @[build/NutShell.fir.opt.mlir 20442:25]
      node _pmpcfg3_T_2 = and(pmpcfg3, _pmpcfg3_T_1) @[build/NutShell.fir.opt.mlir 20444:25]
      node _pmpcfg3_T_3 = or(_pmpcfg3_T, _pmpcfg3_T_2) @[build/NutShell.fir.opt.mlir 20446:25]
      connect pmpcfg3, _pmpcfg3_T_3 @[build/NutShell.fir.opt.mlir 20447:9]
    node _T_252 = eq(addr, UInt<12>(2885)) @[build/NutShell.fir.opt.mlir 20450:17]
    node _T_253 = and(_T_1, _T_252) @[build/NutShell.fir.opt.mlir 20452:17]
    when _T_253 : @[build/NutShell.fir.opt.mlir 20453:7]
      node _perfCnts_69_T = and(wdata, perfCntsLoMapping_69_2_2) @[build/NutShell.fir.opt.mlir 20455:27]
      node _perfCnts_69_T_1 = not(perfCntsLoMapping_69_2_2) @[build/NutShell.fir.opt.mlir 20457:29]
      node _perfCnts_69_T_2 = and(perfCnts_69, _perfCnts_69_T_1) @[build/NutShell.fir.opt.mlir 20459:29]
      node _perfCnts_69_T_3 = or(_perfCnts_69_T, _perfCnts_69_T_2) @[build/NutShell.fir.opt.mlir 20461:29]
      connect perfCnts_69, _perfCnts_69_T_3 @[build/NutShell.fir.opt.mlir 20462:9]
    node _T_254 = eq(addr, UInt<12>(2870)) @[build/NutShell.fir.opt.mlir 20465:17]
    node _T_255 = and(_T_1, _T_254) @[build/NutShell.fir.opt.mlir 20467:17]
    when _T_255 : @[build/NutShell.fir.opt.mlir 20468:7]
      node _perfCnts_54_T = and(wdata, perfCntsLoMapping_54_2_2) @[build/NutShell.fir.opt.mlir 20470:27]
      node _perfCnts_54_T_1 = not(perfCntsLoMapping_54_2_2) @[build/NutShell.fir.opt.mlir 20472:29]
      node _perfCnts_54_T_2 = and(perfCnts_54, _perfCnts_54_T_1) @[build/NutShell.fir.opt.mlir 20474:29]
      node _perfCnts_54_T_3 = or(_perfCnts_54_T, _perfCnts_54_T_2) @[build/NutShell.fir.opt.mlir 20476:29]
      connect perfCnts_54, _perfCnts_54_T_3 @[build/NutShell.fir.opt.mlir 20477:9]
    node _T_256 = eq(addr, UInt<12>(2828)) @[build/NutShell.fir.opt.mlir 20480:17]
    node _T_257 = and(_T_1, _T_256) @[build/NutShell.fir.opt.mlir 20482:17]
    when _T_257 : @[build/NutShell.fir.opt.mlir 20483:7]
      node _perfCnts_12_T = and(wdata, perfCntsLoMapping_12_2_2) @[build/NutShell.fir.opt.mlir 20485:27]
      node _perfCnts_12_T_1 = not(perfCntsLoMapping_12_2_2) @[build/NutShell.fir.opt.mlir 20487:29]
      node _perfCnts_12_T_2 = and(perfCnts_12, _perfCnts_12_T_1) @[build/NutShell.fir.opt.mlir 20489:29]
      node _perfCnts_12_T_3 = or(_perfCnts_12_T, _perfCnts_12_T_2) @[build/NutShell.fir.opt.mlir 20491:29]
      connect perfCnts_12, _perfCnts_12_T_3 @[build/NutShell.fir.opt.mlir 20492:9]
    node _T_258 = eq(addr, UInt<10>(771)) @[build/NutShell.fir.opt.mlir 20495:17]
    node _T_259 = and(_T_1, _T_258) @[build/NutShell.fir.opt.mlir 20497:17]
    when _T_259 : @[build/NutShell.fir.opt.mlir 20498:7]
      node _mideleg_T = and(wdata, UInt<64>(546)) @[build/NutShell.fir.opt.mlir 20500:23]
      node _mideleg_T_1 = not(UInt<64>(546)) @[build/NutShell.fir.opt.mlir 20502:25]
      node _mideleg_T_2 = and(mideleg, _mideleg_T_1) @[build/NutShell.fir.opt.mlir 20504:25]
      node _mideleg_T_3 = or(_mideleg_T, _mideleg_T_2) @[build/NutShell.fir.opt.mlir 20506:25]
      connect mideleg, _mideleg_T_3 @[build/NutShell.fir.opt.mlir 20507:9]
    node _T_260 = eq(addr, UInt<12>(2907)) @[build/NutShell.fir.opt.mlir 20510:17]
    node _T_261 = and(_T_1, _T_260) @[build/NutShell.fir.opt.mlir 20512:17]
    when _T_261 : @[build/NutShell.fir.opt.mlir 20513:7]
      node _perfCnts_91_T = and(wdata, perfCntsLoMapping_91_2_2) @[build/NutShell.fir.opt.mlir 20515:27]
      node _perfCnts_91_T_1 = not(perfCntsLoMapping_91_2_2) @[build/NutShell.fir.opt.mlir 20517:29]
      node _perfCnts_91_T_2 = and(perfCnts_91, _perfCnts_91_T_1) @[build/NutShell.fir.opt.mlir 20519:29]
      node _perfCnts_91_T_3 = or(_perfCnts_91_T, _perfCnts_91_T_2) @[build/NutShell.fir.opt.mlir 20521:29]
      connect perfCnts_91, _perfCnts_91_T_3 @[build/NutShell.fir.opt.mlir 20522:9]
    node _T_262 = eq(addr, UInt<12>(2855)) @[build/NutShell.fir.opt.mlir 20525:17]
    node _T_263 = and(_T_1, _T_262) @[build/NutShell.fir.opt.mlir 20527:17]
    when _T_263 : @[build/NutShell.fir.opt.mlir 20528:7]
      node _perfCnts_39_T = and(wdata, perfCntsLoMapping_39_2_2) @[build/NutShell.fir.opt.mlir 20530:27]
      node _perfCnts_39_T_1 = not(perfCntsLoMapping_39_2_2) @[build/NutShell.fir.opt.mlir 20532:29]
      node _perfCnts_39_T_2 = and(perfCnts_39, _perfCnts_39_T_1) @[build/NutShell.fir.opt.mlir 20534:29]
      node _perfCnts_39_T_3 = or(_perfCnts_39_T, _perfCnts_39_T_2) @[build/NutShell.fir.opt.mlir 20536:29]
      connect perfCnts_39, _perfCnts_39_T_3 @[build/NutShell.fir.opt.mlir 20537:9]
    node _T_264 = eq(addr, UInt<12>(2853)) @[build/NutShell.fir.opt.mlir 20540:17]
    node _T_265 = and(_T_1, _T_264) @[build/NutShell.fir.opt.mlir 20542:17]
    when _T_265 : @[build/NutShell.fir.opt.mlir 20543:7]
      node _perfCnts_37_T = and(wdata, perfCntsLoMapping_37_2_2) @[build/NutShell.fir.opt.mlir 20545:27]
      node _perfCnts_37_T_1 = not(perfCntsLoMapping_37_2_2) @[build/NutShell.fir.opt.mlir 20547:29]
      node _perfCnts_37_T_2 = and(perfCnts_37, _perfCnts_37_T_1) @[build/NutShell.fir.opt.mlir 20549:29]
      node _perfCnts_37_T_3 = or(_perfCnts_37_T, _perfCnts_37_T_2) @[build/NutShell.fir.opt.mlir 20551:29]
      connect perfCnts_37, _perfCnts_37_T_3 @[build/NutShell.fir.opt.mlir 20552:9]
    node _T_266 = eq(addr, UInt<10>(946)) @[build/NutShell.fir.opt.mlir 20555:17]
    node _T_267 = and(_T_1, _T_266) @[build/NutShell.fir.opt.mlir 20557:17]
    when _T_267 : @[build/NutShell.fir.opt.mlir 20558:7]
      node _pmpaddr2_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20560:24]
      node _pmpaddr2_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20562:26]
      node _pmpaddr2_T_2 = and(pmpaddr2, _pmpaddr2_T_1) @[build/NutShell.fir.opt.mlir 20564:26]
      node _pmpaddr2_T_3 = or(_pmpaddr2_T, _pmpaddr2_T_2) @[build/NutShell.fir.opt.mlir 20566:26]
      connect pmpaddr2, _pmpaddr2_T_3 @[build/NutShell.fir.opt.mlir 20567:9]
    node _T_268 = eq(addr, UInt<12>(2823)) @[build/NutShell.fir.opt.mlir 20570:17]
    node _T_269 = and(_T_1, _T_268) @[build/NutShell.fir.opt.mlir 20572:17]
    when _T_269 : @[build/NutShell.fir.opt.mlir 20573:7]
      node _perfCnts_7_T = and(wdata, perfCntsLoMapping_7_2_2) @[build/NutShell.fir.opt.mlir 20575:26]
      node _perfCnts_7_T_1 = not(perfCntsLoMapping_7_2_2) @[build/NutShell.fir.opt.mlir 20577:28]
      node _perfCnts_7_T_2 = and(perfCnts_7, _perfCnts_7_T_1) @[build/NutShell.fir.opt.mlir 20579:28]
      node _perfCnts_7_T_3 = or(_perfCnts_7_T, _perfCnts_7_T_2) @[build/NutShell.fir.opt.mlir 20581:28]
      connect perfCnts_7, _perfCnts_7_T_3 @[build/NutShell.fir.opt.mlir 20582:9]
    node _T_270 = eq(addr, UInt<12>(2934)) @[build/NutShell.fir.opt.mlir 20585:17]
    node _T_271 = and(_T_1, _T_270) @[build/NutShell.fir.opt.mlir 20587:17]
    when _T_271 : @[build/NutShell.fir.opt.mlir 20588:7]
      node _perfCnts_118_T = and(wdata, perfCntsLoMapping_118_2_2) @[build/NutShell.fir.opt.mlir 20590:28]
      node _perfCnts_118_T_1 = not(perfCntsLoMapping_118_2_2) @[build/NutShell.fir.opt.mlir 20592:30]
      node _perfCnts_118_T_2 = and(perfCnts_118, _perfCnts_118_T_1) @[build/NutShell.fir.opt.mlir 20594:30]
      node _perfCnts_118_T_3 = or(_perfCnts_118_T, _perfCnts_118_T_2) @[build/NutShell.fir.opt.mlir 20596:30]
      connect perfCnts_118, _perfCnts_118_T_3 @[build/NutShell.fir.opt.mlir 20597:9]
    node _T_272 = eq(addr, UInt<12>(2912)) @[build/NutShell.fir.opt.mlir 20600:17]
    node _T_273 = and(_T_1, _T_272) @[build/NutShell.fir.opt.mlir 20602:17]
    when _T_273 : @[build/NutShell.fir.opt.mlir 20603:7]
      node _perfCnts_96_T = and(wdata, perfCntsLoMapping_96_2_2) @[build/NutShell.fir.opt.mlir 20605:27]
      node _perfCnts_96_T_1 = not(perfCntsLoMapping_96_2_2) @[build/NutShell.fir.opt.mlir 20607:29]
      node _perfCnts_96_T_2 = and(perfCnts_96, _perfCnts_96_T_1) @[build/NutShell.fir.opt.mlir 20609:29]
      node _perfCnts_96_T_3 = or(_perfCnts_96_T, _perfCnts_96_T_2) @[build/NutShell.fir.opt.mlir 20611:29]
      connect perfCnts_96, _perfCnts_96_T_3 @[build/NutShell.fir.opt.mlir 20612:9]
    node _T_274 = eq(addr, UInt<10>(929)) @[build/NutShell.fir.opt.mlir 20615:17]
    node _T_275 = and(_T_1, _T_274) @[build/NutShell.fir.opt.mlir 20617:17]
    when _T_275 : @[build/NutShell.fir.opt.mlir 20618:7]
      node _pmpcfg1_T = and(wdata, mapping_141_2_2) @[build/NutShell.fir.opt.mlir 20620:23]
      node _pmpcfg1_T_1 = not(mapping_141_2_2) @[build/NutShell.fir.opt.mlir 20622:25]
      node _pmpcfg1_T_2 = and(pmpcfg1, _pmpcfg1_T_1) @[build/NutShell.fir.opt.mlir 20624:25]
      node _pmpcfg1_T_3 = or(_pmpcfg1_T, _pmpcfg1_T_2) @[build/NutShell.fir.opt.mlir 20626:25]
      connect pmpcfg1, _pmpcfg1_T_3 @[build/NutShell.fir.opt.mlir 20627:9]
    node _T_276 = eq(addr, UInt<12>(2902)) @[build/NutShell.fir.opt.mlir 20630:17]
    node _T_277 = and(_T_1, _T_276) @[build/NutShell.fir.opt.mlir 20632:17]
    when _T_277 : @[build/NutShell.fir.opt.mlir 20633:7]
      node _perfCnts_86_T = and(wdata, perfCntsLoMapping_86_2_2) @[build/NutShell.fir.opt.mlir 20635:27]
      node _perfCnts_86_T_1 = not(perfCntsLoMapping_86_2_2) @[build/NutShell.fir.opt.mlir 20637:29]
      node _perfCnts_86_T_2 = and(perfCnts_86, _perfCnts_86_T_1) @[build/NutShell.fir.opt.mlir 20639:29]
      node _perfCnts_86_T_3 = or(_perfCnts_86_T, _perfCnts_86_T_2) @[build/NutShell.fir.opt.mlir 20641:29]
      connect perfCnts_86, _perfCnts_86_T_3 @[build/NutShell.fir.opt.mlir 20642:9]
    node _T_278 = eq(addr, UInt<10>(832)) @[build/NutShell.fir.opt.mlir 20645:17]
    node _T_279 = and(_T_1, _T_278) @[build/NutShell.fir.opt.mlir 20647:17]
    when _T_279 : @[build/NutShell.fir.opt.mlir 20648:7]
      node _mscratch_T = and(wdata, mapping_143_2_2) @[build/NutShell.fir.opt.mlir 20650:24]
      node _mscratch_T_1 = not(mapping_143_2_2) @[build/NutShell.fir.opt.mlir 20652:26]
      node _mscratch_T_2 = and(mscratch, _mscratch_T_1) @[build/NutShell.fir.opt.mlir 20654:26]
      node _mscratch_T_3 = or(_mscratch_T, _mscratch_T_2) @[build/NutShell.fir.opt.mlir 20656:26]
      connect mscratch, _mscratch_T_3 @[build/NutShell.fir.opt.mlir 20657:9]
    node _T_280 = eq(addr, UInt<12>(2917)) @[build/NutShell.fir.opt.mlir 20660:17]
    node _T_281 = and(_T_1, _T_280) @[build/NutShell.fir.opt.mlir 20662:17]
    when _T_281 : @[build/NutShell.fir.opt.mlir 20663:7]
      node _perfCnts_101_T = and(wdata, perfCntsLoMapping_101_2_2) @[build/NutShell.fir.opt.mlir 20665:28]
      node _perfCnts_101_T_1 = not(perfCntsLoMapping_101_2_2) @[build/NutShell.fir.opt.mlir 20667:30]
      node _perfCnts_101_T_2 = and(perfCnts_101, _perfCnts_101_T_1) @[build/NutShell.fir.opt.mlir 20669:30]
      node _perfCnts_101_T_3 = or(_perfCnts_101_T, _perfCnts_101_T_2) @[build/NutShell.fir.opt.mlir 20671:30]
      connect perfCnts_101, _perfCnts_101_T_3 @[build/NutShell.fir.opt.mlir 20672:9]
    node _T_282 = eq(addr, UInt<12>(2930)) @[build/NutShell.fir.opt.mlir 20675:17]
    node _T_283 = and(_T_1, _T_282) @[build/NutShell.fir.opt.mlir 20677:17]
    when _T_283 : @[build/NutShell.fir.opt.mlir 20678:7]
      node _perfCnts_114_T = and(wdata, perfCntsLoMapping_114_2_2) @[build/NutShell.fir.opt.mlir 20680:28]
      node _perfCnts_114_T_1 = not(perfCntsLoMapping_114_2_2) @[build/NutShell.fir.opt.mlir 20682:30]
      node _perfCnts_114_T_2 = and(perfCnts_114, _perfCnts_114_T_1) @[build/NutShell.fir.opt.mlir 20684:30]
      node _perfCnts_114_T_3 = or(_perfCnts_114_T, _perfCnts_114_T_2) @[build/NutShell.fir.opt.mlir 20686:30]
      connect perfCnts_114, _perfCnts_114_T_3 @[build/NutShell.fir.opt.mlir 20687:9]
    node _T_284 = eq(addr, UInt<10>(833)) @[build/NutShell.fir.opt.mlir 20690:17]
    node _T_285 = and(_T_1, _T_284) @[build/NutShell.fir.opt.mlir 20692:17]
    when _T_285 : @[build/NutShell.fir.opt.mlir 20693:7]
      node _mepc_T = and(wdata, mapping_147_2_2) @[build/NutShell.fir.opt.mlir 20695:20]
      node _mepc_T_1 = not(mapping_147_2_2) @[build/NutShell.fir.opt.mlir 20697:22]
      node _mepc_T_2 = and(mepc, _mepc_T_1) @[build/NutShell.fir.opt.mlir 20699:22]
      node _mepc_T_3 = or(_mepc_T, _mepc_T_2) @[build/NutShell.fir.opt.mlir 20701:22]
      connect mepc, _mepc_T_3 @[build/NutShell.fir.opt.mlir 20702:9]
    node _T_286 = eq(addr, UInt<10>(835)) @[build/NutShell.fir.opt.mlir 20705:17]
    node _T_287 = and(_T_1, _T_286) @[build/NutShell.fir.opt.mlir 20707:17]
    when _T_287 : @[build/NutShell.fir.opt.mlir 20708:7]
      node _mtval_T = and(wdata, mapping_148_2_2) @[build/NutShell.fir.opt.mlir 20710:21]
      node _mtval_T_1 = not(mapping_148_2_2) @[build/NutShell.fir.opt.mlir 20712:23]
      node _mtval_T_2 = and(mtval, _mtval_T_1) @[build/NutShell.fir.opt.mlir 20714:23]
      node _mtval_T_3 = or(_mtval_T, _mtval_T_2) @[build/NutShell.fir.opt.mlir 20716:23]
      connect mtval, _mtval_T_3 @[build/NutShell.fir.opt.mlir 20717:9]
    node _T_288 = eq(addr, UInt<9>(262)) @[build/NutShell.fir.opt.mlir 20720:17]
    node _T_289 = and(_T_1, _T_288) @[build/NutShell.fir.opt.mlir 20722:17]
    when _T_289 : @[build/NutShell.fir.opt.mlir 20723:7]
      node _scounteren_T = and(wdata, mapping_149_2_2) @[build/NutShell.fir.opt.mlir 20725:26]
      node _scounteren_T_1 = not(mapping_149_2_2) @[build/NutShell.fir.opt.mlir 20727:28]
      node _scounteren_T_2 = and(scounteren, _scounteren_T_1) @[build/NutShell.fir.opt.mlir 20729:28]
      node _scounteren_T_3 = or(_scounteren_T, _scounteren_T_2) @[build/NutShell.fir.opt.mlir 20731:28]
      connect scounteren, _scounteren_T_3 @[build/NutShell.fir.opt.mlir 20732:9]
    node _T_290 = eq(addr, UInt<12>(2913)) @[build/NutShell.fir.opt.mlir 20735:17]
    node _T_291 = and(_T_1, _T_290) @[build/NutShell.fir.opt.mlir 20737:17]
    when _T_291 : @[build/NutShell.fir.opt.mlir 20738:7]
      node _perfCnts_97_T = and(wdata, perfCntsLoMapping_97_2_2) @[build/NutShell.fir.opt.mlir 20740:27]
      node _perfCnts_97_T_1 = not(perfCntsLoMapping_97_2_2) @[build/NutShell.fir.opt.mlir 20742:29]
      node _perfCnts_97_T_2 = and(perfCnts_97, _perfCnts_97_T_1) @[build/NutShell.fir.opt.mlir 20744:29]
      node _perfCnts_97_T_3 = or(_perfCnts_97_T, _perfCnts_97_T_2) @[build/NutShell.fir.opt.mlir 20746:29]
      connect perfCnts_97, _perfCnts_97_T_3 @[build/NutShell.fir.opt.mlir 20747:9]
    node _T_292 = eq(addr, UInt<10>(928)) @[build/NutShell.fir.opt.mlir 20750:17]
    node _T_293 = and(_T_1, _T_292) @[build/NutShell.fir.opt.mlir 20752:17]
    when _T_293 : @[build/NutShell.fir.opt.mlir 20753:7]
      node _pmpcfg0_T = and(wdata, mapping_151_2_2) @[build/NutShell.fir.opt.mlir 20755:23]
      node _pmpcfg0_T_1 = not(mapping_151_2_2) @[build/NutShell.fir.opt.mlir 20757:25]
      node _pmpcfg0_T_2 = and(pmpcfg0, _pmpcfg0_T_1) @[build/NutShell.fir.opt.mlir 20759:25]
      node _pmpcfg0_T_3 = or(_pmpcfg0_T, _pmpcfg0_T_2) @[build/NutShell.fir.opt.mlir 20761:25]
      connect pmpcfg0, _pmpcfg0_T_3 @[build/NutShell.fir.opt.mlir 20762:9]
    node _T_294 = eq(addr, UInt<12>(2847)) @[build/NutShell.fir.opt.mlir 20765:17]
    node _T_295 = and(_T_1, _T_294) @[build/NutShell.fir.opt.mlir 20767:17]
    when _T_295 : @[build/NutShell.fir.opt.mlir 20768:7]
      node _perfCnts_31_T = and(wdata, perfCntsLoMapping_31_2_2) @[build/NutShell.fir.opt.mlir 20770:27]
      node _perfCnts_31_T_1 = not(perfCntsLoMapping_31_2_2) @[build/NutShell.fir.opt.mlir 20772:29]
      node _perfCnts_31_T_2 = and(perfCnts_31, _perfCnts_31_T_1) @[build/NutShell.fir.opt.mlir 20774:29]
      node _perfCnts_31_T_3 = or(_perfCnts_31_T, _perfCnts_31_T_2) @[build/NutShell.fir.opt.mlir 20776:29]
      connect perfCnts_31, _perfCnts_31_T_3 @[build/NutShell.fir.opt.mlir 20777:9]
    node _T_296 = eq(addr, UInt<12>(2898)) @[build/NutShell.fir.opt.mlir 20780:17]
    node _T_297 = and(_T_1, _T_296) @[build/NutShell.fir.opt.mlir 20782:17]
    when _T_297 : @[build/NutShell.fir.opt.mlir 20783:7]
      node _perfCnts_82_T = and(wdata, perfCntsLoMapping_82_2_2) @[build/NutShell.fir.opt.mlir 20785:27]
      node _perfCnts_82_T_1 = not(perfCntsLoMapping_82_2_2) @[build/NutShell.fir.opt.mlir 20787:29]
      node _perfCnts_82_T_2 = and(perfCnts_82, _perfCnts_82_T_1) @[build/NutShell.fir.opt.mlir 20789:29]
      node _perfCnts_82_T_3 = or(_perfCnts_82_T, _perfCnts_82_T_2) @[build/NutShell.fir.opt.mlir 20791:29]
      connect perfCnts_82, _perfCnts_82_T_3 @[build/NutShell.fir.opt.mlir 20792:9]
    node _T_298 = eq(addr, UInt<12>(2864)) @[build/NutShell.fir.opt.mlir 20795:17]
    node _T_299 = and(_T_1, _T_298) @[build/NutShell.fir.opt.mlir 20797:17]
    when _T_299 : @[build/NutShell.fir.opt.mlir 20798:7]
      node _perfCnts_48_T = and(wdata, perfCntsLoMapping_48_2_2) @[build/NutShell.fir.opt.mlir 20800:27]
      node _perfCnts_48_T_1 = not(perfCntsLoMapping_48_2_2) @[build/NutShell.fir.opt.mlir 20802:29]
      node _perfCnts_48_T_2 = and(perfCnts_48, _perfCnts_48_T_1) @[build/NutShell.fir.opt.mlir 20804:29]
      node _perfCnts_48_T_3 = or(_perfCnts_48_T, _perfCnts_48_T_2) @[build/NutShell.fir.opt.mlir 20806:29]
      connect perfCnts_48, _perfCnts_48_T_3 @[build/NutShell.fir.opt.mlir 20807:9]
    node _T_300 = eq(addr, UInt<9>(322)) @[build/NutShell.fir.opt.mlir 20810:17]
    node _T_301 = and(_T_1, _T_300) @[build/NutShell.fir.opt.mlir 20812:17]
    when _T_301 : @[build/NutShell.fir.opt.mlir 20813:7]
      node _scause_T = and(wdata, mapping_155_2_2) @[build/NutShell.fir.opt.mlir 20815:22]
      node _scause_T_1 = not(mapping_155_2_2) @[build/NutShell.fir.opt.mlir 20817:24]
      node _scause_T_2 = and(scause, _scause_T_1) @[build/NutShell.fir.opt.mlir 20819:24]
      node _scause_T_3 = or(_scause_T, _scause_T_2) @[build/NutShell.fir.opt.mlir 20821:24]
      connect scause, _scause_T_3 @[build/NutShell.fir.opt.mlir 20822:9]
    node _T_302 = eq(addr, UInt<12>(2879)) @[build/NutShell.fir.opt.mlir 20825:17]
    node _T_303 = and(_T_1, _T_302) @[build/NutShell.fir.opt.mlir 20827:17]
    when _T_303 : @[build/NutShell.fir.opt.mlir 20828:7]
      node _perfCnts_63_T = and(wdata, perfCntsLoMapping_63_2_2) @[build/NutShell.fir.opt.mlir 20830:27]
      node _perfCnts_63_T_1 = not(perfCntsLoMapping_63_2_2) @[build/NutShell.fir.opt.mlir 20832:29]
      node _perfCnts_63_T_2 = and(perfCnts_63, _perfCnts_63_T_1) @[build/NutShell.fir.opt.mlir 20834:29]
      node _perfCnts_63_T_3 = or(_perfCnts_63_T, _perfCnts_63_T_2) @[build/NutShell.fir.opt.mlir 20836:29]
      connect perfCnts_63, _perfCnts_63_T_3 @[build/NutShell.fir.opt.mlir 20837:9]
    node _T_304 = eq(addr, UInt<12>(2881)) @[build/NutShell.fir.opt.mlir 20840:17]
    node _T_305 = and(_T_1, _T_304) @[build/NutShell.fir.opt.mlir 20842:17]
    when _T_305 : @[build/NutShell.fir.opt.mlir 20843:7]
      node _perfCnts_65_T = and(wdata, perfCntsLoMapping_65_2_2) @[build/NutShell.fir.opt.mlir 20845:27]
      node _perfCnts_65_T_1 = not(perfCntsLoMapping_65_2_2) @[build/NutShell.fir.opt.mlir 20847:29]
      node _perfCnts_65_T_2 = and(perfCnts_65, _perfCnts_65_T_1) @[build/NutShell.fir.opt.mlir 20849:29]
      node _perfCnts_65_T_3 = or(_perfCnts_65_T, _perfCnts_65_T_2) @[build/NutShell.fir.opt.mlir 20851:29]
      connect perfCnts_65, _perfCnts_65_T_3 @[build/NutShell.fir.opt.mlir 20852:9]
    node _T_306 = eq(addr, UInt<12>(2887)) @[build/NutShell.fir.opt.mlir 20855:17]
    node _T_307 = and(_T_1, _T_306) @[build/NutShell.fir.opt.mlir 20857:17]
    when _T_307 : @[build/NutShell.fir.opt.mlir 20858:7]
      node _perfCnts_71_T = and(wdata, perfCntsLoMapping_71_2_2) @[build/NutShell.fir.opt.mlir 20860:27]
      node _perfCnts_71_T_1 = not(perfCntsLoMapping_71_2_2) @[build/NutShell.fir.opt.mlir 20862:29]
      node _perfCnts_71_T_2 = and(perfCnts_71, _perfCnts_71_T_1) @[build/NutShell.fir.opt.mlir 20864:29]
      node _perfCnts_71_T_3 = or(_perfCnts_71_T, _perfCnts_71_T_2) @[build/NutShell.fir.opt.mlir 20866:29]
      connect perfCnts_71, _perfCnts_71_T_3 @[build/NutShell.fir.opt.mlir 20867:9]
    node _T_308 = eq(addr, UInt<12>(2834)) @[build/NutShell.fir.opt.mlir 20870:17]
    node _T_309 = and(_T_1, _T_308) @[build/NutShell.fir.opt.mlir 20872:17]
    when _T_309 : @[build/NutShell.fir.opt.mlir 20873:7]
      node _perfCnts_18_T = and(wdata, perfCntsLoMapping_18_2_2) @[build/NutShell.fir.opt.mlir 20875:27]
      node _perfCnts_18_T_1 = not(perfCntsLoMapping_18_2_2) @[build/NutShell.fir.opt.mlir 20877:29]
      node _perfCnts_18_T_2 = and(perfCnts_18, _perfCnts_18_T_1) @[build/NutShell.fir.opt.mlir 20879:29]
      node _perfCnts_18_T_3 = or(_perfCnts_18_T, _perfCnts_18_T_2) @[build/NutShell.fir.opt.mlir 20881:29]
      connect perfCnts_18, _perfCnts_18_T_3 @[build/NutShell.fir.opt.mlir 20882:9]
    node _T_310 = eq(addr, UInt<12>(2866)) @[build/NutShell.fir.opt.mlir 20885:17]
    node _T_311 = and(_T_1, _T_310) @[build/NutShell.fir.opt.mlir 20887:17]
    when _T_311 : @[build/NutShell.fir.opt.mlir 20888:7]
      node _perfCnts_50_T = and(wdata, perfCntsLoMapping_50_2_2) @[build/NutShell.fir.opt.mlir 20890:27]
      node _perfCnts_50_T_1 = not(perfCntsLoMapping_50_2_2) @[build/NutShell.fir.opt.mlir 20892:29]
      node _perfCnts_50_T_2 = and(perfCnts_50, _perfCnts_50_T_1) @[build/NutShell.fir.opt.mlir 20894:29]
      node _perfCnts_50_T_3 = or(_perfCnts_50_T, _perfCnts_50_T_2) @[build/NutShell.fir.opt.mlir 20896:29]
      connect perfCnts_50, _perfCnts_50_T_3 @[build/NutShell.fir.opt.mlir 20897:9]
    node _T_312 = eq(addr, UInt<12>(2832)) @[build/NutShell.fir.opt.mlir 20900:17]
    node _T_313 = and(_T_1, _T_312) @[build/NutShell.fir.opt.mlir 20902:17]
    when _T_313 : @[build/NutShell.fir.opt.mlir 20903:7]
      node _perfCnts_16_T = and(wdata, perfCntsLoMapping_16_2_2) @[build/NutShell.fir.opt.mlir 20905:27]
      node _perfCnts_16_T_1 = not(perfCntsLoMapping_16_2_2) @[build/NutShell.fir.opt.mlir 20907:29]
      node _perfCnts_16_T_2 = and(perfCnts_16, _perfCnts_16_T_1) @[build/NutShell.fir.opt.mlir 20909:29]
      node _perfCnts_16_T_3 = or(_perfCnts_16_T, _perfCnts_16_T_2) @[build/NutShell.fir.opt.mlir 20911:29]
      connect perfCnts_16, _perfCnts_16_T_3 @[build/NutShell.fir.opt.mlir 20912:9]
    wire isIllegalAddr : UInt<1> @[build/NutShell.fir.opt.mlir 20914:24]
    node _isIllegalAddr_illegalAddr_T = eq(UInt<12>(2822), addr) @[build/NutShell.fir.opt.mlir 20916:39]
    node _isIllegalAddr_illegalAddr_T_1 = mux(_isIllegalAddr_illegalAddr_T, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 20918:41]
    node _isIllegalAddr_illegalAddr_T_2 = eq(UInt<12>(2889), addr) @[build/NutShell.fir.opt.mlir 20920:41]
    node _isIllegalAddr_illegalAddr_T_3 = mux(_isIllegalAddr_illegalAddr_T_2, UInt<1>(0), _isIllegalAddr_illegalAddr_T_1) @[build/NutShell.fir.opt.mlir 20922:41]
    node _isIllegalAddr_illegalAddr_T_4 = eq(UInt<12>(2876), addr) @[build/NutShell.fir.opt.mlir 20924:41]
    node _isIllegalAddr_illegalAddr_T_5 = mux(_isIllegalAddr_illegalAddr_T_4, UInt<1>(0), _isIllegalAddr_illegalAddr_T_3) @[build/NutShell.fir.opt.mlir 20926:41]
    node _isIllegalAddr_illegalAddr_T_6 = eq(UInt<12>(2921), addr) @[build/NutShell.fir.opt.mlir 20928:41]
    node _isIllegalAddr_illegalAddr_T_7 = mux(_isIllegalAddr_illegalAddr_T_6, UInt<1>(0), _isIllegalAddr_illegalAddr_T_5) @[build/NutShell.fir.opt.mlir 20930:41]
    node _isIllegalAddr_illegalAddr_T_8 = eq(UInt<12>(2940), addr) @[build/NutShell.fir.opt.mlir 20932:41]
    node _isIllegalAddr_illegalAddr_T_9 = mux(_isIllegalAddr_illegalAddr_T_8, UInt<1>(0), _isIllegalAddr_illegalAddr_T_7) @[build/NutShell.fir.opt.mlir 20934:41]
    node _isIllegalAddr_illegalAddr_T_10 = eq(UInt<12>(3858), addr) @[build/NutShell.fir.opt.mlir 20936:42]
    node _isIllegalAddr_illegalAddr_T_11 = mux(_isIllegalAddr_illegalAddr_T_10, UInt<1>(0), _isIllegalAddr_illegalAddr_T_9) @[build/NutShell.fir.opt.mlir 20938:42]
    node _isIllegalAddr_illegalAddr_T_12 = eq(UInt<12>(2908), addr) @[build/NutShell.fir.opt.mlir 20940:42]
    node _isIllegalAddr_illegalAddr_T_13 = mux(_isIllegalAddr_illegalAddr_T_12, UInt<1>(0), _isIllegalAddr_illegalAddr_T_11) @[build/NutShell.fir.opt.mlir 20942:42]
    node _isIllegalAddr_illegalAddr_T_14 = eq(UInt<12>(2837), addr) @[build/NutShell.fir.opt.mlir 20944:42]
    node _isIllegalAddr_illegalAddr_T_15 = mux(_isIllegalAddr_illegalAddr_T_14, UInt<1>(0), _isIllegalAddr_illegalAddr_T_13) @[build/NutShell.fir.opt.mlir 20946:42]
    node _isIllegalAddr_illegalAddr_T_16 = eq(UInt<12>(2854), addr) @[build/NutShell.fir.opt.mlir 20948:42]
    node _isIllegalAddr_illegalAddr_T_17 = mux(_isIllegalAddr_illegalAddr_T_16, UInt<1>(0), _isIllegalAddr_illegalAddr_T_15) @[build/NutShell.fir.opt.mlir 20950:42]
    node _isIllegalAddr_illegalAddr_T_18 = eq(UInt<9>(384), addr) @[build/NutShell.fir.opt.mlir 20952:42]
    node _isIllegalAddr_illegalAddr_T_19 = mux(_isIllegalAddr_illegalAddr_T_18, UInt<1>(0), _isIllegalAddr_illegalAddr_T_17) @[build/NutShell.fir.opt.mlir 20954:42]
    node _isIllegalAddr_illegalAddr_T_20 = eq(UInt<12>(2918), addr) @[build/NutShell.fir.opt.mlir 20956:42]
    node _isIllegalAddr_illegalAddr_T_21 = mux(_isIllegalAddr_illegalAddr_T_20, UInt<1>(0), _isIllegalAddr_illegalAddr_T_19) @[build/NutShell.fir.opt.mlir 20958:42]
    node _isIllegalAddr_illegalAddr_T_22 = eq(UInt<12>(2933), addr) @[build/NutShell.fir.opt.mlir 20960:42]
    node _isIllegalAddr_illegalAddr_T_23 = mux(_isIllegalAddr_illegalAddr_T_22, UInt<1>(0), _isIllegalAddr_illegalAddr_T_21) @[build/NutShell.fir.opt.mlir 20962:42]
    node _isIllegalAddr_illegalAddr_T_24 = eq(UInt<12>(2844), addr) @[build/NutShell.fir.opt.mlir 20964:42]
    node _isIllegalAddr_illegalAddr_T_25 = mux(_isIllegalAddr_illegalAddr_T_24, UInt<1>(0), _isIllegalAddr_illegalAddr_T_23) @[build/NutShell.fir.opt.mlir 20966:42]
    node _isIllegalAddr_illegalAddr_T_26 = eq(UInt<10>(930), addr) @[build/NutShell.fir.opt.mlir 20968:42]
    node _isIllegalAddr_illegalAddr_T_27 = mux(_isIllegalAddr_illegalAddr_T_26, UInt<1>(0), _isIllegalAddr_illegalAddr_T_25) @[build/NutShell.fir.opt.mlir 20970:42]
    node _isIllegalAddr_illegalAddr_T_28 = eq(UInt<12>(2901), addr) @[build/NutShell.fir.opt.mlir 20972:42]
    node _isIllegalAddr_illegalAddr_T_29 = mux(_isIllegalAddr_illegalAddr_T_28, UInt<1>(0), _isIllegalAddr_illegalAddr_T_27) @[build/NutShell.fir.opt.mlir 20974:42]
    node _isIllegalAddr_illegalAddr_T_30 = eq(UInt<10>(945), addr) @[build/NutShell.fir.opt.mlir 20976:42]
    node _isIllegalAddr_illegalAddr_T_31 = mux(_isIllegalAddr_illegalAddr_T_30, UInt<1>(0), _isIllegalAddr_illegalAddr_T_29) @[build/NutShell.fir.opt.mlir 20978:42]
    node _isIllegalAddr_illegalAddr_T_32 = eq(UInt<12>(2886), addr) @[build/NutShell.fir.opt.mlir 20980:42]
    node _isIllegalAddr_illegalAddr_T_33 = mux(_isIllegalAddr_illegalAddr_T_32, UInt<1>(0), _isIllegalAddr_illegalAddr_T_31) @[build/NutShell.fir.opt.mlir 20982:42]
    node _isIllegalAddr_illegalAddr_T_34 = eq(UInt<9>(320), addr) @[build/NutShell.fir.opt.mlir 20984:42]
    node _isIllegalAddr_illegalAddr_T_35 = mux(_isIllegalAddr_illegalAddr_T_34, UInt<1>(0), _isIllegalAddr_illegalAddr_T_33) @[build/NutShell.fir.opt.mlir 20986:42]
    node _isIllegalAddr_illegalAddr_T_36 = eq(UInt<12>(2825), addr) @[build/NutShell.fir.opt.mlir 20988:42]
    node _isIllegalAddr_illegalAddr_T_37 = mux(_isIllegalAddr_illegalAddr_T_36, UInt<1>(0), _isIllegalAddr_illegalAddr_T_35) @[build/NutShell.fir.opt.mlir 20990:42]
    node _isIllegalAddr_illegalAddr_T_38 = eq(UInt<12>(2819), addr) @[build/NutShell.fir.opt.mlir 20992:42]
    node _isIllegalAddr_illegalAddr_T_39 = mux(_isIllegalAddr_illegalAddr_T_38, UInt<1>(0), _isIllegalAddr_illegalAddr_T_37) @[build/NutShell.fir.opt.mlir 20994:42]
    node _isIllegalAddr_illegalAddr_T_40 = eq(UInt<12>(2869), addr) @[build/NutShell.fir.opt.mlir 20996:42]
    node _isIllegalAddr_illegalAddr_T_41 = mux(_isIllegalAddr_illegalAddr_T_40, UInt<1>(0), _isIllegalAddr_illegalAddr_T_39) @[build/NutShell.fir.opt.mlir 20998:42]
    node _isIllegalAddr_illegalAddr_T_42 = eq(UInt<12>(2916), addr) @[build/NutShell.fir.opt.mlir 21000:42]
    node _isIllegalAddr_illegalAddr_T_43 = mux(_isIllegalAddr_illegalAddr_T_42, UInt<1>(0), _isIllegalAddr_illegalAddr_T_41) @[build/NutShell.fir.opt.mlir 21002:42]
    node _isIllegalAddr_illegalAddr_T_44 = eq(UInt<12>(2897), addr) @[build/NutShell.fir.opt.mlir 21004:42]
    node _isIllegalAddr_illegalAddr_T_45 = mux(_isIllegalAddr_illegalAddr_T_44, UInt<1>(0), _isIllegalAddr_illegalAddr_T_43) @[build/NutShell.fir.opt.mlir 21006:42]
    node _isIllegalAddr_illegalAddr_T_46 = eq(UInt<12>(2857), addr) @[build/NutShell.fir.opt.mlir 21008:42]
    node _isIllegalAddr_illegalAddr_T_47 = mux(_isIllegalAddr_illegalAddr_T_46, UInt<1>(0), _isIllegalAddr_illegalAddr_T_45) @[build/NutShell.fir.opt.mlir 21010:42]
    node _isIllegalAddr_illegalAddr_T_48 = eq(UInt<10>(770), addr) @[build/NutShell.fir.opt.mlir 21012:42]
    node _isIllegalAddr_illegalAddr_T_49 = mux(_isIllegalAddr_illegalAddr_T_48, UInt<1>(0), _isIllegalAddr_illegalAddr_T_47) @[build/NutShell.fir.opt.mlir 21014:42]
    node _isIllegalAddr_illegalAddr_T_50 = eq(UInt<12>(2929), addr) @[build/NutShell.fir.opt.mlir 21016:42]
    node _isIllegalAddr_illegalAddr_T_51 = mux(_isIllegalAddr_illegalAddr_T_50, UInt<1>(0), _isIllegalAddr_illegalAddr_T_49) @[build/NutShell.fir.opt.mlir 21018:42]
    node _isIllegalAddr_illegalAddr_T_52 = eq(UInt<12>(2852), addr) @[build/NutShell.fir.opt.mlir 21020:42]
    node _isIllegalAddr_illegalAddr_T_53 = mux(_isIllegalAddr_illegalAddr_T_52, UInt<1>(0), _isIllegalAddr_illegalAddr_T_51) @[build/NutShell.fir.opt.mlir 21022:42]
    node _isIllegalAddr_illegalAddr_T_54 = eq(UInt<9>(261), addr) @[build/NutShell.fir.opt.mlir 21024:42]
    node _isIllegalAddr_illegalAddr_T_55 = mux(_isIllegalAddr_illegalAddr_T_54, UInt<1>(0), _isIllegalAddr_illegalAddr_T_53) @[build/NutShell.fir.opt.mlir 21026:42]
    node _isIllegalAddr_illegalAddr_T_56 = eq(UInt<12>(2829), addr) @[build/NutShell.fir.opt.mlir 21028:42]
    node _isIllegalAddr_illegalAddr_T_57 = mux(_isIllegalAddr_illegalAddr_T_56, UInt<1>(0), _isIllegalAddr_illegalAddr_T_55) @[build/NutShell.fir.opt.mlir 21030:42]
    node _isIllegalAddr_illegalAddr_T_58 = eq(UInt<12>(2925), addr) @[build/NutShell.fir.opt.mlir 21032:42]
    node _isIllegalAddr_illegalAddr_T_59 = mux(_isIllegalAddr_illegalAddr_T_58, UInt<1>(0), _isIllegalAddr_illegalAddr_T_57) @[build/NutShell.fir.opt.mlir 21034:42]
    node _isIllegalAddr_illegalAddr_T_60 = eq(UInt<12>(2893), addr) @[build/NutShell.fir.opt.mlir 21036:42]
    node _isIllegalAddr_illegalAddr_T_61 = mux(_isIllegalAddr_illegalAddr_T_60, UInt<1>(0), _isIllegalAddr_illegalAddr_T_59) @[build/NutShell.fir.opt.mlir 21038:42]
    node _isIllegalAddr_illegalAddr_T_62 = eq(UInt<9>(321), addr) @[build/NutShell.fir.opt.mlir 21040:42]
    node _isIllegalAddr_illegalAddr_T_63 = mux(_isIllegalAddr_illegalAddr_T_62, UInt<1>(0), _isIllegalAddr_illegalAddr_T_61) @[build/NutShell.fir.opt.mlir 21042:42]
    node _isIllegalAddr_illegalAddr_T_64 = eq(UInt<12>(2880), addr) @[build/NutShell.fir.opt.mlir 21044:42]
    node _isIllegalAddr_illegalAddr_T_65 = mux(_isIllegalAddr_illegalAddr_T_64, UInt<1>(0), _isIllegalAddr_illegalAddr_T_63) @[build/NutShell.fir.opt.mlir 21046:42]
    node _isIllegalAddr_illegalAddr_T_66 = eq(UInt<10>(834), addr) @[build/NutShell.fir.opt.mlir 21048:42]
    node _isIllegalAddr_illegalAddr_T_67 = mux(_isIllegalAddr_illegalAddr_T_66, UInt<1>(0), _isIllegalAddr_illegalAddr_T_65) @[build/NutShell.fir.opt.mlir 21050:42]
    node _isIllegalAddr_illegalAddr_T_68 = eq(UInt<12>(2833), addr) @[build/NutShell.fir.opt.mlir 21052:42]
    node _isIllegalAddr_illegalAddr_T_69 = mux(_isIllegalAddr_illegalAddr_T_68, UInt<1>(0), _isIllegalAddr_illegalAddr_T_67) @[build/NutShell.fir.opt.mlir 21054:42]
    node _isIllegalAddr_illegalAddr_T_70 = eq(UInt<12>(2861), addr) @[build/NutShell.fir.opt.mlir 21056:42]
    node _isIllegalAddr_illegalAddr_T_71 = mux(_isIllegalAddr_illegalAddr_T_70, UInt<1>(0), _isIllegalAddr_illegalAddr_T_69) @[build/NutShell.fir.opt.mlir 21058:42]
    node _isIllegalAddr_illegalAddr_T_72 = eq(UInt<10>(774), addr) @[build/NutShell.fir.opt.mlir 21060:42]
    node _isIllegalAddr_illegalAddr_T_73 = mux(_isIllegalAddr_illegalAddr_T_72, UInt<1>(0), _isIllegalAddr_illegalAddr_T_71) @[build/NutShell.fir.opt.mlir 21062:42]
    node _isIllegalAddr_illegalAddr_T_74 = eq(UInt<12>(2884), addr) @[build/NutShell.fir.opt.mlir 21064:42]
    node _isIllegalAddr_illegalAddr_T_75 = mux(_isIllegalAddr_illegalAddr_T_74, UInt<1>(0), _isIllegalAddr_illegalAddr_T_73) @[build/NutShell.fir.opt.mlir 21066:42]
    node _isIllegalAddr_illegalAddr_T_76 = eq(UInt<12>(2922), addr) @[build/NutShell.fir.opt.mlir 21068:42]
    node _isIllegalAddr_illegalAddr_T_77 = mux(_isIllegalAddr_illegalAddr_T_76, UInt<1>(0), _isIllegalAddr_illegalAddr_T_75) @[build/NutShell.fir.opt.mlir 21070:42]
    node _isIllegalAddr_illegalAddr_T_78 = eq(UInt<12>(3857), addr) @[build/NutShell.fir.opt.mlir 21072:42]
    node _isIllegalAddr_illegalAddr_T_79 = mux(_isIllegalAddr_illegalAddr_T_78, UInt<1>(0), _isIllegalAddr_illegalAddr_T_77) @[build/NutShell.fir.opt.mlir 21074:42]
    node _isIllegalAddr_illegalAddr_T_80 = eq(UInt<12>(2910), addr) @[build/NutShell.fir.opt.mlir 21076:42]
    node _isIllegalAddr_illegalAddr_T_81 = mux(_isIllegalAddr_illegalAddr_T_80, UInt<1>(0), _isIllegalAddr_illegalAddr_T_79) @[build/NutShell.fir.opt.mlir 21078:42]
    node _isIllegalAddr_illegalAddr_T_82 = eq(UInt<12>(2905), addr) @[build/NutShell.fir.opt.mlir 21080:42]
    node _isIllegalAddr_illegalAddr_T_83 = mux(_isIllegalAddr_illegalAddr_T_82, UInt<1>(0), _isIllegalAddr_illegalAddr_T_81) @[build/NutShell.fir.opt.mlir 21082:42]
    node _isIllegalAddr_illegalAddr_T_84 = eq(UInt<9>(260), addr) @[build/NutShell.fir.opt.mlir 21084:42]
    node _isIllegalAddr_illegalAddr_T_85 = mux(_isIllegalAddr_illegalAddr_T_84, UInt<1>(0), _isIllegalAddr_illegalAddr_T_83) @[build/NutShell.fir.opt.mlir 21086:42]
    node _isIllegalAddr_illegalAddr_T_86 = eq(UInt<12>(2937), addr) @[build/NutShell.fir.opt.mlir 21088:42]
    node _isIllegalAddr_illegalAddr_T_87 = mux(_isIllegalAddr_illegalAddr_T_86, UInt<1>(0), _isIllegalAddr_illegalAddr_T_85) @[build/NutShell.fir.opt.mlir 21090:42]
    node _isIllegalAddr_illegalAddr_T_88 = eq(UInt<12>(2890), addr) @[build/NutShell.fir.opt.mlir 21092:42]
    node _isIllegalAddr_illegalAddr_T_89 = mux(_isIllegalAddr_illegalAddr_T_88, UInt<1>(0), _isIllegalAddr_illegalAddr_T_87) @[build/NutShell.fir.opt.mlir 21094:42]
    node _isIllegalAddr_illegalAddr_T_90 = eq(UInt<12>(2873), addr) @[build/NutShell.fir.opt.mlir 21096:42]
    node _isIllegalAddr_illegalAddr_T_91 = mux(_isIllegalAddr_illegalAddr_T_90, UInt<1>(0), _isIllegalAddr_illegalAddr_T_89) @[build/NutShell.fir.opt.mlir 21098:42]
    node _isIllegalAddr_illegalAddr_T_92 = eq(UInt<12>(2872), addr) @[build/NutShell.fir.opt.mlir 21100:42]
    node _isIllegalAddr_illegalAddr_T_93 = mux(_isIllegalAddr_illegalAddr_T_92, UInt<1>(0), _isIllegalAddr_illegalAddr_T_91) @[build/NutShell.fir.opt.mlir 21102:42]
    node _isIllegalAddr_illegalAddr_T_94 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 21104:42]
    node _isIllegalAddr_illegalAddr_T_95 = mux(_isIllegalAddr_illegalAddr_T_94, UInt<1>(0), _isIllegalAddr_illegalAddr_T_93) @[build/NutShell.fir.opt.mlir 21106:42]
    node _isIllegalAddr_illegalAddr_T_96 = eq(UInt<12>(2826), addr) @[build/NutShell.fir.opt.mlir 21108:42]
    node _isIllegalAddr_illegalAddr_T_97 = mux(_isIllegalAddr_illegalAddr_T_96, UInt<1>(0), _isIllegalAddr_illegalAddr_T_95) @[build/NutShell.fir.opt.mlir 21110:42]
    node _isIllegalAddr_illegalAddr_T_98 = eq(UInt<12>(2820), addr) @[build/NutShell.fir.opt.mlir 21112:42]
    node _isIllegalAddr_illegalAddr_T_99 = mux(_isIllegalAddr_illegalAddr_T_98, UInt<1>(0), _isIllegalAddr_illegalAddr_T_97) @[build/NutShell.fir.opt.mlir 21114:42]
    node _isIllegalAddr_illegalAddr_T_100 = eq(UInt<12>(2840), addr) @[build/NutShell.fir.opt.mlir 21116:43]
    node _isIllegalAddr_illegalAddr_T_101 = mux(_isIllegalAddr_illegalAddr_T_100, UInt<1>(0), _isIllegalAddr_illegalAddr_T_99) @[build/NutShell.fir.opt.mlir 21118:43]
    node _isIllegalAddr_illegalAddr_T_102 = eq(UInt<12>(2895), addr) @[build/NutShell.fir.opt.mlir 21120:43]
    node _isIllegalAddr_illegalAddr_T_103 = mux(_isIllegalAddr_illegalAddr_T_102, UInt<1>(0), _isIllegalAddr_illegalAddr_T_101) @[build/NutShell.fir.opt.mlir 21122:43]
    node _isIllegalAddr_illegalAddr_T_104 = eq(UInt<12>(2841), addr) @[build/NutShell.fir.opt.mlir 21124:43]
    node _isIllegalAddr_illegalAddr_T_105 = mux(_isIllegalAddr_illegalAddr_T_104, UInt<1>(0), _isIllegalAddr_illegalAddr_T_103) @[build/NutShell.fir.opt.mlir 21126:43]
    node _isIllegalAddr_illegalAddr_T_106 = eq(UInt<12>(2858), addr) @[build/NutShell.fir.opt.mlir 21128:43]
    node _isIllegalAddr_illegalAddr_T_107 = mux(_isIllegalAddr_illegalAddr_T_106, UInt<1>(0), _isIllegalAddr_illegalAddr_T_105) @[build/NutShell.fir.opt.mlir 21130:43]
    node _isIllegalAddr_illegalAddr_T_108 = eq(UInt<9>(256), addr) @[build/NutShell.fir.opt.mlir 21132:43]
    node _isIllegalAddr_illegalAddr_T_109 = mux(_isIllegalAddr_illegalAddr_T_108, UInt<1>(0), _isIllegalAddr_illegalAddr_T_107) @[build/NutShell.fir.opt.mlir 21134:43]
    node _isIllegalAddr_illegalAddr_T_110 = eq(UInt<12>(2877), addr) @[build/NutShell.fir.opt.mlir 21136:43]
    node _isIllegalAddr_illegalAddr_T_111 = mux(_isIllegalAddr_illegalAddr_T_110, UInt<1>(0), _isIllegalAddr_illegalAddr_T_109) @[build/NutShell.fir.opt.mlir 21138:43]
    node _isIllegalAddr_illegalAddr_T_112 = eq(UInt<12>(2830), addr) @[build/NutShell.fir.opt.mlir 21140:43]
    node _isIllegalAddr_illegalAddr_T_113 = mux(_isIllegalAddr_illegalAddr_T_112, UInt<1>(0), _isIllegalAddr_illegalAddr_T_111) @[build/NutShell.fir.opt.mlir 21142:43]
    node _isIllegalAddr_illegalAddr_T_114 = eq(UInt<12>(2868), addr) @[build/NutShell.fir.opt.mlir 21144:43]
    node _isIllegalAddr_illegalAddr_T_115 = mux(_isIllegalAddr_illegalAddr_T_114, UInt<1>(0), _isIllegalAddr_illegalAddr_T_113) @[build/NutShell.fir.opt.mlir 21146:43]
    node _isIllegalAddr_illegalAddr_T_116 = eq(UInt<12>(2932), addr) @[build/NutShell.fir.opt.mlir 21148:43]
    node _isIllegalAddr_illegalAddr_T_117 = mux(_isIllegalAddr_illegalAddr_T_116, UInt<1>(0), _isIllegalAddr_illegalAddr_T_115) @[build/NutShell.fir.opt.mlir 21150:43]
    node _isIllegalAddr_illegalAddr_T_118 = eq(UInt<12>(2836), addr) @[build/NutShell.fir.opt.mlir 21152:43]
    node _isIllegalAddr_illegalAddr_T_119 = mux(_isIllegalAddr_illegalAddr_T_118, UInt<1>(0), _isIllegalAddr_illegalAddr_T_117) @[build/NutShell.fir.opt.mlir 21154:43]
    node _isIllegalAddr_illegalAddr_T_120 = eq(UInt<12>(2845), addr) @[build/NutShell.fir.opt.mlir 21156:43]
    node _isIllegalAddr_illegalAddr_T_121 = mux(_isIllegalAddr_illegalAddr_T_120, UInt<1>(0), _isIllegalAddr_illegalAddr_T_119) @[build/NutShell.fir.opt.mlir 21158:43]
    node _isIllegalAddr_illegalAddr_T_122 = eq(UInt<12>(2900), addr) @[build/NutShell.fir.opt.mlir 21160:43]
    node _isIllegalAddr_illegalAddr_T_123 = mux(_isIllegalAddr_illegalAddr_T_122, UInt<1>(0), _isIllegalAddr_illegalAddr_T_121) @[build/NutShell.fir.opt.mlir 21162:43]
    node _isIllegalAddr_illegalAddr_T_124 = eq(UInt<12>(2851), addr) @[build/NutShell.fir.opt.mlir 21164:43]
    node _isIllegalAddr_illegalAddr_T_125 = mux(_isIllegalAddr_illegalAddr_T_124, UInt<1>(0), _isIllegalAddr_illegalAddr_T_123) @[build/NutShell.fir.opt.mlir 21166:43]
    node _isIllegalAddr_illegalAddr_T_126 = eq(UInt<12>(2862), addr) @[build/NutShell.fir.opt.mlir 21168:43]
    node _isIllegalAddr_illegalAddr_T_127 = mux(_isIllegalAddr_illegalAddr_T_126, UInt<1>(0), _isIllegalAddr_illegalAddr_T_125) @[build/NutShell.fir.opt.mlir 21170:43]
    node _isIllegalAddr_illegalAddr_T_128 = eq(UInt<12>(2926), addr) @[build/NutShell.fir.opt.mlir 21172:43]
    node _isIllegalAddr_illegalAddr_T_129 = mux(_isIllegalAddr_illegalAddr_T_128, UInt<1>(0), _isIllegalAddr_illegalAddr_T_127) @[build/NutShell.fir.opt.mlir 21174:43]
    node _isIllegalAddr_illegalAddr_T_130 = eq(UInt<12>(2883), addr) @[build/NutShell.fir.opt.mlir 21176:43]
    node _isIllegalAddr_illegalAddr_T_131 = mux(_isIllegalAddr_illegalAddr_T_130, UInt<1>(0), _isIllegalAddr_illegalAddr_T_129) @[build/NutShell.fir.opt.mlir 21178:43]
    node _isIllegalAddr_illegalAddr_T_132 = eq(UInt<12>(2915), addr) @[build/NutShell.fir.opt.mlir 21180:43]
    node _isIllegalAddr_illegalAddr_T_133 = mux(_isIllegalAddr_illegalAddr_T_132, UInt<1>(0), _isIllegalAddr_illegalAddr_T_131) @[build/NutShell.fir.opt.mlir 21182:43]
    node _isIllegalAddr_illegalAddr_T_134 = eq(UInt<10>(773), addr) @[build/NutShell.fir.opt.mlir 21184:43]
    node _isIllegalAddr_illegalAddr_T_135 = mux(_isIllegalAddr_illegalAddr_T_134, UInt<1>(0), _isIllegalAddr_illegalAddr_T_133) @[build/NutShell.fir.opt.mlir 21186:43]
    node _isIllegalAddr_illegalAddr_T_136 = eq(UInt<12>(2909), addr) @[build/NutShell.fir.opt.mlir 21188:43]
    node _isIllegalAddr_illegalAddr_T_137 = mux(_isIllegalAddr_illegalAddr_T_136, UInt<1>(0), _isIllegalAddr_illegalAddr_T_135) @[build/NutShell.fir.opt.mlir 21190:43]
    node _isIllegalAddr_illegalAddr_T_138 = eq(UInt<12>(2936), addr) @[build/NutShell.fir.opt.mlir 21192:43]
    node _isIllegalAddr_illegalAddr_T_139 = mux(_isIllegalAddr_illegalAddr_T_138, UInt<1>(0), _isIllegalAddr_illegalAddr_T_137) @[build/NutShell.fir.opt.mlir 21194:43]
    node _isIllegalAddr_illegalAddr_T_140 = eq(UInt<12>(2904), addr) @[build/NutShell.fir.opt.mlir 21196:43]
    node _isIllegalAddr_illegalAddr_T_141 = mux(_isIllegalAddr_illegalAddr_T_140, UInt<1>(0), _isIllegalAddr_illegalAddr_T_139) @[build/NutShell.fir.opt.mlir 21198:43]
    node _isIllegalAddr_illegalAddr_T_142 = eq(UInt<12>(2941), addr) @[build/NutShell.fir.opt.mlir 21200:43]
    node _isIllegalAddr_illegalAddr_T_143 = mux(_isIllegalAddr_illegalAddr_T_142, UInt<1>(0), _isIllegalAddr_illegalAddr_T_141) @[build/NutShell.fir.opt.mlir 21202:43]
    node _isIllegalAddr_illegalAddr_T_144 = eq(UInt<12>(2894), addr) @[build/NutShell.fir.opt.mlir 21204:43]
    node _isIllegalAddr_illegalAddr_T_145 = mux(_isIllegalAddr_illegalAddr_T_144, UInt<1>(0), _isIllegalAddr_illegalAddr_T_143) @[build/NutShell.fir.opt.mlir 21206:43]
    node _isIllegalAddr_illegalAddr_T_146 = eq(UInt<12>(2849), addr) @[build/NutShell.fir.opt.mlir 21208:43]
    node _isIllegalAddr_illegalAddr_T_147 = mux(_isIllegalAddr_illegalAddr_T_146, UInt<1>(0), _isIllegalAddr_illegalAddr_T_145) @[build/NutShell.fir.opt.mlir 21210:43]
    node _isIllegalAddr_illegalAddr_T_148 = eq(UInt<10>(772), addr) @[build/NutShell.fir.opt.mlir 21212:43]
    node _isIllegalAddr_illegalAddr_T_149 = mux(_isIllegalAddr_illegalAddr_T_148, UInt<1>(0), _isIllegalAddr_illegalAddr_T_147) @[build/NutShell.fir.opt.mlir 21214:43]
    node _isIllegalAddr_illegalAddr_T_150 = eq(UInt<12>(2817), addr) @[build/NutShell.fir.opt.mlir 21216:43]
    node _isIllegalAddr_illegalAddr_T_151 = mux(_isIllegalAddr_illegalAddr_T_150, UInt<1>(0), _isIllegalAddr_illegalAddr_T_149) @[build/NutShell.fir.opt.mlir 21218:43]
    node _isIllegalAddr_illegalAddr_T_152 = eq(UInt<12>(2827), addr) @[build/NutShell.fir.opt.mlir 21220:43]
    node _isIllegalAddr_illegalAddr_T_153 = mux(_isIllegalAddr_illegalAddr_T_152, UInt<1>(0), _isIllegalAddr_illegalAddr_T_151) @[build/NutShell.fir.opt.mlir 21222:43]
    node _isIllegalAddr_illegalAddr_T_154 = eq(UInt<12>(2859), addr) @[build/NutShell.fir.opt.mlir 21224:43]
    node _isIllegalAddr_illegalAddr_T_155 = mux(_isIllegalAddr_illegalAddr_T_154, UInt<1>(0), _isIllegalAddr_illegalAddr_T_153) @[build/NutShell.fir.opt.mlir 21226:43]
    node _isIllegalAddr_illegalAddr_T_156 = eq(UInt<12>(2938), addr) @[build/NutShell.fir.opt.mlir 21228:43]
    node _isIllegalAddr_illegalAddr_T_157 = mux(_isIllegalAddr_illegalAddr_T_156, UInt<1>(0), _isIllegalAddr_illegalAddr_T_155) @[build/NutShell.fir.opt.mlir 21230:43]
    node _isIllegalAddr_illegalAddr_T_158 = eq(UInt<12>(2891), addr) @[build/NutShell.fir.opt.mlir 21232:43]
    node _isIllegalAddr_illegalAddr_T_159 = mux(_isIllegalAddr_illegalAddr_T_158, UInt<1>(0), _isIllegalAddr_illegalAddr_T_157) @[build/NutShell.fir.opt.mlir 21234:43]
    node _isIllegalAddr_illegalAddr_T_160 = eq(UInt<12>(2935), addr) @[build/NutShell.fir.opt.mlir 21236:43]
    node _isIllegalAddr_illegalAddr_T_161 = mux(_isIllegalAddr_illegalAddr_T_160, UInt<1>(0), _isIllegalAddr_illegalAddr_T_159) @[build/NutShell.fir.opt.mlir 21238:43]
    node _isIllegalAddr_illegalAddr_T_162 = eq(UInt<10>(947), addr) @[build/NutShell.fir.opt.mlir 21240:43]
    node _isIllegalAddr_illegalAddr_T_163 = mux(_isIllegalAddr_illegalAddr_T_162, UInt<1>(0), _isIllegalAddr_illegalAddr_T_161) @[build/NutShell.fir.opt.mlir 21242:43]
    node _isIllegalAddr_illegalAddr_T_164 = eq(UInt<12>(2906), addr) @[build/NutShell.fir.opt.mlir 21244:43]
    node _isIllegalAddr_illegalAddr_T_165 = mux(_isIllegalAddr_illegalAddr_T_164, UInt<1>(0), _isIllegalAddr_illegalAddr_T_163) @[build/NutShell.fir.opt.mlir 21246:43]
    node _isIllegalAddr_illegalAddr_T_166 = eq(UInt<12>(2839), addr) @[build/NutShell.fir.opt.mlir 21248:43]
    node _isIllegalAddr_illegalAddr_T_167 = mux(_isIllegalAddr_illegalAddr_T_166, UInt<1>(0), _isIllegalAddr_illegalAddr_T_165) @[build/NutShell.fir.opt.mlir 21250:43]
    node _isIllegalAddr_illegalAddr_T_168 = eq(UInt<12>(2943), addr) @[build/NutShell.fir.opt.mlir 21252:43]
    node _isIllegalAddr_illegalAddr_T_169 = mux(_isIllegalAddr_illegalAddr_T_168, UInt<1>(0), _isIllegalAddr_illegalAddr_T_167) @[build/NutShell.fir.opt.mlir 21254:43]
    node _isIllegalAddr_illegalAddr_T_170 = eq(UInt<12>(2856), addr) @[build/NutShell.fir.opt.mlir 21256:43]
    node _isIllegalAddr_illegalAddr_T_171 = mux(_isIllegalAddr_illegalAddr_T_170, UInt<1>(0), _isIllegalAddr_illegalAddr_T_169) @[build/NutShell.fir.opt.mlir 21258:43]
    node _isIllegalAddr_illegalAddr_T_172 = eq(UInt<12>(2896), addr) @[build/NutShell.fir.opt.mlir 21260:43]
    node _isIllegalAddr_illegalAddr_T_173 = mux(_isIllegalAddr_illegalAddr_T_172, UInt<1>(0), _isIllegalAddr_illegalAddr_T_171) @[build/NutShell.fir.opt.mlir 21262:43]
    node _isIllegalAddr_illegalAddr_T_174 = eq(UInt<12>(2871), addr) @[build/NutShell.fir.opt.mlir 21264:43]
    node _isIllegalAddr_illegalAddr_T_175 = mux(_isIllegalAddr_illegalAddr_T_174, UInt<1>(0), _isIllegalAddr_illegalAddr_T_173) @[build/NutShell.fir.opt.mlir 21266:43]
    node _isIllegalAddr_illegalAddr_T_176 = eq(UInt<12>(2824), addr) @[build/NutShell.fir.opt.mlir 21268:43]
    node _isIllegalAddr_illegalAddr_T_177 = mux(_isIllegalAddr_illegalAddr_T_176, UInt<1>(0), _isIllegalAddr_illegalAddr_T_175) @[build/NutShell.fir.opt.mlir 21270:43]
    node _isIllegalAddr_illegalAddr_T_178 = eq(UInt<9>(323), addr) @[build/NutShell.fir.opt.mlir 21272:43]
    node _isIllegalAddr_illegalAddr_T_179 = mux(_isIllegalAddr_illegalAddr_T_178, UInt<1>(0), _isIllegalAddr_illegalAddr_T_177) @[build/NutShell.fir.opt.mlir 21274:43]
    node _isIllegalAddr_illegalAddr_T_180 = eq(UInt<12>(2923), addr) @[build/NutShell.fir.opt.mlir 21276:43]
    node _isIllegalAddr_illegalAddr_T_181 = mux(_isIllegalAddr_illegalAddr_T_180, UInt<1>(0), _isIllegalAddr_illegalAddr_T_179) @[build/NutShell.fir.opt.mlir 21278:43]
    node _isIllegalAddr_illegalAddr_T_182 = eq(UInt<12>(2874), addr) @[build/NutShell.fir.opt.mlir 21280:43]
    node _isIllegalAddr_illegalAddr_T_183 = mux(_isIllegalAddr_illegalAddr_T_182, UInt<1>(0), _isIllegalAddr_illegalAddr_T_181) @[build/NutShell.fir.opt.mlir 21282:43]
    node _isIllegalAddr_illegalAddr_T_184 = eq(UInt<10>(769), addr) @[build/NutShell.fir.opt.mlir 21284:43]
    node _isIllegalAddr_illegalAddr_T_185 = mux(_isIllegalAddr_illegalAddr_T_184, UInt<1>(0), _isIllegalAddr_illegalAddr_T_183) @[build/NutShell.fir.opt.mlir 21286:43]
    node _isIllegalAddr_illegalAddr_T_186 = eq(UInt<12>(2928), addr) @[build/NutShell.fir.opt.mlir 21288:43]
    node _isIllegalAddr_illegalAddr_T_187 = mux(_isIllegalAddr_illegalAddr_T_186, UInt<1>(0), _isIllegalAddr_illegalAddr_T_185) @[build/NutShell.fir.opt.mlir 21290:43]
    node _isIllegalAddr_illegalAddr_T_188 = eq(UInt<12>(2842), addr) @[build/NutShell.fir.opt.mlir 21292:43]
    node _isIllegalAddr_illegalAddr_T_189 = mux(_isIllegalAddr_illegalAddr_T_188, UInt<1>(0), _isIllegalAddr_illegalAddr_T_187) @[build/NutShell.fir.opt.mlir 21294:43]
    node _isIllegalAddr_illegalAddr_T_190 = eq(UInt<12>(2911), addr) @[build/NutShell.fir.opt.mlir 21296:43]
    node _isIllegalAddr_illegalAddr_T_191 = mux(_isIllegalAddr_illegalAddr_T_190, UInt<1>(0), _isIllegalAddr_illegalAddr_T_189) @[build/NutShell.fir.opt.mlir 21298:43]
    node _isIllegalAddr_illegalAddr_T_192 = eq(UInt<12>(2931), addr) @[build/NutShell.fir.opt.mlir 21300:43]
    node _isIllegalAddr_illegalAddr_T_193 = mux(_isIllegalAddr_illegalAddr_T_192, UInt<1>(0), _isIllegalAddr_illegalAddr_T_191) @[build/NutShell.fir.opt.mlir 21302:43]
    node _isIllegalAddr_illegalAddr_T_194 = eq(UInt<12>(2867), addr) @[build/NutShell.fir.opt.mlir 21304:43]
    node _isIllegalAddr_illegalAddr_T_195 = mux(_isIllegalAddr_illegalAddr_T_194, UInt<1>(0), _isIllegalAddr_illegalAddr_T_193) @[build/NutShell.fir.opt.mlir 21306:43]
    node _isIllegalAddr_illegalAddr_T_196 = eq(UInt<10>(768), addr) @[build/NutShell.fir.opt.mlir 21308:43]
    node _isIllegalAddr_illegalAddr_T_197 = mux(_isIllegalAddr_illegalAddr_T_196, UInt<1>(0), _isIllegalAddr_illegalAddr_T_195) @[build/NutShell.fir.opt.mlir 21310:43]
    node _isIllegalAddr_illegalAddr_T_198 = eq(UInt<12>(2835), addr) @[build/NutShell.fir.opt.mlir 21312:43]
    node _isIllegalAddr_illegalAddr_T_199 = mux(_isIllegalAddr_illegalAddr_T_198, UInt<1>(0), _isIllegalAddr_illegalAddr_T_197) @[build/NutShell.fir.opt.mlir 21314:43]
    node _isIllegalAddr_illegalAddr_T_200 = eq(UInt<10>(944), addr) @[build/NutShell.fir.opt.mlir 21316:43]
    node _isIllegalAddr_illegalAddr_T_201 = mux(_isIllegalAddr_illegalAddr_T_200, UInt<1>(0), _isIllegalAddr_illegalAddr_T_199) @[build/NutShell.fir.opt.mlir 21318:43]
    node _isIllegalAddr_illegalAddr_T_202 = eq(UInt<12>(2878), addr) @[build/NutShell.fir.opt.mlir 21320:43]
    node _isIllegalAddr_illegalAddr_T_203 = mux(_isIllegalAddr_illegalAddr_T_202, UInt<1>(0), _isIllegalAddr_illegalAddr_T_201) @[build/NutShell.fir.opt.mlir 21322:43]
    node _isIllegalAddr_illegalAddr_T_204 = eq(UInt<12>(2927), addr) @[build/NutShell.fir.opt.mlir 21324:43]
    node _isIllegalAddr_illegalAddr_T_205 = mux(_isIllegalAddr_illegalAddr_T_204, UInt<1>(0), _isIllegalAddr_illegalAddr_T_203) @[build/NutShell.fir.opt.mlir 21326:43]
    node _isIllegalAddr_illegalAddr_T_206 = eq(UInt<12>(2846), addr) @[build/NutShell.fir.opt.mlir 21328:43]
    node _isIllegalAddr_illegalAddr_T_207 = mux(_isIllegalAddr_illegalAddr_T_206, UInt<1>(0), _isIllegalAddr_illegalAddr_T_205) @[build/NutShell.fir.opt.mlir 21330:43]
    node _isIllegalAddr_illegalAddr_T_208 = eq(UInt<12>(2899), addr) @[build/NutShell.fir.opt.mlir 21332:43]
    node _isIllegalAddr_illegalAddr_T_209 = mux(_isIllegalAddr_illegalAddr_T_208, UInt<1>(0), _isIllegalAddr_illegalAddr_T_207) @[build/NutShell.fir.opt.mlir 21334:43]
    node _isIllegalAddr_illegalAddr_T_210 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 21336:43]
    node _isIllegalAddr_illegalAddr_T_211 = mux(_isIllegalAddr_illegalAddr_T_210, UInt<1>(0), _isIllegalAddr_illegalAddr_T_209) @[build/NutShell.fir.opt.mlir 21338:43]
    node _isIllegalAddr_illegalAddr_T_212 = eq(UInt<12>(2914), addr) @[build/NutShell.fir.opt.mlir 21340:43]
    node _isIllegalAddr_illegalAddr_T_213 = mux(_isIllegalAddr_illegalAddr_T_212, UInt<1>(0), _isIllegalAddr_illegalAddr_T_211) @[build/NutShell.fir.opt.mlir 21342:43]
    node _isIllegalAddr_illegalAddr_T_214 = eq(UInt<12>(2816), addr) @[build/NutShell.fir.opt.mlir 21344:43]
    node _isIllegalAddr_illegalAddr_T_215 = mux(_isIllegalAddr_illegalAddr_T_214, UInt<1>(0), _isIllegalAddr_illegalAddr_T_213) @[build/NutShell.fir.opt.mlir 21346:43]
    node _isIllegalAddr_illegalAddr_T_216 = eq(UInt<12>(2942), addr) @[build/NutShell.fir.opt.mlir 21348:43]
    node _isIllegalAddr_illegalAddr_T_217 = mux(_isIllegalAddr_illegalAddr_T_216, UInt<1>(0), _isIllegalAddr_illegalAddr_T_215) @[build/NutShell.fir.opt.mlir 21350:43]
    node _isIllegalAddr_illegalAddr_T_218 = eq(UInt<12>(2863), addr) @[build/NutShell.fir.opt.mlir 21352:43]
    node _isIllegalAddr_illegalAddr_T_219 = mux(_isIllegalAddr_illegalAddr_T_218, UInt<1>(0), _isIllegalAddr_illegalAddr_T_217) @[build/NutShell.fir.opt.mlir 21354:43]
    node _isIllegalAddr_illegalAddr_T_220 = eq(UInt<12>(2821), addr) @[build/NutShell.fir.opt.mlir 21356:43]
    node _isIllegalAddr_illegalAddr_T_221 = mux(_isIllegalAddr_illegalAddr_T_220, UInt<1>(0), _isIllegalAddr_illegalAddr_T_219) @[build/NutShell.fir.opt.mlir 21358:43]
    node _isIllegalAddr_illegalAddr_T_222 = eq(UInt<12>(2850), addr) @[build/NutShell.fir.opt.mlir 21360:43]
    node _isIllegalAddr_illegalAddr_T_223 = mux(_isIllegalAddr_illegalAddr_T_222, UInt<1>(0), _isIllegalAddr_illegalAddr_T_221) @[build/NutShell.fir.opt.mlir 21362:43]
    node _isIllegalAddr_illegalAddr_T_224 = eq(UInt<12>(2888), addr) @[build/NutShell.fir.opt.mlir 21364:43]
    node _isIllegalAddr_illegalAddr_T_225 = mux(_isIllegalAddr_illegalAddr_T_224, UInt<1>(0), _isIllegalAddr_illegalAddr_T_223) @[build/NutShell.fir.opt.mlir 21366:43]
    node _isIllegalAddr_illegalAddr_T_226 = eq(UInt<12>(2882), addr) @[build/NutShell.fir.opt.mlir 21368:43]
    node _isIllegalAddr_illegalAddr_T_227 = mux(_isIllegalAddr_illegalAddr_T_226, UInt<1>(0), _isIllegalAddr_illegalAddr_T_225) @[build/NutShell.fir.opt.mlir 21370:43]
    node _isIllegalAddr_illegalAddr_T_228 = eq(UInt<12>(2831), addr) @[build/NutShell.fir.opt.mlir 21372:43]
    node _isIllegalAddr_illegalAddr_T_229 = mux(_isIllegalAddr_illegalAddr_T_228, UInt<1>(0), _isIllegalAddr_illegalAddr_T_227) @[build/NutShell.fir.opt.mlir 21374:43]
    node _isIllegalAddr_illegalAddr_T_230 = eq(UInt<12>(2920), addr) @[build/NutShell.fir.opt.mlir 21376:43]
    node _isIllegalAddr_illegalAddr_T_231 = mux(_isIllegalAddr_illegalAddr_T_230, UInt<1>(0), _isIllegalAddr_illegalAddr_T_229) @[build/NutShell.fir.opt.mlir 21378:43]
    node _isIllegalAddr_illegalAddr_T_232 = eq(UInt<12>(2903), addr) @[build/NutShell.fir.opt.mlir 21380:43]
    node _isIllegalAddr_illegalAddr_T_233 = mux(_isIllegalAddr_illegalAddr_T_232, UInt<1>(0), _isIllegalAddr_illegalAddr_T_231) @[build/NutShell.fir.opt.mlir 21382:43]
    node _isIllegalAddr_illegalAddr_T_234 = eq(UInt<12>(2838), addr) @[build/NutShell.fir.opt.mlir 21384:43]
    node _isIllegalAddr_illegalAddr_T_235 = mux(_isIllegalAddr_illegalAddr_T_234, UInt<1>(0), _isIllegalAddr_illegalAddr_T_233) @[build/NutShell.fir.opt.mlir 21386:43]
    node _isIllegalAddr_illegalAddr_T_236 = eq(UInt<12>(2843), addr) @[build/NutShell.fir.opt.mlir 21388:43]
    node _isIllegalAddr_illegalAddr_T_237 = mux(_isIllegalAddr_illegalAddr_T_236, UInt<1>(0), _isIllegalAddr_illegalAddr_T_235) @[build/NutShell.fir.opt.mlir 21390:43]
    node _isIllegalAddr_illegalAddr_T_238 = eq(UInt<12>(2860), addr) @[build/NutShell.fir.opt.mlir 21392:43]
    node _isIllegalAddr_illegalAddr_T_239 = mux(_isIllegalAddr_illegalAddr_T_238, UInt<1>(0), _isIllegalAddr_illegalAddr_T_237) @[build/NutShell.fir.opt.mlir 21394:43]
    node _isIllegalAddr_illegalAddr_T_240 = eq(UInt<12>(2939), addr) @[build/NutShell.fir.opt.mlir 21396:43]
    node _isIllegalAddr_illegalAddr_T_241 = mux(_isIllegalAddr_illegalAddr_T_240, UInt<1>(0), _isIllegalAddr_illegalAddr_T_239) @[build/NutShell.fir.opt.mlir 21398:43]
    node _isIllegalAddr_illegalAddr_T_242 = eq(UInt<12>(2892), addr) @[build/NutShell.fir.opt.mlir 21400:43]
    node _isIllegalAddr_illegalAddr_T_243 = mux(_isIllegalAddr_illegalAddr_T_242, UInt<1>(0), _isIllegalAddr_illegalAddr_T_241) @[build/NutShell.fir.opt.mlir 21402:43]
    node _isIllegalAddr_illegalAddr_T_244 = eq(UInt<12>(2848), addr) @[build/NutShell.fir.opt.mlir 21404:43]
    node _isIllegalAddr_illegalAddr_T_245 = mux(_isIllegalAddr_illegalAddr_T_244, UInt<1>(0), _isIllegalAddr_illegalAddr_T_243) @[build/NutShell.fir.opt.mlir 21406:43]
    node _isIllegalAddr_illegalAddr_T_246 = eq(UInt<12>(2924), addr) @[build/NutShell.fir.opt.mlir 21408:43]
    node _isIllegalAddr_illegalAddr_T_247 = mux(_isIllegalAddr_illegalAddr_T_246, UInt<1>(0), _isIllegalAddr_illegalAddr_T_245) @[build/NutShell.fir.opt.mlir 21410:43]
    node _isIllegalAddr_illegalAddr_T_248 = eq(UInt<12>(2818), addr) @[build/NutShell.fir.opt.mlir 21412:43]
    node _isIllegalAddr_illegalAddr_T_249 = mux(_isIllegalAddr_illegalAddr_T_248, UInt<1>(0), _isIllegalAddr_illegalAddr_T_247) @[build/NutShell.fir.opt.mlir 21414:43]
    node _isIllegalAddr_illegalAddr_T_250 = eq(UInt<12>(2919), addr) @[build/NutShell.fir.opt.mlir 21416:43]
    node _isIllegalAddr_illegalAddr_T_251 = mux(_isIllegalAddr_illegalAddr_T_250, UInt<1>(0), _isIllegalAddr_illegalAddr_T_249) @[build/NutShell.fir.opt.mlir 21418:43]
    node _isIllegalAddr_illegalAddr_T_252 = eq(UInt<12>(2865), addr) @[build/NutShell.fir.opt.mlir 21420:43]
    node _isIllegalAddr_illegalAddr_T_253 = mux(_isIllegalAddr_illegalAddr_T_252, UInt<1>(0), _isIllegalAddr_illegalAddr_T_251) @[build/NutShell.fir.opt.mlir 21422:43]
    node _isIllegalAddr_illegalAddr_T_254 = eq(UInt<12>(2875), addr) @[build/NutShell.fir.opt.mlir 21424:43]
    node _isIllegalAddr_illegalAddr_T_255 = mux(_isIllegalAddr_illegalAddr_T_254, UInt<1>(0), _isIllegalAddr_illegalAddr_T_253) @[build/NutShell.fir.opt.mlir 21426:43]
    node _isIllegalAddr_illegalAddr_T_256 = eq(UInt<10>(931), addr) @[build/NutShell.fir.opt.mlir 21428:43]
    node _isIllegalAddr_illegalAddr_T_257 = mux(_isIllegalAddr_illegalAddr_T_256, UInt<1>(0), _isIllegalAddr_illegalAddr_T_255) @[build/NutShell.fir.opt.mlir 21430:43]
    node _isIllegalAddr_illegalAddr_T_258 = eq(UInt<12>(2885), addr) @[build/NutShell.fir.opt.mlir 21432:43]
    node _isIllegalAddr_illegalAddr_T_259 = mux(_isIllegalAddr_illegalAddr_T_258, UInt<1>(0), _isIllegalAddr_illegalAddr_T_257) @[build/NutShell.fir.opt.mlir 21434:43]
    node _isIllegalAddr_illegalAddr_T_260 = eq(UInt<12>(2870), addr) @[build/NutShell.fir.opt.mlir 21436:43]
    node _isIllegalAddr_illegalAddr_T_261 = mux(_isIllegalAddr_illegalAddr_T_260, UInt<1>(0), _isIllegalAddr_illegalAddr_T_259) @[build/NutShell.fir.opt.mlir 21438:43]
    node _isIllegalAddr_illegalAddr_T_262 = eq(UInt<12>(2828), addr) @[build/NutShell.fir.opt.mlir 21440:43]
    node _isIllegalAddr_illegalAddr_T_263 = mux(_isIllegalAddr_illegalAddr_T_262, UInt<1>(0), _isIllegalAddr_illegalAddr_T_261) @[build/NutShell.fir.opt.mlir 21442:43]
    node _isIllegalAddr_illegalAddr_T_264 = eq(UInt<10>(771), addr) @[build/NutShell.fir.opt.mlir 21444:43]
    node _isIllegalAddr_illegalAddr_T_265 = mux(_isIllegalAddr_illegalAddr_T_264, UInt<1>(0), _isIllegalAddr_illegalAddr_T_263) @[build/NutShell.fir.opt.mlir 21446:43]
    node _isIllegalAddr_illegalAddr_T_266 = eq(UInt<12>(2907), addr) @[build/NutShell.fir.opt.mlir 21448:43]
    node _isIllegalAddr_illegalAddr_T_267 = mux(_isIllegalAddr_illegalAddr_T_266, UInt<1>(0), _isIllegalAddr_illegalAddr_T_265) @[build/NutShell.fir.opt.mlir 21450:43]
    node _isIllegalAddr_illegalAddr_T_268 = eq(UInt<12>(2855), addr) @[build/NutShell.fir.opt.mlir 21452:43]
    node _isIllegalAddr_illegalAddr_T_269 = mux(_isIllegalAddr_illegalAddr_T_268, UInt<1>(0), _isIllegalAddr_illegalAddr_T_267) @[build/NutShell.fir.opt.mlir 21454:43]
    node _isIllegalAddr_illegalAddr_T_270 = eq(UInt<12>(2853), addr) @[build/NutShell.fir.opt.mlir 21456:43]
    node _isIllegalAddr_illegalAddr_T_271 = mux(_isIllegalAddr_illegalAddr_T_270, UInt<1>(0), _isIllegalAddr_illegalAddr_T_269) @[build/NutShell.fir.opt.mlir 21458:43]
    node _isIllegalAddr_illegalAddr_T_272 = eq(UInt<10>(946), addr) @[build/NutShell.fir.opt.mlir 21460:43]
    node _isIllegalAddr_illegalAddr_T_273 = mux(_isIllegalAddr_illegalAddr_T_272, UInt<1>(0), _isIllegalAddr_illegalAddr_T_271) @[build/NutShell.fir.opt.mlir 21462:43]
    node _isIllegalAddr_illegalAddr_T_274 = eq(UInt<12>(2823), addr) @[build/NutShell.fir.opt.mlir 21464:43]
    node _isIllegalAddr_illegalAddr_T_275 = mux(_isIllegalAddr_illegalAddr_T_274, UInt<1>(0), _isIllegalAddr_illegalAddr_T_273) @[build/NutShell.fir.opt.mlir 21466:43]
    node _isIllegalAddr_illegalAddr_T_276 = eq(UInt<12>(3859), addr) @[build/NutShell.fir.opt.mlir 21468:43]
    node _isIllegalAddr_illegalAddr_T_277 = mux(_isIllegalAddr_illegalAddr_T_276, UInt<1>(0), _isIllegalAddr_illegalAddr_T_275) @[build/NutShell.fir.opt.mlir 21470:43]
    node _isIllegalAddr_illegalAddr_T_278 = eq(UInt<12>(2934), addr) @[build/NutShell.fir.opt.mlir 21472:43]
    node _isIllegalAddr_illegalAddr_T_279 = mux(_isIllegalAddr_illegalAddr_T_278, UInt<1>(0), _isIllegalAddr_illegalAddr_T_277) @[build/NutShell.fir.opt.mlir 21474:43]
    node _isIllegalAddr_illegalAddr_T_280 = eq(UInt<12>(2912), addr) @[build/NutShell.fir.opt.mlir 21476:43]
    node _isIllegalAddr_illegalAddr_T_281 = mux(_isIllegalAddr_illegalAddr_T_280, UInt<1>(0), _isIllegalAddr_illegalAddr_T_279) @[build/NutShell.fir.opt.mlir 21478:43]
    node _isIllegalAddr_illegalAddr_T_282 = eq(UInt<10>(929), addr) @[build/NutShell.fir.opt.mlir 21480:43]
    node _isIllegalAddr_illegalAddr_T_283 = mux(_isIllegalAddr_illegalAddr_T_282, UInt<1>(0), _isIllegalAddr_illegalAddr_T_281) @[build/NutShell.fir.opt.mlir 21482:43]
    node _isIllegalAddr_illegalAddr_T_284 = eq(UInt<12>(2902), addr) @[build/NutShell.fir.opt.mlir 21484:43]
    node _isIllegalAddr_illegalAddr_T_285 = mux(_isIllegalAddr_illegalAddr_T_284, UInt<1>(0), _isIllegalAddr_illegalAddr_T_283) @[build/NutShell.fir.opt.mlir 21486:43]
    node _isIllegalAddr_illegalAddr_T_286 = eq(UInt<10>(832), addr) @[build/NutShell.fir.opt.mlir 21488:43]
    node _isIllegalAddr_illegalAddr_T_287 = mux(_isIllegalAddr_illegalAddr_T_286, UInt<1>(0), _isIllegalAddr_illegalAddr_T_285) @[build/NutShell.fir.opt.mlir 21490:43]
    node _isIllegalAddr_illegalAddr_T_288 = eq(UInt<12>(2917), addr) @[build/NutShell.fir.opt.mlir 21492:43]
    node _isIllegalAddr_illegalAddr_T_289 = mux(_isIllegalAddr_illegalAddr_T_288, UInt<1>(0), _isIllegalAddr_illegalAddr_T_287) @[build/NutShell.fir.opt.mlir 21494:43]
    node _isIllegalAddr_illegalAddr_T_290 = eq(UInt<12>(2930), addr) @[build/NutShell.fir.opt.mlir 21496:43]
    node _isIllegalAddr_illegalAddr_T_291 = mux(_isIllegalAddr_illegalAddr_T_290, UInt<1>(0), _isIllegalAddr_illegalAddr_T_289) @[build/NutShell.fir.opt.mlir 21498:43]
    node _isIllegalAddr_illegalAddr_T_292 = eq(UInt<12>(3860), addr) @[build/NutShell.fir.opt.mlir 21500:43]
    node _isIllegalAddr_illegalAddr_T_293 = mux(_isIllegalAddr_illegalAddr_T_292, UInt<1>(0), _isIllegalAddr_illegalAddr_T_291) @[build/NutShell.fir.opt.mlir 21502:43]
    node _isIllegalAddr_illegalAddr_T_294 = eq(UInt<10>(833), addr) @[build/NutShell.fir.opt.mlir 21504:43]
    node _isIllegalAddr_illegalAddr_T_295 = mux(_isIllegalAddr_illegalAddr_T_294, UInt<1>(0), _isIllegalAddr_illegalAddr_T_293) @[build/NutShell.fir.opt.mlir 21506:43]
    node _isIllegalAddr_illegalAddr_T_296 = eq(UInt<10>(835), addr) @[build/NutShell.fir.opt.mlir 21508:43]
    node _isIllegalAddr_illegalAddr_T_297 = mux(_isIllegalAddr_illegalAddr_T_296, UInt<1>(0), _isIllegalAddr_illegalAddr_T_295) @[build/NutShell.fir.opt.mlir 21510:43]
    node _isIllegalAddr_illegalAddr_T_298 = eq(UInt<9>(262), addr) @[build/NutShell.fir.opt.mlir 21512:43]
    node _isIllegalAddr_illegalAddr_T_299 = mux(_isIllegalAddr_illegalAddr_T_298, UInt<1>(0), _isIllegalAddr_illegalAddr_T_297) @[build/NutShell.fir.opt.mlir 21514:43]
    node _isIllegalAddr_illegalAddr_T_300 = eq(UInt<12>(2913), addr) @[build/NutShell.fir.opt.mlir 21516:43]
    node _isIllegalAddr_illegalAddr_T_301 = mux(_isIllegalAddr_illegalAddr_T_300, UInt<1>(0), _isIllegalAddr_illegalAddr_T_299) @[build/NutShell.fir.opt.mlir 21518:43]
    node _isIllegalAddr_illegalAddr_T_302 = eq(UInt<10>(928), addr) @[build/NutShell.fir.opt.mlir 21520:43]
    node _isIllegalAddr_illegalAddr_T_303 = mux(_isIllegalAddr_illegalAddr_T_302, UInt<1>(0), _isIllegalAddr_illegalAddr_T_301) @[build/NutShell.fir.opt.mlir 21522:43]
    node _isIllegalAddr_illegalAddr_T_304 = eq(UInt<12>(2847), addr) @[build/NutShell.fir.opt.mlir 21524:43]
    node _isIllegalAddr_illegalAddr_T_305 = mux(_isIllegalAddr_illegalAddr_T_304, UInt<1>(0), _isIllegalAddr_illegalAddr_T_303) @[build/NutShell.fir.opt.mlir 21526:43]
    node _isIllegalAddr_illegalAddr_T_306 = eq(UInt<12>(2898), addr) @[build/NutShell.fir.opt.mlir 21528:43]
    node _isIllegalAddr_illegalAddr_T_307 = mux(_isIllegalAddr_illegalAddr_T_306, UInt<1>(0), _isIllegalAddr_illegalAddr_T_305) @[build/NutShell.fir.opt.mlir 21530:43]
    node _isIllegalAddr_illegalAddr_T_308 = eq(UInt<12>(2864), addr) @[build/NutShell.fir.opt.mlir 21532:43]
    node _isIllegalAddr_illegalAddr_T_309 = mux(_isIllegalAddr_illegalAddr_T_308, UInt<1>(0), _isIllegalAddr_illegalAddr_T_307) @[build/NutShell.fir.opt.mlir 21534:43]
    node _isIllegalAddr_illegalAddr_T_310 = eq(UInt<9>(322), addr) @[build/NutShell.fir.opt.mlir 21536:43]
    node _isIllegalAddr_illegalAddr_T_311 = mux(_isIllegalAddr_illegalAddr_T_310, UInt<1>(0), _isIllegalAddr_illegalAddr_T_309) @[build/NutShell.fir.opt.mlir 21538:43]
    node _isIllegalAddr_illegalAddr_T_312 = eq(UInt<12>(2879), addr) @[build/NutShell.fir.opt.mlir 21540:43]
    node _isIllegalAddr_illegalAddr_T_313 = mux(_isIllegalAddr_illegalAddr_T_312, UInt<1>(0), _isIllegalAddr_illegalAddr_T_311) @[build/NutShell.fir.opt.mlir 21542:43]
    node _isIllegalAddr_illegalAddr_T_314 = eq(UInt<12>(2881), addr) @[build/NutShell.fir.opt.mlir 21544:43]
    node _isIllegalAddr_illegalAddr_T_315 = mux(_isIllegalAddr_illegalAddr_T_314, UInt<1>(0), _isIllegalAddr_illegalAddr_T_313) @[build/NutShell.fir.opt.mlir 21546:43]
    node _isIllegalAddr_illegalAddr_T_316 = eq(UInt<12>(2887), addr) @[build/NutShell.fir.opt.mlir 21548:43]
    node _isIllegalAddr_illegalAddr_T_317 = mux(_isIllegalAddr_illegalAddr_T_316, UInt<1>(0), _isIllegalAddr_illegalAddr_T_315) @[build/NutShell.fir.opt.mlir 21550:43]
    node _isIllegalAddr_illegalAddr_T_318 = eq(UInt<12>(2834), addr) @[build/NutShell.fir.opt.mlir 21552:43]
    node _isIllegalAddr_illegalAddr_T_319 = mux(_isIllegalAddr_illegalAddr_T_318, UInt<1>(0), _isIllegalAddr_illegalAddr_T_317) @[build/NutShell.fir.opt.mlir 21554:43]
    node _isIllegalAddr_illegalAddr_T_320 = eq(UInt<12>(2866), addr) @[build/NutShell.fir.opt.mlir 21556:43]
    node _isIllegalAddr_illegalAddr_T_321 = mux(_isIllegalAddr_illegalAddr_T_320, UInt<1>(0), _isIllegalAddr_illegalAddr_T_319) @[build/NutShell.fir.opt.mlir 21558:43]
    node _isIllegalAddr_illegalAddr_T_322 = eq(UInt<12>(2832), addr) @[build/NutShell.fir.opt.mlir 21560:43]
    node _isIllegalAddr_illegalAddr_T_323 = mux(_isIllegalAddr_illegalAddr_T_322, UInt<1>(0), _isIllegalAddr_illegalAddr_T_321) @[build/NutShell.fir.opt.mlir 21562:43]
    connect isIllegalAddr, _isIllegalAddr_illegalAddr_T_323 @[build/NutShell.fir.opt.mlir 21563:7]
    node _resetSatp_T = eq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 21565:23]
    node resetSatp = and(_resetSatp_T, wen) @[build/NutShell.fir.opt.mlir 21567:20]
    connect io.out.bits, rdata @[build/NutShell.fir.opt.mlir 21568:7]
    node fixMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 21570:27]
    wire rdataDummy : UInt<64> @[build/NutShell.fir.opt.mlir 21571:21]
    node _T_314 = eq(isIllegalAccess, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21573:17]
    node _T_315 = and(wen, _T_314) @[build/NutShell.fir.opt.mlir 21575:17]
    node _rdataDummy_T = and(mipReg, fixMapping_0_2_4) @[build/NutShell.fir.opt.mlir 21577:24]
    node _rdataDummy_T_1 = and(mipReg, sipMask) @[build/NutShell.fir.opt.mlir 21579:26]
    node _rdataDummy_T_2 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 21581:26]
    node _rdataDummy_T_3 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 21583:26]
    node _rdataDummy_T_4 = mux(_rdataDummy_T_2, _rdataDummy_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21585:26]
    node _rdataDummy_T_5 = mux(_rdataDummy_T_3, _rdataDummy_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21587:26]
    node _rdataDummy_T_6 = or(_rdataDummy_T_4, _rdataDummy_T_5) @[build/NutShell.fir.opt.mlir 21589:26]
    wire _rdataDummy_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 21590:27]
    connect _rdataDummy_WIRE, _rdataDummy_T_6 @[build/NutShell.fir.opt.mlir 21591:7]
    connect rdataDummy, _rdataDummy_WIRE @[build/NutShell.fir.opt.mlir 21592:7]
    node _T_316 = eq(addr, UInt<10>(836)) @[build/NutShell.fir.opt.mlir 21594:17]
    node _T_317 = and(_T_315, _T_316) @[build/NutShell.fir.opt.mlir 21596:17]
    when _T_317 : @[build/NutShell.fir.opt.mlir 21598:7]
      node _mipReg_T = and(wdata, UInt<64>(1919)) @[build/NutShell.fir.opt.mlir 21600:22]
      node _mipReg_T_1 = not(UInt<64>(1919)) @[build/NutShell.fir.opt.mlir 21602:24]
      node _mipReg_T_2 = and(mipReg, _mipReg_T_1) @[build/NutShell.fir.opt.mlir 21604:24]
      node _mipReg_T_3 = or(_mipReg_T, _mipReg_T_2) @[build/NutShell.fir.opt.mlir 21606:24]
      connect mipReg, _mipReg_T_3 @[build/NutShell.fir.opt.mlir 21607:9]
    node _T_318 = eq(addr, UInt<9>(324)) @[build/NutShell.fir.opt.mlir 21610:17]
    node _T_319 = and(_T_315, _T_318) @[build/NutShell.fir.opt.mlir 21612:17]
    when _T_319 : @[build/NutShell.fir.opt.mlir 21613:7]
      node _mipReg_T_4 = and(wdata, sipMask) @[build/NutShell.fir.opt.mlir 21615:24]
      node _mipReg_T_5 = not(sipMask) @[build/NutShell.fir.opt.mlir 21617:24]
      node _mipReg_T_6 = and(mipReg, _mipReg_T_5) @[build/NutShell.fir.opt.mlir 21619:24]
      node _mipReg_T_7 = or(_mipReg_T_4, _mipReg_T_6) @[build/NutShell.fir.opt.mlir 21621:24]
      connect mipReg, _mipReg_T_7 @[build/NutShell.fir.opt.mlir 21622:9]
    wire ret : UInt<1> @[build/NutShell.fir.opt.mlir 21624:14]
    node _isEbreak_T = eq(addr, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21626:22]
    node _isEbreak_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21628:24]
    node _isEbreak_T_2 = and(_isEbreak_T, _isEbreak_T_1) @[build/NutShell.fir.opt.mlir 21630:24]
    node _isEbreak_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21632:24]
    node isEbreak = and(_isEbreak_T_2, _isEbreak_T_3) @[build/NutShell.fir.opt.mlir 21634:19]
    node _isEcall_T = eq(addr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21636:21]
    node _isEcall_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21638:23]
    node _isEcall_T_2 = and(_isEcall_T, _isEcall_T_1) @[build/NutShell.fir.opt.mlir 21640:23]
    node _isEcall_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21642:23]
    node isEcall = and(_isEcall_T_2, _isEcall_T_3) @[build/NutShell.fir.opt.mlir 21644:18]
    node _isMret_T = eq(addr, UInt<10>(770)) @[build/NutShell.fir.opt.mlir 21646:20]
    node _isMret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21648:22]
    node _isMret_T_2 = and(_isMret_T, _isMret_T_1) @[build/NutShell.fir.opt.mlir 21650:22]
    node _isMret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21652:22]
    node isMret = and(_isMret_T_2, _isMret_T_3) @[build/NutShell.fir.opt.mlir 21654:17]
    node _isSret_T = eq(addr, UInt<9>(258)) @[build/NutShell.fir.opt.mlir 21657:20]
    node _isSret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21659:22]
    node _isSret_T_2 = and(_isSret_T, _isSret_T_1) @[build/NutShell.fir.opt.mlir 21661:22]
    node _isSret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21663:22]
    node isSret = and(_isSret_T_2, _isSret_T_3) @[build/NutShell.fir.opt.mlir 21665:17]
    node _isUret_T = eq(addr, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 21667:20]
    node _isUret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21669:22]
    node _isUret_T_2 = and(_isUret_T, _isUret_T_1) @[build/NutShell.fir.opt.mlir 21671:22]
    node _isUret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21673:22]
    node isUret = and(_isUret_T_2, _isUret_T_3) @[build/NutShell.fir.opt.mlir 21675:17]
    inst LogPerfHelper of LogPerfHelper_16 @[build/NutShell.fir.opt.mlir 21676:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 21677:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 21682:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 21683:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 21684:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 21685:7]
    node _T_320 = and(wen, c_control.logEnable) @[build/NutShell.fir.opt.mlir 21687:17]
    when _T_320 : @[build/NutShell.fir.opt.mlir 21688:7]
      node _T_321 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21690:19]
      node _T_322 = eq(_T_321, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21692:19]
      when _T_322 : @[build/NutShell.fir.opt.mlir 21693:9]
        skip @[build/NutShell.fir.opt.mlir 21694:11]
      node _T_323 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21697:19]
      node _T_324 = eq(_T_323, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21699:19]
      when _T_324 : @[build/NutShell.fir.opt.mlir 21700:9]
        skip @[build/NutShell.fir.opt.mlir 21701:11]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21704:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21706:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 21708:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 21709:7]
    node _T_325 = and(wen, c_control.logEnable) @[build/NutShell.fir.opt.mlir 21711:17]
    when _T_325 : @[build/NutShell.fir.opt.mlir 21712:7]
      node _T_326 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21714:19]
      node _T_327 = eq(_T_326, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21716:19]
      when _T_327 : @[build/NutShell.fir.opt.mlir 21717:9]
        skip @[build/NutShell.fir.opt.mlir 21718:11]
      node _T_328 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21721:19]
      node _T_329 = eq(_T_328, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21723:19]
      when _T_329 : @[build/NutShell.fir.opt.mlir 21724:9]
        skip @[build/NutShell.fir.opt.mlir 21725:11]
    connect io.imemMMU.privilegeMode, privilegeMode @[build/NutShell.fir.opt.mlir 21728:7]
    node _io_dmemMMU_privilegeMode_T = bits(mstatusStruct.mprv, 0, 0) @[build/NutShell.fir.opt.mlir 21730:38]
    node _io_dmemMMU_privilegeMode_T_1 = mux(_io_dmemMMU_privilegeMode_T, mstatusStruct.mpp, privilegeMode) @[build/NutShell.fir.opt.mlir 21732:40]
    connect io.dmemMMU.privilegeMode, _io_dmemMMU_privilegeMode_T_1 @[build/NutShell.fir.opt.mlir 21733:7]
    node _io_imemMMU_status_sum_T = bits(mstatusStruct.sum, 0, 0) @[build/NutShell.fir.opt.mlir 21735:35]
    connect io.imemMMU.status_sum, _io_imemMMU_status_sum_T @[build/NutShell.fir.opt.mlir 21736:7]
    node _io_dmemMMU_status_sum_T = bits(mstatusStruct.sum, 0, 0) @[build/NutShell.fir.opt.mlir 21738:35]
    connect io.dmemMMU.status_sum, _io_dmemMMU_status_sum_T @[build/NutShell.fir.opt.mlir 21739:7]
    invalidate io.imemMMU.status_mxr @[build/NutShell.fir.opt.mlir 21741:7]
    node _io_dmemMMU_status_mxr_T = bits(mstatusStruct.mxr, 0, 0) @[build/NutShell.fir.opt.mlir 21743:35]
    connect io.dmemMMU.status_mxr, _io_dmemMMU_status_mxr_T @[build/NutShell.fir.opt.mlir 21744:7]
    wire hasInstrPageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21745:28]
    wire hasLoadPageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21746:27]
    wire hasStorePageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21747:28]
    wire hasStoreAddrMisaligned : UInt<1> @[build/NutShell.fir.opt.mlir 21748:33]
    wire hasLoadAddrMisaligned : UInt<1> @[build/NutShell.fir.opt.mlir 21749:32]
    wire dmemPagefaultAddr : UInt<39> @[build/NutShell.fir.opt.mlir 21750:28]
    wire dmemAddrMisalignedAddr : UInt<39> @[build/NutShell.fir.opt.mlir 21751:33]
    wire lsuAddr : UInt<64> @[build/NutShell.fir.opt.mlir 21752:18]
    connect lsuAddr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21754:7]
    node _hasInstrPageFault_T = and(io.cfIn.exceptionVec[12], io.in.valid) @[build/NutShell.fir.opt.mlir 21756:31]
    connect hasInstrPageFault, _hasInstrPageFault_T @[build/NutShell.fir.opt.mlir 21757:7]
    connect hasLoadPageFault, io.dmemMMU.loadPF @[build/NutShell.fir.opt.mlir 21758:7]
    connect hasStorePageFault, io.dmemMMU.storePF @[build/NutShell.fir.opt.mlir 21759:7]
    connect hasStoreAddrMisaligned, io.cfIn.exceptionVec[6] @[build/NutShell.fir.opt.mlir 21760:7]
    connect hasLoadAddrMisaligned, io.cfIn.exceptionVec[4] @[build/NutShell.fir.opt.mlir 21761:7]
    connect dmemPagefaultAddr, io.dmemMMU.addr @[build/NutShell.fir.opt.mlir 21762:7]
    connect dmemAddrMisalignedAddr, tail(lsuAddr, 25) @[build/NutShell.fir.opt.mlir 21764:7]
    node _T_330 = or(hasInstrPageFault, hasLoadPageFault) @[build/NutShell.fir.opt.mlir 21766:17]
    node _T_331 = or(_T_330, hasStorePageFault) @[build/NutShell.fir.opt.mlir 21768:17]
    when _T_331 : @[build/NutShell.fir.opt.mlir 21769:7]
      node _tval_T = add(io.cfIn.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 21771:20]
      node _tval_T_1 = tail(_tval_T, 1) @[build/NutShell.fir.opt.mlir 21773:22]
      node _tval_T_2 = bits(_tval_T_1, 38, 0) @[build/NutShell.fir.opt.mlir 21775:22]
      node tval_signBit = bits(_tval_T_2, 38, 38) @[build/NutShell.fir.opt.mlir 21777:25]
      node _tval_T_3 = mux(tval_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21779:22]
      node _tval_T_4 = cat(_tval_T_3, _tval_T_2) @[build/NutShell.fir.opt.mlir 21781:22]
      node _tval_T_5 = bits(io.cfIn.pc, 38, 0) @[build/NutShell.fir.opt.mlir 21783:22]
      node tval_signBit_1 = bits(_tval_T_5, 38, 38) @[build/NutShell.fir.opt.mlir 21785:27]
      node _tval_T_6 = mux(tval_signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21787:22]
      node _tval_T_7 = cat(_tval_T_6, _tval_T_5) @[build/NutShell.fir.opt.mlir 21789:22]
      node _tval_T_8 = mux(io.cfIn.crossPageIPFFix, _tval_T_4, _tval_T_7) @[build/NutShell.fir.opt.mlir 21791:22]
      node tval_signBit_2 = bits(dmemPagefaultAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21793:27]
      node _tval_T_9 = mux(tval_signBit_2, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21795:22]
      node _tval_T_10 = cat(_tval_T_9, dmemPagefaultAddr) @[build/NutShell.fir.opt.mlir 21797:23]
      node tval = mux(hasInstrPageFault, _tval_T_8, _tval_T_10) @[build/NutShell.fir.opt.mlir 21799:17]
      node _T_332 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 21801:19]
      when _T_332 : @[build/NutShell.fir.opt.mlir 21802:9]
        connect mtval, tval @[build/NutShell.fir.opt.mlir 21803:11]
      else :
        connect stval, tval @[build/NutShell.fir.opt.mlir 21805:11]
      regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21807:16]
      node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21809:19]
      node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 21811:19]
      connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 21812:9]
      node signBit = bits(dmemPagefaultAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21814:20]
      node _T_333 = mux(signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21816:19]
      node _T_334 = cat(_T_333, dmemPagefaultAddr) @[build/NutShell.fir.opt.mlir 21818:19]
      node _T_335 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 21820:19]
      when _T_335 : @[build/NutShell.fir.opt.mlir 21821:9]
        node _T_336 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21823:21]
        node _T_337 = eq(_T_336, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21825:21]
        when _T_337 : @[build/NutShell.fir.opt.mlir 21826:11]
          skip @[build/NutShell.fir.opt.mlir 21827:13]
        node _T_338 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21830:21]
        node _T_339 = eq(_T_338, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21832:21]
        when _T_339 : @[build/NutShell.fir.opt.mlir 21833:11]
          skip @[build/NutShell.fir.opt.mlir 21834:13]
    node _T_340 = or(hasLoadAddrMisaligned, hasStoreAddrMisaligned) @[build/NutShell.fir.opt.mlir 21839:17]
    when _T_340 : @[build/NutShell.fir.opt.mlir 21840:7]
      node mtval_signBit = bits(dmemAddrMisalignedAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21842:26]
      node _mtval_T_4 = mux(mtval_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21844:23]
      node _mtval_T_5 = cat(_mtval_T_4, dmemAddrMisalignedAddr) @[build/NutShell.fir.opt.mlir 21846:23]
      connect mtval, _mtval_T_5 @[build/NutShell.fir.opt.mlir 21847:9]
      regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21848:16]
      node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21850:19]
      node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 21852:19]
      connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 21853:9]
      node signBit_1 = bits(dmemAddrMisalignedAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21855:22]
      node _T_341 = mux(signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21857:19]
      node _T_342 = cat(_T_341, dmemAddrMisalignedAddr) @[build/NutShell.fir.opt.mlir 21859:19]
      node _T_343 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 21861:19]
      when _T_343 : @[build/NutShell.fir.opt.mlir 21862:9]
        node _T_344 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21864:21]
        node _T_345 = eq(_T_344, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21866:21]
        when _T_345 : @[build/NutShell.fir.opt.mlir 21867:11]
          skip @[build/NutShell.fir.opt.mlir 21868:13]
        node _T_346 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21871:21]
        node _T_347 = eq(_T_346, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21873:21]
        when _T_347 : @[build/NutShell.fir.opt.mlir 21874:11]
          skip @[build/NutShell.fir.opt.mlir 21875:13]
    wire mtip : UInt<1> @[build/NutShell.fir.opt.mlir 21879:15]
    connect mtip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21881:7]
    wire meip : UInt<1> @[build/NutShell.fir.opt.mlir 21882:15]
    connect meip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21884:7]
    wire msip : UInt<1> @[build/NutShell.fir.opt.mlir 21885:15]
    connect msip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21887:7]
    connect mipWire.t.m, mtip @[build/NutShell.fir.opt.mlir 21888:7]
    connect mipWire.e.m, meip @[build/NutShell.fir.opt.mlir 21889:7]
    connect mipWire.s.m, msip @[build/NutShell.fir.opt.mlir 21890:7]
    wire mipRaiseIntr : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 21891:23]
    connect mipRaiseIntr, mip @[build/NutShell.fir.opt.mlir 21907:7]
    node _mipRaiseIntr_e_s_T = or(mip.e.s, meip) @[build/NutShell.fir.opt.mlir 21909:30]
    connect mipRaiseIntr.e.s, _mipRaiseIntr_e_s_T @[build/NutShell.fir.opt.mlir 21910:7]
    node ideleg_lo = cat(mipRaiseIntr.s.s, mipRaiseIntr.s.u) @[build/NutShell.fir.opt.mlir 21912:20]
    node ideleg_hi = cat(mipRaiseIntr.s.m, mipRaiseIntr.s.h) @[build/NutShell.fir.opt.mlir 21914:20]
    node _ideleg_T = cat(ideleg_hi, ideleg_lo) @[build/NutShell.fir.opt.mlir 21916:20]
    node ideleg_lo_1 = cat(mipRaiseIntr.t.s, mipRaiseIntr.t.u) @[build/NutShell.fir.opt.mlir 21918:22]
    node ideleg_hi_1 = cat(mipRaiseIntr.t.m, mipRaiseIntr.t.h) @[build/NutShell.fir.opt.mlir 21920:22]
    node _ideleg_T_1 = cat(ideleg_hi_1, ideleg_lo_1) @[build/NutShell.fir.opt.mlir 21922:22]
    node ideleg_lo_2 = cat(mipRaiseIntr.e.s, mipRaiseIntr.e.u) @[build/NutShell.fir.opt.mlir 21924:22]
    node ideleg_hi_2 = cat(mipRaiseIntr.e.m, mipRaiseIntr.e.h) @[build/NutShell.fir.opt.mlir 21926:22]
    node _ideleg_T_2 = cat(ideleg_hi_2, ideleg_lo_2) @[build/NutShell.fir.opt.mlir 21928:22]
    node ideleg_hi_3 = cat(_ideleg_T_2, _ideleg_T_1) @[build/NutShell.fir.opt.mlir 21930:22]
    node _ideleg_T_3 = cat(ideleg_hi_3, _ideleg_T) @[build/NutShell.fir.opt.mlir 21932:22]
    node ideleg = and(mideleg, _ideleg_T_3) @[build/NutShell.fir.opt.mlir 21934:17]
    wire intrVecEnable : UInt<1>[12] @[build/NutShell.fir.opt.mlir 21935:24]
    node _T_348 = bits(ideleg, 0, 0) @[build/NutShell.fir.opt.mlir 21949:17]
    node _T_349 = bits(ideleg, 1, 1) @[build/NutShell.fir.opt.mlir 21951:17]
    node _T_350 = bits(ideleg, 2, 2) @[build/NutShell.fir.opt.mlir 21953:17]
    node _T_351 = bits(ideleg, 3, 3) @[build/NutShell.fir.opt.mlir 21955:17]
    node _T_352 = bits(ideleg, 4, 4) @[build/NutShell.fir.opt.mlir 21957:17]
    node _T_353 = bits(ideleg, 5, 5) @[build/NutShell.fir.opt.mlir 21959:17]
    node _T_354 = bits(ideleg, 6, 6) @[build/NutShell.fir.opt.mlir 21961:17]
    node _T_355 = bits(ideleg, 7, 7) @[build/NutShell.fir.opt.mlir 21963:17]
    node _T_356 = bits(ideleg, 8, 8) @[build/NutShell.fir.opt.mlir 21965:17]
    node _T_357 = bits(ideleg, 9, 9) @[build/NutShell.fir.opt.mlir 21967:17]
    node _T_358 = bits(ideleg, 10, 10) @[build/NutShell.fir.opt.mlir 21969:17]
    node _T_359 = bits(ideleg, 11, 11) @[build/NutShell.fir.opt.mlir 21971:17]
    node _T_360 = bits(ideleg, 12, 12) @[build/NutShell.fir.opt.mlir 21973:17]
    node _T_361 = bits(ideleg, 13, 13) @[build/NutShell.fir.opt.mlir 21975:17]
    node _T_362 = bits(ideleg, 14, 14) @[build/NutShell.fir.opt.mlir 21977:17]
    node _T_363 = bits(ideleg, 15, 15) @[build/NutShell.fir.opt.mlir 21979:17]
    node _T_364 = bits(ideleg, 16, 16) @[build/NutShell.fir.opt.mlir 21981:17]
    node _T_365 = bits(ideleg, 17, 17) @[build/NutShell.fir.opt.mlir 21983:17]
    node _T_366 = bits(ideleg, 18, 18) @[build/NutShell.fir.opt.mlir 21985:17]
    node _T_367 = bits(ideleg, 19, 19) @[build/NutShell.fir.opt.mlir 21987:17]
    node _T_368 = bits(ideleg, 20, 20) @[build/NutShell.fir.opt.mlir 21989:17]
    node _T_369 = bits(ideleg, 21, 21) @[build/NutShell.fir.opt.mlir 21991:17]
    node _T_370 = bits(ideleg, 22, 22) @[build/NutShell.fir.opt.mlir 21993:17]
    node _T_371 = bits(ideleg, 23, 23) @[build/NutShell.fir.opt.mlir 21995:17]
    node _T_372 = bits(ideleg, 24, 24) @[build/NutShell.fir.opt.mlir 21997:17]
    node _T_373 = bits(ideleg, 25, 25) @[build/NutShell.fir.opt.mlir 21999:17]
    node _T_374 = bits(ideleg, 26, 26) @[build/NutShell.fir.opt.mlir 22001:17]
    node _T_375 = bits(ideleg, 27, 27) @[build/NutShell.fir.opt.mlir 22003:17]
    node _T_376 = bits(ideleg, 28, 28) @[build/NutShell.fir.opt.mlir 22005:17]
    node _T_377 = bits(ideleg, 29, 29) @[build/NutShell.fir.opt.mlir 22007:17]
    node _T_378 = bits(ideleg, 30, 30) @[build/NutShell.fir.opt.mlir 22009:17]
    node _T_379 = bits(ideleg, 31, 31) @[build/NutShell.fir.opt.mlir 22011:17]
    node _T_380 = bits(ideleg, 32, 32) @[build/NutShell.fir.opt.mlir 22013:17]
    node _T_381 = bits(ideleg, 33, 33) @[build/NutShell.fir.opt.mlir 22015:17]
    node _T_382 = bits(ideleg, 34, 34) @[build/NutShell.fir.opt.mlir 22017:17]
    node _T_383 = bits(ideleg, 35, 35) @[build/NutShell.fir.opt.mlir 22019:17]
    node _T_384 = bits(ideleg, 36, 36) @[build/NutShell.fir.opt.mlir 22021:17]
    node _T_385 = bits(ideleg, 37, 37) @[build/NutShell.fir.opt.mlir 22023:17]
    node _T_386 = bits(ideleg, 38, 38) @[build/NutShell.fir.opt.mlir 22025:17]
    node _T_387 = bits(ideleg, 39, 39) @[build/NutShell.fir.opt.mlir 22027:17]
    node _T_388 = bits(ideleg, 40, 40) @[build/NutShell.fir.opt.mlir 22029:17]
    node _T_389 = bits(ideleg, 41, 41) @[build/NutShell.fir.opt.mlir 22031:17]
    node _T_390 = bits(ideleg, 42, 42) @[build/NutShell.fir.opt.mlir 22033:17]
    node _T_391 = bits(ideleg, 43, 43) @[build/NutShell.fir.opt.mlir 22035:17]
    node _T_392 = bits(ideleg, 44, 44) @[build/NutShell.fir.opt.mlir 22037:17]
    node _T_393 = bits(ideleg, 45, 45) @[build/NutShell.fir.opt.mlir 22039:17]
    node _T_394 = bits(ideleg, 46, 46) @[build/NutShell.fir.opt.mlir 22041:17]
    node _T_395 = bits(ideleg, 47, 47) @[build/NutShell.fir.opt.mlir 22043:17]
    node _T_396 = bits(ideleg, 48, 48) @[build/NutShell.fir.opt.mlir 22045:17]
    node _T_397 = bits(ideleg, 49, 49) @[build/NutShell.fir.opt.mlir 22047:17]
    node _T_398 = bits(ideleg, 50, 50) @[build/NutShell.fir.opt.mlir 22049:17]
    node _T_399 = bits(ideleg, 51, 51) @[build/NutShell.fir.opt.mlir 22051:17]
    node _T_400 = bits(ideleg, 52, 52) @[build/NutShell.fir.opt.mlir 22053:17]
    node _T_401 = bits(ideleg, 53, 53) @[build/NutShell.fir.opt.mlir 22055:17]
    node _T_402 = bits(ideleg, 54, 54) @[build/NutShell.fir.opt.mlir 22057:17]
    node _T_403 = bits(ideleg, 55, 55) @[build/NutShell.fir.opt.mlir 22059:17]
    node _T_404 = bits(ideleg, 56, 56) @[build/NutShell.fir.opt.mlir 22061:17]
    node _T_405 = bits(ideleg, 57, 57) @[build/NutShell.fir.opt.mlir 22063:17]
    node _T_406 = bits(ideleg, 58, 58) @[build/NutShell.fir.opt.mlir 22065:17]
    node _T_407 = bits(ideleg, 59, 59) @[build/NutShell.fir.opt.mlir 22067:17]
    node _T_408 = bits(ideleg, 60, 60) @[build/NutShell.fir.opt.mlir 22069:17]
    node _T_409 = bits(ideleg, 61, 61) @[build/NutShell.fir.opt.mlir 22071:17]
    node _T_410 = bits(ideleg, 62, 62) @[build/NutShell.fir.opt.mlir 22073:17]
    node _T_411 = bits(ideleg, 63, 63) @[build/NutShell.fir.opt.mlir 22075:17]
    node _intrVecEnable_0_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22077:29]
    node _intrVecEnable_0_T_1 = and(_intrVecEnable_0_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22079:31]
    node _intrVecEnable_0_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22081:31]
    node _intrVecEnable_0_T_3 = or(_intrVecEnable_0_T_1, _intrVecEnable_0_T_2) @[build/NutShell.fir.opt.mlir 22083:31]
    node _intrVecEnable_0_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22085:31]
    node _intrVecEnable_0_T_5 = and(_intrVecEnable_0_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22087:31]
    node _intrVecEnable_0_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22089:31]
    node _intrVecEnable_0_T_7 = or(_intrVecEnable_0_T_5, _intrVecEnable_0_T_6) @[build/NutShell.fir.opt.mlir 22091:31]
    node _intrVecEnable_0_T_8 = mux(_T_348, _intrVecEnable_0_T_3, _intrVecEnable_0_T_7) @[build/NutShell.fir.opt.mlir 22093:31]
    connect intrVecEnable[0], _intrVecEnable_0_T_8 @[build/NutShell.fir.opt.mlir 22094:7]
    node _intrVecEnable_1_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22096:29]
    node _intrVecEnable_1_T_1 = and(_intrVecEnable_1_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22098:31]
    node _intrVecEnable_1_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22100:31]
    node _intrVecEnable_1_T_3 = or(_intrVecEnable_1_T_1, _intrVecEnable_1_T_2) @[build/NutShell.fir.opt.mlir 22102:31]
    node _intrVecEnable_1_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22104:31]
    node _intrVecEnable_1_T_5 = and(_intrVecEnable_1_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22106:31]
    node _intrVecEnable_1_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22108:31]
    node _intrVecEnable_1_T_7 = or(_intrVecEnable_1_T_5, _intrVecEnable_1_T_6) @[build/NutShell.fir.opt.mlir 22110:31]
    node _intrVecEnable_1_T_8 = mux(_T_349, _intrVecEnable_1_T_3, _intrVecEnable_1_T_7) @[build/NutShell.fir.opt.mlir 22112:31]
    connect intrVecEnable[1], _intrVecEnable_1_T_8 @[build/NutShell.fir.opt.mlir 22113:7]
    node _intrVecEnable_2_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22115:29]
    node _intrVecEnable_2_T_1 = and(_intrVecEnable_2_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22117:31]
    node _intrVecEnable_2_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22119:31]
    node _intrVecEnable_2_T_3 = or(_intrVecEnable_2_T_1, _intrVecEnable_2_T_2) @[build/NutShell.fir.opt.mlir 22121:31]
    node _intrVecEnable_2_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22123:31]
    node _intrVecEnable_2_T_5 = and(_intrVecEnable_2_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22125:31]
    node _intrVecEnable_2_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22127:31]
    node _intrVecEnable_2_T_7 = or(_intrVecEnable_2_T_5, _intrVecEnable_2_T_6) @[build/NutShell.fir.opt.mlir 22129:31]
    node _intrVecEnable_2_T_8 = mux(_T_350, _intrVecEnable_2_T_3, _intrVecEnable_2_T_7) @[build/NutShell.fir.opt.mlir 22131:31]
    connect intrVecEnable[2], _intrVecEnable_2_T_8 @[build/NutShell.fir.opt.mlir 22132:7]
    node _intrVecEnable_3_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22134:29]
    node _intrVecEnable_3_T_1 = and(_intrVecEnable_3_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22136:31]
    node _intrVecEnable_3_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22138:31]
    node _intrVecEnable_3_T_3 = or(_intrVecEnable_3_T_1, _intrVecEnable_3_T_2) @[build/NutShell.fir.opt.mlir 22140:31]
    node _intrVecEnable_3_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22142:31]
    node _intrVecEnable_3_T_5 = and(_intrVecEnable_3_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22144:31]
    node _intrVecEnable_3_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22146:31]
    node _intrVecEnable_3_T_7 = or(_intrVecEnable_3_T_5, _intrVecEnable_3_T_6) @[build/NutShell.fir.opt.mlir 22148:31]
    node _intrVecEnable_3_T_8 = mux(_T_351, _intrVecEnable_3_T_3, _intrVecEnable_3_T_7) @[build/NutShell.fir.opt.mlir 22150:31]
    connect intrVecEnable[3], _intrVecEnable_3_T_8 @[build/NutShell.fir.opt.mlir 22151:7]
    node _intrVecEnable_4_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22153:29]
    node _intrVecEnable_4_T_1 = and(_intrVecEnable_4_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22155:31]
    node _intrVecEnable_4_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22157:31]
    node _intrVecEnable_4_T_3 = or(_intrVecEnable_4_T_1, _intrVecEnable_4_T_2) @[build/NutShell.fir.opt.mlir 22159:31]
    node _intrVecEnable_4_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22161:31]
    node _intrVecEnable_4_T_5 = and(_intrVecEnable_4_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22163:31]
    node _intrVecEnable_4_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22165:31]
    node _intrVecEnable_4_T_7 = or(_intrVecEnable_4_T_5, _intrVecEnable_4_T_6) @[build/NutShell.fir.opt.mlir 22167:31]
    node _intrVecEnable_4_T_8 = mux(_T_352, _intrVecEnable_4_T_3, _intrVecEnable_4_T_7) @[build/NutShell.fir.opt.mlir 22169:31]
    connect intrVecEnable[4], _intrVecEnable_4_T_8 @[build/NutShell.fir.opt.mlir 22170:7]
    node _intrVecEnable_5_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22172:29]
    node _intrVecEnable_5_T_1 = and(_intrVecEnable_5_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22174:31]
    node _intrVecEnable_5_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22176:31]
    node _intrVecEnable_5_T_3 = or(_intrVecEnable_5_T_1, _intrVecEnable_5_T_2) @[build/NutShell.fir.opt.mlir 22178:31]
    node _intrVecEnable_5_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22180:31]
    node _intrVecEnable_5_T_5 = and(_intrVecEnable_5_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22182:31]
    node _intrVecEnable_5_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22184:31]
    node _intrVecEnable_5_T_7 = or(_intrVecEnable_5_T_5, _intrVecEnable_5_T_6) @[build/NutShell.fir.opt.mlir 22186:31]
    node _intrVecEnable_5_T_8 = mux(_T_353, _intrVecEnable_5_T_3, _intrVecEnable_5_T_7) @[build/NutShell.fir.opt.mlir 22188:31]
    connect intrVecEnable[5], _intrVecEnable_5_T_8 @[build/NutShell.fir.opt.mlir 22189:7]
    node _intrVecEnable_6_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22191:29]
    node _intrVecEnable_6_T_1 = and(_intrVecEnable_6_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22193:31]
    node _intrVecEnable_6_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22195:31]
    node _intrVecEnable_6_T_3 = or(_intrVecEnable_6_T_1, _intrVecEnable_6_T_2) @[build/NutShell.fir.opt.mlir 22197:31]
    node _intrVecEnable_6_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22199:31]
    node _intrVecEnable_6_T_5 = and(_intrVecEnable_6_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22201:31]
    node _intrVecEnable_6_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22203:31]
    node _intrVecEnable_6_T_7 = or(_intrVecEnable_6_T_5, _intrVecEnable_6_T_6) @[build/NutShell.fir.opt.mlir 22205:31]
    node _intrVecEnable_6_T_8 = mux(_T_354, _intrVecEnable_6_T_3, _intrVecEnable_6_T_7) @[build/NutShell.fir.opt.mlir 22207:31]
    connect intrVecEnable[6], _intrVecEnable_6_T_8 @[build/NutShell.fir.opt.mlir 22208:7]
    node _intrVecEnable_7_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22210:29]
    node _intrVecEnable_7_T_1 = and(_intrVecEnable_7_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22212:31]
    node _intrVecEnable_7_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22214:31]
    node _intrVecEnable_7_T_3 = or(_intrVecEnable_7_T_1, _intrVecEnable_7_T_2) @[build/NutShell.fir.opt.mlir 22216:31]
    node _intrVecEnable_7_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22218:31]
    node _intrVecEnable_7_T_5 = and(_intrVecEnable_7_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22220:31]
    node _intrVecEnable_7_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22222:31]
    node _intrVecEnable_7_T_7 = or(_intrVecEnable_7_T_5, _intrVecEnable_7_T_6) @[build/NutShell.fir.opt.mlir 22224:31]
    node _intrVecEnable_7_T_8 = mux(_T_355, _intrVecEnable_7_T_3, _intrVecEnable_7_T_7) @[build/NutShell.fir.opt.mlir 22226:31]
    connect intrVecEnable[7], _intrVecEnable_7_T_8 @[build/NutShell.fir.opt.mlir 22227:7]
    node _intrVecEnable_8_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22229:29]
    node _intrVecEnable_8_T_1 = and(_intrVecEnable_8_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22231:31]
    node _intrVecEnable_8_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22233:31]
    node _intrVecEnable_8_T_3 = or(_intrVecEnable_8_T_1, _intrVecEnable_8_T_2) @[build/NutShell.fir.opt.mlir 22235:31]
    node _intrVecEnable_8_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22237:31]
    node _intrVecEnable_8_T_5 = and(_intrVecEnable_8_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22239:31]
    node _intrVecEnable_8_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22241:31]
    node _intrVecEnable_8_T_7 = or(_intrVecEnable_8_T_5, _intrVecEnable_8_T_6) @[build/NutShell.fir.opt.mlir 22243:31]
    node _intrVecEnable_8_T_8 = mux(_T_356, _intrVecEnable_8_T_3, _intrVecEnable_8_T_7) @[build/NutShell.fir.opt.mlir 22245:31]
    connect intrVecEnable[8], _intrVecEnable_8_T_8 @[build/NutShell.fir.opt.mlir 22246:7]
    node _intrVecEnable_9_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22248:29]
    node _intrVecEnable_9_T_1 = and(_intrVecEnable_9_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22250:31]
    node _intrVecEnable_9_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22252:31]
    node _intrVecEnable_9_T_3 = or(_intrVecEnable_9_T_1, _intrVecEnable_9_T_2) @[build/NutShell.fir.opt.mlir 22254:31]
    node _intrVecEnable_9_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22256:31]
    node _intrVecEnable_9_T_5 = and(_intrVecEnable_9_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22258:31]
    node _intrVecEnable_9_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22260:31]
    node _intrVecEnable_9_T_7 = or(_intrVecEnable_9_T_5, _intrVecEnable_9_T_6) @[build/NutShell.fir.opt.mlir 22262:31]
    node _intrVecEnable_9_T_8 = mux(_T_357, _intrVecEnable_9_T_3, _intrVecEnable_9_T_7) @[build/NutShell.fir.opt.mlir 22264:31]
    connect intrVecEnable[9], _intrVecEnable_9_T_8 @[build/NutShell.fir.opt.mlir 22265:7]
    node _intrVecEnable_10_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22267:30]
    node _intrVecEnable_10_T_1 = and(_intrVecEnable_10_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22269:32]
    node _intrVecEnable_10_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22271:32]
    node _intrVecEnable_10_T_3 = or(_intrVecEnable_10_T_1, _intrVecEnable_10_T_2) @[build/NutShell.fir.opt.mlir 22273:32]
    node _intrVecEnable_10_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22275:32]
    node _intrVecEnable_10_T_5 = and(_intrVecEnable_10_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22277:32]
    node _intrVecEnable_10_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22279:32]
    node _intrVecEnable_10_T_7 = or(_intrVecEnable_10_T_5, _intrVecEnable_10_T_6) @[build/NutShell.fir.opt.mlir 22281:32]
    node _intrVecEnable_10_T_8 = mux(_T_358, _intrVecEnable_10_T_3, _intrVecEnable_10_T_7) @[build/NutShell.fir.opt.mlir 22283:32]
    connect intrVecEnable[10], _intrVecEnable_10_T_8 @[build/NutShell.fir.opt.mlir 22284:7]
    node _intrVecEnable_11_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22286:30]
    node _intrVecEnable_11_T_1 = and(_intrVecEnable_11_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22288:32]
    node _intrVecEnable_11_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22290:32]
    node _intrVecEnable_11_T_3 = or(_intrVecEnable_11_T_1, _intrVecEnable_11_T_2) @[build/NutShell.fir.opt.mlir 22292:32]
    node _intrVecEnable_11_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22294:32]
    node _intrVecEnable_11_T_5 = and(_intrVecEnable_11_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22296:32]
    node _intrVecEnable_11_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22298:32]
    node _intrVecEnable_11_T_7 = or(_intrVecEnable_11_T_5, _intrVecEnable_11_T_6) @[build/NutShell.fir.opt.mlir 22300:32]
    node _intrVecEnable_11_T_8 = mux(_T_359, _intrVecEnable_11_T_3, _intrVecEnable_11_T_7) @[build/NutShell.fir.opt.mlir 22302:32]
    connect intrVecEnable[11], _intrVecEnable_11_T_8 @[build/NutShell.fir.opt.mlir 22303:7]
    node _intrVec_T = bits(mie, 11, 0) @[build/NutShell.fir.opt.mlir 22305:21]
    node intrVec_lo = cat(mipRaiseIntr.s.s, mipRaiseIntr.s.u) @[build/NutShell.fir.opt.mlir 22307:21]
    node intrVec_hi = cat(mipRaiseIntr.s.m, mipRaiseIntr.s.h) @[build/NutShell.fir.opt.mlir 22309:21]
    node _intrVec_T_1 = cat(intrVec_hi, intrVec_lo) @[build/NutShell.fir.opt.mlir 22311:23]
    node intrVec_lo_1 = cat(mipRaiseIntr.t.s, mipRaiseIntr.t.u) @[build/NutShell.fir.opt.mlir 22313:23]
    node intrVec_hi_1 = cat(mipRaiseIntr.t.m, mipRaiseIntr.t.h) @[build/NutShell.fir.opt.mlir 22315:23]
    node _intrVec_T_2 = cat(intrVec_hi_1, intrVec_lo_1) @[build/NutShell.fir.opt.mlir 22317:23]
    node intrVec_lo_2 = cat(mipRaiseIntr.e.s, mipRaiseIntr.e.u) @[build/NutShell.fir.opt.mlir 22319:23]
    node intrVec_hi_2 = cat(mipRaiseIntr.e.m, mipRaiseIntr.e.h) @[build/NutShell.fir.opt.mlir 22321:23]
    node _intrVec_T_3 = cat(intrVec_hi_2, intrVec_lo_2) @[build/NutShell.fir.opt.mlir 22323:23]
    node intrVec_hi_3 = cat(_intrVec_T_3, _intrVec_T_2) @[build/NutShell.fir.opt.mlir 22325:23]
    node _intrVec_T_4 = cat(intrVec_hi_3, _intrVec_T_1) @[build/NutShell.fir.opt.mlir 22327:23]
    node _intrVec_T_5 = and(_intrVec_T, _intrVec_T_4) @[build/NutShell.fir.opt.mlir 22329:23]
    node intrVec_lo_lo_hi = cat(intrVecEnable[2], intrVecEnable[1]) @[build/NutShell.fir.opt.mlir 22331:27]
    node intrVec_lo_lo = cat(intrVec_lo_lo_hi, intrVecEnable[0]) @[build/NutShell.fir.opt.mlir 22333:24]
    node intrVec_lo_hi_hi = cat(intrVecEnable[5], intrVecEnable[4]) @[build/NutShell.fir.opt.mlir 22335:27]
    node intrVec_lo_hi = cat(intrVec_lo_hi_hi, intrVecEnable[3]) @[build/NutShell.fir.opt.mlir 22337:24]
    node intrVec_lo_3 = cat(intrVec_lo_hi, intrVec_lo_lo) @[build/NutShell.fir.opt.mlir 22339:23]
    node intrVec_hi_lo_hi = cat(intrVecEnable[8], intrVecEnable[7]) @[build/NutShell.fir.opt.mlir 22341:27]
    node intrVec_hi_lo = cat(intrVec_hi_lo_hi, intrVecEnable[6]) @[build/NutShell.fir.opt.mlir 22343:24]
    node intrVec_hi_hi_hi = cat(intrVecEnable[11], intrVecEnable[10]) @[build/NutShell.fir.opt.mlir 22345:27]
    node intrVec_hi_hi = cat(intrVec_hi_hi_hi, intrVecEnable[9]) @[build/NutShell.fir.opt.mlir 22347:24]
    node intrVec_hi_4 = cat(intrVec_hi_hi, intrVec_hi_lo) @[build/NutShell.fir.opt.mlir 22349:23]
    node _intrVec_T_6 = cat(intrVec_hi_4, intrVec_lo_3) @[build/NutShell.fir.opt.mlir 22351:23]
    node intrVec = and(_intrVec_T_5, _intrVec_T_6) @[build/NutShell.fir.opt.mlir 22353:18]
    wire _WIRE : UInt @[build/NutShell.fir.opt.mlir 22354:16]
    connect _WIRE, intrVec @[build/NutShell.fir.opt.mlir 22355:7]
    node _intrNO_T = mux(io.cfIn.intrVec[4], UInt<3>(4), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22358:20]
    node _intrNO_T_1 = mux(io.cfIn.intrVec[8], UInt<4>(8), _intrNO_T) @[build/NutShell.fir.opt.mlir 22360:22]
    node _intrNO_T_2 = mux(io.cfIn.intrVec[0], UInt<1>(0), _intrNO_T_1) @[build/NutShell.fir.opt.mlir 22362:22]
    node _intrNO_T_3 = mux(io.cfIn.intrVec[5], UInt<3>(5), _intrNO_T_2) @[build/NutShell.fir.opt.mlir 22364:22]
    node _intrNO_T_4 = mux(io.cfIn.intrVec[9], UInt<4>(9), _intrNO_T_3) @[build/NutShell.fir.opt.mlir 22367:22]
    node _intrNO_T_5 = mux(io.cfIn.intrVec[1], UInt<1>(1), _intrNO_T_4) @[build/NutShell.fir.opt.mlir 22369:22]
    node _intrNO_T_6 = mux(io.cfIn.intrVec[7], UInt<3>(7), _intrNO_T_5) @[build/NutShell.fir.opt.mlir 22371:22]
    node _intrNO_T_7 = mux(io.cfIn.intrVec[11], UInt<4>(11), _intrNO_T_6) @[build/NutShell.fir.opt.mlir 22374:22]
    node intrNO = mux(io.cfIn.intrVec[3], UInt<2>(3), _intrNO_T_7) @[build/NutShell.fir.opt.mlir 22376:17]
    node raiseIntr_lo_lo_hi = cat(io.cfIn.intrVec[2], io.cfIn.intrVec[1]) @[build/NutShell.fir.opt.mlir 22378:29]
    node raiseIntr_lo_lo = cat(raiseIntr_lo_lo_hi, io.cfIn.intrVec[0]) @[build/NutShell.fir.opt.mlir 22380:26]
    node raiseIntr_lo_hi_hi = cat(io.cfIn.intrVec[5], io.cfIn.intrVec[4]) @[build/NutShell.fir.opt.mlir 22382:29]
    node raiseIntr_lo_hi = cat(raiseIntr_lo_hi_hi, io.cfIn.intrVec[3]) @[build/NutShell.fir.opt.mlir 22384:26]
    node raiseIntr_lo = cat(raiseIntr_lo_hi, raiseIntr_lo_lo) @[build/NutShell.fir.opt.mlir 22386:23]
    node raiseIntr_hi_lo_hi = cat(io.cfIn.intrVec[8], io.cfIn.intrVec[7]) @[build/NutShell.fir.opt.mlir 22388:29]
    node raiseIntr_hi_lo = cat(raiseIntr_hi_lo_hi, io.cfIn.intrVec[6]) @[build/NutShell.fir.opt.mlir 22390:26]
    node raiseIntr_hi_hi_hi = cat(io.cfIn.intrVec[11], io.cfIn.intrVec[10]) @[build/NutShell.fir.opt.mlir 22392:29]
    node raiseIntr_hi_hi = cat(raiseIntr_hi_hi_hi, io.cfIn.intrVec[9]) @[build/NutShell.fir.opt.mlir 22394:26]
    node raiseIntr_hi = cat(raiseIntr_hi_hi, raiseIntr_hi_lo) @[build/NutShell.fir.opt.mlir 22396:23]
    node _raiseIntr_T = cat(raiseIntr_hi, raiseIntr_lo) @[build/NutShell.fir.opt.mlir 22398:23]
    node raiseIntr = orr(_raiseIntr_T) @[build/NutShell.fir.opt.mlir 22400:20]
    wire csrExceptionVec : UInt<1>[16] @[build/NutShell.fir.opt.mlir 22401:26]
    connect csrExceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22419:7]
    connect csrExceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22421:7]
    connect csrExceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22423:7]
    connect csrExceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22425:7]
    connect csrExceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22427:7]
    connect csrExceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22429:7]
    connect csrExceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22431:7]
    connect csrExceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22433:7]
    connect csrExceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22435:7]
    connect csrExceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22437:7]
    connect csrExceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22439:7]
    connect csrExceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22441:7]
    connect csrExceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22443:7]
    connect csrExceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22445:7]
    connect csrExceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22447:7]
    connect csrExceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22449:7]
    node _csrExceptionVec_3_T = and(io.in.valid, isEbreak) @[build/NutShell.fir.opt.mlir 22451:31]
    connect csrExceptionVec[3], _csrExceptionVec_3_T @[build/NutShell.fir.opt.mlir 22452:7]
    node _csrExceptionVec_11_T = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22454:32]
    node _csrExceptionVec_11_T_1 = and(_csrExceptionVec_11_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22456:34]
    node _csrExceptionVec_11_T_2 = and(_csrExceptionVec_11_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22458:34]
    connect csrExceptionVec[11], _csrExceptionVec_11_T_2 @[build/NutShell.fir.opt.mlir 22459:7]
    node _csrExceptionVec_9_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22461:31]
    node _csrExceptionVec_9_T_1 = and(_csrExceptionVec_9_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22463:33]
    node _csrExceptionVec_9_T_2 = and(_csrExceptionVec_9_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22465:33]
    connect csrExceptionVec[9], _csrExceptionVec_9_T_2 @[build/NutShell.fir.opt.mlir 22466:7]
    node _csrExceptionVec_8_T = eq(privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22468:31]
    node _csrExceptionVec_8_T_1 = and(_csrExceptionVec_8_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22470:33]
    node _csrExceptionVec_8_T_2 = and(_csrExceptionVec_8_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22472:33]
    connect csrExceptionVec[8], _csrExceptionVec_8_T_2 @[build/NutShell.fir.opt.mlir 22473:7]
    node _csrExceptionVec_2_T = or(isIllegalAddr, isIllegalAccess) @[build/NutShell.fir.opt.mlir 22475:31]
    node _csrExceptionVec_2_T_1 = and(_csrExceptionVec_2_T, wen) @[build/NutShell.fir.opt.mlir 22477:33]
    node _csrExceptionVec_2_T_2 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22479:33]
    node _csrExceptionVec_2_T_3 = and(_csrExceptionVec_2_T_1, _csrExceptionVec_2_T_2) @[build/NutShell.fir.opt.mlir 22481:33]
    connect csrExceptionVec[2], _csrExceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 22482:7]
    connect csrExceptionVec[13], hasLoadPageFault @[build/NutShell.fir.opt.mlir 22483:7]
    connect csrExceptionVec[15], hasStorePageFault @[build/NutShell.fir.opt.mlir 22484:7]
    node raiseExceptionVec_lo_lo_lo = cat(csrExceptionVec[1], csrExceptionVec[0]) @[build/NutShell.fir.opt.mlir 22486:37]
    node raiseExceptionVec_lo_lo_hi = cat(csrExceptionVec[3], csrExceptionVec[2]) @[build/NutShell.fir.opt.mlir 22488:37]
    node raiseExceptionVec_lo_lo = cat(raiseExceptionVec_lo_lo_hi, raiseExceptionVec_lo_lo_lo) @[build/NutShell.fir.opt.mlir 22490:34]
    node raiseExceptionVec_lo_hi_lo = cat(csrExceptionVec[5], csrExceptionVec[4]) @[build/NutShell.fir.opt.mlir 22492:37]
    node raiseExceptionVec_lo_hi_hi = cat(csrExceptionVec[7], csrExceptionVec[6]) @[build/NutShell.fir.opt.mlir 22494:37]
    node raiseExceptionVec_lo_hi = cat(raiseExceptionVec_lo_hi_hi, raiseExceptionVec_lo_hi_lo) @[build/NutShell.fir.opt.mlir 22496:34]
    node raiseExceptionVec_lo = cat(raiseExceptionVec_lo_hi, raiseExceptionVec_lo_lo) @[build/NutShell.fir.opt.mlir 22498:31]
    node raiseExceptionVec_hi_lo_lo = cat(csrExceptionVec[9], csrExceptionVec[8]) @[build/NutShell.fir.opt.mlir 22500:37]
    node raiseExceptionVec_hi_lo_hi = cat(csrExceptionVec[11], csrExceptionVec[10]) @[build/NutShell.fir.opt.mlir 22502:37]
    node raiseExceptionVec_hi_lo = cat(raiseExceptionVec_hi_lo_hi, raiseExceptionVec_hi_lo_lo) @[build/NutShell.fir.opt.mlir 22504:34]
    node raiseExceptionVec_hi_hi_lo = cat(csrExceptionVec[13], csrExceptionVec[12]) @[build/NutShell.fir.opt.mlir 22506:37]
    node raiseExceptionVec_hi_hi_hi = cat(csrExceptionVec[15], csrExceptionVec[14]) @[build/NutShell.fir.opt.mlir 22508:37]
    node raiseExceptionVec_hi_hi = cat(raiseExceptionVec_hi_hi_hi, raiseExceptionVec_hi_hi_lo) @[build/NutShell.fir.opt.mlir 22510:34]
    node raiseExceptionVec_hi = cat(raiseExceptionVec_hi_hi, raiseExceptionVec_hi_lo) @[build/NutShell.fir.opt.mlir 22512:31]
    node _raiseExceptionVec_T = cat(raiseExceptionVec_hi, raiseExceptionVec_lo) @[build/NutShell.fir.opt.mlir 22514:31]
    node raiseExceptionVec_lo_lo_lo_1 = cat(io.cfIn.exceptionVec[1], io.cfIn.exceptionVec[0]) @[build/NutShell.fir.opt.mlir 22516:39]
    node raiseExceptionVec_lo_lo_hi_1 = cat(io.cfIn.exceptionVec[3], io.cfIn.exceptionVec[2]) @[build/NutShell.fir.opt.mlir 22518:39]
    node raiseExceptionVec_lo_lo_1 = cat(raiseExceptionVec_lo_lo_hi_1, raiseExceptionVec_lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 22520:36]
    node raiseExceptionVec_lo_hi_lo_1 = cat(io.cfIn.exceptionVec[5], io.cfIn.exceptionVec[4]) @[build/NutShell.fir.opt.mlir 22522:39]
    node raiseExceptionVec_lo_hi_hi_1 = cat(io.cfIn.exceptionVec[7], io.cfIn.exceptionVec[6]) @[build/NutShell.fir.opt.mlir 22524:39]
    node raiseExceptionVec_lo_hi_1 = cat(raiseExceptionVec_lo_hi_hi_1, raiseExceptionVec_lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 22526:36]
    node raiseExceptionVec_lo_1 = cat(raiseExceptionVec_lo_hi_1, raiseExceptionVec_lo_lo_1) @[build/NutShell.fir.opt.mlir 22528:33]
    node raiseExceptionVec_hi_lo_lo_1 = cat(io.cfIn.exceptionVec[9], io.cfIn.exceptionVec[8]) @[build/NutShell.fir.opt.mlir 22530:39]
    node raiseExceptionVec_hi_lo_hi_1 = cat(io.cfIn.exceptionVec[11], io.cfIn.exceptionVec[10]) @[build/NutShell.fir.opt.mlir 22532:39]
    node raiseExceptionVec_hi_lo_1 = cat(raiseExceptionVec_hi_lo_hi_1, raiseExceptionVec_hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 22534:36]
    node raiseExceptionVec_hi_hi_lo_1 = cat(io.cfIn.exceptionVec[13], io.cfIn.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 22536:39]
    node raiseExceptionVec_hi_hi_hi_1 = cat(io.cfIn.exceptionVec[15], io.cfIn.exceptionVec[14]) @[build/NutShell.fir.opt.mlir 22538:39]
    node raiseExceptionVec_hi_hi_1 = cat(raiseExceptionVec_hi_hi_hi_1, raiseExceptionVec_hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 22540:36]
    node raiseExceptionVec_hi_1 = cat(raiseExceptionVec_hi_hi_1, raiseExceptionVec_hi_lo_1) @[build/NutShell.fir.opt.mlir 22542:33]
    node _raiseExceptionVec_T_1 = cat(raiseExceptionVec_hi_1, raiseExceptionVec_lo_1) @[build/NutShell.fir.opt.mlir 22544:33]
    node raiseExceptionVec = or(_raiseExceptionVec_T, _raiseExceptionVec_T_1) @[build/NutShell.fir.opt.mlir 22546:28]
    node raiseException = orr(raiseExceptionVec) @[build/NutShell.fir.opt.mlir 22548:25]
    node _exceptionNO_T = bits(raiseExceptionVec, 5, 5) @[build/NutShell.fir.opt.mlir 22550:25]
    node _exceptionNO_T_1 = mux(_exceptionNO_T, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22552:27]
    node _exceptionNO_T_2 = bits(raiseExceptionVec, 7, 7) @[build/NutShell.fir.opt.mlir 22554:27]
    node _exceptionNO_T_3 = mux(_exceptionNO_T_2, UInt<3>(7), _exceptionNO_T_1) @[build/NutShell.fir.opt.mlir 22556:27]
    node _exceptionNO_T_4 = bits(raiseExceptionVec, 13, 13) @[build/NutShell.fir.opt.mlir 22558:27]
    node _exceptionNO_T_5 = mux(_exceptionNO_T_4, UInt<4>(13), _exceptionNO_T_3) @[build/NutShell.fir.opt.mlir 22561:27]
    node _exceptionNO_T_6 = bits(raiseExceptionVec, 15, 15) @[build/NutShell.fir.opt.mlir 22563:27]
    node _exceptionNO_T_7 = mux(_exceptionNO_T_6, UInt<4>(15), _exceptionNO_T_5) @[build/NutShell.fir.opt.mlir 22565:27]
    node _exceptionNO_T_8 = bits(raiseExceptionVec, 4, 4) @[build/NutShell.fir.opt.mlir 22567:27]
    node _exceptionNO_T_9 = mux(_exceptionNO_T_8, UInt<3>(4), _exceptionNO_T_7) @[build/NutShell.fir.opt.mlir 22569:27]
    node _exceptionNO_T_10 = bits(raiseExceptionVec, 6, 6) @[build/NutShell.fir.opt.mlir 22571:28]
    node _exceptionNO_T_11 = mux(_exceptionNO_T_10, UInt<3>(6), _exceptionNO_T_9) @[build/NutShell.fir.opt.mlir 22573:28]
    node _exceptionNO_T_12 = bits(raiseExceptionVec, 8, 8) @[build/NutShell.fir.opt.mlir 22575:28]
    node _exceptionNO_T_13 = mux(_exceptionNO_T_12, UInt<4>(8), _exceptionNO_T_11) @[build/NutShell.fir.opt.mlir 22577:28]
    node _exceptionNO_T_14 = bits(raiseExceptionVec, 9, 9) @[build/NutShell.fir.opt.mlir 22579:28]
    node _exceptionNO_T_15 = mux(_exceptionNO_T_14, UInt<4>(9), _exceptionNO_T_13) @[build/NutShell.fir.opt.mlir 22581:28]
    node _exceptionNO_T_16 = bits(raiseExceptionVec, 11, 11) @[build/NutShell.fir.opt.mlir 22583:28]
    node _exceptionNO_T_17 = mux(_exceptionNO_T_16, UInt<4>(11), _exceptionNO_T_15) @[build/NutShell.fir.opt.mlir 22585:28]
    node _exceptionNO_T_18 = bits(raiseExceptionVec, 0, 0) @[build/NutShell.fir.opt.mlir 22587:28]
    node _exceptionNO_T_19 = mux(_exceptionNO_T_18, UInt<1>(0), _exceptionNO_T_17) @[build/NutShell.fir.opt.mlir 22589:28]
    node _exceptionNO_T_20 = bits(raiseExceptionVec, 2, 2) @[build/NutShell.fir.opt.mlir 22591:28]
    node _exceptionNO_T_21 = mux(_exceptionNO_T_20, UInt<2>(2), _exceptionNO_T_19) @[build/NutShell.fir.opt.mlir 22593:28]
    node _exceptionNO_T_22 = bits(raiseExceptionVec, 1, 1) @[build/NutShell.fir.opt.mlir 22595:28]
    node _exceptionNO_T_23 = mux(_exceptionNO_T_22, UInt<1>(1), _exceptionNO_T_21) @[build/NutShell.fir.opt.mlir 22597:28]
    node _exceptionNO_T_24 = bits(raiseExceptionVec, 12, 12) @[build/NutShell.fir.opt.mlir 22599:28]
    node _exceptionNO_T_25 = mux(_exceptionNO_T_24, UInt<4>(12), _exceptionNO_T_23) @[build/NutShell.fir.opt.mlir 22602:28]
    node _exceptionNO_T_26 = bits(raiseExceptionVec, 3, 3) @[build/NutShell.fir.opt.mlir 22604:28]
    node exceptionNO = mux(_exceptionNO_T_26, UInt<2>(3), _exceptionNO_T_25) @[build/NutShell.fir.opt.mlir 22606:22]
    connect io.wenFix, raiseException @[build/NutShell.fir.opt.mlir 22607:7]
    node _causeNO_T = shl(raiseIntr, 63) @[build/NutShell.fir.opt.mlir 22609:21]
    node _causeNO_T_1 = mux(raiseIntr, intrNO, exceptionNO) @[build/NutShell.fir.opt.mlir 22611:23]
    node causeNO = or(_causeNO_T, _causeNO_T_1) @[build/NutShell.fir.opt.mlir 22613:18]
    node _io_intrNO_T = mux(raiseIntr, causeNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22615:23]
    connect io.intrNO, _io_intrNO_T @[build/NutShell.fir.opt.mlir 22616:7]
    node _raiseExceptionIntr_T = or(raiseException, raiseIntr) @[build/NutShell.fir.opt.mlir 22618:32]
    node raiseExceptionIntr = and(_raiseExceptionIntr_T, io.instrValid) @[build/NutShell.fir.opt.mlir 22620:29]
    wire retTarget : UInt<39> @[build/NutShell.fir.opt.mlir 22621:20]
    wire trapTarget : UInt<39> @[build/NutShell.fir.opt.mlir 22622:21]
    node _io_redirect_valid_T = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22624:31]
    node _io_redirect_valid_T_1 = and(io.in.valid, _io_redirect_valid_T) @[build/NutShell.fir.opt.mlir 22626:33]
    node _io_redirect_valid_T_2 = or(_io_redirect_valid_T_1, raiseExceptionIntr) @[build/NutShell.fir.opt.mlir 22628:33]
    node _io_redirect_valid_T_3 = or(_io_redirect_valid_T_2, resetSatp) @[build/NutShell.fir.opt.mlir 22630:33]
    connect io.redirect.valid, _io_redirect_valid_T_3 @[build/NutShell.fir.opt.mlir 22631:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 22633:7]
    node _io_redirect_target_T = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 22635:32]
    node _io_redirect_target_T_1 = tail(_io_redirect_target_T, 1) @[build/NutShell.fir.opt.mlir 22637:34]
    node _io_redirect_target_T_2 = mux(raiseExceptionIntr, trapTarget, retTarget) @[build/NutShell.fir.opt.mlir 22639:34]
    node _io_redirect_target_T_3 = mux(resetSatp, _io_redirect_target_T_1, _io_redirect_target_T_2) @[build/NutShell.fir.opt.mlir 22641:34]
    connect io.redirect.target, _io_redirect_target_T_3 @[build/NutShell.fir.opt.mlir 22642:7]
    node lo_lo_lo = cat(csrExceptionVec[1], csrExceptionVec[0]) @[build/NutShell.fir.opt.mlir 22644:19]
    node lo_lo_hi = cat(csrExceptionVec[3], csrExceptionVec[2]) @[build/NutShell.fir.opt.mlir 22646:19]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[build/NutShell.fir.opt.mlir 22648:16]
    node lo_hi_lo = cat(csrExceptionVec[5], csrExceptionVec[4]) @[build/NutShell.fir.opt.mlir 22650:19]
    node lo_hi_hi = cat(csrExceptionVec[7], csrExceptionVec[6]) @[build/NutShell.fir.opt.mlir 22652:19]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[build/NutShell.fir.opt.mlir 22654:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 22656:13]
    node hi_lo_lo = cat(csrExceptionVec[9], csrExceptionVec[8]) @[build/NutShell.fir.opt.mlir 22658:19]
    node hi_lo_hi = cat(csrExceptionVec[11], csrExceptionVec[10]) @[build/NutShell.fir.opt.mlir 22660:19]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[build/NutShell.fir.opt.mlir 22662:16]
    node hi_hi_lo = cat(csrExceptionVec[13], csrExceptionVec[12]) @[build/NutShell.fir.opt.mlir 22664:19]
    node hi_hi_hi = cat(csrExceptionVec[15], csrExceptionVec[14]) @[build/NutShell.fir.opt.mlir 22666:19]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[build/NutShell.fir.opt.mlir 22668:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 22670:13]
    node _T_412 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 22672:17]
    node lo_lo_lo_1 = cat(io.cfIn.exceptionVec[1], io.cfIn.exceptionVec[0]) @[build/NutShell.fir.opt.mlir 22674:21]
    node lo_lo_hi_1 = cat(io.cfIn.exceptionVec[3], io.cfIn.exceptionVec[2]) @[build/NutShell.fir.opt.mlir 22676:21]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 22678:18]
    node lo_hi_lo_1 = cat(io.cfIn.exceptionVec[5], io.cfIn.exceptionVec[4]) @[build/NutShell.fir.opt.mlir 22680:21]
    node lo_hi_hi_1 = cat(io.cfIn.exceptionVec[7], io.cfIn.exceptionVec[6]) @[build/NutShell.fir.opt.mlir 22682:21]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 22684:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 22686:15]
    node hi_lo_lo_1 = cat(io.cfIn.exceptionVec[9], io.cfIn.exceptionVec[8]) @[build/NutShell.fir.opt.mlir 22688:21]
    node hi_lo_hi_1 = cat(io.cfIn.exceptionVec[11], io.cfIn.exceptionVec[10]) @[build/NutShell.fir.opt.mlir 22690:21]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 22692:18]
    node hi_hi_lo_1 = cat(io.cfIn.exceptionVec[13], io.cfIn.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 22694:21]
    node hi_hi_hi_1 = cat(io.cfIn.exceptionVec[15], io.cfIn.exceptionVec[14]) @[build/NutShell.fir.opt.mlir 22696:21]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 22698:18]
    node hi_1 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 22700:15]
    node _T_413 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 22702:17]
    node _T_414 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22704:17]
    when _T_414 : @[build/NutShell.fir.opt.mlir 22705:7]
      node _T_415 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22707:19]
      node _T_416 = eq(_T_415, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22709:19]
      when _T_416 : @[build/NutShell.fir.opt.mlir 22710:9]
        skip @[build/NutShell.fir.opt.mlir 22711:11]
      node _T_417 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22714:19]
      node _T_418 = eq(_T_417, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22716:19]
      when _T_418 : @[build/NutShell.fir.opt.mlir 22717:9]
        skip @[build/NutShell.fir.opt.mlir 22718:11]
    node lo_lo_hi_2 = cat(io.cfIn.intrVec[2], io.cfIn.intrVec[1]) @[build/NutShell.fir.opt.mlir 22722:21]
    node lo_lo_2 = cat(lo_lo_hi_2, io.cfIn.intrVec[0]) @[build/NutShell.fir.opt.mlir 22724:18]
    node lo_hi_hi_2 = cat(io.cfIn.intrVec[5], io.cfIn.intrVec[4]) @[build/NutShell.fir.opt.mlir 22726:21]
    node lo_hi_2 = cat(lo_hi_hi_2, io.cfIn.intrVec[3]) @[build/NutShell.fir.opt.mlir 22728:18]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[build/NutShell.fir.opt.mlir 22730:15]
    node hi_lo_hi_2 = cat(io.cfIn.intrVec[8], io.cfIn.intrVec[7]) @[build/NutShell.fir.opt.mlir 22732:21]
    node hi_lo_2 = cat(hi_lo_hi_2, io.cfIn.intrVec[6]) @[build/NutShell.fir.opt.mlir 22734:18]
    node hi_hi_hi_2 = cat(io.cfIn.intrVec[11], io.cfIn.intrVec[10]) @[build/NutShell.fir.opt.mlir 22736:21]
    node hi_hi_2 = cat(hi_hi_hi_2, io.cfIn.intrVec[9]) @[build/NutShell.fir.opt.mlir 22738:18]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[build/NutShell.fir.opt.mlir 22740:15]
    node _T_419 = cat(hi_2, lo_2) @[build/NutShell.fir.opt.mlir 22742:17]
    node _T_420 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22744:17]
    when _T_420 : @[build/NutShell.fir.opt.mlir 22745:7]
      node _T_421 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22747:19]
      node _T_422 = eq(_T_421, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22749:19]
      when _T_422 : @[build/NutShell.fir.opt.mlir 22750:9]
        skip @[build/NutShell.fir.opt.mlir 22751:11]
      node _T_423 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22754:19]
      node _T_424 = eq(_T_423, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22756:19]
      when _T_424 : @[build/NutShell.fir.opt.mlir 22757:9]
        skip @[build/NutShell.fir.opt.mlir 22758:11]
    regreset c_3 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 22761:14]
    node _c_T_6 = add(c_3, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22763:17]
    node _c_T_7 = tail(_c_T_6, 1) @[build/NutShell.fir.opt.mlir 22765:17]
    connect c_3, _c_T_7 @[build/NutShell.fir.opt.mlir 22766:7]
    node _T_425 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22768:17]
    when _T_425 : @[build/NutShell.fir.opt.mlir 22769:7]
      node _T_426 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22771:19]
      node _T_427 = eq(_T_426, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22773:19]
      when _T_427 : @[build/NutShell.fir.opt.mlir 22774:9]
        skip @[build/NutShell.fir.opt.mlir 22775:11]
      node _T_428 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22778:19]
      node _T_429 = eq(_T_428, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22780:19]
      when _T_429 : @[build/NutShell.fir.opt.mlir 22781:9]
        skip @[build/NutShell.fir.opt.mlir 22782:11]
    node _T_430 = and(io.redirect.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22786:17]
    when _T_430 : @[build/NutShell.fir.opt.mlir 22787:7]
      node _T_431 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22789:19]
      node _T_432 = eq(_T_431, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22791:19]
      when _T_432 : @[build/NutShell.fir.opt.mlir 22792:9]
        skip @[build/NutShell.fir.opt.mlir 22793:11]
      node _T_433 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22796:19]
      node _T_434 = eq(_T_433, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22798:19]
      when _T_434 : @[build/NutShell.fir.opt.mlir 22799:9]
        skip @[build/NutShell.fir.opt.mlir 22800:11]
    node _T_435 = and(resetSatp, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22804:17]
    when _T_435 : @[build/NutShell.fir.opt.mlir 22805:7]
      node _T_436 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22807:19]
      node _T_437 = eq(_T_436, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22809:19]
      when _T_437 : @[build/NutShell.fir.opt.mlir 22810:9]
        skip @[build/NutShell.fir.opt.mlir 22811:11]
      node _T_438 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22814:19]
      node _T_439 = eq(_T_438, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22816:19]
      when _T_439 : @[build/NutShell.fir.opt.mlir 22817:9]
        skip @[build/NutShell.fir.opt.mlir 22818:11]
    node deleg = mux(raiseIntr, mideleg, medeleg) @[build/NutShell.fir.opt.mlir 22822:16]
    node _delegS_T = bits(causeNO, 3, 0) @[build/NutShell.fir.opt.mlir 22824:20]
    node _delegS_T_1 = dshr(deleg, _delegS_T) @[build/NutShell.fir.opt.mlir 22826:22]
    node _delegS_T_2 = bits(_delegS_T_1, 0, 0) @[build/NutShell.fir.opt.mlir 22828:22]
    node _delegS_T_3 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22830:22]
    node delegS = and(_delegS_T_2, _delegS_T_3) @[build/NutShell.fir.opt.mlir 22832:17]
    node _tvalWen_T = or(hasInstrPageFault, hasLoadPageFault) @[build/NutShell.fir.opt.mlir 22834:21]
    node _tvalWen_T_1 = or(_tvalWen_T, hasStorePageFault) @[build/NutShell.fir.opt.mlir 22836:23]
    node _tvalWen_T_2 = or(_tvalWen_T_1, hasLoadAddrMisaligned) @[build/NutShell.fir.opt.mlir 22838:23]
    node _tvalWen_T_3 = or(_tvalWen_T_2, hasStoreAddrMisaligned) @[build/NutShell.fir.opt.mlir 22840:23]
    node _tvalWen_T_4 = eq(_tvalWen_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22842:23]
    node tvalWen = or(_tvalWen_T_4, raiseIntr) @[build/NutShell.fir.opt.mlir 22844:18]
    node _ret_T = or(isMret, isSret) @[build/NutShell.fir.opt.mlir 22846:17]
    node _ret_T_1 = or(_ret_T, isUret) @[build/NutShell.fir.opt.mlir 22848:19]
    connect ret, _ret_T_1 @[build/NutShell.fir.opt.mlir 22849:7]
    node _trapTarget_T = mux(delegS, stvec, mtvec) @[build/NutShell.fir.opt.mlir 22851:24]
    node _trapTarget_T_1 = bits(_trapTarget_T, 38, 0) @[build/NutShell.fir.opt.mlir 22853:26]
    connect trapTarget, _trapTarget_T_1 @[build/NutShell.fir.opt.mlir 22854:7]
    invalidate retTarget @[build/NutShell.fir.opt.mlir 22856:7]
    node _T_440 = and(io.in.valid, isMret) @[build/NutShell.fir.opt.mlir 22858:17]
    when _T_440 : @[build/NutShell.fir.opt.mlir 22859:7]
      wire _mstatusOld_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 22860:29]
      wire _mstatusOld_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 22887:31]
      connect _mstatusOld_WIRE_1, mstatus @[build/NutShell.fir.opt.mlir 22888:9]
      node _mstatusOld_T = bits(_mstatusOld_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 22890:26]
      connect _mstatusOld_WIRE.ie.u, _mstatusOld_T @[build/NutShell.fir.opt.mlir 22891:9]
      node _mstatusOld_T_1 = bits(_mstatusOld_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 22893:28]
      connect _mstatusOld_WIRE.ie.s, _mstatusOld_T_1 @[build/NutShell.fir.opt.mlir 22894:9]
      node _mstatusOld_T_2 = bits(_mstatusOld_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 22896:28]
      connect _mstatusOld_WIRE.ie.h, _mstatusOld_T_2 @[build/NutShell.fir.opt.mlir 22897:9]
      node _mstatusOld_T_3 = bits(_mstatusOld_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 22899:28]
      connect _mstatusOld_WIRE.ie.m, _mstatusOld_T_3 @[build/NutShell.fir.opt.mlir 22900:9]
      node _mstatusOld_T_4 = bits(_mstatusOld_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 22902:28]
      connect _mstatusOld_WIRE.pie.u, _mstatusOld_T_4 @[build/NutShell.fir.opt.mlir 22903:9]
      node _mstatusOld_T_5 = bits(_mstatusOld_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 22905:28]
      connect _mstatusOld_WIRE.pie.s, _mstatusOld_T_5 @[build/NutShell.fir.opt.mlir 22906:9]
      node _mstatusOld_T_6 = bits(_mstatusOld_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 22908:28]
      connect _mstatusOld_WIRE.pie.h, _mstatusOld_T_6 @[build/NutShell.fir.opt.mlir 22909:9]
      node _mstatusOld_T_7 = bits(_mstatusOld_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 22911:28]
      connect _mstatusOld_WIRE.pie.m, _mstatusOld_T_7 @[build/NutShell.fir.opt.mlir 22912:9]
      node _mstatusOld_T_8 = bits(_mstatusOld_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 22914:28]
      connect _mstatusOld_WIRE.spp, _mstatusOld_T_8 @[build/NutShell.fir.opt.mlir 22915:9]
      node _mstatusOld_T_9 = bits(_mstatusOld_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 22917:28]
      connect _mstatusOld_WIRE.hpp, _mstatusOld_T_9 @[build/NutShell.fir.opt.mlir 22918:9]
      node _mstatusOld_T_10 = bits(_mstatusOld_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 22920:29]
      connect _mstatusOld_WIRE.mpp, _mstatusOld_T_10 @[build/NutShell.fir.opt.mlir 22921:9]
      node _mstatusOld_T_11 = bits(_mstatusOld_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 22923:29]
      connect _mstatusOld_WIRE.fs, _mstatusOld_T_11 @[build/NutShell.fir.opt.mlir 22924:9]
      node _mstatusOld_T_12 = bits(_mstatusOld_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 22926:29]
      connect _mstatusOld_WIRE.xs, _mstatusOld_T_12 @[build/NutShell.fir.opt.mlir 22927:9]
      node _mstatusOld_T_13 = bits(_mstatusOld_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 22929:29]
      connect _mstatusOld_WIRE.mprv, _mstatusOld_T_13 @[build/NutShell.fir.opt.mlir 22930:9]
      node _mstatusOld_T_14 = bits(_mstatusOld_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 22932:29]
      connect _mstatusOld_WIRE.sum, _mstatusOld_T_14 @[build/NutShell.fir.opt.mlir 22933:9]
      node _mstatusOld_T_15 = bits(_mstatusOld_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 22935:29]
      connect _mstatusOld_WIRE.mxr, _mstatusOld_T_15 @[build/NutShell.fir.opt.mlir 22936:9]
      node _mstatusOld_T_16 = bits(_mstatusOld_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 22938:29]
      connect _mstatusOld_WIRE.tvm, _mstatusOld_T_16 @[build/NutShell.fir.opt.mlir 22939:9]
      node _mstatusOld_T_17 = bits(_mstatusOld_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 22941:29]
      connect _mstatusOld_WIRE.tw, _mstatusOld_T_17 @[build/NutShell.fir.opt.mlir 22942:9]
      node _mstatusOld_T_18 = bits(_mstatusOld_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 22944:29]
      connect _mstatusOld_WIRE.tsr, _mstatusOld_T_18 @[build/NutShell.fir.opt.mlir 22945:9]
      node _mstatusOld_T_19 = bits(_mstatusOld_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 22947:29]
      connect _mstatusOld_WIRE.pad0, _mstatusOld_T_19 @[build/NutShell.fir.opt.mlir 22948:9]
      node _mstatusOld_T_20 = bits(_mstatusOld_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 22950:29]
      connect _mstatusOld_WIRE.uxl, _mstatusOld_T_20 @[build/NutShell.fir.opt.mlir 22951:9]
      node _mstatusOld_T_21 = bits(_mstatusOld_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 22953:29]
      connect _mstatusOld_WIRE.sxl, _mstatusOld_T_21 @[build/NutShell.fir.opt.mlir 22954:9]
      node _mstatusOld_T_22 = bits(_mstatusOld_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 22956:29]
      connect _mstatusOld_WIRE.pad1, _mstatusOld_T_22 @[build/NutShell.fir.opt.mlir 22957:9]
      node _mstatusOld_T_23 = bits(_mstatusOld_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 22959:29]
      connect _mstatusOld_WIRE.sd, _mstatusOld_T_23 @[build/NutShell.fir.opt.mlir 22960:9]
      wire mstatusOld : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 22961:23]
      connect mstatusOld, _mstatusOld_WIRE @[build/NutShell.fir.opt.mlir 22965:9]
      wire _mstatusNew_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 22966:29]
      wire _mstatusNew_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 22993:31]
      connect _mstatusNew_WIRE_1, mstatus @[build/NutShell.fir.opt.mlir 22994:9]
      node _mstatusNew_T = bits(_mstatusNew_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 22996:26]
      connect _mstatusNew_WIRE.ie.u, _mstatusNew_T @[build/NutShell.fir.opt.mlir 22997:9]
      node _mstatusNew_T_1 = bits(_mstatusNew_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 22999:28]
      connect _mstatusNew_WIRE.ie.s, _mstatusNew_T_1 @[build/NutShell.fir.opt.mlir 23000:9]
      node _mstatusNew_T_2 = bits(_mstatusNew_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 23002:28]
      connect _mstatusNew_WIRE.ie.h, _mstatusNew_T_2 @[build/NutShell.fir.opt.mlir 23003:9]
      node _mstatusNew_T_3 = bits(_mstatusNew_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 23005:28]
      connect _mstatusNew_WIRE.ie.m, _mstatusNew_T_3 @[build/NutShell.fir.opt.mlir 23006:9]
      node _mstatusNew_T_4 = bits(_mstatusNew_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 23008:28]
      connect _mstatusNew_WIRE.pie.u, _mstatusNew_T_4 @[build/NutShell.fir.opt.mlir 23009:9]
      node _mstatusNew_T_5 = bits(_mstatusNew_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 23011:28]
      connect _mstatusNew_WIRE.pie.s, _mstatusNew_T_5 @[build/NutShell.fir.opt.mlir 23012:9]
      node _mstatusNew_T_6 = bits(_mstatusNew_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 23014:28]
      connect _mstatusNew_WIRE.pie.h, _mstatusNew_T_6 @[build/NutShell.fir.opt.mlir 23015:9]
      node _mstatusNew_T_7 = bits(_mstatusNew_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 23017:28]
      connect _mstatusNew_WIRE.pie.m, _mstatusNew_T_7 @[build/NutShell.fir.opt.mlir 23018:9]
      node _mstatusNew_T_8 = bits(_mstatusNew_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 23020:28]
      connect _mstatusNew_WIRE.spp, _mstatusNew_T_8 @[build/NutShell.fir.opt.mlir 23021:9]
      node _mstatusNew_T_9 = bits(_mstatusNew_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 23023:28]
      connect _mstatusNew_WIRE.hpp, _mstatusNew_T_9 @[build/NutShell.fir.opt.mlir 23024:9]
      node _mstatusNew_T_10 = bits(_mstatusNew_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 23026:29]
      connect _mstatusNew_WIRE.mpp, _mstatusNew_T_10 @[build/NutShell.fir.opt.mlir 23027:9]
      node _mstatusNew_T_11 = bits(_mstatusNew_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 23029:29]
      connect _mstatusNew_WIRE.fs, _mstatusNew_T_11 @[build/NutShell.fir.opt.mlir 23030:9]
      node _mstatusNew_T_12 = bits(_mstatusNew_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 23032:29]
      connect _mstatusNew_WIRE.xs, _mstatusNew_T_12 @[build/NutShell.fir.opt.mlir 23033:9]
      node _mstatusNew_T_13 = bits(_mstatusNew_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 23035:29]
      connect _mstatusNew_WIRE.mprv, _mstatusNew_T_13 @[build/NutShell.fir.opt.mlir 23036:9]
      node _mstatusNew_T_14 = bits(_mstatusNew_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 23038:29]
      connect _mstatusNew_WIRE.sum, _mstatusNew_T_14 @[build/NutShell.fir.opt.mlir 23039:9]
      node _mstatusNew_T_15 = bits(_mstatusNew_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 23041:29]
      connect _mstatusNew_WIRE.mxr, _mstatusNew_T_15 @[build/NutShell.fir.opt.mlir 23042:9]
      node _mstatusNew_T_16 = bits(_mstatusNew_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 23044:29]
      connect _mstatusNew_WIRE.tvm, _mstatusNew_T_16 @[build/NutShell.fir.opt.mlir 23045:9]
      node _mstatusNew_T_17 = bits(_mstatusNew_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 23047:29]
      connect _mstatusNew_WIRE.tw, _mstatusNew_T_17 @[build/NutShell.fir.opt.mlir 23048:9]
      node _mstatusNew_T_18 = bits(_mstatusNew_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 23050:29]
      connect _mstatusNew_WIRE.tsr, _mstatusNew_T_18 @[build/NutShell.fir.opt.mlir 23051:9]
      node _mstatusNew_T_19 = bits(_mstatusNew_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 23053:29]
      connect _mstatusNew_WIRE.pad0, _mstatusNew_T_19 @[build/NutShell.fir.opt.mlir 23054:9]
      node _mstatusNew_T_20 = bits(_mstatusNew_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 23056:29]
      connect _mstatusNew_WIRE.uxl, _mstatusNew_T_20 @[build/NutShell.fir.opt.mlir 23057:9]
      node _mstatusNew_T_21 = bits(_mstatusNew_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 23059:29]
      connect _mstatusNew_WIRE.sxl, _mstatusNew_T_21 @[build/NutShell.fir.opt.mlir 23060:9]
      node _mstatusNew_T_22 = bits(_mstatusNew_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 23062:29]
      connect _mstatusNew_WIRE.pad1, _mstatusNew_T_22 @[build/NutShell.fir.opt.mlir 23063:9]
      node _mstatusNew_T_23 = bits(_mstatusNew_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 23065:29]
      connect _mstatusNew_WIRE.sd, _mstatusNew_T_23 @[build/NutShell.fir.opt.mlir 23066:9]
      wire mstatusNew : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23067:23]
      connect mstatusNew, _mstatusNew_WIRE @[build/NutShell.fir.opt.mlir 23094:9]
      connect mstatusNew.ie.m, mstatusOld.pie.m @[build/NutShell.fir.opt.mlir 23095:9]
      connect privilegeMode, mstatusOld.mpp @[build/NutShell.fir.opt.mlir 23096:9]
      connect mstatusNew.pie.m, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23098:9]
      connect mstatusNew.mpp, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 23101:9]
      node mstatus_lo = cat(mstatusNew.ie.s, mstatusNew.ie.u) @[build/NutShell.fir.opt.mlir 23103:23]
      node mstatus_hi = cat(mstatusNew.ie.m, mstatusNew.ie.h) @[build/NutShell.fir.opt.mlir 23105:23]
      node _mstatus_T_8 = cat(mstatus_hi, mstatus_lo) @[build/NutShell.fir.opt.mlir 23107:25]
      node mstatus_lo_1 = cat(mstatusNew.pie.s, mstatusNew.pie.u) @[build/NutShell.fir.opt.mlir 23109:25]
      node mstatus_hi_1 = cat(mstatusNew.pie.m, mstatusNew.pie.h) @[build/NutShell.fir.opt.mlir 23111:25]
      node _mstatus_T_9 = cat(mstatus_hi_1, mstatus_lo_1) @[build/NutShell.fir.opt.mlir 23113:25]
      node mstatus_lo_lo_lo = cat(_mstatus_T_9, _mstatus_T_8) @[build/NutShell.fir.opt.mlir 23115:29]
      node mstatus_lo_lo_hi = cat(mstatusNew.hpp, mstatusNew.spp) @[build/NutShell.fir.opt.mlir 23117:29]
      node mstatus_lo_lo = cat(mstatus_lo_lo_hi, mstatus_lo_lo_lo) @[build/NutShell.fir.opt.mlir 23119:26]
      node mstatus_lo_hi_lo = cat(mstatusNew.fs, mstatusNew.mpp) @[build/NutShell.fir.opt.mlir 23121:29]
      node mstatus_lo_hi_hi_hi = cat(mstatusNew.sum, mstatusNew.mprv) @[build/NutShell.fir.opt.mlir 23123:32]
      node mstatus_lo_hi_hi = cat(mstatus_lo_hi_hi_hi, mstatusNew.xs) @[build/NutShell.fir.opt.mlir 23125:29]
      node mstatus_lo_hi = cat(mstatus_lo_hi_hi, mstatus_lo_hi_lo) @[build/NutShell.fir.opt.mlir 23127:26]
      node mstatus_lo_2 = cat(mstatus_lo_hi, mstatus_lo_lo) @[build/NutShell.fir.opt.mlir 23129:25]
      node mstatus_hi_lo_lo = cat(mstatusNew.tvm, mstatusNew.mxr) @[build/NutShell.fir.opt.mlir 23131:29]
      node mstatus_hi_lo_hi = cat(mstatusNew.tsr, mstatusNew.tw) @[build/NutShell.fir.opt.mlir 23133:29]
      node mstatus_hi_lo = cat(mstatus_hi_lo_hi, mstatus_hi_lo_lo) @[build/NutShell.fir.opt.mlir 23135:26]
      node mstatus_hi_hi_lo = cat(mstatusNew.uxl, mstatusNew.pad0) @[build/NutShell.fir.opt.mlir 23137:29]
      node mstatus_hi_hi_hi_hi = cat(mstatusNew.sd, mstatusNew.pad1) @[build/NutShell.fir.opt.mlir 23139:32]
      node mstatus_hi_hi_hi = cat(mstatus_hi_hi_hi_hi, mstatusNew.sxl) @[build/NutShell.fir.opt.mlir 23141:29]
      node mstatus_hi_hi = cat(mstatus_hi_hi_hi, mstatus_hi_hi_lo) @[build/NutShell.fir.opt.mlir 23143:26]
      node mstatus_hi_2 = cat(mstatus_hi_hi, mstatus_hi_lo) @[build/NutShell.fir.opt.mlir 23145:25]
      node _mstatus_T_10 = cat(mstatus_hi_2, mstatus_lo_2) @[build/NutShell.fir.opt.mlir 23147:26]
      connect mstatus, _mstatus_T_10 @[build/NutShell.fir.opt.mlir 23148:9]
      connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23150:9]
      node _retTarget_T = bits(mepc, 38, 0) @[build/NutShell.fir.opt.mlir 23152:25]
      connect retTarget, _retTarget_T @[build/NutShell.fir.opt.mlir 23153:9]
    node _T_441 = and(io.in.valid, isSret) @[build/NutShell.fir.opt.mlir 23156:17]
    when _T_441 : @[build/NutShell.fir.opt.mlir 23157:7]
      wire _mstatusOld_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23158:31]
      wire _mstatusOld_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 23185:31]
      connect _mstatusOld_WIRE_3, mstatus @[build/NutShell.fir.opt.mlir 23186:9]
      node _mstatusOld_T_24 = bits(_mstatusOld_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 23188:29]
      connect _mstatusOld_WIRE_2.ie.u, _mstatusOld_T_24 @[build/NutShell.fir.opt.mlir 23189:9]
      node _mstatusOld_T_25 = bits(_mstatusOld_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 23191:29]
      connect _mstatusOld_WIRE_2.ie.s, _mstatusOld_T_25 @[build/NutShell.fir.opt.mlir 23192:9]
      node _mstatusOld_T_26 = bits(_mstatusOld_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 23194:29]
      connect _mstatusOld_WIRE_2.ie.h, _mstatusOld_T_26 @[build/NutShell.fir.opt.mlir 23195:9]
      node _mstatusOld_T_27 = bits(_mstatusOld_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 23197:29]
      connect _mstatusOld_WIRE_2.ie.m, _mstatusOld_T_27 @[build/NutShell.fir.opt.mlir 23198:9]
      node _mstatusOld_T_28 = bits(_mstatusOld_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 23200:29]
      connect _mstatusOld_WIRE_2.pie.u, _mstatusOld_T_28 @[build/NutShell.fir.opt.mlir 23201:9]
      node _mstatusOld_T_29 = bits(_mstatusOld_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 23203:29]
      connect _mstatusOld_WIRE_2.pie.s, _mstatusOld_T_29 @[build/NutShell.fir.opt.mlir 23204:9]
      node _mstatusOld_T_30 = bits(_mstatusOld_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 23206:29]
      connect _mstatusOld_WIRE_2.pie.h, _mstatusOld_T_30 @[build/NutShell.fir.opt.mlir 23207:9]
      node _mstatusOld_T_31 = bits(_mstatusOld_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 23209:29]
      connect _mstatusOld_WIRE_2.pie.m, _mstatusOld_T_31 @[build/NutShell.fir.opt.mlir 23210:9]
      node _mstatusOld_T_32 = bits(_mstatusOld_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 23212:29]
      connect _mstatusOld_WIRE_2.spp, _mstatusOld_T_32 @[build/NutShell.fir.opt.mlir 23213:9]
      node _mstatusOld_T_33 = bits(_mstatusOld_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 23215:29]
      connect _mstatusOld_WIRE_2.hpp, _mstatusOld_T_33 @[build/NutShell.fir.opt.mlir 23216:9]
      node _mstatusOld_T_34 = bits(_mstatusOld_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 23218:29]
      connect _mstatusOld_WIRE_2.mpp, _mstatusOld_T_34 @[build/NutShell.fir.opt.mlir 23219:9]
      node _mstatusOld_T_35 = bits(_mstatusOld_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 23221:29]
      connect _mstatusOld_WIRE_2.fs, _mstatusOld_T_35 @[build/NutShell.fir.opt.mlir 23222:9]
      node _mstatusOld_T_36 = bits(_mstatusOld_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 23224:29]
      connect _mstatusOld_WIRE_2.xs, _mstatusOld_T_36 @[build/NutShell.fir.opt.mlir 23225:9]
      node _mstatusOld_T_37 = bits(_mstatusOld_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 23227:29]
      connect _mstatusOld_WIRE_2.mprv, _mstatusOld_T_37 @[build/NutShell.fir.opt.mlir 23228:9]
      node _mstatusOld_T_38 = bits(_mstatusOld_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 23230:29]
      connect _mstatusOld_WIRE_2.sum, _mstatusOld_T_38 @[build/NutShell.fir.opt.mlir 23231:9]
      node _mstatusOld_T_39 = bits(_mstatusOld_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 23233:29]
      connect _mstatusOld_WIRE_2.mxr, _mstatusOld_T_39 @[build/NutShell.fir.opt.mlir 23234:9]
      node _mstatusOld_T_40 = bits(_mstatusOld_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 23236:29]
      connect _mstatusOld_WIRE_2.tvm, _mstatusOld_T_40 @[build/NutShell.fir.opt.mlir 23237:9]
      node _mstatusOld_T_41 = bits(_mstatusOld_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 23239:29]
      connect _mstatusOld_WIRE_2.tw, _mstatusOld_T_41 @[build/NutShell.fir.opt.mlir 23240:9]
      node _mstatusOld_T_42 = bits(_mstatusOld_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 23242:29]
      connect _mstatusOld_WIRE_2.tsr, _mstatusOld_T_42 @[build/NutShell.fir.opt.mlir 23243:9]
      node _mstatusOld_T_43 = bits(_mstatusOld_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 23245:29]
      connect _mstatusOld_WIRE_2.pad0, _mstatusOld_T_43 @[build/NutShell.fir.opt.mlir 23246:9]
      node _mstatusOld_T_44 = bits(_mstatusOld_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 23248:29]
      connect _mstatusOld_WIRE_2.uxl, _mstatusOld_T_44 @[build/NutShell.fir.opt.mlir 23249:9]
      node _mstatusOld_T_45 = bits(_mstatusOld_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 23251:29]
      connect _mstatusOld_WIRE_2.sxl, _mstatusOld_T_45 @[build/NutShell.fir.opt.mlir 23252:9]
      node _mstatusOld_T_46 = bits(_mstatusOld_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 23254:29]
      connect _mstatusOld_WIRE_2.pad1, _mstatusOld_T_46 @[build/NutShell.fir.opt.mlir 23255:9]
      node _mstatusOld_T_47 = bits(_mstatusOld_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 23257:29]
      connect _mstatusOld_WIRE_2.sd, _mstatusOld_T_47 @[build/NutShell.fir.opt.mlir 23258:9]
      wire mstatusOld_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23259:25]
      connect mstatusOld_1, _mstatusOld_WIRE_2 @[build/NutShell.fir.opt.mlir 23263:9]
      wire _mstatusNew_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23264:31]
      wire _mstatusNew_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 23291:31]
      connect _mstatusNew_WIRE_3, mstatus @[build/NutShell.fir.opt.mlir 23292:9]
      node _mstatusNew_T_24 = bits(_mstatusNew_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 23294:29]
      connect _mstatusNew_WIRE_2.ie.u, _mstatusNew_T_24 @[build/NutShell.fir.opt.mlir 23295:9]
      node _mstatusNew_T_25 = bits(_mstatusNew_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 23297:29]
      connect _mstatusNew_WIRE_2.ie.s, _mstatusNew_T_25 @[build/NutShell.fir.opt.mlir 23298:9]
      node _mstatusNew_T_26 = bits(_mstatusNew_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 23300:29]
      connect _mstatusNew_WIRE_2.ie.h, _mstatusNew_T_26 @[build/NutShell.fir.opt.mlir 23301:9]
      node _mstatusNew_T_27 = bits(_mstatusNew_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 23303:29]
      connect _mstatusNew_WIRE_2.ie.m, _mstatusNew_T_27 @[build/NutShell.fir.opt.mlir 23304:9]
      node _mstatusNew_T_28 = bits(_mstatusNew_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 23306:29]
      connect _mstatusNew_WIRE_2.pie.u, _mstatusNew_T_28 @[build/NutShell.fir.opt.mlir 23307:9]
      node _mstatusNew_T_29 = bits(_mstatusNew_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 23309:29]
      connect _mstatusNew_WIRE_2.pie.s, _mstatusNew_T_29 @[build/NutShell.fir.opt.mlir 23310:9]
      node _mstatusNew_T_30 = bits(_mstatusNew_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 23312:29]
      connect _mstatusNew_WIRE_2.pie.h, _mstatusNew_T_30 @[build/NutShell.fir.opt.mlir 23313:9]
      node _mstatusNew_T_31 = bits(_mstatusNew_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 23315:29]
      connect _mstatusNew_WIRE_2.pie.m, _mstatusNew_T_31 @[build/NutShell.fir.opt.mlir 23316:9]
      node _mstatusNew_T_32 = bits(_mstatusNew_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 23318:29]
      connect _mstatusNew_WIRE_2.spp, _mstatusNew_T_32 @[build/NutShell.fir.opt.mlir 23319:9]
      node _mstatusNew_T_33 = bits(_mstatusNew_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 23321:29]
      connect _mstatusNew_WIRE_2.hpp, _mstatusNew_T_33 @[build/NutShell.fir.opt.mlir 23322:9]
      node _mstatusNew_T_34 = bits(_mstatusNew_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 23324:29]
      connect _mstatusNew_WIRE_2.mpp, _mstatusNew_T_34 @[build/NutShell.fir.opt.mlir 23325:9]
      node _mstatusNew_T_35 = bits(_mstatusNew_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 23327:29]
      connect _mstatusNew_WIRE_2.fs, _mstatusNew_T_35 @[build/NutShell.fir.opt.mlir 23328:9]
      node _mstatusNew_T_36 = bits(_mstatusNew_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 23330:29]
      connect _mstatusNew_WIRE_2.xs, _mstatusNew_T_36 @[build/NutShell.fir.opt.mlir 23331:9]
      node _mstatusNew_T_37 = bits(_mstatusNew_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 23333:29]
      connect _mstatusNew_WIRE_2.mprv, _mstatusNew_T_37 @[build/NutShell.fir.opt.mlir 23334:9]
      node _mstatusNew_T_38 = bits(_mstatusNew_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 23336:29]
      connect _mstatusNew_WIRE_2.sum, _mstatusNew_T_38 @[build/NutShell.fir.opt.mlir 23337:9]
      node _mstatusNew_T_39 = bits(_mstatusNew_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 23339:29]
      connect _mstatusNew_WIRE_2.mxr, _mstatusNew_T_39 @[build/NutShell.fir.opt.mlir 23340:9]
      node _mstatusNew_T_40 = bits(_mstatusNew_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 23342:29]
      connect _mstatusNew_WIRE_2.tvm, _mstatusNew_T_40 @[build/NutShell.fir.opt.mlir 23343:9]
      node _mstatusNew_T_41 = bits(_mstatusNew_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 23345:29]
      connect _mstatusNew_WIRE_2.tw, _mstatusNew_T_41 @[build/NutShell.fir.opt.mlir 23346:9]
      node _mstatusNew_T_42 = bits(_mstatusNew_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 23348:29]
      connect _mstatusNew_WIRE_2.tsr, _mstatusNew_T_42 @[build/NutShell.fir.opt.mlir 23349:9]
      node _mstatusNew_T_43 = bits(_mstatusNew_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 23351:29]
      connect _mstatusNew_WIRE_2.pad0, _mstatusNew_T_43 @[build/NutShell.fir.opt.mlir 23352:9]
      node _mstatusNew_T_44 = bits(_mstatusNew_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 23354:29]
      connect _mstatusNew_WIRE_2.uxl, _mstatusNew_T_44 @[build/NutShell.fir.opt.mlir 23355:9]
      node _mstatusNew_T_45 = bits(_mstatusNew_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 23357:29]
      connect _mstatusNew_WIRE_2.sxl, _mstatusNew_T_45 @[build/NutShell.fir.opt.mlir 23358:9]
      node _mstatusNew_T_46 = bits(_mstatusNew_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 23360:29]
      connect _mstatusNew_WIRE_2.pad1, _mstatusNew_T_46 @[build/NutShell.fir.opt.mlir 23361:9]
      node _mstatusNew_T_47 = bits(_mstatusNew_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 23363:29]
      connect _mstatusNew_WIRE_2.sd, _mstatusNew_T_47 @[build/NutShell.fir.opt.mlir 23364:9]
      wire mstatusNew_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23365:25]
      connect mstatusNew_1, _mstatusNew_WIRE_2 @[build/NutShell.fir.opt.mlir 23392:9]
      connect mstatusNew_1.ie.s, mstatusOld_1.pie.s @[build/NutShell.fir.opt.mlir 23393:9]
      node _privilegeMode_T = cat(UInt<1>(0), mstatusOld_1.spp) @[build/NutShell.fir.opt.mlir 23395:29]
      connect privilegeMode, _privilegeMode_T @[build/NutShell.fir.opt.mlir 23396:9]
      connect mstatusNew_1.pie.s, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23398:9]
      connect mstatusNew_1.spp, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23400:9]
      node mstatus_lo_3 = cat(mstatusNew_1.ie.s, mstatusNew_1.ie.u) @[build/NutShell.fir.opt.mlir 23402:25]
      node mstatus_hi_3 = cat(mstatusNew_1.ie.m, mstatusNew_1.ie.h) @[build/NutShell.fir.opt.mlir 23404:25]
      node _mstatus_T_11 = cat(mstatus_hi_3, mstatus_lo_3) @[build/NutShell.fir.opt.mlir 23406:26]
      node mstatus_lo_4 = cat(mstatusNew_1.pie.s, mstatusNew_1.pie.u) @[build/NutShell.fir.opt.mlir 23408:25]
      node mstatus_hi_4 = cat(mstatusNew_1.pie.m, mstatusNew_1.pie.h) @[build/NutShell.fir.opt.mlir 23410:25]
      node _mstatus_T_12 = cat(mstatus_hi_4, mstatus_lo_4) @[build/NutShell.fir.opt.mlir 23412:26]
      node mstatus_lo_lo_lo_1 = cat(_mstatus_T_12, _mstatus_T_11) @[build/NutShell.fir.opt.mlir 23414:31]
      node mstatus_lo_lo_hi_1 = cat(mstatusNew_1.hpp, mstatusNew_1.spp) @[build/NutShell.fir.opt.mlir 23416:31]
      node mstatus_lo_lo_1 = cat(mstatus_lo_lo_hi_1, mstatus_lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 23418:28]
      node mstatus_lo_hi_lo_1 = cat(mstatusNew_1.fs, mstatusNew_1.mpp) @[build/NutShell.fir.opt.mlir 23420:31]
      node mstatus_lo_hi_hi_hi_1 = cat(mstatusNew_1.sum, mstatusNew_1.mprv) @[build/NutShell.fir.opt.mlir 23422:34]
      node mstatus_lo_hi_hi_1 = cat(mstatus_lo_hi_hi_hi_1, mstatusNew_1.xs) @[build/NutShell.fir.opt.mlir 23424:31]
      node mstatus_lo_hi_1 = cat(mstatus_lo_hi_hi_1, mstatus_lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 23426:28]
      node mstatus_lo_5 = cat(mstatus_lo_hi_1, mstatus_lo_lo_1) @[build/NutShell.fir.opt.mlir 23428:25]
      node mstatus_hi_lo_lo_1 = cat(mstatusNew_1.tvm, mstatusNew_1.mxr) @[build/NutShell.fir.opt.mlir 23430:31]
      node mstatus_hi_lo_hi_1 = cat(mstatusNew_1.tsr, mstatusNew_1.tw) @[build/NutShell.fir.opt.mlir 23432:31]
      node mstatus_hi_lo_1 = cat(mstatus_hi_lo_hi_1, mstatus_hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 23434:28]
      node mstatus_hi_hi_lo_1 = cat(mstatusNew_1.uxl, mstatusNew_1.pad0) @[build/NutShell.fir.opt.mlir 23436:31]
      node mstatus_hi_hi_hi_hi_1 = cat(mstatusNew_1.sd, mstatusNew_1.pad1) @[build/NutShell.fir.opt.mlir 23438:34]
      node mstatus_hi_hi_hi_1 = cat(mstatus_hi_hi_hi_hi_1, mstatusNew_1.sxl) @[build/NutShell.fir.opt.mlir 23440:31]
      node mstatus_hi_hi_1 = cat(mstatus_hi_hi_hi_1, mstatus_hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 23442:28]
      node mstatus_hi_5 = cat(mstatus_hi_hi_1, mstatus_hi_lo_1) @[build/NutShell.fir.opt.mlir 23444:25]
      node _mstatus_T_13 = cat(mstatus_hi_5, mstatus_lo_5) @[build/NutShell.fir.opt.mlir 23446:26]
      connect mstatus, _mstatus_T_13 @[build/NutShell.fir.opt.mlir 23447:9]
      connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23449:9]
      node _retTarget_T_1 = bits(sepc, 38, 0) @[build/NutShell.fir.opt.mlir 23451:27]
      connect retTarget, _retTarget_T_1 @[build/NutShell.fir.opt.mlir 23452:9]
    node _T_442 = and(io.in.valid, isUret) @[build/NutShell.fir.opt.mlir 23455:17]
    when _T_442 : @[build/NutShell.fir.opt.mlir 23456:7]
      wire _mstatusOld_WIRE_4 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23457:31]
      wire _mstatusOld_WIRE_5 : UInt<64> @[build/NutShell.fir.opt.mlir 23484:31]
      connect _mstatusOld_WIRE_5, mstatus @[build/NutShell.fir.opt.mlir 23485:9]
      node _mstatusOld_T_48 = bits(_mstatusOld_WIRE_5, 0, 0) @[build/NutShell.fir.opt.mlir 23487:29]
      connect _mstatusOld_WIRE_4.ie.u, _mstatusOld_T_48 @[build/NutShell.fir.opt.mlir 23488:9]
      node _mstatusOld_T_49 = bits(_mstatusOld_WIRE_5, 1, 1) @[build/NutShell.fir.opt.mlir 23490:29]
      connect _mstatusOld_WIRE_4.ie.s, _mstatusOld_T_49 @[build/NutShell.fir.opt.mlir 23491:9]
      node _mstatusOld_T_50 = bits(_mstatusOld_WIRE_5, 2, 2) @[build/NutShell.fir.opt.mlir 23493:29]
      connect _mstatusOld_WIRE_4.ie.h, _mstatusOld_T_50 @[build/NutShell.fir.opt.mlir 23494:9]
      node _mstatusOld_T_51 = bits(_mstatusOld_WIRE_5, 3, 3) @[build/NutShell.fir.opt.mlir 23496:29]
      connect _mstatusOld_WIRE_4.ie.m, _mstatusOld_T_51 @[build/NutShell.fir.opt.mlir 23497:9]
      node _mstatusOld_T_52 = bits(_mstatusOld_WIRE_5, 4, 4) @[build/NutShell.fir.opt.mlir 23499:29]
      connect _mstatusOld_WIRE_4.pie.u, _mstatusOld_T_52 @[build/NutShell.fir.opt.mlir 23500:9]
      node _mstatusOld_T_53 = bits(_mstatusOld_WIRE_5, 5, 5) @[build/NutShell.fir.opt.mlir 23502:29]
      connect _mstatusOld_WIRE_4.pie.s, _mstatusOld_T_53 @[build/NutShell.fir.opt.mlir 23503:9]
      node _mstatusOld_T_54 = bits(_mstatusOld_WIRE_5, 6, 6) @[build/NutShell.fir.opt.mlir 23505:29]
      connect _mstatusOld_WIRE_4.pie.h, _mstatusOld_T_54 @[build/NutShell.fir.opt.mlir 23506:9]
      node _mstatusOld_T_55 = bits(_mstatusOld_WIRE_5, 7, 7) @[build/NutShell.fir.opt.mlir 23508:29]
      connect _mstatusOld_WIRE_4.pie.m, _mstatusOld_T_55 @[build/NutShell.fir.opt.mlir 23509:9]
      node _mstatusOld_T_56 = bits(_mstatusOld_WIRE_5, 8, 8) @[build/NutShell.fir.opt.mlir 23511:29]
      connect _mstatusOld_WIRE_4.spp, _mstatusOld_T_56 @[build/NutShell.fir.opt.mlir 23512:9]
      node _mstatusOld_T_57 = bits(_mstatusOld_WIRE_5, 10, 9) @[build/NutShell.fir.opt.mlir 23514:29]
      connect _mstatusOld_WIRE_4.hpp, _mstatusOld_T_57 @[build/NutShell.fir.opt.mlir 23515:9]
      node _mstatusOld_T_58 = bits(_mstatusOld_WIRE_5, 12, 11) @[build/NutShell.fir.opt.mlir 23517:29]
      connect _mstatusOld_WIRE_4.mpp, _mstatusOld_T_58 @[build/NutShell.fir.opt.mlir 23518:9]
      node _mstatusOld_T_59 = bits(_mstatusOld_WIRE_5, 14, 13) @[build/NutShell.fir.opt.mlir 23520:29]
      connect _mstatusOld_WIRE_4.fs, _mstatusOld_T_59 @[build/NutShell.fir.opt.mlir 23521:9]
      node _mstatusOld_T_60 = bits(_mstatusOld_WIRE_5, 16, 15) @[build/NutShell.fir.opt.mlir 23523:29]
      connect _mstatusOld_WIRE_4.xs, _mstatusOld_T_60 @[build/NutShell.fir.opt.mlir 23524:9]
      node _mstatusOld_T_61 = bits(_mstatusOld_WIRE_5, 17, 17) @[build/NutShell.fir.opt.mlir 23526:29]
      connect _mstatusOld_WIRE_4.mprv, _mstatusOld_T_61 @[build/NutShell.fir.opt.mlir 23527:9]
      node _mstatusOld_T_62 = bits(_mstatusOld_WIRE_5, 18, 18) @[build/NutShell.fir.opt.mlir 23529:29]
      connect _mstatusOld_WIRE_4.sum, _mstatusOld_T_62 @[build/NutShell.fir.opt.mlir 23530:9]
      node _mstatusOld_T_63 = bits(_mstatusOld_WIRE_5, 19, 19) @[build/NutShell.fir.opt.mlir 23532:29]
      connect _mstatusOld_WIRE_4.mxr, _mstatusOld_T_63 @[build/NutShell.fir.opt.mlir 23533:9]
      node _mstatusOld_T_64 = bits(_mstatusOld_WIRE_5, 20, 20) @[build/NutShell.fir.opt.mlir 23535:29]
      connect _mstatusOld_WIRE_4.tvm, _mstatusOld_T_64 @[build/NutShell.fir.opt.mlir 23536:9]
      node _mstatusOld_T_65 = bits(_mstatusOld_WIRE_5, 21, 21) @[build/NutShell.fir.opt.mlir 23538:29]
      connect _mstatusOld_WIRE_4.tw, _mstatusOld_T_65 @[build/NutShell.fir.opt.mlir 23539:9]
      node _mstatusOld_T_66 = bits(_mstatusOld_WIRE_5, 22, 22) @[build/NutShell.fir.opt.mlir 23541:29]
      connect _mstatusOld_WIRE_4.tsr, _mstatusOld_T_66 @[build/NutShell.fir.opt.mlir 23542:9]
      node _mstatusOld_T_67 = bits(_mstatusOld_WIRE_5, 31, 23) @[build/NutShell.fir.opt.mlir 23544:29]
      connect _mstatusOld_WIRE_4.pad0, _mstatusOld_T_67 @[build/NutShell.fir.opt.mlir 23545:9]
      node _mstatusOld_T_68 = bits(_mstatusOld_WIRE_5, 33, 32) @[build/NutShell.fir.opt.mlir 23547:29]
      connect _mstatusOld_WIRE_4.uxl, _mstatusOld_T_68 @[build/NutShell.fir.opt.mlir 23548:9]
      node _mstatusOld_T_69 = bits(_mstatusOld_WIRE_5, 35, 34) @[build/NutShell.fir.opt.mlir 23550:29]
      connect _mstatusOld_WIRE_4.sxl, _mstatusOld_T_69 @[build/NutShell.fir.opt.mlir 23551:9]
      node _mstatusOld_T_70 = bits(_mstatusOld_WIRE_5, 62, 36) @[build/NutShell.fir.opt.mlir 23553:29]
      connect _mstatusOld_WIRE_4.pad1, _mstatusOld_T_70 @[build/NutShell.fir.opt.mlir 23554:9]
      node _mstatusOld_T_71 = bits(_mstatusOld_WIRE_5, 63, 63) @[build/NutShell.fir.opt.mlir 23556:29]
      connect _mstatusOld_WIRE_4.sd, _mstatusOld_T_71 @[build/NutShell.fir.opt.mlir 23557:9]
      wire mstatusOld_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23558:25]
      connect mstatusOld_2, _mstatusOld_WIRE_4 @[build/NutShell.fir.opt.mlir 23561:9]
      wire _mstatusNew_WIRE_4 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23562:31]
      wire _mstatusNew_WIRE_5 : UInt<64> @[build/NutShell.fir.opt.mlir 23589:31]
      connect _mstatusNew_WIRE_5, mstatus @[build/NutShell.fir.opt.mlir 23590:9]
      node _mstatusNew_T_48 = bits(_mstatusNew_WIRE_5, 0, 0) @[build/NutShell.fir.opt.mlir 23592:29]
      connect _mstatusNew_WIRE_4.ie.u, _mstatusNew_T_48 @[build/NutShell.fir.opt.mlir 23593:9]
      node _mstatusNew_T_49 = bits(_mstatusNew_WIRE_5, 1, 1) @[build/NutShell.fir.opt.mlir 23595:29]
      connect _mstatusNew_WIRE_4.ie.s, _mstatusNew_T_49 @[build/NutShell.fir.opt.mlir 23596:9]
      node _mstatusNew_T_50 = bits(_mstatusNew_WIRE_5, 2, 2) @[build/NutShell.fir.opt.mlir 23598:29]
      connect _mstatusNew_WIRE_4.ie.h, _mstatusNew_T_50 @[build/NutShell.fir.opt.mlir 23599:9]
      node _mstatusNew_T_51 = bits(_mstatusNew_WIRE_5, 3, 3) @[build/NutShell.fir.opt.mlir 23601:29]
      connect _mstatusNew_WIRE_4.ie.m, _mstatusNew_T_51 @[build/NutShell.fir.opt.mlir 23602:9]
      node _mstatusNew_T_52 = bits(_mstatusNew_WIRE_5, 4, 4) @[build/NutShell.fir.opt.mlir 23604:29]
      connect _mstatusNew_WIRE_4.pie.u, _mstatusNew_T_52 @[build/NutShell.fir.opt.mlir 23605:9]
      node _mstatusNew_T_53 = bits(_mstatusNew_WIRE_5, 5, 5) @[build/NutShell.fir.opt.mlir 23607:29]
      connect _mstatusNew_WIRE_4.pie.s, _mstatusNew_T_53 @[build/NutShell.fir.opt.mlir 23608:9]
      node _mstatusNew_T_54 = bits(_mstatusNew_WIRE_5, 6, 6) @[build/NutShell.fir.opt.mlir 23610:29]
      connect _mstatusNew_WIRE_4.pie.h, _mstatusNew_T_54 @[build/NutShell.fir.opt.mlir 23611:9]
      node _mstatusNew_T_55 = bits(_mstatusNew_WIRE_5, 7, 7) @[build/NutShell.fir.opt.mlir 23613:29]
      connect _mstatusNew_WIRE_4.pie.m, _mstatusNew_T_55 @[build/NutShell.fir.opt.mlir 23614:9]
      node _mstatusNew_T_56 = bits(_mstatusNew_WIRE_5, 8, 8) @[build/NutShell.fir.opt.mlir 23616:29]
      connect _mstatusNew_WIRE_4.spp, _mstatusNew_T_56 @[build/NutShell.fir.opt.mlir 23617:9]
      node _mstatusNew_T_57 = bits(_mstatusNew_WIRE_5, 10, 9) @[build/NutShell.fir.opt.mlir 23619:29]
      connect _mstatusNew_WIRE_4.hpp, _mstatusNew_T_57 @[build/NutShell.fir.opt.mlir 23620:9]
      node _mstatusNew_T_58 = bits(_mstatusNew_WIRE_5, 12, 11) @[build/NutShell.fir.opt.mlir 23622:29]
      connect _mstatusNew_WIRE_4.mpp, _mstatusNew_T_58 @[build/NutShell.fir.opt.mlir 23623:9]
      node _mstatusNew_T_59 = bits(_mstatusNew_WIRE_5, 14, 13) @[build/NutShell.fir.opt.mlir 23625:29]
      connect _mstatusNew_WIRE_4.fs, _mstatusNew_T_59 @[build/NutShell.fir.opt.mlir 23626:9]
      node _mstatusNew_T_60 = bits(_mstatusNew_WIRE_5, 16, 15) @[build/NutShell.fir.opt.mlir 23628:29]
      connect _mstatusNew_WIRE_4.xs, _mstatusNew_T_60 @[build/NutShell.fir.opt.mlir 23629:9]
      node _mstatusNew_T_61 = bits(_mstatusNew_WIRE_5, 17, 17) @[build/NutShell.fir.opt.mlir 23631:29]
      connect _mstatusNew_WIRE_4.mprv, _mstatusNew_T_61 @[build/NutShell.fir.opt.mlir 23632:9]
      node _mstatusNew_T_62 = bits(_mstatusNew_WIRE_5, 18, 18) @[build/NutShell.fir.opt.mlir 23634:29]
      connect _mstatusNew_WIRE_4.sum, _mstatusNew_T_62 @[build/NutShell.fir.opt.mlir 23635:9]
      node _mstatusNew_T_63 = bits(_mstatusNew_WIRE_5, 19, 19) @[build/NutShell.fir.opt.mlir 23637:29]
      connect _mstatusNew_WIRE_4.mxr, _mstatusNew_T_63 @[build/NutShell.fir.opt.mlir 23638:9]
      node _mstatusNew_T_64 = bits(_mstatusNew_WIRE_5, 20, 20) @[build/NutShell.fir.opt.mlir 23640:29]
      connect _mstatusNew_WIRE_4.tvm, _mstatusNew_T_64 @[build/NutShell.fir.opt.mlir 23641:9]
      node _mstatusNew_T_65 = bits(_mstatusNew_WIRE_5, 21, 21) @[build/NutShell.fir.opt.mlir 23643:29]
      connect _mstatusNew_WIRE_4.tw, _mstatusNew_T_65 @[build/NutShell.fir.opt.mlir 23644:9]
      node _mstatusNew_T_66 = bits(_mstatusNew_WIRE_5, 22, 22) @[build/NutShell.fir.opt.mlir 23646:29]
      connect _mstatusNew_WIRE_4.tsr, _mstatusNew_T_66 @[build/NutShell.fir.opt.mlir 23647:9]
      node _mstatusNew_T_67 = bits(_mstatusNew_WIRE_5, 31, 23) @[build/NutShell.fir.opt.mlir 23649:29]
      connect _mstatusNew_WIRE_4.pad0, _mstatusNew_T_67 @[build/NutShell.fir.opt.mlir 23650:9]
      node _mstatusNew_T_68 = bits(_mstatusNew_WIRE_5, 33, 32) @[build/NutShell.fir.opt.mlir 23652:29]
      connect _mstatusNew_WIRE_4.uxl, _mstatusNew_T_68 @[build/NutShell.fir.opt.mlir 23653:9]
      node _mstatusNew_T_69 = bits(_mstatusNew_WIRE_5, 35, 34) @[build/NutShell.fir.opt.mlir 23655:29]
      connect _mstatusNew_WIRE_4.sxl, _mstatusNew_T_69 @[build/NutShell.fir.opt.mlir 23656:9]
      node _mstatusNew_T_70 = bits(_mstatusNew_WIRE_5, 62, 36) @[build/NutShell.fir.opt.mlir 23658:29]
      connect _mstatusNew_WIRE_4.pad1, _mstatusNew_T_70 @[build/NutShell.fir.opt.mlir 23659:9]
      node _mstatusNew_T_71 = bits(_mstatusNew_WIRE_5, 63, 63) @[build/NutShell.fir.opt.mlir 23661:29]
      connect _mstatusNew_WIRE_4.sd, _mstatusNew_T_71 @[build/NutShell.fir.opt.mlir 23662:9]
      wire mstatusNew_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23663:25]
      connect mstatusNew_2, _mstatusNew_WIRE_4 @[build/NutShell.fir.opt.mlir 23690:9]
      connect mstatusNew_2.ie.u, mstatusOld_2.pie.u @[build/NutShell.fir.opt.mlir 23691:9]
      connect privilegeMode, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 23694:9]
      connect mstatusNew_2.pie.u, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23696:9]
      node mstatus_lo_6 = cat(mstatusNew_2.ie.s, mstatusNew_2.ie.u) @[build/NutShell.fir.opt.mlir 23698:25]
      node mstatus_hi_6 = cat(mstatusNew_2.ie.m, mstatusNew_2.ie.h) @[build/NutShell.fir.opt.mlir 23700:25]
      node _mstatus_T_14 = cat(mstatus_hi_6, mstatus_lo_6) @[build/NutShell.fir.opt.mlir 23702:26]
      node mstatus_lo_7 = cat(mstatusNew_2.pie.s, mstatusNew_2.pie.u) @[build/NutShell.fir.opt.mlir 23704:25]
      node mstatus_hi_7 = cat(mstatusNew_2.pie.m, mstatusNew_2.pie.h) @[build/NutShell.fir.opt.mlir 23706:25]
      node _mstatus_T_15 = cat(mstatus_hi_7, mstatus_lo_7) @[build/NutShell.fir.opt.mlir 23708:26]
      node mstatus_lo_lo_lo_2 = cat(_mstatus_T_15, _mstatus_T_14) @[build/NutShell.fir.opt.mlir 23710:31]
      node mstatus_lo_lo_hi_2 = cat(mstatusNew_2.hpp, mstatusNew_2.spp) @[build/NutShell.fir.opt.mlir 23712:31]
      node mstatus_lo_lo_2 = cat(mstatus_lo_lo_hi_2, mstatus_lo_lo_lo_2) @[build/NutShell.fir.opt.mlir 23714:28]
      node mstatus_lo_hi_lo_2 = cat(mstatusNew_2.fs, mstatusNew_2.mpp) @[build/NutShell.fir.opt.mlir 23716:31]
      node mstatus_lo_hi_hi_hi_2 = cat(mstatusNew_2.sum, mstatusNew_2.mprv) @[build/NutShell.fir.opt.mlir 23718:34]
      node mstatus_lo_hi_hi_2 = cat(mstatus_lo_hi_hi_hi_2, mstatusNew_2.xs) @[build/NutShell.fir.opt.mlir 23720:31]
      node mstatus_lo_hi_2 = cat(mstatus_lo_hi_hi_2, mstatus_lo_hi_lo_2) @[build/NutShell.fir.opt.mlir 23722:28]
      node mstatus_lo_8 = cat(mstatus_lo_hi_2, mstatus_lo_lo_2) @[build/NutShell.fir.opt.mlir 23724:25]
      node mstatus_hi_lo_lo_2 = cat(mstatusNew_2.tvm, mstatusNew_2.mxr) @[build/NutShell.fir.opt.mlir 23726:31]
      node mstatus_hi_lo_hi_2 = cat(mstatusNew_2.tsr, mstatusNew_2.tw) @[build/NutShell.fir.opt.mlir 23728:31]
      node mstatus_hi_lo_2 = cat(mstatus_hi_lo_hi_2, mstatus_hi_lo_lo_2) @[build/NutShell.fir.opt.mlir 23730:28]
      node mstatus_hi_hi_lo_2 = cat(mstatusNew_2.uxl, mstatusNew_2.pad0) @[build/NutShell.fir.opt.mlir 23732:31]
      node mstatus_hi_hi_hi_hi_2 = cat(mstatusNew_2.sd, mstatusNew_2.pad1) @[build/NutShell.fir.opt.mlir 23734:34]
      node mstatus_hi_hi_hi_2 = cat(mstatus_hi_hi_hi_hi_2, mstatusNew_2.sxl) @[build/NutShell.fir.opt.mlir 23736:31]
      node mstatus_hi_hi_2 = cat(mstatus_hi_hi_hi_2, mstatus_hi_hi_lo_2) @[build/NutShell.fir.opt.mlir 23738:28]
      node mstatus_hi_8 = cat(mstatus_hi_hi_2, mstatus_hi_lo_2) @[build/NutShell.fir.opt.mlir 23740:25]
      node _mstatus_T_16 = cat(mstatus_hi_8, mstatus_lo_8) @[build/NutShell.fir.opt.mlir 23742:26]
      connect mstatus, _mstatus_T_16 @[build/NutShell.fir.opt.mlir 23743:9]
      node _retTarget_T_2 = bits(uepc, 38, 0) @[build/NutShell.fir.opt.mlir 23745:27]
      connect retTarget, _retTarget_T_2 @[build/NutShell.fir.opt.mlir 23746:9]
    when raiseExceptionIntr : @[build/NutShell.fir.opt.mlir 23748:7]
      wire _mstatusOld_WIRE_6 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23749:31]
      wire _mstatusOld_WIRE_7 : UInt<64> @[build/NutShell.fir.opt.mlir 23776:31]
      connect _mstatusOld_WIRE_7, mstatus @[build/NutShell.fir.opt.mlir 23777:9]
      node _mstatusOld_T_72 = bits(_mstatusOld_WIRE_7, 0, 0) @[build/NutShell.fir.opt.mlir 23779:29]
      connect _mstatusOld_WIRE_6.ie.u, _mstatusOld_T_72 @[build/NutShell.fir.opt.mlir 23780:9]
      node _mstatusOld_T_73 = bits(_mstatusOld_WIRE_7, 1, 1) @[build/NutShell.fir.opt.mlir 23782:29]
      connect _mstatusOld_WIRE_6.ie.s, _mstatusOld_T_73 @[build/NutShell.fir.opt.mlir 23783:9]
      node _mstatusOld_T_74 = bits(_mstatusOld_WIRE_7, 2, 2) @[build/NutShell.fir.opt.mlir 23785:29]
      connect _mstatusOld_WIRE_6.ie.h, _mstatusOld_T_74 @[build/NutShell.fir.opt.mlir 23786:9]
      node _mstatusOld_T_75 = bits(_mstatusOld_WIRE_7, 3, 3) @[build/NutShell.fir.opt.mlir 23788:29]
      connect _mstatusOld_WIRE_6.ie.m, _mstatusOld_T_75 @[build/NutShell.fir.opt.mlir 23789:9]
      node _mstatusOld_T_76 = bits(_mstatusOld_WIRE_7, 4, 4) @[build/NutShell.fir.opt.mlir 23791:29]
      connect _mstatusOld_WIRE_6.pie.u, _mstatusOld_T_76 @[build/NutShell.fir.opt.mlir 23792:9]
      node _mstatusOld_T_77 = bits(_mstatusOld_WIRE_7, 5, 5) @[build/NutShell.fir.opt.mlir 23794:29]
      connect _mstatusOld_WIRE_6.pie.s, _mstatusOld_T_77 @[build/NutShell.fir.opt.mlir 23795:9]
      node _mstatusOld_T_78 = bits(_mstatusOld_WIRE_7, 6, 6) @[build/NutShell.fir.opt.mlir 23797:29]
      connect _mstatusOld_WIRE_6.pie.h, _mstatusOld_T_78 @[build/NutShell.fir.opt.mlir 23798:9]
      node _mstatusOld_T_79 = bits(_mstatusOld_WIRE_7, 7, 7) @[build/NutShell.fir.opt.mlir 23800:29]
      connect _mstatusOld_WIRE_6.pie.m, _mstatusOld_T_79 @[build/NutShell.fir.opt.mlir 23801:9]
      node _mstatusOld_T_80 = bits(_mstatusOld_WIRE_7, 8, 8) @[build/NutShell.fir.opt.mlir 23803:29]
      connect _mstatusOld_WIRE_6.spp, _mstatusOld_T_80 @[build/NutShell.fir.opt.mlir 23804:9]
      node _mstatusOld_T_81 = bits(_mstatusOld_WIRE_7, 10, 9) @[build/NutShell.fir.opt.mlir 23806:29]
      connect _mstatusOld_WIRE_6.hpp, _mstatusOld_T_81 @[build/NutShell.fir.opt.mlir 23807:9]
      node _mstatusOld_T_82 = bits(_mstatusOld_WIRE_7, 12, 11) @[build/NutShell.fir.opt.mlir 23809:29]
      connect _mstatusOld_WIRE_6.mpp, _mstatusOld_T_82 @[build/NutShell.fir.opt.mlir 23810:9]
      node _mstatusOld_T_83 = bits(_mstatusOld_WIRE_7, 14, 13) @[build/NutShell.fir.opt.mlir 23812:29]
      connect _mstatusOld_WIRE_6.fs, _mstatusOld_T_83 @[build/NutShell.fir.opt.mlir 23813:9]
      node _mstatusOld_T_84 = bits(_mstatusOld_WIRE_7, 16, 15) @[build/NutShell.fir.opt.mlir 23815:29]
      connect _mstatusOld_WIRE_6.xs, _mstatusOld_T_84 @[build/NutShell.fir.opt.mlir 23816:9]
      node _mstatusOld_T_85 = bits(_mstatusOld_WIRE_7, 17, 17) @[build/NutShell.fir.opt.mlir 23818:29]
      connect _mstatusOld_WIRE_6.mprv, _mstatusOld_T_85 @[build/NutShell.fir.opt.mlir 23819:9]
      node _mstatusOld_T_86 = bits(_mstatusOld_WIRE_7, 18, 18) @[build/NutShell.fir.opt.mlir 23821:29]
      connect _mstatusOld_WIRE_6.sum, _mstatusOld_T_86 @[build/NutShell.fir.opt.mlir 23822:9]
      node _mstatusOld_T_87 = bits(_mstatusOld_WIRE_7, 19, 19) @[build/NutShell.fir.opt.mlir 23824:29]
      connect _mstatusOld_WIRE_6.mxr, _mstatusOld_T_87 @[build/NutShell.fir.opt.mlir 23825:9]
      node _mstatusOld_T_88 = bits(_mstatusOld_WIRE_7, 20, 20) @[build/NutShell.fir.opt.mlir 23827:29]
      connect _mstatusOld_WIRE_6.tvm, _mstatusOld_T_88 @[build/NutShell.fir.opt.mlir 23828:9]
      node _mstatusOld_T_89 = bits(_mstatusOld_WIRE_7, 21, 21) @[build/NutShell.fir.opt.mlir 23830:29]
      connect _mstatusOld_WIRE_6.tw, _mstatusOld_T_89 @[build/NutShell.fir.opt.mlir 23831:9]
      node _mstatusOld_T_90 = bits(_mstatusOld_WIRE_7, 22, 22) @[build/NutShell.fir.opt.mlir 23833:29]
      connect _mstatusOld_WIRE_6.tsr, _mstatusOld_T_90 @[build/NutShell.fir.opt.mlir 23834:9]
      node _mstatusOld_T_91 = bits(_mstatusOld_WIRE_7, 31, 23) @[build/NutShell.fir.opt.mlir 23836:29]
      connect _mstatusOld_WIRE_6.pad0, _mstatusOld_T_91 @[build/NutShell.fir.opt.mlir 23837:9]
      node _mstatusOld_T_92 = bits(_mstatusOld_WIRE_7, 33, 32) @[build/NutShell.fir.opt.mlir 23839:29]
      connect _mstatusOld_WIRE_6.uxl, _mstatusOld_T_92 @[build/NutShell.fir.opt.mlir 23840:9]
      node _mstatusOld_T_93 = bits(_mstatusOld_WIRE_7, 35, 34) @[build/NutShell.fir.opt.mlir 23842:29]
      connect _mstatusOld_WIRE_6.sxl, _mstatusOld_T_93 @[build/NutShell.fir.opt.mlir 23843:9]
      node _mstatusOld_T_94 = bits(_mstatusOld_WIRE_7, 62, 36) @[build/NutShell.fir.opt.mlir 23845:29]
      connect _mstatusOld_WIRE_6.pad1, _mstatusOld_T_94 @[build/NutShell.fir.opt.mlir 23846:9]
      node _mstatusOld_T_95 = bits(_mstatusOld_WIRE_7, 63, 63) @[build/NutShell.fir.opt.mlir 23848:29]
      connect _mstatusOld_WIRE_6.sd, _mstatusOld_T_95 @[build/NutShell.fir.opt.mlir 23849:9]
      wire mstatusOld_3 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23850:25]
      connect mstatusOld_3, _mstatusOld_WIRE_6 @[build/NutShell.fir.opt.mlir 23854:9]
      wire _mstatusNew_WIRE_6 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23855:31]
      wire _mstatusNew_WIRE_7 : UInt<64> @[build/NutShell.fir.opt.mlir 23882:31]
      connect _mstatusNew_WIRE_7, mstatus @[build/NutShell.fir.opt.mlir 23883:9]
      node _mstatusNew_T_72 = bits(_mstatusNew_WIRE_7, 0, 0) @[build/NutShell.fir.opt.mlir 23885:29]
      connect _mstatusNew_WIRE_6.ie.u, _mstatusNew_T_72 @[build/NutShell.fir.opt.mlir 23886:9]
      node _mstatusNew_T_73 = bits(_mstatusNew_WIRE_7, 1, 1) @[build/NutShell.fir.opt.mlir 23888:29]
      connect _mstatusNew_WIRE_6.ie.s, _mstatusNew_T_73 @[build/NutShell.fir.opt.mlir 23889:9]
      node _mstatusNew_T_74 = bits(_mstatusNew_WIRE_7, 2, 2) @[build/NutShell.fir.opt.mlir 23891:29]
      connect _mstatusNew_WIRE_6.ie.h, _mstatusNew_T_74 @[build/NutShell.fir.opt.mlir 23892:9]
      node _mstatusNew_T_75 = bits(_mstatusNew_WIRE_7, 3, 3) @[build/NutShell.fir.opt.mlir 23894:29]
      connect _mstatusNew_WIRE_6.ie.m, _mstatusNew_T_75 @[build/NutShell.fir.opt.mlir 23895:9]
      node _mstatusNew_T_76 = bits(_mstatusNew_WIRE_7, 4, 4) @[build/NutShell.fir.opt.mlir 23897:29]
      connect _mstatusNew_WIRE_6.pie.u, _mstatusNew_T_76 @[build/NutShell.fir.opt.mlir 23898:9]
      node _mstatusNew_T_77 = bits(_mstatusNew_WIRE_7, 5, 5) @[build/NutShell.fir.opt.mlir 23900:29]
      connect _mstatusNew_WIRE_6.pie.s, _mstatusNew_T_77 @[build/NutShell.fir.opt.mlir 23901:9]
      node _mstatusNew_T_78 = bits(_mstatusNew_WIRE_7, 6, 6) @[build/NutShell.fir.opt.mlir 23903:29]
      connect _mstatusNew_WIRE_6.pie.h, _mstatusNew_T_78 @[build/NutShell.fir.opt.mlir 23904:9]
      node _mstatusNew_T_79 = bits(_mstatusNew_WIRE_7, 7, 7) @[build/NutShell.fir.opt.mlir 23906:29]
      connect _mstatusNew_WIRE_6.pie.m, _mstatusNew_T_79 @[build/NutShell.fir.opt.mlir 23907:9]
      node _mstatusNew_T_80 = bits(_mstatusNew_WIRE_7, 8, 8) @[build/NutShell.fir.opt.mlir 23909:29]
      connect _mstatusNew_WIRE_6.spp, _mstatusNew_T_80 @[build/NutShell.fir.opt.mlir 23910:9]
      node _mstatusNew_T_81 = bits(_mstatusNew_WIRE_7, 10, 9) @[build/NutShell.fir.opt.mlir 23912:29]
      connect _mstatusNew_WIRE_6.hpp, _mstatusNew_T_81 @[build/NutShell.fir.opt.mlir 23913:9]
      node _mstatusNew_T_82 = bits(_mstatusNew_WIRE_7, 12, 11) @[build/NutShell.fir.opt.mlir 23915:29]
      connect _mstatusNew_WIRE_6.mpp, _mstatusNew_T_82 @[build/NutShell.fir.opt.mlir 23916:9]
      node _mstatusNew_T_83 = bits(_mstatusNew_WIRE_7, 14, 13) @[build/NutShell.fir.opt.mlir 23918:29]
      connect _mstatusNew_WIRE_6.fs, _mstatusNew_T_83 @[build/NutShell.fir.opt.mlir 23919:9]
      node _mstatusNew_T_84 = bits(_mstatusNew_WIRE_7, 16, 15) @[build/NutShell.fir.opt.mlir 23921:29]
      connect _mstatusNew_WIRE_6.xs, _mstatusNew_T_84 @[build/NutShell.fir.opt.mlir 23922:9]
      node _mstatusNew_T_85 = bits(_mstatusNew_WIRE_7, 17, 17) @[build/NutShell.fir.opt.mlir 23924:29]
      connect _mstatusNew_WIRE_6.mprv, _mstatusNew_T_85 @[build/NutShell.fir.opt.mlir 23925:9]
      node _mstatusNew_T_86 = bits(_mstatusNew_WIRE_7, 18, 18) @[build/NutShell.fir.opt.mlir 23927:29]
      connect _mstatusNew_WIRE_6.sum, _mstatusNew_T_86 @[build/NutShell.fir.opt.mlir 23928:9]
      node _mstatusNew_T_87 = bits(_mstatusNew_WIRE_7, 19, 19) @[build/NutShell.fir.opt.mlir 23930:29]
      connect _mstatusNew_WIRE_6.mxr, _mstatusNew_T_87 @[build/NutShell.fir.opt.mlir 23931:9]
      node _mstatusNew_T_88 = bits(_mstatusNew_WIRE_7, 20, 20) @[build/NutShell.fir.opt.mlir 23933:29]
      connect _mstatusNew_WIRE_6.tvm, _mstatusNew_T_88 @[build/NutShell.fir.opt.mlir 23934:9]
      node _mstatusNew_T_89 = bits(_mstatusNew_WIRE_7, 21, 21) @[build/NutShell.fir.opt.mlir 23936:29]
      connect _mstatusNew_WIRE_6.tw, _mstatusNew_T_89 @[build/NutShell.fir.opt.mlir 23937:9]
      node _mstatusNew_T_90 = bits(_mstatusNew_WIRE_7, 22, 22) @[build/NutShell.fir.opt.mlir 23939:29]
      connect _mstatusNew_WIRE_6.tsr, _mstatusNew_T_90 @[build/NutShell.fir.opt.mlir 23940:9]
      node _mstatusNew_T_91 = bits(_mstatusNew_WIRE_7, 31, 23) @[build/NutShell.fir.opt.mlir 23942:29]
      connect _mstatusNew_WIRE_6.pad0, _mstatusNew_T_91 @[build/NutShell.fir.opt.mlir 23943:9]
      node _mstatusNew_T_92 = bits(_mstatusNew_WIRE_7, 33, 32) @[build/NutShell.fir.opt.mlir 23945:29]
      connect _mstatusNew_WIRE_6.uxl, _mstatusNew_T_92 @[build/NutShell.fir.opt.mlir 23946:9]
      node _mstatusNew_T_93 = bits(_mstatusNew_WIRE_7, 35, 34) @[build/NutShell.fir.opt.mlir 23948:29]
      connect _mstatusNew_WIRE_6.sxl, _mstatusNew_T_93 @[build/NutShell.fir.opt.mlir 23949:9]
      node _mstatusNew_T_94 = bits(_mstatusNew_WIRE_7, 62, 36) @[build/NutShell.fir.opt.mlir 23951:29]
      connect _mstatusNew_WIRE_6.pad1, _mstatusNew_T_94 @[build/NutShell.fir.opt.mlir 23952:9]
      node _mstatusNew_T_95 = bits(_mstatusNew_WIRE_7, 63, 63) @[build/NutShell.fir.opt.mlir 23954:29]
      connect _mstatusNew_WIRE_6.sd, _mstatusNew_T_95 @[build/NutShell.fir.opt.mlir 23955:9]
      wire mstatusNew_3 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23956:25]
      connect mstatusNew_3, _mstatusNew_WIRE_6 @[build/NutShell.fir.opt.mlir 23983:9]
      when delegS : @[build/NutShell.fir.opt.mlir 23984:9]
        connect scause, causeNO @[build/NutShell.fir.opt.mlir 23985:11]
        node sepc_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 23987:27]
        node _sepc_T_4 = mux(sepc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 23989:24]
        node _sepc_T_5 = cat(_sepc_T_4, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 23991:24]
        connect sepc, _sepc_T_5 @[build/NutShell.fir.opt.mlir 23992:11]
        connect mstatusNew_3.spp, tail(privilegeMode, 1) @[build/NutShell.fir.opt.mlir 23994:11]
        connect mstatusNew_3.pie.s, mstatusOld_3.ie.s @[build/NutShell.fir.opt.mlir 23995:11]
        connect mstatusNew_3.ie.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23997:11]
        connect privilegeMode, pad(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 24000:11]
        when tvalWen : @[build/NutShell.fir.opt.mlir 24001:11]
          connect stval, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 24004:13]
      else :
        connect mcause, causeNO @[build/NutShell.fir.opt.mlir 24007:11]
        node mepc_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 24009:27]
        node _mepc_T_4 = mux(mepc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 24011:24]
        node _mepc_T_5 = cat(_mepc_T_4, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 24013:24]
        connect mepc, _mepc_T_5 @[build/NutShell.fir.opt.mlir 24014:11]
        connect mstatusNew_3.mpp, privilegeMode @[build/NutShell.fir.opt.mlir 24015:11]
        connect mstatusNew_3.pie.m, mstatusOld_3.ie.m @[build/NutShell.fir.opt.mlir 24016:11]
        connect mstatusNew_3.ie.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24018:11]
        connect privilegeMode, UInt<2>(3) @[build/NutShell.fir.opt.mlir 24020:11]
        when tvalWen : @[build/NutShell.fir.opt.mlir 24021:11]
          connect mtval, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 24024:13]
      node mstatus_lo_9 = cat(mstatusNew_3.ie.s, mstatusNew_3.ie.u) @[build/NutShell.fir.opt.mlir 24028:25]
      node mstatus_hi_9 = cat(mstatusNew_3.ie.m, mstatusNew_3.ie.h) @[build/NutShell.fir.opt.mlir 24030:25]
      node _mstatus_T_17 = cat(mstatus_hi_9, mstatus_lo_9) @[build/NutShell.fir.opt.mlir 24032:26]
      node mstatus_lo_10 = cat(mstatusNew_3.pie.s, mstatusNew_3.pie.u) @[build/NutShell.fir.opt.mlir 24034:26]
      node mstatus_hi_10 = cat(mstatusNew_3.pie.m, mstatusNew_3.pie.h) @[build/NutShell.fir.opt.mlir 24036:26]
      node _mstatus_T_18 = cat(mstatus_hi_10, mstatus_lo_10) @[build/NutShell.fir.opt.mlir 24038:26]
      node mstatus_lo_lo_lo_3 = cat(_mstatus_T_18, _mstatus_T_17) @[build/NutShell.fir.opt.mlir 24040:31]
      node mstatus_lo_lo_hi_3 = cat(mstatusNew_3.hpp, mstatusNew_3.spp) @[build/NutShell.fir.opt.mlir 24042:31]
      node mstatus_lo_lo_3 = cat(mstatus_lo_lo_hi_3, mstatus_lo_lo_lo_3) @[build/NutShell.fir.opt.mlir 24044:28]
      node mstatus_lo_hi_lo_3 = cat(mstatusNew_3.fs, mstatusNew_3.mpp) @[build/NutShell.fir.opt.mlir 24046:31]
      node mstatus_lo_hi_hi_hi_3 = cat(mstatusNew_3.sum, mstatusNew_3.mprv) @[build/NutShell.fir.opt.mlir 24048:34]
      node mstatus_lo_hi_hi_3 = cat(mstatus_lo_hi_hi_hi_3, mstatusNew_3.xs) @[build/NutShell.fir.opt.mlir 24050:31]
      node mstatus_lo_hi_3 = cat(mstatus_lo_hi_hi_3, mstatus_lo_hi_lo_3) @[build/NutShell.fir.opt.mlir 24052:28]
      node mstatus_lo_11 = cat(mstatus_lo_hi_3, mstatus_lo_lo_3) @[build/NutShell.fir.opt.mlir 24054:26]
      node mstatus_hi_lo_lo_3 = cat(mstatusNew_3.tvm, mstatusNew_3.mxr) @[build/NutShell.fir.opt.mlir 24056:31]
      node mstatus_hi_lo_hi_3 = cat(mstatusNew_3.tsr, mstatusNew_3.tw) @[build/NutShell.fir.opt.mlir 24058:31]
      node mstatus_hi_lo_3 = cat(mstatus_hi_lo_hi_3, mstatus_hi_lo_lo_3) @[build/NutShell.fir.opt.mlir 24060:28]
      node mstatus_hi_hi_lo_3 = cat(mstatusNew_3.uxl, mstatusNew_3.pad0) @[build/NutShell.fir.opt.mlir 24062:31]
      node mstatus_hi_hi_hi_hi_3 = cat(mstatusNew_3.sd, mstatusNew_3.pad1) @[build/NutShell.fir.opt.mlir 24064:34]
      node mstatus_hi_hi_hi_3 = cat(mstatus_hi_hi_hi_hi_3, mstatusNew_3.sxl) @[build/NutShell.fir.opt.mlir 24066:31]
      node mstatus_hi_hi_3 = cat(mstatus_hi_hi_hi_3, mstatus_hi_hi_lo_3) @[build/NutShell.fir.opt.mlir 24068:28]
      node mstatus_hi_11 = cat(mstatus_hi_hi_3, mstatus_hi_lo_3) @[build/NutShell.fir.opt.mlir 24070:26]
      node _mstatus_T_19 = cat(mstatus_hi_11, mstatus_lo_11) @[build/NutShell.fir.opt.mlir 24072:26]
      connect mstatus, _mstatus_T_19 @[build/NutShell.fir.opt.mlir 24073:9]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 24076:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 24077:7]
    wire perfCntCond_0 : UInt<1> @[build/NutShell.fir.opt.mlir 24078:24]
    connect perfCntCond_0, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24080:7]
    wire perfCntCond_1 : UInt<1> @[build/NutShell.fir.opt.mlir 24081:24]
    connect perfCntCond_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24083:7]
    wire perfCntCond_2 : UInt<1> @[build/NutShell.fir.opt.mlir 24084:24]
    connect perfCntCond_2, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24086:7]
    wire perfCntCond_3 : UInt<1> @[build/NutShell.fir.opt.mlir 24087:24]
    connect perfCntCond_3, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24089:7]
    wire perfCntCond_4 : UInt<1> @[build/NutShell.fir.opt.mlir 24090:24]
    connect perfCntCond_4, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24092:7]
    wire perfCntCond_5 : UInt<1> @[build/NutShell.fir.opt.mlir 24093:24]
    connect perfCntCond_5, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24095:7]
    wire perfCntCond_6 : UInt<1> @[build/NutShell.fir.opt.mlir 24096:24]
    connect perfCntCond_6, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24098:7]
    wire perfCntCond_7 : UInt<1> @[build/NutShell.fir.opt.mlir 24099:24]
    connect perfCntCond_7, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24101:7]
    wire perfCntCond_8 : UInt<1> @[build/NutShell.fir.opt.mlir 24102:24]
    connect perfCntCond_8, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24104:7]
    wire perfCntCond_9 : UInt<1> @[build/NutShell.fir.opt.mlir 24105:24]
    connect perfCntCond_9, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24107:7]
    wire perfCntCond_10 : UInt<1> @[build/NutShell.fir.opt.mlir 24108:25]
    connect perfCntCond_10, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24110:7]
    wire perfCntCond_11 : UInt<1> @[build/NutShell.fir.opt.mlir 24111:25]
    connect perfCntCond_11, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24113:7]
    wire perfCntCond_12 : UInt<1> @[build/NutShell.fir.opt.mlir 24114:25]
    connect perfCntCond_12, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24116:7]
    wire perfCntCond_13 : UInt<1> @[build/NutShell.fir.opt.mlir 24117:25]
    connect perfCntCond_13, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24119:7]
    wire perfCntCond_14 : UInt<1> @[build/NutShell.fir.opt.mlir 24120:25]
    connect perfCntCond_14, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24122:7]
    wire perfCntCond_15 : UInt<1> @[build/NutShell.fir.opt.mlir 24123:25]
    connect perfCntCond_15, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24125:7]
    wire perfCntCond_16 : UInt<1> @[build/NutShell.fir.opt.mlir 24126:25]
    connect perfCntCond_16, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24128:7]
    wire perfCntCond_17 : UInt<1> @[build/NutShell.fir.opt.mlir 24129:25]
    connect perfCntCond_17, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24131:7]
    wire perfCntCond_18 : UInt<1> @[build/NutShell.fir.opt.mlir 24132:25]
    connect perfCntCond_18, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24134:7]
    wire perfCntCond_19 : UInt<1> @[build/NutShell.fir.opt.mlir 24135:25]
    connect perfCntCond_19, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24137:7]
    wire perfCntCond_20 : UInt<1> @[build/NutShell.fir.opt.mlir 24138:25]
    connect perfCntCond_20, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24140:7]
    wire perfCntCond_21 : UInt<1> @[build/NutShell.fir.opt.mlir 24141:25]
    connect perfCntCond_21, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24143:7]
    wire perfCntCond_22 : UInt<1> @[build/NutShell.fir.opt.mlir 24144:25]
    connect perfCntCond_22, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24146:7]
    wire perfCntCond_23 : UInt<1> @[build/NutShell.fir.opt.mlir 24147:25]
    connect perfCntCond_23, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24149:7]
    wire perfCntCond_24 : UInt<1> @[build/NutShell.fir.opt.mlir 24150:25]
    connect perfCntCond_24, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24152:7]
    wire perfCntCond_25 : UInt<1> @[build/NutShell.fir.opt.mlir 24153:25]
    connect perfCntCond_25, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24155:7]
    wire perfCntCond_26 : UInt<1> @[build/NutShell.fir.opt.mlir 24156:25]
    connect perfCntCond_26, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24158:7]
    wire perfCntCond_27 : UInt<1> @[build/NutShell.fir.opt.mlir 24159:25]
    connect perfCntCond_27, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24161:7]
    wire perfCntCond_28 : UInt<1> @[build/NutShell.fir.opt.mlir 24162:25]
    connect perfCntCond_28, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24164:7]
    wire perfCntCond_29 : UInt<1> @[build/NutShell.fir.opt.mlir 24165:25]
    connect perfCntCond_29, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24167:7]
    wire perfCntCond_30 : UInt<1> @[build/NutShell.fir.opt.mlir 24168:25]
    connect perfCntCond_30, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24170:7]
    wire perfCntCond_31 : UInt<1> @[build/NutShell.fir.opt.mlir 24171:25]
    connect perfCntCond_31, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24173:7]
    wire perfCntCond_32 : UInt<1> @[build/NutShell.fir.opt.mlir 24174:25]
    connect perfCntCond_32, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24176:7]
    wire perfCntCond_33 : UInt<1> @[build/NutShell.fir.opt.mlir 24177:25]
    connect perfCntCond_33, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24179:7]
    wire perfCntCond_34 : UInt<1> @[build/NutShell.fir.opt.mlir 24180:25]
    connect perfCntCond_34, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24182:7]
    wire perfCntCond_35 : UInt<1> @[build/NutShell.fir.opt.mlir 24183:25]
    connect perfCntCond_35, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24185:7]
    wire perfCntCond_36 : UInt<1> @[build/NutShell.fir.opt.mlir 24186:25]
    connect perfCntCond_36, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24188:7]
    wire perfCntCond_37 : UInt<1> @[build/NutShell.fir.opt.mlir 24189:25]
    connect perfCntCond_37, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24191:7]
    wire perfCntCond_38 : UInt<1> @[build/NutShell.fir.opt.mlir 24192:25]
    connect perfCntCond_38, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24194:7]
    wire perfCntCond_39 : UInt<1> @[build/NutShell.fir.opt.mlir 24195:25]
    connect perfCntCond_39, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24197:7]
    wire perfCntCond_40 : UInt<1> @[build/NutShell.fir.opt.mlir 24198:25]
    connect perfCntCond_40, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24200:7]
    wire perfCntCond_41 : UInt<1> @[build/NutShell.fir.opt.mlir 24201:25]
    connect perfCntCond_41, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24203:7]
    wire perfCntCond_42 : UInt<1> @[build/NutShell.fir.opt.mlir 24204:25]
    connect perfCntCond_42, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24206:7]
    wire perfCntCond_43 : UInt<1> @[build/NutShell.fir.opt.mlir 24207:25]
    connect perfCntCond_43, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24209:7]
    wire perfCntCond_44 : UInt<1> @[build/NutShell.fir.opt.mlir 24210:25]
    connect perfCntCond_44, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24212:7]
    wire perfCntCond_45 : UInt<1> @[build/NutShell.fir.opt.mlir 24213:25]
    connect perfCntCond_45, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24215:7]
    wire perfCntCond_46 : UInt<1> @[build/NutShell.fir.opt.mlir 24216:25]
    connect perfCntCond_46, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24218:7]
    wire perfCntCond_47 : UInt<1> @[build/NutShell.fir.opt.mlir 24219:25]
    connect perfCntCond_47, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24221:7]
    wire perfCntCond_48 : UInt<1> @[build/NutShell.fir.opt.mlir 24222:25]
    connect perfCntCond_48, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24224:7]
    wire perfCntCond_49 : UInt<1> @[build/NutShell.fir.opt.mlir 24225:25]
    connect perfCntCond_49, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24227:7]
    wire perfCntCond_50 : UInt<1> @[build/NutShell.fir.opt.mlir 24228:25]
    connect perfCntCond_50, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24230:7]
    wire perfCntCond_51 : UInt<1> @[build/NutShell.fir.opt.mlir 24231:25]
    connect perfCntCond_51, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24233:7]
    wire perfCntCond_52 : UInt<1> @[build/NutShell.fir.opt.mlir 24234:25]
    connect perfCntCond_52, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24236:7]
    wire perfCntCond_53 : UInt<1> @[build/NutShell.fir.opt.mlir 24237:25]
    connect perfCntCond_53, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24239:7]
    wire perfCntCond_54 : UInt<1> @[build/NutShell.fir.opt.mlir 24240:25]
    connect perfCntCond_54, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24242:7]
    wire perfCntCond_55 : UInt<1> @[build/NutShell.fir.opt.mlir 24243:25]
    connect perfCntCond_55, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24245:7]
    wire perfCntCond_56 : UInt<1> @[build/NutShell.fir.opt.mlir 24246:25]
    connect perfCntCond_56, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24248:7]
    wire perfCntCond_57 : UInt<1> @[build/NutShell.fir.opt.mlir 24249:25]
    connect perfCntCond_57, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24251:7]
    wire perfCntCond_58 : UInt<1> @[build/NutShell.fir.opt.mlir 24252:25]
    connect perfCntCond_58, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24254:7]
    wire perfCntCond_59 : UInt<1> @[build/NutShell.fir.opt.mlir 24255:25]
    connect perfCntCond_59, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24257:7]
    wire perfCntCond_60 : UInt<1> @[build/NutShell.fir.opt.mlir 24258:25]
    connect perfCntCond_60, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24260:7]
    wire perfCntCond_61 : UInt<1> @[build/NutShell.fir.opt.mlir 24261:25]
    connect perfCntCond_61, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24263:7]
    wire perfCntCond_62 : UInt<1> @[build/NutShell.fir.opt.mlir 24264:25]
    connect perfCntCond_62, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24266:7]
    wire perfCntCond_63 : UInt<1> @[build/NutShell.fir.opt.mlir 24267:25]
    connect perfCntCond_63, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24269:7]
    wire perfCntCond_64 : UInt<1> @[build/NutShell.fir.opt.mlir 24270:25]
    connect perfCntCond_64, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24272:7]
    wire perfCntCond_65 : UInt<1> @[build/NutShell.fir.opt.mlir 24273:25]
    connect perfCntCond_65, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24275:7]
    wire perfCntCond_66 : UInt<1> @[build/NutShell.fir.opt.mlir 24276:25]
    connect perfCntCond_66, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24278:7]
    wire perfCntCond_67 : UInt<1> @[build/NutShell.fir.opt.mlir 24279:25]
    connect perfCntCond_67, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24281:7]
    wire perfCntCond_68 : UInt<1> @[build/NutShell.fir.opt.mlir 24282:25]
    connect perfCntCond_68, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24284:7]
    wire perfCntCond_69 : UInt<1> @[build/NutShell.fir.opt.mlir 24285:25]
    connect perfCntCond_69, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24287:7]
    wire perfCntCond_70 : UInt<1> @[build/NutShell.fir.opt.mlir 24288:25]
    connect perfCntCond_70, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24290:7]
    wire perfCntCond_71 : UInt<1> @[build/NutShell.fir.opt.mlir 24291:25]
    connect perfCntCond_71, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24293:7]
    wire perfCntCond_72 : UInt<1> @[build/NutShell.fir.opt.mlir 24294:25]
    connect perfCntCond_72, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24296:7]
    wire perfCntCond_73 : UInt<1> @[build/NutShell.fir.opt.mlir 24297:25]
    connect perfCntCond_73, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24299:7]
    wire perfCntCond_74 : UInt<1> @[build/NutShell.fir.opt.mlir 24300:25]
    connect perfCntCond_74, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24302:7]
    wire perfCntCond_75 : UInt<1> @[build/NutShell.fir.opt.mlir 24303:25]
    connect perfCntCond_75, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24305:7]
    wire perfCntCond_76 : UInt<1> @[build/NutShell.fir.opt.mlir 24306:25]
    connect perfCntCond_76, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24308:7]
    wire perfCntCond_77 : UInt<1> @[build/NutShell.fir.opt.mlir 24309:25]
    connect perfCntCond_77, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24311:7]
    wire perfCntCond_78 : UInt<1> @[build/NutShell.fir.opt.mlir 24312:25]
    connect perfCntCond_78, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24314:7]
    wire perfCntCond_79 : UInt<1> @[build/NutShell.fir.opt.mlir 24315:25]
    connect perfCntCond_79, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24317:7]
    wire perfCntCond_80 : UInt<1> @[build/NutShell.fir.opt.mlir 24318:25]
    connect perfCntCond_80, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24320:7]
    wire perfCntCond_81 : UInt<1> @[build/NutShell.fir.opt.mlir 24321:25]
    connect perfCntCond_81, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24323:7]
    wire perfCntCond_82 : UInt<1> @[build/NutShell.fir.opt.mlir 24324:25]
    connect perfCntCond_82, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24326:7]
    wire perfCntCond_83 : UInt<1> @[build/NutShell.fir.opt.mlir 24327:25]
    connect perfCntCond_83, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24329:7]
    wire perfCntCond_84 : UInt<1> @[build/NutShell.fir.opt.mlir 24330:25]
    connect perfCntCond_84, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24332:7]
    wire perfCntCond_85 : UInt<1> @[build/NutShell.fir.opt.mlir 24333:25]
    connect perfCntCond_85, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24335:7]
    wire perfCntCond_86 : UInt<1> @[build/NutShell.fir.opt.mlir 24336:25]
    connect perfCntCond_86, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24338:7]
    wire perfCntCond_87 : UInt<1> @[build/NutShell.fir.opt.mlir 24339:25]
    connect perfCntCond_87, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24341:7]
    wire perfCntCond_88 : UInt<1> @[build/NutShell.fir.opt.mlir 24342:25]
    connect perfCntCond_88, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24344:7]
    wire perfCntCond_89 : UInt<1> @[build/NutShell.fir.opt.mlir 24345:25]
    connect perfCntCond_89, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24347:7]
    wire perfCntCond_90 : UInt<1> @[build/NutShell.fir.opt.mlir 24348:25]
    connect perfCntCond_90, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24350:7]
    wire perfCntCond_91 : UInt<1> @[build/NutShell.fir.opt.mlir 24351:25]
    connect perfCntCond_91, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24353:7]
    wire perfCntCond_92 : UInt<1> @[build/NutShell.fir.opt.mlir 24354:25]
    connect perfCntCond_92, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24356:7]
    wire perfCntCond_93 : UInt<1> @[build/NutShell.fir.opt.mlir 24357:25]
    connect perfCntCond_93, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24359:7]
    wire perfCntCond_94 : UInt<1> @[build/NutShell.fir.opt.mlir 24360:25]
    connect perfCntCond_94, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24362:7]
    wire perfCntCond_95 : UInt<1> @[build/NutShell.fir.opt.mlir 24363:25]
    connect perfCntCond_95, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24365:7]
    wire perfCntCond_96 : UInt<1> @[build/NutShell.fir.opt.mlir 24366:25]
    connect perfCntCond_96, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24368:7]
    wire perfCntCond_97 : UInt<1> @[build/NutShell.fir.opt.mlir 24369:25]
    connect perfCntCond_97, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24371:7]
    wire perfCntCond_98 : UInt<1> @[build/NutShell.fir.opt.mlir 24372:25]
    connect perfCntCond_98, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24374:7]
    wire perfCntCond_99 : UInt<1> @[build/NutShell.fir.opt.mlir 24375:25]
    connect perfCntCond_99, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24377:7]
    wire perfCntCond_100 : UInt<1> @[build/NutShell.fir.opt.mlir 24378:26]
    connect perfCntCond_100, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24380:7]
    wire perfCntCond_101 : UInt<1> @[build/NutShell.fir.opt.mlir 24381:26]
    connect perfCntCond_101, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24383:7]
    wire perfCntCond_102 : UInt<1> @[build/NutShell.fir.opt.mlir 24384:26]
    connect perfCntCond_102, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24386:7]
    wire perfCntCond_103 : UInt<1> @[build/NutShell.fir.opt.mlir 24387:26]
    connect perfCntCond_103, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24389:7]
    wire perfCntCond_104 : UInt<1> @[build/NutShell.fir.opt.mlir 24390:26]
    connect perfCntCond_104, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24392:7]
    wire perfCntCond_105 : UInt<1> @[build/NutShell.fir.opt.mlir 24393:26]
    connect perfCntCond_105, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24395:7]
    wire perfCntCond_106 : UInt<1> @[build/NutShell.fir.opt.mlir 24396:26]
    connect perfCntCond_106, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24398:7]
    wire perfCntCond_107 : UInt<1> @[build/NutShell.fir.opt.mlir 24399:26]
    connect perfCntCond_107, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24401:7]
    wire perfCntCond_108 : UInt<1> @[build/NutShell.fir.opt.mlir 24402:26]
    connect perfCntCond_108, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24404:7]
    wire perfCntCond_109 : UInt<1> @[build/NutShell.fir.opt.mlir 24405:26]
    connect perfCntCond_109, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24407:7]
    wire perfCntCond_110 : UInt<1> @[build/NutShell.fir.opt.mlir 24408:26]
    connect perfCntCond_110, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24410:7]
    wire perfCntCond_111 : UInt<1> @[build/NutShell.fir.opt.mlir 24411:26]
    connect perfCntCond_111, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24413:7]
    wire perfCntCond_112 : UInt<1> @[build/NutShell.fir.opt.mlir 24414:26]
    connect perfCntCond_112, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24416:7]
    wire perfCntCond_113 : UInt<1> @[build/NutShell.fir.opt.mlir 24417:26]
    connect perfCntCond_113, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24419:7]
    wire perfCntCond_114 : UInt<1> @[build/NutShell.fir.opt.mlir 24420:26]
    connect perfCntCond_114, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24422:7]
    wire perfCntCond_115 : UInt<1> @[build/NutShell.fir.opt.mlir 24423:26]
    connect perfCntCond_115, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24425:7]
    wire perfCntCond_116 : UInt<1> @[build/NutShell.fir.opt.mlir 24426:26]
    connect perfCntCond_116, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24428:7]
    wire perfCntCond_117 : UInt<1> @[build/NutShell.fir.opt.mlir 24429:26]
    connect perfCntCond_117, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24431:7]
    wire perfCntCond_118 : UInt<1> @[build/NutShell.fir.opt.mlir 24432:26]
    connect perfCntCond_118, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24434:7]
    wire perfCntCond_119 : UInt<1> @[build/NutShell.fir.opt.mlir 24435:26]
    connect perfCntCond_119, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24437:7]
    wire perfCntCond_120 : UInt<1> @[build/NutShell.fir.opt.mlir 24438:26]
    connect perfCntCond_120, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24440:7]
    wire perfCntCond_121 : UInt<1> @[build/NutShell.fir.opt.mlir 24441:26]
    connect perfCntCond_121, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24443:7]
    wire perfCntCond_122 : UInt<1> @[build/NutShell.fir.opt.mlir 24444:26]
    connect perfCntCond_122, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24446:7]
    wire perfCntCond_123 : UInt<1> @[build/NutShell.fir.opt.mlir 24447:26]
    connect perfCntCond_123, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24449:7]
    wire perfCntCond_124 : UInt<1> @[build/NutShell.fir.opt.mlir 24450:26]
    connect perfCntCond_124, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24452:7]
    wire perfCntCond_125 : UInt<1> @[build/NutShell.fir.opt.mlir 24453:26]
    connect perfCntCond_125, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24455:7]
    wire perfCntCond_126 : UInt<1> @[build/NutShell.fir.opt.mlir 24456:26]
    connect perfCntCond_126, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24458:7]
    wire perfCntCond_127 : UInt<1> @[build/NutShell.fir.opt.mlir 24459:26]
    connect perfCntCond_127, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24461:7]
    when perfCntCond_0 : @[build/NutShell.fir.opt.mlir 24462:7]
      node _perfCnts_0_T_4 = add(perfCnts_0, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24464:28]
      node _perfCnts_0_T_5 = tail(_perfCnts_0_T_4, 1) @[build/NutShell.fir.opt.mlir 24466:28]
      connect perfCnts_0, _perfCnts_0_T_5 @[build/NutShell.fir.opt.mlir 24467:9]
    when perfCntCond_1 : @[build/NutShell.fir.opt.mlir 24469:7]
      node _perfCnts_1_T_4 = add(perfCnts_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24471:28]
      node _perfCnts_1_T_5 = tail(_perfCnts_1_T_4, 1) @[build/NutShell.fir.opt.mlir 24473:28]
      connect perfCnts_1, _perfCnts_1_T_5 @[build/NutShell.fir.opt.mlir 24474:9]
    when perfCntCond_2 : @[build/NutShell.fir.opt.mlir 24476:7]
      node _perfCnts_2_T_4 = add(perfCnts_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24478:28]
      node _perfCnts_2_T_5 = tail(_perfCnts_2_T_4, 1) @[build/NutShell.fir.opt.mlir 24480:28]
      connect perfCnts_2, _perfCnts_2_T_5 @[build/NutShell.fir.opt.mlir 24481:9]
    when perfCntCond_3 : @[build/NutShell.fir.opt.mlir 24483:7]
      node _perfCnts_3_T_4 = add(perfCnts_3, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24485:28]
      node _perfCnts_3_T_5 = tail(_perfCnts_3_T_4, 1) @[build/NutShell.fir.opt.mlir 24487:28]
      connect perfCnts_3, _perfCnts_3_T_5 @[build/NutShell.fir.opt.mlir 24488:9]
    when perfCntCond_4 : @[build/NutShell.fir.opt.mlir 24490:7]
      node _perfCnts_4_T_4 = add(perfCnts_4, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24492:28]
      node _perfCnts_4_T_5 = tail(_perfCnts_4_T_4, 1) @[build/NutShell.fir.opt.mlir 24494:28]
      connect perfCnts_4, _perfCnts_4_T_5 @[build/NutShell.fir.opt.mlir 24495:9]
    when perfCntCond_5 : @[build/NutShell.fir.opt.mlir 24497:7]
      node _perfCnts_5_T_4 = add(perfCnts_5, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24499:28]
      node _perfCnts_5_T_5 = tail(_perfCnts_5_T_4, 1) @[build/NutShell.fir.opt.mlir 24501:28]
      connect perfCnts_5, _perfCnts_5_T_5 @[build/NutShell.fir.opt.mlir 24502:9]
    when perfCntCond_6 : @[build/NutShell.fir.opt.mlir 24504:7]
      node _perfCnts_6_T_4 = add(perfCnts_6, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24506:28]
      node _perfCnts_6_T_5 = tail(_perfCnts_6_T_4, 1) @[build/NutShell.fir.opt.mlir 24508:28]
      connect perfCnts_6, _perfCnts_6_T_5 @[build/NutShell.fir.opt.mlir 24509:9]
    when perfCntCond_7 : @[build/NutShell.fir.opt.mlir 24511:7]
      node _perfCnts_7_T_4 = add(perfCnts_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24513:28]
      node _perfCnts_7_T_5 = tail(_perfCnts_7_T_4, 1) @[build/NutShell.fir.opt.mlir 24515:28]
      connect perfCnts_7, _perfCnts_7_T_5 @[build/NutShell.fir.opt.mlir 24516:9]
    when perfCntCond_8 : @[build/NutShell.fir.opt.mlir 24518:7]
      node _perfCnts_8_T_4 = add(perfCnts_8, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24520:28]
      node _perfCnts_8_T_5 = tail(_perfCnts_8_T_4, 1) @[build/NutShell.fir.opt.mlir 24522:28]
      connect perfCnts_8, _perfCnts_8_T_5 @[build/NutShell.fir.opt.mlir 24523:9]
    when perfCntCond_9 : @[build/NutShell.fir.opt.mlir 24525:7]
      node _perfCnts_9_T_4 = add(perfCnts_9, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24527:28]
      node _perfCnts_9_T_5 = tail(_perfCnts_9_T_4, 1) @[build/NutShell.fir.opt.mlir 24529:28]
      connect perfCnts_9, _perfCnts_9_T_5 @[build/NutShell.fir.opt.mlir 24530:9]
    when perfCntCond_10 : @[build/NutShell.fir.opt.mlir 24532:7]
      node _perfCnts_10_T_4 = add(perfCnts_10, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24534:29]
      node _perfCnts_10_T_5 = tail(_perfCnts_10_T_4, 1) @[build/NutShell.fir.opt.mlir 24536:29]
      connect perfCnts_10, _perfCnts_10_T_5 @[build/NutShell.fir.opt.mlir 24537:9]
    when perfCntCond_11 : @[build/NutShell.fir.opt.mlir 24539:7]
      node _perfCnts_11_T_4 = add(perfCnts_11, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24541:29]
      node _perfCnts_11_T_5 = tail(_perfCnts_11_T_4, 1) @[build/NutShell.fir.opt.mlir 24543:29]
      connect perfCnts_11, _perfCnts_11_T_5 @[build/NutShell.fir.opt.mlir 24544:9]
    when perfCntCond_12 : @[build/NutShell.fir.opt.mlir 24546:7]
      node _perfCnts_12_T_4 = add(perfCnts_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24548:29]
      node _perfCnts_12_T_5 = tail(_perfCnts_12_T_4, 1) @[build/NutShell.fir.opt.mlir 24550:29]
      connect perfCnts_12, _perfCnts_12_T_5 @[build/NutShell.fir.opt.mlir 24551:9]
    when perfCntCond_13 : @[build/NutShell.fir.opt.mlir 24553:7]
      node _perfCnts_13_T_4 = add(perfCnts_13, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24555:29]
      node _perfCnts_13_T_5 = tail(_perfCnts_13_T_4, 1) @[build/NutShell.fir.opt.mlir 24557:29]
      connect perfCnts_13, _perfCnts_13_T_5 @[build/NutShell.fir.opt.mlir 24558:9]
    when perfCntCond_14 : @[build/NutShell.fir.opt.mlir 24560:7]
      node _perfCnts_14_T_4 = add(perfCnts_14, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24562:29]
      node _perfCnts_14_T_5 = tail(_perfCnts_14_T_4, 1) @[build/NutShell.fir.opt.mlir 24564:29]
      connect perfCnts_14, _perfCnts_14_T_5 @[build/NutShell.fir.opt.mlir 24565:9]
    when perfCntCond_15 : @[build/NutShell.fir.opt.mlir 24567:7]
      node _perfCnts_15_T_4 = add(perfCnts_15, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24569:29]
      node _perfCnts_15_T_5 = tail(_perfCnts_15_T_4, 1) @[build/NutShell.fir.opt.mlir 24571:29]
      connect perfCnts_15, _perfCnts_15_T_5 @[build/NutShell.fir.opt.mlir 24572:9]
    when perfCntCond_16 : @[build/NutShell.fir.opt.mlir 24574:7]
      node _perfCnts_16_T_4 = add(perfCnts_16, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24576:29]
      node _perfCnts_16_T_5 = tail(_perfCnts_16_T_4, 1) @[build/NutShell.fir.opt.mlir 24578:29]
      connect perfCnts_16, _perfCnts_16_T_5 @[build/NutShell.fir.opt.mlir 24579:9]
    when perfCntCond_17 : @[build/NutShell.fir.opt.mlir 24581:7]
      node _perfCnts_17_T_4 = add(perfCnts_17, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24583:29]
      node _perfCnts_17_T_5 = tail(_perfCnts_17_T_4, 1) @[build/NutShell.fir.opt.mlir 24585:29]
      connect perfCnts_17, _perfCnts_17_T_5 @[build/NutShell.fir.opt.mlir 24586:9]
    when perfCntCond_18 : @[build/NutShell.fir.opt.mlir 24588:7]
      node _perfCnts_18_T_4 = add(perfCnts_18, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24590:29]
      node _perfCnts_18_T_5 = tail(_perfCnts_18_T_4, 1) @[build/NutShell.fir.opt.mlir 24592:29]
      connect perfCnts_18, _perfCnts_18_T_5 @[build/NutShell.fir.opt.mlir 24593:9]
    when perfCntCond_19 : @[build/NutShell.fir.opt.mlir 24595:7]
      node _perfCnts_19_T_4 = add(perfCnts_19, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24597:29]
      node _perfCnts_19_T_5 = tail(_perfCnts_19_T_4, 1) @[build/NutShell.fir.opt.mlir 24599:29]
      connect perfCnts_19, _perfCnts_19_T_5 @[build/NutShell.fir.opt.mlir 24600:9]
    when perfCntCond_20 : @[build/NutShell.fir.opt.mlir 24602:7]
      node _perfCnts_20_T_4 = add(perfCnts_20, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24604:29]
      node _perfCnts_20_T_5 = tail(_perfCnts_20_T_4, 1) @[build/NutShell.fir.opt.mlir 24606:29]
      connect perfCnts_20, _perfCnts_20_T_5 @[build/NutShell.fir.opt.mlir 24607:9]
    when perfCntCond_21 : @[build/NutShell.fir.opt.mlir 24609:7]
      node _perfCnts_21_T_4 = add(perfCnts_21, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24611:29]
      node _perfCnts_21_T_5 = tail(_perfCnts_21_T_4, 1) @[build/NutShell.fir.opt.mlir 24613:29]
      connect perfCnts_21, _perfCnts_21_T_5 @[build/NutShell.fir.opt.mlir 24614:9]
    when perfCntCond_22 : @[build/NutShell.fir.opt.mlir 24616:7]
      node _perfCnts_22_T_4 = add(perfCnts_22, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24618:29]
      node _perfCnts_22_T_5 = tail(_perfCnts_22_T_4, 1) @[build/NutShell.fir.opt.mlir 24620:29]
      connect perfCnts_22, _perfCnts_22_T_5 @[build/NutShell.fir.opt.mlir 24621:9]
    when perfCntCond_23 : @[build/NutShell.fir.opt.mlir 24623:7]
      node _perfCnts_23_T_4 = add(perfCnts_23, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24625:29]
      node _perfCnts_23_T_5 = tail(_perfCnts_23_T_4, 1) @[build/NutShell.fir.opt.mlir 24627:29]
      connect perfCnts_23, _perfCnts_23_T_5 @[build/NutShell.fir.opt.mlir 24628:9]
    when perfCntCond_24 : @[build/NutShell.fir.opt.mlir 24630:7]
      node _perfCnts_24_T_4 = add(perfCnts_24, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24632:29]
      node _perfCnts_24_T_5 = tail(_perfCnts_24_T_4, 1) @[build/NutShell.fir.opt.mlir 24634:29]
      connect perfCnts_24, _perfCnts_24_T_5 @[build/NutShell.fir.opt.mlir 24635:9]
    when perfCntCond_25 : @[build/NutShell.fir.opt.mlir 24637:7]
      node _perfCnts_25_T_4 = add(perfCnts_25, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24639:29]
      node _perfCnts_25_T_5 = tail(_perfCnts_25_T_4, 1) @[build/NutShell.fir.opt.mlir 24641:29]
      connect perfCnts_25, _perfCnts_25_T_5 @[build/NutShell.fir.opt.mlir 24642:9]
    when perfCntCond_26 : @[build/NutShell.fir.opt.mlir 24644:7]
      node _perfCnts_26_T_4 = add(perfCnts_26, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24646:29]
      node _perfCnts_26_T_5 = tail(_perfCnts_26_T_4, 1) @[build/NutShell.fir.opt.mlir 24648:29]
      connect perfCnts_26, _perfCnts_26_T_5 @[build/NutShell.fir.opt.mlir 24649:9]
    when perfCntCond_27 : @[build/NutShell.fir.opt.mlir 24651:7]
      node _perfCnts_27_T_4 = add(perfCnts_27, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24653:29]
      node _perfCnts_27_T_5 = tail(_perfCnts_27_T_4, 1) @[build/NutShell.fir.opt.mlir 24655:29]
      connect perfCnts_27, _perfCnts_27_T_5 @[build/NutShell.fir.opt.mlir 24656:9]
    when perfCntCond_28 : @[build/NutShell.fir.opt.mlir 24658:7]
      node _perfCnts_28_T_4 = add(perfCnts_28, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24660:29]
      node _perfCnts_28_T_5 = tail(_perfCnts_28_T_4, 1) @[build/NutShell.fir.opt.mlir 24662:29]
      connect perfCnts_28, _perfCnts_28_T_5 @[build/NutShell.fir.opt.mlir 24663:9]
    when perfCntCond_29 : @[build/NutShell.fir.opt.mlir 24665:7]
      node _perfCnts_29_T_4 = add(perfCnts_29, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24667:29]
      node _perfCnts_29_T_5 = tail(_perfCnts_29_T_4, 1) @[build/NutShell.fir.opt.mlir 24669:29]
      connect perfCnts_29, _perfCnts_29_T_5 @[build/NutShell.fir.opt.mlir 24670:9]
    when perfCntCond_30 : @[build/NutShell.fir.opt.mlir 24672:7]
      node _perfCnts_30_T_4 = add(perfCnts_30, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24674:29]
      node _perfCnts_30_T_5 = tail(_perfCnts_30_T_4, 1) @[build/NutShell.fir.opt.mlir 24676:29]
      connect perfCnts_30, _perfCnts_30_T_5 @[build/NutShell.fir.opt.mlir 24677:9]
    when perfCntCond_31 : @[build/NutShell.fir.opt.mlir 24679:7]
      node _perfCnts_31_T_4 = add(perfCnts_31, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24681:29]
      node _perfCnts_31_T_5 = tail(_perfCnts_31_T_4, 1) @[build/NutShell.fir.opt.mlir 24683:29]
      connect perfCnts_31, _perfCnts_31_T_5 @[build/NutShell.fir.opt.mlir 24684:9]
    when perfCntCond_32 : @[build/NutShell.fir.opt.mlir 24686:7]
      node _perfCnts_32_T_4 = add(perfCnts_32, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24688:29]
      node _perfCnts_32_T_5 = tail(_perfCnts_32_T_4, 1) @[build/NutShell.fir.opt.mlir 24690:29]
      connect perfCnts_32, _perfCnts_32_T_5 @[build/NutShell.fir.opt.mlir 24691:9]
    when perfCntCond_33 : @[build/NutShell.fir.opt.mlir 24693:7]
      node _perfCnts_33_T_4 = add(perfCnts_33, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24695:29]
      node _perfCnts_33_T_5 = tail(_perfCnts_33_T_4, 1) @[build/NutShell.fir.opt.mlir 24697:29]
      connect perfCnts_33, _perfCnts_33_T_5 @[build/NutShell.fir.opt.mlir 24698:9]
    when perfCntCond_34 : @[build/NutShell.fir.opt.mlir 24700:7]
      node _perfCnts_34_T_4 = add(perfCnts_34, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24702:29]
      node _perfCnts_34_T_5 = tail(_perfCnts_34_T_4, 1) @[build/NutShell.fir.opt.mlir 24704:29]
      connect perfCnts_34, _perfCnts_34_T_5 @[build/NutShell.fir.opt.mlir 24705:9]
    when perfCntCond_35 : @[build/NutShell.fir.opt.mlir 24707:7]
      node _perfCnts_35_T_4 = add(perfCnts_35, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24709:29]
      node _perfCnts_35_T_5 = tail(_perfCnts_35_T_4, 1) @[build/NutShell.fir.opt.mlir 24711:29]
      connect perfCnts_35, _perfCnts_35_T_5 @[build/NutShell.fir.opt.mlir 24712:9]
    when perfCntCond_36 : @[build/NutShell.fir.opt.mlir 24714:7]
      node _perfCnts_36_T_4 = add(perfCnts_36, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24716:29]
      node _perfCnts_36_T_5 = tail(_perfCnts_36_T_4, 1) @[build/NutShell.fir.opt.mlir 24718:29]
      connect perfCnts_36, _perfCnts_36_T_5 @[build/NutShell.fir.opt.mlir 24719:9]
    when perfCntCond_37 : @[build/NutShell.fir.opt.mlir 24721:7]
      node _perfCnts_37_T_4 = add(perfCnts_37, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24723:29]
      node _perfCnts_37_T_5 = tail(_perfCnts_37_T_4, 1) @[build/NutShell.fir.opt.mlir 24725:29]
      connect perfCnts_37, _perfCnts_37_T_5 @[build/NutShell.fir.opt.mlir 24726:9]
    when perfCntCond_38 : @[build/NutShell.fir.opt.mlir 24728:7]
      node _perfCnts_38_T_4 = add(perfCnts_38, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24730:29]
      node _perfCnts_38_T_5 = tail(_perfCnts_38_T_4, 1) @[build/NutShell.fir.opt.mlir 24732:29]
      connect perfCnts_38, _perfCnts_38_T_5 @[build/NutShell.fir.opt.mlir 24733:9]
    when perfCntCond_39 : @[build/NutShell.fir.opt.mlir 24735:7]
      node _perfCnts_39_T_4 = add(perfCnts_39, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24737:29]
      node _perfCnts_39_T_5 = tail(_perfCnts_39_T_4, 1) @[build/NutShell.fir.opt.mlir 24739:29]
      connect perfCnts_39, _perfCnts_39_T_5 @[build/NutShell.fir.opt.mlir 24740:9]
    when perfCntCond_40 : @[build/NutShell.fir.opt.mlir 24742:7]
      node _perfCnts_40_T_4 = add(perfCnts_40, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24744:29]
      node _perfCnts_40_T_5 = tail(_perfCnts_40_T_4, 1) @[build/NutShell.fir.opt.mlir 24746:29]
      connect perfCnts_40, _perfCnts_40_T_5 @[build/NutShell.fir.opt.mlir 24747:9]
    when perfCntCond_41 : @[build/NutShell.fir.opt.mlir 24749:7]
      node _perfCnts_41_T_4 = add(perfCnts_41, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24751:29]
      node _perfCnts_41_T_5 = tail(_perfCnts_41_T_4, 1) @[build/NutShell.fir.opt.mlir 24753:29]
      connect perfCnts_41, _perfCnts_41_T_5 @[build/NutShell.fir.opt.mlir 24754:9]
    when perfCntCond_42 : @[build/NutShell.fir.opt.mlir 24756:7]
      node _perfCnts_42_T_4 = add(perfCnts_42, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24758:29]
      node _perfCnts_42_T_5 = tail(_perfCnts_42_T_4, 1) @[build/NutShell.fir.opt.mlir 24760:29]
      connect perfCnts_42, _perfCnts_42_T_5 @[build/NutShell.fir.opt.mlir 24761:9]
    when perfCntCond_43 : @[build/NutShell.fir.opt.mlir 24763:7]
      node _perfCnts_43_T_4 = add(perfCnts_43, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24765:29]
      node _perfCnts_43_T_5 = tail(_perfCnts_43_T_4, 1) @[build/NutShell.fir.opt.mlir 24767:29]
      connect perfCnts_43, _perfCnts_43_T_5 @[build/NutShell.fir.opt.mlir 24768:9]
    when perfCntCond_44 : @[build/NutShell.fir.opt.mlir 24770:7]
      node _perfCnts_44_T_4 = add(perfCnts_44, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24772:29]
      node _perfCnts_44_T_5 = tail(_perfCnts_44_T_4, 1) @[build/NutShell.fir.opt.mlir 24774:29]
      connect perfCnts_44, _perfCnts_44_T_5 @[build/NutShell.fir.opt.mlir 24775:9]
    when perfCntCond_45 : @[build/NutShell.fir.opt.mlir 24777:7]
      node _perfCnts_45_T_4 = add(perfCnts_45, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24779:29]
      node _perfCnts_45_T_5 = tail(_perfCnts_45_T_4, 1) @[build/NutShell.fir.opt.mlir 24781:29]
      connect perfCnts_45, _perfCnts_45_T_5 @[build/NutShell.fir.opt.mlir 24782:9]
    when perfCntCond_46 : @[build/NutShell.fir.opt.mlir 24784:7]
      node _perfCnts_46_T_4 = add(perfCnts_46, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24786:29]
      node _perfCnts_46_T_5 = tail(_perfCnts_46_T_4, 1) @[build/NutShell.fir.opt.mlir 24788:29]
      connect perfCnts_46, _perfCnts_46_T_5 @[build/NutShell.fir.opt.mlir 24789:9]
    when perfCntCond_47 : @[build/NutShell.fir.opt.mlir 24791:7]
      node _perfCnts_47_T_4 = add(perfCnts_47, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24793:29]
      node _perfCnts_47_T_5 = tail(_perfCnts_47_T_4, 1) @[build/NutShell.fir.opt.mlir 24795:29]
      connect perfCnts_47, _perfCnts_47_T_5 @[build/NutShell.fir.opt.mlir 24796:9]
    when perfCntCond_48 : @[build/NutShell.fir.opt.mlir 24798:7]
      node _perfCnts_48_T_4 = add(perfCnts_48, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24800:29]
      node _perfCnts_48_T_5 = tail(_perfCnts_48_T_4, 1) @[build/NutShell.fir.opt.mlir 24802:29]
      connect perfCnts_48, _perfCnts_48_T_5 @[build/NutShell.fir.opt.mlir 24803:9]
    when perfCntCond_49 : @[build/NutShell.fir.opt.mlir 24805:7]
      node _perfCnts_49_T_4 = add(perfCnts_49, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24807:29]
      node _perfCnts_49_T_5 = tail(_perfCnts_49_T_4, 1) @[build/NutShell.fir.opt.mlir 24809:29]
      connect perfCnts_49, _perfCnts_49_T_5 @[build/NutShell.fir.opt.mlir 24810:9]
    when perfCntCond_50 : @[build/NutShell.fir.opt.mlir 24812:7]
      node _perfCnts_50_T_4 = add(perfCnts_50, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24814:29]
      node _perfCnts_50_T_5 = tail(_perfCnts_50_T_4, 1) @[build/NutShell.fir.opt.mlir 24816:29]
      connect perfCnts_50, _perfCnts_50_T_5 @[build/NutShell.fir.opt.mlir 24817:9]
    when perfCntCond_51 : @[build/NutShell.fir.opt.mlir 24819:7]
      node _perfCnts_51_T_4 = add(perfCnts_51, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24821:29]
      node _perfCnts_51_T_5 = tail(_perfCnts_51_T_4, 1) @[build/NutShell.fir.opt.mlir 24823:29]
      connect perfCnts_51, _perfCnts_51_T_5 @[build/NutShell.fir.opt.mlir 24824:9]
    when perfCntCond_52 : @[build/NutShell.fir.opt.mlir 24826:7]
      node _perfCnts_52_T_4 = add(perfCnts_52, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24828:29]
      node _perfCnts_52_T_5 = tail(_perfCnts_52_T_4, 1) @[build/NutShell.fir.opt.mlir 24830:29]
      connect perfCnts_52, _perfCnts_52_T_5 @[build/NutShell.fir.opt.mlir 24831:9]
    when perfCntCond_53 : @[build/NutShell.fir.opt.mlir 24833:7]
      node _perfCnts_53_T_4 = add(perfCnts_53, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24835:29]
      node _perfCnts_53_T_5 = tail(_perfCnts_53_T_4, 1) @[build/NutShell.fir.opt.mlir 24837:29]
      connect perfCnts_53, _perfCnts_53_T_5 @[build/NutShell.fir.opt.mlir 24838:9]
    when perfCntCond_54 : @[build/NutShell.fir.opt.mlir 24840:7]
      node _perfCnts_54_T_4 = add(perfCnts_54, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24842:29]
      node _perfCnts_54_T_5 = tail(_perfCnts_54_T_4, 1) @[build/NutShell.fir.opt.mlir 24844:29]
      connect perfCnts_54, _perfCnts_54_T_5 @[build/NutShell.fir.opt.mlir 24845:9]
    when perfCntCond_55 : @[build/NutShell.fir.opt.mlir 24847:7]
      node _perfCnts_55_T_4 = add(perfCnts_55, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24849:29]
      node _perfCnts_55_T_5 = tail(_perfCnts_55_T_4, 1) @[build/NutShell.fir.opt.mlir 24851:29]
      connect perfCnts_55, _perfCnts_55_T_5 @[build/NutShell.fir.opt.mlir 24852:9]
    when perfCntCond_56 : @[build/NutShell.fir.opt.mlir 24854:7]
      node _perfCnts_56_T_4 = add(perfCnts_56, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24856:29]
      node _perfCnts_56_T_5 = tail(_perfCnts_56_T_4, 1) @[build/NutShell.fir.opt.mlir 24858:29]
      connect perfCnts_56, _perfCnts_56_T_5 @[build/NutShell.fir.opt.mlir 24859:9]
    when perfCntCond_57 : @[build/NutShell.fir.opt.mlir 24861:7]
      node _perfCnts_57_T_4 = add(perfCnts_57, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24863:29]
      node _perfCnts_57_T_5 = tail(_perfCnts_57_T_4, 1) @[build/NutShell.fir.opt.mlir 24865:29]
      connect perfCnts_57, _perfCnts_57_T_5 @[build/NutShell.fir.opt.mlir 24866:9]
    when perfCntCond_58 : @[build/NutShell.fir.opt.mlir 24868:7]
      node _perfCnts_58_T_4 = add(perfCnts_58, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24870:29]
      node _perfCnts_58_T_5 = tail(_perfCnts_58_T_4, 1) @[build/NutShell.fir.opt.mlir 24872:29]
      connect perfCnts_58, _perfCnts_58_T_5 @[build/NutShell.fir.opt.mlir 24873:9]
    when perfCntCond_59 : @[build/NutShell.fir.opt.mlir 24875:7]
      node _perfCnts_59_T_4 = add(perfCnts_59, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24877:29]
      node _perfCnts_59_T_5 = tail(_perfCnts_59_T_4, 1) @[build/NutShell.fir.opt.mlir 24879:29]
      connect perfCnts_59, _perfCnts_59_T_5 @[build/NutShell.fir.opt.mlir 24880:9]
    when perfCntCond_60 : @[build/NutShell.fir.opt.mlir 24882:7]
      node _perfCnts_60_T_4 = add(perfCnts_60, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24884:29]
      node _perfCnts_60_T_5 = tail(_perfCnts_60_T_4, 1) @[build/NutShell.fir.opt.mlir 24886:29]
      connect perfCnts_60, _perfCnts_60_T_5 @[build/NutShell.fir.opt.mlir 24887:9]
    when perfCntCond_61 : @[build/NutShell.fir.opt.mlir 24889:7]
      node _perfCnts_61_T_4 = add(perfCnts_61, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24891:29]
      node _perfCnts_61_T_5 = tail(_perfCnts_61_T_4, 1) @[build/NutShell.fir.opt.mlir 24893:29]
      connect perfCnts_61, _perfCnts_61_T_5 @[build/NutShell.fir.opt.mlir 24894:9]
    when perfCntCond_62 : @[build/NutShell.fir.opt.mlir 24896:7]
      node _perfCnts_62_T_4 = add(perfCnts_62, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24898:29]
      node _perfCnts_62_T_5 = tail(_perfCnts_62_T_4, 1) @[build/NutShell.fir.opt.mlir 24900:29]
      connect perfCnts_62, _perfCnts_62_T_5 @[build/NutShell.fir.opt.mlir 24901:9]
    when perfCntCond_63 : @[build/NutShell.fir.opt.mlir 24903:7]
      node _perfCnts_63_T_4 = add(perfCnts_63, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24905:29]
      node _perfCnts_63_T_5 = tail(_perfCnts_63_T_4, 1) @[build/NutShell.fir.opt.mlir 24907:29]
      connect perfCnts_63, _perfCnts_63_T_5 @[build/NutShell.fir.opt.mlir 24908:9]
    when perfCntCond_64 : @[build/NutShell.fir.opt.mlir 24910:7]
      node _perfCnts_64_T_4 = add(perfCnts_64, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24912:29]
      node _perfCnts_64_T_5 = tail(_perfCnts_64_T_4, 1) @[build/NutShell.fir.opt.mlir 24914:29]
      connect perfCnts_64, _perfCnts_64_T_5 @[build/NutShell.fir.opt.mlir 24915:9]
    when perfCntCond_65 : @[build/NutShell.fir.opt.mlir 24917:7]
      node _perfCnts_65_T_4 = add(perfCnts_65, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24919:29]
      node _perfCnts_65_T_5 = tail(_perfCnts_65_T_4, 1) @[build/NutShell.fir.opt.mlir 24921:29]
      connect perfCnts_65, _perfCnts_65_T_5 @[build/NutShell.fir.opt.mlir 24922:9]
    when perfCntCond_66 : @[build/NutShell.fir.opt.mlir 24924:7]
      node _perfCnts_66_T_4 = add(perfCnts_66, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24926:29]
      node _perfCnts_66_T_5 = tail(_perfCnts_66_T_4, 1) @[build/NutShell.fir.opt.mlir 24928:29]
      connect perfCnts_66, _perfCnts_66_T_5 @[build/NutShell.fir.opt.mlir 24929:9]
    when perfCntCond_67 : @[build/NutShell.fir.opt.mlir 24931:7]
      node _perfCnts_67_T_4 = add(perfCnts_67, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24933:29]
      node _perfCnts_67_T_5 = tail(_perfCnts_67_T_4, 1) @[build/NutShell.fir.opt.mlir 24935:29]
      connect perfCnts_67, _perfCnts_67_T_5 @[build/NutShell.fir.opt.mlir 24936:9]
    when perfCntCond_68 : @[build/NutShell.fir.opt.mlir 24938:7]
      node _perfCnts_68_T_4 = add(perfCnts_68, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24940:29]
      node _perfCnts_68_T_5 = tail(_perfCnts_68_T_4, 1) @[build/NutShell.fir.opt.mlir 24942:29]
      connect perfCnts_68, _perfCnts_68_T_5 @[build/NutShell.fir.opt.mlir 24943:9]
    when perfCntCond_69 : @[build/NutShell.fir.opt.mlir 24945:7]
      node _perfCnts_69_T_4 = add(perfCnts_69, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24947:29]
      node _perfCnts_69_T_5 = tail(_perfCnts_69_T_4, 1) @[build/NutShell.fir.opt.mlir 24949:29]
      connect perfCnts_69, _perfCnts_69_T_5 @[build/NutShell.fir.opt.mlir 24950:9]
    when perfCntCond_70 : @[build/NutShell.fir.opt.mlir 24952:7]
      node _perfCnts_70_T_4 = add(perfCnts_70, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24954:29]
      node _perfCnts_70_T_5 = tail(_perfCnts_70_T_4, 1) @[build/NutShell.fir.opt.mlir 24956:29]
      connect perfCnts_70, _perfCnts_70_T_5 @[build/NutShell.fir.opt.mlir 24957:9]
    when perfCntCond_71 : @[build/NutShell.fir.opt.mlir 24959:7]
      node _perfCnts_71_T_4 = add(perfCnts_71, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24961:29]
      node _perfCnts_71_T_5 = tail(_perfCnts_71_T_4, 1) @[build/NutShell.fir.opt.mlir 24963:29]
      connect perfCnts_71, _perfCnts_71_T_5 @[build/NutShell.fir.opt.mlir 24964:9]
    when perfCntCond_72 : @[build/NutShell.fir.opt.mlir 24966:7]
      node _perfCnts_72_T_4 = add(perfCnts_72, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24968:29]
      node _perfCnts_72_T_5 = tail(_perfCnts_72_T_4, 1) @[build/NutShell.fir.opt.mlir 24970:29]
      connect perfCnts_72, _perfCnts_72_T_5 @[build/NutShell.fir.opt.mlir 24971:9]
    when perfCntCond_73 : @[build/NutShell.fir.opt.mlir 24973:7]
      node _perfCnts_73_T_4 = add(perfCnts_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24975:29]
      node _perfCnts_73_T_5 = tail(_perfCnts_73_T_4, 1) @[build/NutShell.fir.opt.mlir 24977:29]
      connect perfCnts_73, _perfCnts_73_T_5 @[build/NutShell.fir.opt.mlir 24978:9]
    when perfCntCond_74 : @[build/NutShell.fir.opt.mlir 24980:7]
      node _perfCnts_74_T_4 = add(perfCnts_74, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24982:29]
      node _perfCnts_74_T_5 = tail(_perfCnts_74_T_4, 1) @[build/NutShell.fir.opt.mlir 24984:29]
      connect perfCnts_74, _perfCnts_74_T_5 @[build/NutShell.fir.opt.mlir 24985:9]
    when perfCntCond_75 : @[build/NutShell.fir.opt.mlir 24987:7]
      node _perfCnts_75_T_4 = add(perfCnts_75, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24989:29]
      node _perfCnts_75_T_5 = tail(_perfCnts_75_T_4, 1) @[build/NutShell.fir.opt.mlir 24991:29]
      connect perfCnts_75, _perfCnts_75_T_5 @[build/NutShell.fir.opt.mlir 24992:9]
    when perfCntCond_76 : @[build/NutShell.fir.opt.mlir 24994:7]
      node _perfCnts_76_T_4 = add(perfCnts_76, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24996:29]
      node _perfCnts_76_T_5 = tail(_perfCnts_76_T_4, 1) @[build/NutShell.fir.opt.mlir 24998:29]
      connect perfCnts_76, _perfCnts_76_T_5 @[build/NutShell.fir.opt.mlir 24999:9]
    when perfCntCond_77 : @[build/NutShell.fir.opt.mlir 25001:7]
      node _perfCnts_77_T_4 = add(perfCnts_77, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25003:29]
      node _perfCnts_77_T_5 = tail(_perfCnts_77_T_4, 1) @[build/NutShell.fir.opt.mlir 25005:29]
      connect perfCnts_77, _perfCnts_77_T_5 @[build/NutShell.fir.opt.mlir 25006:9]
    when perfCntCond_78 : @[build/NutShell.fir.opt.mlir 25008:7]
      node _perfCnts_78_T_4 = add(perfCnts_78, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25010:29]
      node _perfCnts_78_T_5 = tail(_perfCnts_78_T_4, 1) @[build/NutShell.fir.opt.mlir 25012:29]
      connect perfCnts_78, _perfCnts_78_T_5 @[build/NutShell.fir.opt.mlir 25013:9]
    when perfCntCond_79 : @[build/NutShell.fir.opt.mlir 25015:7]
      node _perfCnts_79_T_4 = add(perfCnts_79, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25017:29]
      node _perfCnts_79_T_5 = tail(_perfCnts_79_T_4, 1) @[build/NutShell.fir.opt.mlir 25019:29]
      connect perfCnts_79, _perfCnts_79_T_5 @[build/NutShell.fir.opt.mlir 25020:9]
    when perfCntCond_80 : @[build/NutShell.fir.opt.mlir 25022:7]
      node _perfCnts_80_T_4 = add(perfCnts_80, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25024:29]
      node _perfCnts_80_T_5 = tail(_perfCnts_80_T_4, 1) @[build/NutShell.fir.opt.mlir 25026:29]
      connect perfCnts_80, _perfCnts_80_T_5 @[build/NutShell.fir.opt.mlir 25027:9]
    when perfCntCond_81 : @[build/NutShell.fir.opt.mlir 25029:7]
      node _perfCnts_81_T_4 = add(perfCnts_81, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25031:29]
      node _perfCnts_81_T_5 = tail(_perfCnts_81_T_4, 1) @[build/NutShell.fir.opt.mlir 25033:29]
      connect perfCnts_81, _perfCnts_81_T_5 @[build/NutShell.fir.opt.mlir 25034:9]
    when perfCntCond_82 : @[build/NutShell.fir.opt.mlir 25036:7]
      node _perfCnts_82_T_4 = add(perfCnts_82, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25038:29]
      node _perfCnts_82_T_5 = tail(_perfCnts_82_T_4, 1) @[build/NutShell.fir.opt.mlir 25040:29]
      connect perfCnts_82, _perfCnts_82_T_5 @[build/NutShell.fir.opt.mlir 25041:9]
    when perfCntCond_83 : @[build/NutShell.fir.opt.mlir 25043:7]
      node _perfCnts_83_T_4 = add(perfCnts_83, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25045:29]
      node _perfCnts_83_T_5 = tail(_perfCnts_83_T_4, 1) @[build/NutShell.fir.opt.mlir 25047:29]
      connect perfCnts_83, _perfCnts_83_T_5 @[build/NutShell.fir.opt.mlir 25048:9]
    when perfCntCond_84 : @[build/NutShell.fir.opt.mlir 25050:7]
      node _perfCnts_84_T_4 = add(perfCnts_84, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25052:29]
      node _perfCnts_84_T_5 = tail(_perfCnts_84_T_4, 1) @[build/NutShell.fir.opt.mlir 25054:29]
      connect perfCnts_84, _perfCnts_84_T_5 @[build/NutShell.fir.opt.mlir 25055:9]
    when perfCntCond_85 : @[build/NutShell.fir.opt.mlir 25057:7]
      node _perfCnts_85_T_4 = add(perfCnts_85, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25059:29]
      node _perfCnts_85_T_5 = tail(_perfCnts_85_T_4, 1) @[build/NutShell.fir.opt.mlir 25061:29]
      connect perfCnts_85, _perfCnts_85_T_5 @[build/NutShell.fir.opt.mlir 25062:9]
    when perfCntCond_86 : @[build/NutShell.fir.opt.mlir 25064:7]
      node _perfCnts_86_T_4 = add(perfCnts_86, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25066:29]
      node _perfCnts_86_T_5 = tail(_perfCnts_86_T_4, 1) @[build/NutShell.fir.opt.mlir 25068:29]
      connect perfCnts_86, _perfCnts_86_T_5 @[build/NutShell.fir.opt.mlir 25069:9]
    when perfCntCond_87 : @[build/NutShell.fir.opt.mlir 25071:7]
      node _perfCnts_87_T_4 = add(perfCnts_87, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25073:29]
      node _perfCnts_87_T_5 = tail(_perfCnts_87_T_4, 1) @[build/NutShell.fir.opt.mlir 25075:29]
      connect perfCnts_87, _perfCnts_87_T_5 @[build/NutShell.fir.opt.mlir 25076:9]
    when perfCntCond_88 : @[build/NutShell.fir.opt.mlir 25078:7]
      node _perfCnts_88_T_4 = add(perfCnts_88, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25080:29]
      node _perfCnts_88_T_5 = tail(_perfCnts_88_T_4, 1) @[build/NutShell.fir.opt.mlir 25082:29]
      connect perfCnts_88, _perfCnts_88_T_5 @[build/NutShell.fir.opt.mlir 25083:9]
    when perfCntCond_89 : @[build/NutShell.fir.opt.mlir 25085:7]
      node _perfCnts_89_T_4 = add(perfCnts_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25087:29]
      node _perfCnts_89_T_5 = tail(_perfCnts_89_T_4, 1) @[build/NutShell.fir.opt.mlir 25089:29]
      connect perfCnts_89, _perfCnts_89_T_5 @[build/NutShell.fir.opt.mlir 25090:9]
    when perfCntCond_90 : @[build/NutShell.fir.opt.mlir 25092:7]
      node _perfCnts_90_T_4 = add(perfCnts_90, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25094:29]
      node _perfCnts_90_T_5 = tail(_perfCnts_90_T_4, 1) @[build/NutShell.fir.opt.mlir 25096:29]
      connect perfCnts_90, _perfCnts_90_T_5 @[build/NutShell.fir.opt.mlir 25097:9]
    when perfCntCond_91 : @[build/NutShell.fir.opt.mlir 25099:7]
      node _perfCnts_91_T_4 = add(perfCnts_91, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25101:29]
      node _perfCnts_91_T_5 = tail(_perfCnts_91_T_4, 1) @[build/NutShell.fir.opt.mlir 25103:29]
      connect perfCnts_91, _perfCnts_91_T_5 @[build/NutShell.fir.opt.mlir 25104:9]
    when perfCntCond_92 : @[build/NutShell.fir.opt.mlir 25106:7]
      node _perfCnts_92_T_4 = add(perfCnts_92, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25108:29]
      node _perfCnts_92_T_5 = tail(_perfCnts_92_T_4, 1) @[build/NutShell.fir.opt.mlir 25110:29]
      connect perfCnts_92, _perfCnts_92_T_5 @[build/NutShell.fir.opt.mlir 25111:9]
    when perfCntCond_93 : @[build/NutShell.fir.opt.mlir 25113:7]
      node _perfCnts_93_T_4 = add(perfCnts_93, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25115:29]
      node _perfCnts_93_T_5 = tail(_perfCnts_93_T_4, 1) @[build/NutShell.fir.opt.mlir 25117:29]
      connect perfCnts_93, _perfCnts_93_T_5 @[build/NutShell.fir.opt.mlir 25118:9]
    when perfCntCond_94 : @[build/NutShell.fir.opt.mlir 25120:7]
      node _perfCnts_94_T_4 = add(perfCnts_94, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25122:29]
      node _perfCnts_94_T_5 = tail(_perfCnts_94_T_4, 1) @[build/NutShell.fir.opt.mlir 25124:29]
      connect perfCnts_94, _perfCnts_94_T_5 @[build/NutShell.fir.opt.mlir 25125:9]
    when perfCntCond_95 : @[build/NutShell.fir.opt.mlir 25127:7]
      node _perfCnts_95_T_4 = add(perfCnts_95, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25129:29]
      node _perfCnts_95_T_5 = tail(_perfCnts_95_T_4, 1) @[build/NutShell.fir.opt.mlir 25131:29]
      connect perfCnts_95, _perfCnts_95_T_5 @[build/NutShell.fir.opt.mlir 25132:9]
    when perfCntCond_96 : @[build/NutShell.fir.opt.mlir 25134:7]
      node _perfCnts_96_T_4 = add(perfCnts_96, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25136:29]
      node _perfCnts_96_T_5 = tail(_perfCnts_96_T_4, 1) @[build/NutShell.fir.opt.mlir 25138:29]
      connect perfCnts_96, _perfCnts_96_T_5 @[build/NutShell.fir.opt.mlir 25139:9]
    when perfCntCond_97 : @[build/NutShell.fir.opt.mlir 25141:7]
      node _perfCnts_97_T_4 = add(perfCnts_97, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25143:29]
      node _perfCnts_97_T_5 = tail(_perfCnts_97_T_4, 1) @[build/NutShell.fir.opt.mlir 25145:29]
      connect perfCnts_97, _perfCnts_97_T_5 @[build/NutShell.fir.opt.mlir 25146:9]
    when perfCntCond_98 : @[build/NutShell.fir.opt.mlir 25148:7]
      node _perfCnts_98_T_4 = add(perfCnts_98, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25150:29]
      node _perfCnts_98_T_5 = tail(_perfCnts_98_T_4, 1) @[build/NutShell.fir.opt.mlir 25152:29]
      connect perfCnts_98, _perfCnts_98_T_5 @[build/NutShell.fir.opt.mlir 25153:9]
    when perfCntCond_99 : @[build/NutShell.fir.opt.mlir 25155:7]
      node _perfCnts_99_T_4 = add(perfCnts_99, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25157:29]
      node _perfCnts_99_T_5 = tail(_perfCnts_99_T_4, 1) @[build/NutShell.fir.opt.mlir 25159:29]
      connect perfCnts_99, _perfCnts_99_T_5 @[build/NutShell.fir.opt.mlir 25160:9]
    when perfCntCond_100 : @[build/NutShell.fir.opt.mlir 25162:7]
      node _perfCnts_100_T_4 = add(perfCnts_100, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25164:30]
      node _perfCnts_100_T_5 = tail(_perfCnts_100_T_4, 1) @[build/NutShell.fir.opt.mlir 25166:30]
      connect perfCnts_100, _perfCnts_100_T_5 @[build/NutShell.fir.opt.mlir 25167:9]
    when perfCntCond_101 : @[build/NutShell.fir.opt.mlir 25169:7]
      node _perfCnts_101_T_4 = add(perfCnts_101, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25171:30]
      node _perfCnts_101_T_5 = tail(_perfCnts_101_T_4, 1) @[build/NutShell.fir.opt.mlir 25173:30]
      connect perfCnts_101, _perfCnts_101_T_5 @[build/NutShell.fir.opt.mlir 25174:9]
    when perfCntCond_102 : @[build/NutShell.fir.opt.mlir 25176:7]
      node _perfCnts_102_T_4 = add(perfCnts_102, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25178:30]
      node _perfCnts_102_T_5 = tail(_perfCnts_102_T_4, 1) @[build/NutShell.fir.opt.mlir 25180:30]
      connect perfCnts_102, _perfCnts_102_T_5 @[build/NutShell.fir.opt.mlir 25181:9]
    when perfCntCond_103 : @[build/NutShell.fir.opt.mlir 25183:7]
      node _perfCnts_103_T_4 = add(perfCnts_103, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25185:30]
      node _perfCnts_103_T_5 = tail(_perfCnts_103_T_4, 1) @[build/NutShell.fir.opt.mlir 25187:30]
      connect perfCnts_103, _perfCnts_103_T_5 @[build/NutShell.fir.opt.mlir 25188:9]
    when perfCntCond_104 : @[build/NutShell.fir.opt.mlir 25190:7]
      node _perfCnts_104_T_4 = add(perfCnts_104, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25192:30]
      node _perfCnts_104_T_5 = tail(_perfCnts_104_T_4, 1) @[build/NutShell.fir.opt.mlir 25194:30]
      connect perfCnts_104, _perfCnts_104_T_5 @[build/NutShell.fir.opt.mlir 25195:9]
    when perfCntCond_105 : @[build/NutShell.fir.opt.mlir 25197:7]
      node _perfCnts_105_T_4 = add(perfCnts_105, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25199:30]
      node _perfCnts_105_T_5 = tail(_perfCnts_105_T_4, 1) @[build/NutShell.fir.opt.mlir 25201:30]
      connect perfCnts_105, _perfCnts_105_T_5 @[build/NutShell.fir.opt.mlir 25202:9]
    when perfCntCond_106 : @[build/NutShell.fir.opt.mlir 25204:7]
      node _perfCnts_106_T_4 = add(perfCnts_106, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25206:30]
      node _perfCnts_106_T_5 = tail(_perfCnts_106_T_4, 1) @[build/NutShell.fir.opt.mlir 25208:30]
      connect perfCnts_106, _perfCnts_106_T_5 @[build/NutShell.fir.opt.mlir 25209:9]
    when perfCntCond_107 : @[build/NutShell.fir.opt.mlir 25211:7]
      node _perfCnts_107_T_4 = add(perfCnts_107, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25213:30]
      node _perfCnts_107_T_5 = tail(_perfCnts_107_T_4, 1) @[build/NutShell.fir.opt.mlir 25215:30]
      connect perfCnts_107, _perfCnts_107_T_5 @[build/NutShell.fir.opt.mlir 25216:9]
    when perfCntCond_108 : @[build/NutShell.fir.opt.mlir 25218:7]
      node _perfCnts_108_T_4 = add(perfCnts_108, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25220:30]
      node _perfCnts_108_T_5 = tail(_perfCnts_108_T_4, 1) @[build/NutShell.fir.opt.mlir 25222:30]
      connect perfCnts_108, _perfCnts_108_T_5 @[build/NutShell.fir.opt.mlir 25223:9]
    when perfCntCond_109 : @[build/NutShell.fir.opt.mlir 25225:7]
      node _perfCnts_109_T_4 = add(perfCnts_109, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25227:30]
      node _perfCnts_109_T_5 = tail(_perfCnts_109_T_4, 1) @[build/NutShell.fir.opt.mlir 25229:30]
      connect perfCnts_109, _perfCnts_109_T_5 @[build/NutShell.fir.opt.mlir 25230:9]
    when perfCntCond_110 : @[build/NutShell.fir.opt.mlir 25232:7]
      node _perfCnts_110_T_4 = add(perfCnts_110, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25234:30]
      node _perfCnts_110_T_5 = tail(_perfCnts_110_T_4, 1) @[build/NutShell.fir.opt.mlir 25236:30]
      connect perfCnts_110, _perfCnts_110_T_5 @[build/NutShell.fir.opt.mlir 25237:9]
    when perfCntCond_111 : @[build/NutShell.fir.opt.mlir 25239:7]
      node _perfCnts_111_T_4 = add(perfCnts_111, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25241:30]
      node _perfCnts_111_T_5 = tail(_perfCnts_111_T_4, 1) @[build/NutShell.fir.opt.mlir 25243:30]
      connect perfCnts_111, _perfCnts_111_T_5 @[build/NutShell.fir.opt.mlir 25244:9]
    when perfCntCond_112 : @[build/NutShell.fir.opt.mlir 25246:7]
      node _perfCnts_112_T_4 = add(perfCnts_112, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25248:30]
      node _perfCnts_112_T_5 = tail(_perfCnts_112_T_4, 1) @[build/NutShell.fir.opt.mlir 25250:30]
      connect perfCnts_112, _perfCnts_112_T_5 @[build/NutShell.fir.opt.mlir 25251:9]
    when perfCntCond_113 : @[build/NutShell.fir.opt.mlir 25253:7]
      node _perfCnts_113_T_4 = add(perfCnts_113, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25255:30]
      node _perfCnts_113_T_5 = tail(_perfCnts_113_T_4, 1) @[build/NutShell.fir.opt.mlir 25257:30]
      connect perfCnts_113, _perfCnts_113_T_5 @[build/NutShell.fir.opt.mlir 25258:9]
    when perfCntCond_114 : @[build/NutShell.fir.opt.mlir 25260:7]
      node _perfCnts_114_T_4 = add(perfCnts_114, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25262:30]
      node _perfCnts_114_T_5 = tail(_perfCnts_114_T_4, 1) @[build/NutShell.fir.opt.mlir 25264:30]
      connect perfCnts_114, _perfCnts_114_T_5 @[build/NutShell.fir.opt.mlir 25265:9]
    when perfCntCond_115 : @[build/NutShell.fir.opt.mlir 25267:7]
      node _perfCnts_115_T_4 = add(perfCnts_115, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25269:30]
      node _perfCnts_115_T_5 = tail(_perfCnts_115_T_4, 1) @[build/NutShell.fir.opt.mlir 25271:30]
      connect perfCnts_115, _perfCnts_115_T_5 @[build/NutShell.fir.opt.mlir 25272:9]
    when perfCntCond_116 : @[build/NutShell.fir.opt.mlir 25274:7]
      node _perfCnts_116_T_4 = add(perfCnts_116, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25276:30]
      node _perfCnts_116_T_5 = tail(_perfCnts_116_T_4, 1) @[build/NutShell.fir.opt.mlir 25278:30]
      connect perfCnts_116, _perfCnts_116_T_5 @[build/NutShell.fir.opt.mlir 25279:9]
    when perfCntCond_117 : @[build/NutShell.fir.opt.mlir 25281:7]
      node _perfCnts_117_T_4 = add(perfCnts_117, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25283:30]
      node _perfCnts_117_T_5 = tail(_perfCnts_117_T_4, 1) @[build/NutShell.fir.opt.mlir 25285:30]
      connect perfCnts_117, _perfCnts_117_T_5 @[build/NutShell.fir.opt.mlir 25286:9]
    when perfCntCond_118 : @[build/NutShell.fir.opt.mlir 25288:7]
      node _perfCnts_118_T_4 = add(perfCnts_118, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25290:30]
      node _perfCnts_118_T_5 = tail(_perfCnts_118_T_4, 1) @[build/NutShell.fir.opt.mlir 25292:30]
      connect perfCnts_118, _perfCnts_118_T_5 @[build/NutShell.fir.opt.mlir 25293:9]
    when perfCntCond_119 : @[build/NutShell.fir.opt.mlir 25295:7]
      node _perfCnts_119_T_4 = add(perfCnts_119, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25297:30]
      node _perfCnts_119_T_5 = tail(_perfCnts_119_T_4, 1) @[build/NutShell.fir.opt.mlir 25299:30]
      connect perfCnts_119, _perfCnts_119_T_5 @[build/NutShell.fir.opt.mlir 25300:9]
    when perfCntCond_120 : @[build/NutShell.fir.opt.mlir 25302:7]
      node _perfCnts_120_T_4 = add(perfCnts_120, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25304:30]
      node _perfCnts_120_T_5 = tail(_perfCnts_120_T_4, 1) @[build/NutShell.fir.opt.mlir 25306:30]
      connect perfCnts_120, _perfCnts_120_T_5 @[build/NutShell.fir.opt.mlir 25307:9]
    when perfCntCond_121 : @[build/NutShell.fir.opt.mlir 25309:7]
      node _perfCnts_121_T_4 = add(perfCnts_121, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25311:30]
      node _perfCnts_121_T_5 = tail(_perfCnts_121_T_4, 1) @[build/NutShell.fir.opt.mlir 25313:30]
      connect perfCnts_121, _perfCnts_121_T_5 @[build/NutShell.fir.opt.mlir 25314:9]
    when perfCntCond_122 : @[build/NutShell.fir.opt.mlir 25316:7]
      node _perfCnts_122_T_4 = add(perfCnts_122, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25318:30]
      node _perfCnts_122_T_5 = tail(_perfCnts_122_T_4, 1) @[build/NutShell.fir.opt.mlir 25320:30]
      connect perfCnts_122, _perfCnts_122_T_5 @[build/NutShell.fir.opt.mlir 25321:9]
    when perfCntCond_123 : @[build/NutShell.fir.opt.mlir 25323:7]
      node _perfCnts_123_T_4 = add(perfCnts_123, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25325:30]
      node _perfCnts_123_T_5 = tail(_perfCnts_123_T_4, 1) @[build/NutShell.fir.opt.mlir 25327:30]
      connect perfCnts_123, _perfCnts_123_T_5 @[build/NutShell.fir.opt.mlir 25328:9]
    when perfCntCond_124 : @[build/NutShell.fir.opt.mlir 25330:7]
      node _perfCnts_124_T_4 = add(perfCnts_124, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25332:30]
      node _perfCnts_124_T_5 = tail(_perfCnts_124_T_4, 1) @[build/NutShell.fir.opt.mlir 25334:30]
      connect perfCnts_124, _perfCnts_124_T_5 @[build/NutShell.fir.opt.mlir 25335:9]
    when perfCntCond_125 : @[build/NutShell.fir.opt.mlir 25337:7]
      node _perfCnts_125_T_4 = add(perfCnts_125, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25339:30]
      node _perfCnts_125_T_5 = tail(_perfCnts_125_T_4, 1) @[build/NutShell.fir.opt.mlir 25341:30]
      connect perfCnts_125, _perfCnts_125_T_5 @[build/NutShell.fir.opt.mlir 25342:9]
    when perfCntCond_126 : @[build/NutShell.fir.opt.mlir 25344:7]
      node _perfCnts_126_T_4 = add(perfCnts_126, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25346:30]
      node _perfCnts_126_T_5 = tail(_perfCnts_126_T_4, 1) @[build/NutShell.fir.opt.mlir 25348:30]
      connect perfCnts_126, _perfCnts_126_T_5 @[build/NutShell.fir.opt.mlir 25349:9]
    when perfCntCond_127 : @[build/NutShell.fir.opt.mlir 25351:7]
      node _perfCnts_127_T_4 = add(perfCnts_127, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25353:30]
      node _perfCnts_127_T_5 = tail(_perfCnts_127_T_4, 1) @[build/NutShell.fir.opt.mlir 25355:30]
      connect perfCnts_127, _perfCnts_127_T_5 @[build/NutShell.fir.opt.mlir 25356:9]
    wire pendingLS : UInt<5> @[build/NutShell.fir.opt.mlir 25358:20]
    connect pendingLS, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25361:7]
    wire pendingSCmt : UInt<5> @[build/NutShell.fir.opt.mlir 25362:22]
    connect pendingSCmt, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25364:7]
    wire pendingSReq : UInt<5> @[build/NutShell.fir.opt.mlir 25365:22]
    connect pendingSReq, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25367:7]
    when perfCntCond_3 : @[build/NutShell.fir.opt.mlir 25368:7]
      node _perfCnts_2_T_6 = add(perfCnts_2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 25370:28]
      node _perfCnts_2_T_7 = tail(_perfCnts_2_T_6, 1) @[build/NutShell.fir.opt.mlir 25372:28]
      connect perfCnts_2, _perfCnts_2_T_7 @[build/NutShell.fir.opt.mlir 25373:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25375:7]
      node _perfCnts_99_T_6 = add(perfCnts_99, pendingLS) @[build/NutShell.fir.opt.mlir 25377:29]
      node _perfCnts_99_T_7 = tail(_perfCnts_99_T_6, 1) @[build/NutShell.fir.opt.mlir 25379:29]
      connect perfCnts_99, _perfCnts_99_T_7 @[build/NutShell.fir.opt.mlir 25380:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25382:7]
      node _perfCnts_100_T_6 = add(perfCnts_100, pendingSCmt) @[build/NutShell.fir.opt.mlir 25384:30]
      node _perfCnts_100_T_7 = tail(_perfCnts_100_T_6, 1) @[build/NutShell.fir.opt.mlir 25386:30]
      connect perfCnts_100, _perfCnts_100_T_7 @[build/NutShell.fir.opt.mlir 25387:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25389:7]
      node _perfCnts_101_T_6 = add(perfCnts_102, pendingSReq) @[build/NutShell.fir.opt.mlir 25391:30]
      node _perfCnts_101_T_7 = tail(_perfCnts_101_T_6, 1) @[build/NutShell.fir.opt.mlir 25393:30]
      connect perfCnts_101, _perfCnts_101_T_7 @[build/NutShell.fir.opt.mlir 25394:9]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 25396:18]
    connect _WIRE_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 25398:7]
    wire nutcoretrap : UInt<1> @[build/NutShell.fir.opt.mlir 25399:22]
    connect nutcoretrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 25401:7]
    when nutcoretrap : @[build/NutShell.fir.opt.mlir 25402:7]
      node _T_443 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25404:19]
      node _T_444 = eq(_T_443, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25406:19]
      when _T_444 : @[build/NutShell.fir.opt.mlir 25407:9]
        skip @[build/NutShell.fir.opt.mlir 25408:11]
      node _T_445 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25411:19]
      node _T_446 = eq(_T_445, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25413:19]
      when _T_446 : @[build/NutShell.fir.opt.mlir 25414:9]
        skip @[build/NutShell.fir.opt.mlir 25415:11]
      node _T_447 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25418:19]
      node _T_448 = eq(_T_447, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25420:19]
      when _T_448 : @[build/NutShell.fir.opt.mlir 25421:9]
        skip @[build/NutShell.fir.opt.mlir 25422:11]
      node _T_449 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25425:19]
      node _T_450 = eq(_T_449, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25427:19]
      when _T_450 : @[build/NutShell.fir.opt.mlir 25428:9]
        skip @[build/NutShell.fir.opt.mlir 25429:11]
      node _T_451 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25432:19]
      node _T_452 = eq(_T_451, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25434:19]
      when _T_452 : @[build/NutShell.fir.opt.mlir 25435:9]
        skip @[build/NutShell.fir.opt.mlir 25436:11]
      node _T_453 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25439:19]
      node _T_454 = eq(_T_453, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25441:19]
      when _T_454 : @[build/NutShell.fir.opt.mlir 25442:9]
        skip @[build/NutShell.fir.opt.mlir 25443:11]
      node _T_455 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25446:19]
      node _T_456 = eq(_T_455, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25448:19]
      when _T_456 : @[build/NutShell.fir.opt.mlir 25449:9]
        skip @[build/NutShell.fir.opt.mlir 25450:11]
      node _T_457 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25453:19]
      node _T_458 = eq(_T_457, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25455:19]
      when _T_458 : @[build/NutShell.fir.opt.mlir 25456:9]
        skip @[build/NutShell.fir.opt.mlir 25457:11]
      node _T_459 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25460:19]
      node _T_460 = eq(_T_459, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25462:19]
      when _T_460 : @[build/NutShell.fir.opt.mlir 25463:9]
        skip @[build/NutShell.fir.opt.mlir 25464:11]
      node _T_461 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25467:19]
      node _T_462 = eq(_T_461, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25469:19]
      when _T_462 : @[build/NutShell.fir.opt.mlir 25470:9]
        skip @[build/NutShell.fir.opt.mlir 25471:11]
      node _T_463 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25474:19]
      node _T_464 = eq(_T_463, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25476:19]
      when _T_464 : @[build/NutShell.fir.opt.mlir 25477:9]
        skip @[build/NutShell.fir.opt.mlir 25478:11]
      node _T_465 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25481:19]
      node _T_466 = eq(_T_465, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25483:19]
      when _T_466 : @[build/NutShell.fir.opt.mlir 25484:9]
        skip @[build/NutShell.fir.opt.mlir 25485:11]
      node _T_467 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25488:19]
      node _T_468 = eq(_T_467, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25490:19]
      when _T_468 : @[build/NutShell.fir.opt.mlir 25491:9]
        skip @[build/NutShell.fir.opt.mlir 25492:11]
      node _T_469 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25495:19]
      node _T_470 = eq(_T_469, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25497:19]
      when _T_470 : @[build/NutShell.fir.opt.mlir 25498:9]
        skip @[build/NutShell.fir.opt.mlir 25499:11]
      node _T_471 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25502:19]
      node _T_472 = eq(_T_471, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25504:19]
      when _T_472 : @[build/NutShell.fir.opt.mlir 25505:9]
        skip @[build/NutShell.fir.opt.mlir 25506:11]
      node _T_473 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25509:19]
      node _T_474 = eq(_T_473, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25511:19]
      when _T_474 : @[build/NutShell.fir.opt.mlir 25512:9]
        skip @[build/NutShell.fir.opt.mlir 25513:11]
      node _T_475 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25516:19]
      node _T_476 = eq(_T_475, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25518:19]
      when _T_476 : @[build/NutShell.fir.opt.mlir 25519:9]
        skip @[build/NutShell.fir.opt.mlir 25520:11]
      node _T_477 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25523:19]
      node _T_478 = eq(_T_477, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25525:19]
      when _T_478 : @[build/NutShell.fir.opt.mlir 25526:9]
        skip @[build/NutShell.fir.opt.mlir 25527:11]
      node _T_479 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25530:19]
      node _T_480 = eq(_T_479, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25532:19]
      when _T_480 : @[build/NutShell.fir.opt.mlir 25533:9]
        skip @[build/NutShell.fir.opt.mlir 25534:11]
      node _T_481 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25537:19]
      node _T_482 = eq(_T_481, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25539:19]
      when _T_482 : @[build/NutShell.fir.opt.mlir 25540:9]
        skip @[build/NutShell.fir.opt.mlir 25541:11]
      node _T_483 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25544:19]
      node _T_484 = eq(_T_483, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25546:19]
      when _T_484 : @[build/NutShell.fir.opt.mlir 25547:9]
        skip @[build/NutShell.fir.opt.mlir 25548:11]
      node _T_485 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25551:19]
      node _T_486 = eq(_T_485, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25553:19]
      when _T_486 : @[build/NutShell.fir.opt.mlir 25554:9]
        skip @[build/NutShell.fir.opt.mlir 25555:11]
      node _T_487 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25558:19]
      node _T_488 = eq(_T_487, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25560:19]
      when _T_488 : @[build/NutShell.fir.opt.mlir 25561:9]
        skip @[build/NutShell.fir.opt.mlir 25562:11]
      node _T_489 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25565:19]
      node _T_490 = eq(_T_489, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25567:19]
      when _T_490 : @[build/NutShell.fir.opt.mlir 25568:9]
        skip @[build/NutShell.fir.opt.mlir 25569:11]
      node _T_491 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25572:19]
      node _T_492 = eq(_T_491, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25574:19]
      when _T_492 : @[build/NutShell.fir.opt.mlir 25575:9]
        skip @[build/NutShell.fir.opt.mlir 25576:11]
      node _T_493 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25579:19]
      node _T_494 = eq(_T_493, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25581:19]
      when _T_494 : @[build/NutShell.fir.opt.mlir 25582:9]
        skip @[build/NutShell.fir.opt.mlir 25583:11]
      node _T_495 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25586:19]
      node _T_496 = eq(_T_495, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25588:19]
      when _T_496 : @[build/NutShell.fir.opt.mlir 25589:9]
        skip @[build/NutShell.fir.opt.mlir 25590:11]
      node _T_497 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25593:19]
      node _T_498 = eq(_T_497, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25595:19]
      when _T_498 : @[build/NutShell.fir.opt.mlir 25596:9]
        skip @[build/NutShell.fir.opt.mlir 25597:11]
      node _T_499 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25600:19]
      node _T_500 = eq(_T_499, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25602:19]
      when _T_500 : @[build/NutShell.fir.opt.mlir 25603:9]
        skip @[build/NutShell.fir.opt.mlir 25604:11]
      node _T_501 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25607:19]
      node _T_502 = eq(_T_501, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25609:19]
      when _T_502 : @[build/NutShell.fir.opt.mlir 25610:9]
        skip @[build/NutShell.fir.opt.mlir 25611:11]
      node _T_503 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25614:19]
      node _T_504 = eq(_T_503, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25616:19]
      when _T_504 : @[build/NutShell.fir.opt.mlir 25617:9]
        skip @[build/NutShell.fir.opt.mlir 25618:11]
      node _T_505 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25621:19]
      node _T_506 = eq(_T_505, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25623:19]
      when _T_506 : @[build/NutShell.fir.opt.mlir 25624:9]
        skip @[build/NutShell.fir.opt.mlir 25625:11]
      node _T_507 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25628:19]
      node _T_508 = eq(_T_507, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25630:19]
      when _T_508 : @[build/NutShell.fir.opt.mlir 25631:9]
        skip @[build/NutShell.fir.opt.mlir 25632:11]
      node _T_509 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25635:19]
      node _T_510 = eq(_T_509, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25637:19]
      when _T_510 : @[build/NutShell.fir.opt.mlir 25638:9]
        skip @[build/NutShell.fir.opt.mlir 25639:11]
      node _T_511 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25642:19]
      node _T_512 = eq(_T_511, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25644:19]
      when _T_512 : @[build/NutShell.fir.opt.mlir 25645:9]
        skip @[build/NutShell.fir.opt.mlir 25646:11]
      node _T_513 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25649:19]
      node _T_514 = eq(_T_513, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25651:19]
      when _T_514 : @[build/NutShell.fir.opt.mlir 25652:9]
        skip @[build/NutShell.fir.opt.mlir 25653:11]
      node _T_515 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25656:19]
      node _T_516 = eq(_T_515, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25658:19]
      when _T_516 : @[build/NutShell.fir.opt.mlir 25659:9]
        skip @[build/NutShell.fir.opt.mlir 25660:11]
      node _T_517 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25663:19]
      node _T_518 = eq(_T_517, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25665:19]
      when _T_518 : @[build/NutShell.fir.opt.mlir 25666:9]
        skip @[build/NutShell.fir.opt.mlir 25667:11]
      node _T_519 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25670:19]
      node _T_520 = eq(_T_519, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25672:19]
      when _T_520 : @[build/NutShell.fir.opt.mlir 25673:9]
        skip @[build/NutShell.fir.opt.mlir 25674:11]
      node _T_521 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25677:19]
      node _T_522 = eq(_T_521, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25679:19]
      when _T_522 : @[build/NutShell.fir.opt.mlir 25680:9]
        skip @[build/NutShell.fir.opt.mlir 25681:11]
      node _T_523 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25684:19]
      node _T_524 = eq(_T_523, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25686:19]
      when _T_524 : @[build/NutShell.fir.opt.mlir 25687:9]
        skip @[build/NutShell.fir.opt.mlir 25688:11]
      node _T_525 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25691:19]
      node _T_526 = eq(_T_525, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25693:19]
      when _T_526 : @[build/NutShell.fir.opt.mlir 25694:9]
        skip @[build/NutShell.fir.opt.mlir 25695:11]
      node _T_527 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25698:19]
      node _T_528 = eq(_T_527, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25700:19]
      when _T_528 : @[build/NutShell.fir.opt.mlir 25701:9]
        skip @[build/NutShell.fir.opt.mlir 25702:11]
      node _T_529 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25705:19]
      node _T_530 = eq(_T_529, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25707:19]
      when _T_530 : @[build/NutShell.fir.opt.mlir 25708:9]
        skip @[build/NutShell.fir.opt.mlir 25709:11]
      node _T_531 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25712:19]
      node _T_532 = eq(_T_531, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25714:19]
      when _T_532 : @[build/NutShell.fir.opt.mlir 25715:9]
        skip @[build/NutShell.fir.opt.mlir 25716:11]
      node _T_533 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25719:19]
      node _T_534 = eq(_T_533, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25721:19]
      when _T_534 : @[build/NutShell.fir.opt.mlir 25722:9]
        skip @[build/NutShell.fir.opt.mlir 25723:11]
      node _T_535 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25726:19]
      node _T_536 = eq(_T_535, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25728:19]
      when _T_536 : @[build/NutShell.fir.opt.mlir 25729:9]
        skip @[build/NutShell.fir.opt.mlir 25730:11]
      node _T_537 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25733:19]
      node _T_538 = eq(_T_537, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25735:19]
      when _T_538 : @[build/NutShell.fir.opt.mlir 25736:9]
        skip @[build/NutShell.fir.opt.mlir 25737:11]
      node _T_539 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25740:19]
      node _T_540 = eq(_T_539, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25742:19]
      when _T_540 : @[build/NutShell.fir.opt.mlir 25743:9]
        skip @[build/NutShell.fir.opt.mlir 25744:11]
      node _T_541 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25747:19]
      node _T_542 = eq(_T_541, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25749:19]
      when _T_542 : @[build/NutShell.fir.opt.mlir 25750:9]
        skip @[build/NutShell.fir.opt.mlir 25751:11]
      node _T_543 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25754:19]
      node _T_544 = eq(_T_543, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25756:19]
      when _T_544 : @[build/NutShell.fir.opt.mlir 25757:9]
        skip @[build/NutShell.fir.opt.mlir 25758:11]
      node _T_545 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25761:19]
      node _T_546 = eq(_T_545, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25763:19]
      when _T_546 : @[build/NutShell.fir.opt.mlir 25764:9]
        skip @[build/NutShell.fir.opt.mlir 25765:11]
      node _T_547 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25768:19]
      node _T_548 = eq(_T_547, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25770:19]
      when _T_548 : @[build/NutShell.fir.opt.mlir 25771:9]
        skip @[build/NutShell.fir.opt.mlir 25772:11]
      node _T_549 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25775:19]
      node _T_550 = eq(_T_549, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25777:19]
      when _T_550 : @[build/NutShell.fir.opt.mlir 25778:9]
        skip @[build/NutShell.fir.opt.mlir 25779:11]
      node _T_551 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25782:19]
      node _T_552 = eq(_T_551, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25784:19]
      when _T_552 : @[build/NutShell.fir.opt.mlir 25785:9]
        skip @[build/NutShell.fir.opt.mlir 25786:11]
      node _T_553 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25789:19]
      node _T_554 = eq(_T_553, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25791:19]
      when _T_554 : @[build/NutShell.fir.opt.mlir 25792:9]
        skip @[build/NutShell.fir.opt.mlir 25793:11]
      node _T_555 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25796:19]
      node _T_556 = eq(_T_555, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25798:19]
      when _T_556 : @[build/NutShell.fir.opt.mlir 25799:9]
        skip @[build/NutShell.fir.opt.mlir 25800:11]
      node _T_557 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25803:19]
      node _T_558 = eq(_T_557, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25805:19]
      when _T_558 : @[build/NutShell.fir.opt.mlir 25806:9]
        skip @[build/NutShell.fir.opt.mlir 25807:11]
      node _T_559 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25810:19]
      node _T_560 = eq(_T_559, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25812:19]
      when _T_560 : @[build/NutShell.fir.opt.mlir 25813:9]
        skip @[build/NutShell.fir.opt.mlir 25814:11]
      node _T_561 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25817:19]
      node _T_562 = eq(_T_561, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25819:19]
      when _T_562 : @[build/NutShell.fir.opt.mlir 25820:9]
        skip @[build/NutShell.fir.opt.mlir 25821:11]
      node _T_563 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25824:19]
      node _T_564 = eq(_T_563, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25826:19]
      when _T_564 : @[build/NutShell.fir.opt.mlir 25827:9]
        skip @[build/NutShell.fir.opt.mlir 25828:11]
      node _T_565 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25831:19]
      node _T_566 = eq(_T_565, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25833:19]
      when _T_566 : @[build/NutShell.fir.opt.mlir 25834:9]
        skip @[build/NutShell.fir.opt.mlir 25835:11]
      node _T_567 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25838:19]
      node _T_568 = eq(_T_567, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25840:19]
      when _T_568 : @[build/NutShell.fir.opt.mlir 25841:9]
        skip @[build/NutShell.fir.opt.mlir 25842:11]
      node _T_569 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25845:19]
      node _T_570 = eq(_T_569, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25847:19]
      when _T_570 : @[build/NutShell.fir.opt.mlir 25848:9]
        skip @[build/NutShell.fir.opt.mlir 25849:11]
      node _T_571 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25852:19]
      node _T_572 = eq(_T_571, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25854:19]
      when _T_572 : @[build/NutShell.fir.opt.mlir 25855:9]
        skip @[build/NutShell.fir.opt.mlir 25856:11]
      node _T_573 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25859:19]
      node _T_574 = eq(_T_573, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25861:19]
      when _T_574 : @[build/NutShell.fir.opt.mlir 25862:9]
        skip @[build/NutShell.fir.opt.mlir 25863:11]
      node _T_575 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25866:19]
      node _T_576 = eq(_T_575, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25868:19]
      when _T_576 : @[build/NutShell.fir.opt.mlir 25869:9]
        skip @[build/NutShell.fir.opt.mlir 25870:11]
      node _T_577 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25873:19]
      node _T_578 = eq(_T_577, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25875:19]
      when _T_578 : @[build/NutShell.fir.opt.mlir 25876:9]
        skip @[build/NutShell.fir.opt.mlir 25877:11]
      node _T_579 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25880:19]
      node _T_580 = eq(_T_579, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25882:19]
      when _T_580 : @[build/NutShell.fir.opt.mlir 25883:9]
        skip @[build/NutShell.fir.opt.mlir 25884:11]
      node _T_581 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25887:19]
      node _T_582 = eq(_T_581, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25889:19]
      when _T_582 : @[build/NutShell.fir.opt.mlir 25890:9]
        skip @[build/NutShell.fir.opt.mlir 25891:11]
      node _T_583 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25894:19]
      node _T_584 = eq(_T_583, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25896:19]
      when _T_584 : @[build/NutShell.fir.opt.mlir 25897:9]
        skip @[build/NutShell.fir.opt.mlir 25898:11]
      node _T_585 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25901:19]
      node _T_586 = eq(_T_585, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25903:19]
      when _T_586 : @[build/NutShell.fir.opt.mlir 25904:9]
        skip @[build/NutShell.fir.opt.mlir 25905:11]
      node _T_587 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25908:19]
      node _T_588 = eq(_T_587, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25910:19]
      when _T_588 : @[build/NutShell.fir.opt.mlir 25911:9]
        skip @[build/NutShell.fir.opt.mlir 25912:11]
      node _T_589 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25915:19]
      node _T_590 = eq(_T_589, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25917:19]
      when _T_590 : @[build/NutShell.fir.opt.mlir 25918:9]
        skip @[build/NutShell.fir.opt.mlir 25919:11]
      node _T_591 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25922:19]
      node _T_592 = eq(_T_591, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25924:19]
      when _T_592 : @[build/NutShell.fir.opt.mlir 25925:9]
        skip @[build/NutShell.fir.opt.mlir 25926:11]
      node _T_593 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25929:19]
      node _T_594 = eq(_T_593, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25931:19]
      when _T_594 : @[build/NutShell.fir.opt.mlir 25932:9]
        skip @[build/NutShell.fir.opt.mlir 25933:11]
      node _T_595 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25936:19]
      node _T_596 = eq(_T_595, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25938:19]
      when _T_596 : @[build/NutShell.fir.opt.mlir 25939:9]
        skip @[build/NutShell.fir.opt.mlir 25940:11]
      node _T_597 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25943:19]
      node _T_598 = eq(_T_597, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25945:19]
      when _T_598 : @[build/NutShell.fir.opt.mlir 25946:9]
        skip @[build/NutShell.fir.opt.mlir 25947:11]
      node _T_599 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25950:19]
      node _T_600 = eq(_T_599, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25952:19]
      when _T_600 : @[build/NutShell.fir.opt.mlir 25953:9]
        skip @[build/NutShell.fir.opt.mlir 25954:11]
      node _T_601 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25957:19]
      node _T_602 = eq(_T_601, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25959:19]
      when _T_602 : @[build/NutShell.fir.opt.mlir 25960:9]
        skip @[build/NutShell.fir.opt.mlir 25961:11]
      node _T_603 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25964:19]
      node _T_604 = eq(_T_603, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25966:19]
      when _T_604 : @[build/NutShell.fir.opt.mlir 25967:9]
        skip @[build/NutShell.fir.opt.mlir 25968:11]
      node _T_605 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25971:19]
      node _T_606 = eq(_T_605, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25973:19]
      when _T_606 : @[build/NutShell.fir.opt.mlir 25974:9]
        skip @[build/NutShell.fir.opt.mlir 25975:11]
      node _T_607 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25978:19]
      node _T_608 = eq(_T_607, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25980:19]
      when _T_608 : @[build/NutShell.fir.opt.mlir 25981:9]
        skip @[build/NutShell.fir.opt.mlir 25982:11]
      node _T_609 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25985:19]
      node _T_610 = eq(_T_609, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25987:19]
      when _T_610 : @[build/NutShell.fir.opt.mlir 25988:9]
        skip @[build/NutShell.fir.opt.mlir 25989:11]
      node _T_611 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25992:19]
      node _T_612 = eq(_T_611, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25994:19]
      when _T_612 : @[build/NutShell.fir.opt.mlir 25995:9]
        skip @[build/NutShell.fir.opt.mlir 25996:11]
      node _T_613 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25999:19]
      node _T_614 = eq(_T_613, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26001:19]
      when _T_614 : @[build/NutShell.fir.opt.mlir 26002:9]
        skip @[build/NutShell.fir.opt.mlir 26003:11]
      node _T_615 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26006:19]
      node _T_616 = eq(_T_615, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26008:19]
      when _T_616 : @[build/NutShell.fir.opt.mlir 26009:9]
        skip @[build/NutShell.fir.opt.mlir 26010:11]
      node _T_617 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26013:19]
      node _T_618 = eq(_T_617, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26015:19]
      when _T_618 : @[build/NutShell.fir.opt.mlir 26016:9]
        skip @[build/NutShell.fir.opt.mlir 26017:11]
      node _T_619 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26020:19]
      node _T_620 = eq(_T_619, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26022:19]
      when _T_620 : @[build/NutShell.fir.opt.mlir 26023:9]
        skip @[build/NutShell.fir.opt.mlir 26024:11]
      node _T_621 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26027:19]
      node _T_622 = eq(_T_621, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26029:19]
      when _T_622 : @[build/NutShell.fir.opt.mlir 26030:9]
        skip @[build/NutShell.fir.opt.mlir 26031:11]
      node _T_623 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26034:19]
      node _T_624 = eq(_T_623, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26036:19]
      when _T_624 : @[build/NutShell.fir.opt.mlir 26037:9]
        skip @[build/NutShell.fir.opt.mlir 26038:11]
      node _T_625 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26041:19]
      node _T_626 = eq(_T_625, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26043:19]
      when _T_626 : @[build/NutShell.fir.opt.mlir 26044:9]
        skip @[build/NutShell.fir.opt.mlir 26045:11]
      node _T_627 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26048:19]
      node _T_628 = eq(_T_627, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26050:19]
      when _T_628 : @[build/NutShell.fir.opt.mlir 26051:9]
        skip @[build/NutShell.fir.opt.mlir 26052:11]
      node _T_629 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26055:19]
      node _T_630 = eq(_T_629, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26057:19]
      when _T_630 : @[build/NutShell.fir.opt.mlir 26058:9]
        skip @[build/NutShell.fir.opt.mlir 26059:11]
      node _T_631 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26062:19]
      node _T_632 = eq(_T_631, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26064:19]
      when _T_632 : @[build/NutShell.fir.opt.mlir 26065:9]
        skip @[build/NutShell.fir.opt.mlir 26066:11]
      node _T_633 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26069:19]
      node _T_634 = eq(_T_633, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26071:19]
      when _T_634 : @[build/NutShell.fir.opt.mlir 26072:9]
        skip @[build/NutShell.fir.opt.mlir 26073:11]
      node _T_635 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26076:19]
      node _T_636 = eq(_T_635, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26078:19]
      when _T_636 : @[build/NutShell.fir.opt.mlir 26079:9]
        skip @[build/NutShell.fir.opt.mlir 26080:11]
      node _T_637 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26083:19]
      node _T_638 = eq(_T_637, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26085:19]
      when _T_638 : @[build/NutShell.fir.opt.mlir 26086:9]
        skip @[build/NutShell.fir.opt.mlir 26087:11]
      node _T_639 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26090:19]
      node _T_640 = eq(_T_639, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26092:19]
      when _T_640 : @[build/NutShell.fir.opt.mlir 26093:9]
        skip @[build/NutShell.fir.opt.mlir 26094:11]
      node _T_641 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26097:19]
      node _T_642 = eq(_T_641, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26099:19]
      when _T_642 : @[build/NutShell.fir.opt.mlir 26100:9]
        skip @[build/NutShell.fir.opt.mlir 26101:11]
      node _T_643 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26104:19]
      node _T_644 = eq(_T_643, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26106:19]
      when _T_644 : @[build/NutShell.fir.opt.mlir 26107:9]
        skip @[build/NutShell.fir.opt.mlir 26108:11]
      node _T_645 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26111:19]
      node _T_646 = eq(_T_645, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26113:19]
      when _T_646 : @[build/NutShell.fir.opt.mlir 26114:9]
        skip @[build/NutShell.fir.opt.mlir 26115:11]
      node _T_647 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26118:19]
      node _T_648 = eq(_T_647, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26120:19]
      when _T_648 : @[build/NutShell.fir.opt.mlir 26121:9]
        skip @[build/NutShell.fir.opt.mlir 26122:11]
      node _T_649 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26125:19]
      node _T_650 = eq(_T_649, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26127:19]
      when _T_650 : @[build/NutShell.fir.opt.mlir 26128:9]
        skip @[build/NutShell.fir.opt.mlir 26129:11]
      node _T_651 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26132:19]
      node _T_652 = eq(_T_651, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26134:19]
      when _T_652 : @[build/NutShell.fir.opt.mlir 26135:9]
        skip @[build/NutShell.fir.opt.mlir 26136:11]
      node _T_653 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26139:19]
      node _T_654 = eq(_T_653, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26141:19]
      when _T_654 : @[build/NutShell.fir.opt.mlir 26142:9]
        skip @[build/NutShell.fir.opt.mlir 26143:11]
    inst CSRDiffWrapper of CSRDiffWrapper @[build/NutShell.fir.opt.mlir 26146:74]
    connect CSRDiffWrapper.clock, clock @[build/NutShell.fir.opt.mlir 26174:7]
    connect CSRDiffWrapper.reset, reset @[build/NutShell.fir.opt.mlir 26175:7]
    invalidate CSRDiffWrapper.io.archEvent.coreid @[build/NutShell.fir.opt.mlir 26177:7]
    invalidate CSRDiffWrapper.io.archEvent.exceptionInst @[build/NutShell.fir.opt.mlir 26179:7]
    invalidate CSRDiffWrapper.io.archEvent.exceptionPC @[build/NutShell.fir.opt.mlir 26181:7]
    invalidate CSRDiffWrapper.io.archEvent.exception @[build/NutShell.fir.opt.mlir 26183:7]
    invalidate CSRDiffWrapper.io.archEvent.interrupt @[build/NutShell.fir.opt.mlir 26185:7]
    invalidate CSRDiffWrapper.io.archEvent.valid @[build/NutShell.fir.opt.mlir 26187:7]
    invalidate CSRDiffWrapper.io.csrState.coreid @[build/NutShell.fir.opt.mlir 26189:7]
    invalidate CSRDiffWrapper.io.csrState.medeleg @[build/NutShell.fir.opt.mlir 26191:7]
    invalidate CSRDiffWrapper.io.csrState.mideleg @[build/NutShell.fir.opt.mlir 26193:7]
    invalidate CSRDiffWrapper.io.csrState.sscratch @[build/NutShell.fir.opt.mlir 26195:7]
    invalidate CSRDiffWrapper.io.csrState.mscratch @[build/NutShell.fir.opt.mlir 26197:7]
    invalidate CSRDiffWrapper.io.csrState.mie @[build/NutShell.fir.opt.mlir 26199:7]
    invalidate CSRDiffWrapper.io.csrState.mip @[build/NutShell.fir.opt.mlir 26201:7]
    invalidate CSRDiffWrapper.io.csrState.satp @[build/NutShell.fir.opt.mlir 26203:7]
    invalidate CSRDiffWrapper.io.csrState.scause @[build/NutShell.fir.opt.mlir 26205:7]
    invalidate CSRDiffWrapper.io.csrState.mcause @[build/NutShell.fir.opt.mlir 26207:7]
    invalidate CSRDiffWrapper.io.csrState.stvec @[build/NutShell.fir.opt.mlir 26209:7]
    invalidate CSRDiffWrapper.io.csrState.mtvec @[build/NutShell.fir.opt.mlir 26211:7]
    invalidate CSRDiffWrapper.io.csrState.stval @[build/NutShell.fir.opt.mlir 26213:7]
    invalidate CSRDiffWrapper.io.csrState.mtval @[build/NutShell.fir.opt.mlir 26215:7]
    invalidate CSRDiffWrapper.io.csrState.sepc @[build/NutShell.fir.opt.mlir 26217:7]
    invalidate CSRDiffWrapper.io.csrState.mepc @[build/NutShell.fir.opt.mlir 26219:7]
    invalidate CSRDiffWrapper.io.csrState.sstatus @[build/NutShell.fir.opt.mlir 26221:7]
    invalidate CSRDiffWrapper.io.csrState.mstatus @[build/NutShell.fir.opt.mlir 26223:7]
    invalidate CSRDiffWrapper.io.csrState.privilegeMode @[build/NutShell.fir.opt.mlir 26225:7]
    connect CSRDiffWrapper.io.csrState.privilegeMode, pad(privilegeMode, 64) @[build/NutShell.fir.opt.mlir 26227:7]
    connect CSRDiffWrapper.io.csrState.mstatus, mstatus @[build/NutShell.fir.opt.mlir 26228:7]
    node _T_655 = and(mstatus, sstatusRmask) @[build/NutShell.fir.opt.mlir 26230:17]
    connect CSRDiffWrapper.io.csrState.sstatus, _T_655 @[build/NutShell.fir.opt.mlir 26231:7]
    connect CSRDiffWrapper.io.csrState.mepc, mepc @[build/NutShell.fir.opt.mlir 26232:7]
    connect CSRDiffWrapper.io.csrState.sepc, sepc @[build/NutShell.fir.opt.mlir 26233:7]
    connect CSRDiffWrapper.io.csrState.mtval, mtval @[build/NutShell.fir.opt.mlir 26234:7]
    connect CSRDiffWrapper.io.csrState.stval, stval @[build/NutShell.fir.opt.mlir 26235:7]
    connect CSRDiffWrapper.io.csrState.mtvec, mtvec @[build/NutShell.fir.opt.mlir 26236:7]
    connect CSRDiffWrapper.io.csrState.stvec, stvec @[build/NutShell.fir.opt.mlir 26237:7]
    connect CSRDiffWrapper.io.csrState.mcause, mcause @[build/NutShell.fir.opt.mlir 26238:7]
    connect CSRDiffWrapper.io.csrState.scause, scause @[build/NutShell.fir.opt.mlir 26239:7]
    connect CSRDiffWrapper.io.csrState.satp, satp @[build/NutShell.fir.opt.mlir 26240:7]
    connect CSRDiffWrapper.io.csrState.mip, mipReg @[build/NutShell.fir.opt.mlir 26241:7]
    connect CSRDiffWrapper.io.csrState.mie, mie @[build/NutShell.fir.opt.mlir 26242:7]
    connect CSRDiffWrapper.io.csrState.mscratch, mscratch @[build/NutShell.fir.opt.mlir 26243:7]
    connect CSRDiffWrapper.io.csrState.sscratch, sscratch @[build/NutShell.fir.opt.mlir 26244:7]
    connect CSRDiffWrapper.io.csrState.mideleg, mideleg @[build/NutShell.fir.opt.mlir 26245:7]
    connect CSRDiffWrapper.io.csrState.medeleg, medeleg @[build/NutShell.fir.opt.mlir 26246:7]
    connect CSRDiffWrapper.io.archEvent.valid, raiseExceptionIntr @[build/NutShell.fir.opt.mlir 26247:7]
    node _T_656 = and(raiseIntr, io.instrValid) @[build/NutShell.fir.opt.mlir 26249:17]
    node _T_657 = mux(_T_656, intrNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26251:17]
    connect CSRDiffWrapper.io.archEvent.interrupt, pad(_T_657, 32) @[build/NutShell.fir.opt.mlir 26253:7]
    node _T_658 = and(raiseException, io.instrValid) @[build/NutShell.fir.opt.mlir 26255:17]
    node _T_659 = mux(_T_658, exceptionNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26257:17]
    connect CSRDiffWrapper.io.archEvent.exception, pad(_T_659, 32) @[build/NutShell.fir.opt.mlir 26259:7]
    node signBit_2 = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 26261:20]
    node _T_660 = mux(signBit_2, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 26263:17]
    node _T_661 = cat(_T_660, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 26265:17]
    connect CSRDiffWrapper.io.archEvent.exceptionPC, _T_661 @[build/NutShell.fir.opt.mlir 26266:7]
    connect CSRDiffWrapper.io.archEvent.exceptionInst, tail(io.cfIn.instr, 32) @[build/NutShell.fir.opt.mlir 26268:7]

  extmodule LogPerfHelper_17 : @[build/NutShell.fir.opt.mlir 26270:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 26270:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 26270:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 26270:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 26270:141]
    defname = LogPerfHelper

  module MOU : @[build/NutShell.fir.opt.mlir 26271:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26271:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26271:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 26271:88]

    node _io_redirect_target_T = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 26288:32]
    node _io_redirect_target_T_1 = tail(_io_redirect_target_T, 1) @[build/NutShell.fir.opt.mlir 26290:34]
    connect io.redirect.target, _io_redirect_target_T_1 @[build/NutShell.fir.opt.mlir 26291:7]
    connect io.redirect.valid, io.in.valid @[build/NutShell.fir.opt.mlir 26292:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26295:7]
    node _flushICache_T = eq(io.in.bits.func, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 26298:25]
    node flushICache = and(io.in.valid, _flushICache_T) @[build/NutShell.fir.opt.mlir 26300:22]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 26301:16]
    connect _WIRE, flushICache @[build/NutShell.fir.opt.mlir 26302:7]
    inst LogPerfHelper of LogPerfHelper_17 @[build/NutShell.fir.opt.mlir 26303:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 26304:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 26309:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 26310:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 26311:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 26312:7]
    node _T = and(flushICache, c_control.logEnable) @[build/NutShell.fir.opt.mlir 26314:13]
    when _T : @[build/NutShell.fir.opt.mlir 26315:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26317:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26319:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 26320:9]
        skip @[build/NutShell.fir.opt.mlir 26321:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26324:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26326:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 26327:9]
        skip @[build/NutShell.fir.opt.mlir 26328:11]
    node _flushTLB_T = eq(io.in.bits.func, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 26333:22]
    node flushTLB = and(io.in.valid, _flushTLB_T) @[build/NutShell.fir.opt.mlir 26335:19]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 26336:18]
    connect _WIRE_1, flushTLB @[build/NutShell.fir.opt.mlir 26337:7]
    node _T_5 = and(flushTLB, c_control.logEnable) @[build/NutShell.fir.opt.mlir 26339:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 26340:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26342:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26344:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 26345:9]
        skip @[build/NutShell.fir.opt.mlir 26346:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26349:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26351:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 26352:9]
        skip @[build/NutShell.fir.opt.mlir 26353:11]
    connect io.out.bits, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 26358:7]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26360:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 26361:7]

  extmodule LogPerfHelper_18 : @[build/NutShell.fir.opt.mlir 26363:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 26363:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 26363:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 26363:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 26363:141]
    defname = LogPerfHelper

  extmodule DifftestTrapEvent : @[build/NutShell.fir.opt.mlir 26364:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26364:52]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 26364:77]
    input io : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 26364:105]
    defname = DifftestTrapEvent

  module DummyDPICWrapper_3 : @[build/NutShell.fir.opt.mlir 26365:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26365:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26365:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 26365:102]
    input io : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 26365:148]

    inst dpic of DifftestTrapEvent @[build/NutShell.fir.opt.mlir 26374:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 26382:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 26385:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 26386:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 26387:7]
    connect dpic.io.pc, io.pc @[build/NutShell.fir.opt.mlir 26388:7]
    connect dpic.io.code, io.code @[build/NutShell.fir.opt.mlir 26389:7]
    connect dpic.io.hasWFI, io.hasWFI @[build/NutShell.fir.opt.mlir 26390:7]
    connect dpic.io.instrCnt, io.instrCnt @[build/NutShell.fir.opt.mlir 26391:7]
    connect dpic.io.cycleCnt, io.cycleCnt @[build/NutShell.fir.opt.mlir 26392:7]
    connect dpic.io.hasTrap, io.hasTrap @[build/NutShell.fir.opt.mlir 26393:7]

  module EXU : @[build/NutShell.fir.opt.mlir 26395:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26395:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26395:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] } }, flip flush : UInt<1>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, forward : { valid : UInt<1>, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, fuType : UInt<3> }, flip memMMU : { imem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, dmem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> } } } @[build/NutShell.fir.opt.mlir 26395:88]

    node src1 = bits(io.in.bits.data.src1, 63, 0) @[build/NutShell.fir.opt.mlir 26545:15]
    node src2 = bits(io.in.bits.data.src2, 63, 0) @[build/NutShell.fir.opt.mlir 26547:15]
    wire fuValids : UInt<1>[5] @[build/NutShell.fir.opt.mlir 26548:19]
    node _fuValids_0_T = eq(io.in.bits.ctrl.fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26556:24]
    node _fuValids_0_T_1 = and(_fuValids_0_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26558:26]
    node _fuValids_0_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26560:26]
    node _fuValids_0_T_3 = and(_fuValids_0_T_1, _fuValids_0_T_2) @[build/NutShell.fir.opt.mlir 26562:26]
    connect fuValids[0], _fuValids_0_T_3 @[build/NutShell.fir.opt.mlir 26563:7]
    node _fuValids_1_T = eq(io.in.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 26566:24]
    node _fuValids_1_T_1 = and(_fuValids_1_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26568:26]
    node _fuValids_1_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26570:26]
    node _fuValids_1_T_3 = and(_fuValids_1_T_1, _fuValids_1_T_2) @[build/NutShell.fir.opt.mlir 26572:26]
    connect fuValids[1], _fuValids_1_T_3 @[build/NutShell.fir.opt.mlir 26573:7]
    node _fuValids_2_T = eq(io.in.bits.ctrl.fuType, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 26576:24]
    node _fuValids_2_T_1 = and(_fuValids_2_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26578:26]
    node _fuValids_2_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26580:26]
    node _fuValids_2_T_3 = and(_fuValids_2_T_1, _fuValids_2_T_2) @[build/NutShell.fir.opt.mlir 26582:26]
    connect fuValids[2], _fuValids_2_T_3 @[build/NutShell.fir.opt.mlir 26583:7]
    node _fuValids_3_T = eq(io.in.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 26586:24]
    node _fuValids_3_T_1 = and(_fuValids_3_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26588:26]
    node _fuValids_3_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26590:26]
    node _fuValids_3_T_3 = and(_fuValids_3_T_1, _fuValids_3_T_2) @[build/NutShell.fir.opt.mlir 26592:26]
    connect fuValids[3], _fuValids_3_T_3 @[build/NutShell.fir.opt.mlir 26593:7]
    node _fuValids_4_T = eq(io.in.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 26596:24]
    node _fuValids_4_T_1 = and(_fuValids_4_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26598:26]
    node _fuValids_4_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26600:26]
    node _fuValids_4_T_3 = and(_fuValids_4_T_1, _fuValids_4_T_2) @[build/NutShell.fir.opt.mlir 26602:26]
    connect fuValids[4], _fuValids_4_T_3 @[build/NutShell.fir.opt.mlir 26603:7]
    inst alu of ALU @[build/NutShell.fir.opt.mlir 26604:41]
    connect alu.clock, clock @[build/NutShell.fir.opt.mlir 26661:7]
    connect alu.reset, reset @[build/NutShell.fir.opt.mlir 26662:7]
    connect alu.io.in.valid, fuValids[0] @[build/NutShell.fir.opt.mlir 26663:7]
    connect alu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26664:7]
    connect alu.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 26665:7]
    connect alu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26666:7]
    connect alu.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 26667:7]
    connect alu.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 26668:7]
    connect alu.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 26669:7]
    connect alu.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 26670:7]
    connect alu.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 26671:7]
    connect alu.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 26672:7]
    connect alu.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 26673:7]
    connect alu.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 26674:7]
    connect alu.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 26675:7]
    connect alu.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 26676:7]
    connect alu.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 26677:7]
    connect alu.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 26678:7]
    connect alu.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 26679:7]
    connect alu.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 26680:7]
    connect alu.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 26681:7]
    connect alu.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 26682:7]
    connect alu.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 26683:7]
    connect alu.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 26684:7]
    connect alu.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 26685:7]
    connect alu.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 26686:7]
    connect alu.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 26687:7]
    connect alu.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 26688:7]
    connect alu.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 26689:7]
    connect alu.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 26690:7]
    connect alu.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 26691:7]
    connect alu.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 26692:7]
    connect alu.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 26693:7]
    connect alu.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 26694:7]
    connect alu.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 26695:7]
    connect alu.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 26696:7]
    connect alu.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 26697:7]
    connect alu.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 26698:7]
    connect alu.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 26699:7]
    connect alu.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 26700:7]
    connect alu.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 26701:7]
    connect alu.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 26702:7]
    connect alu.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 26703:7]
    connect alu.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 26704:7]
    connect alu.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 26705:7]
    connect alu.io.offset, io.in.bits.data.imm @[build/NutShell.fir.opt.mlir 26706:7]
    connect alu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26708:7]
    inst lsu of UnpipelinedLSU @[build/NutShell.fir.opt.mlir 26709:41]
    connect lsu.clock, clock @[build/NutShell.fir.opt.mlir 26732:7]
    connect lsu.reset, reset @[build/NutShell.fir.opt.mlir 26733:7]
    wire lsuTlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 26734:19]
    connect lsuTlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26736:7]
    connect lsu.io.in.valid, fuValids[1] @[build/NutShell.fir.opt.mlir 26737:7]
    connect lsu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26738:7]
    connect lsu.io.in.bits.src2, io.in.bits.data.imm @[build/NutShell.fir.opt.mlir 26739:7]
    connect lsu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26740:7]
    connect lsuTlbPF, lsu.io.dtlbPF @[build/NutShell.fir.opt.mlir 26741:7]
    connect lsu.io.wdata, src2 @[build/NutShell.fir.opt.mlir 26742:7]
    connect lsu.io.instr, tail(io.in.bits.cf.instr, 32) @[build/NutShell.fir.opt.mlir 26744:7]
    node _io_out_bits_isMMIO_T = xor(io.in.bits.cf.pc, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 26747:32]
    node _io_out_bits_isMMIO_T_1 = bits(_io_out_bits_isMMIO_T, 31, 28) @[build/NutShell.fir.opt.mlir 26749:34]
    node _io_out_bits_isMMIO_T_2 = eq(_io_out_bits_isMMIO_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26751:34]
    node _io_out_bits_isMMIO_T_3 = xor(io.in.bits.cf.pc, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 26754:34]
    node _io_out_bits_isMMIO_T_4 = bits(_io_out_bits_isMMIO_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 26756:34]
    node _io_out_bits_isMMIO_T_5 = eq(_io_out_bits_isMMIO_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26758:34]
    node _io_out_bits_isMMIO_T_6 = or(_io_out_bits_isMMIO_T_2, _io_out_bits_isMMIO_T_5) @[build/NutShell.fir.opt.mlir 26760:34]
    node _io_out_bits_isMMIO_T_7 = and(_io_out_bits_isMMIO_T_6, io.out.valid) @[build/NutShell.fir.opt.mlir 26762:34]
    node _io_out_bits_isMMIO_T_8 = or(lsu.io.isMMIO, _io_out_bits_isMMIO_T_7) @[build/NutShell.fir.opt.mlir 26764:34]
    connect io.out.bits.isMMIO, _io_out_bits_isMMIO_T_8 @[build/NutShell.fir.opt.mlir 26765:7]
    connect io.dmem.resp.ready, lsu.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 26768:7]
    connect lsu.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 26771:7]
    connect lsu.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 26774:7]
    connect io.dmem.req.bits, lsu.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 26775:7]
    connect io.dmem.req.valid, lsu.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 26776:7]
    connect lsu.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 26777:7]
    connect lsu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26779:7]
    inst mdu of MDU @[build/NutShell.fir.opt.mlir 26780:41]
    connect mdu.clock, clock @[build/NutShell.fir.opt.mlir 26791:7]
    connect mdu.reset, reset @[build/NutShell.fir.opt.mlir 26792:7]
    connect mdu.io.in.valid, fuValids[2] @[build/NutShell.fir.opt.mlir 26793:7]
    connect mdu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26794:7]
    connect mdu.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 26795:7]
    connect mdu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26796:7]
    connect mdu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26798:7]
    inst csr of CSR @[build/NutShell.fir.opt.mlir 26799:41]
    connect csr.clock, clock @[build/NutShell.fir.opt.mlir 26861:7]
    connect csr.reset, reset @[build/NutShell.fir.opt.mlir 26862:7]
    connect csr.io.in.valid, fuValids[3] @[build/NutShell.fir.opt.mlir 26863:7]
    connect csr.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26864:7]
    connect csr.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 26865:7]
    connect csr.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26866:7]
    connect csr.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 26867:7]
    connect csr.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 26868:7]
    connect csr.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 26869:7]
    connect csr.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 26870:7]
    connect csr.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 26871:7]
    connect csr.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 26872:7]
    connect csr.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 26873:7]
    connect csr.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 26874:7]
    connect csr.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 26875:7]
    connect csr.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 26876:7]
    connect csr.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 26877:7]
    connect csr.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 26878:7]
    connect csr.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 26879:7]
    connect csr.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 26880:7]
    connect csr.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 26881:7]
    connect csr.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 26882:7]
    connect csr.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 26883:7]
    connect csr.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 26884:7]
    connect csr.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 26885:7]
    connect csr.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 26886:7]
    connect csr.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 26887:7]
    connect csr.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 26888:7]
    connect csr.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 26889:7]
    connect csr.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 26890:7]
    connect csr.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 26891:7]
    connect csr.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 26892:7]
    connect csr.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 26893:7]
    connect csr.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 26894:7]
    connect csr.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 26895:7]
    connect csr.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 26896:7]
    connect csr.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 26897:7]
    connect csr.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 26898:7]
    connect csr.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 26899:7]
    connect csr.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 26900:7]
    connect csr.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 26901:7]
    connect csr.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 26902:7]
    connect csr.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 26903:7]
    connect csr.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 26904:7]
    connect csr.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 26905:7]
    connect csr.io.cfIn.exceptionVec[4], lsu.io.loadAddrMisaligned @[build/NutShell.fir.opt.mlir 26906:7]
    connect csr.io.cfIn.exceptionVec[6], lsu.io.storeAddrMisaligned @[build/NutShell.fir.opt.mlir 26907:7]
    node _csr_io_instrValid_T = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26909:31]
    node _csr_io_instrValid_T_1 = and(io.in.valid, _csr_io_instrValid_T) @[build/NutShell.fir.opt.mlir 26911:33]
    connect csr.io.instrValid, _csr_io_instrValid_T_1 @[build/NutShell.fir.opt.mlir 26912:7]
    connect csr.io.isBackendException, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26914:7]
    connect io.out.bits.intrNO, csr.io.intrNO @[build/NutShell.fir.opt.mlir 26915:7]
    connect csr.io.isBackendException, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26917:7]
    connect csr.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26919:7]
    connect io.memMMU.imem.privilegeMode, csr.io.imemMMU.privilegeMode @[build/NutShell.fir.opt.mlir 26922:7]
    connect io.memMMU.imem.status_sum, csr.io.imemMMU.status_sum @[build/NutShell.fir.opt.mlir 26925:7]
    connect io.memMMU.imem.status_mxr, csr.io.imemMMU.status_mxr @[build/NutShell.fir.opt.mlir 26928:7]
    connect csr.io.imemMMU.loadPF, io.memMMU.imem.loadPF @[build/NutShell.fir.opt.mlir 26931:7]
    connect csr.io.imemMMU.storePF, io.memMMU.imem.storePF @[build/NutShell.fir.opt.mlir 26934:7]
    connect csr.io.imemMMU.addr, io.memMMU.imem.addr @[build/NutShell.fir.opt.mlir 26937:7]
    connect io.memMMU.dmem.privilegeMode, csr.io.dmemMMU.privilegeMode @[build/NutShell.fir.opt.mlir 26940:7]
    connect io.memMMU.dmem.status_sum, csr.io.dmemMMU.status_sum @[build/NutShell.fir.opt.mlir 26943:7]
    connect io.memMMU.dmem.status_mxr, csr.io.dmemMMU.status_mxr @[build/NutShell.fir.opt.mlir 26946:7]
    connect csr.io.dmemMMU.loadPF, io.memMMU.dmem.loadPF @[build/NutShell.fir.opt.mlir 26949:7]
    connect csr.io.dmemMMU.storePF, io.memMMU.dmem.storePF @[build/NutShell.fir.opt.mlir 26952:7]
    connect csr.io.dmemMMU.addr, io.memMMU.dmem.addr @[build/NutShell.fir.opt.mlir 26955:7]
    inst mou of MOU @[build/NutShell.fir.opt.mlir 26956:41]
    connect mou.clock, clock @[build/NutShell.fir.opt.mlir 27010:7]
    connect mou.reset, reset @[build/NutShell.fir.opt.mlir 27011:7]
    connect mou.io.in.valid, fuValids[4] @[build/NutShell.fir.opt.mlir 27012:7]
    connect mou.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 27013:7]
    connect mou.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 27014:7]
    connect mou.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 27015:7]
    connect mou.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 27016:7]
    connect mou.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27017:7]
    connect mou.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 27018:7]
    connect mou.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 27019:7]
    connect mou.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 27020:7]
    connect mou.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 27021:7]
    connect mou.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 27022:7]
    connect mou.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 27023:7]
    connect mou.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 27024:7]
    connect mou.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 27025:7]
    connect mou.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 27026:7]
    connect mou.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 27027:7]
    connect mou.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 27028:7]
    connect mou.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 27029:7]
    connect mou.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 27030:7]
    connect mou.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 27031:7]
    connect mou.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 27032:7]
    connect mou.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 27033:7]
    connect mou.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 27034:7]
    connect mou.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 27035:7]
    connect mou.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 27036:7]
    connect mou.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 27037:7]
    connect mou.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 27038:7]
    connect mou.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 27039:7]
    connect mou.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 27040:7]
    connect mou.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 27041:7]
    connect mou.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 27042:7]
    connect mou.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 27043:7]
    connect mou.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 27044:7]
    connect mou.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 27045:7]
    connect mou.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 27046:7]
    connect mou.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 27047:7]
    connect mou.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 27048:7]
    connect mou.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 27049:7]
    connect mou.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 27050:7]
    connect mou.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 27051:7]
    connect mou.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 27052:7]
    connect mou.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 27053:7]
    connect mou.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 27054:7]
    connect mou.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27056:7]
    invalidate io.out.bits.decode.data.imm @[build/NutShell.fir.opt.mlir 27058:7]
    invalidate io.out.bits.decode.data.src2 @[build/NutShell.fir.opt.mlir 27060:7]
    invalidate io.out.bits.decode.data.src1 @[build/NutShell.fir.opt.mlir 27062:7]
    invalidate io.out.bits.decode.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 27064:7]
    invalidate io.out.bits.decode.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 27066:7]
    invalidate io.out.bits.decode.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 27068:7]
    invalidate io.out.bits.decode.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 27070:7]
    invalidate io.out.bits.decode.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 27072:7]
    invalidate io.out.bits.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27074:7]
    invalidate io.out.bits.decode.ctrl.rfWen @[build/NutShell.fir.opt.mlir 27076:7]
    invalidate io.out.bits.decode.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 27078:7]
    invalidate io.out.bits.decode.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 27080:7]
    invalidate io.out.bits.decode.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 27082:7]
    invalidate io.out.bits.decode.ctrl.fuType @[build/NutShell.fir.opt.mlir 27084:7]
    invalidate io.out.bits.decode.ctrl.src2Type @[build/NutShell.fir.opt.mlir 27086:7]
    invalidate io.out.bits.decode.ctrl.src1Type @[build/NutShell.fir.opt.mlir 27088:7]
    invalidate io.out.bits.decode.cf.isBranch @[build/NutShell.fir.opt.mlir 27090:7]
    invalidate io.out.bits.decode.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27092:7]
    invalidate io.out.bits.decode.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 27094:7]
    invalidate io.out.bits.decode.cf.isRVC @[build/NutShell.fir.opt.mlir 27096:7]
    invalidate io.out.bits.decode.cf.brIdx @[build/NutShell.fir.opt.mlir 27098:7]
    invalidate io.out.bits.decode.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 27100:7]
    invalidate io.out.bits.decode.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 27102:7]
    invalidate io.out.bits.decode.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 27104:7]
    invalidate io.out.bits.decode.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 27106:7]
    invalidate io.out.bits.decode.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 27108:7]
    invalidate io.out.bits.decode.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 27110:7]
    invalidate io.out.bits.decode.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 27112:7]
    invalidate io.out.bits.decode.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 27114:7]
    invalidate io.out.bits.decode.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 27116:7]
    invalidate io.out.bits.decode.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 27118:7]
    invalidate io.out.bits.decode.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 27120:7]
    invalidate io.out.bits.decode.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 27122:7]
    invalidate io.out.bits.decode.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 27124:7]
    invalidate io.out.bits.decode.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 27126:7]
    invalidate io.out.bits.decode.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 27128:7]
    invalidate io.out.bits.decode.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 27130:7]
    invalidate io.out.bits.decode.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 27132:7]
    invalidate io.out.bits.decode.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 27134:7]
    invalidate io.out.bits.decode.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 27136:7]
    invalidate io.out.bits.decode.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 27138:7]
    invalidate io.out.bits.decode.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 27140:7]
    invalidate io.out.bits.decode.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 27142:7]
    invalidate io.out.bits.decode.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 27144:7]
    invalidate io.out.bits.decode.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 27146:7]
    invalidate io.out.bits.decode.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 27148:7]
    invalidate io.out.bits.decode.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 27150:7]
    invalidate io.out.bits.decode.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 27152:7]
    invalidate io.out.bits.decode.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 27154:7]
    invalidate io.out.bits.decode.cf.redirect.valid @[build/NutShell.fir.opt.mlir 27156:7]
    invalidate io.out.bits.decode.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 27158:7]
    invalidate io.out.bits.decode.cf.redirect.target @[build/NutShell.fir.opt.mlir 27160:7]
    invalidate io.out.bits.decode.cf.pnpc @[build/NutShell.fir.opt.mlir 27162:7]
    invalidate io.out.bits.decode.cf.pc @[build/NutShell.fir.opt.mlir 27164:7]
    invalidate io.out.bits.decode.cf.instr @[build/NutShell.fir.opt.mlir 27166:7]
    node _io_out_bits_decode_ctrl_rfWen_T = eq(lsuTlbPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27168:43]
    node _io_out_bits_decode_ctrl_rfWen_T_1 = eq(lsu.io.loadAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27170:45]
    node _io_out_bits_decode_ctrl_rfWen_T_2 = and(_io_out_bits_decode_ctrl_rfWen_T, _io_out_bits_decode_ctrl_rfWen_T_1) @[build/NutShell.fir.opt.mlir 27172:45]
    node _io_out_bits_decode_ctrl_rfWen_T_3 = eq(lsu.io.storeAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27174:45]
    node _io_out_bits_decode_ctrl_rfWen_T_4 = and(_io_out_bits_decode_ctrl_rfWen_T_2, _io_out_bits_decode_ctrl_rfWen_T_3) @[build/NutShell.fir.opt.mlir 27176:45]
    node _io_out_bits_decode_ctrl_rfWen_T_5 = eq(fuValids[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27178:45]
    node _io_out_bits_decode_ctrl_rfWen_T_6 = or(_io_out_bits_decode_ctrl_rfWen_T_4, _io_out_bits_decode_ctrl_rfWen_T_5) @[build/NutShell.fir.opt.mlir 27180:45]
    node _io_out_bits_decode_ctrl_rfWen_T_7 = and(io.in.bits.ctrl.rfWen, _io_out_bits_decode_ctrl_rfWen_T_6) @[build/NutShell.fir.opt.mlir 27182:45]
    node _io_out_bits_decode_ctrl_rfWen_T_8 = and(csr.io.wenFix, fuValids[3]) @[build/NutShell.fir.opt.mlir 27184:45]
    node _io_out_bits_decode_ctrl_rfWen_T_9 = eq(_io_out_bits_decode_ctrl_rfWen_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27186:45]
    node _io_out_bits_decode_ctrl_rfWen_T_10 = and(_io_out_bits_decode_ctrl_rfWen_T_7, _io_out_bits_decode_ctrl_rfWen_T_9) @[build/NutShell.fir.opt.mlir 27188:46]
    connect io.out.bits.decode.ctrl.rfWen, _io_out_bits_decode_ctrl_rfWen_T_10 @[build/NutShell.fir.opt.mlir 27189:7]
    connect io.out.bits.decode.ctrl.rfDest, io.in.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27190:7]
    connect io.out.bits.decode.ctrl.fuType, io.in.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 27191:7]
    connect io.out.bits.decode.cf.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 27192:7]
    connect io.out.bits.decode.cf.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 27193:7]
    connect io.out.bits.decode.cf.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27194:7]
    connect io.out.bits.decode.cf.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 27195:7]
    node _io_out_bits_decode_cf_redirect_T = mux(csr.io.redirect.valid, csr.io.redirect, alu.io.redirect) @[build/NutShell.fir.opt.mlir 27197:44]
    node _io_out_bits_decode_cf_redirect_T_1 = mux(mou.io.redirect.valid, mou.io.redirect, _io_out_bits_decode_cf_redirect_T) @[build/NutShell.fir.opt.mlir 27199:46]
    connect io.out.bits.decode.cf.redirect, _io_out_bits_decode_cf_redirect_T_1 @[build/NutShell.fir.opt.mlir 27200:7]
    node _T = or(mou.io.redirect.valid, csr.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27202:13]
    node _T_1 = or(_T, alu.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27204:15]
    inst LogPerfHelper of LogPerfHelper_18 @[build/NutShell.fir.opt.mlir 27205:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 27206:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 27211:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 27212:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 27213:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 27214:7]
    node _T_2 = and(_T_1, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27216:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 27217:7]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27219:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27221:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 27222:9]
        skip @[build/NutShell.fir.opt.mlir 27223:11]
      node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27226:17]
      node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27228:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 27229:9]
        skip @[build/NutShell.fir.opt.mlir 27230:11]
    node _T_7 = or(mou.io.redirect.valid, csr.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27234:15]
    node _T_8 = or(_T_7, alu.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27236:15]
    node _T_9 = and(_T_8, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27238:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 27239:7]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27241:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27243:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 27244:9]
        skip @[build/NutShell.fir.opt.mlir 27245:11]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27248:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27250:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 27251:9]
        skip @[build/NutShell.fir.opt.mlir 27252:11]
    node _io_out_valid_T = eq(UInt<1>(1), io.in.bits.ctrl.fuType) @[build/NutShell.fir.opt.mlir 27256:26]
    node _io_out_valid_T_1 = mux(_io_out_valid_T, lsu.io.out.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 27258:28]
    node _io_out_valid_T_2 = eq(UInt<2>(2), io.in.bits.ctrl.fuType) @[build/NutShell.fir.opt.mlir 27260:28]
    node _io_out_valid_T_3 = mux(_io_out_valid_T_2, mdu.io.out.valid, _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 27262:28]
    node _io_out_valid_T_4 = and(io.in.valid, _io_out_valid_T_3) @[build/NutShell.fir.opt.mlir 27264:28]
    connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 27265:7]
    connect io.out.bits.commits[0], alu.io.out.bits @[build/NutShell.fir.opt.mlir 27266:7]
    connect io.out.bits.commits[1], lsu.io.out.bits @[build/NutShell.fir.opt.mlir 27267:7]
    connect io.out.bits.commits[3], csr.io.out.bits @[build/NutShell.fir.opt.mlir 27268:7]
    connect io.out.bits.commits[2], mdu.io.out.bits @[build/NutShell.fir.opt.mlir 27269:7]
    connect io.out.bits.commits[4], pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 27272:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27274:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 27276:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 27278:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 27279:7]
    connect io.forward.valid, io.in.valid @[build/NutShell.fir.opt.mlir 27280:7]
    connect io.forward.wb.rfWen, io.in.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 27281:7]
    connect io.forward.wb.rfDest, io.in.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27282:7]
    node _io_forward_wb_rfData_T = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27284:34]
    node _io_forward_wb_rfData_T_1 = mux(_io_forward_wb_rfData_T, alu.io.out.bits, lsu.io.out.bits) @[build/NutShell.fir.opt.mlir 27286:36]
    connect io.forward.wb.rfData, _io_forward_wb_rfData_T_1 @[build/NutShell.fir.opt.mlir 27287:7]
    connect io.forward.fuType, io.in.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 27288:7]
    node isBru = bits(io.in.bits.ctrl.fuOpType, 4, 4) @[build/NutShell.fir.opt.mlir 27290:16]
    node _T_14 = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27292:16]
    node _T_15 = eq(isBru, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27294:16]
    node _T_16 = and(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 27296:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 27297:16]
    connect _WIRE, _T_16 @[build/NutShell.fir.opt.mlir 27298:7]
    node _T_17 = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27300:16]
    node _T_18 = and(_T_17, isBru) @[build/NutShell.fir.opt.mlir 27302:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 27303:18]
    connect _WIRE_1, _T_18 @[build/NutShell.fir.opt.mlir 27304:7]
    node _T_19 = and(lsu.io.out.ready, lsu.io.out.valid) @[build/NutShell.fir.opt.mlir 27306:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 27307:18]
    connect _WIRE_2, _T_19 @[build/NutShell.fir.opt.mlir 27308:7]
    node _T_20 = and(mdu.io.out.ready, mdu.io.out.valid) @[build/NutShell.fir.opt.mlir 27310:16]
    wire _WIRE_3 : UInt<1> @[build/NutShell.fir.opt.mlir 27311:18]
    connect _WIRE_3, _T_20 @[build/NutShell.fir.opt.mlir 27312:7]
    node _T_21 = and(csr.io.out.ready, csr.io.out.valid) @[build/NutShell.fir.opt.mlir 27314:16]
    wire _WIRE_4 : UInt<1> @[build/NutShell.fir.opt.mlir 27315:18]
    connect _WIRE_4, _T_21 @[build/NutShell.fir.opt.mlir 27316:7]
    wire cycleCnt : UInt<64> @[build/NutShell.fir.opt.mlir 27317:19]
    connect cycleCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27320:7]
    wire instrCnt : UInt<64> @[build/NutShell.fir.opt.mlir 27321:19]
    connect instrCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27323:7]
    node _nutcoretrap_T = and(io.in.bits.ctrl.isNutCoreTrap, io.in.valid) @[build/NutShell.fir.opt.mlir 27325:25]
    wire nutcoretrap : UInt<1> @[build/NutShell.fir.opt.mlir 27326:22]
    connect nutcoretrap, _nutcoretrap_T @[build/NutShell.fir.opt.mlir 27327:7]
    wire difftest : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27328:19]
    wire _difftest_sink_bundle_WIRE : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27336:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27346:7]
    connect _difftest_sink_bundle_WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27348:7]
    connect _difftest_sink_bundle_WIRE.code, UInt<3>(0) @[build/NutShell.fir.opt.mlir 27351:7]
    connect _difftest_sink_bundle_WIRE.hasWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27353:7]
    connect _difftest_sink_bundle_WIRE.instrCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27355:7]
    connect _difftest_sink_bundle_WIRE.cycleCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27357:7]
    connect _difftest_sink_bundle_WIRE.hasTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27359:7]
    wire difftest_sink : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27360:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 27368:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27369:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27372:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27373:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 27375:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27377:7]
    inst difftest_sink_module of DummyDPICWrapper_3 @[build/NutShell.fir.opt.mlir 27378:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 27387:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 27388:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 27389:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 27390:7]
    connect difftest_sink_module.io.pc, difftest_sink.pc @[build/NutShell.fir.opt.mlir 27391:7]
    connect difftest_sink_module.io.code, difftest_sink.code @[build/NutShell.fir.opt.mlir 27392:7]
    connect difftest_sink_module.io.hasWFI, difftest_sink.hasWFI @[build/NutShell.fir.opt.mlir 27393:7]
    connect difftest_sink_module.io.instrCnt, difftest_sink.instrCnt @[build/NutShell.fir.opt.mlir 27394:7]
    connect difftest_sink_module.io.cycleCnt, difftest_sink.cycleCnt @[build/NutShell.fir.opt.mlir 27395:7]
    connect difftest_sink_module.io.hasTrap, difftest_sink.hasTrap @[build/NutShell.fir.opt.mlir 27396:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 27397:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 27398:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 27401:7]
    connect difftest.hasTrap, nutcoretrap @[build/NutShell.fir.opt.mlir 27402:7]
    connect difftest.code, tail(io.in.bits.data.src1, 61) @[build/NutShell.fir.opt.mlir 27404:7]
    connect difftest.pc, pad(io.in.bits.cf.pc, 64) @[build/NutShell.fir.opt.mlir 27406:7]
    connect difftest.cycleCnt, cycleCnt @[build/NutShell.fir.opt.mlir 27407:7]
    connect difftest.instrCnt, instrCnt @[build/NutShell.fir.opt.mlir 27408:7]
    connect difftest.hasWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27410:7]

  extmodule LogPerfHelper_19 : @[build/NutShell.fir.opt.mlir 27412:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 27412:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 27412:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 27412:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 27412:141]
    defname = LogPerfHelper

  extmodule DifftestInstrCommit : @[build/NutShell.fir.opt.mlir 27413:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27413:54]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 27413:79]
    input io : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27413:107]
    defname = DifftestInstrCommit

  module DummyDPICWrapper_4 : @[build/NutShell.fir.opt.mlir 27414:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27414:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27414:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27414:102]
    input io : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27414:148]

    inst dpic of DifftestInstrCommit @[build/NutShell.fir.opt.mlir 27435:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 27455:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 27457:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 27458:7]
    connect dpic.io.index, io.index @[build/NutShell.fir.opt.mlir 27459:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 27460:7]
    connect dpic.io.special, io.special @[build/NutShell.fir.opt.mlir 27461:7]
    connect dpic.io.nFused, io.nFused @[build/NutShell.fir.opt.mlir 27462:7]
    connect dpic.io.isStore, io.isStore @[build/NutShell.fir.opt.mlir 27463:7]
    connect dpic.io.isLoad, io.isLoad @[build/NutShell.fir.opt.mlir 27464:7]
    connect dpic.io.sqIdx, io.sqIdx @[build/NutShell.fir.opt.mlir 27465:7]
    connect dpic.io.lqIdx, io.lqIdx @[build/NutShell.fir.opt.mlir 27466:7]
    connect dpic.io.robIdx, io.robIdx @[build/NutShell.fir.opt.mlir 27467:7]
    connect dpic.io.instr, io.instr @[build/NutShell.fir.opt.mlir 27468:7]
    connect dpic.io.pc, io.pc @[build/NutShell.fir.opt.mlir 27469:7]
    connect dpic.io.wdest, io.wdest @[build/NutShell.fir.opt.mlir 27470:7]
    connect dpic.io.wpdest, io.wpdest @[build/NutShell.fir.opt.mlir 27471:7]
    connect dpic.io.vecwen, io.vecwen @[build/NutShell.fir.opt.mlir 27472:7]
    connect dpic.io.fpwen, io.fpwen @[build/NutShell.fir.opt.mlir 27473:7]
    connect dpic.io.rfwen, io.rfwen @[build/NutShell.fir.opt.mlir 27474:7]
    connect dpic.io.isRVC, io.isRVC @[build/NutShell.fir.opt.mlir 27475:7]
    connect dpic.io.skip, io.skip @[build/NutShell.fir.opt.mlir 27476:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 27477:7]

  module DelayReg : @[build/NutShell.fir.opt.mlir 27479:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27479:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27479:66]
    input i : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27479:92]
    output o : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27479:429]

    wire r : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27499:12]
    connect r.index, i.index @[build/NutShell.fir.opt.mlir 27519:7]
    connect r.coreid, i.coreid @[build/NutShell.fir.opt.mlir 27520:7]
    connect r.special, i.special @[build/NutShell.fir.opt.mlir 27521:7]
    connect r.nFused, i.nFused @[build/NutShell.fir.opt.mlir 27522:7]
    connect r.isStore, i.isStore @[build/NutShell.fir.opt.mlir 27523:7]
    connect r.isLoad, i.isLoad @[build/NutShell.fir.opt.mlir 27524:7]
    connect r.sqIdx, i.sqIdx @[build/NutShell.fir.opt.mlir 27525:7]
    connect r.lqIdx, i.lqIdx @[build/NutShell.fir.opt.mlir 27526:7]
    connect r.robIdx, i.robIdx @[build/NutShell.fir.opt.mlir 27527:7]
    connect r.instr, i.instr @[build/NutShell.fir.opt.mlir 27528:7]
    connect r.pc, i.pc @[build/NutShell.fir.opt.mlir 27529:7]
    connect r.wdest, i.wdest @[build/NutShell.fir.opt.mlir 27530:7]
    connect r.wpdest, i.wpdest @[build/NutShell.fir.opt.mlir 27531:7]
    connect r.vecwen, i.vecwen @[build/NutShell.fir.opt.mlir 27532:7]
    connect r.fpwen, i.fpwen @[build/NutShell.fir.opt.mlir 27533:7]
    connect r.rfwen, i.rfwen @[build/NutShell.fir.opt.mlir 27534:7]
    connect r.isRVC, i.isRVC @[build/NutShell.fir.opt.mlir 27535:7]
    connect r.skip, i.skip @[build/NutShell.fir.opt.mlir 27536:7]
    connect r.valid, i.valid @[build/NutShell.fir.opt.mlir 27537:7]
    wire _WIRE : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27538:16]
    connect _WIRE.index, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27560:7]
    connect _WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27562:7]
    connect _WIRE.special, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27564:7]
    connect _WIRE.nFused, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27566:7]
    connect _WIRE.isStore, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27569:7]
    connect _WIRE.isLoad, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27571:7]
    connect _WIRE.sqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27574:7]
    connect _WIRE.lqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27576:7]
    connect _WIRE.robIdx, UInt<10>(0) @[build/NutShell.fir.opt.mlir 27579:7]
    connect _WIRE.instr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 27582:7]
    connect _WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27585:7]
    connect _WIRE.wdest, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27587:7]
    connect _WIRE.wpdest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 27590:7]
    connect _WIRE.vecwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27592:7]
    connect _WIRE.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27594:7]
    connect _WIRE.rfwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27596:7]
    connect _WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27598:7]
    connect _WIRE.skip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27600:7]
    connect _WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27602:7]
    regreset REG : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> }, clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 27603:14]
    connect REG.index, r.index @[build/NutShell.fir.opt.mlir 27623:7]
    connect REG.coreid, r.coreid @[build/NutShell.fir.opt.mlir 27624:7]
    connect REG.special, r.special @[build/NutShell.fir.opt.mlir 27625:7]
    connect REG.nFused, r.nFused @[build/NutShell.fir.opt.mlir 27626:7]
    connect REG.isStore, r.isStore @[build/NutShell.fir.opt.mlir 27627:7]
    connect REG.isLoad, r.isLoad @[build/NutShell.fir.opt.mlir 27628:7]
    connect REG.sqIdx, r.sqIdx @[build/NutShell.fir.opt.mlir 27629:7]
    connect REG.lqIdx, r.lqIdx @[build/NutShell.fir.opt.mlir 27630:7]
    connect REG.robIdx, r.robIdx @[build/NutShell.fir.opt.mlir 27631:7]
    connect REG.instr, r.instr @[build/NutShell.fir.opt.mlir 27632:7]
    connect REG.pc, r.pc @[build/NutShell.fir.opt.mlir 27633:7]
    connect REG.wdest, r.wdest @[build/NutShell.fir.opt.mlir 27634:7]
    connect REG.wpdest, r.wpdest @[build/NutShell.fir.opt.mlir 27635:7]
    connect REG.vecwen, r.vecwen @[build/NutShell.fir.opt.mlir 27636:7]
    connect REG.fpwen, r.fpwen @[build/NutShell.fir.opt.mlir 27637:7]
    connect REG.rfwen, r.rfwen @[build/NutShell.fir.opt.mlir 27638:7]
    connect REG.isRVC, r.isRVC @[build/NutShell.fir.opt.mlir 27639:7]
    connect REG.skip, r.skip @[build/NutShell.fir.opt.mlir 27640:7]
    connect REG.valid, r.valid @[build/NutShell.fir.opt.mlir 27641:7]
    connect o, REG @[build/NutShell.fir.opt.mlir 27642:7]

  extmodule DifftestIntWriteback : @[build/NutShell.fir.opt.mlir 27644:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27644:55]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 27644:80]
    input io : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27644:108]
    defname = DifftestIntWriteback

  module DummyDPICWrapper_5 : @[build/NutShell.fir.opt.mlir 27645:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27645:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27645:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27645:102]
    input io : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27645:148]

    inst dpic of DifftestIntWriteback @[build/NutShell.fir.opt.mlir 27651:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 27656:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 27658:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 27659:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 27660:7]
    connect dpic.io.data, io.data @[build/NutShell.fir.opt.mlir 27661:7]
    connect dpic.io.address, io.address @[build/NutShell.fir.opt.mlir 27662:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 27663:7]

  module DelayReg_1 : @[build/NutShell.fir.opt.mlir 27665:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27665:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27665:68]
    input i : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27665:94]
    output o : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27665:185]

    wire r : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27670:12]
    connect r.coreid, i.coreid @[build/NutShell.fir.opt.mlir 27675:7]
    connect r.data, i.data @[build/NutShell.fir.opt.mlir 27676:7]
    connect r.address, i.address @[build/NutShell.fir.opt.mlir 27677:7]
    connect r.valid, i.valid @[build/NutShell.fir.opt.mlir 27678:7]
    wire _WIRE : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27679:16]
    connect _WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27686:7]
    connect _WIRE.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27689:7]
    connect _WIRE.address, UInt<5>(0) @[build/NutShell.fir.opt.mlir 27692:7]
    connect _WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27695:7]
    regreset REG : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> }, clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 27696:14]
    connect REG.coreid, r.coreid @[build/NutShell.fir.opt.mlir 27701:7]
    connect REG.data, r.data @[build/NutShell.fir.opt.mlir 27702:7]
    connect REG.address, r.address @[build/NutShell.fir.opt.mlir 27703:7]
    connect REG.valid, r.valid @[build/NutShell.fir.opt.mlir 27704:7]
    connect o, REG @[build/NutShell.fir.opt.mlir 27705:7]

  module WBU : @[build/NutShell.fir.opt.mlir 27707:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27707:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27707:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] } }, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 27707:88]

    node _io_wb_rfWen_T = and(io.in.bits.decode.ctrl.rfWen, io.in.valid) @[build/NutShell.fir.opt.mlir 27731:25]
    connect io.wb.rfWen, _io_wb_rfWen_T @[build/NutShell.fir.opt.mlir 27732:7]
    connect io.wb.rfDest, io.in.bits.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27733:7]
    connect io.wb.rfData, io.in.bits.commits[io.in.bits.decode.ctrl.fuType] @[build/NutShell.fir.opt.mlir 27735:7]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27738:7]
    connect io.redirect, io.in.bits.decode.cf.redirect @[build/NutShell.fir.opt.mlir 27739:7]
    node _io_redirect_valid_T = and(io.in.bits.decode.cf.redirect.valid, io.in.valid) @[build/NutShell.fir.opt.mlir 27741:31]
    connect io.redirect.valid, _io_redirect_valid_T @[build/NutShell.fir.opt.mlir 27742:7]
    inst LogPerfHelper of LogPerfHelper_19 @[build/NutShell.fir.opt.mlir 27743:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 27744:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 27749:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 27750:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 27751:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 27752:7]
    node _T = and(io.in.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27754:13]
    when _T : @[build/NutShell.fir.opt.mlir 27756:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27758:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27760:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 27761:9]
        skip @[build/NutShell.fir.opt.mlir 27762:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27765:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27767:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 27768:9]
        skip @[build/NutShell.fir.opt.mlir 27769:11]
    wire falseWire : UInt<1> @[build/NutShell.fir.opt.mlir 27772:20]
    connect falseWire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27774:7]
    wire difftest_commit : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27775:26]
    wire _difftest_commit_sink_bundle_WIRE : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27795:44]
    connect _difftest_commit_sink_bundle_WIRE.index, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27817:7]
    connect _difftest_commit_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27819:7]
    connect _difftest_commit_sink_bundle_WIRE.special, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27821:7]
    connect _difftest_commit_sink_bundle_WIRE.nFused, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27823:7]
    connect _difftest_commit_sink_bundle_WIRE.isStore, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27825:7]
    connect _difftest_commit_sink_bundle_WIRE.isLoad, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27827:7]
    connect _difftest_commit_sink_bundle_WIRE.sqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27830:7]
    connect _difftest_commit_sink_bundle_WIRE.lqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27832:7]
    connect _difftest_commit_sink_bundle_WIRE.robIdx, UInt<10>(0) @[build/NutShell.fir.opt.mlir 27835:7]
    connect _difftest_commit_sink_bundle_WIRE.instr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 27838:7]
    connect _difftest_commit_sink_bundle_WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27841:7]
    connect _difftest_commit_sink_bundle_WIRE.wdest, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27843:7]
    connect _difftest_commit_sink_bundle_WIRE.wpdest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 27846:7]
    connect _difftest_commit_sink_bundle_WIRE.vecwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27848:7]
    connect _difftest_commit_sink_bundle_WIRE.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27850:7]
    connect _difftest_commit_sink_bundle_WIRE.rfwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27852:7]
    connect _difftest_commit_sink_bundle_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27854:7]
    connect _difftest_commit_sink_bundle_WIRE.skip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27856:7]
    connect _difftest_commit_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27858:7]
    wire difftest_commit_sink : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27859:31]
    connect difftest_commit_sink, _difftest_commit_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 27879:7]
    wire _difftest_commit_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27880:45]
    connect _difftest_commit_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27883:7]
    wire difftest_commit_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27884:39]
    connect difftest_commit_sink_control, _difftest_commit_sink_control_WIRE @[build/NutShell.fir.opt.mlir 27886:7]
    connect difftest_commit_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27888:7]
    inst difftest_commit_sink_module of DummyDPICWrapper_4 @[build/NutShell.fir.opt.mlir 27889:151]
    connect difftest_commit_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 27910:7]
    connect difftest_commit_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 27911:7]
    connect difftest_commit_sink_module.control.enable, difftest_commit_sink_control.enable @[build/NutShell.fir.opt.mlir 27912:7]
    connect difftest_commit_sink_module.io.index, difftest_commit_sink.index @[build/NutShell.fir.opt.mlir 27913:7]
    connect difftest_commit_sink_module.io.coreid, difftest_commit_sink.coreid @[build/NutShell.fir.opt.mlir 27914:7]
    connect difftest_commit_sink_module.io.special, difftest_commit_sink.special @[build/NutShell.fir.opt.mlir 27915:7]
    connect difftest_commit_sink_module.io.nFused, difftest_commit_sink.nFused @[build/NutShell.fir.opt.mlir 27916:7]
    connect difftest_commit_sink_module.io.isStore, difftest_commit_sink.isStore @[build/NutShell.fir.opt.mlir 27917:7]
    connect difftest_commit_sink_module.io.isLoad, difftest_commit_sink.isLoad @[build/NutShell.fir.opt.mlir 27918:7]
    connect difftest_commit_sink_module.io.sqIdx, difftest_commit_sink.sqIdx @[build/NutShell.fir.opt.mlir 27919:7]
    connect difftest_commit_sink_module.io.lqIdx, difftest_commit_sink.lqIdx @[build/NutShell.fir.opt.mlir 27920:7]
    connect difftest_commit_sink_module.io.robIdx, difftest_commit_sink.robIdx @[build/NutShell.fir.opt.mlir 27921:7]
    connect difftest_commit_sink_module.io.instr, difftest_commit_sink.instr @[build/NutShell.fir.opt.mlir 27922:7]
    connect difftest_commit_sink_module.io.pc, difftest_commit_sink.pc @[build/NutShell.fir.opt.mlir 27923:7]
    connect difftest_commit_sink_module.io.wdest, difftest_commit_sink.wdest @[build/NutShell.fir.opt.mlir 27924:7]
    connect difftest_commit_sink_module.io.wpdest, difftest_commit_sink.wpdest @[build/NutShell.fir.opt.mlir 27925:7]
    connect difftest_commit_sink_module.io.vecwen, difftest_commit_sink.vecwen @[build/NutShell.fir.opt.mlir 27926:7]
    connect difftest_commit_sink_module.io.fpwen, difftest_commit_sink.fpwen @[build/NutShell.fir.opt.mlir 27927:7]
    connect difftest_commit_sink_module.io.rfwen, difftest_commit_sink.rfwen @[build/NutShell.fir.opt.mlir 27928:7]
    connect difftest_commit_sink_module.io.isRVC, difftest_commit_sink.isRVC @[build/NutShell.fir.opt.mlir 27929:7]
    connect difftest_commit_sink_module.io.skip, difftest_commit_sink.skip @[build/NutShell.fir.opt.mlir 27930:7]
    connect difftest_commit_sink_module.io.valid, difftest_commit_sink.valid @[build/NutShell.fir.opt.mlir 27931:7]
    inst difftest_commit_sink_delayer of DelayReg @[build/NutShell.fir.opt.mlir 27932:148]
    connect difftest_commit_sink_delayer.clock, clock @[build/NutShell.fir.opt.mlir 27952:7]
    connect difftest_commit_sink_delayer.reset, reset @[build/NutShell.fir.opt.mlir 27953:7]
    connect difftest_commit_sink_delayer.i.index, difftest_commit.index @[build/NutShell.fir.opt.mlir 27954:7]
    connect difftest_commit_sink_delayer.i.coreid, difftest_commit.coreid @[build/NutShell.fir.opt.mlir 27955:7]
    connect difftest_commit_sink_delayer.i.special, difftest_commit.special @[build/NutShell.fir.opt.mlir 27956:7]
    connect difftest_commit_sink_delayer.i.nFused, difftest_commit.nFused @[build/NutShell.fir.opt.mlir 27957:7]
    connect difftest_commit_sink_delayer.i.isStore, difftest_commit.isStore @[build/NutShell.fir.opt.mlir 27958:7]
    connect difftest_commit_sink_delayer.i.isLoad, difftest_commit.isLoad @[build/NutShell.fir.opt.mlir 27959:7]
    connect difftest_commit_sink_delayer.i.sqIdx, difftest_commit.sqIdx @[build/NutShell.fir.opt.mlir 27960:7]
    connect difftest_commit_sink_delayer.i.lqIdx, difftest_commit.lqIdx @[build/NutShell.fir.opt.mlir 27961:7]
    connect difftest_commit_sink_delayer.i.robIdx, difftest_commit.robIdx @[build/NutShell.fir.opt.mlir 27962:7]
    connect difftest_commit_sink_delayer.i.instr, difftest_commit.instr @[build/NutShell.fir.opt.mlir 27963:7]
    connect difftest_commit_sink_delayer.i.pc, difftest_commit.pc @[build/NutShell.fir.opt.mlir 27964:7]
    connect difftest_commit_sink_delayer.i.wdest, difftest_commit.wdest @[build/NutShell.fir.opt.mlir 27965:7]
    connect difftest_commit_sink_delayer.i.wpdest, difftest_commit.wpdest @[build/NutShell.fir.opt.mlir 27966:7]
    connect difftest_commit_sink_delayer.i.vecwen, difftest_commit.vecwen @[build/NutShell.fir.opt.mlir 27967:7]
    connect difftest_commit_sink_delayer.i.fpwen, difftest_commit.fpwen @[build/NutShell.fir.opt.mlir 27968:7]
    connect difftest_commit_sink_delayer.i.rfwen, difftest_commit.rfwen @[build/NutShell.fir.opt.mlir 27969:7]
    connect difftest_commit_sink_delayer.i.isRVC, difftest_commit.isRVC @[build/NutShell.fir.opt.mlir 27970:7]
    connect difftest_commit_sink_delayer.i.skip, difftest_commit.skip @[build/NutShell.fir.opt.mlir 27971:7]
    connect difftest_commit_sink_delayer.i.valid, difftest_commit.valid @[build/NutShell.fir.opt.mlir 27972:7]
    connect difftest_commit_sink, difftest_commit_sink_delayer.o @[build/NutShell.fir.opt.mlir 27973:7]
    connect difftest_commit_sink.coreid, difftest_commit.coreid @[build/NutShell.fir.opt.mlir 27974:7]
    invalidate difftest_commit.index @[build/NutShell.fir.opt.mlir 27976:7]
    invalidate difftest_commit.coreid @[build/NutShell.fir.opt.mlir 27978:7]
    invalidate difftest_commit.special @[build/NutShell.fir.opt.mlir 27980:7]
    invalidate difftest_commit.nFused @[build/NutShell.fir.opt.mlir 27982:7]
    invalidate difftest_commit.isStore @[build/NutShell.fir.opt.mlir 27984:7]
    invalidate difftest_commit.isLoad @[build/NutShell.fir.opt.mlir 27986:7]
    invalidate difftest_commit.sqIdx @[build/NutShell.fir.opt.mlir 27988:7]
    invalidate difftest_commit.lqIdx @[build/NutShell.fir.opt.mlir 27990:7]
    invalidate difftest_commit.robIdx @[build/NutShell.fir.opt.mlir 27992:7]
    invalidate difftest_commit.instr @[build/NutShell.fir.opt.mlir 27994:7]
    invalidate difftest_commit.pc @[build/NutShell.fir.opt.mlir 27996:7]
    invalidate difftest_commit.wdest @[build/NutShell.fir.opt.mlir 27998:7]
    invalidate difftest_commit.wpdest @[build/NutShell.fir.opt.mlir 28000:7]
    invalidate difftest_commit.vecwen @[build/NutShell.fir.opt.mlir 28002:7]
    invalidate difftest_commit.fpwen @[build/NutShell.fir.opt.mlir 28004:7]
    invalidate difftest_commit.rfwen @[build/NutShell.fir.opt.mlir 28006:7]
    invalidate difftest_commit.isRVC @[build/NutShell.fir.opt.mlir 28008:7]
    invalidate difftest_commit.skip @[build/NutShell.fir.opt.mlir 28010:7]
    invalidate difftest_commit.valid @[build/NutShell.fir.opt.mlir 28012:7]
    connect difftest_commit.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28015:7]
    connect difftest_commit.index, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28018:7]
    connect difftest_commit.valid, io.in.valid @[build/NutShell.fir.opt.mlir 28019:7]
    node difftest_commit_pc_signBit = bits(io.in.bits.decode.cf.pc, 38, 38) @[build/NutShell.fir.opt.mlir 28021:37]
    node _difftest_commit_pc_T = mux(difftest_commit_pc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 28025:32]
    node _difftest_commit_pc_T_1 = cat(_difftest_commit_pc_T, io.in.bits.decode.cf.pc) @[build/NutShell.fir.opt.mlir 28027:34]
    connect difftest_commit.pc, _difftest_commit_pc_T_1 @[build/NutShell.fir.opt.mlir 28028:7]
    connect difftest_commit.instr, tail(io.in.bits.decode.cf.instr, 32) @[build/NutShell.fir.opt.mlir 28030:7]
    connect difftest_commit.skip, io.in.bits.isMMIO @[build/NutShell.fir.opt.mlir 28031:7]
    node _difftest_commit_isRVC_T = bits(io.in.bits.decode.cf.instr, 1, 0) @[build/NutShell.fir.opt.mlir 28033:35]
    node _difftest_commit_isRVC_T_1 = neq(_difftest_commit_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 28036:37]
    connect difftest_commit.isRVC, _difftest_commit_isRVC_T_1 @[build/NutShell.fir.opt.mlir 28037:7]
    node _difftest_commit_rfwen_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28039:35]
    node _difftest_commit_rfwen_T_1 = and(io.wb.rfWen, _difftest_commit_rfwen_T) @[build/NutShell.fir.opt.mlir 28041:37]
    connect difftest_commit.rfwen, _difftest_commit_rfwen_T_1 @[build/NutShell.fir.opt.mlir 28042:7]
    connect difftest_commit.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28044:7]
    connect difftest_commit.wdest, pad(io.wb.rfDest, 8) @[build/NutShell.fir.opt.mlir 28046:7]
    connect difftest_commit.wpdest, io.wb.rfDest @[build/NutShell.fir.opt.mlir 28047:7]
    wire difftest_wb : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28048:22]
    wire _difftest_wb_sink_bundle_WIRE : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28053:40]
    connect _difftest_wb_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28059:7]
    connect _difftest_wb_sink_bundle_WIRE.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 28061:7]
    connect _difftest_wb_sink_bundle_WIRE.address, UInt<5>(0) @[build/NutShell.fir.opt.mlir 28063:7]
    connect _difftest_wb_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28065:7]
    wire difftest_wb_sink : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28066:27]
    connect difftest_wb_sink, _difftest_wb_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 28071:7]
    wire _difftest_wb_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28072:41]
    connect _difftest_wb_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28075:7]
    wire difftest_wb_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28076:35]
    connect difftest_wb_sink_control, _difftest_wb_sink_control_WIRE @[build/NutShell.fir.opt.mlir 28078:7]
    connect difftest_wb_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28080:7]
    inst difftest_wb_sink_module of DummyDPICWrapper_5 @[build/NutShell.fir.opt.mlir 28081:135]
    connect difftest_wb_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 28087:7]
    connect difftest_wb_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 28088:7]
    connect difftest_wb_sink_module.control.enable, difftest_wb_sink_control.enable @[build/NutShell.fir.opt.mlir 28089:7]
    connect difftest_wb_sink_module.io.coreid, difftest_wb_sink.coreid @[build/NutShell.fir.opt.mlir 28090:7]
    connect difftest_wb_sink_module.io.data, difftest_wb_sink.data @[build/NutShell.fir.opt.mlir 28091:7]
    connect difftest_wb_sink_module.io.address, difftest_wb_sink.address @[build/NutShell.fir.opt.mlir 28092:7]
    connect difftest_wb_sink_module.io.valid, difftest_wb_sink.valid @[build/NutShell.fir.opt.mlir 28093:7]
    inst difftest_wb_sink_delayer of DelayReg_1 @[build/NutShell.fir.opt.mlir 28094:132]
    connect difftest_wb_sink_delayer.clock, clock @[build/NutShell.fir.opt.mlir 28099:7]
    connect difftest_wb_sink_delayer.reset, reset @[build/NutShell.fir.opt.mlir 28100:7]
    connect difftest_wb_sink_delayer.i.coreid, difftest_wb.coreid @[build/NutShell.fir.opt.mlir 28101:7]
    connect difftest_wb_sink_delayer.i.data, difftest_wb.data @[build/NutShell.fir.opt.mlir 28102:7]
    connect difftest_wb_sink_delayer.i.address, difftest_wb.address @[build/NutShell.fir.opt.mlir 28103:7]
    connect difftest_wb_sink_delayer.i.valid, difftest_wb.valid @[build/NutShell.fir.opt.mlir 28104:7]
    connect difftest_wb_sink, difftest_wb_sink_delayer.o @[build/NutShell.fir.opt.mlir 28105:7]
    connect difftest_wb_sink.coreid, difftest_wb.coreid @[build/NutShell.fir.opt.mlir 28106:7]
    connect difftest_wb.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28109:7]
    node _difftest_wb_valid_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28111:31]
    node _difftest_wb_valid_T_1 = and(io.wb.rfWen, _difftest_wb_valid_T) @[build/NutShell.fir.opt.mlir 28113:33]
    connect difftest_wb.valid, _difftest_wb_valid_T_1 @[build/NutShell.fir.opt.mlir 28114:7]
    connect difftest_wb.address, io.wb.rfDest @[build/NutShell.fir.opt.mlir 28115:7]
    connect difftest_wb.data, io.wb.rfData @[build/NutShell.fir.opt.mlir 28116:7]

  module Backend_inorder : @[build/NutShell.fir.opt.mlir 28118:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28118:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28118:73]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], flip flush : UInt<2>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip memMMU : { imem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, dmem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> } }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 28118:100]

    inst isu of ISU @[build/NutShell.fir.opt.mlir 28133:41]
    connect isu.clock, clock @[build/NutShell.fir.opt.mlir 28144:7]
    connect isu.reset, reset @[build/NutShell.fir.opt.mlir 28145:7]
    inst exu of EXU @[build/NutShell.fir.opt.mlir 28146:41]
    connect exu.clock, clock @[build/NutShell.fir.opt.mlir 28227:7]
    connect exu.reset, reset @[build/NutShell.fir.opt.mlir 28228:7]
    inst wbu of WBU @[build/NutShell.fir.opt.mlir 28229:41]
    connect wbu.clock, clock @[build/NutShell.fir.opt.mlir 28306:7]
    connect wbu.reset, reset @[build/NutShell.fir.opt.mlir 28307:7]
    node _T = and(exu.io.out.ready, exu.io.out.valid) @[build/NutShell.fir.opt.mlir 28309:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 28311:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28313:16]
    when _T : @[build/NutShell.fir.opt.mlir 28314:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28316:9]
    node _T_2 = and(isu.io.out.valid, exu.io.in.ready) @[build/NutShell.fir.opt.mlir 28319:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 28321:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28323:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 28325:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28327:9]
    connect isu.io.out.ready, exu.io.in.ready @[build/NutShell.fir.opt.mlir 28329:7]
    node _exu_io_in_bits_T = and(isu.io.out.valid, exu.io.in.ready) @[build/NutShell.fir.opt.mlir 28331:28]
    reg exu_io_in_bits_r : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 28332:27]
    when _exu_io_in_bits_T : @[build/NutShell.fir.opt.mlir 28394:7]
      connect exu_io_in_bits_r, isu.io.out.bits @[build/NutShell.fir.opt.mlir 28395:9]
    connect exu.io.in.bits.data.imm, exu_io_in_bits_r.data.imm @[build/NutShell.fir.opt.mlir 28397:7]
    connect exu.io.in.bits.data.src2, exu_io_in_bits_r.data.src2 @[build/NutShell.fir.opt.mlir 28398:7]
    connect exu.io.in.bits.data.src1, exu_io_in_bits_r.data.src1 @[build/NutShell.fir.opt.mlir 28399:7]
    connect exu.io.in.bits.ctrl.isBlocked, exu_io_in_bits_r.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 28400:7]
    connect exu.io.in.bits.ctrl.noSpecExec, exu_io_in_bits_r.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 28401:7]
    connect exu.io.in.bits.ctrl.isSrc2Forward, exu_io_in_bits_r.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 28402:7]
    connect exu.io.in.bits.ctrl.isSrc1Forward, exu_io_in_bits_r.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 28403:7]
    connect exu.io.in.bits.ctrl.isNutCoreTrap, exu_io_in_bits_r.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 28404:7]
    connect exu.io.in.bits.ctrl.rfDest, exu_io_in_bits_r.ctrl.rfDest @[build/NutShell.fir.opt.mlir 28405:7]
    connect exu.io.in.bits.ctrl.rfWen, exu_io_in_bits_r.ctrl.rfWen @[build/NutShell.fir.opt.mlir 28406:7]
    connect exu.io.in.bits.ctrl.rfSrc2, exu_io_in_bits_r.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 28407:7]
    connect exu.io.in.bits.ctrl.rfSrc1, exu_io_in_bits_r.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 28408:7]
    connect exu.io.in.bits.ctrl.fuOpType, exu_io_in_bits_r.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 28409:7]
    connect exu.io.in.bits.ctrl.fuType, exu_io_in_bits_r.ctrl.fuType @[build/NutShell.fir.opt.mlir 28410:7]
    connect exu.io.in.bits.ctrl.src2Type, exu_io_in_bits_r.ctrl.src2Type @[build/NutShell.fir.opt.mlir 28411:7]
    connect exu.io.in.bits.ctrl.src1Type, exu_io_in_bits_r.ctrl.src1Type @[build/NutShell.fir.opt.mlir 28412:7]
    connect exu.io.in.bits.cf.isBranch, exu_io_in_bits_r.cf.isBranch @[build/NutShell.fir.opt.mlir 28413:7]
    connect exu.io.in.bits.cf.runahead_checkpoint_id, exu_io_in_bits_r.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 28414:7]
    connect exu.io.in.bits.cf.crossPageIPFFix, exu_io_in_bits_r.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 28415:7]
    connect exu.io.in.bits.cf.isRVC, exu_io_in_bits_r.cf.isRVC @[build/NutShell.fir.opt.mlir 28416:7]
    connect exu.io.in.bits.cf.brIdx, exu_io_in_bits_r.cf.brIdx @[build/NutShell.fir.opt.mlir 28417:7]
    connect exu.io.in.bits.cf.intrVec[0], exu_io_in_bits_r.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 28418:7]
    connect exu.io.in.bits.cf.intrVec[1], exu_io_in_bits_r.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 28419:7]
    connect exu.io.in.bits.cf.intrVec[2], exu_io_in_bits_r.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 28420:7]
    connect exu.io.in.bits.cf.intrVec[3], exu_io_in_bits_r.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 28421:7]
    connect exu.io.in.bits.cf.intrVec[4], exu_io_in_bits_r.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 28422:7]
    connect exu.io.in.bits.cf.intrVec[5], exu_io_in_bits_r.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 28423:7]
    connect exu.io.in.bits.cf.intrVec[6], exu_io_in_bits_r.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 28424:7]
    connect exu.io.in.bits.cf.intrVec[7], exu_io_in_bits_r.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 28425:7]
    connect exu.io.in.bits.cf.intrVec[8], exu_io_in_bits_r.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 28426:7]
    connect exu.io.in.bits.cf.intrVec[9], exu_io_in_bits_r.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 28427:7]
    connect exu.io.in.bits.cf.intrVec[10], exu_io_in_bits_r.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 28428:7]
    connect exu.io.in.bits.cf.intrVec[11], exu_io_in_bits_r.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 28429:7]
    connect exu.io.in.bits.cf.exceptionVec[0], exu_io_in_bits_r.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 28430:7]
    connect exu.io.in.bits.cf.exceptionVec[1], exu_io_in_bits_r.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 28431:7]
    connect exu.io.in.bits.cf.exceptionVec[2], exu_io_in_bits_r.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 28432:7]
    connect exu.io.in.bits.cf.exceptionVec[3], exu_io_in_bits_r.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 28433:7]
    connect exu.io.in.bits.cf.exceptionVec[4], exu_io_in_bits_r.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 28434:7]
    connect exu.io.in.bits.cf.exceptionVec[5], exu_io_in_bits_r.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 28435:7]
    connect exu.io.in.bits.cf.exceptionVec[6], exu_io_in_bits_r.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 28436:7]
    connect exu.io.in.bits.cf.exceptionVec[7], exu_io_in_bits_r.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 28437:7]
    connect exu.io.in.bits.cf.exceptionVec[8], exu_io_in_bits_r.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 28438:7]
    connect exu.io.in.bits.cf.exceptionVec[9], exu_io_in_bits_r.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 28439:7]
    connect exu.io.in.bits.cf.exceptionVec[10], exu_io_in_bits_r.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 28440:7]
    connect exu.io.in.bits.cf.exceptionVec[11], exu_io_in_bits_r.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 28441:7]
    connect exu.io.in.bits.cf.exceptionVec[12], exu_io_in_bits_r.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 28442:7]
    connect exu.io.in.bits.cf.exceptionVec[13], exu_io_in_bits_r.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 28443:7]
    connect exu.io.in.bits.cf.exceptionVec[14], exu_io_in_bits_r.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 28444:7]
    connect exu.io.in.bits.cf.exceptionVec[15], exu_io_in_bits_r.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 28445:7]
    connect exu.io.in.bits.cf.redirect.valid, exu_io_in_bits_r.cf.redirect.valid @[build/NutShell.fir.opt.mlir 28446:7]
    connect exu.io.in.bits.cf.redirect.rtype, exu_io_in_bits_r.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 28447:7]
    connect exu.io.in.bits.cf.redirect.target, exu_io_in_bits_r.cf.redirect.target @[build/NutShell.fir.opt.mlir 28448:7]
    connect exu.io.in.bits.cf.pnpc, exu_io_in_bits_r.cf.pnpc @[build/NutShell.fir.opt.mlir 28449:7]
    connect exu.io.in.bits.cf.pc, exu_io_in_bits_r.cf.pc @[build/NutShell.fir.opt.mlir 28450:7]
    connect exu.io.in.bits.cf.instr, exu_io_in_bits_r.cf.instr @[build/NutShell.fir.opt.mlir 28451:7]
    connect exu.io.in.valid, valid @[build/NutShell.fir.opt.mlir 28452:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 28454:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28455:18]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 28456:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28458:9]
    node _T_4 = and(exu.io.out.valid, wbu.io.in.ready) @[build/NutShell.fir.opt.mlir 28461:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 28462:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28464:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 28466:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28468:9]
    connect exu.io.out.ready, wbu.io.in.ready @[build/NutShell.fir.opt.mlir 28470:7]
    node _wbu_io_in_bits_T = and(exu.io.out.valid, wbu.io.in.ready) @[build/NutShell.fir.opt.mlir 28472:28]
    reg wbu_io_in_bits_r : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] }, clock @[build/NutShell.fir.opt.mlir 28473:27]
    when _wbu_io_in_bits_T : @[build/NutShell.fir.opt.mlir 28544:7]
      connect wbu_io_in_bits_r, exu.io.out.bits @[build/NutShell.fir.opt.mlir 28545:9]
    connect wbu.io.in.bits.commits[0], wbu_io_in_bits_r.commits[0] @[build/NutShell.fir.opt.mlir 28547:7]
    connect wbu.io.in.bits.commits[1], wbu_io_in_bits_r.commits[1] @[build/NutShell.fir.opt.mlir 28548:7]
    connect wbu.io.in.bits.commits[2], wbu_io_in_bits_r.commits[2] @[build/NutShell.fir.opt.mlir 28549:7]
    connect wbu.io.in.bits.commits[3], wbu_io_in_bits_r.commits[3] @[build/NutShell.fir.opt.mlir 28550:7]
    connect wbu.io.in.bits.commits[4], wbu_io_in_bits_r.commits[4] @[build/NutShell.fir.opt.mlir 28551:7]
    connect wbu.io.in.bits.intrNO, wbu_io_in_bits_r.intrNO @[build/NutShell.fir.opt.mlir 28552:7]
    connect wbu.io.in.bits.isMMIO, wbu_io_in_bits_r.isMMIO @[build/NutShell.fir.opt.mlir 28553:7]
    connect wbu.io.in.bits.decode.data.imm, wbu_io_in_bits_r.decode.data.imm @[build/NutShell.fir.opt.mlir 28554:7]
    connect wbu.io.in.bits.decode.data.src2, wbu_io_in_bits_r.decode.data.src2 @[build/NutShell.fir.opt.mlir 28555:7]
    connect wbu.io.in.bits.decode.data.src1, wbu_io_in_bits_r.decode.data.src1 @[build/NutShell.fir.opt.mlir 28556:7]
    connect wbu.io.in.bits.decode.ctrl.isBlocked, wbu_io_in_bits_r.decode.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 28557:7]
    connect wbu.io.in.bits.decode.ctrl.noSpecExec, wbu_io_in_bits_r.decode.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 28558:7]
    connect wbu.io.in.bits.decode.ctrl.isSrc2Forward, wbu_io_in_bits_r.decode.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 28559:7]
    connect wbu.io.in.bits.decode.ctrl.isSrc1Forward, wbu_io_in_bits_r.decode.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 28560:7]
    connect wbu.io.in.bits.decode.ctrl.isNutCoreTrap, wbu_io_in_bits_r.decode.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 28561:7]
    connect wbu.io.in.bits.decode.ctrl.rfDest, wbu_io_in_bits_r.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 28562:7]
    connect wbu.io.in.bits.decode.ctrl.rfWen, wbu_io_in_bits_r.decode.ctrl.rfWen @[build/NutShell.fir.opt.mlir 28563:7]
    connect wbu.io.in.bits.decode.ctrl.rfSrc2, wbu_io_in_bits_r.decode.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 28564:7]
    connect wbu.io.in.bits.decode.ctrl.rfSrc1, wbu_io_in_bits_r.decode.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 28565:7]
    connect wbu.io.in.bits.decode.ctrl.fuOpType, wbu_io_in_bits_r.decode.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 28566:7]
    connect wbu.io.in.bits.decode.ctrl.fuType, wbu_io_in_bits_r.decode.ctrl.fuType @[build/NutShell.fir.opt.mlir 28567:7]
    connect wbu.io.in.bits.decode.ctrl.src2Type, wbu_io_in_bits_r.decode.ctrl.src2Type @[build/NutShell.fir.opt.mlir 28568:7]
    connect wbu.io.in.bits.decode.ctrl.src1Type, wbu_io_in_bits_r.decode.ctrl.src1Type @[build/NutShell.fir.opt.mlir 28569:7]
    connect wbu.io.in.bits.decode.cf.isBranch, wbu_io_in_bits_r.decode.cf.isBranch @[build/NutShell.fir.opt.mlir 28570:7]
    connect wbu.io.in.bits.decode.cf.runahead_checkpoint_id, wbu_io_in_bits_r.decode.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 28571:7]
    connect wbu.io.in.bits.decode.cf.crossPageIPFFix, wbu_io_in_bits_r.decode.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 28572:7]
    connect wbu.io.in.bits.decode.cf.isRVC, wbu_io_in_bits_r.decode.cf.isRVC @[build/NutShell.fir.opt.mlir 28573:7]
    connect wbu.io.in.bits.decode.cf.brIdx, wbu_io_in_bits_r.decode.cf.brIdx @[build/NutShell.fir.opt.mlir 28574:7]
    connect wbu.io.in.bits.decode.cf.intrVec[0], wbu_io_in_bits_r.decode.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 28575:7]
    connect wbu.io.in.bits.decode.cf.intrVec[1], wbu_io_in_bits_r.decode.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 28576:7]
    connect wbu.io.in.bits.decode.cf.intrVec[2], wbu_io_in_bits_r.decode.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 28577:7]
    connect wbu.io.in.bits.decode.cf.intrVec[3], wbu_io_in_bits_r.decode.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 28578:7]
    connect wbu.io.in.bits.decode.cf.intrVec[4], wbu_io_in_bits_r.decode.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 28579:7]
    connect wbu.io.in.bits.decode.cf.intrVec[5], wbu_io_in_bits_r.decode.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 28580:7]
    connect wbu.io.in.bits.decode.cf.intrVec[6], wbu_io_in_bits_r.decode.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 28581:7]
    connect wbu.io.in.bits.decode.cf.intrVec[7], wbu_io_in_bits_r.decode.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 28582:7]
    connect wbu.io.in.bits.decode.cf.intrVec[8], wbu_io_in_bits_r.decode.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 28583:7]
    connect wbu.io.in.bits.decode.cf.intrVec[9], wbu_io_in_bits_r.decode.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 28584:7]
    connect wbu.io.in.bits.decode.cf.intrVec[10], wbu_io_in_bits_r.decode.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 28585:7]
    connect wbu.io.in.bits.decode.cf.intrVec[11], wbu_io_in_bits_r.decode.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 28586:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[0], wbu_io_in_bits_r.decode.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 28587:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[1], wbu_io_in_bits_r.decode.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 28588:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[2], wbu_io_in_bits_r.decode.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 28589:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[3], wbu_io_in_bits_r.decode.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 28590:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[4], wbu_io_in_bits_r.decode.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 28591:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[5], wbu_io_in_bits_r.decode.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 28592:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[6], wbu_io_in_bits_r.decode.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 28593:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[7], wbu_io_in_bits_r.decode.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 28594:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[8], wbu_io_in_bits_r.decode.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 28595:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[9], wbu_io_in_bits_r.decode.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 28596:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[10], wbu_io_in_bits_r.decode.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 28597:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[11], wbu_io_in_bits_r.decode.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 28598:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[12], wbu_io_in_bits_r.decode.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 28599:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[13], wbu_io_in_bits_r.decode.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 28600:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[14], wbu_io_in_bits_r.decode.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 28601:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[15], wbu_io_in_bits_r.decode.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 28602:7]
    connect wbu.io.in.bits.decode.cf.redirect.valid, wbu_io_in_bits_r.decode.cf.redirect.valid @[build/NutShell.fir.opt.mlir 28603:7]
    connect wbu.io.in.bits.decode.cf.redirect.rtype, wbu_io_in_bits_r.decode.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 28604:7]
    connect wbu.io.in.bits.decode.cf.redirect.target, wbu_io_in_bits_r.decode.cf.redirect.target @[build/NutShell.fir.opt.mlir 28605:7]
    connect wbu.io.in.bits.decode.cf.pnpc, wbu_io_in_bits_r.decode.cf.pnpc @[build/NutShell.fir.opt.mlir 28606:7]
    connect wbu.io.in.bits.decode.cf.pc, wbu_io_in_bits_r.decode.cf.pc @[build/NutShell.fir.opt.mlir 28607:7]
    connect wbu.io.in.bits.decode.cf.instr, wbu_io_in_bits_r.decode.cf.instr @[build/NutShell.fir.opt.mlir 28608:7]
    connect wbu.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 28609:7]
    connect io.in[0].ready, isu.io.in[0].ready @[build/NutShell.fir.opt.mlir 28612:7]
    connect isu.io.in[0].valid, io.in[0].valid @[build/NutShell.fir.opt.mlir 28615:7]
    connect isu.io.in[0].bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 28618:7]
    connect io.in[1].ready, isu.io.in[1].ready @[build/NutShell.fir.opt.mlir 28621:7]
    connect isu.io.in[1].valid, io.in[1].valid @[build/NutShell.fir.opt.mlir 28624:7]
    connect isu.io.in[1].bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 28627:7]
    node _isu_io_flush_T = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 28629:26]
    connect isu.io.flush, _isu_io_flush_T @[build/NutShell.fir.opt.mlir 28630:7]
    node _exu_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 28632:26]
    connect exu.io.flush, _exu_io_flush_T @[build/NutShell.fir.opt.mlir 28633:7]
    connect isu.io.wb, wbu.io.wb @[build/NutShell.fir.opt.mlir 28634:7]
    connect io.redirect, wbu.io.redirect @[build/NutShell.fir.opt.mlir 28635:7]
    connect isu.io.forward, exu.io.forward @[build/NutShell.fir.opt.mlir 28636:7]
    connect io.memMMU.imem.privilegeMode, exu.io.memMMU.imem.privilegeMode @[build/NutShell.fir.opt.mlir 28639:7]
    connect io.memMMU.imem.status_sum, exu.io.memMMU.imem.status_sum @[build/NutShell.fir.opt.mlir 28642:7]
    connect io.memMMU.imem.status_mxr, exu.io.memMMU.imem.status_mxr @[build/NutShell.fir.opt.mlir 28645:7]
    connect exu.io.memMMU.imem.loadPF, io.memMMU.imem.loadPF @[build/NutShell.fir.opt.mlir 28648:7]
    connect exu.io.memMMU.imem.storePF, io.memMMU.imem.storePF @[build/NutShell.fir.opt.mlir 28651:7]
    connect exu.io.memMMU.imem.addr, io.memMMU.imem.addr @[build/NutShell.fir.opt.mlir 28654:7]
    connect io.memMMU.dmem.privilegeMode, exu.io.memMMU.dmem.privilegeMode @[build/NutShell.fir.opt.mlir 28657:7]
    connect io.memMMU.dmem.status_sum, exu.io.memMMU.dmem.status_sum @[build/NutShell.fir.opt.mlir 28660:7]
    connect io.memMMU.dmem.status_mxr, exu.io.memMMU.dmem.status_mxr @[build/NutShell.fir.opt.mlir 28663:7]
    connect exu.io.memMMU.dmem.loadPF, io.memMMU.dmem.loadPF @[build/NutShell.fir.opt.mlir 28666:7]
    connect exu.io.memMMU.dmem.storePF, io.memMMU.dmem.storePF @[build/NutShell.fir.opt.mlir 28669:7]
    connect exu.io.memMMU.dmem.addr, io.memMMU.dmem.addr @[build/NutShell.fir.opt.mlir 28672:7]
    connect io.dmem.resp.ready, exu.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 28675:7]
    connect exu.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 28678:7]
    connect exu.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 28681:7]
    connect io.dmem.req.bits, exu.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 28682:7]
    connect io.dmem.req.valid, exu.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 28683:7]
    connect exu.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 28684:7]

  extmodule LogPerfHelper_20 : @[build/NutShell.fir.opt.mlir 28686:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 28686:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 28686:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 28686:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 28686:141]
    defname = LogPerfHelper

  module LockingArbiter : @[build/NutShell.fir.opt.mlir 28687:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28687:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28687:72]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 28687:99]

    wire io_chosen_choice : UInt<1> @[build/NutShell.fir.opt.mlir 28700:27]
    connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28702:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 28703:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 28706:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 28709:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 28711:26]
    reg lockIdx : UInt<1>, clock @[build/NutShell.fir.opt.mlir 28712:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28715:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28717:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 28719:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 28721:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 28723:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 28725:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 28727:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 28728:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 28730:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28732:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 28734:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 28735:9]
    when locked : @[build/NutShell.fir.opt.mlir 28737:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 28738:9]
    node _T_2 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28741:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28743:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28745:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 28747:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 28748:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28750:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_2) @[build/NutShell.fir.opt.mlir 28752:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 28754:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 28755:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 28756:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28757:9]

  module SimpleBusCrossbarNto1 : @[build/NutShell.fir.opt.mlir 28760:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28760:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28760:79]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[2], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 28760:106]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 28783:16]
    inst inputArb of LockingArbiter @[build/NutShell.fir.opt.mlir 28784:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 28794:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 28795:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 28798:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 28801:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 28804:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 28807:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 28810:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 28813:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28815:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28818:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 28820:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28822:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 28824:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28826:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 28828:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28830:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28832:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 28834:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28836:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 28838:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28840:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 28842:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28844:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 28845:9]
        skip @[build/NutShell.fir.opt.mlir 28846:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 28848:9]
    regreset inflightSrc : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28850:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 28851:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 28853:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 28855:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 28856:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 28858:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 28860:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 28861:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 28862:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 28863:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28865:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28867:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 28871:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 28875:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 28877:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 28882:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 28884:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 28885:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 28886:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28888:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28890:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 28892:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28894:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 28896:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 28897:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 28899:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 28902:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28904:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 28906:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 28907:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 28909:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 28915:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 28916:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 28918:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 28920:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 28922:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 28923:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 28925:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 28929:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 28930:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 28932:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 28933:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 28935:15]

  module LockingArbiter_1 : @[build/NutShell.fir.opt.mlir 28941:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28941:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28941:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[4], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<2> } @[build/NutShell.fir.opt.mlir 28941:101]

    wire io_chosen_choice : UInt<2> @[build/NutShell.fir.opt.mlir 28960:27]
    connect io_chosen_choice, UInt<2>(3) @[build/NutShell.fir.opt.mlir 28962:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 28963:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 28966:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 28969:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 28971:26]
    reg lockIdx : UInt<2>, clock @[build/NutShell.fir.opt.mlir 28972:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28975:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28977:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 28979:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 28981:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 28983:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 28985:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 28988:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 28989:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 28991:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28993:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 28995:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 28996:9]
    when locked : @[build/NutShell.fir.opt.mlir 28998:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 28999:9]
    node _T_2 = or(io.in[0].valid, io.in[1].valid) @[build/NutShell.fir.opt.mlir 29002:15]
    node _T_3 = or(_T_2, io.in[2].valid) @[build/NutShell.fir.opt.mlir 29004:15]
    node _T_4 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29006:15]
    node _T_5 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29008:15]
    node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29010:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29012:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29014:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29016:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 29017:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29019:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_4) @[build/NutShell.fir.opt.mlir 29021:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29023:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 29024:7]
    node _io_in_2_ready_T = eq(lockIdx, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 29027:27]
    node _io_in_2_ready_T_1 = mux(locked, _io_in_2_ready_T, _T_5) @[build/NutShell.fir.opt.mlir 29029:29]
    node _io_in_2_ready_T_2 = and(_io_in_2_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29031:29]
    connect io.in[2].ready, _io_in_2_ready_T_2 @[build/NutShell.fir.opt.mlir 29032:7]
    node _io_in_3_ready_T = eq(lockIdx, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 29034:27]
    node _io_in_3_ready_T_1 = mux(locked, _io_in_3_ready_T, _T_6) @[build/NutShell.fir.opt.mlir 29036:29]
    node _io_in_3_ready_T_2 = and(_io_in_3_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29038:29]
    connect io.in[3].ready, _io_in_3_ready_T_2 @[build/NutShell.fir.opt.mlir 29039:7]
    when io.in[2].valid : @[build/NutShell.fir.opt.mlir 29040:7]
      connect io_chosen_choice, UInt<2>(2) @[build/NutShell.fir.opt.mlir 29041:9]
    when io.in[1].valid : @[build/NutShell.fir.opt.mlir 29043:7]
      connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 29044:9]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 29046:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29047:9]

  module SimpleBusCrossbarNto1_1 : @[build/NutShell.fir.opt.mlir 29050:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 29050:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 29050:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[4], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 29050:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29083:16]
    inst inputArb of LockingArbiter_1 @[build/NutShell.fir.opt.mlir 29084:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 29096:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 29097:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 29100:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 29103:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 29106:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 29109:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 29112:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 29115:7]
    connect io.in[2].req.ready, inputArb.io.in[2].ready @[build/NutShell.fir.opt.mlir 29118:7]
    connect inputArb.io.in[2].valid, io.in[2].req.valid @[build/NutShell.fir.opt.mlir 29121:7]
    connect inputArb.io.in[2].bits, io.in[2].req.bits @[build/NutShell.fir.opt.mlir 29124:7]
    connect io.in[3].req.ready, inputArb.io.in[3].ready @[build/NutShell.fir.opt.mlir 29127:7]
    connect inputArb.io.in[3].valid, io.in[3].req.valid @[build/NutShell.fir.opt.mlir 29130:7]
    connect inputArb.io.in[3].bits, io.in[3].req.bits @[build/NutShell.fir.opt.mlir 29133:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29135:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29138:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29140:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29142:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 29144:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29146:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 29148:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29150:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29152:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 29154:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29156:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 29158:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29160:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 29162:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29164:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 29165:9]
        skip @[build/NutShell.fir.opt.mlir 29166:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 29168:9]
    regreset inflightSrc : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29170:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 29171:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29173:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 29175:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 29176:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29178:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 29180:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 29181:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29182:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29183:7]
    connect io.in[2].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29184:7]
    connect io.in[3].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29185:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29187:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29189:7]
    connect io.in[2].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29191:7]
    connect io.in[3].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29193:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 29197:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 29201:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 29203:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 29208:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 29210:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 29211:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 29212:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29214:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29216:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29218:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29220:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 29222:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 29223:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 29225:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 29228:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29230:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 29232:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 29233:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 29235:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 29241:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 29242:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29244:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 29246:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 29248:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 29249:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29251:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 29255:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 29256:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29258:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 29259:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29261:15]

  extmodule LogPerfHelper_21 : @[build/NutShell.fir.opt.mlir 29267:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 29267:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 29267:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 29267:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 29267:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_22 : @[build/NutShell.fir.opt.mlir 29268:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 29268:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 29268:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 29268:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 29268:141]
    defname = LogPerfHelper

  module EmbeddedTLBExec : @[build/NutShell.fir.opt.mlir 29269:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 29269:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 29269:73]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip md : UInt<121>[4], mdWrite : { wen : UInt<1>, windex : UInt<1>, waymask : UInt<4>, wdata : UInt<121> }, flip mdReady : UInt<1>, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, flip satp : UInt<64>, pf : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, ipf : UInt<1>, isFinish : UInt<1> } @[build/NutShell.fir.opt.mlir 29269:100]

    wire _vpn_WIRE : { vpn : UInt<27>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 29318:20]
    wire _vpn_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 29321:22]
    connect _vpn_WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 29322:7]
    node _vpn_T = bits(_vpn_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 29324:17]
    connect _vpn_WIRE.off, _vpn_T @[build/NutShell.fir.opt.mlir 29325:7]
    node _vpn_T_1 = bits(_vpn_WIRE_1, 38, 12) @[build/NutShell.fir.opt.mlir 29327:19]
    connect _vpn_WIRE.vpn, _vpn_T_1 @[build/NutShell.fir.opt.mlir 29328:7]
    wire vpn : { vpn2 : UInt<9>, vpn1 : UInt<9>, vpn0 : UInt<9> } @[build/NutShell.fir.opt.mlir 29329:14]
    wire _vpn_WIRE_2 : UInt<27> @[build/NutShell.fir.opt.mlir 29333:22]
    connect _vpn_WIRE_2, _vpn_WIRE.vpn @[build/NutShell.fir.opt.mlir 29334:7]
    node _vpn_T_2 = bits(_vpn_WIRE_2, 8, 0) @[build/NutShell.fir.opt.mlir 29336:19]
    connect vpn.vpn0, _vpn_T_2 @[build/NutShell.fir.opt.mlir 29337:7]
    node _vpn_T_3 = bits(_vpn_WIRE_2, 17, 9) @[build/NutShell.fir.opt.mlir 29339:19]
    connect vpn.vpn1, _vpn_T_3 @[build/NutShell.fir.opt.mlir 29340:7]
    node _vpn_T_4 = bits(_vpn_WIRE_2, 26, 18) @[build/NutShell.fir.opt.mlir 29342:19]
    connect vpn.vpn2, _vpn_T_4 @[build/NutShell.fir.opt.mlir 29343:7]
    wire satp : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 29344:15]
    wire _satp_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 29349:21]
    connect _satp_WIRE, io.satp @[build/NutShell.fir.opt.mlir 29350:7]
    node _satp_T = bits(_satp_WIRE, 19, 0) @[build/NutShell.fir.opt.mlir 29352:18]
    connect satp.ppn, _satp_T @[build/NutShell.fir.opt.mlir 29353:7]
    node _satp_T_1 = bits(_satp_WIRE, 43, 20) @[build/NutShell.fir.opt.mlir 29355:20]
    connect satp.res, _satp_T_1 @[build/NutShell.fir.opt.mlir 29356:7]
    node _satp_T_2 = bits(_satp_WIRE, 59, 44) @[build/NutShell.fir.opt.mlir 29358:20]
    connect satp.asid, _satp_T_2 @[build/NutShell.fir.opt.mlir 29359:7]
    node _satp_T_3 = bits(_satp_WIRE, 63, 60) @[build/NutShell.fir.opt.mlir 29361:20]
    connect satp.mode, _satp_T_3 @[build/NutShell.fir.opt.mlir 29362:7]
    connect io.pf.loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29365:7]
    connect io.pf.storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29367:7]
    connect io.pf.addr, io.in.bits.addr @[build/NutShell.fir.opt.mlir 29368:7]
    wire _hitVec_WIRE : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29369:23]
    wire _hitVec_WIRE_1 : UInt<121> @[build/NutShell.fir.opt.mlir 29376:25]
    connect _hitVec_WIRE_1, io.md[0] @[build/NutShell.fir.opt.mlir 29377:7]
    node _hitVec_T = bits(_hitVec_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 29379:20]
    connect _hitVec_WIRE.pteaddr, _hitVec_T @[build/NutShell.fir.opt.mlir 29380:7]
    node _hitVec_T_1 = bits(_hitVec_WIRE_1, 51, 32) @[build/NutShell.fir.opt.mlir 29382:22]
    connect _hitVec_WIRE.ppn, _hitVec_T_1 @[build/NutShell.fir.opt.mlir 29383:7]
    node _hitVec_T_2 = bits(_hitVec_WIRE_1, 59, 52) @[build/NutShell.fir.opt.mlir 29385:22]
    connect _hitVec_WIRE.flag, _hitVec_T_2 @[build/NutShell.fir.opt.mlir 29386:7]
    node _hitVec_T_3 = bits(_hitVec_WIRE_1, 77, 60) @[build/NutShell.fir.opt.mlir 29388:22]
    connect _hitVec_WIRE.mask, _hitVec_T_3 @[build/NutShell.fir.opt.mlir 29389:7]
    node _hitVec_T_4 = bits(_hitVec_WIRE_1, 93, 78) @[build/NutShell.fir.opt.mlir 29391:22]
    connect _hitVec_WIRE.asid, _hitVec_T_4 @[build/NutShell.fir.opt.mlir 29392:7]
    node _hitVec_T_5 = bits(_hitVec_WIRE_1, 120, 94) @[build/NutShell.fir.opt.mlir 29394:22]
    connect _hitVec_WIRE.vpn, _hitVec_T_5 @[build/NutShell.fir.opt.mlir 29395:7]
    wire _hitVec_WIRE_2 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29396:25]
    wire _hitVec_WIRE_3 : UInt<8> @[build/NutShell.fir.opt.mlir 29405:25]
    connect _hitVec_WIRE_3, _hitVec_WIRE.flag @[build/NutShell.fir.opt.mlir 29406:7]
    node _hitVec_T_6 = bits(_hitVec_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 29408:22]
    connect _hitVec_WIRE_2.v, _hitVec_T_6 @[build/NutShell.fir.opt.mlir 29409:7]
    node _hitVec_T_7 = bits(_hitVec_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 29411:22]
    connect _hitVec_WIRE_2.r, _hitVec_T_7 @[build/NutShell.fir.opt.mlir 29412:7]
    node _hitVec_T_8 = bits(_hitVec_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 29414:22]
    connect _hitVec_WIRE_2.w, _hitVec_T_8 @[build/NutShell.fir.opt.mlir 29415:7]
    node _hitVec_T_9 = bits(_hitVec_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 29417:22]
    connect _hitVec_WIRE_2.x, _hitVec_T_9 @[build/NutShell.fir.opt.mlir 29418:7]
    node _hitVec_T_10 = bits(_hitVec_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 29420:23]
    connect _hitVec_WIRE_2.u, _hitVec_T_10 @[build/NutShell.fir.opt.mlir 29421:7]
    node _hitVec_T_11 = bits(_hitVec_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 29423:23]
    connect _hitVec_WIRE_2.g, _hitVec_T_11 @[build/NutShell.fir.opt.mlir 29424:7]
    node _hitVec_T_12 = bits(_hitVec_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 29426:23]
    connect _hitVec_WIRE_2.a, _hitVec_T_12 @[build/NutShell.fir.opt.mlir 29427:7]
    node _hitVec_T_13 = bits(_hitVec_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 29429:23]
    connect _hitVec_WIRE_2.d, _hitVec_T_13 @[build/NutShell.fir.opt.mlir 29430:7]
    wire _hitVec_WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29431:25]
    wire _hitVec_WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 29438:25]
    connect _hitVec_WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 29439:7]
    node _hitVec_T_14 = bits(_hitVec_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 29441:23]
    connect _hitVec_WIRE_4.pteaddr, _hitVec_T_14 @[build/NutShell.fir.opt.mlir 29442:7]
    node _hitVec_T_15 = bits(_hitVec_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 29444:23]
    connect _hitVec_WIRE_4.ppn, _hitVec_T_15 @[build/NutShell.fir.opt.mlir 29445:7]
    node _hitVec_T_16 = bits(_hitVec_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 29447:23]
    connect _hitVec_WIRE_4.flag, _hitVec_T_16 @[build/NutShell.fir.opt.mlir 29448:7]
    node _hitVec_T_17 = bits(_hitVec_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 29450:23]
    connect _hitVec_WIRE_4.mask, _hitVec_T_17 @[build/NutShell.fir.opt.mlir 29451:7]
    node _hitVec_T_18 = bits(_hitVec_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 29453:23]
    connect _hitVec_WIRE_4.asid, _hitVec_T_18 @[build/NutShell.fir.opt.mlir 29454:7]
    node _hitVec_T_19 = bits(_hitVec_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 29456:23]
    connect _hitVec_WIRE_4.vpn, _hitVec_T_19 @[build/NutShell.fir.opt.mlir 29457:7]
    node _hitVec_T_20 = eq(_hitVec_WIRE_4.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29459:23]
    node _hitVec_T_21 = and(_hitVec_WIRE_2.v, _hitVec_T_20) @[build/NutShell.fir.opt.mlir 29461:23]
    wire _hitVec_WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29462:25]
    wire _hitVec_WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 29469:25]
    connect _hitVec_WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 29470:7]
    node _hitVec_T_22 = bits(_hitVec_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 29472:23]
    connect _hitVec_WIRE_6.pteaddr, _hitVec_T_22 @[build/NutShell.fir.opt.mlir 29473:7]
    node _hitVec_T_23 = bits(_hitVec_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 29475:23]
    connect _hitVec_WIRE_6.ppn, _hitVec_T_23 @[build/NutShell.fir.opt.mlir 29476:7]
    node _hitVec_T_24 = bits(_hitVec_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 29478:23]
    connect _hitVec_WIRE_6.flag, _hitVec_T_24 @[build/NutShell.fir.opt.mlir 29479:7]
    node _hitVec_T_25 = bits(_hitVec_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 29481:23]
    connect _hitVec_WIRE_6.mask, _hitVec_T_25 @[build/NutShell.fir.opt.mlir 29482:7]
    node _hitVec_T_26 = bits(_hitVec_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 29484:23]
    connect _hitVec_WIRE_6.asid, _hitVec_T_26 @[build/NutShell.fir.opt.mlir 29485:7]
    node _hitVec_T_27 = bits(_hitVec_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 29487:23]
    connect _hitVec_WIRE_6.vpn, _hitVec_T_27 @[build/NutShell.fir.opt.mlir 29488:7]
    wire _hitVec_WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29489:25]
    wire _hitVec_WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 29496:25]
    connect _hitVec_WIRE_9, io.md[0] @[build/NutShell.fir.opt.mlir 29497:7]
    node _hitVec_T_28 = bits(_hitVec_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 29499:23]
    connect _hitVec_WIRE_8.pteaddr, _hitVec_T_28 @[build/NutShell.fir.opt.mlir 29500:7]
    node _hitVec_T_29 = bits(_hitVec_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 29502:23]
    connect _hitVec_WIRE_8.ppn, _hitVec_T_29 @[build/NutShell.fir.opt.mlir 29503:7]
    node _hitVec_T_30 = bits(_hitVec_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 29505:23]
    connect _hitVec_WIRE_8.flag, _hitVec_T_30 @[build/NutShell.fir.opt.mlir 29506:7]
    node _hitVec_T_31 = bits(_hitVec_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 29508:23]
    connect _hitVec_WIRE_8.mask, _hitVec_T_31 @[build/NutShell.fir.opt.mlir 29509:7]
    node _hitVec_T_32 = bits(_hitVec_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 29511:23]
    connect _hitVec_WIRE_8.asid, _hitVec_T_32 @[build/NutShell.fir.opt.mlir 29512:7]
    node _hitVec_T_33 = bits(_hitVec_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 29514:23]
    connect _hitVec_WIRE_8.vpn, _hitVec_T_33 @[build/NutShell.fir.opt.mlir 29515:7]
    node hitVec_hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 29517:20]
    node _hitVec_T_34 = cat(hitVec_hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 29519:23]
    node _hitVec_T_35 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 29522:23]
    node _hitVec_T_36 = and(_hitVec_T_35, _hitVec_WIRE_8.vpn) @[build/NutShell.fir.opt.mlir 29524:23]
    node _hitVec_T_37 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 29526:23]
    node _hitVec_T_38 = and(_hitVec_T_37, _hitVec_T_34) @[build/NutShell.fir.opt.mlir 29528:23]
    node _hitVec_T_39 = eq(_hitVec_T_36, _hitVec_T_38) @[build/NutShell.fir.opt.mlir 29530:23]
    node _hitVec_T_40 = and(_hitVec_T_21, _hitVec_T_39) @[build/NutShell.fir.opt.mlir 29532:23]
    wire _hitVec_WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29533:26]
    wire _hitVec_WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 29540:26]
    connect _hitVec_WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 29541:7]
    node _hitVec_T_41 = bits(_hitVec_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 29543:23]
    connect _hitVec_WIRE_10.pteaddr, _hitVec_T_41 @[build/NutShell.fir.opt.mlir 29544:7]
    node _hitVec_T_42 = bits(_hitVec_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 29546:23]
    connect _hitVec_WIRE_10.ppn, _hitVec_T_42 @[build/NutShell.fir.opt.mlir 29547:7]
    node _hitVec_T_43 = bits(_hitVec_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 29549:23]
    connect _hitVec_WIRE_10.flag, _hitVec_T_43 @[build/NutShell.fir.opt.mlir 29550:7]
    node _hitVec_T_44 = bits(_hitVec_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 29552:23]
    connect _hitVec_WIRE_10.mask, _hitVec_T_44 @[build/NutShell.fir.opt.mlir 29553:7]
    node _hitVec_T_45 = bits(_hitVec_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 29555:23]
    connect _hitVec_WIRE_10.asid, _hitVec_T_45 @[build/NutShell.fir.opt.mlir 29556:7]
    node _hitVec_T_46 = bits(_hitVec_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 29558:23]
    connect _hitVec_WIRE_10.vpn, _hitVec_T_46 @[build/NutShell.fir.opt.mlir 29559:7]
    wire _hitVec_WIRE_12 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29560:26]
    wire _hitVec_WIRE_13 : UInt<8> @[build/NutShell.fir.opt.mlir 29569:26]
    connect _hitVec_WIRE_13, _hitVec_WIRE_10.flag @[build/NutShell.fir.opt.mlir 29570:7]
    node _hitVec_T_47 = bits(_hitVec_WIRE_13, 0, 0) @[build/NutShell.fir.opt.mlir 29572:23]
    connect _hitVec_WIRE_12.v, _hitVec_T_47 @[build/NutShell.fir.opt.mlir 29573:7]
    node _hitVec_T_48 = bits(_hitVec_WIRE_13, 1, 1) @[build/NutShell.fir.opt.mlir 29575:23]
    connect _hitVec_WIRE_12.r, _hitVec_T_48 @[build/NutShell.fir.opt.mlir 29576:7]
    node _hitVec_T_49 = bits(_hitVec_WIRE_13, 2, 2) @[build/NutShell.fir.opt.mlir 29578:23]
    connect _hitVec_WIRE_12.w, _hitVec_T_49 @[build/NutShell.fir.opt.mlir 29579:7]
    node _hitVec_T_50 = bits(_hitVec_WIRE_13, 3, 3) @[build/NutShell.fir.opt.mlir 29581:23]
    connect _hitVec_WIRE_12.x, _hitVec_T_50 @[build/NutShell.fir.opt.mlir 29582:7]
    node _hitVec_T_51 = bits(_hitVec_WIRE_13, 4, 4) @[build/NutShell.fir.opt.mlir 29584:23]
    connect _hitVec_WIRE_12.u, _hitVec_T_51 @[build/NutShell.fir.opt.mlir 29585:7]
    node _hitVec_T_52 = bits(_hitVec_WIRE_13, 5, 5) @[build/NutShell.fir.opt.mlir 29587:23]
    connect _hitVec_WIRE_12.g, _hitVec_T_52 @[build/NutShell.fir.opt.mlir 29588:7]
    node _hitVec_T_53 = bits(_hitVec_WIRE_13, 6, 6) @[build/NutShell.fir.opt.mlir 29590:23]
    connect _hitVec_WIRE_12.a, _hitVec_T_53 @[build/NutShell.fir.opt.mlir 29591:7]
    node _hitVec_T_54 = bits(_hitVec_WIRE_13, 7, 7) @[build/NutShell.fir.opt.mlir 29593:23]
    connect _hitVec_WIRE_12.d, _hitVec_T_54 @[build/NutShell.fir.opt.mlir 29594:7]
    wire _hitVec_WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29595:26]
    wire _hitVec_WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 29602:26]
    connect _hitVec_WIRE_15, io.md[1] @[build/NutShell.fir.opt.mlir 29603:7]
    node _hitVec_T_55 = bits(_hitVec_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 29605:23]
    connect _hitVec_WIRE_14.pteaddr, _hitVec_T_55 @[build/NutShell.fir.opt.mlir 29606:7]
    node _hitVec_T_56 = bits(_hitVec_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 29608:23]
    connect _hitVec_WIRE_14.ppn, _hitVec_T_56 @[build/NutShell.fir.opt.mlir 29609:7]
    node _hitVec_T_57 = bits(_hitVec_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 29611:23]
    connect _hitVec_WIRE_14.flag, _hitVec_T_57 @[build/NutShell.fir.opt.mlir 29612:7]
    node _hitVec_T_58 = bits(_hitVec_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 29614:23]
    connect _hitVec_WIRE_14.mask, _hitVec_T_58 @[build/NutShell.fir.opt.mlir 29615:7]
    node _hitVec_T_59 = bits(_hitVec_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 29617:23]
    connect _hitVec_WIRE_14.asid, _hitVec_T_59 @[build/NutShell.fir.opt.mlir 29618:7]
    node _hitVec_T_60 = bits(_hitVec_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 29620:23]
    connect _hitVec_WIRE_14.vpn, _hitVec_T_60 @[build/NutShell.fir.opt.mlir 29621:7]
    node _hitVec_T_61 = eq(_hitVec_WIRE_14.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29623:23]
    node _hitVec_T_62 = and(_hitVec_WIRE_12.v, _hitVec_T_61) @[build/NutShell.fir.opt.mlir 29625:23]
    wire _hitVec_WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29626:26]
    wire _hitVec_WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 29633:26]
    connect _hitVec_WIRE_17, io.md[1] @[build/NutShell.fir.opt.mlir 29634:7]
    node _hitVec_T_63 = bits(_hitVec_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 29636:23]
    connect _hitVec_WIRE_16.pteaddr, _hitVec_T_63 @[build/NutShell.fir.opt.mlir 29637:7]
    node _hitVec_T_64 = bits(_hitVec_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 29639:23]
    connect _hitVec_WIRE_16.ppn, _hitVec_T_64 @[build/NutShell.fir.opt.mlir 29640:7]
    node _hitVec_T_65 = bits(_hitVec_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 29642:23]
    connect _hitVec_WIRE_16.flag, _hitVec_T_65 @[build/NutShell.fir.opt.mlir 29643:7]
    node _hitVec_T_66 = bits(_hitVec_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 29645:23]
    connect _hitVec_WIRE_16.mask, _hitVec_T_66 @[build/NutShell.fir.opt.mlir 29646:7]
    node _hitVec_T_67 = bits(_hitVec_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 29648:23]
    connect _hitVec_WIRE_16.asid, _hitVec_T_67 @[build/NutShell.fir.opt.mlir 29649:7]
    node _hitVec_T_68 = bits(_hitVec_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 29651:23]
    connect _hitVec_WIRE_16.vpn, _hitVec_T_68 @[build/NutShell.fir.opt.mlir 29652:7]
    wire _hitVec_WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29653:26]
    wire _hitVec_WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 29660:26]
    connect _hitVec_WIRE_19, io.md[1] @[build/NutShell.fir.opt.mlir 29661:7]
    node _hitVec_T_69 = bits(_hitVec_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 29663:23]
    connect _hitVec_WIRE_18.pteaddr, _hitVec_T_69 @[build/NutShell.fir.opt.mlir 29664:7]
    node _hitVec_T_70 = bits(_hitVec_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 29666:23]
    connect _hitVec_WIRE_18.ppn, _hitVec_T_70 @[build/NutShell.fir.opt.mlir 29667:7]
    node _hitVec_T_71 = bits(_hitVec_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 29669:23]
    connect _hitVec_WIRE_18.flag, _hitVec_T_71 @[build/NutShell.fir.opt.mlir 29670:7]
    node _hitVec_T_72 = bits(_hitVec_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 29672:23]
    connect _hitVec_WIRE_18.mask, _hitVec_T_72 @[build/NutShell.fir.opt.mlir 29673:7]
    node _hitVec_T_73 = bits(_hitVec_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 29675:23]
    connect _hitVec_WIRE_18.asid, _hitVec_T_73 @[build/NutShell.fir.opt.mlir 29676:7]
    node _hitVec_T_74 = bits(_hitVec_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 29678:23]
    connect _hitVec_WIRE_18.vpn, _hitVec_T_74 @[build/NutShell.fir.opt.mlir 29679:7]
    node hitVec_hi_1 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 29681:22]
    node _hitVec_T_75 = cat(hitVec_hi_1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 29683:23]
    node _hitVec_T_76 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 29685:23]
    node _hitVec_T_77 = and(_hitVec_T_76, _hitVec_WIRE_18.vpn) @[build/NutShell.fir.opt.mlir 29687:23]
    node _hitVec_T_78 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 29689:23]
    node _hitVec_T_79 = and(_hitVec_T_78, _hitVec_T_75) @[build/NutShell.fir.opt.mlir 29691:23]
    node _hitVec_T_80 = eq(_hitVec_T_77, _hitVec_T_79) @[build/NutShell.fir.opt.mlir 29693:23]
    node _hitVec_T_81 = and(_hitVec_T_62, _hitVec_T_80) @[build/NutShell.fir.opt.mlir 29695:23]
    wire _hitVec_WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29696:26]
    wire _hitVec_WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 29703:26]
    connect _hitVec_WIRE_21, io.md[2] @[build/NutShell.fir.opt.mlir 29704:7]
    node _hitVec_T_82 = bits(_hitVec_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 29706:23]
    connect _hitVec_WIRE_20.pteaddr, _hitVec_T_82 @[build/NutShell.fir.opt.mlir 29707:7]
    node _hitVec_T_83 = bits(_hitVec_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 29709:23]
    connect _hitVec_WIRE_20.ppn, _hitVec_T_83 @[build/NutShell.fir.opt.mlir 29710:7]
    node _hitVec_T_84 = bits(_hitVec_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 29712:23]
    connect _hitVec_WIRE_20.flag, _hitVec_T_84 @[build/NutShell.fir.opt.mlir 29713:7]
    node _hitVec_T_85 = bits(_hitVec_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 29715:23]
    connect _hitVec_WIRE_20.mask, _hitVec_T_85 @[build/NutShell.fir.opt.mlir 29716:7]
    node _hitVec_T_86 = bits(_hitVec_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 29718:23]
    connect _hitVec_WIRE_20.asid, _hitVec_T_86 @[build/NutShell.fir.opt.mlir 29719:7]
    node _hitVec_T_87 = bits(_hitVec_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 29721:23]
    connect _hitVec_WIRE_20.vpn, _hitVec_T_87 @[build/NutShell.fir.opt.mlir 29722:7]
    wire _hitVec_WIRE_22 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29723:26]
    wire _hitVec_WIRE_23 : UInt<8> @[build/NutShell.fir.opt.mlir 29732:26]
    connect _hitVec_WIRE_23, _hitVec_WIRE_20.flag @[build/NutShell.fir.opt.mlir 29733:7]
    node _hitVec_T_88 = bits(_hitVec_WIRE_23, 0, 0) @[build/NutShell.fir.opt.mlir 29735:23]
    connect _hitVec_WIRE_22.v, _hitVec_T_88 @[build/NutShell.fir.opt.mlir 29736:7]
    node _hitVec_T_89 = bits(_hitVec_WIRE_23, 1, 1) @[build/NutShell.fir.opt.mlir 29738:23]
    connect _hitVec_WIRE_22.r, _hitVec_T_89 @[build/NutShell.fir.opt.mlir 29739:7]
    node _hitVec_T_90 = bits(_hitVec_WIRE_23, 2, 2) @[build/NutShell.fir.opt.mlir 29741:23]
    connect _hitVec_WIRE_22.w, _hitVec_T_90 @[build/NutShell.fir.opt.mlir 29742:7]
    node _hitVec_T_91 = bits(_hitVec_WIRE_23, 3, 3) @[build/NutShell.fir.opt.mlir 29744:23]
    connect _hitVec_WIRE_22.x, _hitVec_T_91 @[build/NutShell.fir.opt.mlir 29745:7]
    node _hitVec_T_92 = bits(_hitVec_WIRE_23, 4, 4) @[build/NutShell.fir.opt.mlir 29747:23]
    connect _hitVec_WIRE_22.u, _hitVec_T_92 @[build/NutShell.fir.opt.mlir 29748:7]
    node _hitVec_T_93 = bits(_hitVec_WIRE_23, 5, 5) @[build/NutShell.fir.opt.mlir 29750:23]
    connect _hitVec_WIRE_22.g, _hitVec_T_93 @[build/NutShell.fir.opt.mlir 29751:7]
    node _hitVec_T_94 = bits(_hitVec_WIRE_23, 6, 6) @[build/NutShell.fir.opt.mlir 29753:23]
    connect _hitVec_WIRE_22.a, _hitVec_T_94 @[build/NutShell.fir.opt.mlir 29754:7]
    node _hitVec_T_95 = bits(_hitVec_WIRE_23, 7, 7) @[build/NutShell.fir.opt.mlir 29756:23]
    connect _hitVec_WIRE_22.d, _hitVec_T_95 @[build/NutShell.fir.opt.mlir 29757:7]
    wire _hitVec_WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29758:26]
    wire _hitVec_WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 29765:26]
    connect _hitVec_WIRE_25, io.md[2] @[build/NutShell.fir.opt.mlir 29766:7]
    node _hitVec_T_96 = bits(_hitVec_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 29768:23]
    connect _hitVec_WIRE_24.pteaddr, _hitVec_T_96 @[build/NutShell.fir.opt.mlir 29769:7]
    node _hitVec_T_97 = bits(_hitVec_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 29771:23]
    connect _hitVec_WIRE_24.ppn, _hitVec_T_97 @[build/NutShell.fir.opt.mlir 29772:7]
    node _hitVec_T_98 = bits(_hitVec_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 29774:23]
    connect _hitVec_WIRE_24.flag, _hitVec_T_98 @[build/NutShell.fir.opt.mlir 29775:7]
    node _hitVec_T_99 = bits(_hitVec_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 29777:23]
    connect _hitVec_WIRE_24.mask, _hitVec_T_99 @[build/NutShell.fir.opt.mlir 29778:7]
    node _hitVec_T_100 = bits(_hitVec_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 29780:24]
    connect _hitVec_WIRE_24.asid, _hitVec_T_100 @[build/NutShell.fir.opt.mlir 29781:7]
    node _hitVec_T_101 = bits(_hitVec_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 29783:24]
    connect _hitVec_WIRE_24.vpn, _hitVec_T_101 @[build/NutShell.fir.opt.mlir 29784:7]
    node _hitVec_T_102 = eq(_hitVec_WIRE_24.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29786:24]
    node _hitVec_T_103 = and(_hitVec_WIRE_22.v, _hitVec_T_102) @[build/NutShell.fir.opt.mlir 29788:24]
    wire _hitVec_WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29789:26]
    wire _hitVec_WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 29796:26]
    connect _hitVec_WIRE_27, io.md[2] @[build/NutShell.fir.opt.mlir 29797:7]
    node _hitVec_T_104 = bits(_hitVec_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 29799:24]
    connect _hitVec_WIRE_26.pteaddr, _hitVec_T_104 @[build/NutShell.fir.opt.mlir 29800:7]
    node _hitVec_T_105 = bits(_hitVec_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 29802:24]
    connect _hitVec_WIRE_26.ppn, _hitVec_T_105 @[build/NutShell.fir.opt.mlir 29803:7]
    node _hitVec_T_106 = bits(_hitVec_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 29805:24]
    connect _hitVec_WIRE_26.flag, _hitVec_T_106 @[build/NutShell.fir.opt.mlir 29806:7]
    node _hitVec_T_107 = bits(_hitVec_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 29808:24]
    connect _hitVec_WIRE_26.mask, _hitVec_T_107 @[build/NutShell.fir.opt.mlir 29809:7]
    node _hitVec_T_108 = bits(_hitVec_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 29811:24]
    connect _hitVec_WIRE_26.asid, _hitVec_T_108 @[build/NutShell.fir.opt.mlir 29812:7]
    node _hitVec_T_109 = bits(_hitVec_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 29814:24]
    connect _hitVec_WIRE_26.vpn, _hitVec_T_109 @[build/NutShell.fir.opt.mlir 29815:7]
    wire _hitVec_WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29816:26]
    wire _hitVec_WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 29823:26]
    connect _hitVec_WIRE_29, io.md[2] @[build/NutShell.fir.opt.mlir 29824:7]
    node _hitVec_T_110 = bits(_hitVec_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 29826:24]
    connect _hitVec_WIRE_28.pteaddr, _hitVec_T_110 @[build/NutShell.fir.opt.mlir 29827:7]
    node _hitVec_T_111 = bits(_hitVec_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 29829:24]
    connect _hitVec_WIRE_28.ppn, _hitVec_T_111 @[build/NutShell.fir.opt.mlir 29830:7]
    node _hitVec_T_112 = bits(_hitVec_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 29832:24]
    connect _hitVec_WIRE_28.flag, _hitVec_T_112 @[build/NutShell.fir.opt.mlir 29833:7]
    node _hitVec_T_113 = bits(_hitVec_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 29835:24]
    connect _hitVec_WIRE_28.mask, _hitVec_T_113 @[build/NutShell.fir.opt.mlir 29836:7]
    node _hitVec_T_114 = bits(_hitVec_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 29838:24]
    connect _hitVec_WIRE_28.asid, _hitVec_T_114 @[build/NutShell.fir.opt.mlir 29839:7]
    node _hitVec_T_115 = bits(_hitVec_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 29841:24]
    connect _hitVec_WIRE_28.vpn, _hitVec_T_115 @[build/NutShell.fir.opt.mlir 29842:7]
    node hitVec_hi_2 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 29844:22]
    node _hitVec_T_116 = cat(hitVec_hi_2, vpn.vpn0) @[build/NutShell.fir.opt.mlir 29846:24]
    node _hitVec_T_117 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 29848:24]
    node _hitVec_T_118 = and(_hitVec_T_117, _hitVec_WIRE_28.vpn) @[build/NutShell.fir.opt.mlir 29850:24]
    node _hitVec_T_119 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 29852:24]
    node _hitVec_T_120 = and(_hitVec_T_119, _hitVec_T_116) @[build/NutShell.fir.opt.mlir 29854:24]
    node _hitVec_T_121 = eq(_hitVec_T_118, _hitVec_T_120) @[build/NutShell.fir.opt.mlir 29856:24]
    node _hitVec_T_122 = and(_hitVec_T_103, _hitVec_T_121) @[build/NutShell.fir.opt.mlir 29858:24]
    wire _hitVec_WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29859:26]
    wire _hitVec_WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 29866:26]
    connect _hitVec_WIRE_31, io.md[3] @[build/NutShell.fir.opt.mlir 29867:7]
    node _hitVec_T_123 = bits(_hitVec_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 29869:24]
    connect _hitVec_WIRE_30.pteaddr, _hitVec_T_123 @[build/NutShell.fir.opt.mlir 29870:7]
    node _hitVec_T_124 = bits(_hitVec_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 29872:24]
    connect _hitVec_WIRE_30.ppn, _hitVec_T_124 @[build/NutShell.fir.opt.mlir 29873:7]
    node _hitVec_T_125 = bits(_hitVec_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 29875:24]
    connect _hitVec_WIRE_30.flag, _hitVec_T_125 @[build/NutShell.fir.opt.mlir 29876:7]
    node _hitVec_T_126 = bits(_hitVec_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 29878:24]
    connect _hitVec_WIRE_30.mask, _hitVec_T_126 @[build/NutShell.fir.opt.mlir 29879:7]
    node _hitVec_T_127 = bits(_hitVec_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 29881:24]
    connect _hitVec_WIRE_30.asid, _hitVec_T_127 @[build/NutShell.fir.opt.mlir 29882:7]
    node _hitVec_T_128 = bits(_hitVec_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 29884:24]
    connect _hitVec_WIRE_30.vpn, _hitVec_T_128 @[build/NutShell.fir.opt.mlir 29885:7]
    wire _hitVec_WIRE_32 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29886:26]
    wire _hitVec_WIRE_33 : UInt<8> @[build/NutShell.fir.opt.mlir 29895:26]
    connect _hitVec_WIRE_33, _hitVec_WIRE_30.flag @[build/NutShell.fir.opt.mlir 29896:7]
    node _hitVec_T_129 = bits(_hitVec_WIRE_33, 0, 0) @[build/NutShell.fir.opt.mlir 29898:24]
    connect _hitVec_WIRE_32.v, _hitVec_T_129 @[build/NutShell.fir.opt.mlir 29899:7]
    node _hitVec_T_130 = bits(_hitVec_WIRE_33, 1, 1) @[build/NutShell.fir.opt.mlir 29901:24]
    connect _hitVec_WIRE_32.r, _hitVec_T_130 @[build/NutShell.fir.opt.mlir 29902:7]
    node _hitVec_T_131 = bits(_hitVec_WIRE_33, 2, 2) @[build/NutShell.fir.opt.mlir 29904:24]
    connect _hitVec_WIRE_32.w, _hitVec_T_131 @[build/NutShell.fir.opt.mlir 29905:7]
    node _hitVec_T_132 = bits(_hitVec_WIRE_33, 3, 3) @[build/NutShell.fir.opt.mlir 29907:24]
    connect _hitVec_WIRE_32.x, _hitVec_T_132 @[build/NutShell.fir.opt.mlir 29908:7]
    node _hitVec_T_133 = bits(_hitVec_WIRE_33, 4, 4) @[build/NutShell.fir.opt.mlir 29910:24]
    connect _hitVec_WIRE_32.u, _hitVec_T_133 @[build/NutShell.fir.opt.mlir 29911:7]
    node _hitVec_T_134 = bits(_hitVec_WIRE_33, 5, 5) @[build/NutShell.fir.opt.mlir 29913:24]
    connect _hitVec_WIRE_32.g, _hitVec_T_134 @[build/NutShell.fir.opt.mlir 29914:7]
    node _hitVec_T_135 = bits(_hitVec_WIRE_33, 6, 6) @[build/NutShell.fir.opt.mlir 29916:24]
    connect _hitVec_WIRE_32.a, _hitVec_T_135 @[build/NutShell.fir.opt.mlir 29917:7]
    node _hitVec_T_136 = bits(_hitVec_WIRE_33, 7, 7) @[build/NutShell.fir.opt.mlir 29919:24]
    connect _hitVec_WIRE_32.d, _hitVec_T_136 @[build/NutShell.fir.opt.mlir 29920:7]
    wire _hitVec_WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29921:26]
    wire _hitVec_WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 29928:26]
    connect _hitVec_WIRE_35, io.md[3] @[build/NutShell.fir.opt.mlir 29929:7]
    node _hitVec_T_137 = bits(_hitVec_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 29931:24]
    connect _hitVec_WIRE_34.pteaddr, _hitVec_T_137 @[build/NutShell.fir.opt.mlir 29932:7]
    node _hitVec_T_138 = bits(_hitVec_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 29934:24]
    connect _hitVec_WIRE_34.ppn, _hitVec_T_138 @[build/NutShell.fir.opt.mlir 29935:7]
    node _hitVec_T_139 = bits(_hitVec_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 29937:24]
    connect _hitVec_WIRE_34.flag, _hitVec_T_139 @[build/NutShell.fir.opt.mlir 29938:7]
    node _hitVec_T_140 = bits(_hitVec_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 29940:24]
    connect _hitVec_WIRE_34.mask, _hitVec_T_140 @[build/NutShell.fir.opt.mlir 29941:7]
    node _hitVec_T_141 = bits(_hitVec_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 29943:24]
    connect _hitVec_WIRE_34.asid, _hitVec_T_141 @[build/NutShell.fir.opt.mlir 29944:7]
    node _hitVec_T_142 = bits(_hitVec_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 29946:24]
    connect _hitVec_WIRE_34.vpn, _hitVec_T_142 @[build/NutShell.fir.opt.mlir 29947:7]
    node _hitVec_T_143 = eq(_hitVec_WIRE_34.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29949:24]
    node _hitVec_T_144 = and(_hitVec_WIRE_32.v, _hitVec_T_143) @[build/NutShell.fir.opt.mlir 29951:24]
    wire _hitVec_WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29952:26]
    wire _hitVec_WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 29959:26]
    connect _hitVec_WIRE_37, io.md[3] @[build/NutShell.fir.opt.mlir 29960:7]
    node _hitVec_T_145 = bits(_hitVec_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 29962:24]
    connect _hitVec_WIRE_36.pteaddr, _hitVec_T_145 @[build/NutShell.fir.opt.mlir 29963:7]
    node _hitVec_T_146 = bits(_hitVec_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 29965:24]
    connect _hitVec_WIRE_36.ppn, _hitVec_T_146 @[build/NutShell.fir.opt.mlir 29966:7]
    node _hitVec_T_147 = bits(_hitVec_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 29968:24]
    connect _hitVec_WIRE_36.flag, _hitVec_T_147 @[build/NutShell.fir.opt.mlir 29969:7]
    node _hitVec_T_148 = bits(_hitVec_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 29971:24]
    connect _hitVec_WIRE_36.mask, _hitVec_T_148 @[build/NutShell.fir.opt.mlir 29972:7]
    node _hitVec_T_149 = bits(_hitVec_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 29974:24]
    connect _hitVec_WIRE_36.asid, _hitVec_T_149 @[build/NutShell.fir.opt.mlir 29975:7]
    node _hitVec_T_150 = bits(_hitVec_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 29977:24]
    connect _hitVec_WIRE_36.vpn, _hitVec_T_150 @[build/NutShell.fir.opt.mlir 29978:7]
    wire _hitVec_WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29979:26]
    wire _hitVec_WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 29986:26]
    connect _hitVec_WIRE_39, io.md[3] @[build/NutShell.fir.opt.mlir 29987:7]
    node _hitVec_T_151 = bits(_hitVec_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 29989:24]
    connect _hitVec_WIRE_38.pteaddr, _hitVec_T_151 @[build/NutShell.fir.opt.mlir 29990:7]
    node _hitVec_T_152 = bits(_hitVec_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 29992:24]
    connect _hitVec_WIRE_38.ppn, _hitVec_T_152 @[build/NutShell.fir.opt.mlir 29993:7]
    node _hitVec_T_153 = bits(_hitVec_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 29995:24]
    connect _hitVec_WIRE_38.flag, _hitVec_T_153 @[build/NutShell.fir.opt.mlir 29996:7]
    node _hitVec_T_154 = bits(_hitVec_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 29998:24]
    connect _hitVec_WIRE_38.mask, _hitVec_T_154 @[build/NutShell.fir.opt.mlir 29999:7]
    node _hitVec_T_155 = bits(_hitVec_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 30001:24]
    connect _hitVec_WIRE_38.asid, _hitVec_T_155 @[build/NutShell.fir.opt.mlir 30002:7]
    node _hitVec_T_156 = bits(_hitVec_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 30004:24]
    connect _hitVec_WIRE_38.vpn, _hitVec_T_156 @[build/NutShell.fir.opt.mlir 30005:7]
    node hitVec_hi_3 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 30007:22]
    node _hitVec_T_157 = cat(hitVec_hi_3, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30009:24]
    node _hitVec_T_158 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 30011:24]
    node _hitVec_T_159 = and(_hitVec_T_158, _hitVec_WIRE_38.vpn) @[build/NutShell.fir.opt.mlir 30013:24]
    node _hitVec_T_160 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 30015:24]
    node _hitVec_T_161 = and(_hitVec_T_160, _hitVec_T_157) @[build/NutShell.fir.opt.mlir 30017:24]
    node _hitVec_T_162 = eq(_hitVec_T_159, _hitVec_T_161) @[build/NutShell.fir.opt.mlir 30019:24]
    node _hitVec_T_163 = and(_hitVec_T_144, _hitVec_T_162) @[build/NutShell.fir.opt.mlir 30021:24]
    wire _hitVec_WIRE_40 : UInt<1>[4] @[build/NutShell.fir.opt.mlir 30022:26]
    connect _hitVec_WIRE_40[0], _hitVec_T_40 @[build/NutShell.fir.opt.mlir 30027:7]
    connect _hitVec_WIRE_40[1], _hitVec_T_81 @[build/NutShell.fir.opt.mlir 30028:7]
    connect _hitVec_WIRE_40[2], _hitVec_T_122 @[build/NutShell.fir.opt.mlir 30029:7]
    connect _hitVec_WIRE_40[3], _hitVec_T_163 @[build/NutShell.fir.opt.mlir 30030:7]
    node hitVec_lo = cat(_hitVec_WIRE_40[1], _hitVec_WIRE_40[0]) @[build/NutShell.fir.opt.mlir 30032:20]
    node hitVec_hi_4 = cat(_hitVec_WIRE_40[3], _hitVec_WIRE_40[2]) @[build/NutShell.fir.opt.mlir 30034:22]
    node hitVec = cat(hitVec_hi_4, hitVec_lo) @[build/NutShell.fir.opt.mlir 30036:17]
    node _hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 30038:17]
    node hit = and(io.in.valid, _hit_T) @[build/NutShell.fir.opt.mlir 30040:14]
    node _miss_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 30042:18]
    node _miss_T_1 = eq(_miss_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30044:20]
    node miss = and(io.in.valid, _miss_T_1) @[build/NutShell.fir.opt.mlir 30046:15]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 30048:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 30050:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 30052:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 30054:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 30056:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 30058:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 30060:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 30062:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 30064:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30066:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 30068:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 30070:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 30072:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 30073:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 30076:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 30078:24]
    node waymask = mux(hit, hitVec, victimWaymask) @[build/NutShell.fir.opt.mlir 30080:18]
    wire loadPF : UInt<1> @[build/NutShell.fir.opt.mlir 30081:17]
    connect loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30083:7]
    wire storePF : UInt<1> @[build/NutShell.fir.opt.mlir 30084:18]
    connect storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30086:7]
    node _hitMeta_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 30088:21]
    node _hitMeta_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 30090:23]
    node _hitMeta_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 30092:23]
    node _hitMeta_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 30094:23]
    node _hitMeta_T_4 = mux(_hitMeta_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30096:23]
    node _hitMeta_T_5 = mux(_hitMeta_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30098:23]
    node _hitMeta_T_6 = mux(_hitMeta_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30100:23]
    node _hitMeta_T_7 = mux(_hitMeta_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30102:23]
    node _hitMeta_T_8 = or(_hitMeta_T_4, _hitMeta_T_5) @[build/NutShell.fir.opt.mlir 30104:23]
    node _hitMeta_T_9 = or(_hitMeta_T_8, _hitMeta_T_6) @[build/NutShell.fir.opt.mlir 30106:23]
    node _hitMeta_T_10 = or(_hitMeta_T_9, _hitMeta_T_7) @[build/NutShell.fir.opt.mlir 30108:24]
    wire _hitMeta_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 30109:24]
    connect _hitMeta_WIRE, _hitMeta_T_10 @[build/NutShell.fir.opt.mlir 30110:7]
    wire _hitMeta_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 30111:26]
    wire _hitMeta_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 30114:26]
    connect _hitMeta_WIRE_2, _hitMeta_WIRE @[build/NutShell.fir.opt.mlir 30115:7]
    node _hitMeta_T_11 = bits(_hitMeta_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 30117:24]
    connect _hitMeta_WIRE_1.data, _hitMeta_T_11 @[build/NutShell.fir.opt.mlir 30118:7]
    node _hitMeta_T_12 = bits(_hitMeta_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 30120:24]
    connect _hitMeta_WIRE_1.meta, _hitMeta_T_12 @[build/NutShell.fir.opt.mlir 30121:7]
    wire hitMeta : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8> } @[build/NutShell.fir.opt.mlir 30122:18]
    wire _hitMeta_WIRE_3 : UInt<69> @[build/NutShell.fir.opt.mlir 30127:26]
    connect _hitMeta_WIRE_3, _hitMeta_WIRE_1.meta @[build/NutShell.fir.opt.mlir 30128:7]
    node _hitMeta_T_13 = bits(_hitMeta_WIRE_3, 7, 0) @[build/NutShell.fir.opt.mlir 30130:24]
    connect hitMeta.flag, _hitMeta_T_13 @[build/NutShell.fir.opt.mlir 30131:7]
    node _hitMeta_T_14 = bits(_hitMeta_WIRE_3, 25, 8) @[build/NutShell.fir.opt.mlir 30133:24]
    connect hitMeta.mask, _hitMeta_T_14 @[build/NutShell.fir.opt.mlir 30134:7]
    node _hitMeta_T_15 = bits(_hitMeta_WIRE_3, 41, 26) @[build/NutShell.fir.opt.mlir 30136:24]
    connect hitMeta.asid, _hitMeta_T_15 @[build/NutShell.fir.opt.mlir 30137:7]
    node _hitMeta_T_16 = bits(_hitMeta_WIRE_3, 68, 42) @[build/NutShell.fir.opt.mlir 30139:24]
    connect hitMeta.vpn, _hitMeta_T_16 @[build/NutShell.fir.opt.mlir 30140:7]
    node _hitData_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 30142:21]
    node _hitData_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 30144:23]
    node _hitData_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 30146:23]
    node _hitData_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 30148:23]
    node _hitData_T_4 = mux(_hitData_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30150:23]
    node _hitData_T_5 = mux(_hitData_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30152:23]
    node _hitData_T_6 = mux(_hitData_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30154:23]
    node _hitData_T_7 = mux(_hitData_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30156:23]
    node _hitData_T_8 = or(_hitData_T_4, _hitData_T_5) @[build/NutShell.fir.opt.mlir 30158:23]
    node _hitData_T_9 = or(_hitData_T_8, _hitData_T_6) @[build/NutShell.fir.opt.mlir 30160:23]
    node _hitData_T_10 = or(_hitData_T_9, _hitData_T_7) @[build/NutShell.fir.opt.mlir 30162:24]
    wire _hitData_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 30163:24]
    connect _hitData_WIRE, _hitData_T_10 @[build/NutShell.fir.opt.mlir 30164:7]
    wire _hitData_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 30165:26]
    wire _hitData_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 30168:26]
    connect _hitData_WIRE_2, _hitData_WIRE @[build/NutShell.fir.opt.mlir 30169:7]
    node _hitData_T_11 = bits(_hitData_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 30171:24]
    connect _hitData_WIRE_1.data, _hitData_T_11 @[build/NutShell.fir.opt.mlir 30172:7]
    node _hitData_T_12 = bits(_hitData_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 30174:24]
    connect _hitData_WIRE_1.meta, _hitData_T_12 @[build/NutShell.fir.opt.mlir 30175:7]
    wire hitData : { ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30176:18]
    wire _hitData_WIRE_3 : UInt<52> @[build/NutShell.fir.opt.mlir 30179:26]
    connect _hitData_WIRE_3, _hitData_WIRE_1.data @[build/NutShell.fir.opt.mlir 30180:7]
    node _hitData_T_13 = bits(_hitData_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 30182:24]
    connect hitData.pteaddr, _hitData_T_13 @[build/NutShell.fir.opt.mlir 30183:7]
    node _hitData_T_14 = bits(_hitData_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 30185:24]
    connect hitData.ppn, _hitData_T_14 @[build/NutShell.fir.opt.mlir 30186:7]
    wire hitFlag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 30187:18]
    wire _hitFlag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 30196:24]
    connect _hitFlag_WIRE, hitMeta.flag @[build/NutShell.fir.opt.mlir 30197:7]
    node _hitFlag_T = bits(_hitFlag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30199:21]
    connect hitFlag.v, _hitFlag_T @[build/NutShell.fir.opt.mlir 30200:7]
    node _hitFlag_T_1 = bits(_hitFlag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30202:23]
    connect hitFlag.r, _hitFlag_T_1 @[build/NutShell.fir.opt.mlir 30203:7]
    node _hitFlag_T_2 = bits(_hitFlag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30205:23]
    connect hitFlag.w, _hitFlag_T_2 @[build/NutShell.fir.opt.mlir 30206:7]
    node _hitFlag_T_3 = bits(_hitFlag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30208:23]
    connect hitFlag.x, _hitFlag_T_3 @[build/NutShell.fir.opt.mlir 30209:7]
    node _hitFlag_T_4 = bits(_hitFlag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30211:23]
    connect hitFlag.u, _hitFlag_T_4 @[build/NutShell.fir.opt.mlir 30212:7]
    node _hitFlag_T_5 = bits(_hitFlag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30214:23]
    connect hitFlag.g, _hitFlag_T_5 @[build/NutShell.fir.opt.mlir 30215:7]
    node _hitFlag_T_6 = bits(_hitFlag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30217:23]
    connect hitFlag.a, _hitFlag_T_6 @[build/NutShell.fir.opt.mlir 30218:7]
    node _hitFlag_T_7 = bits(_hitFlag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30220:23]
    connect hitFlag.d, _hitFlag_T_7 @[build/NutShell.fir.opt.mlir 30221:7]
    wire hitinstrPF : UInt<1> @[build/NutShell.fir.opt.mlir 30222:21]
    connect hitinstrPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30224:7]
    node _hitWB_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30226:19]
    node _hitWB_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30228:21]
    node _hitWB_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30230:21]
    node _hitWB_T_3 = and(_hitWB_T_1, _hitWB_T_2) @[build/NutShell.fir.opt.mlir 30232:21]
    node _hitWB_T_4 = or(_hitWB_T, _hitWB_T_3) @[build/NutShell.fir.opt.mlir 30234:21]
    node _hitWB_T_5 = and(hit, _hitWB_T_4) @[build/NutShell.fir.opt.mlir 30236:21]
    node _hitWB_T_6 = eq(hitinstrPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30238:21]
    node _hitWB_T_7 = and(_hitWB_T_5, _hitWB_T_6) @[build/NutShell.fir.opt.mlir 30240:21]
    node _hitWB_T_8 = or(loadPF, storePF) @[build/NutShell.fir.opt.mlir 30242:21]
    node _hitWB_T_9 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 30244:21]
    node _hitWB_T_10 = or(_hitWB_T_8, _hitWB_T_9) @[build/NutShell.fir.opt.mlir 30246:22]
    node _hitWB_T_11 = eq(_hitWB_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30248:22]
    node hitWB = and(_hitWB_T_7, _hitWB_T_11) @[build/NutShell.fir.opt.mlir 30250:16]
    node _hitRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30252:27]
    node hitRefillFlag_hi = cat(_hitRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30254:27]
    node _hitRefillFlag_T_1 = cat(hitRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30257:29]
    node hitRefillFlag_lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 30259:30]
    node hitRefillFlag_lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 30261:30]
    node hitRefillFlag_lo = cat(hitRefillFlag_lo_hi, hitRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 30263:27]
    node hitRefillFlag_hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 30265:30]
    node hitRefillFlag_hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 30267:30]
    node hitRefillFlag_hi_1 = cat(hitRefillFlag_hi_hi, hitRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 30269:29]
    node _hitRefillFlag_T_2 = cat(hitRefillFlag_hi_1, hitRefillFlag_lo) @[build/NutShell.fir.opt.mlir 30271:29]
    node hitRefillFlag = or(_hitRefillFlag_T_1, _hitRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 30273:24]
    node hitWBStore_lo = cat(UInt<2>(0), hitRefillFlag) @[build/NutShell.fir.opt.mlir 30276:24]
    node hitWBStore_hi = cat(UInt<10>(0), hitData.ppn) @[build/NutShell.fir.opt.mlir 30279:24]
    node _hitWBStore_T = cat(hitWBStore_hi, hitWBStore_lo) @[build/NutShell.fir.opt.mlir 30281:24]
    reg hitWBStore : UInt<40>, clock @[build/NutShell.fir.opt.mlir 30282:21]
    when hitWB : @[build/NutShell.fir.opt.mlir 30283:7]
      connect hitWBStore, _hitWBStore_T @[build/NutShell.fir.opt.mlir 30284:9]
    node _hitCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30287:22]
    node _hitCheck_T_1 = eq(hitFlag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30289:24]
    node _hitCheck_T_2 = and(_hitCheck_T, _hitCheck_T_1) @[build/NutShell.fir.opt.mlir 30291:24]
    node _hitCheck_T_3 = eq(_hitCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30293:24]
    node _hitCheck_T_4 = and(hit, _hitCheck_T_3) @[build/NutShell.fir.opt.mlir 30295:24]
    node _hitCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30297:24]
    node _hitCheck_T_6 = and(_hitCheck_T_5, hitFlag.u) @[build/NutShell.fir.opt.mlir 30299:24]
    node _hitCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30301:24]
    node _hitCheck_T_8 = or(_hitCheck_T_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30303:24]
    node _hitCheck_T_9 = and(_hitCheck_T_6, _hitCheck_T_8) @[build/NutShell.fir.opt.mlir 30305:24]
    node _hitCheck_T_10 = eq(_hitCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30307:25]
    node hitCheck = and(_hitCheck_T_4, _hitCheck_T_10) @[build/NutShell.fir.opt.mlir 30309:19]
    node _hitADCheck_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30311:24]
    node _hitADCheck_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30313:26]
    node _hitADCheck_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30315:26]
    node _hitADCheck_T_3 = and(_hitADCheck_T_1, _hitADCheck_T_2) @[build/NutShell.fir.opt.mlir 30317:26]
    node hitADCheck = or(_hitADCheck_T, _hitADCheck_T_3) @[build/NutShell.fir.opt.mlir 30319:21]
    node _hitExec_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30321:21]
    node _hitExec_T_1 = and(hitCheck, _hitExec_T) @[build/NutShell.fir.opt.mlir 30323:23]
    node hitExec = and(_hitExec_T_1, hitFlag.x) @[build/NutShell.fir.opt.mlir 30325:18]
    node _hitLoad_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30327:21]
    node _hitLoad_T_1 = and(hitCheck, _hitLoad_T) @[build/NutShell.fir.opt.mlir 30329:23]
    node _hitLoad_T_2 = and(io.pf.status_mxr, hitFlag.x) @[build/NutShell.fir.opt.mlir 30331:23]
    node _hitLoad_T_3 = or(hitFlag.r, _hitLoad_T_2) @[build/NutShell.fir.opt.mlir 30333:23]
    node hitLoad = and(_hitLoad_T_1, _hitLoad_T_3) @[build/NutShell.fir.opt.mlir 30335:18]
    node _hitStore_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30337:22]
    node _hitStore_T_1 = and(hitCheck, _hitStore_T) @[build/NutShell.fir.opt.mlir 30339:24]
    node hitStore = and(_hitStore_T_1, hitFlag.w) @[build/NutShell.fir.opt.mlir 30341:19]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 30342:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30344:7]
    regreset io_pf_loadPF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30345:27]
    connect io_pf_loadPF_REG, loadPF @[build/NutShell.fir.opt.mlir 30346:7]
    connect io.pf.loadPF, io_pf_loadPF_REG @[build/NutShell.fir.opt.mlir 30347:7]
    regreset io_pf_storePF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30348:28]
    connect io_pf_storePF_REG, storePF @[build/NutShell.fir.opt.mlir 30349:7]
    connect io.pf.storePF, io_pf_storePF_REG @[build/NutShell.fir.opt.mlir 30350:7]
    node _hitinstrPF_T = eq(hitExec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30352:24]
    node _hitinstrPF_T_1 = and(_hitinstrPF_T, hit) @[build/NutShell.fir.opt.mlir 30354:26]
    connect hitinstrPF, _hitinstrPF_T_1 @[build/NutShell.fir.opt.mlir 30355:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30357:16]
    regreset level : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 30359:16]
    reg memRespStore : UInt<64>, clock @[build/NutShell.fir.opt.mlir 30360:23]
    wire missMask : UInt<18> @[build/NutShell.fir.opt.mlir 30361:19]
    connect missMask, UInt<18>(262143) @[build/NutShell.fir.opt.mlir 30364:7]
    reg missMaskStore : UInt<18>, clock @[build/NutShell.fir.opt.mlir 30365:24]
    wire missMetaRefill : UInt<1> @[build/NutShell.fir.opt.mlir 30366:25]
    connect missMetaRefill, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30368:7]
    wire missRefillFlag : UInt<8> @[build/NutShell.fir.opt.mlir 30369:25]
    connect missRefillFlag, UInt<8>(0) @[build/NutShell.fir.opt.mlir 30372:7]
    wire memRdata : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 30373:19]
    wire _memRdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 30386:25]
    connect _memRdata_WIRE, io.mem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 30387:7]
    node _memRdata_T = bits(_memRdata_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30389:22]
    connect memRdata.flag.v, _memRdata_T @[build/NutShell.fir.opt.mlir 30390:7]
    node _memRdata_T_1 = bits(_memRdata_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30392:24]
    connect memRdata.flag.r, _memRdata_T_1 @[build/NutShell.fir.opt.mlir 30393:7]
    node _memRdata_T_2 = bits(_memRdata_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30395:24]
    connect memRdata.flag.w, _memRdata_T_2 @[build/NutShell.fir.opt.mlir 30396:7]
    node _memRdata_T_3 = bits(_memRdata_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30398:24]
    connect memRdata.flag.x, _memRdata_T_3 @[build/NutShell.fir.opt.mlir 30399:7]
    node _memRdata_T_4 = bits(_memRdata_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30401:24]
    connect memRdata.flag.u, _memRdata_T_4 @[build/NutShell.fir.opt.mlir 30402:7]
    node _memRdata_T_5 = bits(_memRdata_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30404:24]
    connect memRdata.flag.g, _memRdata_T_5 @[build/NutShell.fir.opt.mlir 30405:7]
    node _memRdata_T_6 = bits(_memRdata_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30407:24]
    connect memRdata.flag.a, _memRdata_T_6 @[build/NutShell.fir.opt.mlir 30408:7]
    node _memRdata_T_7 = bits(_memRdata_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30410:24]
    connect memRdata.flag.d, _memRdata_T_7 @[build/NutShell.fir.opt.mlir 30411:7]
    node _memRdata_T_8 = bits(_memRdata_WIRE, 9, 8) @[build/NutShell.fir.opt.mlir 30413:24]
    connect memRdata.rsw, _memRdata_T_8 @[build/NutShell.fir.opt.mlir 30414:7]
    node _memRdata_T_9 = bits(_memRdata_WIRE, 29, 10) @[build/NutShell.fir.opt.mlir 30416:24]
    connect memRdata.ppn, _memRdata_T_9 @[build/NutShell.fir.opt.mlir 30417:7]
    node _memRdata_T_10 = bits(_memRdata_WIRE, 63, 30) @[build/NutShell.fir.opt.mlir 30419:25]
    connect memRdata.reserved, _memRdata_T_10 @[build/NutShell.fir.opt.mlir 30420:7]
    reg raddr : UInt<32>, clock @[build/NutShell.fir.opt.mlir 30421:16]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 30423:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30424:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 30425:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30427:9]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30429:20]
    node isFlush = or(needFlush, io.flush) @[build/NutShell.fir.opt.mlir 30431:18]
    node _T = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30433:13]
    node _T_1 = and(io.flush, _T) @[build/NutShell.fir.opt.mlir 30435:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 30436:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30438:9]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 30441:15]
    node _T_3 = and(_T_2, needFlush) @[build/NutShell.fir.opt.mlir 30443:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 30444:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30446:9]
    regreset missIPF : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30448:18]
    node _T_4 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 30450:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 30460:7]
      node _T_5 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30462:17]
      node _T_6 = and(_T_5, hitWB) @[build/NutShell.fir.opt.mlir 30464:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 30465:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 30467:11]
        connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30469:11]
        connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30471:11]
      else :
        node _T_7 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30474:19]
        node _T_8 = and(miss, _T_7) @[build/NutShell.fir.opt.mlir 30476:19]
        when _T_8 : @[build/NutShell.fir.opt.mlir 30477:11]
          connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 30479:13]
          node _raddr_T = cat(satp.ppn, vpn.vpn2) @[build/NutShell.fir.opt.mlir 30481:25]
          node _raddr_T_1 = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30483:27]
          connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 30484:13]
          connect level, UInt<2>(3) @[build/NutShell.fir.opt.mlir 30486:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30488:13]
          connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30490:13]
    else :
      node _T_9 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 30495:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 30496:9]
        when isFlush : @[build/NutShell.fir.opt.mlir 30497:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30499:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30501:13]
        else :
          node _T_10 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 30504:22]
          when _T_10 : @[build/NutShell.fir.opt.mlir 30505:13]
            connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 30507:15]
      else :
        node _T_11 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 30512:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 30513:11]
          wire missflag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 30514:25]
          node missflag_lo_lo = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 30524:31]
          node missflag_lo_hi = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 30526:31]
          node missflag_lo = cat(missflag_lo_hi, missflag_lo_lo) @[build/NutShell.fir.opt.mlir 30528:28]
          node missflag_hi_lo = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 30530:31]
          node missflag_hi_hi = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 30532:31]
          node missflag_hi = cat(missflag_hi_hi, missflag_hi_lo) @[build/NutShell.fir.opt.mlir 30534:28]
          node _missflag_T = cat(missflag_hi, missflag_lo) @[build/NutShell.fir.opt.mlir 30536:28]
          wire _missflag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 30537:31]
          connect _missflag_WIRE, _missflag_T @[build/NutShell.fir.opt.mlir 30538:13]
          node _missflag_T_1 = bits(_missflag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30540:30]
          connect missflag.v, _missflag_T_1 @[build/NutShell.fir.opt.mlir 30541:13]
          node _missflag_T_2 = bits(_missflag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30543:30]
          connect missflag.r, _missflag_T_2 @[build/NutShell.fir.opt.mlir 30544:13]
          node _missflag_T_3 = bits(_missflag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30546:30]
          connect missflag.w, _missflag_T_3 @[build/NutShell.fir.opt.mlir 30547:13]
          node _missflag_T_4 = bits(_missflag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30549:30]
          connect missflag.x, _missflag_T_4 @[build/NutShell.fir.opt.mlir 30550:13]
          node _missflag_T_5 = bits(_missflag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30552:30]
          connect missflag.u, _missflag_T_5 @[build/NutShell.fir.opt.mlir 30553:13]
          node _missflag_T_6 = bits(_missflag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30555:30]
          connect missflag.g, _missflag_T_6 @[build/NutShell.fir.opt.mlir 30556:13]
          node _missflag_T_7 = bits(_missflag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30558:30]
          connect missflag.a, _missflag_T_7 @[build/NutShell.fir.opt.mlir 30559:13]
          node _missflag_T_8 = bits(_missflag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30561:30]
          connect missflag.d, _missflag_T_8 @[build/NutShell.fir.opt.mlir 30562:13]
          node _T_12 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 30564:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 30565:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 30566:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30568:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30570:17]
            else :
              node _T_13 = or(missflag.r, missflag.x) @[build/NutShell.fir.opt.mlir 30573:26]
              node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30575:26]
              node _T_15 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 30577:26]
              node _T_16 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 30579:26]
              node _T_17 = or(_T_15, _T_16) @[build/NutShell.fir.opt.mlir 30581:26]
              node _T_18 = and(_T_14, _T_17) @[build/NutShell.fir.opt.mlir 30583:26]
              when _T_18 : @[build/NutShell.fir.opt.mlir 30584:17]
                node _T_19 = eq(missflag.v, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30586:28]
                node _T_20 = eq(missflag.r, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30588:28]
                node _T_21 = and(_T_20, missflag.w) @[build/NutShell.fir.opt.mlir 30590:28]
                node _T_22 = or(_T_19, _T_21) @[build/NutShell.fir.opt.mlir 30592:28]
                when _T_22 : @[build/NutShell.fir.opt.mlir 30593:19]
                  connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 30595:21]
                  connect missIPF, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30597:21]
                  inst LogPerfHelper of LogPerfHelper_21 @[build/NutShell.fir.opt.mlir 30598:113]
                  wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 30599:34]
                  connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 30604:21]
                  connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 30605:21]
                  connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 30606:21]
                  connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 30607:21]
                  node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30609:30]
                  when _T_23 : @[build/NutShell.fir.opt.mlir 30610:21]
                    node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30612:32]
                    node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30614:32]
                    when _T_25 : @[build/NutShell.fir.opt.mlir 30615:23]
                      skip @[build/NutShell.fir.opt.mlir 30616:25]
                    node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30619:32]
                    node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30621:32]
                    when _T_27 : @[build/NutShell.fir.opt.mlir 30622:23]
                      skip @[build/NutShell.fir.opt.mlir 30623:25]
                  node _T_28 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30627:30]
                  when _T_28 : @[build/NutShell.fir.opt.mlir 30628:21]
                    node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30630:32]
                    node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30632:32]
                    when _T_30 : @[build/NutShell.fir.opt.mlir 30633:23]
                      skip @[build/NutShell.fir.opt.mlir 30634:25]
                  node _T_31 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30638:30]
                  when _T_31 : @[build/NutShell.fir.opt.mlir 30639:21]
                    node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30641:32]
                    node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30643:32]
                    when _T_33 : @[build/NutShell.fir.opt.mlir 30644:23]
                      skip @[build/NutShell.fir.opt.mlir 30645:25]
                  node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30649:30]
                  when _T_34 : @[build/NutShell.fir.opt.mlir 30650:21]
                    node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30652:32]
                    node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30654:32]
                    when _T_36 : @[build/NutShell.fir.opt.mlir 30655:23]
                      skip @[build/NutShell.fir.opt.mlir 30656:25]
                else :
                  connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 30661:21]
                  node _raddr_T_2 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 30663:35]
                  node _raddr_T_3 = mux(_raddr_T_2, vpn.vpn1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30665:35]
                  node _raddr_T_4 = cat(memRdata.ppn, _raddr_T_3) @[build/NutShell.fir.opt.mlir 30667:35]
                  node _raddr_T_5 = cat(_raddr_T_4, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30669:35]
                  connect raddr, _raddr_T_5 @[build/NutShell.fir.opt.mlir 30670:21]
              else :
                node _T_37 = neq(level, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30674:28]
                when _T_37 : @[build/NutShell.fir.opt.mlir 30675:19]
                  node _permCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30677:37]
                  node _permCheck_T_1 = eq(missflag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30679:39]
                  node _permCheck_T_2 = and(_permCheck_T, _permCheck_T_1) @[build/NutShell.fir.opt.mlir 30681:39]
                  node _permCheck_T_3 = eq(_permCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30683:39]
                  node _permCheck_T_4 = and(missflag.v, _permCheck_T_3) @[build/NutShell.fir.opt.mlir 30685:39]
                  node _permCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30687:39]
                  node _permCheck_T_6 = and(_permCheck_T_5, missflag.u) @[build/NutShell.fir.opt.mlir 30689:39]
                  node _permCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30691:39]
                  node _permCheck_T_8 = or(_permCheck_T_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30693:39]
                  node _permCheck_T_9 = and(_permCheck_T_6, _permCheck_T_8) @[build/NutShell.fir.opt.mlir 30695:39]
                  node _permCheck_T_10 = eq(_permCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30697:40]
                  node permCheck = and(_permCheck_T_4, _permCheck_T_10) @[build/NutShell.fir.opt.mlir 30699:34]
                  node _permAD_T = eq(missflag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30701:34]
                  node _permAD_T_1 = eq(missflag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30703:36]
                  node _permAD_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30705:36]
                  node _permAD_T_3 = and(_permAD_T_1, _permAD_T_2) @[build/NutShell.fir.opt.mlir 30707:36]
                  node permAD = or(_permAD_T, _permAD_T_3) @[build/NutShell.fir.opt.mlir 30709:31]
                  node _permExec_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30711:36]
                  node _permExec_T_1 = and(permCheck, _permExec_T) @[build/NutShell.fir.opt.mlir 30713:38]
                  node permExec = and(_permExec_T_1, missflag.x) @[build/NutShell.fir.opt.mlir 30715:33]
                  node _permLoad_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30717:36]
                  node _permLoad_T_1 = and(permCheck, _permLoad_T) @[build/NutShell.fir.opt.mlir 30719:38]
                  node _permLoad_T_2 = and(io.pf.status_mxr, missflag.x) @[build/NutShell.fir.opt.mlir 30721:38]
                  node _permLoad_T_3 = or(missflag.r, _permLoad_T_2) @[build/NutShell.fir.opt.mlir 30723:38]
                  node permLoad = and(_permLoad_T_1, _permLoad_T_3) @[build/NutShell.fir.opt.mlir 30725:33]
                  node _permStore_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30727:37]
                  node _permStore_T_1 = and(permCheck, _permStore_T) @[build/NutShell.fir.opt.mlir 30729:39]
                  node permStore = and(_permStore_T_1, missflag.w) @[build/NutShell.fir.opt.mlir 30731:34]
                  node _updateData_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30733:38]
                  node updateData_lo = cat(UInt<1>(1), UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30735:38]
                  node updateData_hi = cat(UInt<56>(0), _updateData_T) @[build/NutShell.fir.opt.mlir 30737:38]
                  node updateData = cat(updateData_hi, updateData_lo) @[build/NutShell.fir.opt.mlir 30739:35]
                  node _missRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30741:42]
                  node missRefillFlag_hi = cat(_missRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30743:42]
                  node _missRefillFlag_T_1 = cat(missRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30745:44]
                  node missRefillFlag_lo_lo = cat(missflag.r, missflag.v) @[build/NutShell.fir.opt.mlir 30747:45]
                  node missRefillFlag_lo_hi = cat(missflag.x, missflag.w) @[build/NutShell.fir.opt.mlir 30749:45]
                  node missRefillFlag_lo = cat(missRefillFlag_lo_hi, missRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 30751:42]
                  node missRefillFlag_hi_lo = cat(missflag.g, missflag.u) @[build/NutShell.fir.opt.mlir 30753:45]
                  node missRefillFlag_hi_hi = cat(missflag.d, missflag.a) @[build/NutShell.fir.opt.mlir 30755:45]
                  node missRefillFlag_hi_1 = cat(missRefillFlag_hi_hi, missRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 30757:44]
                  node _missRefillFlag_T_2 = cat(missRefillFlag_hi_1, missRefillFlag_lo) @[build/NutShell.fir.opt.mlir 30759:44]
                  node _missRefillFlag_T_3 = or(_missRefillFlag_T_1, _missRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 30761:44]
                  connect missRefillFlag, _missRefillFlag_T_3 @[build/NutShell.fir.opt.mlir 30762:21]
                  node _memRespStore_T = or(io.mem.resp.bits.rdata, updateData) @[build/NutShell.fir.opt.mlir 30764:40]
                  connect memRespStore, _memRespStore_T @[build/NutShell.fir.opt.mlir 30765:21]
                  node _T_38 = eq(permExec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30767:30]
                  when _T_38 : @[build/NutShell.fir.opt.mlir 30768:21]
                    connect missIPF, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30770:23]
                    connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 30772:23]
                  else :
                    node _state_T = mux(UInt<1>(0), UInt<3>(3), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 30775:35]
                    connect state, _state_T @[build/NutShell.fir.opt.mlir 30777:23]
                    connect missMetaRefill, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30779:23]
                  node _missMask_T = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 30782:36]
                  node _missMask_T_1 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 30784:38]
                  node _missMask_T_2 = mux(_missMask_T_1, UInt<18>(261632), UInt<18>(262143)) @[build/NutShell.fir.opt.mlir 30786:38]
                  node _missMask_T_3 = mux(_missMask_T, UInt<18>(0), _missMask_T_2) @[build/NutShell.fir.opt.mlir 30788:38]
                  connect missMask, _missMask_T_3 @[build/NutShell.fir.opt.mlir 30789:21]
                  connect missMaskStore, missMask @[build/NutShell.fir.opt.mlir 30790:21]
            node _level_T = sub(level, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30795:27]
            node _level_T_1 = tail(_level_T, 1) @[build/NutShell.fir.opt.mlir 30797:29]
            connect level, _level_T_1 @[build/NutShell.fir.opt.mlir 30798:15]
        else :
          node _T_39 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 30802:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 30803:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 30804:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30806:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30808:17]
            else :
              node _T_40 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 30811:26]
              when _T_40 : @[build/NutShell.fir.opt.mlir 30812:17]
                connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 30814:19]
          else :
            node _T_41 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 30819:24]
            when _T_41 : @[build/NutShell.fir.opt.mlir 30820:15]
              node _T_42 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 30822:26]
              node _T_43 = or(_T_42, io.flush) @[build/NutShell.fir.opt.mlir 30824:26]
              node _T_44 = or(_T_43, alreadyOutFire) @[build/NutShell.fir.opt.mlir 30826:26]
              when _T_44 : @[build/NutShell.fir.opt.mlir 30827:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30829:19]
                connect missIPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30831:19]
                connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30833:19]
            else :
              node _T_45 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 30837:26]
              when _T_45 : @[build/NutShell.fir.opt.mlir 30838:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30840:19]
    node _cmd_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 30848:17]
    node cmd = mux(_cmd_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30850:14]
    node _T_46 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 30852:16]
    node _T_47 = mux(hitWB, hitWBStore, memRespStore) @[build/NutShell.fir.opt.mlir 30854:16]
    connect io.mem.req.bits.addr, _T_46 @[build/NutShell.fir.opt.mlir 30855:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 30857:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 30860:7]
    connect io.mem.req.bits.wdata, _T_47 @[build/NutShell.fir.opt.mlir 30861:7]
    connect io.mem.req.bits.wmask, UInt<8>(255) @[build/NutShell.fir.opt.mlir 30864:7]
    node _io_mem_req_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 30866:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 30868:32]
    node _io_mem_req_valid_T_2 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_1) @[build/NutShell.fir.opt.mlir 30870:32]
    node _io_mem_req_valid_T_3 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30872:32]
    node _io_mem_req_valid_T_4 = and(_io_mem_req_valid_T_2, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 30874:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 30875:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30877:7]
    node _T_48 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30879:16]
    node _T_49 = and(missMetaRefill, _T_48) @[build/NutShell.fir.opt.mlir 30881:16]
    node _T_50 = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30883:16]
    node _T_51 = and(hitWB, _T_50) @[build/NutShell.fir.opt.mlir 30885:16]
    node _T_52 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30887:16]
    node _T_53 = and(_T_51, _T_52) @[build/NutShell.fir.opt.mlir 30889:16]
    node _T_54 = or(_T_49, _T_53) @[build/NutShell.fir.opt.mlir 30891:16]
    regreset REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30892:14]
    connect REG, _T_54 @[build/NutShell.fir.opt.mlir 30893:7]
    wire _WIRE : { tag : UInt<26>, index : UInt<1>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 30894:16]
    wire _WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 30898:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 30899:7]
    node _T_55 = bits(_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 30901:16]
    connect _WIRE.off, _T_55 @[build/NutShell.fir.opt.mlir 30902:7]
    node _T_56 = bits(_WIRE_1, 12, 12) @[build/NutShell.fir.opt.mlir 30904:16]
    connect _WIRE.index, _T_56 @[build/NutShell.fir.opt.mlir 30905:7]
    node _T_57 = bits(_WIRE_1, 38, 13) @[build/NutShell.fir.opt.mlir 30907:16]
    connect _WIRE.tag, _T_57 @[build/NutShell.fir.opt.mlir 30908:7]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 30909:16]
    connect REG_1, _WIRE.index @[build/NutShell.fir.opt.mlir 30910:7]
    reg REG_2 : UInt<4>, clock @[build/NutShell.fir.opt.mlir 30911:16]
    connect REG_2, waymask @[build/NutShell.fir.opt.mlir 30912:7]
    node hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 30914:13]
    node _T_58 = cat(hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30916:16]
    reg REG_3 : UInt<27>, clock @[build/NutShell.fir.opt.mlir 30917:16]
    connect REG_3, _T_58 @[build/NutShell.fir.opt.mlir 30918:7]
    node _T_59 = mux(hitWB, hitMeta.asid, satp.asid) @[build/NutShell.fir.opt.mlir 30920:16]
    reg REG_4 : UInt<16>, clock @[build/NutShell.fir.opt.mlir 30921:16]
    connect REG_4, _T_59 @[build/NutShell.fir.opt.mlir 30922:7]
    node _T_60 = mux(hitWB, hitMeta.mask, missMask) @[build/NutShell.fir.opt.mlir 30924:16]
    reg REG_5 : UInt<18>, clock @[build/NutShell.fir.opt.mlir 30925:16]
    connect REG_5, _T_60 @[build/NutShell.fir.opt.mlir 30926:7]
    node _T_61 = mux(hitWB, hitRefillFlag, missRefillFlag) @[build/NutShell.fir.opt.mlir 30928:16]
    reg REG_6 : UInt<8>, clock @[build/NutShell.fir.opt.mlir 30929:16]
    connect REG_6, _T_61 @[build/NutShell.fir.opt.mlir 30930:7]
    node _T_62 = mux(hitWB, hitData.ppn, memRdata.ppn) @[build/NutShell.fir.opt.mlir 30932:16]
    reg REG_7 : UInt<20>, clock @[build/NutShell.fir.opt.mlir 30933:16]
    connect REG_7, _T_62 @[build/NutShell.fir.opt.mlir 30934:7]
    node _T_63 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 30936:16]
    reg REG_8 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 30937:16]
    connect REG_8, _T_63 @[build/NutShell.fir.opt.mlir 30938:7]
    connect io.mdWrite.wen, REG @[build/NutShell.fir.opt.mlir 30939:7]
    connect io.mdWrite.windex, REG_1 @[build/NutShell.fir.opt.mlir 30940:7]
    connect io.mdWrite.waymask, REG_2 @[build/NutShell.fir.opt.mlir 30941:7]
    node io_mdWrite_wdata_lo_hi = cat(REG_6, REG_7) @[build/NutShell.fir.opt.mlir 30943:33]
    node io_mdWrite_wdata_lo = cat(io_mdWrite_wdata_lo_hi, REG_8) @[build/NutShell.fir.opt.mlir 30945:30]
    node io_mdWrite_wdata_hi_hi = cat(REG_3, REG_4) @[build/NutShell.fir.opt.mlir 30947:33]
    node io_mdWrite_wdata_hi = cat(io_mdWrite_wdata_hi_hi, REG_5) @[build/NutShell.fir.opt.mlir 30949:30]
    node _io_mdWrite_wdata_T = cat(io_mdWrite_wdata_hi, io_mdWrite_wdata_lo) @[build/NutShell.fir.opt.mlir 30951:30]
    connect io.mdWrite.wdata, _io_mdWrite_wdata_T @[build/NutShell.fir.opt.mlir 30952:7]
    connect io.out.bits.addr, tail(io.in.bits.addr, 7) @[build/NutShell.fir.opt.mlir 30956:7]
    connect io.out.bits.size, io.in.bits.size @[build/NutShell.fir.opt.mlir 30959:7]
    connect io.out.bits.cmd, io.in.bits.cmd @[build/NutShell.fir.opt.mlir 30962:7]
    connect io.out.bits.wmask, io.in.bits.wmask @[build/NutShell.fir.opt.mlir 30965:7]
    connect io.out.bits.wdata, io.in.bits.wdata @[build/NutShell.fir.opt.mlir 30968:7]
    connect io.out.bits.user, io.in.bits.user @[build/NutShell.fir.opt.mlir 30971:7]
    node _io_out_bits_addr_T = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 30973:30]
    node _io_out_bits_addr_T_1 = cat(hitData.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 30976:32]
    node _io_out_bits_addr_T_2 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 30978:32]
    node io_out_bits_addr_hi = cat(_io_out_bits_addr_T_2, hitMeta.mask) @[build/NutShell.fir.opt.mlir 30980:30]
    node _io_out_bits_addr_T_3 = cat(io_out_bits_addr_hi, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 30982:32]
    node _io_out_bits_addr_T_4 = and(_io_out_bits_addr_T_1, _io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 30984:32]
    node _io_out_bits_addr_T_5 = not(_io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 30986:32]
    node _io_out_bits_addr_T_6 = and(_io_out_bits_addr_T, _io_out_bits_addr_T_5) @[build/NutShell.fir.opt.mlir 30988:32]
    node _io_out_bits_addr_T_7 = or(_io_out_bits_addr_T_4, _io_out_bits_addr_T_6) @[build/NutShell.fir.opt.mlir 30990:32]
    wire _io_out_bits_addr_WIRE : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 30991:33]
    wire _io_out_bits_addr_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 31004:35]
    connect _io_out_bits_addr_WIRE_1, memRespStore @[build/NutShell.fir.opt.mlir 31005:7]
    node _io_out_bits_addr_T_8 = bits(_io_out_bits_addr_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 31007:32]
    connect _io_out_bits_addr_WIRE.flag.v, _io_out_bits_addr_T_8 @[build/NutShell.fir.opt.mlir 31008:7]
    node _io_out_bits_addr_T_9 = bits(_io_out_bits_addr_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 31010:32]
    connect _io_out_bits_addr_WIRE.flag.r, _io_out_bits_addr_T_9 @[build/NutShell.fir.opt.mlir 31011:7]
    node _io_out_bits_addr_T_10 = bits(_io_out_bits_addr_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 31013:33]
    connect _io_out_bits_addr_WIRE.flag.w, _io_out_bits_addr_T_10 @[build/NutShell.fir.opt.mlir 31014:7]
    node _io_out_bits_addr_T_11 = bits(_io_out_bits_addr_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 31016:33]
    connect _io_out_bits_addr_WIRE.flag.x, _io_out_bits_addr_T_11 @[build/NutShell.fir.opt.mlir 31017:7]
    node _io_out_bits_addr_T_12 = bits(_io_out_bits_addr_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 31019:33]
    connect _io_out_bits_addr_WIRE.flag.u, _io_out_bits_addr_T_12 @[build/NutShell.fir.opt.mlir 31020:7]
    node _io_out_bits_addr_T_13 = bits(_io_out_bits_addr_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 31022:33]
    connect _io_out_bits_addr_WIRE.flag.g, _io_out_bits_addr_T_13 @[build/NutShell.fir.opt.mlir 31023:7]
    node _io_out_bits_addr_T_14 = bits(_io_out_bits_addr_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 31025:33]
    connect _io_out_bits_addr_WIRE.flag.a, _io_out_bits_addr_T_14 @[build/NutShell.fir.opt.mlir 31026:7]
    node _io_out_bits_addr_T_15 = bits(_io_out_bits_addr_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 31028:33]
    connect _io_out_bits_addr_WIRE.flag.d, _io_out_bits_addr_T_15 @[build/NutShell.fir.opt.mlir 31029:7]
    node _io_out_bits_addr_T_16 = bits(_io_out_bits_addr_WIRE_1, 9, 8) @[build/NutShell.fir.opt.mlir 31031:33]
    connect _io_out_bits_addr_WIRE.rsw, _io_out_bits_addr_T_16 @[build/NutShell.fir.opt.mlir 31032:7]
    node _io_out_bits_addr_T_17 = bits(_io_out_bits_addr_WIRE_1, 29, 10) @[build/NutShell.fir.opt.mlir 31034:33]
    connect _io_out_bits_addr_WIRE.ppn, _io_out_bits_addr_T_17 @[build/NutShell.fir.opt.mlir 31035:7]
    node _io_out_bits_addr_T_18 = bits(_io_out_bits_addr_WIRE_1, 63, 30) @[build/NutShell.fir.opt.mlir 31037:33]
    connect _io_out_bits_addr_WIRE.reserved, _io_out_bits_addr_T_18 @[build/NutShell.fir.opt.mlir 31038:7]
    node _io_out_bits_addr_T_19 = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 31040:33]
    node _io_out_bits_addr_T_20 = cat(_io_out_bits_addr_WIRE.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31042:33]
    node _io_out_bits_addr_T_21 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 31044:33]
    node io_out_bits_addr_hi_1 = cat(_io_out_bits_addr_T_21, missMaskStore) @[build/NutShell.fir.opt.mlir 31046:32]
    node _io_out_bits_addr_T_22 = cat(io_out_bits_addr_hi_1, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31048:33]
    node _io_out_bits_addr_T_23 = and(_io_out_bits_addr_T_20, _io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 31050:33]
    node _io_out_bits_addr_T_24 = not(_io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 31052:33]
    node _io_out_bits_addr_T_25 = and(_io_out_bits_addr_T_19, _io_out_bits_addr_T_24) @[build/NutShell.fir.opt.mlir 31054:33]
    node _io_out_bits_addr_T_26 = or(_io_out_bits_addr_T_23, _io_out_bits_addr_T_25) @[build/NutShell.fir.opt.mlir 31056:33]
    node _io_out_bits_addr_T_27 = mux(hit, _io_out_bits_addr_T_7, _io_out_bits_addr_T_26) @[build/NutShell.fir.opt.mlir 31058:33]
    connect io.out.bits.addr, _io_out_bits_addr_T_27 @[build/NutShell.fir.opt.mlir 31059:7]
    node _io_out_valid_T = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31061:26]
    node _io_out_valid_T_1 = and(hit, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 31063:28]
    node _io_out_valid_T_2 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31065:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, loadPF) @[build/NutShell.fir.opt.mlir 31067:28]
    node _io_out_valid_T_4 = or(_io_out_valid_T_3, storePF) @[build/NutShell.fir.opt.mlir 31069:28]
    node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31071:28]
    node _io_out_valid_T_6 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 31073:28]
    node _io_out_valid_T_7 = mux(_io_out_valid_T_1, _io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 31075:28]
    node _io_out_valid_T_8 = and(io.in.valid, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 31077:28]
    connect io.out.valid, _io_out_valid_T_8 @[build/NutShell.fir.opt.mlir 31078:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 31080:25]
    node _io_in_ready_T_1 = and(io.out.ready, _io_in_ready_T) @[build/NutShell.fir.opt.mlir 31082:27]
    node _io_in_ready_T_2 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31084:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 31086:27]
    node _io_in_ready_T_4 = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31088:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 31090:27]
    node _io_in_ready_T_6 = and(_io_in_ready_T_5, io.mdReady) @[build/NutShell.fir.opt.mlir 31092:27]
    node _io_in_ready_T_7 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31094:27]
    node _io_in_ready_T_8 = eq(_io_in_ready_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31096:27]
    node _io_in_ready_T_9 = eq(loadPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31098:27]
    node _io_in_ready_T_10 = and(_io_in_ready_T_8, _io_in_ready_T_9) @[build/NutShell.fir.opt.mlir 31100:28]
    node _io_in_ready_T_11 = eq(storePF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31102:28]
    node _io_in_ready_T_12 = and(_io_in_ready_T_10, _io_in_ready_T_11) @[build/NutShell.fir.opt.mlir 31104:28]
    node _io_in_ready_T_13 = and(_io_in_ready_T_6, _io_in_ready_T_12) @[build/NutShell.fir.opt.mlir 31106:28]
    connect io.in.ready, _io_in_ready_T_13 @[build/NutShell.fir.opt.mlir 31107:7]
    node _io_ipf_T = mux(hit, hitinstrPF, missIPF) @[build/NutShell.fir.opt.mlir 31109:20]
    connect io.ipf, _io_ipf_T @[build/NutShell.fir.opt.mlir 31110:7]
    node _io_isFinish_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 31112:25]
    node _io_isFinish_T_1 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31114:27]
    node _io_isFinish_T_2 = or(_io_isFinish_T, _io_isFinish_T_1) @[build/NutShell.fir.opt.mlir 31116:27]
    connect io.isFinish, _io_isFinish_T_2 @[build/NutShell.fir.opt.mlir 31117:7]
    inst LogPerfHelper_1 of LogPerfHelper_22 @[build/NutShell.fir.opt.mlir 31118:107]
    wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 31119:22]
    connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 31124:7]
    connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 31125:7]
    connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 31126:7]
    connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 31127:7]
    node _T_64 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31129:16]
    when _T_64 : @[build/NutShell.fir.opt.mlir 31130:7]
      node _T_65 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31132:18]
      node _T_66 = eq(_T_65, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31134:18]
      when _T_66 : @[build/NutShell.fir.opt.mlir 31135:9]
        skip @[build/NutShell.fir.opt.mlir 31136:11]
      node _T_67 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31139:18]
      node _T_68 = eq(_T_67, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31141:18]
      when _T_68 : @[build/NutShell.fir.opt.mlir 31142:9]
        skip @[build/NutShell.fir.opt.mlir 31143:11]
    node _T_69 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31147:16]
    when _T_69 : @[build/NutShell.fir.opt.mlir 31148:7]
      node _T_70 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31150:18]
      node _T_71 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31152:18]
      when _T_71 : @[build/NutShell.fir.opt.mlir 31153:9]
        skip @[build/NutShell.fir.opt.mlir 31154:11]
      node _T_72 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31157:18]
      node _T_73 = eq(_T_72, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31159:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 31160:9]
        skip @[build/NutShell.fir.opt.mlir 31161:11]
    node lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 31165:16]
    node lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 31167:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 31169:13]
    node hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 31171:16]
    node hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 31173:16]
    node hi_1 = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 31175:15]
    node _T_74 = cat(hi_1, lo) @[build/NutShell.fir.opt.mlir 31177:16]
    node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31179:16]
    when _T_75 : @[build/NutShell.fir.opt.mlir 31180:7]
      node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31182:18]
      node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31184:18]
      when _T_77 : @[build/NutShell.fir.opt.mlir 31185:9]
        skip @[build/NutShell.fir.opt.mlir 31186:11]
      node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31189:18]
      node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31191:18]
      when _T_79 : @[build/NutShell.fir.opt.mlir 31192:9]
        skip @[build/NutShell.fir.opt.mlir 31193:11]
    node lo_lo_1 = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 31197:18]
    node lo_hi_1 = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 31199:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 31201:15]
    node hi_lo_1 = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 31203:18]
    node hi_hi_1 = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 31205:18]
    node hi_2 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 31207:15]
    node _T_80 = cat(hi_2, lo_1) @[build/NutShell.fir.opt.mlir 31209:16]
    node lo_2 = cat(memRdata.rsw, _T_80) @[build/NutShell.fir.opt.mlir 31211:15]
    node hi_3 = cat(memRdata.reserved, memRdata.ppn) @[build/NutShell.fir.opt.mlir 31213:15]
    node _T_81 = cat(hi_3, lo_2) @[build/NutShell.fir.opt.mlir 31215:16]
    node _T_82 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31217:16]
    when _T_82 : @[build/NutShell.fir.opt.mlir 31218:7]
      node _T_83 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31220:18]
      node _T_84 = eq(_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31222:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 31223:9]
        skip @[build/NutShell.fir.opt.mlir 31224:11]
      node _T_85 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31227:18]
      node _T_86 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31229:18]
      when _T_86 : @[build/NutShell.fir.opt.mlir 31230:9]
        skip @[build/NutShell.fir.opt.mlir 31231:11]
    wire _WIRE_2 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31234:18]
    wire _WIRE_3 : UInt<121> @[build/NutShell.fir.opt.mlir 31241:18]
    connect _WIRE_3, io.md[0] @[build/NutShell.fir.opt.mlir 31242:7]
    node _T_87 = bits(_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 31244:16]
    connect _WIRE_2.pteaddr, _T_87 @[build/NutShell.fir.opt.mlir 31245:7]
    node _T_88 = bits(_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 31247:16]
    connect _WIRE_2.ppn, _T_88 @[build/NutShell.fir.opt.mlir 31248:7]
    node _T_89 = bits(_WIRE_3, 59, 52) @[build/NutShell.fir.opt.mlir 31250:16]
    connect _WIRE_2.flag, _T_89 @[build/NutShell.fir.opt.mlir 31251:7]
    node _T_90 = bits(_WIRE_3, 77, 60) @[build/NutShell.fir.opt.mlir 31253:16]
    connect _WIRE_2.mask, _T_90 @[build/NutShell.fir.opt.mlir 31254:7]
    node _T_91 = bits(_WIRE_3, 93, 78) @[build/NutShell.fir.opt.mlir 31256:16]
    connect _WIRE_2.asid, _T_91 @[build/NutShell.fir.opt.mlir 31257:7]
    node _T_92 = bits(_WIRE_3, 120, 94) @[build/NutShell.fir.opt.mlir 31259:16]
    connect _WIRE_2.vpn, _T_92 @[build/NutShell.fir.opt.mlir 31260:7]
    wire _WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31261:18]
    wire _WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 31268:18]
    connect _WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 31269:7]
    node _T_93 = bits(_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 31271:16]
    connect _WIRE_4.pteaddr, _T_93 @[build/NutShell.fir.opt.mlir 31272:7]
    node _T_94 = bits(_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 31274:16]
    connect _WIRE_4.ppn, _T_94 @[build/NutShell.fir.opt.mlir 31275:7]
    node _T_95 = bits(_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 31277:16]
    connect _WIRE_4.flag, _T_95 @[build/NutShell.fir.opt.mlir 31278:7]
    node _T_96 = bits(_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 31280:16]
    connect _WIRE_4.mask, _T_96 @[build/NutShell.fir.opt.mlir 31281:7]
    node _T_97 = bits(_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 31283:16]
    connect _WIRE_4.asid, _T_97 @[build/NutShell.fir.opt.mlir 31284:7]
    node _T_98 = bits(_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 31286:16]
    connect _WIRE_4.vpn, _T_98 @[build/NutShell.fir.opt.mlir 31287:7]
    wire _WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31288:18]
    wire _WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 31295:18]
    connect _WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 31296:7]
    node _T_99 = bits(_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 31298:16]
    connect _WIRE_6.pteaddr, _T_99 @[build/NutShell.fir.opt.mlir 31299:7]
    node _T_100 = bits(_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 31301:17]
    connect _WIRE_6.ppn, _T_100 @[build/NutShell.fir.opt.mlir 31302:7]
    node _T_101 = bits(_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 31304:17]
    connect _WIRE_6.flag, _T_101 @[build/NutShell.fir.opt.mlir 31305:7]
    node _T_102 = bits(_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 31307:17]
    connect _WIRE_6.mask, _T_102 @[build/NutShell.fir.opt.mlir 31308:7]
    node _T_103 = bits(_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 31310:17]
    connect _WIRE_6.asid, _T_103 @[build/NutShell.fir.opt.mlir 31311:7]
    node _T_104 = bits(_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 31313:17]
    connect _WIRE_6.vpn, _T_104 @[build/NutShell.fir.opt.mlir 31314:7]
    wire _WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31315:18]
    wire _WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 31322:18]
    connect _WIRE_9, io.md[1] @[build/NutShell.fir.opt.mlir 31323:7]
    node _T_105 = bits(_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 31325:17]
    connect _WIRE_8.pteaddr, _T_105 @[build/NutShell.fir.opt.mlir 31326:7]
    node _T_106 = bits(_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 31328:17]
    connect _WIRE_8.ppn, _T_106 @[build/NutShell.fir.opt.mlir 31329:7]
    node _T_107 = bits(_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 31331:17]
    connect _WIRE_8.flag, _T_107 @[build/NutShell.fir.opt.mlir 31332:7]
    node _T_108 = bits(_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 31334:17]
    connect _WIRE_8.mask, _T_108 @[build/NutShell.fir.opt.mlir 31335:7]
    node _T_109 = bits(_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 31337:17]
    connect _WIRE_8.asid, _T_109 @[build/NutShell.fir.opt.mlir 31338:7]
    node _T_110 = bits(_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 31340:17]
    connect _WIRE_8.vpn, _T_110 @[build/NutShell.fir.opt.mlir 31341:7]
    wire _WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31342:19]
    wire _WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 31349:19]
    connect _WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 31350:7]
    node _T_111 = bits(_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 31352:17]
    connect _WIRE_10.pteaddr, _T_111 @[build/NutShell.fir.opt.mlir 31353:7]
    node _T_112 = bits(_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 31355:17]
    connect _WIRE_10.ppn, _T_112 @[build/NutShell.fir.opt.mlir 31356:7]
    node _T_113 = bits(_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 31358:17]
    connect _WIRE_10.flag, _T_113 @[build/NutShell.fir.opt.mlir 31359:7]
    node _T_114 = bits(_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 31361:17]
    connect _WIRE_10.mask, _T_114 @[build/NutShell.fir.opt.mlir 31362:7]
    node _T_115 = bits(_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 31364:17]
    connect _WIRE_10.asid, _T_115 @[build/NutShell.fir.opt.mlir 31365:7]
    node _T_116 = bits(_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 31367:17]
    connect _WIRE_10.vpn, _T_116 @[build/NutShell.fir.opt.mlir 31368:7]
    wire _WIRE_12 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31369:19]
    wire _WIRE_13 : UInt<121> @[build/NutShell.fir.opt.mlir 31376:19]
    connect _WIRE_13, io.md[1] @[build/NutShell.fir.opt.mlir 31377:7]
    node _T_117 = bits(_WIRE_13, 31, 0) @[build/NutShell.fir.opt.mlir 31379:17]
    connect _WIRE_12.pteaddr, _T_117 @[build/NutShell.fir.opt.mlir 31380:7]
    node _T_118 = bits(_WIRE_13, 51, 32) @[build/NutShell.fir.opt.mlir 31382:17]
    connect _WIRE_12.ppn, _T_118 @[build/NutShell.fir.opt.mlir 31383:7]
    node _T_119 = bits(_WIRE_13, 59, 52) @[build/NutShell.fir.opt.mlir 31385:17]
    connect _WIRE_12.flag, _T_119 @[build/NutShell.fir.opt.mlir 31386:7]
    node _T_120 = bits(_WIRE_13, 77, 60) @[build/NutShell.fir.opt.mlir 31388:17]
    connect _WIRE_12.mask, _T_120 @[build/NutShell.fir.opt.mlir 31389:7]
    node _T_121 = bits(_WIRE_13, 93, 78) @[build/NutShell.fir.opt.mlir 31391:17]
    connect _WIRE_12.asid, _T_121 @[build/NutShell.fir.opt.mlir 31392:7]
    node _T_122 = bits(_WIRE_13, 120, 94) @[build/NutShell.fir.opt.mlir 31394:17]
    connect _WIRE_12.vpn, _T_122 @[build/NutShell.fir.opt.mlir 31395:7]
    wire _WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31396:19]
    wire _WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 31403:19]
    connect _WIRE_15, io.md[2] @[build/NutShell.fir.opt.mlir 31404:7]
    node _T_123 = bits(_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 31406:17]
    connect _WIRE_14.pteaddr, _T_123 @[build/NutShell.fir.opt.mlir 31407:7]
    node _T_124 = bits(_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 31409:17]
    connect _WIRE_14.ppn, _T_124 @[build/NutShell.fir.opt.mlir 31410:7]
    node _T_125 = bits(_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 31412:17]
    connect _WIRE_14.flag, _T_125 @[build/NutShell.fir.opt.mlir 31413:7]
    node _T_126 = bits(_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 31415:17]
    connect _WIRE_14.mask, _T_126 @[build/NutShell.fir.opt.mlir 31416:7]
    node _T_127 = bits(_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 31418:17]
    connect _WIRE_14.asid, _T_127 @[build/NutShell.fir.opt.mlir 31419:7]
    node _T_128 = bits(_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 31421:17]
    connect _WIRE_14.vpn, _T_128 @[build/NutShell.fir.opt.mlir 31422:7]
    wire _WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31423:19]
    wire _WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 31430:19]
    connect _WIRE_17, io.md[2] @[build/NutShell.fir.opt.mlir 31431:7]
    node _T_129 = bits(_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 31433:17]
    connect _WIRE_16.pteaddr, _T_129 @[build/NutShell.fir.opt.mlir 31434:7]
    node _T_130 = bits(_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 31436:17]
    connect _WIRE_16.ppn, _T_130 @[build/NutShell.fir.opt.mlir 31437:7]
    node _T_131 = bits(_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 31439:17]
    connect _WIRE_16.flag, _T_131 @[build/NutShell.fir.opt.mlir 31440:7]
    node _T_132 = bits(_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 31442:17]
    connect _WIRE_16.mask, _T_132 @[build/NutShell.fir.opt.mlir 31443:7]
    node _T_133 = bits(_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 31445:17]
    connect _WIRE_16.asid, _T_133 @[build/NutShell.fir.opt.mlir 31446:7]
    node _T_134 = bits(_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 31448:17]
    connect _WIRE_16.vpn, _T_134 @[build/NutShell.fir.opt.mlir 31449:7]
    wire _WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31450:19]
    wire _WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 31457:19]
    connect _WIRE_19, io.md[2] @[build/NutShell.fir.opt.mlir 31458:7]
    node _T_135 = bits(_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 31460:17]
    connect _WIRE_18.pteaddr, _T_135 @[build/NutShell.fir.opt.mlir 31461:7]
    node _T_136 = bits(_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 31463:17]
    connect _WIRE_18.ppn, _T_136 @[build/NutShell.fir.opt.mlir 31464:7]
    node _T_137 = bits(_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 31466:17]
    connect _WIRE_18.flag, _T_137 @[build/NutShell.fir.opt.mlir 31467:7]
    node _T_138 = bits(_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 31469:17]
    connect _WIRE_18.mask, _T_138 @[build/NutShell.fir.opt.mlir 31470:7]
    node _T_139 = bits(_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 31472:17]
    connect _WIRE_18.asid, _T_139 @[build/NutShell.fir.opt.mlir 31473:7]
    node _T_140 = bits(_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 31475:17]
    connect _WIRE_18.vpn, _T_140 @[build/NutShell.fir.opt.mlir 31476:7]
    wire _WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31477:19]
    wire _WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 31484:19]
    connect _WIRE_21, io.md[3] @[build/NutShell.fir.opt.mlir 31485:7]
    node _T_141 = bits(_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 31487:17]
    connect _WIRE_20.pteaddr, _T_141 @[build/NutShell.fir.opt.mlir 31488:7]
    node _T_142 = bits(_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 31490:17]
    connect _WIRE_20.ppn, _T_142 @[build/NutShell.fir.opt.mlir 31491:7]
    node _T_143 = bits(_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 31493:17]
    connect _WIRE_20.flag, _T_143 @[build/NutShell.fir.opt.mlir 31494:7]
    node _T_144 = bits(_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 31496:17]
    connect _WIRE_20.mask, _T_144 @[build/NutShell.fir.opt.mlir 31497:7]
    node _T_145 = bits(_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 31499:17]
    connect _WIRE_20.asid, _T_145 @[build/NutShell.fir.opt.mlir 31500:7]
    node _T_146 = bits(_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 31502:17]
    connect _WIRE_20.vpn, _T_146 @[build/NutShell.fir.opt.mlir 31503:7]
    wire _WIRE_22 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31504:19]
    wire _WIRE_23 : UInt<121> @[build/NutShell.fir.opt.mlir 31511:19]
    connect _WIRE_23, io.md[3] @[build/NutShell.fir.opt.mlir 31512:7]
    node _T_147 = bits(_WIRE_23, 31, 0) @[build/NutShell.fir.opt.mlir 31514:17]
    connect _WIRE_22.pteaddr, _T_147 @[build/NutShell.fir.opt.mlir 31515:7]
    node _T_148 = bits(_WIRE_23, 51, 32) @[build/NutShell.fir.opt.mlir 31517:17]
    connect _WIRE_22.ppn, _T_148 @[build/NutShell.fir.opt.mlir 31518:7]
    node _T_149 = bits(_WIRE_23, 59, 52) @[build/NutShell.fir.opt.mlir 31520:17]
    connect _WIRE_22.flag, _T_149 @[build/NutShell.fir.opt.mlir 31521:7]
    node _T_150 = bits(_WIRE_23, 77, 60) @[build/NutShell.fir.opt.mlir 31523:17]
    connect _WIRE_22.mask, _T_150 @[build/NutShell.fir.opt.mlir 31524:7]
    node _T_151 = bits(_WIRE_23, 93, 78) @[build/NutShell.fir.opt.mlir 31526:17]
    connect _WIRE_22.asid, _T_151 @[build/NutShell.fir.opt.mlir 31527:7]
    node _T_152 = bits(_WIRE_23, 120, 94) @[build/NutShell.fir.opt.mlir 31529:17]
    connect _WIRE_22.vpn, _T_152 @[build/NutShell.fir.opt.mlir 31530:7]
    wire _WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31531:19]
    wire _WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 31538:19]
    connect _WIRE_25, io.md[3] @[build/NutShell.fir.opt.mlir 31539:7]
    node _T_153 = bits(_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 31541:17]
    connect _WIRE_24.pteaddr, _T_153 @[build/NutShell.fir.opt.mlir 31542:7]
    node _T_154 = bits(_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 31544:17]
    connect _WIRE_24.ppn, _T_154 @[build/NutShell.fir.opt.mlir 31545:7]
    node _T_155 = bits(_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 31547:17]
    connect _WIRE_24.flag, _T_155 @[build/NutShell.fir.opt.mlir 31548:7]
    node _T_156 = bits(_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 31550:17]
    connect _WIRE_24.mask, _T_156 @[build/NutShell.fir.opt.mlir 31551:7]
    node _T_157 = bits(_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 31553:17]
    connect _WIRE_24.asid, _T_157 @[build/NutShell.fir.opt.mlir 31554:7]
    node _T_158 = bits(_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 31556:17]
    connect _WIRE_24.vpn, _T_158 @[build/NutShell.fir.opt.mlir 31557:7]
    node _T_159 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31559:17]
    when _T_159 : @[build/NutShell.fir.opt.mlir 31560:7]
      node _T_160 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31562:19]
      node _T_161 = eq(_T_160, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31564:19]
      when _T_161 : @[build/NutShell.fir.opt.mlir 31565:9]
        skip @[build/NutShell.fir.opt.mlir 31566:11]
      node _T_162 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31569:19]
      node _T_163 = eq(_T_162, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31571:19]
      when _T_163 : @[build/NutShell.fir.opt.mlir 31572:9]
        skip @[build/NutShell.fir.opt.mlir 31573:11]
    wire _WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31576:19]
    wire _WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 31583:19]
    connect _WIRE_27, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31584:7]
    node _T_164 = bits(_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 31586:17]
    connect _WIRE_26.pteaddr, _T_164 @[build/NutShell.fir.opt.mlir 31587:7]
    node _T_165 = bits(_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 31589:17]
    connect _WIRE_26.ppn, _T_165 @[build/NutShell.fir.opt.mlir 31590:7]
    node _T_166 = bits(_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 31592:17]
    connect _WIRE_26.flag, _T_166 @[build/NutShell.fir.opt.mlir 31593:7]
    node _T_167 = bits(_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 31595:17]
    connect _WIRE_26.mask, _T_167 @[build/NutShell.fir.opt.mlir 31596:7]
    node _T_168 = bits(_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 31598:17]
    connect _WIRE_26.asid, _T_168 @[build/NutShell.fir.opt.mlir 31599:7]
    node _T_169 = bits(_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 31601:17]
    connect _WIRE_26.vpn, _T_169 @[build/NutShell.fir.opt.mlir 31602:7]
    wire _WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31603:19]
    wire _WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 31610:19]
    connect _WIRE_29, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31611:7]
    node _T_170 = bits(_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 31613:17]
    connect _WIRE_28.pteaddr, _T_170 @[build/NutShell.fir.opt.mlir 31614:7]
    node _T_171 = bits(_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 31616:17]
    connect _WIRE_28.ppn, _T_171 @[build/NutShell.fir.opt.mlir 31617:7]
    node _T_172 = bits(_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 31619:17]
    connect _WIRE_28.flag, _T_172 @[build/NutShell.fir.opt.mlir 31620:7]
    node _T_173 = bits(_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 31622:17]
    connect _WIRE_28.mask, _T_173 @[build/NutShell.fir.opt.mlir 31623:7]
    node _T_174 = bits(_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 31625:17]
    connect _WIRE_28.asid, _T_174 @[build/NutShell.fir.opt.mlir 31626:7]
    node _T_175 = bits(_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 31628:17]
    connect _WIRE_28.vpn, _T_175 @[build/NutShell.fir.opt.mlir 31629:7]
    wire _WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31630:19]
    wire _WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 31637:19]
    connect _WIRE_31, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31638:7]
    node _T_176 = bits(_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 31640:17]
    connect _WIRE_30.pteaddr, _T_176 @[build/NutShell.fir.opt.mlir 31641:7]
    node _T_177 = bits(_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 31643:17]
    connect _WIRE_30.ppn, _T_177 @[build/NutShell.fir.opt.mlir 31644:7]
    node _T_178 = bits(_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 31646:17]
    connect _WIRE_30.flag, _T_178 @[build/NutShell.fir.opt.mlir 31647:7]
    node _T_179 = bits(_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 31649:17]
    connect _WIRE_30.mask, _T_179 @[build/NutShell.fir.opt.mlir 31650:7]
    node _T_180 = bits(_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 31652:17]
    connect _WIRE_30.asid, _T_180 @[build/NutShell.fir.opt.mlir 31653:7]
    node _T_181 = bits(_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 31655:17]
    connect _WIRE_30.vpn, _T_181 @[build/NutShell.fir.opt.mlir 31656:7]
    wire _WIRE_32 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31657:19]
    wire _WIRE_33 : UInt<121> @[build/NutShell.fir.opt.mlir 31664:19]
    connect _WIRE_33, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31665:7]
    node _T_182 = bits(_WIRE_33, 31, 0) @[build/NutShell.fir.opt.mlir 31667:17]
    connect _WIRE_32.pteaddr, _T_182 @[build/NutShell.fir.opt.mlir 31668:7]
    node _T_183 = bits(_WIRE_33, 51, 32) @[build/NutShell.fir.opt.mlir 31670:17]
    connect _WIRE_32.ppn, _T_183 @[build/NutShell.fir.opt.mlir 31671:7]
    node _T_184 = bits(_WIRE_33, 59, 52) @[build/NutShell.fir.opt.mlir 31673:17]
    connect _WIRE_32.flag, _T_184 @[build/NutShell.fir.opt.mlir 31674:7]
    node _T_185 = bits(_WIRE_33, 77, 60) @[build/NutShell.fir.opt.mlir 31676:17]
    connect _WIRE_32.mask, _T_185 @[build/NutShell.fir.opt.mlir 31677:7]
    node _T_186 = bits(_WIRE_33, 93, 78) @[build/NutShell.fir.opt.mlir 31679:17]
    connect _WIRE_32.asid, _T_186 @[build/NutShell.fir.opt.mlir 31680:7]
    node _T_187 = bits(_WIRE_33, 120, 94) @[build/NutShell.fir.opt.mlir 31682:17]
    connect _WIRE_32.vpn, _T_187 @[build/NutShell.fir.opt.mlir 31683:7]
    wire _WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31684:19]
    wire _WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 31691:19]
    connect _WIRE_35, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31692:7]
    node _T_188 = bits(_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 31694:17]
    connect _WIRE_34.pteaddr, _T_188 @[build/NutShell.fir.opt.mlir 31695:7]
    node _T_189 = bits(_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 31697:17]
    connect _WIRE_34.ppn, _T_189 @[build/NutShell.fir.opt.mlir 31698:7]
    node _T_190 = bits(_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 31700:17]
    connect _WIRE_34.flag, _T_190 @[build/NutShell.fir.opt.mlir 31701:7]
    node _T_191 = bits(_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 31703:17]
    connect _WIRE_34.mask, _T_191 @[build/NutShell.fir.opt.mlir 31704:7]
    node _T_192 = bits(_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 31706:17]
    connect _WIRE_34.asid, _T_192 @[build/NutShell.fir.opt.mlir 31707:7]
    node _T_193 = bits(_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 31709:17]
    connect _WIRE_34.vpn, _T_193 @[build/NutShell.fir.opt.mlir 31710:7]
    wire _WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31711:19]
    wire _WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 31718:19]
    connect _WIRE_37, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31719:7]
    node _T_194 = bits(_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 31721:17]
    connect _WIRE_36.pteaddr, _T_194 @[build/NutShell.fir.opt.mlir 31722:7]
    node _T_195 = bits(_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 31724:17]
    connect _WIRE_36.ppn, _T_195 @[build/NutShell.fir.opt.mlir 31725:7]
    node _T_196 = bits(_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 31727:17]
    connect _WIRE_36.flag, _T_196 @[build/NutShell.fir.opt.mlir 31728:7]
    node _T_197 = bits(_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 31730:17]
    connect _WIRE_36.mask, _T_197 @[build/NutShell.fir.opt.mlir 31731:7]
    node _T_198 = bits(_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 31733:17]
    connect _WIRE_36.asid, _T_198 @[build/NutShell.fir.opt.mlir 31734:7]
    node _T_199 = bits(_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 31736:17]
    connect _WIRE_36.vpn, _T_199 @[build/NutShell.fir.opt.mlir 31737:7]
    wire _WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31738:19]
    wire _WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 31745:19]
    connect _WIRE_39, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31746:7]
    node _T_200 = bits(_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 31748:17]
    connect _WIRE_38.pteaddr, _T_200 @[build/NutShell.fir.opt.mlir 31749:7]
    node _T_201 = bits(_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 31751:17]
    connect _WIRE_38.ppn, _T_201 @[build/NutShell.fir.opt.mlir 31752:7]
    node _T_202 = bits(_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 31754:17]
    connect _WIRE_38.flag, _T_202 @[build/NutShell.fir.opt.mlir 31755:7]
    node _T_203 = bits(_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 31757:17]
    connect _WIRE_38.mask, _T_203 @[build/NutShell.fir.opt.mlir 31758:7]
    node _T_204 = bits(_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 31760:17]
    connect _WIRE_38.asid, _T_204 @[build/NutShell.fir.opt.mlir 31761:7]
    node _T_205 = bits(_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 31763:17]
    connect _WIRE_38.vpn, _T_205 @[build/NutShell.fir.opt.mlir 31764:7]
    node _T_206 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31766:17]
    when _T_206 : @[build/NutShell.fir.opt.mlir 31767:7]
      node _T_207 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31769:19]
      node _T_208 = eq(_T_207, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31771:19]
      when _T_208 : @[build/NutShell.fir.opt.mlir 31772:9]
        skip @[build/NutShell.fir.opt.mlir 31773:11]
      node _T_209 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31776:19]
      node _T_210 = eq(_T_209, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31778:19]
      when _T_210 : @[build/NutShell.fir.opt.mlir 31779:9]
        skip @[build/NutShell.fir.opt.mlir 31780:11]
    node _T_211 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31784:17]
    when _T_211 : @[build/NutShell.fir.opt.mlir 31785:7]
      node _T_212 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31787:19]
      node _T_213 = eq(_T_212, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31789:19]
      when _T_213 : @[build/NutShell.fir.opt.mlir 31790:9]
        skip @[build/NutShell.fir.opt.mlir 31791:11]
      node _T_214 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31794:19]
      node _T_215 = eq(_T_214, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31796:19]
      when _T_215 : @[build/NutShell.fir.opt.mlir 31797:9]
        skip @[build/NutShell.fir.opt.mlir 31798:11]
    node _T_216 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31802:17]
    when _T_216 : @[build/NutShell.fir.opt.mlir 31803:7]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31805:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31807:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 31808:9]
        skip @[build/NutShell.fir.opt.mlir 31809:11]
      node _T_219 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31812:19]
      node _T_220 = eq(_T_219, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31814:19]
      when _T_220 : @[build/NutShell.fir.opt.mlir 31815:9]
        skip @[build/NutShell.fir.opt.mlir 31816:11]

  module EmbeddedTLBEmpty : @[build/NutShell.fir.opt.mlir 31820:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 31820:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 31820:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } } @[build/NutShell.fir.opt.mlir 31820:101]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 31825:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 31828:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 31831:7]

  module EmbeddedTLBMD : @[build/NutShell.fir.opt.mlir 31833:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 31833:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 31833:71]
    output io : { tlbmd : UInt<121>[4], flip write : { wen : UInt<1>, windex : UInt<1>, waymask : UInt<4>, wdata : UInt<121> }, flip rindex : UInt<1>, ready : UInt<1> } @[build/NutShell.fir.opt.mlir 31833:98]

    reg tlbmd : UInt<121>[4][1], clock @[build/NutShell.fir.opt.mlir 31841:16]
    wire _WIRE : UInt @[build/NutShell.fir.opt.mlir 31842:16]
    connect _WIRE, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31844:7]
    connect io.tlbmd, tlbmd[_WIRE] @[build/NutShell.fir.opt.mlir 31846:7]
    regreset resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 31848:21]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 31849:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31850:7]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 31851:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31853:7]
    when resetState : @[build/NutShell.fir.opt.mlir 31854:7]
      connect resetFinish, UInt<1>(1) @[build/NutShell.fir.opt.mlir 31856:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 31858:7]
      connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31860:9]
    node wen = mux(resetState, UInt<1>(1), io.write.wen) @[build/NutShell.fir.opt.mlir 31863:14]
    node setIdx = mux(resetState, resetSet, io.write.windex) @[build/NutShell.fir.opt.mlir 31865:17]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 31869:21]
    node waymask = mux(resetState, _waymask_T, io.write.waymask) @[build/NutShell.fir.opt.mlir 31871:18]
    node dataword = mux(resetState, UInt<1>(0), io.write.wdata) @[build/NutShell.fir.opt.mlir 31873:19]
    wire wdata : UInt<121>[4] @[build/NutShell.fir.opt.mlir 31874:16]
    connect wdata[0], dataword @[build/NutShell.fir.opt.mlir 31879:7]
    connect wdata[1], dataword @[build/NutShell.fir.opt.mlir 31880:7]
    connect wdata[2], dataword @[build/NutShell.fir.opt.mlir 31881:7]
    connect wdata[3], dataword @[build/NutShell.fir.opt.mlir 31882:7]
    node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 31884:13]
    node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 31886:15]
    node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 31888:15]
    node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 31890:15]
    node _T_4 = and(wen, _T) @[build/NutShell.fir.opt.mlir 31892:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 31893:7]
      wire _WIRE_1 : UInt @[build/NutShell.fir.opt.mlir 31894:20]
      connect _WIRE_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31895:9]
      connect tlbmd[_WIRE_1][0], wdata[0] @[build/NutShell.fir.opt.mlir 31898:9]
    node _T_5 = and(wen, _T_1) @[build/NutShell.fir.opt.mlir 31901:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 31902:7]
      wire _WIRE_2 : UInt @[build/NutShell.fir.opt.mlir 31903:20]
      connect _WIRE_2, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31904:9]
      connect tlbmd[_WIRE_2][1], wdata[1] @[build/NutShell.fir.opt.mlir 31907:9]
    node _T_6 = and(wen, _T_2) @[build/NutShell.fir.opt.mlir 31910:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 31911:7]
      wire _WIRE_3 : UInt @[build/NutShell.fir.opt.mlir 31912:20]
      connect _WIRE_3, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31913:9]
      connect tlbmd[_WIRE_3][2], wdata[2] @[build/NutShell.fir.opt.mlir 31916:9]
    node _T_7 = and(wen, _T_3) @[build/NutShell.fir.opt.mlir 31919:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 31920:7]
      wire _WIRE_4 : UInt @[build/NutShell.fir.opt.mlir 31921:20]
      connect _WIRE_4, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31922:9]
      connect tlbmd[_WIRE_4][3], wdata[3] @[build/NutShell.fir.opt.mlir 31925:9]
    node _io_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31928:22]
    connect io.ready, _io_ready_T @[build/NutShell.fir.opt.mlir 31929:7]

  extmodule LogPerfHelper_23 : @[build/NutShell.fir.opt.mlir 31931:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 31931:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 31931:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 31931:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 31931:141]
    defname = LogPerfHelper

  module EmbeddedTLB : @[build/NutShell.fir.opt.mlir 31932:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 31932:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 31932:69]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, csrMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip cacheEmpty : UInt<1>, ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 31932:96]

    wire satp : UInt<64> @[build/NutShell.fir.opt.mlir 31979:15]
    connect satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 31982:7]
    inst tlbExec of EmbeddedTLBExec @[build/NutShell.fir.opt.mlir 31983:53]
    connect tlbExec.clock, clock @[build/NutShell.fir.opt.mlir 32013:7]
    connect tlbExec.reset, reset @[build/NutShell.fir.opt.mlir 32014:7]
    inst tlbEmpty of EmbeddedTLBEmpty @[build/NutShell.fir.opt.mlir 32015:56]
    connect tlbEmpty.clock, clock @[build/NutShell.fir.opt.mlir 32028:7]
    connect tlbEmpty.reset, reset @[build/NutShell.fir.opt.mlir 32029:7]
    inst mdTLB of EmbeddedTLBMD @[build/NutShell.fir.opt.mlir 32030:47]
    connect mdTLB.clock, clock @[build/NutShell.fir.opt.mlir 32035:7]
    connect mdTLB.reset, reset @[build/NutShell.fir.opt.mlir 32036:7]
    wire mdUpdate : UInt<1> @[build/NutShell.fir.opt.mlir 32037:19]
    connect tlbExec.io.flush, io.flush @[build/NutShell.fir.opt.mlir 32038:7]
    connect tlbExec.io.satp, satp @[build/NutShell.fir.opt.mlir 32039:7]
    connect io.mem.resp.ready, tlbExec.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 32042:7]
    connect tlbExec.io.mem.resp.valid, io.mem.resp.valid @[build/NutShell.fir.opt.mlir 32045:7]
    connect tlbExec.io.mem.resp.bits, io.mem.resp.bits @[build/NutShell.fir.opt.mlir 32048:7]
    connect io.mem.req.bits, tlbExec.io.mem.req.bits @[build/NutShell.fir.opt.mlir 32049:7]
    connect io.mem.req.valid, tlbExec.io.mem.req.valid @[build/NutShell.fir.opt.mlir 32050:7]
    connect tlbExec.io.mem.req.ready, io.mem.req.ready @[build/NutShell.fir.opt.mlir 32051:7]
    connect io.csrMMU.addr, tlbExec.io.pf.addr @[build/NutShell.fir.opt.mlir 32052:7]
    connect io.csrMMU.storePF, tlbExec.io.pf.storePF @[build/NutShell.fir.opt.mlir 32053:7]
    connect io.csrMMU.loadPF, tlbExec.io.pf.loadPF @[build/NutShell.fir.opt.mlir 32054:7]
    connect tlbExec.io.pf.status_mxr, io.csrMMU.status_mxr @[build/NutShell.fir.opt.mlir 32055:7]
    connect tlbExec.io.pf.status_sum, io.csrMMU.status_sum @[build/NutShell.fir.opt.mlir 32056:7]
    connect tlbExec.io.pf.privilegeMode, io.csrMMU.privilegeMode @[build/NutShell.fir.opt.mlir 32057:7]
    reg r : UInt<121>[4], clock @[build/NutShell.fir.opt.mlir 32058:12]
    when mdUpdate : @[build/NutShell.fir.opt.mlir 32059:7]
      connect r, mdTLB.io.tlbmd @[build/NutShell.fir.opt.mlir 32060:9]
    connect tlbExec.io.md, r @[build/NutShell.fir.opt.mlir 32062:7]
    connect tlbExec.io.mdReady, mdTLB.io.ready @[build/NutShell.fir.opt.mlir 32063:7]
    wire _mdTLB_io_rindex_WIRE : { tag : UInt<26>, index : UInt<1>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 32064:32]
    wire _mdTLB_io_rindex_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 32068:34]
    connect _mdTLB_io_rindex_WIRE_1, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 32069:7]
    node _mdTLB_io_rindex_T = bits(_mdTLB_io_rindex_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 32071:29]
    connect _mdTLB_io_rindex_WIRE.off, _mdTLB_io_rindex_T @[build/NutShell.fir.opt.mlir 32072:7]
    node _mdTLB_io_rindex_T_1 = bits(_mdTLB_io_rindex_WIRE_1, 12, 12) @[build/NutShell.fir.opt.mlir 32074:31]
    connect _mdTLB_io_rindex_WIRE.index, _mdTLB_io_rindex_T_1 @[build/NutShell.fir.opt.mlir 32075:7]
    node _mdTLB_io_rindex_T_2 = bits(_mdTLB_io_rindex_WIRE_1, 38, 13) @[build/NutShell.fir.opt.mlir 32077:31]
    connect _mdTLB_io_rindex_WIRE.tag, _mdTLB_io_rindex_T_2 @[build/NutShell.fir.opt.mlir 32078:7]
    connect mdTLB.io.rindex, _mdTLB_io_rindex_WIRE.index @[build/NutShell.fir.opt.mlir 32079:7]
    connect mdTLB.io.write, tlbExec.io.mdWrite @[build/NutShell.fir.opt.mlir 32080:7]
    connect io.ipf, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32083:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 32084:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32086:7]
    node _mdTLB_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 32088:25]
    node _mdTLB_reset_T_1 = or(_mdTLB_reset_T, flushTLB) @[build/NutShell.fir.opt.mlir 32090:27]
    connect mdTLB.reset, _mdTLB_reset_T_1 @[build/NutShell.fir.opt.mlir 32092:7]
    wire _vmEnable_WIRE : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 32093:25]
    wire _vmEnable_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 32098:27]
    connect _vmEnable_WIRE_1, satp @[build/NutShell.fir.opt.mlir 32099:7]
    node _vmEnable_T = bits(_vmEnable_WIRE_1, 19, 0) @[build/NutShell.fir.opt.mlir 32101:22]
    connect _vmEnable_WIRE.ppn, _vmEnable_T @[build/NutShell.fir.opt.mlir 32102:7]
    node _vmEnable_T_1 = bits(_vmEnable_WIRE_1, 43, 20) @[build/NutShell.fir.opt.mlir 32104:24]
    connect _vmEnable_WIRE.res, _vmEnable_T_1 @[build/NutShell.fir.opt.mlir 32105:7]
    node _vmEnable_T_2 = bits(_vmEnable_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 32107:24]
    connect _vmEnable_WIRE.asid, _vmEnable_T_2 @[build/NutShell.fir.opt.mlir 32108:7]
    node _vmEnable_T_3 = bits(_vmEnable_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 32110:24]
    connect _vmEnable_WIRE.mode, _vmEnable_T_3 @[build/NutShell.fir.opt.mlir 32111:7]
    node _vmEnable_T_4 = eq(_vmEnable_WIRE.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 32114:24]
    node _vmEnable_T_5 = lt(io.csrMMU.privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 32117:24]
    node vmEnable = and(_vmEnable_T_4, _vmEnable_T_5) @[build/NutShell.fir.opt.mlir 32119:19]
    invalidate tlbEmpty.io.in.bits.user @[build/NutShell.fir.opt.mlir 32121:7]
    invalidate tlbEmpty.io.in.bits.wdata @[build/NutShell.fir.opt.mlir 32123:7]
    invalidate tlbEmpty.io.in.bits.wmask @[build/NutShell.fir.opt.mlir 32125:7]
    invalidate tlbEmpty.io.in.bits.cmd @[build/NutShell.fir.opt.mlir 32127:7]
    invalidate tlbEmpty.io.in.bits.size @[build/NutShell.fir.opt.mlir 32129:7]
    invalidate tlbEmpty.io.in.bits.addr @[build/NutShell.fir.opt.mlir 32131:7]
    invalidate tlbEmpty.io.in.valid @[build/NutShell.fir.opt.mlir 32133:7]
    invalidate tlbEmpty.io.out.ready @[build/NutShell.fir.opt.mlir 32135:7]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32136:16]
    when tlbExec.io.isFinish : @[build/NutShell.fir.opt.mlir 32137:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32139:9]
    node _T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32142:13]
    node _T_1 = and(_T, vmEnable) @[build/NutShell.fir.opt.mlir 32144:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 32146:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32148:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 32150:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32152:9]
    connect io.in.req.ready, tlbExec.io.in.ready @[build/NutShell.fir.opt.mlir 32154:7]
    node _tlbExec_io_in_bits_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32156:32]
    reg tlbExec_io_in_bits_r : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, clock @[build/NutShell.fir.opt.mlir 32157:31]
    when _tlbExec_io_in_bits_T : @[build/NutShell.fir.opt.mlir 32158:7]
      connect tlbExec_io_in_bits_r, io.in.req.bits @[build/NutShell.fir.opt.mlir 32159:9]
    connect tlbExec.io.in.bits, tlbExec_io_in_bits_r @[build/NutShell.fir.opt.mlir 32161:7]
    connect tlbExec.io.in.valid, valid @[build/NutShell.fir.opt.mlir 32162:7]
    node _mdUpdate_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32164:22]
    connect mdUpdate, _mdUpdate_T @[build/NutShell.fir.opt.mlir 32165:7]
    node _T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32167:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 32168:7]
      connect tlbExec.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32170:9]
      connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 32171:9]
      connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 32172:9]
      node _io_out_req_bits_addr_T = bits(io.in.req.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 32174:36]
      connect io.out.req.bits.addr, _io_out_req_bits_addr_T @[build/NutShell.fir.opt.mlir 32175:9]
      connect io.out.req.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 32176:9]
      connect io.out.req.bits.cmd, io.in.req.bits.cmd @[build/NutShell.fir.opt.mlir 32177:9]
      connect io.out.req.bits.wmask, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 32178:9]
      connect io.out.req.bits.wdata, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 32179:9]
      connect io.out.req.bits.user, io.in.req.bits.user @[build/NutShell.fir.opt.mlir 32180:9]
    else :
      connect io.out.req.bits, tlbExec.io.out.bits @[build/NutShell.fir.opt.mlir 32182:9]
      connect io.out.req.valid, tlbExec.io.out.valid @[build/NutShell.fir.opt.mlir 32183:9]
      connect tlbExec.io.out.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 32184:9]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 32188:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 32191:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 32194:7]
    node _T_3 = and(tlbExec.io.ipf, vmEnable) @[build/NutShell.fir.opt.mlir 32196:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 32197:7]
      node _tlbExec_io_out_ready_T = and(io.cacheEmpty, io.in.resp.ready) @[build/NutShell.fir.opt.mlir 32199:36]
      connect tlbExec.io.out.ready, _tlbExec_io_out_ready_T @[build/NutShell.fir.opt.mlir 32200:9]
      connect io.out.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32202:9]
    node _T_4 = and(tlbExec.io.ipf, vmEnable) @[build/NutShell.fir.opt.mlir 32205:15]
    node _T_5 = and(_T_4, io.cacheEmpty) @[build/NutShell.fir.opt.mlir 32207:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 32209:7]
      connect io.in.resp.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32211:9]
      connect io.in.resp.bits.rdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 32214:9]
      connect io.in.resp.bits.cmd, pad(UInt<3>(6), 4) @[build/NutShell.fir.opt.mlir 32217:9]
      connect io.in.resp.bits.user, tlbExec.io.in.bits.user @[build/NutShell.fir.opt.mlir 32218:9]
      connect io.ipf, tlbExec.io.ipf @[build/NutShell.fir.opt.mlir 32219:9]
    inst LogPerfHelper of LogPerfHelper_23 @[build/NutShell.fir.opt.mlir 32221:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32222:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32227:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32228:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32229:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32230:7]
    node _T_6 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32232:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 32233:7]
      node _T_7 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32235:17]
      node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32237:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 32238:9]
        skip @[build/NutShell.fir.opt.mlir 32239:11]
      node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32242:17]
      node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32244:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 32245:9]
        skip @[build/NutShell.fir.opt.mlir 32246:11]
    node _T_11 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32250:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 32251:7]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32253:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32255:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 32256:9]
        skip @[build/NutShell.fir.opt.mlir 32257:11]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32260:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32262:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 32263:9]
        skip @[build/NutShell.fir.opt.mlir 32264:11]
    node _T_16 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32268:16]
    when _T_16 : @[build/NutShell.fir.opt.mlir 32269:7]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32271:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32273:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 32274:9]
        skip @[build/NutShell.fir.opt.mlir 32275:11]
      node _T_19 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32278:18]
      node _T_20 = eq(_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32280:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 32281:9]
        skip @[build/NutShell.fir.opt.mlir 32282:11]
    node _T_21 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32286:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 32287:7]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32289:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32291:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 32292:9]
        skip @[build/NutShell.fir.opt.mlir 32293:11]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32296:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32298:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 32299:9]
        skip @[build/NutShell.fir.opt.mlir 32300:11]

  extmodule LogPerfHelper_24 : @[build/NutShell.fir.opt.mlir 32304:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32304:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32304:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32304:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32304:141]
    defname = LogPerfHelper

  module CacheStage1 : @[build/NutShell.fir.opt.mlir 32305:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32305:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32305:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 32305:96]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32330:13]
    when _T : @[build/NutShell.fir.opt.mlir 32333:7]
      node _T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 32335:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32337:17]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32339:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32341:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 32342:9]
        node _T_5 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32344:19]
        when _T_5 : @[build/NutShell.fir.opt.mlir 32345:11]
          skip @[build/NutShell.fir.opt.mlir 32346:13]
        assert(clock, _T_2, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 32348:11]
    node _T_6 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32352:15]
    inst LogPerfHelper of LogPerfHelper_24 @[build/NutShell.fir.opt.mlir 32353:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32354:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32359:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32360:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32361:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32362:7]
    node _T_7 = and(_T_6, c_control.logEnable) @[build/NutShell.fir.opt.mlir 32364:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 32365:7]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32367:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32369:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 32370:9]
        skip @[build/NutShell.fir.opt.mlir 32371:11]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32374:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32376:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 32377:9]
        skip @[build/NutShell.fir.opt.mlir 32378:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 32382:23]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32383:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 32388:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32389:7]
    node _T_12 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 32391:16]
    connect _WIRE.byteOffset, _T_12 @[build/NutShell.fir.opt.mlir 32392:7]
    node _T_13 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 32394:16]
    connect _WIRE.wordIndex, _T_13 @[build/NutShell.fir.opt.mlir 32395:7]
    node _T_14 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 32397:16]
    connect _WIRE.index, _T_14 @[build/NutShell.fir.opt.mlir 32398:7]
    node _T_15 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 32400:16]
    connect _WIRE.tag, _T_15 @[build/NutShell.fir.opt.mlir 32401:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 32402:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 32403:7]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32404:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 32409:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32410:7]
    node _T_16 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 32412:16]
    connect _WIRE_2.byteOffset, _T_16 @[build/NutShell.fir.opt.mlir 32413:7]
    node _T_17 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 32415:16]
    connect _WIRE_2.wordIndex, _T_17 @[build/NutShell.fir.opt.mlir 32416:7]
    node _T_18 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 32418:16]
    connect _WIRE_2.index, _T_18 @[build/NutShell.fir.opt.mlir 32419:7]
    node _T_19 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 32421:16]
    connect _WIRE_2.tag, _T_19 @[build/NutShell.fir.opt.mlir 32422:7]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32423:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 32428:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32429:7]
    node _T_20 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 32431:16]
    connect _WIRE_4.byteOffset, _T_20 @[build/NutShell.fir.opt.mlir 32432:7]
    node _T_21 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 32434:16]
    connect _WIRE_4.wordIndex, _T_21 @[build/NutShell.fir.opt.mlir 32435:7]
    node _T_22 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 32437:16]
    connect _WIRE_4.index, _T_22 @[build/NutShell.fir.opt.mlir 32438:7]
    node _T_23 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 32440:16]
    connect _WIRE_4.tag, _T_23 @[build/NutShell.fir.opt.mlir 32441:7]
    node _T_24 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 32443:16]
    connect io.dataReadBus.req.bits.setIdx, _T_24 @[build/NutShell.fir.opt.mlir 32444:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 32445:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 32446:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32448:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32450:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 32451:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32453:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 32455:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 32457:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32459:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32461:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 32462:7]
    node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32464:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 32465:7]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32467:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32469:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 32470:9]
        skip @[build/NutShell.fir.opt.mlir 32471:11]
      node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32474:18]
      node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32476:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 32477:9]
        skip @[build/NutShell.fir.opt.mlir 32478:11]

  extmodule LogPerfHelper_25 : @[build/NutShell.fir.opt.mlir 32482:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32482:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32482:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32482:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32482:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_26 : @[build/NutShell.fir.opt.mlir 32483:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32483:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32483:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32483:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32483:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_27 : @[build/NutShell.fir.opt.mlir 32484:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32484:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32484:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32484:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32484:141]
    defname = LogPerfHelper

  module CacheStage2 : @[build/NutShell.fir.opt.mlir 32485:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32485:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32485:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 32485:96]

    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32520:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 32525:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 32526:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 32528:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 32529:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 32531:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 32532:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 32534:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 32535:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 32537:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 32538:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 32540:27]
    wire _isForwardMeta_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32541:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 32546:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 32547:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 32549:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 32550:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 32552:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 32553:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 32555:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 32556:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 32558:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 32559:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 32561:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 32563:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32565:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 32567:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32569:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32572:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32574:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 32576:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 32577:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32579:9]
    reg forwardMetaReg : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 32581:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 32582:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 32583:9]
    wire metaWay : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 32585:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 32599:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 32601:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32605:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32607:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32609:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32611:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 32613:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 32615:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 32616:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 32618:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 32620:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 32621:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 32623:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 32625:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 32626:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 32628:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 32630:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 32631:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32633:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 32635:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 32637:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32639:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 32641:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 32643:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32645:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 32647:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 32649:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32651:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 32653:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 32655:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 32656:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 32661:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 32662:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 32663:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 32664:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 32666:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 32668:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 32670:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 32672:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 32674:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 32676:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 32678:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 32680:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 32682:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 32684:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 32686:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 32687:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32689:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 32691:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 32693:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 32695:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 32696:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 32699:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 32701:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32703:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32705:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32707:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32709:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 32710:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 32715:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 32716:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 32717:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 32718:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 32720:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 32722:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 32724:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 32726:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 32729:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 32732:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 32735:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 32737:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 32739:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 32741:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 32743:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 32745:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32747:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32749:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32751:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32753:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 32755:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 32757:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 32759:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 32761:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 32763:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 32765:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 32767:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 32768:7]
      inst LogPerfHelper of LogPerfHelper_25 @[build/NutShell.fir.opt.mlir 32769:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32770:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32775:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32776:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32777:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32778:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32780:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 32781:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32783:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32785:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 32786:11]
          skip @[build/NutShell.fir.opt.mlir 32787:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32790:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32792:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 32793:11]
          skip @[build/NutShell.fir.opt.mlir 32794:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32798:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 32799:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32801:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32803:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 32804:11]
          skip @[build/NutShell.fir.opt.mlir 32805:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32808:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32810:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 32811:11]
          skip @[build/NutShell.fir.opt.mlir 32812:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32816:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 32817:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32819:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32821:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 32822:11]
          skip @[build/NutShell.fir.opt.mlir 32823:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32826:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32828:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 32829:11]
          skip @[build/NutShell.fir.opt.mlir 32830:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32834:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 32835:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32837:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32839:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 32840:11]
          skip @[build/NutShell.fir.opt.mlir 32841:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32844:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32846:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 32847:11]
          skip @[build/NutShell.fir.opt.mlir 32848:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32852:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 32853:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32855:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32857:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 32858:11]
          skip @[build/NutShell.fir.opt.mlir 32859:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32862:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32864:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 32865:11]
          skip @[build/NutShell.fir.opt.mlir 32866:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32870:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 32871:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32873:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32875:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 32876:11]
          skip @[build/NutShell.fir.opt.mlir 32877:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32880:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32882:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 32883:11]
          skip @[build/NutShell.fir.opt.mlir 32884:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32888:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 32889:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32891:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32893:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 32894:11]
          skip @[build/NutShell.fir.opt.mlir 32895:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32898:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32900:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 32901:11]
          skip @[build/NutShell.fir.opt.mlir 32902:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32906:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 32907:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32909:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32911:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 32912:11]
          skip @[build/NutShell.fir.opt.mlir 32913:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32916:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32918:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 32919:11]
          skip @[build/NutShell.fir.opt.mlir 32920:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32924:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 32925:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32927:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32929:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 32930:11]
          skip @[build/NutShell.fir.opt.mlir 32931:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32934:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32936:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 32937:11]
          skip @[build/NutShell.fir.opt.mlir 32938:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32942:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 32943:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32945:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32947:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 32948:11]
          skip @[build/NutShell.fir.opt.mlir 32949:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32952:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32954:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 32955:11]
          skip @[build/NutShell.fir.opt.mlir 32956:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32961:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32963:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32965:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32967:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 32969:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 32971:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 32973:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 32975:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 32977:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 32979:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 32981:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 32982:7]
      inst LogPerfHelper_1 of LogPerfHelper_26 @[build/NutShell.fir.opt.mlir 32983:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32984:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 32989:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 32990:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 32991:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 32992:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 32994:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 32995:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32997:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32999:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 33000:11]
          skip @[build/NutShell.fir.opt.mlir 33001:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33004:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33006:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 33007:11]
          skip @[build/NutShell.fir.opt.mlir 33008:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33013:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33015:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33017:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33019:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 33021:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 33023:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 33025:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 33027:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 33029:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 33031:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33033:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 33035:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33037:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33039:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33041:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 33042:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33044:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 33045:9]
        skip @[build/NutShell.fir.opt.mlir 33046:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 33048:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 33050:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 33052:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 33054:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 33055:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 33056:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 33057:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 33060:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 33062:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33064:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 33067:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 33069:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33071:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 33073:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 33074:7]
    wire _isForwardData_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33075:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33080:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33081:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33083:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 33084:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33086:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 33087:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33089:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 33090:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33092:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 33093:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33094:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 33099:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33100:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 33102:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 33103:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 33105:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 33106:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 33108:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 33109:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 33111:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 33112:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 33114:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 33116:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 33118:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 33120:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33121:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 33122:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33124:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 33127:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33129:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 33131:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 33132:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33134:9]
    reg forwardDataReg : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 33136:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 33137:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 33138:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 33141:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 33142:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 33144:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 33145:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 33146:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 33147:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33149:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33151:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 33153:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 33154:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 33156:16]
    inst LogPerfHelper_2 of LogPerfHelper_27 @[build/NutShell.fir.opt.mlir 33157:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 33158:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 33163:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 33164:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 33165:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 33166:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 33168:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 33169:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33171:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33173:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 33174:9]
        skip @[build/NutShell.fir.opt.mlir 33175:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33178:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33180:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 33181:9]
        skip @[build/NutShell.fir.opt.mlir 33182:11]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33185:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33190:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33191:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33193:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 33194:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33196:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 33197:7]
    node _T_107 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33199:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 33200:7]
    node _T_108 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33202:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 33203:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 33205:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 33206:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33208:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33210:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 33211:9]
        skip @[build/NutShell.fir.opt.mlir 33212:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33215:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33217:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 33218:9]
        skip @[build/NutShell.fir.opt.mlir 33219:11]

  module Arbiter2_SRAMBundleAW : @[build/NutShell.fir.opt.mlir 33223:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33223:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33223:79]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 33223:106]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33240:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 33241:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 33243:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33245:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 33246:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33249:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 33251:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 33252:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 33254:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 33255:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33257:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 33259:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 33260:7]

  module Arbiter2_SRAMBundleAW_1 : @[build/NutShell.fir.opt.mlir 33262:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33262:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33262:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 33262:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33279:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 33280:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 33282:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33284:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 33285:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33288:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 33290:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 33291:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 33293:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 33294:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33296:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 33298:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 33299:7]

  extmodule LogPerfHelper_28 : @[build/NutShell.fir.opt.mlir 33301:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 33301:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 33301:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 33301:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 33301:141]
    defname = LogPerfHelper

  module CacheStage3 : @[build/NutShell.fir.opt.mlir 33302:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33302:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33302:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 33302:96]

    inst metaWriteArb of Arbiter2_SRAMBundleAW @[build/NutShell.fir.opt.mlir 33413:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 33421:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 33422:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_1 @[build/NutShell.fir.opt.mlir 33423:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 33431:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 33432:7]
    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33433:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 33438:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33439:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 33441:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 33442:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 33444:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 33445:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 33447:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 33448:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 33450:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 33451:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 33453:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 33455:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33458:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 33460:15]
    node _probe_T = and(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33462:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33465:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 33467:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 33470:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 33472:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33474:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33476:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33478:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33480:20]
    wire meta : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 33481:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33486:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33488:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33490:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33492:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 33494:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 33496:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 33498:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 33499:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 33500:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 33501:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33503:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33505:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33507:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33509:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 33511:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 33513:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 33515:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 33516:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 33517:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 33518:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33520:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33522:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33524:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33526:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 33528:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 33530:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 33532:21]
    wire _meta_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 33533:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 33534:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 33535:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 33537:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33539:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33541:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33543:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 33545:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33547:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 33548:9]
        skip @[build/NutShell.fir.opt.mlir 33549:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 33551:9]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 33554:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 33556:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33558:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33560:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33562:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33564:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 33565:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33568:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33570:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33572:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33574:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 33576:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 33578:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 33580:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 33581:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 33582:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 33583:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 33585:19]
    node _wordMask_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33587:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 33589:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 33591:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 33593:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 33595:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 33597:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 33599:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 33601:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 33603:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 33605:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 33607:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33611:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33613:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33615:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33617:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33619:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33621:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33623:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33625:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 33627:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 33629:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 33631:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 33633:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 33635:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 33637:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 33639:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 33642:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33644:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33646:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 33649:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33652:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 33654:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 33656:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 33657:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33659:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33661:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 33663:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 33664:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 33667:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 33669:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 33670:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 33677:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 33680:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 33682:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 33684:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 33686:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 33687:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 33689:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33691:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 33693:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 33695:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 33697:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 33698:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 33699:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 33700:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 33701:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 33702:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33710:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 33712:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33713:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33718:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33719:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33721:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 33722:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33724:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 33725:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33727:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 33728:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33730:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 33731:7]
    wire metaHitWriteBus_x8 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 33732:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 33736:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33738:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33740:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 33741:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 33742:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 33743:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 33744:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 33746:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33747:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 33749:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 33751:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 33752:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33754:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33757:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 33759:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 33760:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33762:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33764:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33765:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 33767:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 33770:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33772:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 33774:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 33776:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 33778:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33780:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 33782:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 33784:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 33785:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 33786:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 33789:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 33790:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 33799:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 33800:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33803:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33805:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33807:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33809:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 33810:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33813:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33815:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33817:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33819:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 33821:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 33823:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 33825:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 33826:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 33827:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 33828:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 33830:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 33831:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 33833:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 33834:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 33836:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 33840:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 33841:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 33843:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 33846:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 33847:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 33849:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 33851:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 33853:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 33855:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 33857:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 33858:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 33860:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 33866:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 33868:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 33870:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 33873:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 33876:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33878:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 33880:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 33882:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 33884:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 33886:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33888:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 33889:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 33891:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 33894:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 33895:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 33897:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33899:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 33901:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 33903:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 33905:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 33907:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 33909:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 33910:7]
    connect io.mmio.req.bits.wdata, io.in.bits.req.wdata @[build/NutShell.fir.opt.mlir 33911:7]
    connect io.mmio.req.bits.wmask, io.in.bits.req.wmask @[build/NutShell.fir.opt.mlir 33912:7]
    connect io.mmio.req.bits.cmd, io.in.bits.req.cmd @[build/NutShell.fir.opt.mlir 33913:7]
    connect io.mmio.req.bits.size, io.in.bits.req.size @[build/NutShell.fir.opt.mlir 33914:7]
    connect io.mmio.req.bits.addr, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33915:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33917:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 33920:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 33921:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33922:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33924:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33925:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 33926:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33928:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33931:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 33933:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 33935:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 33938:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 33940:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 33942:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 33945:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 33947:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 33948:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 33949:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 33950:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 33953:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 33955:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33957:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 33959:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 33961:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 33963:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 33964:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 33965:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33967:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 33969:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 33971:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33972:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 33973:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33975:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 33976:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33978:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33980:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 33982:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 33983:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 33984:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33987:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33990:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33993:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 33995:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 33996:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 33998:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34000:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 34002:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34004:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34006:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34008:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 34010:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 34012:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 34014:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 34016:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 34017:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 34018:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34020:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 34021:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34023:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34025:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 34027:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 34028:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 34029:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 34032:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 34035:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34037:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34039:9]
      when probe : @[build/NutShell.fir.opt.mlir 34040:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34042:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 34043:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34045:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 34046:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 34047:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 34051:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 34052:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 34054:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34056:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34058:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 34060:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 34062:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 34063:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 34066:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34068:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 34070:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 34071:13]
            node _state_T_1 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34073:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 34075:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34077:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 34079:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 34080:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 34086:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 34087:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 34089:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 34090:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 34092:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 34096:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 34097:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 34099:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 34100:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 34102:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 34106:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 34107:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34109:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 34111:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 34112:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34114:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34116:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 34118:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 34119:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34122:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 34124:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 34126:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 34128:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 34130:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 34131:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 34133:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 34137:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 34138:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34140:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 34141:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 34143:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 34144:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 34148:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 34149:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34151:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 34152:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34154:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34156:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34158:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 34160:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 34161:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 34163:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 34164:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 34167:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 34170:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 34171:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 34173:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 34178:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 34179:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34181:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 34182:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34184:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34186:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 34188:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 34189:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34192:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34194:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 34196:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 34197:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 34199:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 34203:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 34204:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34206:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 34207:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 34209:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 34213:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 34214:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34216:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 34218:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 34220:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 34221:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 34223:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 34235:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 34237:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 34239:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 34241:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 34243:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 34244:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34252:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34254:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 34256:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 34258:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 34259:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 34261:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 34262:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 34263:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 34264:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 34265:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 34268:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34271:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34274:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 34277:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34280:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34283:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 34284:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 34285:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 34286:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 34287:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34295:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34297:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 34299:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 34301:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 34303:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 34304:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34309:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34311:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 34313:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 34314:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34316:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 34317:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34318:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 34323:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34324:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 34326:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 34327:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 34329:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 34330:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 34332:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 34333:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 34335:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 34336:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 34337:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 34338:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 34339:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 34340:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 34343:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34346:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34349:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 34352:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34355:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34358:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 34359:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 34360:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 34361:7]
    node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 34363:31]
    connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 34364:7]
    node _io_out_bits_cmd_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34366:29]
    node _io_out_bits_cmd_T_1 = eq(_io_out_bits_cmd_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34368:31]
    node _io_out_bits_cmd_T_2 = bits(io.in.bits.req.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 34370:31]
    node _io_out_bits_cmd_T_3 = eq(_io_out_bits_cmd_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34372:31]
    node _io_out_bits_cmd_T_4 = and(_io_out_bits_cmd_T_1, _io_out_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 34374:31]
    node _io_out_bits_cmd_T_5 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34376:31]
    wire _io_out_bits_cmd_WIRE : UInt<3> @[build/NutShell.fir.opt.mlir 34377:32]
    invalidate _io_out_bits_cmd_WIRE @[build/NutShell.fir.opt.mlir 34379:7]
    node _io_out_bits_cmd_T_6 = mux(_io_out_bits_cmd_T_5, UInt<3>(5), _io_out_bits_cmd_WIRE) @[build/NutShell.fir.opt.mlir 34382:31]
    node _io_out_bits_cmd_T_7 = mux(_io_out_bits_cmd_T_4, UInt<3>(6), _io_out_bits_cmd_T_6) @[build/NutShell.fir.opt.mlir 34384:31]
    connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_7, 4) @[build/NutShell.fir.opt.mlir 34386:7]
    connect io.out.bits.user, io.in.bits.req.user @[build/NutShell.fir.opt.mlir 34387:7]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 34389:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34391:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34393:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34395:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34397:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 34399:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 34401:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 34403:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34405:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34407:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 34409:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34411:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 34413:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 34415:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 34417:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34419:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 34421:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 34423:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34425:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 34427:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34429:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34431:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 34433:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 34435:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 34437:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 34439:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 34441:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 34443:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 34444:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34446:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34448:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34450:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 34452:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 34454:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 34456:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34458:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 34460:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34462:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34464:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34466:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 34468:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 34470:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 34472:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 34474:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 34475:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34477:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34479:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 34481:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 34483:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34485:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 34487:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34489:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 34491:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 34492:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34494:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 34496:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34498:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34500:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 34502:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 34504:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 34506:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 34507:7]
    node _T_69 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34509:16]
    node _T_70 = eq(_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34511:16]
    node _T_71 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34513:16]
    node _T_72 = eq(_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34515:16]
    when _T_72 : @[build/NutShell.fir.opt.mlir 34516:7]
      node _T_73 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34518:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 34519:9]
        skip @[build/NutShell.fir.opt.mlir 34520:11]
      assert(clock, _T_70, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 34522:9]
    node _T_74 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34525:16]
    node _T_75 = eq(_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34527:16]
    node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34529:16]
    node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34531:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 34532:7]
      node _T_78 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34534:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 34535:9]
        skip @[build/NutShell.fir.opt.mlir 34536:11]
      assert(clock, _T_75, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 34538:9]
    node _T_79 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34541:16]
    node _T_80 = and(_T_79, io.flush) @[build/NutShell.fir.opt.mlir 34543:16]
    node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34545:16]
    node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34547:16]
    node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34549:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 34550:7]
      node _T_84 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34552:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 34553:9]
        skip @[build/NutShell.fir.opt.mlir 34554:11]
      assert(clock, _T_81, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 34556:9]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34558:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 34563:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34564:7]
    node _T_85 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 34566:16]
    connect _WIRE.byteOffset, _T_85 @[build/NutShell.fir.opt.mlir 34567:7]
    node _T_86 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 34569:16]
    connect _WIRE.wordIndex, _T_86 @[build/NutShell.fir.opt.mlir 34570:7]
    node _T_87 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 34572:16]
    connect _WIRE.index, _T_87 @[build/NutShell.fir.opt.mlir 34573:7]
    node _T_88 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 34575:16]
    connect _WIRE.tag, _T_88 @[build/NutShell.fir.opt.mlir 34576:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 34578:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 34580:13]
    node _T_89 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 34582:16]
    inst LogPerfHelper of LogPerfHelper_28 @[build/NutShell.fir.opt.mlir 34583:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 34584:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 34589:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 34590:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 34591:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 34592:7]
    node _T_90 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34594:16]
    when _T_90 : @[build/NutShell.fir.opt.mlir 34595:7]
      node _T_91 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34597:18]
      node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34599:18]
      when _T_92 : @[build/NutShell.fir.opt.mlir 34600:9]
        skip @[build/NutShell.fir.opt.mlir 34601:11]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34604:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34606:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 34607:9]
        skip @[build/NutShell.fir.opt.mlir 34608:11]
    node _T_95 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34612:16]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 34613:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34615:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 34617:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 34618:7]
    node _T_96 = and(_T_95, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34620:16]
    when _T_96 : @[build/NutShell.fir.opt.mlir 34621:7]
      node _T_97 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34623:18]
      node _T_98 = eq(_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34625:18]
      when _T_98 : @[build/NutShell.fir.opt.mlir 34626:9]
        skip @[build/NutShell.fir.opt.mlir 34627:11]
      node _T_99 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34630:18]
      node _T_100 = eq(_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34632:19]
      when _T_100 : @[build/NutShell.fir.opt.mlir 34633:9]
        skip @[build/NutShell.fir.opt.mlir 34634:11]
    node _T_101 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34638:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 34639:7]
      node _T_102 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34641:19]
      node _T_103 = eq(_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34643:19]
      when _T_103 : @[build/NutShell.fir.opt.mlir 34644:9]
        skip @[build/NutShell.fir.opt.mlir 34645:11]
      node _T_104 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34648:19]
      node _T_105 = eq(_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34650:19]
      when _T_105 : @[build/NutShell.fir.opt.mlir 34651:9]
        skip @[build/NutShell.fir.opt.mlir 34652:11]
    node _T_106 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34656:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 34657:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34659:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34661:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 34662:9]
        skip @[build/NutShell.fir.opt.mlir 34663:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34666:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34668:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 34669:9]
        skip @[build/NutShell.fir.opt.mlir 34670:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34674:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 34675:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34677:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34679:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 34680:9]
        skip @[build/NutShell.fir.opt.mlir 34681:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34684:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34686:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 34687:9]
        skip @[build/NutShell.fir.opt.mlir 34688:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 34692:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 34694:15]
    node _T_116 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 34696:17]
    node _T_117 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34698:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 34699:7]
      node _T_118 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34701:19]
      node _T_119 = eq(_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34703:19]
      when _T_119 : @[build/NutShell.fir.opt.mlir 34704:9]
        skip @[build/NutShell.fir.opt.mlir 34705:11]
      node _T_120 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34708:19]
      node _T_121 = eq(_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34710:19]
      when _T_121 : @[build/NutShell.fir.opt.mlir 34711:9]
        skip @[build/NutShell.fir.opt.mlir 34712:11]
    node _T_122 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34716:17]
    when _T_122 : @[build/NutShell.fir.opt.mlir 34717:7]
      node _T_123 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34719:19]
      node _T_124 = eq(_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34721:19]
      when _T_124 : @[build/NutShell.fir.opt.mlir 34722:9]
        skip @[build/NutShell.fir.opt.mlir 34723:11]
      node _T_125 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34726:19]
      node _T_126 = eq(_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34728:19]
      when _T_126 : @[build/NutShell.fir.opt.mlir 34729:9]
        skip @[build/NutShell.fir.opt.mlir 34730:11]
    node _T_127 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34734:17]
    node _T_128 = and(_T_127, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34736:17]
    when _T_128 : @[build/NutShell.fir.opt.mlir 34737:7]
      node _T_129 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34739:19]
      node _T_130 = eq(_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34741:19]
      when _T_130 : @[build/NutShell.fir.opt.mlir 34742:9]
        skip @[build/NutShell.fir.opt.mlir 34743:11]
      node _T_131 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34746:19]
      node _T_132 = eq(_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34748:19]
      when _T_132 : @[build/NutShell.fir.opt.mlir 34749:9]
        skip @[build/NutShell.fir.opt.mlir 34750:11]
    node _T_133 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 34754:17]
    node _T_134 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34756:17]
    node _T_135 = and(_T_133, _T_134) @[build/NutShell.fir.opt.mlir 34758:17]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34759:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 34764:18]
    connect _WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34765:7]
    node _T_136 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 34767:17]
    connect _WIRE_2.byteOffset, _T_136 @[build/NutShell.fir.opt.mlir 34768:7]
    node _T_137 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 34770:17]
    connect _WIRE_2.wordIndex, _T_137 @[build/NutShell.fir.opt.mlir 34771:7]
    node _T_138 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 34773:17]
    connect _WIRE_2.index, _T_138 @[build/NutShell.fir.opt.mlir 34774:7]
    node _T_139 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 34776:17]
    connect _WIRE_2.tag, _T_139 @[build/NutShell.fir.opt.mlir 34777:7]
    node _T_140 = and(_T_135, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34779:17]
    when _T_140 : @[build/NutShell.fir.opt.mlir 34780:7]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34782:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34784:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 34785:9]
        skip @[build/NutShell.fir.opt.mlir 34786:11]
      node _T_143 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34789:19]
      node _T_144 = eq(_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34791:19]
      when _T_144 : @[build/NutShell.fir.opt.mlir 34792:9]
        skip @[build/NutShell.fir.opt.mlir 34793:11]
    node _T_145 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34797:17]
    node _T_146 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34799:17]
    node _T_147 = and(_T_145, _T_146) @[build/NutShell.fir.opt.mlir 34801:17]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34802:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 34807:18]
    connect _WIRE_5, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34808:7]
    node _T_148 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 34810:17]
    connect _WIRE_4.byteOffset, _T_148 @[build/NutShell.fir.opt.mlir 34811:7]
    node _T_149 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 34813:17]
    connect _WIRE_4.wordIndex, _T_149 @[build/NutShell.fir.opt.mlir 34814:7]
    node _T_150 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 34816:17]
    connect _WIRE_4.index, _T_150 @[build/NutShell.fir.opt.mlir 34817:7]
    node _T_151 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 34819:17]
    connect _WIRE_4.tag, _T_151 @[build/NutShell.fir.opt.mlir 34820:7]
    node _T_152 = and(_T_147, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34822:17]
    when _T_152 : @[build/NutShell.fir.opt.mlir 34823:7]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34825:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34827:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 34828:9]
        skip @[build/NutShell.fir.opt.mlir 34829:11]
      node _T_155 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34832:19]
      node _T_156 = eq(_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34834:19]
      when _T_156 : @[build/NutShell.fir.opt.mlir 34835:9]
        skip @[build/NutShell.fir.opt.mlir 34836:11]
    node _T_157 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34840:17]
    node _T_158 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34842:17]
    node _T_159 = and(_T_157, _T_158) @[build/NutShell.fir.opt.mlir 34844:17]
    wire _WIRE_6 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34845:18]
    wire _WIRE_7 : UInt<32> @[build/NutShell.fir.opt.mlir 34850:18]
    connect _WIRE_7, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34851:7]
    node _T_160 = bits(_WIRE_7, 2, 0) @[build/NutShell.fir.opt.mlir 34853:17]
    connect _WIRE_6.byteOffset, _T_160 @[build/NutShell.fir.opt.mlir 34854:7]
    node _T_161 = bits(_WIRE_7, 5, 3) @[build/NutShell.fir.opt.mlir 34856:17]
    connect _WIRE_6.wordIndex, _T_161 @[build/NutShell.fir.opt.mlir 34857:7]
    node _T_162 = bits(_WIRE_7, 12, 6) @[build/NutShell.fir.opt.mlir 34859:17]
    connect _WIRE_6.index, _T_162 @[build/NutShell.fir.opt.mlir 34860:7]
    node _T_163 = bits(_WIRE_7, 31, 13) @[build/NutShell.fir.opt.mlir 34862:17]
    connect _WIRE_6.tag, _T_163 @[build/NutShell.fir.opt.mlir 34863:7]
    node _T_164 = and(_T_159, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34865:17]
    when _T_164 : @[build/NutShell.fir.opt.mlir 34866:7]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34868:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34870:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 34871:9]
        skip @[build/NutShell.fir.opt.mlir 34872:11]
      node _T_167 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34875:19]
      node _T_168 = eq(_T_167, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34877:19]
      when _T_168 : @[build/NutShell.fir.opt.mlir 34878:9]
        skip @[build/NutShell.fir.opt.mlir 34879:11]

  module SRAMTemplate_1 : @[build/NutShell.fir.opt.mlir 34883:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 34883:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 34883:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 34883:99]

    mem array : @[build/NutShell.fir.opt.mlir 34909:42]
      data-type => UInt<21>[4]
      depth => 128
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 34911:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34913:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 34915:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 34917:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 34919:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 34921:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34923:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 34925:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 34939:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34942:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 34943:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34944:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34946:22]
    regreset _resetSet : UInt<7>, clock, reset, UInt<7>(0) @[build/NutShell.fir.opt.mlir 34948:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 34949:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34951:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 34953:7]
      node wrap_wrap = eq(_resetSet, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 34955:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34957:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 34959:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 34960:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 34961:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 34963:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34965:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 34967:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 34968:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 34970:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34972:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 34974:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 34976:17]
    wire _wdataword_WIRE : UInt<21> @[build/NutShell.fir.opt.mlir 34977:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 21) @[build/NutShell.fir.opt.mlir 34980:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 34982:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 34984:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 34986:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34990:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 34992:18]
    wire wdata : UInt<21>[4] @[build/NutShell.fir.opt.mlir 34993:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 34998:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 34999:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 35000:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 35001:7]
    when wen : @[build/NutShell.fir.opt.mlir 35002:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 35004:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 35006:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 35008:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 35010:17]
      node _T_4 = or(setIdx, UInt<7>(0)) @[build/NutShell.fir.opt.mlir 35012:17]
      node _T_5 = bits(_T_4, 6, 0) @[build/NutShell.fir.opt.mlir 35014:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 35015:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35016:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35017:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35019:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35021:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35023:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35025:9]
      when _T : @[build/NutShell.fir.opt.mlir 35026:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35027:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 35028:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 35030:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35031:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 35032:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 35034:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35035:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 35036:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 35038:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35039:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 35040:11]
    wire _rdata_WIRE : UInt<7> @[build/NutShell.fir.opt.mlir 35043:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 35045:7]
    when realRen : @[build/NutShell.fir.opt.mlir 35046:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35047:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 35048:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 35049:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35050:9]
    wire rdata_0 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35052:18]
    wire _rdata_WIRE_1 : UInt<21> @[build/NutShell.fir.opt.mlir 35056:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 35057:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 35059:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 35060:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 35062:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 35063:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 20, 2) @[build/NutShell.fir.opt.mlir 35065:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 35066:7]
    wire rdata_1 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35067:18]
    wire _rdata_WIRE_2 : UInt<21> @[build/NutShell.fir.opt.mlir 35071:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 35072:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 35074:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 35075:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 35077:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 35078:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 20, 2) @[build/NutShell.fir.opt.mlir 35080:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 35081:7]
    wire rdata_2 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35082:18]
    wire _rdata_WIRE_3 : UInt<21> @[build/NutShell.fir.opt.mlir 35086:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 35087:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 35089:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 35090:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 35092:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 35093:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 20, 2) @[build/NutShell.fir.opt.mlir 35095:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 35096:7]
    wire rdata_3 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35097:18]
    wire _rdata_WIRE_4 : UInt<21> @[build/NutShell.fir.opt.mlir 35101:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 35102:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 35104:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 35105:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 35107:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 35108:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 20, 2) @[build/NutShell.fir.opt.mlir 35110:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 35111:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 35112:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 35129:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 35130:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 35131:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 35132:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 35133:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 35134:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 35135:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 35136:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 35137:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 35138:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 35139:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 35140:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 35141:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35143:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35145:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 35147:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 35148:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35150:7]

  module Arbiter1_SRAMBundleA : @[build/NutShell.fir.opt.mlir 35152:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35152:52]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35152:78]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 35152:105]

    connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35166:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35167:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35170:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35171:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35173:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 35175:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35176:7]

  module SRAMTemplateWithArbiter : @[build/NutShell.fir.opt.mlir 35178:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35178:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35178:81]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35178:108]

    inst ram of SRAMTemplate_1 @[build/NutShell.fir.opt.mlir 35187:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 35193:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 35194:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 35199:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 35202:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 35205:7]
    inst readArb of Arbiter1_SRAMBundleA @[build/NutShell.fir.opt.mlir 35206:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 35210:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 35211:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 35214:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 35217:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 35220:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 35223:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 35226:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 35229:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 35231:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35232:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 35233:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 35234:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35253:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35255:7]
    connect _WIRE[0].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35258:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35260:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35262:7]
    connect _WIRE[1].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35264:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35266:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35268:7]
    connect _WIRE[2].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35270:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35272:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35274:7]
    connect _WIRE[3].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35276:7]
    regreset r : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 35277:12]
    when REG : @[build/NutShell.fir.opt.mlir 35278:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35279:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 35282:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 35283:7]

  module SRAMTemplate_2 : @[build/NutShell.fir.opt.mlir 35285:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35285:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35285:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35285:99]

    mem array : @[build/NutShell.fir.opt.mlir 35309:42]
      data-type => UInt<64>[4]
      depth => 1024
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 35311:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35313:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 35315:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 35317:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 35319:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 35321:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35323:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 35325:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 35339:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35342:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 35343:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35344:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 35346:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35348:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 35350:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 35352:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 35353:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 35356:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 35358:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 35363:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 35365:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 35366:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 35371:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 35372:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 35373:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 35374:7]
    when wen : @[build/NutShell.fir.opt.mlir 35376:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 35378:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 35380:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 35382:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 35384:17]
      node _T_4 = or(setIdx, UInt<10>(0)) @[build/NutShell.fir.opt.mlir 35386:17]
      node _T_5 = bits(_T_4, 9, 0) @[build/NutShell.fir.opt.mlir 35388:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 35389:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35390:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35391:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35393:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35395:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35397:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35399:9]
      when _T : @[build/NutShell.fir.opt.mlir 35400:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35401:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 35402:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 35404:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35405:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 35406:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 35408:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35409:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 35410:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 35412:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35413:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 35414:11]
    wire _rdata_WIRE : UInt<10> @[build/NutShell.fir.opt.mlir 35417:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 35419:7]
    when realRen : @[build/NutShell.fir.opt.mlir 35420:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35421:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 35422:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 35423:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35424:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35426:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 35428:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 35429:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 35431:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 35432:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35433:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 35435:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 35436:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 35438:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 35439:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35440:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 35442:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 35443:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 35445:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 35446:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35447:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 35449:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 35450:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 35452:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 35453:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35454:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 35463:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 35464:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 35465:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 35466:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 35467:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35469:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35471:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 35473:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 35474:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35476:7]

  module Arbiter2_SRAMBundleA : @[build/NutShell.fir.opt.mlir 35478:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35478:52]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35478:78]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 35478:105]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35495:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 35496:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 35498:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35500:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35501:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35504:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35506:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35507:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 35509:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 35510:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35512:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 35514:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35515:7]

  module SRAMTemplateWithArbiter_1 : @[build/NutShell.fir.opt.mlir 35517:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35517:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35517:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35517:110]

    inst ram of SRAMTemplate_2 @[build/NutShell.fir.opt.mlir 35532:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 35538:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 35539:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 35544:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 35547:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 35550:7]
    inst readArb of Arbiter2_SRAMBundleA @[build/NutShell.fir.opt.mlir 35551:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 35556:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 35557:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 35560:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 35563:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 35566:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 35569:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 35572:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 35575:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 35578:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 35581:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 35584:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 35586:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35587:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 35588:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35589:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35600:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35602:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35604:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35606:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 35607:12]
    when REG : @[build/NutShell.fir.opt.mlir 35608:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35609:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 35612:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 35613:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 35615:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35616:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 35617:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35618:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35628:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35630:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35632:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35634:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 35635:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 35636:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35637:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 35640:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 35641:7]

  module Arbiter1_SimpleBusReqBundle : @[build/NutShell.fir.opt.mlir 35643:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35643:59]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35643:85]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 35643:112]

    connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35657:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35658:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35661:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35662:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35664:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 35666:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35667:7]

  extmodule LogPerfHelper_29 : @[build/NutShell.fir.opt.mlir 35669:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 35669:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 35669:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 35669:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 35669:141]
    defname = LogPerfHelper

  module Cache : @[build/NutShell.fir.opt.mlir 35670:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35670:37]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35670:63]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 35670:90]

    inst s1 of CacheStage1 @[build/NutShell.fir.opt.mlir 35701:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 35738:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 35739:7]
    inst s2 of CacheStage2 @[build/NutShell.fir.opt.mlir 35740:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 35802:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 35803:7]
    inst s3 of CacheStage3 @[build/NutShell.fir.opt.mlir 35804:38]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 35894:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 35895:7]
    inst metaArray of SRAMTemplateWithArbiter @[build/NutShell.fir.opt.mlir 35896:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 35900:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 35901:7]
    inst dataArray of SRAMTemplateWithArbiter_1 @[build/NutShell.fir.opt.mlir 35902:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 35907:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 35908:7]
    wire flushICache : UInt<1> @[build/NutShell.fir.opt.mlir 35909:22]
    connect flushICache, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35912:7]
    node _metaArray_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 35914:29]
    node _metaArray_reset_T_1 = or(_metaArray_reset_T, flushICache) @[build/NutShell.fir.opt.mlir 35916:31]
    connect metaArray.reset, _metaArray_reset_T_1 @[build/NutShell.fir.opt.mlir 35918:7]
    inst arb of Arbiter1_SimpleBusReqBundle @[build/NutShell.fir.opt.mlir 35919:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 35923:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 35924:7]
    connect io.in.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 35927:7]
    connect arb.io.in[0].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 35930:7]
    connect arb.io.in[0].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 35933:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 35936:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 35939:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 35942:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 35944:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 35946:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35947:16]
    when _T : @[build/NutShell.fir.opt.mlir 35948:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35950:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 35953:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 35955:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35957:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 35959:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35961:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 35963:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 35965:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, clock @[build/NutShell.fir.opt.mlir 35966:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 35974:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 35975:9]
    connect s2.io.in.bits.req.user, s2_io_in_bits_r.req.user @[build/NutShell.fir.opt.mlir 35977:7]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 35978:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 35979:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 35980:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 35981:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 35982:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 35983:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 35985:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35986:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 35987:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35989:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 35992:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 35993:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35995:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 35997:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35999:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 36001:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 36003:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 36004:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 36047:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 36048:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 36050:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 36051:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 36052:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 36053:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 36054:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 36055:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 36056:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 36057:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 36058:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 36059:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 36060:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 36061:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 36062:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 36063:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 36064:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 36065:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 36066:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 36067:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 36068:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 36069:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 36070:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 36071:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 36072:7]
    connect s3.io.in.bits.req.user, s3_io_in_bits_r.req.user @[build/NutShell.fir.opt.mlir 36073:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 36074:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 36075:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 36076:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 36077:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 36078:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 36079:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 36080:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 36081:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 36082:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 36084:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 36085:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 36088:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 36091:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 36094:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 36095:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 36096:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 36097:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 36100:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 36103:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 36106:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 36107:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 36108:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 36109:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36111:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36113:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 36115:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 36116:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 36119:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 36121:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 36123:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 36125:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 36126:7]
    connect io.out.coh.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36128:7]
    invalidate io.out.coh.resp.bits.rdata @[build/NutShell.fir.opt.mlir 36130:7]
    invalidate io.out.coh.resp.bits.cmd @[build/NutShell.fir.opt.mlir 36132:7]
    invalidate io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 36134:7]
    connect io.out.coh.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36136:7]
    connect s3.io.cohResp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36138:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 36143:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 36146:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 36149:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 36152:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 36157:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 36160:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 36163:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 36166:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 36171:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 36174:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 36177:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 36180:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 36185:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36188:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 36191:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 36196:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36199:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 36202:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 36203:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 36204:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 36205:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 36206:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 36207:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 36208:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 36209:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 36210:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 36211:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 36212:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 36213:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 36214:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 36215:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 36216:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 36217:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 36218:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 36219:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 36220:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 36221:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36222:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 36223:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 36224:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 36225:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 36226:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 36227:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 36228:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36229:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 36230:7]
    inst LogPerfHelper of LogPerfHelper_29 @[build/NutShell.fir.opt.mlir 36231:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 36232:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 36237:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 36238:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 36239:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 36240:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36242:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 36243:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36245:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36247:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 36248:9]
        skip @[build/NutShell.fir.opt.mlir 36249:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36252:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36254:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 36255:9]
        skip @[build/NutShell.fir.opt.mlir 36256:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36260:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 36261:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36263:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36265:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 36266:9]
        skip @[build/NutShell.fir.opt.mlir 36267:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36270:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36272:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 36273:9]
        skip @[build/NutShell.fir.opt.mlir 36274:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 36277:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36279:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 36280:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36282:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36284:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 36285:11]
          skip @[build/NutShell.fir.opt.mlir 36286:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36289:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36291:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 36292:11]
          skip @[build/NutShell.fir.opt.mlir 36293:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 36297:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36299:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 36300:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36302:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36304:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 36305:11]
          skip @[build/NutShell.fir.opt.mlir 36306:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36309:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36311:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 36312:11]
          skip @[build/NutShell.fir.opt.mlir 36313:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 36317:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36319:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 36320:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36322:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36324:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 36325:11]
          skip @[build/NutShell.fir.opt.mlir 36326:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36329:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36331:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 36332:11]
          skip @[build/NutShell.fir.opt.mlir 36333:13]

  extmodule LogPerfHelper_30 : @[build/NutShell.fir.opt.mlir 36338:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 36338:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 36338:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 36338:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 36338:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_31 : @[build/NutShell.fir.opt.mlir 36339:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 36339:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 36339:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 36339:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 36339:141]
    defname = LogPerfHelper

  module EmbeddedTLBExec_1 : @[build/NutShell.fir.opt.mlir 36340:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 36340:49]
    input reset : Reset @[build/NutShell.fir.opt.mlir 36340:75]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip md : UInt<121>[4], mdWrite : { wen : UInt<1>, windex : UInt<4>, waymask : UInt<4>, wdata : UInt<121> }, flip mdReady : UInt<1>, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, flip satp : UInt<64>, pf : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, ipf : UInt<1>, isFinish : UInt<1> } @[build/NutShell.fir.opt.mlir 36340:102]

    wire _vpn_WIRE : { vpn : UInt<27>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 36389:20]
    wire _vpn_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 36392:22]
    connect _vpn_WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 36393:7]
    node _vpn_T = bits(_vpn_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 36395:17]
    connect _vpn_WIRE.off, _vpn_T @[build/NutShell.fir.opt.mlir 36396:7]
    node _vpn_T_1 = bits(_vpn_WIRE_1, 38, 12) @[build/NutShell.fir.opt.mlir 36398:19]
    connect _vpn_WIRE.vpn, _vpn_T_1 @[build/NutShell.fir.opt.mlir 36399:7]
    wire vpn : { vpn2 : UInt<9>, vpn1 : UInt<9>, vpn0 : UInt<9> } @[build/NutShell.fir.opt.mlir 36400:14]
    wire _vpn_WIRE_2 : UInt<27> @[build/NutShell.fir.opt.mlir 36404:22]
    connect _vpn_WIRE_2, _vpn_WIRE.vpn @[build/NutShell.fir.opt.mlir 36405:7]
    node _vpn_T_2 = bits(_vpn_WIRE_2, 8, 0) @[build/NutShell.fir.opt.mlir 36407:19]
    connect vpn.vpn0, _vpn_T_2 @[build/NutShell.fir.opt.mlir 36408:7]
    node _vpn_T_3 = bits(_vpn_WIRE_2, 17, 9) @[build/NutShell.fir.opt.mlir 36410:19]
    connect vpn.vpn1, _vpn_T_3 @[build/NutShell.fir.opt.mlir 36411:7]
    node _vpn_T_4 = bits(_vpn_WIRE_2, 26, 18) @[build/NutShell.fir.opt.mlir 36413:19]
    connect vpn.vpn2, _vpn_T_4 @[build/NutShell.fir.opt.mlir 36414:7]
    wire satp : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 36415:15]
    wire _satp_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 36420:21]
    connect _satp_WIRE, io.satp @[build/NutShell.fir.opt.mlir 36421:7]
    node _satp_T = bits(_satp_WIRE, 19, 0) @[build/NutShell.fir.opt.mlir 36423:18]
    connect satp.ppn, _satp_T @[build/NutShell.fir.opt.mlir 36424:7]
    node _satp_T_1 = bits(_satp_WIRE, 43, 20) @[build/NutShell.fir.opt.mlir 36426:20]
    connect satp.res, _satp_T_1 @[build/NutShell.fir.opt.mlir 36427:7]
    node _satp_T_2 = bits(_satp_WIRE, 59, 44) @[build/NutShell.fir.opt.mlir 36429:20]
    connect satp.asid, _satp_T_2 @[build/NutShell.fir.opt.mlir 36430:7]
    node _satp_T_3 = bits(_satp_WIRE, 63, 60) @[build/NutShell.fir.opt.mlir 36432:20]
    connect satp.mode, _satp_T_3 @[build/NutShell.fir.opt.mlir 36433:7]
    connect io.pf.loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36436:7]
    connect io.pf.storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36438:7]
    connect io.pf.addr, io.in.bits.addr @[build/NutShell.fir.opt.mlir 36439:7]
    wire _hitVec_WIRE : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36440:23]
    wire _hitVec_WIRE_1 : UInt<121> @[build/NutShell.fir.opt.mlir 36447:25]
    connect _hitVec_WIRE_1, io.md[0] @[build/NutShell.fir.opt.mlir 36448:7]
    node _hitVec_T = bits(_hitVec_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 36450:20]
    connect _hitVec_WIRE.pteaddr, _hitVec_T @[build/NutShell.fir.opt.mlir 36451:7]
    node _hitVec_T_1 = bits(_hitVec_WIRE_1, 51, 32) @[build/NutShell.fir.opt.mlir 36453:22]
    connect _hitVec_WIRE.ppn, _hitVec_T_1 @[build/NutShell.fir.opt.mlir 36454:7]
    node _hitVec_T_2 = bits(_hitVec_WIRE_1, 59, 52) @[build/NutShell.fir.opt.mlir 36456:22]
    connect _hitVec_WIRE.flag, _hitVec_T_2 @[build/NutShell.fir.opt.mlir 36457:7]
    node _hitVec_T_3 = bits(_hitVec_WIRE_1, 77, 60) @[build/NutShell.fir.opt.mlir 36459:22]
    connect _hitVec_WIRE.mask, _hitVec_T_3 @[build/NutShell.fir.opt.mlir 36460:7]
    node _hitVec_T_4 = bits(_hitVec_WIRE_1, 93, 78) @[build/NutShell.fir.opt.mlir 36462:22]
    connect _hitVec_WIRE.asid, _hitVec_T_4 @[build/NutShell.fir.opt.mlir 36463:7]
    node _hitVec_T_5 = bits(_hitVec_WIRE_1, 120, 94) @[build/NutShell.fir.opt.mlir 36465:22]
    connect _hitVec_WIRE.vpn, _hitVec_T_5 @[build/NutShell.fir.opt.mlir 36466:7]
    wire _hitVec_WIRE_2 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36467:25]
    wire _hitVec_WIRE_3 : UInt<8> @[build/NutShell.fir.opt.mlir 36476:25]
    connect _hitVec_WIRE_3, _hitVec_WIRE.flag @[build/NutShell.fir.opt.mlir 36477:7]
    node _hitVec_T_6 = bits(_hitVec_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 36479:22]
    connect _hitVec_WIRE_2.v, _hitVec_T_6 @[build/NutShell.fir.opt.mlir 36480:7]
    node _hitVec_T_7 = bits(_hitVec_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 36482:22]
    connect _hitVec_WIRE_2.r, _hitVec_T_7 @[build/NutShell.fir.opt.mlir 36483:7]
    node _hitVec_T_8 = bits(_hitVec_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 36485:22]
    connect _hitVec_WIRE_2.w, _hitVec_T_8 @[build/NutShell.fir.opt.mlir 36486:7]
    node _hitVec_T_9 = bits(_hitVec_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 36488:22]
    connect _hitVec_WIRE_2.x, _hitVec_T_9 @[build/NutShell.fir.opt.mlir 36489:7]
    node _hitVec_T_10 = bits(_hitVec_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 36491:23]
    connect _hitVec_WIRE_2.u, _hitVec_T_10 @[build/NutShell.fir.opt.mlir 36492:7]
    node _hitVec_T_11 = bits(_hitVec_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 36494:23]
    connect _hitVec_WIRE_2.g, _hitVec_T_11 @[build/NutShell.fir.opt.mlir 36495:7]
    node _hitVec_T_12 = bits(_hitVec_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 36497:23]
    connect _hitVec_WIRE_2.a, _hitVec_T_12 @[build/NutShell.fir.opt.mlir 36498:7]
    node _hitVec_T_13 = bits(_hitVec_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 36500:23]
    connect _hitVec_WIRE_2.d, _hitVec_T_13 @[build/NutShell.fir.opt.mlir 36501:7]
    wire _hitVec_WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36502:25]
    wire _hitVec_WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 36509:25]
    connect _hitVec_WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 36510:7]
    node _hitVec_T_14 = bits(_hitVec_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 36512:23]
    connect _hitVec_WIRE_4.pteaddr, _hitVec_T_14 @[build/NutShell.fir.opt.mlir 36513:7]
    node _hitVec_T_15 = bits(_hitVec_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 36515:23]
    connect _hitVec_WIRE_4.ppn, _hitVec_T_15 @[build/NutShell.fir.opt.mlir 36516:7]
    node _hitVec_T_16 = bits(_hitVec_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 36518:23]
    connect _hitVec_WIRE_4.flag, _hitVec_T_16 @[build/NutShell.fir.opt.mlir 36519:7]
    node _hitVec_T_17 = bits(_hitVec_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 36521:23]
    connect _hitVec_WIRE_4.mask, _hitVec_T_17 @[build/NutShell.fir.opt.mlir 36522:7]
    node _hitVec_T_18 = bits(_hitVec_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 36524:23]
    connect _hitVec_WIRE_4.asid, _hitVec_T_18 @[build/NutShell.fir.opt.mlir 36525:7]
    node _hitVec_T_19 = bits(_hitVec_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 36527:23]
    connect _hitVec_WIRE_4.vpn, _hitVec_T_19 @[build/NutShell.fir.opt.mlir 36528:7]
    node _hitVec_T_20 = eq(_hitVec_WIRE_4.asid, satp.asid) @[build/NutShell.fir.opt.mlir 36530:23]
    node _hitVec_T_21 = and(_hitVec_WIRE_2.v, _hitVec_T_20) @[build/NutShell.fir.opt.mlir 36532:23]
    wire _hitVec_WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36533:25]
    wire _hitVec_WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 36540:25]
    connect _hitVec_WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 36541:7]
    node _hitVec_T_22 = bits(_hitVec_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 36543:23]
    connect _hitVec_WIRE_6.pteaddr, _hitVec_T_22 @[build/NutShell.fir.opt.mlir 36544:7]
    node _hitVec_T_23 = bits(_hitVec_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 36546:23]
    connect _hitVec_WIRE_6.ppn, _hitVec_T_23 @[build/NutShell.fir.opt.mlir 36547:7]
    node _hitVec_T_24 = bits(_hitVec_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 36549:23]
    connect _hitVec_WIRE_6.flag, _hitVec_T_24 @[build/NutShell.fir.opt.mlir 36550:7]
    node _hitVec_T_25 = bits(_hitVec_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 36552:23]
    connect _hitVec_WIRE_6.mask, _hitVec_T_25 @[build/NutShell.fir.opt.mlir 36553:7]
    node _hitVec_T_26 = bits(_hitVec_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 36555:23]
    connect _hitVec_WIRE_6.asid, _hitVec_T_26 @[build/NutShell.fir.opt.mlir 36556:7]
    node _hitVec_T_27 = bits(_hitVec_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 36558:23]
    connect _hitVec_WIRE_6.vpn, _hitVec_T_27 @[build/NutShell.fir.opt.mlir 36559:7]
    wire _hitVec_WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36560:25]
    wire _hitVec_WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 36567:25]
    connect _hitVec_WIRE_9, io.md[0] @[build/NutShell.fir.opt.mlir 36568:7]
    node _hitVec_T_28 = bits(_hitVec_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 36570:23]
    connect _hitVec_WIRE_8.pteaddr, _hitVec_T_28 @[build/NutShell.fir.opt.mlir 36571:7]
    node _hitVec_T_29 = bits(_hitVec_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 36573:23]
    connect _hitVec_WIRE_8.ppn, _hitVec_T_29 @[build/NutShell.fir.opt.mlir 36574:7]
    node _hitVec_T_30 = bits(_hitVec_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 36576:23]
    connect _hitVec_WIRE_8.flag, _hitVec_T_30 @[build/NutShell.fir.opt.mlir 36577:7]
    node _hitVec_T_31 = bits(_hitVec_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 36579:23]
    connect _hitVec_WIRE_8.mask, _hitVec_T_31 @[build/NutShell.fir.opt.mlir 36580:7]
    node _hitVec_T_32 = bits(_hitVec_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 36582:23]
    connect _hitVec_WIRE_8.asid, _hitVec_T_32 @[build/NutShell.fir.opt.mlir 36583:7]
    node _hitVec_T_33 = bits(_hitVec_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 36585:23]
    connect _hitVec_WIRE_8.vpn, _hitVec_T_33 @[build/NutShell.fir.opt.mlir 36586:7]
    node hitVec_hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 36588:20]
    node _hitVec_T_34 = cat(hitVec_hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 36590:23]
    node _hitVec_T_35 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 36593:23]
    node _hitVec_T_36 = and(_hitVec_T_35, _hitVec_WIRE_8.vpn) @[build/NutShell.fir.opt.mlir 36595:23]
    node _hitVec_T_37 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 36597:23]
    node _hitVec_T_38 = and(_hitVec_T_37, _hitVec_T_34) @[build/NutShell.fir.opt.mlir 36599:23]
    node _hitVec_T_39 = eq(_hitVec_T_36, _hitVec_T_38) @[build/NutShell.fir.opt.mlir 36601:23]
    node _hitVec_T_40 = and(_hitVec_T_21, _hitVec_T_39) @[build/NutShell.fir.opt.mlir 36603:23]
    wire _hitVec_WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36604:26]
    wire _hitVec_WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 36611:26]
    connect _hitVec_WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 36612:7]
    node _hitVec_T_41 = bits(_hitVec_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 36614:23]
    connect _hitVec_WIRE_10.pteaddr, _hitVec_T_41 @[build/NutShell.fir.opt.mlir 36615:7]
    node _hitVec_T_42 = bits(_hitVec_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 36617:23]
    connect _hitVec_WIRE_10.ppn, _hitVec_T_42 @[build/NutShell.fir.opt.mlir 36618:7]
    node _hitVec_T_43 = bits(_hitVec_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 36620:23]
    connect _hitVec_WIRE_10.flag, _hitVec_T_43 @[build/NutShell.fir.opt.mlir 36621:7]
    node _hitVec_T_44 = bits(_hitVec_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 36623:23]
    connect _hitVec_WIRE_10.mask, _hitVec_T_44 @[build/NutShell.fir.opt.mlir 36624:7]
    node _hitVec_T_45 = bits(_hitVec_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 36626:23]
    connect _hitVec_WIRE_10.asid, _hitVec_T_45 @[build/NutShell.fir.opt.mlir 36627:7]
    node _hitVec_T_46 = bits(_hitVec_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 36629:23]
    connect _hitVec_WIRE_10.vpn, _hitVec_T_46 @[build/NutShell.fir.opt.mlir 36630:7]
    wire _hitVec_WIRE_12 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36631:26]
    wire _hitVec_WIRE_13 : UInt<8> @[build/NutShell.fir.opt.mlir 36640:26]
    connect _hitVec_WIRE_13, _hitVec_WIRE_10.flag @[build/NutShell.fir.opt.mlir 36641:7]
    node _hitVec_T_47 = bits(_hitVec_WIRE_13, 0, 0) @[build/NutShell.fir.opt.mlir 36643:23]
    connect _hitVec_WIRE_12.v, _hitVec_T_47 @[build/NutShell.fir.opt.mlir 36644:7]
    node _hitVec_T_48 = bits(_hitVec_WIRE_13, 1, 1) @[build/NutShell.fir.opt.mlir 36646:23]
    connect _hitVec_WIRE_12.r, _hitVec_T_48 @[build/NutShell.fir.opt.mlir 36647:7]
    node _hitVec_T_49 = bits(_hitVec_WIRE_13, 2, 2) @[build/NutShell.fir.opt.mlir 36649:23]
    connect _hitVec_WIRE_12.w, _hitVec_T_49 @[build/NutShell.fir.opt.mlir 36650:7]
    node _hitVec_T_50 = bits(_hitVec_WIRE_13, 3, 3) @[build/NutShell.fir.opt.mlir 36652:23]
    connect _hitVec_WIRE_12.x, _hitVec_T_50 @[build/NutShell.fir.opt.mlir 36653:7]
    node _hitVec_T_51 = bits(_hitVec_WIRE_13, 4, 4) @[build/NutShell.fir.opt.mlir 36655:23]
    connect _hitVec_WIRE_12.u, _hitVec_T_51 @[build/NutShell.fir.opt.mlir 36656:7]
    node _hitVec_T_52 = bits(_hitVec_WIRE_13, 5, 5) @[build/NutShell.fir.opt.mlir 36658:23]
    connect _hitVec_WIRE_12.g, _hitVec_T_52 @[build/NutShell.fir.opt.mlir 36659:7]
    node _hitVec_T_53 = bits(_hitVec_WIRE_13, 6, 6) @[build/NutShell.fir.opt.mlir 36661:23]
    connect _hitVec_WIRE_12.a, _hitVec_T_53 @[build/NutShell.fir.opt.mlir 36662:7]
    node _hitVec_T_54 = bits(_hitVec_WIRE_13, 7, 7) @[build/NutShell.fir.opt.mlir 36664:23]
    connect _hitVec_WIRE_12.d, _hitVec_T_54 @[build/NutShell.fir.opt.mlir 36665:7]
    wire _hitVec_WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36666:26]
    wire _hitVec_WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 36673:26]
    connect _hitVec_WIRE_15, io.md[1] @[build/NutShell.fir.opt.mlir 36674:7]
    node _hitVec_T_55 = bits(_hitVec_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 36676:23]
    connect _hitVec_WIRE_14.pteaddr, _hitVec_T_55 @[build/NutShell.fir.opt.mlir 36677:7]
    node _hitVec_T_56 = bits(_hitVec_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 36679:23]
    connect _hitVec_WIRE_14.ppn, _hitVec_T_56 @[build/NutShell.fir.opt.mlir 36680:7]
    node _hitVec_T_57 = bits(_hitVec_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 36682:23]
    connect _hitVec_WIRE_14.flag, _hitVec_T_57 @[build/NutShell.fir.opt.mlir 36683:7]
    node _hitVec_T_58 = bits(_hitVec_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 36685:23]
    connect _hitVec_WIRE_14.mask, _hitVec_T_58 @[build/NutShell.fir.opt.mlir 36686:7]
    node _hitVec_T_59 = bits(_hitVec_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 36688:23]
    connect _hitVec_WIRE_14.asid, _hitVec_T_59 @[build/NutShell.fir.opt.mlir 36689:7]
    node _hitVec_T_60 = bits(_hitVec_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 36691:23]
    connect _hitVec_WIRE_14.vpn, _hitVec_T_60 @[build/NutShell.fir.opt.mlir 36692:7]
    node _hitVec_T_61 = eq(_hitVec_WIRE_14.asid, satp.asid) @[build/NutShell.fir.opt.mlir 36694:23]
    node _hitVec_T_62 = and(_hitVec_WIRE_12.v, _hitVec_T_61) @[build/NutShell.fir.opt.mlir 36696:23]
    wire _hitVec_WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36697:26]
    wire _hitVec_WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 36704:26]
    connect _hitVec_WIRE_17, io.md[1] @[build/NutShell.fir.opt.mlir 36705:7]
    node _hitVec_T_63 = bits(_hitVec_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 36707:23]
    connect _hitVec_WIRE_16.pteaddr, _hitVec_T_63 @[build/NutShell.fir.opt.mlir 36708:7]
    node _hitVec_T_64 = bits(_hitVec_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 36710:23]
    connect _hitVec_WIRE_16.ppn, _hitVec_T_64 @[build/NutShell.fir.opt.mlir 36711:7]
    node _hitVec_T_65 = bits(_hitVec_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 36713:23]
    connect _hitVec_WIRE_16.flag, _hitVec_T_65 @[build/NutShell.fir.opt.mlir 36714:7]
    node _hitVec_T_66 = bits(_hitVec_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 36716:23]
    connect _hitVec_WIRE_16.mask, _hitVec_T_66 @[build/NutShell.fir.opt.mlir 36717:7]
    node _hitVec_T_67 = bits(_hitVec_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 36719:23]
    connect _hitVec_WIRE_16.asid, _hitVec_T_67 @[build/NutShell.fir.opt.mlir 36720:7]
    node _hitVec_T_68 = bits(_hitVec_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 36722:23]
    connect _hitVec_WIRE_16.vpn, _hitVec_T_68 @[build/NutShell.fir.opt.mlir 36723:7]
    wire _hitVec_WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36724:26]
    wire _hitVec_WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 36731:26]
    connect _hitVec_WIRE_19, io.md[1] @[build/NutShell.fir.opt.mlir 36732:7]
    node _hitVec_T_69 = bits(_hitVec_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 36734:23]
    connect _hitVec_WIRE_18.pteaddr, _hitVec_T_69 @[build/NutShell.fir.opt.mlir 36735:7]
    node _hitVec_T_70 = bits(_hitVec_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 36737:23]
    connect _hitVec_WIRE_18.ppn, _hitVec_T_70 @[build/NutShell.fir.opt.mlir 36738:7]
    node _hitVec_T_71 = bits(_hitVec_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 36740:23]
    connect _hitVec_WIRE_18.flag, _hitVec_T_71 @[build/NutShell.fir.opt.mlir 36741:7]
    node _hitVec_T_72 = bits(_hitVec_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 36743:23]
    connect _hitVec_WIRE_18.mask, _hitVec_T_72 @[build/NutShell.fir.opt.mlir 36744:7]
    node _hitVec_T_73 = bits(_hitVec_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 36746:23]
    connect _hitVec_WIRE_18.asid, _hitVec_T_73 @[build/NutShell.fir.opt.mlir 36747:7]
    node _hitVec_T_74 = bits(_hitVec_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 36749:23]
    connect _hitVec_WIRE_18.vpn, _hitVec_T_74 @[build/NutShell.fir.opt.mlir 36750:7]
    node hitVec_hi_1 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 36752:22]
    node _hitVec_T_75 = cat(hitVec_hi_1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 36754:23]
    node _hitVec_T_76 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 36756:23]
    node _hitVec_T_77 = and(_hitVec_T_76, _hitVec_WIRE_18.vpn) @[build/NutShell.fir.opt.mlir 36758:23]
    node _hitVec_T_78 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 36760:23]
    node _hitVec_T_79 = and(_hitVec_T_78, _hitVec_T_75) @[build/NutShell.fir.opt.mlir 36762:23]
    node _hitVec_T_80 = eq(_hitVec_T_77, _hitVec_T_79) @[build/NutShell.fir.opt.mlir 36764:23]
    node _hitVec_T_81 = and(_hitVec_T_62, _hitVec_T_80) @[build/NutShell.fir.opt.mlir 36766:23]
    wire _hitVec_WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36767:26]
    wire _hitVec_WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 36774:26]
    connect _hitVec_WIRE_21, io.md[2] @[build/NutShell.fir.opt.mlir 36775:7]
    node _hitVec_T_82 = bits(_hitVec_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 36777:23]
    connect _hitVec_WIRE_20.pteaddr, _hitVec_T_82 @[build/NutShell.fir.opt.mlir 36778:7]
    node _hitVec_T_83 = bits(_hitVec_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 36780:23]
    connect _hitVec_WIRE_20.ppn, _hitVec_T_83 @[build/NutShell.fir.opt.mlir 36781:7]
    node _hitVec_T_84 = bits(_hitVec_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 36783:23]
    connect _hitVec_WIRE_20.flag, _hitVec_T_84 @[build/NutShell.fir.opt.mlir 36784:7]
    node _hitVec_T_85 = bits(_hitVec_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 36786:23]
    connect _hitVec_WIRE_20.mask, _hitVec_T_85 @[build/NutShell.fir.opt.mlir 36787:7]
    node _hitVec_T_86 = bits(_hitVec_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 36789:23]
    connect _hitVec_WIRE_20.asid, _hitVec_T_86 @[build/NutShell.fir.opt.mlir 36790:7]
    node _hitVec_T_87 = bits(_hitVec_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 36792:23]
    connect _hitVec_WIRE_20.vpn, _hitVec_T_87 @[build/NutShell.fir.opt.mlir 36793:7]
    wire _hitVec_WIRE_22 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36794:26]
    wire _hitVec_WIRE_23 : UInt<8> @[build/NutShell.fir.opt.mlir 36803:26]
    connect _hitVec_WIRE_23, _hitVec_WIRE_20.flag @[build/NutShell.fir.opt.mlir 36804:7]
    node _hitVec_T_88 = bits(_hitVec_WIRE_23, 0, 0) @[build/NutShell.fir.opt.mlir 36806:23]
    connect _hitVec_WIRE_22.v, _hitVec_T_88 @[build/NutShell.fir.opt.mlir 36807:7]
    node _hitVec_T_89 = bits(_hitVec_WIRE_23, 1, 1) @[build/NutShell.fir.opt.mlir 36809:23]
    connect _hitVec_WIRE_22.r, _hitVec_T_89 @[build/NutShell.fir.opt.mlir 36810:7]
    node _hitVec_T_90 = bits(_hitVec_WIRE_23, 2, 2) @[build/NutShell.fir.opt.mlir 36812:23]
    connect _hitVec_WIRE_22.w, _hitVec_T_90 @[build/NutShell.fir.opt.mlir 36813:7]
    node _hitVec_T_91 = bits(_hitVec_WIRE_23, 3, 3) @[build/NutShell.fir.opt.mlir 36815:23]
    connect _hitVec_WIRE_22.x, _hitVec_T_91 @[build/NutShell.fir.opt.mlir 36816:7]
    node _hitVec_T_92 = bits(_hitVec_WIRE_23, 4, 4) @[build/NutShell.fir.opt.mlir 36818:23]
    connect _hitVec_WIRE_22.u, _hitVec_T_92 @[build/NutShell.fir.opt.mlir 36819:7]
    node _hitVec_T_93 = bits(_hitVec_WIRE_23, 5, 5) @[build/NutShell.fir.opt.mlir 36821:23]
    connect _hitVec_WIRE_22.g, _hitVec_T_93 @[build/NutShell.fir.opt.mlir 36822:7]
    node _hitVec_T_94 = bits(_hitVec_WIRE_23, 6, 6) @[build/NutShell.fir.opt.mlir 36824:23]
    connect _hitVec_WIRE_22.a, _hitVec_T_94 @[build/NutShell.fir.opt.mlir 36825:7]
    node _hitVec_T_95 = bits(_hitVec_WIRE_23, 7, 7) @[build/NutShell.fir.opt.mlir 36827:23]
    connect _hitVec_WIRE_22.d, _hitVec_T_95 @[build/NutShell.fir.opt.mlir 36828:7]
    wire _hitVec_WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36829:26]
    wire _hitVec_WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 36836:26]
    connect _hitVec_WIRE_25, io.md[2] @[build/NutShell.fir.opt.mlir 36837:7]
    node _hitVec_T_96 = bits(_hitVec_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 36839:23]
    connect _hitVec_WIRE_24.pteaddr, _hitVec_T_96 @[build/NutShell.fir.opt.mlir 36840:7]
    node _hitVec_T_97 = bits(_hitVec_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 36842:23]
    connect _hitVec_WIRE_24.ppn, _hitVec_T_97 @[build/NutShell.fir.opt.mlir 36843:7]
    node _hitVec_T_98 = bits(_hitVec_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 36845:23]
    connect _hitVec_WIRE_24.flag, _hitVec_T_98 @[build/NutShell.fir.opt.mlir 36846:7]
    node _hitVec_T_99 = bits(_hitVec_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 36848:23]
    connect _hitVec_WIRE_24.mask, _hitVec_T_99 @[build/NutShell.fir.opt.mlir 36849:7]
    node _hitVec_T_100 = bits(_hitVec_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 36851:24]
    connect _hitVec_WIRE_24.asid, _hitVec_T_100 @[build/NutShell.fir.opt.mlir 36852:7]
    node _hitVec_T_101 = bits(_hitVec_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 36854:24]
    connect _hitVec_WIRE_24.vpn, _hitVec_T_101 @[build/NutShell.fir.opt.mlir 36855:7]
    node _hitVec_T_102 = eq(_hitVec_WIRE_24.asid, satp.asid) @[build/NutShell.fir.opt.mlir 36857:24]
    node _hitVec_T_103 = and(_hitVec_WIRE_22.v, _hitVec_T_102) @[build/NutShell.fir.opt.mlir 36859:24]
    wire _hitVec_WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36860:26]
    wire _hitVec_WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 36867:26]
    connect _hitVec_WIRE_27, io.md[2] @[build/NutShell.fir.opt.mlir 36868:7]
    node _hitVec_T_104 = bits(_hitVec_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 36870:24]
    connect _hitVec_WIRE_26.pteaddr, _hitVec_T_104 @[build/NutShell.fir.opt.mlir 36871:7]
    node _hitVec_T_105 = bits(_hitVec_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 36873:24]
    connect _hitVec_WIRE_26.ppn, _hitVec_T_105 @[build/NutShell.fir.opt.mlir 36874:7]
    node _hitVec_T_106 = bits(_hitVec_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 36876:24]
    connect _hitVec_WIRE_26.flag, _hitVec_T_106 @[build/NutShell.fir.opt.mlir 36877:7]
    node _hitVec_T_107 = bits(_hitVec_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 36879:24]
    connect _hitVec_WIRE_26.mask, _hitVec_T_107 @[build/NutShell.fir.opt.mlir 36880:7]
    node _hitVec_T_108 = bits(_hitVec_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 36882:24]
    connect _hitVec_WIRE_26.asid, _hitVec_T_108 @[build/NutShell.fir.opt.mlir 36883:7]
    node _hitVec_T_109 = bits(_hitVec_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 36885:24]
    connect _hitVec_WIRE_26.vpn, _hitVec_T_109 @[build/NutShell.fir.opt.mlir 36886:7]
    wire _hitVec_WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36887:26]
    wire _hitVec_WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 36894:26]
    connect _hitVec_WIRE_29, io.md[2] @[build/NutShell.fir.opt.mlir 36895:7]
    node _hitVec_T_110 = bits(_hitVec_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 36897:24]
    connect _hitVec_WIRE_28.pteaddr, _hitVec_T_110 @[build/NutShell.fir.opt.mlir 36898:7]
    node _hitVec_T_111 = bits(_hitVec_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 36900:24]
    connect _hitVec_WIRE_28.ppn, _hitVec_T_111 @[build/NutShell.fir.opt.mlir 36901:7]
    node _hitVec_T_112 = bits(_hitVec_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 36903:24]
    connect _hitVec_WIRE_28.flag, _hitVec_T_112 @[build/NutShell.fir.opt.mlir 36904:7]
    node _hitVec_T_113 = bits(_hitVec_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 36906:24]
    connect _hitVec_WIRE_28.mask, _hitVec_T_113 @[build/NutShell.fir.opt.mlir 36907:7]
    node _hitVec_T_114 = bits(_hitVec_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 36909:24]
    connect _hitVec_WIRE_28.asid, _hitVec_T_114 @[build/NutShell.fir.opt.mlir 36910:7]
    node _hitVec_T_115 = bits(_hitVec_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 36912:24]
    connect _hitVec_WIRE_28.vpn, _hitVec_T_115 @[build/NutShell.fir.opt.mlir 36913:7]
    node hitVec_hi_2 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 36915:22]
    node _hitVec_T_116 = cat(hitVec_hi_2, vpn.vpn0) @[build/NutShell.fir.opt.mlir 36917:24]
    node _hitVec_T_117 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 36919:24]
    node _hitVec_T_118 = and(_hitVec_T_117, _hitVec_WIRE_28.vpn) @[build/NutShell.fir.opt.mlir 36921:24]
    node _hitVec_T_119 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 36923:24]
    node _hitVec_T_120 = and(_hitVec_T_119, _hitVec_T_116) @[build/NutShell.fir.opt.mlir 36925:24]
    node _hitVec_T_121 = eq(_hitVec_T_118, _hitVec_T_120) @[build/NutShell.fir.opt.mlir 36927:24]
    node _hitVec_T_122 = and(_hitVec_T_103, _hitVec_T_121) @[build/NutShell.fir.opt.mlir 36929:24]
    wire _hitVec_WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36930:26]
    wire _hitVec_WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 36937:26]
    connect _hitVec_WIRE_31, io.md[3] @[build/NutShell.fir.opt.mlir 36938:7]
    node _hitVec_T_123 = bits(_hitVec_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 36940:24]
    connect _hitVec_WIRE_30.pteaddr, _hitVec_T_123 @[build/NutShell.fir.opt.mlir 36941:7]
    node _hitVec_T_124 = bits(_hitVec_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 36943:24]
    connect _hitVec_WIRE_30.ppn, _hitVec_T_124 @[build/NutShell.fir.opt.mlir 36944:7]
    node _hitVec_T_125 = bits(_hitVec_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 36946:24]
    connect _hitVec_WIRE_30.flag, _hitVec_T_125 @[build/NutShell.fir.opt.mlir 36947:7]
    node _hitVec_T_126 = bits(_hitVec_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 36949:24]
    connect _hitVec_WIRE_30.mask, _hitVec_T_126 @[build/NutShell.fir.opt.mlir 36950:7]
    node _hitVec_T_127 = bits(_hitVec_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 36952:24]
    connect _hitVec_WIRE_30.asid, _hitVec_T_127 @[build/NutShell.fir.opt.mlir 36953:7]
    node _hitVec_T_128 = bits(_hitVec_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 36955:24]
    connect _hitVec_WIRE_30.vpn, _hitVec_T_128 @[build/NutShell.fir.opt.mlir 36956:7]
    wire _hitVec_WIRE_32 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36957:26]
    wire _hitVec_WIRE_33 : UInt<8> @[build/NutShell.fir.opt.mlir 36966:26]
    connect _hitVec_WIRE_33, _hitVec_WIRE_30.flag @[build/NutShell.fir.opt.mlir 36967:7]
    node _hitVec_T_129 = bits(_hitVec_WIRE_33, 0, 0) @[build/NutShell.fir.opt.mlir 36969:24]
    connect _hitVec_WIRE_32.v, _hitVec_T_129 @[build/NutShell.fir.opt.mlir 36970:7]
    node _hitVec_T_130 = bits(_hitVec_WIRE_33, 1, 1) @[build/NutShell.fir.opt.mlir 36972:24]
    connect _hitVec_WIRE_32.r, _hitVec_T_130 @[build/NutShell.fir.opt.mlir 36973:7]
    node _hitVec_T_131 = bits(_hitVec_WIRE_33, 2, 2) @[build/NutShell.fir.opt.mlir 36975:24]
    connect _hitVec_WIRE_32.w, _hitVec_T_131 @[build/NutShell.fir.opt.mlir 36976:7]
    node _hitVec_T_132 = bits(_hitVec_WIRE_33, 3, 3) @[build/NutShell.fir.opt.mlir 36978:24]
    connect _hitVec_WIRE_32.x, _hitVec_T_132 @[build/NutShell.fir.opt.mlir 36979:7]
    node _hitVec_T_133 = bits(_hitVec_WIRE_33, 4, 4) @[build/NutShell.fir.opt.mlir 36981:24]
    connect _hitVec_WIRE_32.u, _hitVec_T_133 @[build/NutShell.fir.opt.mlir 36982:7]
    node _hitVec_T_134 = bits(_hitVec_WIRE_33, 5, 5) @[build/NutShell.fir.opt.mlir 36984:24]
    connect _hitVec_WIRE_32.g, _hitVec_T_134 @[build/NutShell.fir.opt.mlir 36985:7]
    node _hitVec_T_135 = bits(_hitVec_WIRE_33, 6, 6) @[build/NutShell.fir.opt.mlir 36987:24]
    connect _hitVec_WIRE_32.a, _hitVec_T_135 @[build/NutShell.fir.opt.mlir 36988:7]
    node _hitVec_T_136 = bits(_hitVec_WIRE_33, 7, 7) @[build/NutShell.fir.opt.mlir 36990:24]
    connect _hitVec_WIRE_32.d, _hitVec_T_136 @[build/NutShell.fir.opt.mlir 36991:7]
    wire _hitVec_WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36992:26]
    wire _hitVec_WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 36999:26]
    connect _hitVec_WIRE_35, io.md[3] @[build/NutShell.fir.opt.mlir 37000:7]
    node _hitVec_T_137 = bits(_hitVec_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 37002:24]
    connect _hitVec_WIRE_34.pteaddr, _hitVec_T_137 @[build/NutShell.fir.opt.mlir 37003:7]
    node _hitVec_T_138 = bits(_hitVec_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 37005:24]
    connect _hitVec_WIRE_34.ppn, _hitVec_T_138 @[build/NutShell.fir.opt.mlir 37006:7]
    node _hitVec_T_139 = bits(_hitVec_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 37008:24]
    connect _hitVec_WIRE_34.flag, _hitVec_T_139 @[build/NutShell.fir.opt.mlir 37009:7]
    node _hitVec_T_140 = bits(_hitVec_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 37011:24]
    connect _hitVec_WIRE_34.mask, _hitVec_T_140 @[build/NutShell.fir.opt.mlir 37012:7]
    node _hitVec_T_141 = bits(_hitVec_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 37014:24]
    connect _hitVec_WIRE_34.asid, _hitVec_T_141 @[build/NutShell.fir.opt.mlir 37015:7]
    node _hitVec_T_142 = bits(_hitVec_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 37017:24]
    connect _hitVec_WIRE_34.vpn, _hitVec_T_142 @[build/NutShell.fir.opt.mlir 37018:7]
    node _hitVec_T_143 = eq(_hitVec_WIRE_34.asid, satp.asid) @[build/NutShell.fir.opt.mlir 37020:24]
    node _hitVec_T_144 = and(_hitVec_WIRE_32.v, _hitVec_T_143) @[build/NutShell.fir.opt.mlir 37022:24]
    wire _hitVec_WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37023:26]
    wire _hitVec_WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 37030:26]
    connect _hitVec_WIRE_37, io.md[3] @[build/NutShell.fir.opt.mlir 37031:7]
    node _hitVec_T_145 = bits(_hitVec_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 37033:24]
    connect _hitVec_WIRE_36.pteaddr, _hitVec_T_145 @[build/NutShell.fir.opt.mlir 37034:7]
    node _hitVec_T_146 = bits(_hitVec_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 37036:24]
    connect _hitVec_WIRE_36.ppn, _hitVec_T_146 @[build/NutShell.fir.opt.mlir 37037:7]
    node _hitVec_T_147 = bits(_hitVec_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 37039:24]
    connect _hitVec_WIRE_36.flag, _hitVec_T_147 @[build/NutShell.fir.opt.mlir 37040:7]
    node _hitVec_T_148 = bits(_hitVec_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 37042:24]
    connect _hitVec_WIRE_36.mask, _hitVec_T_148 @[build/NutShell.fir.opt.mlir 37043:7]
    node _hitVec_T_149 = bits(_hitVec_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 37045:24]
    connect _hitVec_WIRE_36.asid, _hitVec_T_149 @[build/NutShell.fir.opt.mlir 37046:7]
    node _hitVec_T_150 = bits(_hitVec_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 37048:24]
    connect _hitVec_WIRE_36.vpn, _hitVec_T_150 @[build/NutShell.fir.opt.mlir 37049:7]
    wire _hitVec_WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37050:26]
    wire _hitVec_WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 37057:26]
    connect _hitVec_WIRE_39, io.md[3] @[build/NutShell.fir.opt.mlir 37058:7]
    node _hitVec_T_151 = bits(_hitVec_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 37060:24]
    connect _hitVec_WIRE_38.pteaddr, _hitVec_T_151 @[build/NutShell.fir.opt.mlir 37061:7]
    node _hitVec_T_152 = bits(_hitVec_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 37063:24]
    connect _hitVec_WIRE_38.ppn, _hitVec_T_152 @[build/NutShell.fir.opt.mlir 37064:7]
    node _hitVec_T_153 = bits(_hitVec_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 37066:24]
    connect _hitVec_WIRE_38.flag, _hitVec_T_153 @[build/NutShell.fir.opt.mlir 37067:7]
    node _hitVec_T_154 = bits(_hitVec_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 37069:24]
    connect _hitVec_WIRE_38.mask, _hitVec_T_154 @[build/NutShell.fir.opt.mlir 37070:7]
    node _hitVec_T_155 = bits(_hitVec_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 37072:24]
    connect _hitVec_WIRE_38.asid, _hitVec_T_155 @[build/NutShell.fir.opt.mlir 37073:7]
    node _hitVec_T_156 = bits(_hitVec_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 37075:24]
    connect _hitVec_WIRE_38.vpn, _hitVec_T_156 @[build/NutShell.fir.opt.mlir 37076:7]
    node hitVec_hi_3 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 37078:22]
    node _hitVec_T_157 = cat(hitVec_hi_3, vpn.vpn0) @[build/NutShell.fir.opt.mlir 37080:24]
    node _hitVec_T_158 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 37082:24]
    node _hitVec_T_159 = and(_hitVec_T_158, _hitVec_WIRE_38.vpn) @[build/NutShell.fir.opt.mlir 37084:24]
    node _hitVec_T_160 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 37086:24]
    node _hitVec_T_161 = and(_hitVec_T_160, _hitVec_T_157) @[build/NutShell.fir.opt.mlir 37088:24]
    node _hitVec_T_162 = eq(_hitVec_T_159, _hitVec_T_161) @[build/NutShell.fir.opt.mlir 37090:24]
    node _hitVec_T_163 = and(_hitVec_T_144, _hitVec_T_162) @[build/NutShell.fir.opt.mlir 37092:24]
    wire _hitVec_WIRE_40 : UInt<1>[4] @[build/NutShell.fir.opt.mlir 37093:26]
    connect _hitVec_WIRE_40[0], _hitVec_T_40 @[build/NutShell.fir.opt.mlir 37098:7]
    connect _hitVec_WIRE_40[1], _hitVec_T_81 @[build/NutShell.fir.opt.mlir 37099:7]
    connect _hitVec_WIRE_40[2], _hitVec_T_122 @[build/NutShell.fir.opt.mlir 37100:7]
    connect _hitVec_WIRE_40[3], _hitVec_T_163 @[build/NutShell.fir.opt.mlir 37101:7]
    node hitVec_lo = cat(_hitVec_WIRE_40[1], _hitVec_WIRE_40[0]) @[build/NutShell.fir.opt.mlir 37103:20]
    node hitVec_hi_4 = cat(_hitVec_WIRE_40[3], _hitVec_WIRE_40[2]) @[build/NutShell.fir.opt.mlir 37105:22]
    node hitVec = cat(hitVec_hi_4, hitVec_lo) @[build/NutShell.fir.opt.mlir 37107:17]
    node _hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 37109:17]
    node hit = and(io.in.valid, _hit_T) @[build/NutShell.fir.opt.mlir 37111:14]
    node _miss_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 37113:18]
    node _miss_T_1 = eq(_miss_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37115:20]
    node miss = and(io.in.valid, _miss_T_1) @[build/NutShell.fir.opt.mlir 37117:15]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 37119:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 37121:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 37123:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 37125:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 37127:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 37129:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 37131:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 37133:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 37135:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37137:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 37139:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 37141:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 37143:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 37144:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 37147:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 37149:24]
    node waymask = mux(hit, hitVec, victimWaymask) @[build/NutShell.fir.opt.mlir 37151:18]
    wire loadPF : UInt<1> @[build/NutShell.fir.opt.mlir 37152:17]
    connect loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37154:7]
    wire storePF : UInt<1> @[build/NutShell.fir.opt.mlir 37155:18]
    connect storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37157:7]
    node _hitMeta_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 37159:21]
    node _hitMeta_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 37161:23]
    node _hitMeta_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 37163:23]
    node _hitMeta_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 37165:23]
    node _hitMeta_T_4 = mux(_hitMeta_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37167:23]
    node _hitMeta_T_5 = mux(_hitMeta_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37169:23]
    node _hitMeta_T_6 = mux(_hitMeta_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37171:23]
    node _hitMeta_T_7 = mux(_hitMeta_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37173:23]
    node _hitMeta_T_8 = or(_hitMeta_T_4, _hitMeta_T_5) @[build/NutShell.fir.opt.mlir 37175:23]
    node _hitMeta_T_9 = or(_hitMeta_T_8, _hitMeta_T_6) @[build/NutShell.fir.opt.mlir 37177:23]
    node _hitMeta_T_10 = or(_hitMeta_T_9, _hitMeta_T_7) @[build/NutShell.fir.opt.mlir 37179:24]
    wire _hitMeta_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 37180:24]
    connect _hitMeta_WIRE, _hitMeta_T_10 @[build/NutShell.fir.opt.mlir 37181:7]
    wire _hitMeta_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 37182:26]
    wire _hitMeta_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 37185:26]
    connect _hitMeta_WIRE_2, _hitMeta_WIRE @[build/NutShell.fir.opt.mlir 37186:7]
    node _hitMeta_T_11 = bits(_hitMeta_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 37188:24]
    connect _hitMeta_WIRE_1.data, _hitMeta_T_11 @[build/NutShell.fir.opt.mlir 37189:7]
    node _hitMeta_T_12 = bits(_hitMeta_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 37191:24]
    connect _hitMeta_WIRE_1.meta, _hitMeta_T_12 @[build/NutShell.fir.opt.mlir 37192:7]
    wire hitMeta : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8> } @[build/NutShell.fir.opt.mlir 37193:18]
    wire _hitMeta_WIRE_3 : UInt<69> @[build/NutShell.fir.opt.mlir 37198:26]
    connect _hitMeta_WIRE_3, _hitMeta_WIRE_1.meta @[build/NutShell.fir.opt.mlir 37199:7]
    node _hitMeta_T_13 = bits(_hitMeta_WIRE_3, 7, 0) @[build/NutShell.fir.opt.mlir 37201:24]
    connect hitMeta.flag, _hitMeta_T_13 @[build/NutShell.fir.opt.mlir 37202:7]
    node _hitMeta_T_14 = bits(_hitMeta_WIRE_3, 25, 8) @[build/NutShell.fir.opt.mlir 37204:24]
    connect hitMeta.mask, _hitMeta_T_14 @[build/NutShell.fir.opt.mlir 37205:7]
    node _hitMeta_T_15 = bits(_hitMeta_WIRE_3, 41, 26) @[build/NutShell.fir.opt.mlir 37207:24]
    connect hitMeta.asid, _hitMeta_T_15 @[build/NutShell.fir.opt.mlir 37208:7]
    node _hitMeta_T_16 = bits(_hitMeta_WIRE_3, 68, 42) @[build/NutShell.fir.opt.mlir 37210:24]
    connect hitMeta.vpn, _hitMeta_T_16 @[build/NutShell.fir.opt.mlir 37211:7]
    node _hitData_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 37213:21]
    node _hitData_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 37215:23]
    node _hitData_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 37217:23]
    node _hitData_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 37219:23]
    node _hitData_T_4 = mux(_hitData_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37221:23]
    node _hitData_T_5 = mux(_hitData_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37223:23]
    node _hitData_T_6 = mux(_hitData_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37225:23]
    node _hitData_T_7 = mux(_hitData_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37227:23]
    node _hitData_T_8 = or(_hitData_T_4, _hitData_T_5) @[build/NutShell.fir.opt.mlir 37229:23]
    node _hitData_T_9 = or(_hitData_T_8, _hitData_T_6) @[build/NutShell.fir.opt.mlir 37231:23]
    node _hitData_T_10 = or(_hitData_T_9, _hitData_T_7) @[build/NutShell.fir.opt.mlir 37233:24]
    wire _hitData_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 37234:24]
    connect _hitData_WIRE, _hitData_T_10 @[build/NutShell.fir.opt.mlir 37235:7]
    wire _hitData_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 37236:26]
    wire _hitData_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 37239:26]
    connect _hitData_WIRE_2, _hitData_WIRE @[build/NutShell.fir.opt.mlir 37240:7]
    node _hitData_T_11 = bits(_hitData_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 37242:24]
    connect _hitData_WIRE_1.data, _hitData_T_11 @[build/NutShell.fir.opt.mlir 37243:7]
    node _hitData_T_12 = bits(_hitData_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 37245:24]
    connect _hitData_WIRE_1.meta, _hitData_T_12 @[build/NutShell.fir.opt.mlir 37246:7]
    wire hitData : { ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37247:18]
    wire _hitData_WIRE_3 : UInt<52> @[build/NutShell.fir.opt.mlir 37250:26]
    connect _hitData_WIRE_3, _hitData_WIRE_1.data @[build/NutShell.fir.opt.mlir 37251:7]
    node _hitData_T_13 = bits(_hitData_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 37253:24]
    connect hitData.pteaddr, _hitData_T_13 @[build/NutShell.fir.opt.mlir 37254:7]
    node _hitData_T_14 = bits(_hitData_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 37256:24]
    connect hitData.ppn, _hitData_T_14 @[build/NutShell.fir.opt.mlir 37257:7]
    wire hitFlag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 37258:18]
    wire _hitFlag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 37267:24]
    connect _hitFlag_WIRE, hitMeta.flag @[build/NutShell.fir.opt.mlir 37268:7]
    node _hitFlag_T = bits(_hitFlag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37270:21]
    connect hitFlag.v, _hitFlag_T @[build/NutShell.fir.opt.mlir 37271:7]
    node _hitFlag_T_1 = bits(_hitFlag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37273:23]
    connect hitFlag.r, _hitFlag_T_1 @[build/NutShell.fir.opt.mlir 37274:7]
    node _hitFlag_T_2 = bits(_hitFlag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37276:23]
    connect hitFlag.w, _hitFlag_T_2 @[build/NutShell.fir.opt.mlir 37277:7]
    node _hitFlag_T_3 = bits(_hitFlag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37279:23]
    connect hitFlag.x, _hitFlag_T_3 @[build/NutShell.fir.opt.mlir 37280:7]
    node _hitFlag_T_4 = bits(_hitFlag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37282:23]
    connect hitFlag.u, _hitFlag_T_4 @[build/NutShell.fir.opt.mlir 37283:7]
    node _hitFlag_T_5 = bits(_hitFlag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37285:23]
    connect hitFlag.g, _hitFlag_T_5 @[build/NutShell.fir.opt.mlir 37286:7]
    node _hitFlag_T_6 = bits(_hitFlag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37288:23]
    connect hitFlag.a, _hitFlag_T_6 @[build/NutShell.fir.opt.mlir 37289:7]
    node _hitFlag_T_7 = bits(_hitFlag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37291:23]
    connect hitFlag.d, _hitFlag_T_7 @[build/NutShell.fir.opt.mlir 37292:7]
    wire hitinstrPF : UInt<1> @[build/NutShell.fir.opt.mlir 37293:21]
    connect hitinstrPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37295:7]
    node _hitWB_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37297:19]
    node _hitWB_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37299:21]
    node _hitWB_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37301:21]
    node _hitWB_T_3 = and(_hitWB_T_1, _hitWB_T_2) @[build/NutShell.fir.opt.mlir 37303:21]
    node _hitWB_T_4 = or(_hitWB_T, _hitWB_T_3) @[build/NutShell.fir.opt.mlir 37305:21]
    node _hitWB_T_5 = and(hit, _hitWB_T_4) @[build/NutShell.fir.opt.mlir 37307:21]
    node _hitWB_T_6 = eq(hitinstrPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37309:21]
    node _hitWB_T_7 = and(_hitWB_T_5, _hitWB_T_6) @[build/NutShell.fir.opt.mlir 37311:21]
    node _hitWB_T_8 = or(loadPF, storePF) @[build/NutShell.fir.opt.mlir 37313:21]
    node _hitWB_T_9 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 37315:21]
    node _hitWB_T_10 = or(_hitWB_T_8, _hitWB_T_9) @[build/NutShell.fir.opt.mlir 37317:22]
    node _hitWB_T_11 = eq(_hitWB_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37319:22]
    node hitWB = and(_hitWB_T_7, _hitWB_T_11) @[build/NutShell.fir.opt.mlir 37321:16]
    node _hitRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37323:27]
    node hitRefillFlag_hi = cat(_hitRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37325:27]
    node _hitRefillFlag_T_1 = cat(hitRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 37328:29]
    node hitRefillFlag_lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 37330:30]
    node hitRefillFlag_lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 37332:30]
    node hitRefillFlag_lo = cat(hitRefillFlag_lo_hi, hitRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 37334:27]
    node hitRefillFlag_hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 37336:30]
    node hitRefillFlag_hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 37338:30]
    node hitRefillFlag_hi_1 = cat(hitRefillFlag_hi_hi, hitRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 37340:29]
    node _hitRefillFlag_T_2 = cat(hitRefillFlag_hi_1, hitRefillFlag_lo) @[build/NutShell.fir.opt.mlir 37342:29]
    node hitRefillFlag = or(_hitRefillFlag_T_1, _hitRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 37344:24]
    node hitWBStore_lo = cat(UInt<2>(0), hitRefillFlag) @[build/NutShell.fir.opt.mlir 37347:24]
    node hitWBStore_hi = cat(UInt<10>(0), hitData.ppn) @[build/NutShell.fir.opt.mlir 37350:24]
    node _hitWBStore_T = cat(hitWBStore_hi, hitWBStore_lo) @[build/NutShell.fir.opt.mlir 37352:24]
    reg hitWBStore : UInt<40>, clock @[build/NutShell.fir.opt.mlir 37353:21]
    when hitWB : @[build/NutShell.fir.opt.mlir 37354:7]
      connect hitWBStore, _hitWBStore_T @[build/NutShell.fir.opt.mlir 37355:9]
    node _hitCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37358:22]
    node _hitCheck_T_1 = eq(hitFlag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37360:24]
    node _hitCheck_T_2 = and(_hitCheck_T, _hitCheck_T_1) @[build/NutShell.fir.opt.mlir 37362:24]
    node _hitCheck_T_3 = eq(_hitCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37364:24]
    node _hitCheck_T_4 = and(hit, _hitCheck_T_3) @[build/NutShell.fir.opt.mlir 37366:24]
    node _hitCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37368:24]
    node _hitCheck_T_6 = and(_hitCheck_T_5, hitFlag.u) @[build/NutShell.fir.opt.mlir 37370:24]
    node _hitCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37372:24]
    node _hitCheck_T_8 = or(_hitCheck_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37374:24]
    node _hitCheck_T_9 = and(_hitCheck_T_6, _hitCheck_T_8) @[build/NutShell.fir.opt.mlir 37376:24]
    node _hitCheck_T_10 = eq(_hitCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37378:25]
    node hitCheck = and(_hitCheck_T_4, _hitCheck_T_10) @[build/NutShell.fir.opt.mlir 37380:19]
    node _hitADCheck_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37382:24]
    node _hitADCheck_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37384:26]
    node _hitADCheck_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37386:26]
    node _hitADCheck_T_3 = and(_hitADCheck_T_1, _hitADCheck_T_2) @[build/NutShell.fir.opt.mlir 37388:26]
    node hitADCheck = or(_hitADCheck_T, _hitADCheck_T_3) @[build/NutShell.fir.opt.mlir 37390:21]
    node _hitExec_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37392:21]
    node _hitExec_T_1 = and(hitCheck, _hitExec_T) @[build/NutShell.fir.opt.mlir 37394:23]
    node hitExec = and(_hitExec_T_1, hitFlag.x) @[build/NutShell.fir.opt.mlir 37396:18]
    node _hitLoad_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37398:21]
    node _hitLoad_T_1 = and(hitCheck, _hitLoad_T) @[build/NutShell.fir.opt.mlir 37400:23]
    node _hitLoad_T_2 = and(io.pf.status_mxr, hitFlag.x) @[build/NutShell.fir.opt.mlir 37402:23]
    node _hitLoad_T_3 = or(hitFlag.r, _hitLoad_T_2) @[build/NutShell.fir.opt.mlir 37404:23]
    node hitLoad = and(_hitLoad_T_1, _hitLoad_T_3) @[build/NutShell.fir.opt.mlir 37406:18]
    node _hitStore_T = eq(hitADCheck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37408:22]
    node _hitStore_T_1 = and(hitCheck, _hitStore_T) @[build/NutShell.fir.opt.mlir 37410:24]
    node hitStore = and(_hitStore_T_1, hitFlag.w) @[build/NutShell.fir.opt.mlir 37412:19]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 37413:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37415:7]
    regreset io_pf_loadPF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37416:27]
    connect io_pf_loadPF_REG, loadPF @[build/NutShell.fir.opt.mlir 37417:7]
    connect io.pf.loadPF, io_pf_loadPF_REG @[build/NutShell.fir.opt.mlir 37418:7]
    regreset io_pf_storePF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37419:28]
    connect io_pf_storePF_REG, storePF @[build/NutShell.fir.opt.mlir 37420:7]
    connect io.pf.storePF, io_pf_storePF_REG @[build/NutShell.fir.opt.mlir 37421:7]
    node _loadPF_T = eq(hitLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37423:20]
    node _loadPF_T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37425:22]
    node _loadPF_T_2 = eq(_loadPF_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37427:22]
    node _loadPF_T_3 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37429:22]
    node _loadPF_T_4 = eq(_loadPF_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37431:22]
    node _loadPF_T_5 = and(_loadPF_T_2, _loadPF_T_4) @[build/NutShell.fir.opt.mlir 37433:22]
    node _loadPF_T_6 = and(_loadPF_T, _loadPF_T_5) @[build/NutShell.fir.opt.mlir 37435:22]
    node _loadPF_T_7 = and(_loadPF_T_6, hit) @[build/NutShell.fir.opt.mlir 37437:22]
    node _loadPF_T_8 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37439:22]
    node _loadPF_T_9 = and(_loadPF_T_7, _loadPF_T_8) @[build/NutShell.fir.opt.mlir 37441:22]
    connect loadPF, _loadPF_T_9 @[build/NutShell.fir.opt.mlir 37442:7]
    node _storePF_T = eq(hitStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37444:21]
    node _storePF_T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37446:23]
    node _storePF_T_2 = and(_storePF_T, _storePF_T_1) @[build/NutShell.fir.opt.mlir 37448:23]
    node _storePF_T_3 = and(_storePF_T_2, hit) @[build/NutShell.fir.opt.mlir 37450:23]
    node _storePF_T_4 = eq(hitLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37452:23]
    node _storePF_T_5 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37454:23]
    node _storePF_T_6 = eq(_storePF_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37456:23]
    node _storePF_T_7 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37458:23]
    node _storePF_T_8 = eq(_storePF_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37460:23]
    node _storePF_T_9 = and(_storePF_T_6, _storePF_T_8) @[build/NutShell.fir.opt.mlir 37462:23]
    node _storePF_T_10 = and(_storePF_T_4, _storePF_T_9) @[build/NutShell.fir.opt.mlir 37464:24]
    node _storePF_T_11 = and(_storePF_T_10, hit) @[build/NutShell.fir.opt.mlir 37466:24]
    node _storePF_T_12 = and(_storePF_T_11, isAMO) @[build/NutShell.fir.opt.mlir 37468:24]
    node _storePF_T_13 = or(_storePF_T_3, _storePF_T_12) @[build/NutShell.fir.opt.mlir 37470:24]
    connect storePF, _storePF_T_13 @[build/NutShell.fir.opt.mlir 37471:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37473:16]
    regreset level : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 37475:16]
    reg memRespStore : UInt<64>, clock @[build/NutShell.fir.opt.mlir 37476:23]
    wire missMask : UInt<18> @[build/NutShell.fir.opt.mlir 37477:19]
    connect missMask, UInt<18>(262143) @[build/NutShell.fir.opt.mlir 37480:7]
    reg missMaskStore : UInt<18>, clock @[build/NutShell.fir.opt.mlir 37481:24]
    wire missMetaRefill : UInt<1> @[build/NutShell.fir.opt.mlir 37482:25]
    connect missMetaRefill, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37484:7]
    wire missRefillFlag : UInt<8> @[build/NutShell.fir.opt.mlir 37485:25]
    connect missRefillFlag, UInt<8>(0) @[build/NutShell.fir.opt.mlir 37488:7]
    wire memRdata : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 37489:19]
    wire _memRdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 37502:25]
    connect _memRdata_WIRE, io.mem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 37503:7]
    node _memRdata_T = bits(_memRdata_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37505:22]
    connect memRdata.flag.v, _memRdata_T @[build/NutShell.fir.opt.mlir 37506:7]
    node _memRdata_T_1 = bits(_memRdata_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37508:24]
    connect memRdata.flag.r, _memRdata_T_1 @[build/NutShell.fir.opt.mlir 37509:7]
    node _memRdata_T_2 = bits(_memRdata_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37511:24]
    connect memRdata.flag.w, _memRdata_T_2 @[build/NutShell.fir.opt.mlir 37512:7]
    node _memRdata_T_3 = bits(_memRdata_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37514:24]
    connect memRdata.flag.x, _memRdata_T_3 @[build/NutShell.fir.opt.mlir 37515:7]
    node _memRdata_T_4 = bits(_memRdata_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37517:24]
    connect memRdata.flag.u, _memRdata_T_4 @[build/NutShell.fir.opt.mlir 37518:7]
    node _memRdata_T_5 = bits(_memRdata_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37520:24]
    connect memRdata.flag.g, _memRdata_T_5 @[build/NutShell.fir.opt.mlir 37521:7]
    node _memRdata_T_6 = bits(_memRdata_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37523:24]
    connect memRdata.flag.a, _memRdata_T_6 @[build/NutShell.fir.opt.mlir 37524:7]
    node _memRdata_T_7 = bits(_memRdata_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37526:24]
    connect memRdata.flag.d, _memRdata_T_7 @[build/NutShell.fir.opt.mlir 37527:7]
    node _memRdata_T_8 = bits(_memRdata_WIRE, 9, 8) @[build/NutShell.fir.opt.mlir 37529:24]
    connect memRdata.rsw, _memRdata_T_8 @[build/NutShell.fir.opt.mlir 37530:7]
    node _memRdata_T_9 = bits(_memRdata_WIRE, 29, 10) @[build/NutShell.fir.opt.mlir 37532:24]
    connect memRdata.ppn, _memRdata_T_9 @[build/NutShell.fir.opt.mlir 37533:7]
    node _memRdata_T_10 = bits(_memRdata_WIRE, 63, 30) @[build/NutShell.fir.opt.mlir 37535:25]
    connect memRdata.reserved, _memRdata_T_10 @[build/NutShell.fir.opt.mlir 37536:7]
    reg raddr : UInt<32>, clock @[build/NutShell.fir.opt.mlir 37537:16]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 37539:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37540:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 37541:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 37543:9]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37545:20]
    node isFlush = or(needFlush, io.flush) @[build/NutShell.fir.opt.mlir 37547:18]
    node _T = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37549:13]
    node _T_1 = and(io.flush, _T) @[build/NutShell.fir.opt.mlir 37551:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 37552:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 37554:9]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 37557:15]
    node _T_3 = and(_T_2, needFlush) @[build/NutShell.fir.opt.mlir 37559:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 37560:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37562:9]
    regreset missIPF : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37564:18]
    node _T_4 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 37566:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 37576:7]
      node _T_5 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37578:17]
      node _T_6 = and(_T_5, hitWB) @[build/NutShell.fir.opt.mlir 37580:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 37581:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 37583:11]
        connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37585:11]
        connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37587:11]
      else :
        node _T_7 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37590:19]
        node _T_8 = and(miss, _T_7) @[build/NutShell.fir.opt.mlir 37592:19]
        when _T_8 : @[build/NutShell.fir.opt.mlir 37593:11]
          connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 37595:13]
          node _raddr_T = cat(satp.ppn, vpn.vpn2) @[build/NutShell.fir.opt.mlir 37597:25]
          node _raddr_T_1 = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37599:27]
          connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 37600:13]
          connect level, UInt<2>(3) @[build/NutShell.fir.opt.mlir 37602:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37604:13]
          connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37606:13]
    else :
      node _T_9 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 37611:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 37612:9]
        when isFlush : @[build/NutShell.fir.opt.mlir 37613:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37615:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37617:13]
        else :
          node _T_10 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 37620:22]
          when _T_10 : @[build/NutShell.fir.opt.mlir 37621:13]
            connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 37623:15]
      else :
        node _T_11 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 37628:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 37629:11]
          wire missflag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 37630:25]
          node missflag_lo_lo = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 37640:31]
          node missflag_lo_hi = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 37642:31]
          node missflag_lo = cat(missflag_lo_hi, missflag_lo_lo) @[build/NutShell.fir.opt.mlir 37644:28]
          node missflag_hi_lo = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 37646:31]
          node missflag_hi_hi = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 37648:31]
          node missflag_hi = cat(missflag_hi_hi, missflag_hi_lo) @[build/NutShell.fir.opt.mlir 37650:28]
          node _missflag_T = cat(missflag_hi, missflag_lo) @[build/NutShell.fir.opt.mlir 37652:28]
          wire _missflag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 37653:31]
          connect _missflag_WIRE, _missflag_T @[build/NutShell.fir.opt.mlir 37654:13]
          node _missflag_T_1 = bits(_missflag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37656:30]
          connect missflag.v, _missflag_T_1 @[build/NutShell.fir.opt.mlir 37657:13]
          node _missflag_T_2 = bits(_missflag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37659:30]
          connect missflag.r, _missflag_T_2 @[build/NutShell.fir.opt.mlir 37660:13]
          node _missflag_T_3 = bits(_missflag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37662:30]
          connect missflag.w, _missflag_T_3 @[build/NutShell.fir.opt.mlir 37663:13]
          node _missflag_T_4 = bits(_missflag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37665:30]
          connect missflag.x, _missflag_T_4 @[build/NutShell.fir.opt.mlir 37666:13]
          node _missflag_T_5 = bits(_missflag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37668:30]
          connect missflag.u, _missflag_T_5 @[build/NutShell.fir.opt.mlir 37669:13]
          node _missflag_T_6 = bits(_missflag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37671:30]
          connect missflag.g, _missflag_T_6 @[build/NutShell.fir.opt.mlir 37672:13]
          node _missflag_T_7 = bits(_missflag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37674:30]
          connect missflag.a, _missflag_T_7 @[build/NutShell.fir.opt.mlir 37675:13]
          node _missflag_T_8 = bits(_missflag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37677:30]
          connect missflag.d, _missflag_T_8 @[build/NutShell.fir.opt.mlir 37678:13]
          node _T_12 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 37680:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 37681:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 37682:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37684:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37686:17]
            else :
              node _T_13 = or(missflag.r, missflag.x) @[build/NutShell.fir.opt.mlir 37689:26]
              node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37691:26]
              node _T_15 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 37693:26]
              node _T_16 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 37695:26]
              node _T_17 = or(_T_15, _T_16) @[build/NutShell.fir.opt.mlir 37697:26]
              node _T_18 = and(_T_14, _T_17) @[build/NutShell.fir.opt.mlir 37699:26]
              when _T_18 : @[build/NutShell.fir.opt.mlir 37700:17]
                node _T_19 = eq(missflag.v, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37702:28]
                node _T_20 = eq(missflag.r, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37704:28]
                node _T_21 = and(_T_20, missflag.w) @[build/NutShell.fir.opt.mlir 37706:28]
                node _T_22 = or(_T_19, _T_21) @[build/NutShell.fir.opt.mlir 37708:28]
                when _T_22 : @[build/NutShell.fir.opt.mlir 37709:19]
                  connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 37711:21]
                  node _loadPF_T_10 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37713:37]
                  node _loadPF_T_11 = eq(_loadPF_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37715:37]
                  node _loadPF_T_12 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37717:37]
                  node _loadPF_T_13 = eq(_loadPF_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37719:37]
                  node _loadPF_T_14 = and(_loadPF_T_11, _loadPF_T_13) @[build/NutShell.fir.opt.mlir 37721:37]
                  node _loadPF_T_15 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37723:37]
                  node _loadPF_T_16 = and(_loadPF_T_14, _loadPF_T_15) @[build/NutShell.fir.opt.mlir 37725:37]
                  connect loadPF, _loadPF_T_16 @[build/NutShell.fir.opt.mlir 37726:21]
                  node _storePF_T_14 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37728:38]
                  node _storePF_T_15 = or(_storePF_T_14, isAMO) @[build/NutShell.fir.opt.mlir 37730:38]
                  connect storePF, _storePF_T_15 @[build/NutShell.fir.opt.mlir 37731:21]
                  inst LogPerfHelper of LogPerfHelper_30 @[build/NutShell.fir.opt.mlir 37732:113]
                  wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 37733:34]
                  connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 37738:21]
                  connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 37739:21]
                  connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 37740:21]
                  connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 37741:21]
                  node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37743:30]
                  when _T_23 : @[build/NutShell.fir.opt.mlir 37744:21]
                    node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37746:32]
                    node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37748:32]
                    when _T_25 : @[build/NutShell.fir.opt.mlir 37749:23]
                      skip @[build/NutShell.fir.opt.mlir 37750:25]
                    node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37753:32]
                    node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37755:32]
                    when _T_27 : @[build/NutShell.fir.opt.mlir 37756:23]
                      skip @[build/NutShell.fir.opt.mlir 37757:25]
                  node _T_28 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37761:30]
                  when _T_28 : @[build/NutShell.fir.opt.mlir 37762:21]
                    node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37764:32]
                    node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37766:32]
                    when _T_30 : @[build/NutShell.fir.opt.mlir 37767:23]
                      skip @[build/NutShell.fir.opt.mlir 37768:25]
                  node _T_31 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37772:30]
                  when _T_31 : @[build/NutShell.fir.opt.mlir 37773:21]
                    node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37775:32]
                    node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37777:32]
                    when _T_33 : @[build/NutShell.fir.opt.mlir 37778:23]
                      skip @[build/NutShell.fir.opt.mlir 37779:25]
                  node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37783:30]
                  when _T_34 : @[build/NutShell.fir.opt.mlir 37784:21]
                    node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37786:32]
                    node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37788:32]
                    when _T_36 : @[build/NutShell.fir.opt.mlir 37789:23]
                      skip @[build/NutShell.fir.opt.mlir 37790:25]
                else :
                  connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 37795:21]
                  node _raddr_T_2 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 37797:35]
                  node _raddr_T_3 = mux(_raddr_T_2, vpn.vpn1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 37799:35]
                  node _raddr_T_4 = cat(memRdata.ppn, _raddr_T_3) @[build/NutShell.fir.opt.mlir 37801:35]
                  node _raddr_T_5 = cat(_raddr_T_4, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37803:35]
                  connect raddr, _raddr_T_5 @[build/NutShell.fir.opt.mlir 37804:21]
              else :
                node _T_37 = neq(level, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37808:28]
                when _T_37 : @[build/NutShell.fir.opt.mlir 37809:19]
                  node _permCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37811:37]
                  node _permCheck_T_1 = eq(missflag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37813:39]
                  node _permCheck_T_2 = and(_permCheck_T, _permCheck_T_1) @[build/NutShell.fir.opt.mlir 37815:39]
                  node _permCheck_T_3 = eq(_permCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37817:39]
                  node _permCheck_T_4 = and(missflag.v, _permCheck_T_3) @[build/NutShell.fir.opt.mlir 37819:39]
                  node _permCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37821:39]
                  node _permCheck_T_6 = and(_permCheck_T_5, missflag.u) @[build/NutShell.fir.opt.mlir 37823:39]
                  node _permCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37825:39]
                  node _permCheck_T_8 = or(_permCheck_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37827:39]
                  node _permCheck_T_9 = and(_permCheck_T_6, _permCheck_T_8) @[build/NutShell.fir.opt.mlir 37829:39]
                  node _permCheck_T_10 = eq(_permCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37831:40]
                  node permCheck = and(_permCheck_T_4, _permCheck_T_10) @[build/NutShell.fir.opt.mlir 37833:34]
                  node _permAD_T = eq(missflag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37835:34]
                  node _permAD_T_1 = eq(missflag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37837:36]
                  node _permAD_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37839:36]
                  node _permAD_T_3 = and(_permAD_T_1, _permAD_T_2) @[build/NutShell.fir.opt.mlir 37841:36]
                  node permAD = or(_permAD_T, _permAD_T_3) @[build/NutShell.fir.opt.mlir 37843:31]
                  node _permExec_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37845:36]
                  node _permExec_T_1 = and(permCheck, _permExec_T) @[build/NutShell.fir.opt.mlir 37847:38]
                  node permExec = and(_permExec_T_1, missflag.x) @[build/NutShell.fir.opt.mlir 37849:33]
                  node _permLoad_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37851:36]
                  node _permLoad_T_1 = and(permCheck, _permLoad_T) @[build/NutShell.fir.opt.mlir 37853:38]
                  node _permLoad_T_2 = and(io.pf.status_mxr, missflag.x) @[build/NutShell.fir.opt.mlir 37855:38]
                  node _permLoad_T_3 = or(missflag.r, _permLoad_T_2) @[build/NutShell.fir.opt.mlir 37857:38]
                  node permLoad = and(_permLoad_T_1, _permLoad_T_3) @[build/NutShell.fir.opt.mlir 37859:33]
                  node _permStore_T = eq(permAD, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37861:37]
                  node _permStore_T_1 = and(permCheck, _permStore_T) @[build/NutShell.fir.opt.mlir 37863:39]
                  node permStore = and(_permStore_T_1, missflag.w) @[build/NutShell.fir.opt.mlir 37865:34]
                  node _updateData_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37867:38]
                  node updateData_lo = cat(UInt<1>(1), UInt<6>(0)) @[build/NutShell.fir.opt.mlir 37869:38]
                  node updateData_hi = cat(UInt<56>(0), _updateData_T) @[build/NutShell.fir.opt.mlir 37871:38]
                  node updateData = cat(updateData_hi, updateData_lo) @[build/NutShell.fir.opt.mlir 37873:35]
                  node _missRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37875:42]
                  node missRefillFlag_hi = cat(_missRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37877:42]
                  node _missRefillFlag_T_1 = cat(missRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 37879:44]
                  node missRefillFlag_lo_lo = cat(missflag.r, missflag.v) @[build/NutShell.fir.opt.mlir 37881:45]
                  node missRefillFlag_lo_hi = cat(missflag.x, missflag.w) @[build/NutShell.fir.opt.mlir 37883:45]
                  node missRefillFlag_lo = cat(missRefillFlag_lo_hi, missRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 37885:42]
                  node missRefillFlag_hi_lo = cat(missflag.g, missflag.u) @[build/NutShell.fir.opt.mlir 37887:45]
                  node missRefillFlag_hi_hi = cat(missflag.d, missflag.a) @[build/NutShell.fir.opt.mlir 37889:45]
                  node missRefillFlag_hi_1 = cat(missRefillFlag_hi_hi, missRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 37891:44]
                  node _missRefillFlag_T_2 = cat(missRefillFlag_hi_1, missRefillFlag_lo) @[build/NutShell.fir.opt.mlir 37893:44]
                  node _missRefillFlag_T_3 = or(_missRefillFlag_T_1, _missRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 37895:44]
                  connect missRefillFlag, _missRefillFlag_T_3 @[build/NutShell.fir.opt.mlir 37896:21]
                  node _memRespStore_T = or(io.mem.resp.bits.rdata, updateData) @[build/NutShell.fir.opt.mlir 37898:40]
                  connect memRespStore, _memRespStore_T @[build/NutShell.fir.opt.mlir 37899:21]
                  node _T_38 = eq(permLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37901:30]
                  node _T_39 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37903:30]
                  node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37905:30]
                  node _T_41 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37907:30]
                  node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37909:30]
                  node _T_43 = and(_T_40, _T_42) @[build/NutShell.fir.opt.mlir 37911:30]
                  node _T_44 = and(_T_38, _T_43) @[build/NutShell.fir.opt.mlir 37913:30]
                  node _T_45 = eq(permStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37915:30]
                  node _T_46 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37917:30]
                  node _T_47 = and(_T_45, _T_46) @[build/NutShell.fir.opt.mlir 37919:30]
                  node _T_48 = or(_T_44, _T_47) @[build/NutShell.fir.opt.mlir 37921:30]
                  when _T_48 : @[build/NutShell.fir.opt.mlir 37922:21]
                    connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 37924:23]
                    node _loadPF_T_17 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37926:39]
                    node _loadPF_T_18 = eq(_loadPF_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37928:39]
                    node _loadPF_T_19 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37930:39]
                    node _loadPF_T_20 = eq(_loadPF_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37932:39]
                    node _loadPF_T_21 = and(_loadPF_T_18, _loadPF_T_20) @[build/NutShell.fir.opt.mlir 37934:39]
                    node _loadPF_T_22 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37936:39]
                    node _loadPF_T_23 = and(_loadPF_T_21, _loadPF_T_22) @[build/NutShell.fir.opt.mlir 37938:39]
                    connect loadPF, _loadPF_T_23 @[build/NutShell.fir.opt.mlir 37939:23]
                    node _storePF_T_16 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37941:40]
                    node _storePF_T_17 = or(_storePF_T_16, isAMO) @[build/NutShell.fir.opt.mlir 37943:40]
                    connect storePF, _storePF_T_17 @[build/NutShell.fir.opt.mlir 37944:23]
                  else :
                    node _state_T = mux(UInt<1>(0), UInt<3>(3), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 37947:35]
                    connect state, _state_T @[build/NutShell.fir.opt.mlir 37949:23]
                    connect missMetaRefill, UInt<1>(1) @[build/NutShell.fir.opt.mlir 37951:23]
                  node _missMask_T = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 37954:36]
                  node _missMask_T_1 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 37956:38]
                  node _missMask_T_2 = mux(_missMask_T_1, UInt<18>(261632), UInt<18>(262143)) @[build/NutShell.fir.opt.mlir 37958:38]
                  node _missMask_T_3 = mux(_missMask_T, UInt<18>(0), _missMask_T_2) @[build/NutShell.fir.opt.mlir 37960:38]
                  connect missMask, _missMask_T_3 @[build/NutShell.fir.opt.mlir 37961:21]
                  connect missMaskStore, missMask @[build/NutShell.fir.opt.mlir 37962:21]
            node _level_T = sub(level, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37967:27]
            node _level_T_1 = tail(_level_T, 1) @[build/NutShell.fir.opt.mlir 37969:29]
            connect level, _level_T_1 @[build/NutShell.fir.opt.mlir 37970:15]
        else :
          node _T_49 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 37974:22]
          when _T_49 : @[build/NutShell.fir.opt.mlir 37975:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 37976:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37978:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37980:17]
            else :
              node _T_50 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 37983:26]
              when _T_50 : @[build/NutShell.fir.opt.mlir 37984:17]
                connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 37986:19]
          else :
            node _T_51 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 37991:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 37992:15]
              node _T_52 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 37994:26]
              node _T_53 = or(_T_52, io.flush) @[build/NutShell.fir.opt.mlir 37996:26]
              node _T_54 = or(_T_53, alreadyOutFire) @[build/NutShell.fir.opt.mlir 37998:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 37999:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 38001:19]
                connect missIPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38003:19]
                connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38005:19]
            else :
              node _T_55 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 38009:26]
              when _T_55 : @[build/NutShell.fir.opt.mlir 38010:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 38012:19]
    node _cmd_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 38020:17]
    node cmd = mux(_cmd_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38022:14]
    node _T_56 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 38024:16]
    node _T_57 = mux(hitWB, hitWBStore, memRespStore) @[build/NutShell.fir.opt.mlir 38026:16]
    connect io.mem.req.bits.addr, _T_56 @[build/NutShell.fir.opt.mlir 38027:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 38029:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 38032:7]
    connect io.mem.req.bits.wdata, _T_57 @[build/NutShell.fir.opt.mlir 38033:7]
    connect io.mem.req.bits.wmask, UInt<8>(255) @[build/NutShell.fir.opt.mlir 38036:7]
    node _io_mem_req_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 38038:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 38040:32]
    node _io_mem_req_valid_T_2 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_1) @[build/NutShell.fir.opt.mlir 38042:32]
    node _io_mem_req_valid_T_3 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38044:32]
    node _io_mem_req_valid_T_4 = and(_io_mem_req_valid_T_2, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 38046:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 38047:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 38049:7]
    node _T_58 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38051:16]
    node _T_59 = and(missMetaRefill, _T_58) @[build/NutShell.fir.opt.mlir 38053:16]
    node _T_60 = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 38055:16]
    node _T_61 = and(hitWB, _T_60) @[build/NutShell.fir.opt.mlir 38057:16]
    node _T_62 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38059:16]
    node _T_63 = and(_T_61, _T_62) @[build/NutShell.fir.opt.mlir 38061:16]
    node _T_64 = or(_T_59, _T_63) @[build/NutShell.fir.opt.mlir 38063:16]
    regreset REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38064:14]
    connect REG, _T_64 @[build/NutShell.fir.opt.mlir 38065:7]
    wire _WIRE : { tag : UInt<23>, index : UInt<4>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 38066:16]
    wire _WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 38070:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 38071:7]
    node _T_65 = bits(_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 38073:16]
    connect _WIRE.off, _T_65 @[build/NutShell.fir.opt.mlir 38074:7]
    node _T_66 = bits(_WIRE_1, 15, 12) @[build/NutShell.fir.opt.mlir 38076:16]
    connect _WIRE.index, _T_66 @[build/NutShell.fir.opt.mlir 38077:7]
    node _T_67 = bits(_WIRE_1, 38, 16) @[build/NutShell.fir.opt.mlir 38079:16]
    connect _WIRE.tag, _T_67 @[build/NutShell.fir.opt.mlir 38080:7]
    reg REG_1 : UInt<4>, clock @[build/NutShell.fir.opt.mlir 38081:16]
    connect REG_1, _WIRE.index @[build/NutShell.fir.opt.mlir 38082:7]
    reg REG_2 : UInt<4>, clock @[build/NutShell.fir.opt.mlir 38083:16]
    connect REG_2, waymask @[build/NutShell.fir.opt.mlir 38084:7]
    node hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 38086:13]
    node _T_68 = cat(hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 38088:16]
    reg REG_3 : UInt<27>, clock @[build/NutShell.fir.opt.mlir 38089:16]
    connect REG_3, _T_68 @[build/NutShell.fir.opt.mlir 38090:7]
    node _T_69 = mux(hitWB, hitMeta.asid, satp.asid) @[build/NutShell.fir.opt.mlir 38092:16]
    reg REG_4 : UInt<16>, clock @[build/NutShell.fir.opt.mlir 38093:16]
    connect REG_4, _T_69 @[build/NutShell.fir.opt.mlir 38094:7]
    node _T_70 = mux(hitWB, hitMeta.mask, missMask) @[build/NutShell.fir.opt.mlir 38096:16]
    reg REG_5 : UInt<18>, clock @[build/NutShell.fir.opt.mlir 38097:16]
    connect REG_5, _T_70 @[build/NutShell.fir.opt.mlir 38098:7]
    node _T_71 = mux(hitWB, hitRefillFlag, missRefillFlag) @[build/NutShell.fir.opt.mlir 38100:16]
    reg REG_6 : UInt<8>, clock @[build/NutShell.fir.opt.mlir 38101:16]
    connect REG_6, _T_71 @[build/NutShell.fir.opt.mlir 38102:7]
    node _T_72 = mux(hitWB, hitData.ppn, memRdata.ppn) @[build/NutShell.fir.opt.mlir 38104:16]
    reg REG_7 : UInt<20>, clock @[build/NutShell.fir.opt.mlir 38105:16]
    connect REG_7, _T_72 @[build/NutShell.fir.opt.mlir 38106:7]
    node _T_73 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 38108:16]
    reg REG_8 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 38109:16]
    connect REG_8, _T_73 @[build/NutShell.fir.opt.mlir 38110:7]
    connect io.mdWrite.wen, REG @[build/NutShell.fir.opt.mlir 38111:7]
    connect io.mdWrite.windex, REG_1 @[build/NutShell.fir.opt.mlir 38112:7]
    connect io.mdWrite.waymask, REG_2 @[build/NutShell.fir.opt.mlir 38113:7]
    node io_mdWrite_wdata_lo_hi = cat(REG_6, REG_7) @[build/NutShell.fir.opt.mlir 38115:33]
    node io_mdWrite_wdata_lo = cat(io_mdWrite_wdata_lo_hi, REG_8) @[build/NutShell.fir.opt.mlir 38117:30]
    node io_mdWrite_wdata_hi_hi = cat(REG_3, REG_4) @[build/NutShell.fir.opt.mlir 38119:33]
    node io_mdWrite_wdata_hi = cat(io_mdWrite_wdata_hi_hi, REG_5) @[build/NutShell.fir.opt.mlir 38121:30]
    node _io_mdWrite_wdata_T = cat(io_mdWrite_wdata_hi, io_mdWrite_wdata_lo) @[build/NutShell.fir.opt.mlir 38123:30]
    connect io.mdWrite.wdata, _io_mdWrite_wdata_T @[build/NutShell.fir.opt.mlir 38124:7]
    connect io.out.bits.addr, tail(io.in.bits.addr, 7) @[build/NutShell.fir.opt.mlir 38128:7]
    connect io.out.bits.size, io.in.bits.size @[build/NutShell.fir.opt.mlir 38131:7]
    connect io.out.bits.cmd, io.in.bits.cmd @[build/NutShell.fir.opt.mlir 38134:7]
    connect io.out.bits.wmask, io.in.bits.wmask @[build/NutShell.fir.opt.mlir 38137:7]
    connect io.out.bits.wdata, io.in.bits.wdata @[build/NutShell.fir.opt.mlir 38140:7]
    node _io_out_bits_addr_T = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 38142:30]
    node _io_out_bits_addr_T_1 = cat(hitData.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38145:32]
    node _io_out_bits_addr_T_2 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 38147:32]
    node io_out_bits_addr_hi = cat(_io_out_bits_addr_T_2, hitMeta.mask) @[build/NutShell.fir.opt.mlir 38149:30]
    node _io_out_bits_addr_T_3 = cat(io_out_bits_addr_hi, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38151:32]
    node _io_out_bits_addr_T_4 = and(_io_out_bits_addr_T_1, _io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 38153:32]
    node _io_out_bits_addr_T_5 = not(_io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 38155:32]
    node _io_out_bits_addr_T_6 = and(_io_out_bits_addr_T, _io_out_bits_addr_T_5) @[build/NutShell.fir.opt.mlir 38157:32]
    node _io_out_bits_addr_T_7 = or(_io_out_bits_addr_T_4, _io_out_bits_addr_T_6) @[build/NutShell.fir.opt.mlir 38159:32]
    wire _io_out_bits_addr_WIRE : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 38160:33]
    wire _io_out_bits_addr_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 38173:35]
    connect _io_out_bits_addr_WIRE_1, memRespStore @[build/NutShell.fir.opt.mlir 38174:7]
    node _io_out_bits_addr_T_8 = bits(_io_out_bits_addr_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 38176:32]
    connect _io_out_bits_addr_WIRE.flag.v, _io_out_bits_addr_T_8 @[build/NutShell.fir.opt.mlir 38177:7]
    node _io_out_bits_addr_T_9 = bits(_io_out_bits_addr_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 38179:32]
    connect _io_out_bits_addr_WIRE.flag.r, _io_out_bits_addr_T_9 @[build/NutShell.fir.opt.mlir 38180:7]
    node _io_out_bits_addr_T_10 = bits(_io_out_bits_addr_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 38182:33]
    connect _io_out_bits_addr_WIRE.flag.w, _io_out_bits_addr_T_10 @[build/NutShell.fir.opt.mlir 38183:7]
    node _io_out_bits_addr_T_11 = bits(_io_out_bits_addr_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 38185:33]
    connect _io_out_bits_addr_WIRE.flag.x, _io_out_bits_addr_T_11 @[build/NutShell.fir.opt.mlir 38186:7]
    node _io_out_bits_addr_T_12 = bits(_io_out_bits_addr_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 38188:33]
    connect _io_out_bits_addr_WIRE.flag.u, _io_out_bits_addr_T_12 @[build/NutShell.fir.opt.mlir 38189:7]
    node _io_out_bits_addr_T_13 = bits(_io_out_bits_addr_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 38191:33]
    connect _io_out_bits_addr_WIRE.flag.g, _io_out_bits_addr_T_13 @[build/NutShell.fir.opt.mlir 38192:7]
    node _io_out_bits_addr_T_14 = bits(_io_out_bits_addr_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 38194:33]
    connect _io_out_bits_addr_WIRE.flag.a, _io_out_bits_addr_T_14 @[build/NutShell.fir.opt.mlir 38195:7]
    node _io_out_bits_addr_T_15 = bits(_io_out_bits_addr_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 38197:33]
    connect _io_out_bits_addr_WIRE.flag.d, _io_out_bits_addr_T_15 @[build/NutShell.fir.opt.mlir 38198:7]
    node _io_out_bits_addr_T_16 = bits(_io_out_bits_addr_WIRE_1, 9, 8) @[build/NutShell.fir.opt.mlir 38200:33]
    connect _io_out_bits_addr_WIRE.rsw, _io_out_bits_addr_T_16 @[build/NutShell.fir.opt.mlir 38201:7]
    node _io_out_bits_addr_T_17 = bits(_io_out_bits_addr_WIRE_1, 29, 10) @[build/NutShell.fir.opt.mlir 38203:33]
    connect _io_out_bits_addr_WIRE.ppn, _io_out_bits_addr_T_17 @[build/NutShell.fir.opt.mlir 38204:7]
    node _io_out_bits_addr_T_18 = bits(_io_out_bits_addr_WIRE_1, 63, 30) @[build/NutShell.fir.opt.mlir 38206:33]
    connect _io_out_bits_addr_WIRE.reserved, _io_out_bits_addr_T_18 @[build/NutShell.fir.opt.mlir 38207:7]
    node _io_out_bits_addr_T_19 = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 38209:33]
    node _io_out_bits_addr_T_20 = cat(_io_out_bits_addr_WIRE.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38211:33]
    node _io_out_bits_addr_T_21 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 38213:33]
    node io_out_bits_addr_hi_1 = cat(_io_out_bits_addr_T_21, missMaskStore) @[build/NutShell.fir.opt.mlir 38215:32]
    node _io_out_bits_addr_T_22 = cat(io_out_bits_addr_hi_1, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38217:33]
    node _io_out_bits_addr_T_23 = and(_io_out_bits_addr_T_20, _io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 38219:33]
    node _io_out_bits_addr_T_24 = not(_io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 38221:33]
    node _io_out_bits_addr_T_25 = and(_io_out_bits_addr_T_19, _io_out_bits_addr_T_24) @[build/NutShell.fir.opt.mlir 38223:33]
    node _io_out_bits_addr_T_26 = or(_io_out_bits_addr_T_23, _io_out_bits_addr_T_25) @[build/NutShell.fir.opt.mlir 38225:33]
    node _io_out_bits_addr_T_27 = mux(hit, _io_out_bits_addr_T_7, _io_out_bits_addr_T_26) @[build/NutShell.fir.opt.mlir 38227:33]
    connect io.out.bits.addr, _io_out_bits_addr_T_27 @[build/NutShell.fir.opt.mlir 38228:7]
    node _io_out_valid_T = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38230:26]
    node _io_out_valid_T_1 = and(hit, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 38232:28]
    node _io_out_valid_T_2 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38234:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, loadPF) @[build/NutShell.fir.opt.mlir 38236:28]
    node _io_out_valid_T_4 = or(_io_out_valid_T_3, storePF) @[build/NutShell.fir.opt.mlir 38238:28]
    node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38240:28]
    node _io_out_valid_T_6 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 38242:28]
    node _io_out_valid_T_7 = mux(_io_out_valid_T_1, _io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 38244:28]
    node _io_out_valid_T_8 = and(io.in.valid, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 38246:28]
    connect io.out.valid, _io_out_valid_T_8 @[build/NutShell.fir.opt.mlir 38247:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 38249:25]
    node _io_in_ready_T_1 = and(io.out.ready, _io_in_ready_T) @[build/NutShell.fir.opt.mlir 38251:27]
    node _io_in_ready_T_2 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38253:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 38255:27]
    node _io_in_ready_T_4 = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38257:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 38259:27]
    node _io_in_ready_T_6 = and(_io_in_ready_T_5, io.mdReady) @[build/NutShell.fir.opt.mlir 38261:27]
    node _io_in_ready_T_7 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38263:27]
    node _io_in_ready_T_8 = eq(_io_in_ready_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38265:27]
    node _io_in_ready_T_9 = eq(loadPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38267:27]
    node _io_in_ready_T_10 = and(_io_in_ready_T_8, _io_in_ready_T_9) @[build/NutShell.fir.opt.mlir 38269:28]
    node _io_in_ready_T_11 = eq(storePF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38271:28]
    node _io_in_ready_T_12 = and(_io_in_ready_T_10, _io_in_ready_T_11) @[build/NutShell.fir.opt.mlir 38273:28]
    node _io_in_ready_T_13 = and(_io_in_ready_T_6, _io_in_ready_T_12) @[build/NutShell.fir.opt.mlir 38275:28]
    connect io.in.ready, _io_in_ready_T_13 @[build/NutShell.fir.opt.mlir 38276:7]
    node _io_ipf_T = mux(hit, hitinstrPF, missIPF) @[build/NutShell.fir.opt.mlir 38278:20]
    connect io.ipf, _io_ipf_T @[build/NutShell.fir.opt.mlir 38279:7]
    node _io_isFinish_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 38281:25]
    node _io_isFinish_T_1 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38283:27]
    node _io_isFinish_T_2 = or(_io_isFinish_T, _io_isFinish_T_1) @[build/NutShell.fir.opt.mlir 38285:27]
    connect io.isFinish, _io_isFinish_T_2 @[build/NutShell.fir.opt.mlir 38286:7]
    inst LogPerfHelper_1 of LogPerfHelper_31 @[build/NutShell.fir.opt.mlir 38287:107]
    wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 38288:22]
    connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 38293:7]
    connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 38294:7]
    connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 38295:7]
    connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 38296:7]
    node _T_74 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38298:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 38299:7]
      node _T_75 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38301:18]
      node _T_76 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38303:18]
      when _T_76 : @[build/NutShell.fir.opt.mlir 38304:9]
        skip @[build/NutShell.fir.opt.mlir 38305:11]
      node _T_77 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38308:18]
      node _T_78 = eq(_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38310:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 38311:9]
        skip @[build/NutShell.fir.opt.mlir 38312:11]
    node _T_79 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38316:16]
    when _T_79 : @[build/NutShell.fir.opt.mlir 38317:7]
      node _T_80 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38319:18]
      node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38321:18]
      when _T_81 : @[build/NutShell.fir.opt.mlir 38322:9]
        skip @[build/NutShell.fir.opt.mlir 38323:11]
      node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38326:18]
      node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38328:18]
      when _T_83 : @[build/NutShell.fir.opt.mlir 38329:9]
        skip @[build/NutShell.fir.opt.mlir 38330:11]
    node lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 38334:16]
    node lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 38336:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 38338:13]
    node hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 38340:16]
    node hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 38342:16]
    node hi_1 = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 38344:15]
    node _T_84 = cat(hi_1, lo) @[build/NutShell.fir.opt.mlir 38346:16]
    node _T_85 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38348:16]
    when _T_85 : @[build/NutShell.fir.opt.mlir 38349:7]
      node _T_86 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38351:18]
      node _T_87 = eq(_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38353:18]
      when _T_87 : @[build/NutShell.fir.opt.mlir 38354:9]
        skip @[build/NutShell.fir.opt.mlir 38355:11]
      node _T_88 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38358:18]
      node _T_89 = eq(_T_88, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38360:18]
      when _T_89 : @[build/NutShell.fir.opt.mlir 38361:9]
        skip @[build/NutShell.fir.opt.mlir 38362:11]
    node lo_lo_1 = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 38366:18]
    node lo_hi_1 = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 38368:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 38370:15]
    node hi_lo_1 = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 38372:18]
    node hi_hi_1 = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 38374:18]
    node hi_2 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 38376:15]
    node _T_90 = cat(hi_2, lo_1) @[build/NutShell.fir.opt.mlir 38378:16]
    node lo_2 = cat(memRdata.rsw, _T_90) @[build/NutShell.fir.opt.mlir 38380:15]
    node hi_3 = cat(memRdata.reserved, memRdata.ppn) @[build/NutShell.fir.opt.mlir 38382:15]
    node _T_91 = cat(hi_3, lo_2) @[build/NutShell.fir.opt.mlir 38384:16]
    node _T_92 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38386:16]
    when _T_92 : @[build/NutShell.fir.opt.mlir 38387:7]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38389:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38391:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 38392:9]
        skip @[build/NutShell.fir.opt.mlir 38393:11]
      node _T_95 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38396:18]
      node _T_96 = eq(_T_95, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38398:18]
      when _T_96 : @[build/NutShell.fir.opt.mlir 38399:9]
        skip @[build/NutShell.fir.opt.mlir 38400:11]
    wire _WIRE_2 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38403:18]
    wire _WIRE_3 : UInt<121> @[build/NutShell.fir.opt.mlir 38410:18]
    connect _WIRE_3, io.md[0] @[build/NutShell.fir.opt.mlir 38411:7]
    node _T_97 = bits(_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 38413:16]
    connect _WIRE_2.pteaddr, _T_97 @[build/NutShell.fir.opt.mlir 38414:7]
    node _T_98 = bits(_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 38416:16]
    connect _WIRE_2.ppn, _T_98 @[build/NutShell.fir.opt.mlir 38417:7]
    node _T_99 = bits(_WIRE_3, 59, 52) @[build/NutShell.fir.opt.mlir 38419:16]
    connect _WIRE_2.flag, _T_99 @[build/NutShell.fir.opt.mlir 38420:7]
    node _T_100 = bits(_WIRE_3, 77, 60) @[build/NutShell.fir.opt.mlir 38422:17]
    connect _WIRE_2.mask, _T_100 @[build/NutShell.fir.opt.mlir 38423:7]
    node _T_101 = bits(_WIRE_3, 93, 78) @[build/NutShell.fir.opt.mlir 38425:17]
    connect _WIRE_2.asid, _T_101 @[build/NutShell.fir.opt.mlir 38426:7]
    node _T_102 = bits(_WIRE_3, 120, 94) @[build/NutShell.fir.opt.mlir 38428:17]
    connect _WIRE_2.vpn, _T_102 @[build/NutShell.fir.opt.mlir 38429:7]
    wire _WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38430:18]
    wire _WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 38437:18]
    connect _WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 38438:7]
    node _T_103 = bits(_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 38440:17]
    connect _WIRE_4.pteaddr, _T_103 @[build/NutShell.fir.opt.mlir 38441:7]
    node _T_104 = bits(_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 38443:17]
    connect _WIRE_4.ppn, _T_104 @[build/NutShell.fir.opt.mlir 38444:7]
    node _T_105 = bits(_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 38446:17]
    connect _WIRE_4.flag, _T_105 @[build/NutShell.fir.opt.mlir 38447:7]
    node _T_106 = bits(_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 38449:17]
    connect _WIRE_4.mask, _T_106 @[build/NutShell.fir.opt.mlir 38450:7]
    node _T_107 = bits(_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 38452:17]
    connect _WIRE_4.asid, _T_107 @[build/NutShell.fir.opt.mlir 38453:7]
    node _T_108 = bits(_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 38455:17]
    connect _WIRE_4.vpn, _T_108 @[build/NutShell.fir.opt.mlir 38456:7]
    wire _WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38457:18]
    wire _WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 38464:18]
    connect _WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 38465:7]
    node _T_109 = bits(_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 38467:17]
    connect _WIRE_6.pteaddr, _T_109 @[build/NutShell.fir.opt.mlir 38468:7]
    node _T_110 = bits(_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 38470:17]
    connect _WIRE_6.ppn, _T_110 @[build/NutShell.fir.opt.mlir 38471:7]
    node _T_111 = bits(_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 38473:17]
    connect _WIRE_6.flag, _T_111 @[build/NutShell.fir.opt.mlir 38474:7]
    node _T_112 = bits(_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 38476:17]
    connect _WIRE_6.mask, _T_112 @[build/NutShell.fir.opt.mlir 38477:7]
    node _T_113 = bits(_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 38479:17]
    connect _WIRE_6.asid, _T_113 @[build/NutShell.fir.opt.mlir 38480:7]
    node _T_114 = bits(_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 38482:17]
    connect _WIRE_6.vpn, _T_114 @[build/NutShell.fir.opt.mlir 38483:7]
    wire _WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38484:18]
    wire _WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 38491:18]
    connect _WIRE_9, io.md[1] @[build/NutShell.fir.opt.mlir 38492:7]
    node _T_115 = bits(_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 38494:17]
    connect _WIRE_8.pteaddr, _T_115 @[build/NutShell.fir.opt.mlir 38495:7]
    node _T_116 = bits(_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 38497:17]
    connect _WIRE_8.ppn, _T_116 @[build/NutShell.fir.opt.mlir 38498:7]
    node _T_117 = bits(_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 38500:17]
    connect _WIRE_8.flag, _T_117 @[build/NutShell.fir.opt.mlir 38501:7]
    node _T_118 = bits(_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 38503:17]
    connect _WIRE_8.mask, _T_118 @[build/NutShell.fir.opt.mlir 38504:7]
    node _T_119 = bits(_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 38506:17]
    connect _WIRE_8.asid, _T_119 @[build/NutShell.fir.opt.mlir 38507:7]
    node _T_120 = bits(_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 38509:17]
    connect _WIRE_8.vpn, _T_120 @[build/NutShell.fir.opt.mlir 38510:7]
    wire _WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38511:19]
    wire _WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 38518:19]
    connect _WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 38519:7]
    node _T_121 = bits(_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 38521:17]
    connect _WIRE_10.pteaddr, _T_121 @[build/NutShell.fir.opt.mlir 38522:7]
    node _T_122 = bits(_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 38524:17]
    connect _WIRE_10.ppn, _T_122 @[build/NutShell.fir.opt.mlir 38525:7]
    node _T_123 = bits(_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 38527:17]
    connect _WIRE_10.flag, _T_123 @[build/NutShell.fir.opt.mlir 38528:7]
    node _T_124 = bits(_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 38530:17]
    connect _WIRE_10.mask, _T_124 @[build/NutShell.fir.opt.mlir 38531:7]
    node _T_125 = bits(_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 38533:17]
    connect _WIRE_10.asid, _T_125 @[build/NutShell.fir.opt.mlir 38534:7]
    node _T_126 = bits(_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 38536:17]
    connect _WIRE_10.vpn, _T_126 @[build/NutShell.fir.opt.mlir 38537:7]
    wire _WIRE_12 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38538:19]
    wire _WIRE_13 : UInt<121> @[build/NutShell.fir.opt.mlir 38545:19]
    connect _WIRE_13, io.md[1] @[build/NutShell.fir.opt.mlir 38546:7]
    node _T_127 = bits(_WIRE_13, 31, 0) @[build/NutShell.fir.opt.mlir 38548:17]
    connect _WIRE_12.pteaddr, _T_127 @[build/NutShell.fir.opt.mlir 38549:7]
    node _T_128 = bits(_WIRE_13, 51, 32) @[build/NutShell.fir.opt.mlir 38551:17]
    connect _WIRE_12.ppn, _T_128 @[build/NutShell.fir.opt.mlir 38552:7]
    node _T_129 = bits(_WIRE_13, 59, 52) @[build/NutShell.fir.opt.mlir 38554:17]
    connect _WIRE_12.flag, _T_129 @[build/NutShell.fir.opt.mlir 38555:7]
    node _T_130 = bits(_WIRE_13, 77, 60) @[build/NutShell.fir.opt.mlir 38557:17]
    connect _WIRE_12.mask, _T_130 @[build/NutShell.fir.opt.mlir 38558:7]
    node _T_131 = bits(_WIRE_13, 93, 78) @[build/NutShell.fir.opt.mlir 38560:17]
    connect _WIRE_12.asid, _T_131 @[build/NutShell.fir.opt.mlir 38561:7]
    node _T_132 = bits(_WIRE_13, 120, 94) @[build/NutShell.fir.opt.mlir 38563:17]
    connect _WIRE_12.vpn, _T_132 @[build/NutShell.fir.opt.mlir 38564:7]
    wire _WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38565:19]
    wire _WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 38572:19]
    connect _WIRE_15, io.md[2] @[build/NutShell.fir.opt.mlir 38573:7]
    node _T_133 = bits(_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 38575:17]
    connect _WIRE_14.pteaddr, _T_133 @[build/NutShell.fir.opt.mlir 38576:7]
    node _T_134 = bits(_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 38578:17]
    connect _WIRE_14.ppn, _T_134 @[build/NutShell.fir.opt.mlir 38579:7]
    node _T_135 = bits(_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 38581:17]
    connect _WIRE_14.flag, _T_135 @[build/NutShell.fir.opt.mlir 38582:7]
    node _T_136 = bits(_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 38584:17]
    connect _WIRE_14.mask, _T_136 @[build/NutShell.fir.opt.mlir 38585:7]
    node _T_137 = bits(_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 38587:17]
    connect _WIRE_14.asid, _T_137 @[build/NutShell.fir.opt.mlir 38588:7]
    node _T_138 = bits(_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 38590:17]
    connect _WIRE_14.vpn, _T_138 @[build/NutShell.fir.opt.mlir 38591:7]
    wire _WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38592:19]
    wire _WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 38599:19]
    connect _WIRE_17, io.md[2] @[build/NutShell.fir.opt.mlir 38600:7]
    node _T_139 = bits(_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 38602:17]
    connect _WIRE_16.pteaddr, _T_139 @[build/NutShell.fir.opt.mlir 38603:7]
    node _T_140 = bits(_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 38605:17]
    connect _WIRE_16.ppn, _T_140 @[build/NutShell.fir.opt.mlir 38606:7]
    node _T_141 = bits(_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 38608:17]
    connect _WIRE_16.flag, _T_141 @[build/NutShell.fir.opt.mlir 38609:7]
    node _T_142 = bits(_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 38611:17]
    connect _WIRE_16.mask, _T_142 @[build/NutShell.fir.opt.mlir 38612:7]
    node _T_143 = bits(_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 38614:17]
    connect _WIRE_16.asid, _T_143 @[build/NutShell.fir.opt.mlir 38615:7]
    node _T_144 = bits(_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 38617:17]
    connect _WIRE_16.vpn, _T_144 @[build/NutShell.fir.opt.mlir 38618:7]
    wire _WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38619:19]
    wire _WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 38626:19]
    connect _WIRE_19, io.md[2] @[build/NutShell.fir.opt.mlir 38627:7]
    node _T_145 = bits(_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 38629:17]
    connect _WIRE_18.pteaddr, _T_145 @[build/NutShell.fir.opt.mlir 38630:7]
    node _T_146 = bits(_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 38632:17]
    connect _WIRE_18.ppn, _T_146 @[build/NutShell.fir.opt.mlir 38633:7]
    node _T_147 = bits(_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 38635:17]
    connect _WIRE_18.flag, _T_147 @[build/NutShell.fir.opt.mlir 38636:7]
    node _T_148 = bits(_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 38638:17]
    connect _WIRE_18.mask, _T_148 @[build/NutShell.fir.opt.mlir 38639:7]
    node _T_149 = bits(_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 38641:17]
    connect _WIRE_18.asid, _T_149 @[build/NutShell.fir.opt.mlir 38642:7]
    node _T_150 = bits(_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 38644:17]
    connect _WIRE_18.vpn, _T_150 @[build/NutShell.fir.opt.mlir 38645:7]
    wire _WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38646:19]
    wire _WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 38653:19]
    connect _WIRE_21, io.md[3] @[build/NutShell.fir.opt.mlir 38654:7]
    node _T_151 = bits(_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 38656:17]
    connect _WIRE_20.pteaddr, _T_151 @[build/NutShell.fir.opt.mlir 38657:7]
    node _T_152 = bits(_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 38659:17]
    connect _WIRE_20.ppn, _T_152 @[build/NutShell.fir.opt.mlir 38660:7]
    node _T_153 = bits(_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 38662:17]
    connect _WIRE_20.flag, _T_153 @[build/NutShell.fir.opt.mlir 38663:7]
    node _T_154 = bits(_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 38665:17]
    connect _WIRE_20.mask, _T_154 @[build/NutShell.fir.opt.mlir 38666:7]
    node _T_155 = bits(_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 38668:17]
    connect _WIRE_20.asid, _T_155 @[build/NutShell.fir.opt.mlir 38669:7]
    node _T_156 = bits(_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 38671:17]
    connect _WIRE_20.vpn, _T_156 @[build/NutShell.fir.opt.mlir 38672:7]
    wire _WIRE_22 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38673:19]
    wire _WIRE_23 : UInt<121> @[build/NutShell.fir.opt.mlir 38680:19]
    connect _WIRE_23, io.md[3] @[build/NutShell.fir.opt.mlir 38681:7]
    node _T_157 = bits(_WIRE_23, 31, 0) @[build/NutShell.fir.opt.mlir 38683:17]
    connect _WIRE_22.pteaddr, _T_157 @[build/NutShell.fir.opt.mlir 38684:7]
    node _T_158 = bits(_WIRE_23, 51, 32) @[build/NutShell.fir.opt.mlir 38686:17]
    connect _WIRE_22.ppn, _T_158 @[build/NutShell.fir.opt.mlir 38687:7]
    node _T_159 = bits(_WIRE_23, 59, 52) @[build/NutShell.fir.opt.mlir 38689:17]
    connect _WIRE_22.flag, _T_159 @[build/NutShell.fir.opt.mlir 38690:7]
    node _T_160 = bits(_WIRE_23, 77, 60) @[build/NutShell.fir.opt.mlir 38692:17]
    connect _WIRE_22.mask, _T_160 @[build/NutShell.fir.opt.mlir 38693:7]
    node _T_161 = bits(_WIRE_23, 93, 78) @[build/NutShell.fir.opt.mlir 38695:17]
    connect _WIRE_22.asid, _T_161 @[build/NutShell.fir.opt.mlir 38696:7]
    node _T_162 = bits(_WIRE_23, 120, 94) @[build/NutShell.fir.opt.mlir 38698:17]
    connect _WIRE_22.vpn, _T_162 @[build/NutShell.fir.opt.mlir 38699:7]
    wire _WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38700:19]
    wire _WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 38707:19]
    connect _WIRE_25, io.md[3] @[build/NutShell.fir.opt.mlir 38708:7]
    node _T_163 = bits(_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 38710:17]
    connect _WIRE_24.pteaddr, _T_163 @[build/NutShell.fir.opt.mlir 38711:7]
    node _T_164 = bits(_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 38713:17]
    connect _WIRE_24.ppn, _T_164 @[build/NutShell.fir.opt.mlir 38714:7]
    node _T_165 = bits(_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 38716:17]
    connect _WIRE_24.flag, _T_165 @[build/NutShell.fir.opt.mlir 38717:7]
    node _T_166 = bits(_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 38719:17]
    connect _WIRE_24.mask, _T_166 @[build/NutShell.fir.opt.mlir 38720:7]
    node _T_167 = bits(_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 38722:17]
    connect _WIRE_24.asid, _T_167 @[build/NutShell.fir.opt.mlir 38723:7]
    node _T_168 = bits(_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 38725:17]
    connect _WIRE_24.vpn, _T_168 @[build/NutShell.fir.opt.mlir 38726:7]
    node _T_169 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38728:17]
    when _T_169 : @[build/NutShell.fir.opt.mlir 38729:7]
      node _T_170 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38731:19]
      node _T_171 = eq(_T_170, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38733:19]
      when _T_171 : @[build/NutShell.fir.opt.mlir 38734:9]
        skip @[build/NutShell.fir.opt.mlir 38735:11]
      node _T_172 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38738:19]
      node _T_173 = eq(_T_172, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38740:19]
      when _T_173 : @[build/NutShell.fir.opt.mlir 38741:9]
        skip @[build/NutShell.fir.opt.mlir 38742:11]
    wire _WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38745:19]
    wire _WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 38752:19]
    connect _WIRE_27, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38753:7]
    node _T_174 = bits(_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 38755:17]
    connect _WIRE_26.pteaddr, _T_174 @[build/NutShell.fir.opt.mlir 38756:7]
    node _T_175 = bits(_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 38758:17]
    connect _WIRE_26.ppn, _T_175 @[build/NutShell.fir.opt.mlir 38759:7]
    node _T_176 = bits(_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 38761:17]
    connect _WIRE_26.flag, _T_176 @[build/NutShell.fir.opt.mlir 38762:7]
    node _T_177 = bits(_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 38764:17]
    connect _WIRE_26.mask, _T_177 @[build/NutShell.fir.opt.mlir 38765:7]
    node _T_178 = bits(_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 38767:17]
    connect _WIRE_26.asid, _T_178 @[build/NutShell.fir.opt.mlir 38768:7]
    node _T_179 = bits(_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 38770:17]
    connect _WIRE_26.vpn, _T_179 @[build/NutShell.fir.opt.mlir 38771:7]
    wire _WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38772:19]
    wire _WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 38779:19]
    connect _WIRE_29, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38780:7]
    node _T_180 = bits(_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 38782:17]
    connect _WIRE_28.pteaddr, _T_180 @[build/NutShell.fir.opt.mlir 38783:7]
    node _T_181 = bits(_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 38785:17]
    connect _WIRE_28.ppn, _T_181 @[build/NutShell.fir.opt.mlir 38786:7]
    node _T_182 = bits(_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 38788:17]
    connect _WIRE_28.flag, _T_182 @[build/NutShell.fir.opt.mlir 38789:7]
    node _T_183 = bits(_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 38791:17]
    connect _WIRE_28.mask, _T_183 @[build/NutShell.fir.opt.mlir 38792:7]
    node _T_184 = bits(_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 38794:17]
    connect _WIRE_28.asid, _T_184 @[build/NutShell.fir.opt.mlir 38795:7]
    node _T_185 = bits(_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 38797:17]
    connect _WIRE_28.vpn, _T_185 @[build/NutShell.fir.opt.mlir 38798:7]
    wire _WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38799:19]
    wire _WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 38806:19]
    connect _WIRE_31, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38807:7]
    node _T_186 = bits(_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 38809:17]
    connect _WIRE_30.pteaddr, _T_186 @[build/NutShell.fir.opt.mlir 38810:7]
    node _T_187 = bits(_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 38812:17]
    connect _WIRE_30.ppn, _T_187 @[build/NutShell.fir.opt.mlir 38813:7]
    node _T_188 = bits(_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 38815:17]
    connect _WIRE_30.flag, _T_188 @[build/NutShell.fir.opt.mlir 38816:7]
    node _T_189 = bits(_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 38818:17]
    connect _WIRE_30.mask, _T_189 @[build/NutShell.fir.opt.mlir 38819:7]
    node _T_190 = bits(_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 38821:17]
    connect _WIRE_30.asid, _T_190 @[build/NutShell.fir.opt.mlir 38822:7]
    node _T_191 = bits(_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 38824:17]
    connect _WIRE_30.vpn, _T_191 @[build/NutShell.fir.opt.mlir 38825:7]
    wire _WIRE_32 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38826:19]
    wire _WIRE_33 : UInt<121> @[build/NutShell.fir.opt.mlir 38833:19]
    connect _WIRE_33, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38834:7]
    node _T_192 = bits(_WIRE_33, 31, 0) @[build/NutShell.fir.opt.mlir 38836:17]
    connect _WIRE_32.pteaddr, _T_192 @[build/NutShell.fir.opt.mlir 38837:7]
    node _T_193 = bits(_WIRE_33, 51, 32) @[build/NutShell.fir.opt.mlir 38839:17]
    connect _WIRE_32.ppn, _T_193 @[build/NutShell.fir.opt.mlir 38840:7]
    node _T_194 = bits(_WIRE_33, 59, 52) @[build/NutShell.fir.opt.mlir 38842:17]
    connect _WIRE_32.flag, _T_194 @[build/NutShell.fir.opt.mlir 38843:7]
    node _T_195 = bits(_WIRE_33, 77, 60) @[build/NutShell.fir.opt.mlir 38845:17]
    connect _WIRE_32.mask, _T_195 @[build/NutShell.fir.opt.mlir 38846:7]
    node _T_196 = bits(_WIRE_33, 93, 78) @[build/NutShell.fir.opt.mlir 38848:17]
    connect _WIRE_32.asid, _T_196 @[build/NutShell.fir.opt.mlir 38849:7]
    node _T_197 = bits(_WIRE_33, 120, 94) @[build/NutShell.fir.opt.mlir 38851:17]
    connect _WIRE_32.vpn, _T_197 @[build/NutShell.fir.opt.mlir 38852:7]
    wire _WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38853:19]
    wire _WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 38860:19]
    connect _WIRE_35, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38861:7]
    node _T_198 = bits(_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 38863:17]
    connect _WIRE_34.pteaddr, _T_198 @[build/NutShell.fir.opt.mlir 38864:7]
    node _T_199 = bits(_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 38866:17]
    connect _WIRE_34.ppn, _T_199 @[build/NutShell.fir.opt.mlir 38867:7]
    node _T_200 = bits(_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 38869:17]
    connect _WIRE_34.flag, _T_200 @[build/NutShell.fir.opt.mlir 38870:7]
    node _T_201 = bits(_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 38872:17]
    connect _WIRE_34.mask, _T_201 @[build/NutShell.fir.opt.mlir 38873:7]
    node _T_202 = bits(_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 38875:17]
    connect _WIRE_34.asid, _T_202 @[build/NutShell.fir.opt.mlir 38876:7]
    node _T_203 = bits(_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 38878:17]
    connect _WIRE_34.vpn, _T_203 @[build/NutShell.fir.opt.mlir 38879:7]
    wire _WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38880:19]
    wire _WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 38887:19]
    connect _WIRE_37, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38888:7]
    node _T_204 = bits(_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 38890:17]
    connect _WIRE_36.pteaddr, _T_204 @[build/NutShell.fir.opt.mlir 38891:7]
    node _T_205 = bits(_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 38893:17]
    connect _WIRE_36.ppn, _T_205 @[build/NutShell.fir.opt.mlir 38894:7]
    node _T_206 = bits(_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 38896:17]
    connect _WIRE_36.flag, _T_206 @[build/NutShell.fir.opt.mlir 38897:7]
    node _T_207 = bits(_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 38899:17]
    connect _WIRE_36.mask, _T_207 @[build/NutShell.fir.opt.mlir 38900:7]
    node _T_208 = bits(_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 38902:17]
    connect _WIRE_36.asid, _T_208 @[build/NutShell.fir.opt.mlir 38903:7]
    node _T_209 = bits(_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 38905:17]
    connect _WIRE_36.vpn, _T_209 @[build/NutShell.fir.opt.mlir 38906:7]
    wire _WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38907:19]
    wire _WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 38914:19]
    connect _WIRE_39, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38915:7]
    node _T_210 = bits(_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 38917:17]
    connect _WIRE_38.pteaddr, _T_210 @[build/NutShell.fir.opt.mlir 38918:7]
    node _T_211 = bits(_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 38920:17]
    connect _WIRE_38.ppn, _T_211 @[build/NutShell.fir.opt.mlir 38921:7]
    node _T_212 = bits(_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 38923:17]
    connect _WIRE_38.flag, _T_212 @[build/NutShell.fir.opt.mlir 38924:7]
    node _T_213 = bits(_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 38926:17]
    connect _WIRE_38.mask, _T_213 @[build/NutShell.fir.opt.mlir 38927:7]
    node _T_214 = bits(_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 38929:17]
    connect _WIRE_38.asid, _T_214 @[build/NutShell.fir.opt.mlir 38930:7]
    node _T_215 = bits(_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 38932:17]
    connect _WIRE_38.vpn, _T_215 @[build/NutShell.fir.opt.mlir 38933:7]
    node _T_216 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38935:17]
    when _T_216 : @[build/NutShell.fir.opt.mlir 38936:7]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38938:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38940:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 38941:9]
        skip @[build/NutShell.fir.opt.mlir 38942:11]
      node _T_219 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38945:19]
      node _T_220 = eq(_T_219, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38947:19]
      when _T_220 : @[build/NutShell.fir.opt.mlir 38948:9]
        skip @[build/NutShell.fir.opt.mlir 38949:11]
    node _T_221 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38953:17]
    when _T_221 : @[build/NutShell.fir.opt.mlir 38954:7]
      node _T_222 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38956:19]
      node _T_223 = eq(_T_222, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38958:19]
      when _T_223 : @[build/NutShell.fir.opt.mlir 38959:9]
        skip @[build/NutShell.fir.opt.mlir 38960:11]
      node _T_224 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38963:19]
      node _T_225 = eq(_T_224, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38965:19]
      when _T_225 : @[build/NutShell.fir.opt.mlir 38966:9]
        skip @[build/NutShell.fir.opt.mlir 38967:11]
    node _T_226 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38971:17]
    when _T_226 : @[build/NutShell.fir.opt.mlir 38972:7]
      node _T_227 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38974:19]
      node _T_228 = eq(_T_227, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38976:19]
      when _T_228 : @[build/NutShell.fir.opt.mlir 38977:9]
        skip @[build/NutShell.fir.opt.mlir 38978:11]
      node _T_229 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38981:19]
      node _T_230 = eq(_T_229, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38983:19]
      when _T_230 : @[build/NutShell.fir.opt.mlir 38984:9]
        skip @[build/NutShell.fir.opt.mlir 38985:11]

  module EmbeddedTLBEmpty_1 : @[build/NutShell.fir.opt.mlir 38989:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 38989:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 38989:76]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 38989:103]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 38994:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 38997:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 39000:7]

  module EmbeddedTLBMD_1 : @[build/NutShell.fir.opt.mlir 39002:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39002:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39002:73]
    output io : { tlbmd : UInt<121>[4], flip write : { wen : UInt<1>, windex : UInt<4>, waymask : UInt<4>, wdata : UInt<121> }, flip rindex : UInt<4>, ready : UInt<1> } @[build/NutShell.fir.opt.mlir 39002:100]

    reg tlbmd : UInt<121>[4][16], clock @[build/NutShell.fir.opt.mlir 39011:16]
    connect io.tlbmd, tlbmd[io.rindex] @[build/NutShell.fir.opt.mlir 39013:7]
    regreset resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39015:21]
    regreset resetSet : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 39017:19]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 39018:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39021:7]
    when resetState : @[build/NutShell.fir.opt.mlir 39023:7]
      node wrap_wrap = eq(resetSet, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 39025:22]
      node _wrap_value_T = add(resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 39027:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 39029:28]
      connect resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 39030:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 39031:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 39033:7]
      connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39035:9]
    node wen = mux(resetState, UInt<1>(1), io.write.wen) @[build/NutShell.fir.opt.mlir 39038:14]
    node setIdx = mux(resetState, resetSet, io.write.windex) @[build/NutShell.fir.opt.mlir 39040:17]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 39042:21]
    node waymask = mux(resetState, _waymask_T, io.write.waymask) @[build/NutShell.fir.opt.mlir 39044:18]
    node dataword = mux(resetState, UInt<1>(0), io.write.wdata) @[build/NutShell.fir.opt.mlir 39046:19]
    wire wdata : UInt<121>[4] @[build/NutShell.fir.opt.mlir 39047:16]
    connect wdata[0], dataword @[build/NutShell.fir.opt.mlir 39052:7]
    connect wdata[1], dataword @[build/NutShell.fir.opt.mlir 39053:7]
    connect wdata[2], dataword @[build/NutShell.fir.opt.mlir 39054:7]
    connect wdata[3], dataword @[build/NutShell.fir.opt.mlir 39055:7]
    node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 39057:13]
    node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 39059:15]
    node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 39061:15]
    node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 39063:15]
    node _T_4 = and(wen, _T) @[build/NutShell.fir.opt.mlir 39065:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 39066:7]
      connect tlbmd[setIdx][0], wdata[0] @[build/NutShell.fir.opt.mlir 39069:9]
    node _T_5 = and(wen, _T_1) @[build/NutShell.fir.opt.mlir 39072:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 39073:7]
      connect tlbmd[setIdx][1], wdata[1] @[build/NutShell.fir.opt.mlir 39076:9]
    node _T_6 = and(wen, _T_2) @[build/NutShell.fir.opt.mlir 39079:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 39080:7]
      connect tlbmd[setIdx][2], wdata[2] @[build/NutShell.fir.opt.mlir 39083:9]
    node _T_7 = and(wen, _T_3) @[build/NutShell.fir.opt.mlir 39086:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 39087:7]
      connect tlbmd[setIdx][3], wdata[3] @[build/NutShell.fir.opt.mlir 39090:9]
    node _io_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39093:22]
    connect io.ready, _io_ready_T @[build/NutShell.fir.opt.mlir 39094:7]

  extmodule LogPerfHelper_32 : @[build/NutShell.fir.opt.mlir 39096:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39096:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39096:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39096:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39096:141]
    defname = LogPerfHelper

  module EmbeddedTLB_1 : @[build/NutShell.fir.opt.mlir 39097:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39097:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39097:71]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, csrMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip cacheEmpty : UInt<1>, ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 39097:98]

    wire satp : UInt<64> @[build/NutShell.fir.opt.mlir 39135:15]
    connect satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 39138:7]
    inst tlbExec of EmbeddedTLBExec_1 @[build/NutShell.fir.opt.mlir 39139:53]
    connect tlbExec.clock, clock @[build/NutShell.fir.opt.mlir 39167:7]
    connect tlbExec.reset, reset @[build/NutShell.fir.opt.mlir 39168:7]
    inst tlbEmpty of EmbeddedTLBEmpty_1 @[build/NutShell.fir.opt.mlir 39169:56]
    connect tlbEmpty.clock, clock @[build/NutShell.fir.opt.mlir 39183:7]
    connect tlbEmpty.reset, reset @[build/NutShell.fir.opt.mlir 39184:7]
    inst mdTLB of EmbeddedTLBMD_1 @[build/NutShell.fir.opt.mlir 39185:47]
    connect mdTLB.clock, clock @[build/NutShell.fir.opt.mlir 39190:7]
    connect mdTLB.reset, reset @[build/NutShell.fir.opt.mlir 39191:7]
    wire mdUpdate : UInt<1> @[build/NutShell.fir.opt.mlir 39192:19]
    connect tlbExec.io.flush, io.flush @[build/NutShell.fir.opt.mlir 39193:7]
    connect tlbExec.io.satp, satp @[build/NutShell.fir.opt.mlir 39194:7]
    connect io.mem.resp.ready, tlbExec.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 39197:7]
    connect tlbExec.io.mem.resp.valid, io.mem.resp.valid @[build/NutShell.fir.opt.mlir 39200:7]
    connect tlbExec.io.mem.resp.bits, io.mem.resp.bits @[build/NutShell.fir.opt.mlir 39203:7]
    connect io.mem.req.bits, tlbExec.io.mem.req.bits @[build/NutShell.fir.opt.mlir 39204:7]
    connect io.mem.req.valid, tlbExec.io.mem.req.valid @[build/NutShell.fir.opt.mlir 39205:7]
    connect tlbExec.io.mem.req.ready, io.mem.req.ready @[build/NutShell.fir.opt.mlir 39206:7]
    connect io.csrMMU.addr, tlbExec.io.pf.addr @[build/NutShell.fir.opt.mlir 39207:7]
    connect io.csrMMU.storePF, tlbExec.io.pf.storePF @[build/NutShell.fir.opt.mlir 39208:7]
    connect io.csrMMU.loadPF, tlbExec.io.pf.loadPF @[build/NutShell.fir.opt.mlir 39209:7]
    connect tlbExec.io.pf.status_mxr, io.csrMMU.status_mxr @[build/NutShell.fir.opt.mlir 39210:7]
    connect tlbExec.io.pf.status_sum, io.csrMMU.status_sum @[build/NutShell.fir.opt.mlir 39211:7]
    connect tlbExec.io.pf.privilegeMode, io.csrMMU.privilegeMode @[build/NutShell.fir.opt.mlir 39212:7]
    reg r : UInt<121>[4], clock @[build/NutShell.fir.opt.mlir 39213:12]
    when mdUpdate : @[build/NutShell.fir.opt.mlir 39214:7]
      connect r, mdTLB.io.tlbmd @[build/NutShell.fir.opt.mlir 39215:9]
    connect tlbExec.io.md, r @[build/NutShell.fir.opt.mlir 39217:7]
    connect tlbExec.io.mdReady, mdTLB.io.ready @[build/NutShell.fir.opt.mlir 39218:7]
    wire _mdTLB_io_rindex_WIRE : { tag : UInt<23>, index : UInt<4>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 39219:32]
    wire _mdTLB_io_rindex_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 39223:34]
    connect _mdTLB_io_rindex_WIRE_1, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 39224:7]
    node _mdTLB_io_rindex_T = bits(_mdTLB_io_rindex_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 39226:29]
    connect _mdTLB_io_rindex_WIRE.off, _mdTLB_io_rindex_T @[build/NutShell.fir.opt.mlir 39227:7]
    node _mdTLB_io_rindex_T_1 = bits(_mdTLB_io_rindex_WIRE_1, 15, 12) @[build/NutShell.fir.opt.mlir 39229:31]
    connect _mdTLB_io_rindex_WIRE.index, _mdTLB_io_rindex_T_1 @[build/NutShell.fir.opt.mlir 39230:7]
    node _mdTLB_io_rindex_T_2 = bits(_mdTLB_io_rindex_WIRE_1, 38, 16) @[build/NutShell.fir.opt.mlir 39232:31]
    connect _mdTLB_io_rindex_WIRE.tag, _mdTLB_io_rindex_T_2 @[build/NutShell.fir.opt.mlir 39233:7]
    connect mdTLB.io.rindex, _mdTLB_io_rindex_WIRE.index @[build/NutShell.fir.opt.mlir 39234:7]
    connect mdTLB.io.write, tlbExec.io.mdWrite @[build/NutShell.fir.opt.mlir 39235:7]
    connect io.ipf, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39238:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 39239:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39241:7]
    node _mdTLB_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 39243:25]
    node _mdTLB_reset_T_1 = or(_mdTLB_reset_T, flushTLB) @[build/NutShell.fir.opt.mlir 39245:27]
    connect mdTLB.reset, _mdTLB_reset_T_1 @[build/NutShell.fir.opt.mlir 39247:7]
    wire _vmEnable_WIRE : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 39248:25]
    wire _vmEnable_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 39253:27]
    connect _vmEnable_WIRE_1, satp @[build/NutShell.fir.opt.mlir 39254:7]
    node _vmEnable_T = bits(_vmEnable_WIRE_1, 19, 0) @[build/NutShell.fir.opt.mlir 39256:22]
    connect _vmEnable_WIRE.ppn, _vmEnable_T @[build/NutShell.fir.opt.mlir 39257:7]
    node _vmEnable_T_1 = bits(_vmEnable_WIRE_1, 43, 20) @[build/NutShell.fir.opt.mlir 39259:24]
    connect _vmEnable_WIRE.res, _vmEnable_T_1 @[build/NutShell.fir.opt.mlir 39260:7]
    node _vmEnable_T_2 = bits(_vmEnable_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 39262:24]
    connect _vmEnable_WIRE.asid, _vmEnable_T_2 @[build/NutShell.fir.opt.mlir 39263:7]
    node _vmEnable_T_3 = bits(_vmEnable_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 39265:24]
    connect _vmEnable_WIRE.mode, _vmEnable_T_3 @[build/NutShell.fir.opt.mlir 39266:7]
    node _vmEnable_T_4 = eq(_vmEnable_WIRE.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 39269:24]
    node _vmEnable_T_5 = lt(io.csrMMU.privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 39272:24]
    node vmEnable = and(_vmEnable_T_4, _vmEnable_T_5) @[build/NutShell.fir.opt.mlir 39274:19]
    invalidate tlbEmpty.io.in.bits.wdata @[build/NutShell.fir.opt.mlir 39276:7]
    invalidate tlbEmpty.io.in.bits.wmask @[build/NutShell.fir.opt.mlir 39278:7]
    invalidate tlbEmpty.io.in.bits.cmd @[build/NutShell.fir.opt.mlir 39280:7]
    invalidate tlbEmpty.io.in.bits.size @[build/NutShell.fir.opt.mlir 39282:7]
    invalidate tlbEmpty.io.in.bits.addr @[build/NutShell.fir.opt.mlir 39284:7]
    invalidate tlbEmpty.io.in.valid @[build/NutShell.fir.opt.mlir 39286:7]
    invalidate tlbEmpty.io.out.ready @[build/NutShell.fir.opt.mlir 39288:7]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39289:16]
    when tlbExec.io.isFinish : @[build/NutShell.fir.opt.mlir 39290:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39292:9]
    node _T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39295:13]
    node _T_1 = and(_T, vmEnable) @[build/NutShell.fir.opt.mlir 39297:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 39299:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39301:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 39303:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39305:9]
    connect io.in.req.ready, tlbExec.io.in.ready @[build/NutShell.fir.opt.mlir 39307:7]
    node _tlbExec_io_in_bits_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39309:32]
    reg tlbExec_io_in_bits_r : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 39310:31]
    when _tlbExec_io_in_bits_T : @[build/NutShell.fir.opt.mlir 39311:7]
      connect tlbExec_io_in_bits_r, io.in.req.bits @[build/NutShell.fir.opt.mlir 39312:9]
    connect tlbExec.io.in.bits, tlbExec_io_in_bits_r @[build/NutShell.fir.opt.mlir 39314:7]
    connect tlbExec.io.in.valid, valid @[build/NutShell.fir.opt.mlir 39315:7]
    node _mdUpdate_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39317:22]
    connect mdUpdate, _mdUpdate_T @[build/NutShell.fir.opt.mlir 39318:7]
    node _T_2 = and(tlbEmpty.io.out.ready, tlbEmpty.io.out.valid) @[build/NutShell.fir.opt.mlir 39320:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39321:18]
    when _T_2 : @[build/NutShell.fir.opt.mlir 39322:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39324:9]
    node _T_3 = and(tlbExec.io.out.valid, tlbEmpty.io.in.ready) @[build/NutShell.fir.opt.mlir 39327:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 39328:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39330:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 39332:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39334:9]
    connect tlbExec.io.out.ready, tlbEmpty.io.in.ready @[build/NutShell.fir.opt.mlir 39336:7]
    node _tlbEmpty_io_in_bits_T = and(tlbExec.io.out.valid, tlbEmpty.io.in.ready) @[build/NutShell.fir.opt.mlir 39338:33]
    reg tlbEmpty_io_in_bits_r : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 39339:32]
    when _tlbEmpty_io_in_bits_T : @[build/NutShell.fir.opt.mlir 39345:7]
      connect tlbEmpty_io_in_bits_r, tlbExec.io.out.bits @[build/NutShell.fir.opt.mlir 39346:9]
    connect tlbEmpty.io.in.bits.wdata, tlbEmpty_io_in_bits_r.wdata @[build/NutShell.fir.opt.mlir 39348:7]
    connect tlbEmpty.io.in.bits.wmask, tlbEmpty_io_in_bits_r.wmask @[build/NutShell.fir.opt.mlir 39349:7]
    connect tlbEmpty.io.in.bits.cmd, tlbEmpty_io_in_bits_r.cmd @[build/NutShell.fir.opt.mlir 39350:7]
    connect tlbEmpty.io.in.bits.size, tlbEmpty_io_in_bits_r.size @[build/NutShell.fir.opt.mlir 39351:7]
    connect tlbEmpty.io.in.bits.addr, tlbEmpty_io_in_bits_r.addr @[build/NutShell.fir.opt.mlir 39352:7]
    connect tlbEmpty.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 39353:7]
    node _T_4 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39355:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 39356:7]
      connect tlbExec.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39358:9]
      connect tlbEmpty.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39360:9]
      connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 39361:9]
      connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 39362:9]
      node _io_out_req_bits_addr_T = bits(io.in.req.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 39364:36]
      connect io.out.req.bits.addr, _io_out_req_bits_addr_T @[build/NutShell.fir.opt.mlir 39365:9]
      connect io.out.req.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 39366:9]
      connect io.out.req.bits.cmd, io.in.req.bits.cmd @[build/NutShell.fir.opt.mlir 39367:9]
      connect io.out.req.bits.wmask, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 39368:9]
      connect io.out.req.bits.wdata, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 39369:9]
    else :
      connect io.out.req.bits, tlbEmpty.io.out.bits @[build/NutShell.fir.opt.mlir 39371:9]
      connect io.out.req.valid, tlbEmpty.io.out.valid @[build/NutShell.fir.opt.mlir 39372:9]
      connect tlbEmpty.io.out.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 39373:9]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 39377:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 39380:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 39383:7]
    node _alreadyOutFinish_T = eq(tlbExec.io.out.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39385:30]
    node _alreadyOutFinish_T_1 = and(tlbExec.io.out.valid, _alreadyOutFinish_T) @[build/NutShell.fir.opt.mlir 39387:32]
    regreset alreadyOutFinish : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39388:27]
    when _alreadyOutFinish_T_1 : @[build/NutShell.fir.opt.mlir 39389:7]
      connect alreadyOutFinish, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39391:9]
    node _T_5 = and(tlbExec.io.out.ready, tlbExec.io.out.valid) @[build/NutShell.fir.opt.mlir 39394:15]
    node _T_6 = and(alreadyOutFinish, _T_5) @[build/NutShell.fir.opt.mlir 39396:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 39397:7]
      connect alreadyOutFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39399:9]
    node _tlbFinish_T = eq(alreadyOutFinish, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39402:23]
    node _tlbFinish_T_1 = and(tlbExec.io.out.valid, _tlbFinish_T) @[build/NutShell.fir.opt.mlir 39404:25]
    node _tlbFinish_T_2 = or(tlbExec.io.pf.loadPF, tlbExec.io.pf.storePF) @[build/NutShell.fir.opt.mlir 39406:25]
    node tlbFinish = or(_tlbFinish_T_1, _tlbFinish_T_2) @[build/NutShell.fir.opt.mlir 39408:20]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 39409:16]
    connect _WIRE, tlbFinish @[build/NutShell.fir.opt.mlir 39410:7]
    node _T_7 = or(io.csrMMU.loadPF, io.csrMMU.storePF) @[build/NutShell.fir.opt.mlir 39412:15]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 39413:18]
    connect _WIRE_1, _T_7 @[build/NutShell.fir.opt.mlir 39414:7]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 39415:18]
    connect _WIRE_2, vmEnable @[build/NutShell.fir.opt.mlir 39416:7]
    inst LogPerfHelper of LogPerfHelper_32 @[build/NutShell.fir.opt.mlir 39417:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 39418:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 39423:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 39424:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 39425:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 39426:7]
    node _T_8 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39428:15]
    when _T_8 : @[build/NutShell.fir.opt.mlir 39429:7]
      node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39431:17]
      node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39433:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 39434:9]
        skip @[build/NutShell.fir.opt.mlir 39435:11]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39438:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39440:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 39441:9]
        skip @[build/NutShell.fir.opt.mlir 39442:11]
    node _T_13 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39446:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 39447:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39449:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39451:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 39452:9]
        skip @[build/NutShell.fir.opt.mlir 39453:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39456:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39458:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 39459:9]
        skip @[build/NutShell.fir.opt.mlir 39460:11]
    node _T_18 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39464:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 39465:7]
      node _T_19 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39467:18]
      node _T_20 = eq(_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39469:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 39470:9]
        skip @[build/NutShell.fir.opt.mlir 39471:11]
      node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39474:18]
      node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39476:18]
      when _T_22 : @[build/NutShell.fir.opt.mlir 39477:9]
        skip @[build/NutShell.fir.opt.mlir 39478:11]
    node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39482:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 39483:7]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39485:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39487:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 39488:9]
        skip @[build/NutShell.fir.opt.mlir 39489:11]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39492:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39494:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 39495:9]
        skip @[build/NutShell.fir.opt.mlir 39496:11]

  extmodule LogPerfHelper_33 : @[build/NutShell.fir.opt.mlir 39500:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39500:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39500:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39500:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39500:141]
    defname = LogPerfHelper

  module CacheStage1_1 : @[build/NutShell.fir.opt.mlir 39501:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39501:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39501:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 39501:98]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 39525:13]
    inst LogPerfHelper of LogPerfHelper_33 @[build/NutShell.fir.opt.mlir 39526:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 39527:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 39532:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 39533:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 39534:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 39535:7]
    node _T_1 = and(_T, c_control.logEnable) @[build/NutShell.fir.opt.mlir 39537:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 39539:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39541:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39543:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 39544:9]
        skip @[build/NutShell.fir.opt.mlir 39545:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39548:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39550:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 39551:9]
        skip @[build/NutShell.fir.opt.mlir 39552:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 39556:23]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39557:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 39562:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39563:7]
    node _T_6 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 39565:15]
    connect _WIRE.byteOffset, _T_6 @[build/NutShell.fir.opt.mlir 39566:7]
    node _T_7 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 39568:15]
    connect _WIRE.wordIndex, _T_7 @[build/NutShell.fir.opt.mlir 39569:7]
    node _T_8 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 39571:15]
    connect _WIRE.index, _T_8 @[build/NutShell.fir.opt.mlir 39572:7]
    node _T_9 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 39574:15]
    connect _WIRE.tag, _T_9 @[build/NutShell.fir.opt.mlir 39575:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 39576:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 39577:7]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39578:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 39583:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39584:7]
    node _T_10 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 39586:16]
    connect _WIRE_2.byteOffset, _T_10 @[build/NutShell.fir.opt.mlir 39587:7]
    node _T_11 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 39589:16]
    connect _WIRE_2.wordIndex, _T_11 @[build/NutShell.fir.opt.mlir 39590:7]
    node _T_12 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 39592:16]
    connect _WIRE_2.index, _T_12 @[build/NutShell.fir.opt.mlir 39593:7]
    node _T_13 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 39595:16]
    connect _WIRE_2.tag, _T_13 @[build/NutShell.fir.opt.mlir 39596:7]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39597:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 39602:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39603:7]
    node _T_14 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 39605:16]
    connect _WIRE_4.byteOffset, _T_14 @[build/NutShell.fir.opt.mlir 39606:7]
    node _T_15 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 39608:16]
    connect _WIRE_4.wordIndex, _T_15 @[build/NutShell.fir.opt.mlir 39609:7]
    node _T_16 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 39611:16]
    connect _WIRE_4.index, _T_16 @[build/NutShell.fir.opt.mlir 39612:7]
    node _T_17 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 39614:16]
    connect _WIRE_4.tag, _T_17 @[build/NutShell.fir.opt.mlir 39615:7]
    node _T_18 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 39617:16]
    connect io.dataReadBus.req.bits.setIdx, _T_18 @[build/NutShell.fir.opt.mlir 39618:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 39619:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 39620:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39622:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39624:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 39625:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39627:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 39629:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 39631:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39633:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39635:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 39636:7]
    node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39639:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 39640:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39642:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39644:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 39645:9]
        skip @[build/NutShell.fir.opt.mlir 39646:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39649:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39651:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 39652:9]
        skip @[build/NutShell.fir.opt.mlir 39653:11]

  extmodule LogPerfHelper_34 : @[build/NutShell.fir.opt.mlir 39657:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39657:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39657:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39657:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39657:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_35 : @[build/NutShell.fir.opt.mlir 39658:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39658:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39658:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39658:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39658:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_36 : @[build/NutShell.fir.opt.mlir 39659:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39659:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39659:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39659:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39659:141]
    defname = LogPerfHelper

  module CacheStage2_1 : @[build/NutShell.fir.opt.mlir 39660:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39660:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39660:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 39660:98]

    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39695:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 39700:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 39701:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 39703:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 39704:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 39706:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 39707:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 39709:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 39710:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 39712:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 39713:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 39715:27]
    wire _isForwardMeta_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39716:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 39721:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 39722:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 39724:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 39725:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 39727:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 39728:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 39730:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 39731:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 39733:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 39734:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 39736:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 39738:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39740:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 39742:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39744:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 39747:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39749:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 39751:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 39752:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39754:9]
    reg forwardMetaReg : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 39756:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 39757:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 39758:9]
    wire metaWay : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 39760:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 39774:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 39776:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 39780:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 39782:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 39784:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 39786:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 39788:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 39790:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 39791:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 39793:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 39795:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 39796:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 39798:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 39800:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 39801:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 39803:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 39805:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 39806:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39808:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 39810:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 39812:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39814:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 39816:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 39818:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39820:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 39822:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 39824:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39826:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 39828:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 39830:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 39831:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 39836:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 39837:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 39838:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 39839:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 39841:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 39843:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 39845:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 39847:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 39849:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 39851:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 39853:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 39855:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 39857:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 39859:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 39861:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 39862:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39864:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 39866:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 39868:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 39870:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 39871:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 39874:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 39876:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39878:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39880:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39882:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39884:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 39885:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 39890:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 39891:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 39892:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 39893:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 39895:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 39897:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 39899:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 39901:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 39904:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 39907:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 39910:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 39912:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 39914:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 39916:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 39918:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 39920:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 39922:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 39924:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 39926:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 39928:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 39930:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 39932:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 39934:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 39936:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 39938:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 39940:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 39942:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 39943:7]
      inst LogPerfHelper of LogPerfHelper_34 @[build/NutShell.fir.opt.mlir 39944:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 39945:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 39950:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 39951:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 39952:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 39953:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39955:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 39956:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39958:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39960:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 39961:11]
          skip @[build/NutShell.fir.opt.mlir 39962:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39965:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39967:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 39968:11]
          skip @[build/NutShell.fir.opt.mlir 39969:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39973:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 39974:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39976:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39978:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 39979:11]
          skip @[build/NutShell.fir.opt.mlir 39980:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39983:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39985:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 39986:11]
          skip @[build/NutShell.fir.opt.mlir 39987:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39991:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 39992:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39994:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39996:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 39997:11]
          skip @[build/NutShell.fir.opt.mlir 39998:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40001:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40003:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 40004:11]
          skip @[build/NutShell.fir.opt.mlir 40005:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40009:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 40010:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40012:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40014:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 40015:11]
          skip @[build/NutShell.fir.opt.mlir 40016:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40019:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40021:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 40022:11]
          skip @[build/NutShell.fir.opt.mlir 40023:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40027:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 40028:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40030:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40032:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 40033:11]
          skip @[build/NutShell.fir.opt.mlir 40034:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40037:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40039:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 40040:11]
          skip @[build/NutShell.fir.opt.mlir 40041:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40045:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 40046:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40048:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40050:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 40051:11]
          skip @[build/NutShell.fir.opt.mlir 40052:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40055:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40057:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 40058:11]
          skip @[build/NutShell.fir.opt.mlir 40059:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40063:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 40064:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40066:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40068:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 40069:11]
          skip @[build/NutShell.fir.opt.mlir 40070:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40073:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40075:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 40076:11]
          skip @[build/NutShell.fir.opt.mlir 40077:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40081:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 40082:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40084:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40086:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 40087:11]
          skip @[build/NutShell.fir.opt.mlir 40088:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40091:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40093:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 40094:11]
          skip @[build/NutShell.fir.opt.mlir 40095:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40099:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 40100:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40102:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40104:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 40105:11]
          skip @[build/NutShell.fir.opt.mlir 40106:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40109:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40111:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 40112:11]
          skip @[build/NutShell.fir.opt.mlir 40113:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40117:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 40118:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40120:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40122:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 40123:11]
          skip @[build/NutShell.fir.opt.mlir 40124:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40127:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40129:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 40130:11]
          skip @[build/NutShell.fir.opt.mlir 40131:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40136:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40138:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40140:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40142:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 40144:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 40146:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 40148:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 40150:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 40152:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 40154:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40156:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 40157:7]
      inst LogPerfHelper_1 of LogPerfHelper_35 @[build/NutShell.fir.opt.mlir 40158:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 40159:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 40164:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 40165:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 40166:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 40167:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 40169:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 40170:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40172:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40174:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 40175:11]
          skip @[build/NutShell.fir.opt.mlir 40176:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40179:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40181:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 40182:11]
          skip @[build/NutShell.fir.opt.mlir 40183:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40188:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40190:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40192:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40194:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 40196:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 40198:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 40200:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 40202:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 40204:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 40206:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40208:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 40210:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40212:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40214:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40216:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 40217:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40219:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 40220:9]
        skip @[build/NutShell.fir.opt.mlir 40221:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 40223:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 40225:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 40227:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 40229:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 40230:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 40231:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 40232:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 40235:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 40237:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40239:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 40242:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 40244:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40246:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 40248:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 40249:7]
    wire _isForwardData_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40250:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 40255:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40256:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 40258:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 40259:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 40261:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 40262:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 40264:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 40265:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 40267:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 40268:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40269:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 40274:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40275:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 40277:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 40278:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 40280:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 40281:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 40283:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 40284:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 40286:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 40287:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 40289:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 40291:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 40293:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 40295:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40296:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 40297:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40299:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 40302:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40304:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 40306:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 40307:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40309:9]
    reg forwardDataReg : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 40311:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 40312:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 40313:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 40316:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 40317:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 40319:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 40320:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 40321:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 40322:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40324:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 40326:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 40328:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 40329:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 40331:16]
    inst LogPerfHelper_2 of LogPerfHelper_36 @[build/NutShell.fir.opt.mlir 40332:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 40333:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 40338:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 40339:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 40340:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 40341:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 40343:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 40344:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40346:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40348:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 40349:9]
        skip @[build/NutShell.fir.opt.mlir 40350:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40353:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40355:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 40356:9]
        skip @[build/NutShell.fir.opt.mlir 40357:11]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40360:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 40365:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40366:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 40368:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 40369:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 40371:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 40372:7]
    node _T_107 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 40374:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 40375:7]
    node _T_108 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 40377:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 40378:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 40380:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 40381:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40383:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40385:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 40386:9]
        skip @[build/NutShell.fir.opt.mlir 40387:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40390:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40392:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 40393:9]
        skip @[build/NutShell.fir.opt.mlir 40394:11]

  module Arbiter2_SRAMBundleAW_2 : @[build/NutShell.fir.opt.mlir 40398:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40398:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40398:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 40398:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40415:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 40416:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 40418:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40420:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 40421:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40424:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 40426:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 40427:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 40429:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 40430:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40432:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 40434:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 40435:7]

  module Arbiter2_SRAMBundleAW_3 : @[build/NutShell.fir.opt.mlir 40437:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40437:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40437:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 40437:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40454:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 40455:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 40457:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40459:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 40460:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40463:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 40465:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 40466:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 40468:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 40469:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40471:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 40473:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 40474:7]

  extmodule LogPerfHelper_37 : @[build/NutShell.fir.opt.mlir 40476:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 40476:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 40476:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 40476:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 40476:141]
    defname = LogPerfHelper

  module CacheStage3_1 : @[build/NutShell.fir.opt.mlir 40477:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40477:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40477:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 40477:98]

    inst metaWriteArb of Arbiter2_SRAMBundleAW_2 @[build/NutShell.fir.opt.mlir 40580:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 40588:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 40589:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_3 @[build/NutShell.fir.opt.mlir 40590:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 40598:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 40599:7]
    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40600:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 40605:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40606:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 40608:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 40609:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 40611:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 40612:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 40614:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 40615:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 40617:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 40618:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 40620:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 40622:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40625:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 40627:15]
    node _probe_T = and(io.in.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40630:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 40633:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 40635:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 40638:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 40640:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40642:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40644:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40646:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40648:20]
    wire meta : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 40649:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40654:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40656:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40658:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40660:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 40662:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 40664:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 40666:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 40667:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 40668:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 40669:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40671:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40673:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40675:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40677:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 40679:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 40681:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 40683:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 40684:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 40685:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 40686:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40688:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40690:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40692:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40694:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 40696:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 40698:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 40700:21]
    wire _meta_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 40701:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 40702:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 40703:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 40705:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40707:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40709:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40711:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 40712:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40714:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 40715:9]
        skip @[build/NutShell.fir.opt.mlir 40716:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 40718:9]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 40720:16]
    connect _WIRE, mmio @[build/NutShell.fir.opt.mlir 40721:7]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 40723:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 40725:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40727:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40729:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40731:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40733:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 40734:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40737:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40739:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40741:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40743:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 40745:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 40747:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 40749:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 40750:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 40751:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 40752:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 40754:19]
    node _wordMask_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40756:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 40758:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 40760:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 40762:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 40764:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 40766:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 40768:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 40770:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 40772:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 40774:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 40776:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40780:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40782:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40784:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40786:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40788:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40790:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40792:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40794:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 40796:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 40798:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 40800:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 40802:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 40804:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 40806:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 40808:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 40811:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 40813:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 40815:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 40818:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 40821:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 40823:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 40825:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 40826:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 40828:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40830:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 40832:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 40833:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 40836:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 40838:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 40839:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 40846:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 40849:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 40851:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 40853:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 40855:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 40856:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 40858:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 40860:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 40862:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 40864:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 40866:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 40867:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 40868:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 40869:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 40870:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 40871:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40879:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 40881:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40882:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 40887:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40888:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 40890:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 40891:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 40893:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 40894:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 40896:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 40897:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 40899:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 40900:7]
    wire metaHitWriteBus_x8 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 40901:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 40905:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40907:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40909:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 40910:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 40911:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 40912:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 40913:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 40915:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40916:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 40918:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 40920:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 40921:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40923:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 40926:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 40928:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 40929:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40931:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 40933:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 40934:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 40936:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 40939:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 40941:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 40943:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 40945:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 40947:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 40949:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 40951:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 40953:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 40954:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 40955:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 40958:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 40959:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 40968:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 40969:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40972:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40974:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40976:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40978:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 40979:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40982:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40984:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40986:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40988:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 40990:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 40992:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 40994:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 40995:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 40996:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 40997:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 40999:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 41000:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 41002:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 41003:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 41005:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 41009:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 41010:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 41012:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 41015:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 41016:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41018:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41020:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 41022:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41024:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 41026:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 41027:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 41029:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 41035:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 41037:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 41039:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 41042:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41045:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41047:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41049:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 41051:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41053:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 41055:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 41057:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 41058:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 41060:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 41063:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 41064:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 41066:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41068:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41070:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 41072:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41074:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 41076:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 41078:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 41079:7]
    connect io.mmio.req.bits, io.in.bits.req @[build/NutShell.fir.opt.mlir 41080:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41082:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 41085:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 41086:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41087:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41089:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41090:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 41091:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41093:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41096:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41098:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 41100:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41103:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 41105:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 41107:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 41110:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 41112:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 41113:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 41114:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 41115:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41118:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 41120:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41122:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41124:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 41126:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 41128:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 41129:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 41130:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41132:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41134:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 41136:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41137:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 41138:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41140:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 41141:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41143:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41145:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 41147:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 41148:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 41149:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41152:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41155:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41158:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 41160:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 41161:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41163:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41165:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 41167:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41169:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41171:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41173:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 41175:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 41177:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 41179:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 41181:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41182:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 41183:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41185:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 41186:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41188:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41190:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 41192:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 41193:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 41194:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 41197:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 41200:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41202:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41204:9]
      when probe : @[build/NutShell.fir.opt.mlir 41205:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41207:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 41208:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41210:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 41211:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 41212:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41216:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 41217:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 41219:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41221:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41223:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 41225:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 41227:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 41228:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 41231:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41233:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 41235:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 41236:13]
            node _state_T_1 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41238:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 41240:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41242:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 41244:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 41245:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 41251:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 41252:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 41254:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 41255:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 41257:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 41261:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 41262:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 41264:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 41265:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 41267:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 41271:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 41272:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41274:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 41276:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 41277:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41279:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41281:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 41283:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 41284:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41287:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 41289:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 41291:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 41293:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 41295:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 41296:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 41298:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 41302:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 41303:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41305:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 41306:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 41308:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 41309:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 41313:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 41314:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41316:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 41317:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41319:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41321:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41323:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 41325:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 41326:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41328:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 41329:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 41332:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 41335:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 41336:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 41338:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 41343:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 41344:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41346:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 41347:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41349:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41351:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 41353:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 41354:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41357:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41359:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 41361:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 41362:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 41364:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 41368:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 41369:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41371:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 41372:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 41374:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 41378:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 41379:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41381:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 41383:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 41385:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 41386:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 41388:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 41400:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 41402:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 41404:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 41406:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 41408:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41409:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41417:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41419:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 41421:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 41423:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 41424:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 41426:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 41427:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 41428:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41429:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 41430:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 41433:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41436:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41439:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 41442:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41445:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41448:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 41449:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 41450:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 41451:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41452:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41460:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41462:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 41464:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 41466:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 41468:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 41469:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41474:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41476:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 41478:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 41479:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41481:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 41482:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41483:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 41488:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41489:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 41491:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 41492:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 41494:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 41495:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 41497:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 41498:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 41500:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 41501:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 41502:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 41503:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41504:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 41505:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 41508:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41511:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41514:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 41517:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41520:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41523:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 41524:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 41525:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 41526:7]
    node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 41528:31]
    connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 41529:7]
    node _io_out_bits_cmd_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41531:29]
    node _io_out_bits_cmd_T_1 = eq(_io_out_bits_cmd_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41533:31]
    node _io_out_bits_cmd_T_2 = bits(io.in.bits.req.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 41535:31]
    node _io_out_bits_cmd_T_3 = eq(_io_out_bits_cmd_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41537:31]
    node _io_out_bits_cmd_T_4 = and(_io_out_bits_cmd_T_1, _io_out_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 41539:31]
    node _io_out_bits_cmd_T_5 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41541:31]
    wire _io_out_bits_cmd_WIRE : UInt<3> @[build/NutShell.fir.opt.mlir 41542:32]
    invalidate _io_out_bits_cmd_WIRE @[build/NutShell.fir.opt.mlir 41544:7]
    node _io_out_bits_cmd_T_6 = mux(_io_out_bits_cmd_T_5, UInt<3>(5), _io_out_bits_cmd_WIRE) @[build/NutShell.fir.opt.mlir 41547:31]
    node _io_out_bits_cmd_T_7 = mux(_io_out_bits_cmd_T_4, UInt<3>(6), _io_out_bits_cmd_T_6) @[build/NutShell.fir.opt.mlir 41549:31]
    connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_7, 4) @[build/NutShell.fir.opt.mlir 41551:7]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 41553:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41555:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41557:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41559:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41561:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 41563:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 41565:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 41567:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41569:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41571:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 41573:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41575:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 41577:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 41579:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 41581:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41583:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 41585:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 41587:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41589:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 41591:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41593:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41595:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 41597:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 41599:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 41601:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 41603:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 41605:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 41607:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 41608:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41610:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41612:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41614:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 41616:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 41618:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 41620:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41622:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 41624:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41626:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41628:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41630:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 41632:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 41634:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 41636:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 41638:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 41639:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41641:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41643:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 41645:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 41647:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41649:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 41651:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41653:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 41655:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 41656:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41658:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 41660:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41662:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41664:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 41666:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 41668:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 41670:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 41671:7]
    node _T_69 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41673:16]
    node _T_70 = eq(_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41675:16]
    node _T_71 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41677:16]
    node _T_72 = eq(_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41679:16]
    when _T_72 : @[build/NutShell.fir.opt.mlir 41680:7]
      node _T_73 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41682:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 41683:9]
        skip @[build/NutShell.fir.opt.mlir 41684:11]
      assert(clock, _T_70, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 41686:9]
    node _T_74 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41689:16]
    node _T_75 = eq(_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41691:16]
    node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41693:16]
    node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41695:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 41696:7]
      node _T_78 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41698:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 41699:9]
        skip @[build/NutShell.fir.opt.mlir 41700:11]
      assert(clock, _T_75, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 41702:9]
    node _T_79 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41705:16]
    node _T_80 = and(_T_79, io.flush) @[build/NutShell.fir.opt.mlir 41707:16]
    node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41709:16]
    node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41711:16]
    node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41713:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 41714:7]
      node _T_84 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41716:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 41717:9]
        skip @[build/NutShell.fir.opt.mlir 41718:11]
      assert(clock, _T_81, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 41720:9]
    wire _WIRE_1 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41722:18]
    wire _WIRE_2 : UInt<32> @[build/NutShell.fir.opt.mlir 41727:18]
    connect _WIRE_2, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41728:7]
    node _T_85 = bits(_WIRE_2, 2, 0) @[build/NutShell.fir.opt.mlir 41730:16]
    connect _WIRE_1.byteOffset, _T_85 @[build/NutShell.fir.opt.mlir 41731:7]
    node _T_86 = bits(_WIRE_2, 5, 3) @[build/NutShell.fir.opt.mlir 41733:16]
    connect _WIRE_1.wordIndex, _T_86 @[build/NutShell.fir.opt.mlir 41734:7]
    node _T_87 = bits(_WIRE_2, 12, 6) @[build/NutShell.fir.opt.mlir 41736:16]
    connect _WIRE_1.index, _T_87 @[build/NutShell.fir.opt.mlir 41737:7]
    node _T_88 = bits(_WIRE_2, 31, 13) @[build/NutShell.fir.opt.mlir 41739:16]
    connect _WIRE_1.tag, _T_88 @[build/NutShell.fir.opt.mlir 41740:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 41742:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 41744:13]
    node _T_89 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 41746:16]
    inst LogPerfHelper of LogPerfHelper_37 @[build/NutShell.fir.opt.mlir 41747:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 41748:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 41753:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 41754:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 41755:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 41756:7]
    node _T_90 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41758:16]
    when _T_90 : @[build/NutShell.fir.opt.mlir 41759:7]
      node _T_91 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41761:18]
      node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41763:18]
      when _T_92 : @[build/NutShell.fir.opt.mlir 41764:9]
        skip @[build/NutShell.fir.opt.mlir 41765:11]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41768:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41770:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 41771:9]
        skip @[build/NutShell.fir.opt.mlir 41772:11]
    node _T_95 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41776:16]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 41777:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41779:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 41781:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 41782:7]
    node _T_96 = and(_T_95, c_control.logEnable) @[build/NutShell.fir.opt.mlir 41784:16]
    when _T_96 : @[build/NutShell.fir.opt.mlir 41785:7]
      node _T_97 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41787:18]
      node _T_98 = eq(_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41789:18]
      when _T_98 : @[build/NutShell.fir.opt.mlir 41790:9]
        skip @[build/NutShell.fir.opt.mlir 41791:11]
      node _T_99 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41794:18]
      node _T_100 = eq(_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41796:19]
      when _T_100 : @[build/NutShell.fir.opt.mlir 41797:9]
        skip @[build/NutShell.fir.opt.mlir 41798:11]
    node _T_101 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41802:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 41803:7]
      node _T_102 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41805:19]
      node _T_103 = eq(_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41807:19]
      when _T_103 : @[build/NutShell.fir.opt.mlir 41808:9]
        skip @[build/NutShell.fir.opt.mlir 41809:11]
      node _T_104 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41812:19]
      node _T_105 = eq(_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41814:19]
      when _T_105 : @[build/NutShell.fir.opt.mlir 41815:9]
        skip @[build/NutShell.fir.opt.mlir 41816:11]
    node _T_106 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41820:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 41821:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41823:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41825:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 41826:9]
        skip @[build/NutShell.fir.opt.mlir 41827:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41830:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41832:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 41833:9]
        skip @[build/NutShell.fir.opt.mlir 41834:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41838:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 41839:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41841:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41843:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 41844:9]
        skip @[build/NutShell.fir.opt.mlir 41845:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41848:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41850:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 41851:9]
        skip @[build/NutShell.fir.opt.mlir 41852:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 41856:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 41858:15]
    node _T_116 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 41860:17]
    node _T_117 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41862:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 41863:7]
      node _T_118 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41865:19]
      node _T_119 = eq(_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41867:19]
      when _T_119 : @[build/NutShell.fir.opt.mlir 41868:9]
        skip @[build/NutShell.fir.opt.mlir 41869:11]
      node _T_120 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41872:19]
      node _T_121 = eq(_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41874:19]
      when _T_121 : @[build/NutShell.fir.opt.mlir 41875:9]
        skip @[build/NutShell.fir.opt.mlir 41876:11]
    node _T_122 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41880:17]
    when _T_122 : @[build/NutShell.fir.opt.mlir 41881:7]
      node _T_123 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41883:19]
      node _T_124 = eq(_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41885:19]
      when _T_124 : @[build/NutShell.fir.opt.mlir 41886:9]
        skip @[build/NutShell.fir.opt.mlir 41887:11]
      node _T_125 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41890:19]
      node _T_126 = eq(_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41892:19]
      when _T_126 : @[build/NutShell.fir.opt.mlir 41893:9]
        skip @[build/NutShell.fir.opt.mlir 41894:11]
    node _T_127 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41898:17]
    node _T_128 = and(_T_127, c_control.logEnable) @[build/NutShell.fir.opt.mlir 41900:17]
    when _T_128 : @[build/NutShell.fir.opt.mlir 41901:7]
      node _T_129 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41903:19]
      node _T_130 = eq(_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41905:19]
      when _T_130 : @[build/NutShell.fir.opt.mlir 41906:9]
        skip @[build/NutShell.fir.opt.mlir 41907:11]
      node _T_131 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41910:19]
      node _T_132 = eq(_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41912:19]
      when _T_132 : @[build/NutShell.fir.opt.mlir 41913:9]
        skip @[build/NutShell.fir.opt.mlir 41914:11]
    node _T_133 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 41918:17]
    node _T_134 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41920:17]
    node _T_135 = and(_T_133, _T_134) @[build/NutShell.fir.opt.mlir 41922:17]
    wire _WIRE_3 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41923:18]
    wire _WIRE_4 : UInt<32> @[build/NutShell.fir.opt.mlir 41928:18]
    connect _WIRE_4, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41929:7]
    node _T_136 = bits(_WIRE_4, 2, 0) @[build/NutShell.fir.opt.mlir 41931:17]
    connect _WIRE_3.byteOffset, _T_136 @[build/NutShell.fir.opt.mlir 41932:7]
    node _T_137 = bits(_WIRE_4, 5, 3) @[build/NutShell.fir.opt.mlir 41934:17]
    connect _WIRE_3.wordIndex, _T_137 @[build/NutShell.fir.opt.mlir 41935:7]
    node _T_138 = bits(_WIRE_4, 12, 6) @[build/NutShell.fir.opt.mlir 41937:17]
    connect _WIRE_3.index, _T_138 @[build/NutShell.fir.opt.mlir 41938:7]
    node _T_139 = bits(_WIRE_4, 31, 13) @[build/NutShell.fir.opt.mlir 41940:17]
    connect _WIRE_3.tag, _T_139 @[build/NutShell.fir.opt.mlir 41941:7]
    node _T_140 = and(_T_135, c_control.logEnable) @[build/NutShell.fir.opt.mlir 41943:17]
    when _T_140 : @[build/NutShell.fir.opt.mlir 41944:7]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41946:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41948:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 41949:9]
        skip @[build/NutShell.fir.opt.mlir 41950:11]
      node _T_143 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41953:19]
      node _T_144 = eq(_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41955:19]
      when _T_144 : @[build/NutShell.fir.opt.mlir 41956:9]
        skip @[build/NutShell.fir.opt.mlir 41957:11]
    node _T_145 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41961:17]
    node _T_146 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41963:17]
    node _T_147 = and(_T_145, _T_146) @[build/NutShell.fir.opt.mlir 41965:17]
    wire _WIRE_5 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41966:18]
    wire _WIRE_6 : UInt<32> @[build/NutShell.fir.opt.mlir 41971:18]
    connect _WIRE_6, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41972:7]
    node _T_148 = bits(_WIRE_6, 2, 0) @[build/NutShell.fir.opt.mlir 41974:17]
    connect _WIRE_5.byteOffset, _T_148 @[build/NutShell.fir.opt.mlir 41975:7]
    node _T_149 = bits(_WIRE_6, 5, 3) @[build/NutShell.fir.opt.mlir 41977:17]
    connect _WIRE_5.wordIndex, _T_149 @[build/NutShell.fir.opt.mlir 41978:7]
    node _T_150 = bits(_WIRE_6, 12, 6) @[build/NutShell.fir.opt.mlir 41980:17]
    connect _WIRE_5.index, _T_150 @[build/NutShell.fir.opt.mlir 41981:7]
    node _T_151 = bits(_WIRE_6, 31, 13) @[build/NutShell.fir.opt.mlir 41983:17]
    connect _WIRE_5.tag, _T_151 @[build/NutShell.fir.opt.mlir 41984:7]
    node _T_152 = and(_T_147, c_control.logEnable) @[build/NutShell.fir.opt.mlir 41986:17]
    when _T_152 : @[build/NutShell.fir.opt.mlir 41987:7]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41989:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41991:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 41992:9]
        skip @[build/NutShell.fir.opt.mlir 41993:11]
      node _T_155 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41996:19]
      node _T_156 = eq(_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41998:19]
      when _T_156 : @[build/NutShell.fir.opt.mlir 41999:9]
        skip @[build/NutShell.fir.opt.mlir 42000:11]
    node _T_157 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 42004:17]
    node _T_158 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 42006:17]
    node _T_159 = and(_T_157, _T_158) @[build/NutShell.fir.opt.mlir 42008:17]
    wire _WIRE_7 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 42009:18]
    wire _WIRE_8 : UInt<32> @[build/NutShell.fir.opt.mlir 42014:18]
    connect _WIRE_8, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 42015:7]
    node _T_160 = bits(_WIRE_8, 2, 0) @[build/NutShell.fir.opt.mlir 42017:17]
    connect _WIRE_7.byteOffset, _T_160 @[build/NutShell.fir.opt.mlir 42018:7]
    node _T_161 = bits(_WIRE_8, 5, 3) @[build/NutShell.fir.opt.mlir 42020:17]
    connect _WIRE_7.wordIndex, _T_161 @[build/NutShell.fir.opt.mlir 42021:7]
    node _T_162 = bits(_WIRE_8, 12, 6) @[build/NutShell.fir.opt.mlir 42023:17]
    connect _WIRE_7.index, _T_162 @[build/NutShell.fir.opt.mlir 42024:7]
    node _T_163 = bits(_WIRE_8, 31, 13) @[build/NutShell.fir.opt.mlir 42026:17]
    connect _WIRE_7.tag, _T_163 @[build/NutShell.fir.opt.mlir 42027:7]
    node _T_164 = and(_T_159, c_control.logEnable) @[build/NutShell.fir.opt.mlir 42029:17]
    when _T_164 : @[build/NutShell.fir.opt.mlir 42030:7]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42032:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42034:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 42035:9]
        skip @[build/NutShell.fir.opt.mlir 42036:11]
      node _T_167 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42039:19]
      node _T_168 = eq(_T_167, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42041:19]
      when _T_168 : @[build/NutShell.fir.opt.mlir 42042:9]
        skip @[build/NutShell.fir.opt.mlir 42043:11]

  module SRAMTemplate_3 : @[build/NutShell.fir.opt.mlir 42047:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42047:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42047:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42047:99]

    mem array : @[build/NutShell.fir.opt.mlir 42073:42]
      data-type => UInt<21>[4]
      depth => 128
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 42075:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42077:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 42079:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 42081:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 42083:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42085:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42087:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 42089:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 42103:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42106:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 42107:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42108:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42110:22]
    regreset _resetSet : UInt<7>, clock, reset, UInt<7>(0) @[build/NutShell.fir.opt.mlir 42112:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 42113:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42115:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 42117:7]
      node wrap_wrap = eq(_resetSet, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 42119:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 42121:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 42123:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 42124:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 42125:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 42127:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42129:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 42131:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 42132:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 42134:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42136:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 42138:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 42140:17]
    wire _wdataword_WIRE : UInt<21> @[build/NutShell.fir.opt.mlir 42141:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 21) @[build/NutShell.fir.opt.mlir 42144:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 42146:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 42148:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 42150:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 42154:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 42156:18]
    wire wdata : UInt<21>[4] @[build/NutShell.fir.opt.mlir 42157:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 42162:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 42163:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 42164:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 42165:7]
    when wen : @[build/NutShell.fir.opt.mlir 42166:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 42168:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 42170:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 42172:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 42174:17]
      node _T_4 = or(setIdx, UInt<7>(0)) @[build/NutShell.fir.opt.mlir 42176:17]
      node _T_5 = bits(_T_4, 6, 0) @[build/NutShell.fir.opt.mlir 42178:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 42179:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42180:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42181:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42183:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42185:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42187:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42189:9]
      when _T : @[build/NutShell.fir.opt.mlir 42190:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42191:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 42192:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 42194:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42195:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 42196:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 42198:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42199:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 42200:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 42202:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42203:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 42204:11]
    wire _rdata_WIRE : UInt<7> @[build/NutShell.fir.opt.mlir 42207:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 42209:7]
    when realRen : @[build/NutShell.fir.opt.mlir 42210:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42211:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 42212:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 42213:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42214:9]
    wire rdata_0 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42216:18]
    wire _rdata_WIRE_1 : UInt<21> @[build/NutShell.fir.opt.mlir 42220:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 42221:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 42223:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 42224:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 42226:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 42227:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 20, 2) @[build/NutShell.fir.opt.mlir 42229:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 42230:7]
    wire rdata_1 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42231:18]
    wire _rdata_WIRE_2 : UInt<21> @[build/NutShell.fir.opt.mlir 42235:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 42236:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 42238:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 42239:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 42241:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 42242:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 20, 2) @[build/NutShell.fir.opt.mlir 42244:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 42245:7]
    wire rdata_2 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42246:18]
    wire _rdata_WIRE_3 : UInt<21> @[build/NutShell.fir.opt.mlir 42250:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 42251:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 42253:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 42254:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 42256:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 42257:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 20, 2) @[build/NutShell.fir.opt.mlir 42259:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 42260:7]
    wire rdata_3 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42261:18]
    wire _rdata_WIRE_4 : UInt<21> @[build/NutShell.fir.opt.mlir 42265:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 42266:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 42268:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 42269:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 42271:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 42272:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 20, 2) @[build/NutShell.fir.opt.mlir 42274:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 42275:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 42276:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 42293:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 42294:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 42295:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 42296:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 42297:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 42298:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 42299:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 42300:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 42301:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 42302:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 42303:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 42304:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 42305:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42307:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42309:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 42311:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 42312:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42314:7]

  module Arbiter1_SRAMBundleA_1 : @[build/NutShell.fir.opt.mlir 42316:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42316:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42316:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 42316:107]

    connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42330:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42331:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 42334:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 42335:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42337:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 42339:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 42340:7]

  module SRAMTemplateWithArbiter_2 : @[build/NutShell.fir.opt.mlir 42342:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42342:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42342:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42342:110]

    inst ram of SRAMTemplate_3 @[build/NutShell.fir.opt.mlir 42351:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 42357:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 42358:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 42363:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 42366:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 42369:7]
    inst readArb of Arbiter1_SRAMBundleA_1 @[build/NutShell.fir.opt.mlir 42370:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 42374:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 42375:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 42378:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 42381:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 42384:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 42387:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 42390:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 42393:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 42395:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42396:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 42397:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 42398:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42417:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42419:7]
    connect _WIRE[0].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42422:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42424:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42426:7]
    connect _WIRE[1].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42428:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42430:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42432:7]
    connect _WIRE[2].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42434:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42436:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42438:7]
    connect _WIRE[3].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42440:7]
    regreset r : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 42441:12]
    when REG : @[build/NutShell.fir.opt.mlir 42442:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42443:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 42446:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 42447:7]

  module SRAMTemplate_4 : @[build/NutShell.fir.opt.mlir 42449:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42449:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42449:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42449:99]

    mem array : @[build/NutShell.fir.opt.mlir 42473:42]
      data-type => UInt<64>[4]
      depth => 1024
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 42475:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42477:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 42479:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 42481:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 42483:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42485:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42487:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 42489:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 42503:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42506:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 42507:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42508:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 42510:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42512:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 42514:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 42516:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 42517:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 42520:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 42522:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 42527:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 42529:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 42530:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 42535:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 42536:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 42537:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 42538:7]
    when wen : @[build/NutShell.fir.opt.mlir 42540:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 42542:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 42544:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 42546:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 42548:17]
      node _T_4 = or(setIdx, UInt<10>(0)) @[build/NutShell.fir.opt.mlir 42550:17]
      node _T_5 = bits(_T_4, 9, 0) @[build/NutShell.fir.opt.mlir 42552:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 42553:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42554:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42555:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42557:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42559:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42561:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42563:9]
      when _T : @[build/NutShell.fir.opt.mlir 42564:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42565:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 42566:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 42568:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42569:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 42570:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 42572:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42573:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 42574:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 42576:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42577:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 42578:11]
    wire _rdata_WIRE : UInt<10> @[build/NutShell.fir.opt.mlir 42581:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 42583:7]
    when realRen : @[build/NutShell.fir.opt.mlir 42584:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42585:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 42586:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 42587:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42588:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42590:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 42592:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 42593:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 42595:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 42596:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42597:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 42599:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 42600:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 42602:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 42603:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42604:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 42606:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 42607:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 42609:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 42610:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42611:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 42613:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 42614:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 42616:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 42617:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42618:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 42627:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 42628:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 42629:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 42630:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 42631:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42633:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42635:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 42637:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 42638:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42640:7]

  module Arbiter2_SRAMBundleA_1 : @[build/NutShell.fir.opt.mlir 42642:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42642:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42642:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 42642:107]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42659:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 42660:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 42662:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42664:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42665:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42668:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 42670:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 42671:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 42673:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 42674:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42676:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 42678:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 42679:7]

  module SRAMTemplateWithArbiter_3 : @[build/NutShell.fir.opt.mlir 42681:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42681:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42681:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42681:110]

    inst ram of SRAMTemplate_4 @[build/NutShell.fir.opt.mlir 42696:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 42702:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 42703:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 42708:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 42711:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 42714:7]
    inst readArb of Arbiter2_SRAMBundleA_1 @[build/NutShell.fir.opt.mlir 42715:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 42720:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 42721:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 42724:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 42727:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 42730:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 42733:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 42736:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 42739:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 42742:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 42745:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 42748:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 42750:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42751:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 42752:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42753:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42764:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42766:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42768:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42770:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 42771:12]
    when REG : @[build/NutShell.fir.opt.mlir 42772:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42773:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 42776:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 42777:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 42779:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42780:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 42781:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42782:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42792:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42794:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42796:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42798:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 42799:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 42800:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42801:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 42804:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 42805:7]

  module Arbiter2_SimpleBusReqBundle : @[build/NutShell.fir.opt.mlir 42807:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42807:59]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42807:85]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 42807:112]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42824:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 42825:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 42827:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42829:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42830:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42833:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 42835:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 42836:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 42838:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 42839:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42841:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 42843:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 42844:7]

  extmodule LogPerfHelper_38 : @[build/NutShell.fir.opt.mlir 42846:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 42846:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 42846:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 42846:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 42846:141]
    defname = LogPerfHelper

  module Cache_1 : @[build/NutShell.fir.opt.mlir 42847:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42847:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42847:65]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 42847:92]

    inst s1 of CacheStage1_1 @[build/NutShell.fir.opt.mlir 42883:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 42920:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 42921:7]
    inst s2 of CacheStage2_1 @[build/NutShell.fir.opt.mlir 42922:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 42983:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 42984:7]
    inst s3 of CacheStage3_1 @[build/NutShell.fir.opt.mlir 42985:38]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 43076:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 43077:7]
    inst metaArray of SRAMTemplateWithArbiter_2 @[build/NutShell.fir.opt.mlir 43078:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 43082:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 43083:7]
    inst dataArray of SRAMTemplateWithArbiter_3 @[build/NutShell.fir.opt.mlir 43084:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 43089:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 43090:7]
    inst arb of Arbiter2_SimpleBusReqBundle @[build/NutShell.fir.opt.mlir 43091:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 43104:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 43105:7]
    connect io.in.req.ready, arb.io.in[1].ready @[build/NutShell.fir.opt.mlir 43108:7]
    connect arb.io.in[1].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 43111:7]
    connect arb.io.in[1].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 43114:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 43117:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 43120:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 43123:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 43125:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 43127:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43129:16]
    when _T : @[build/NutShell.fir.opt.mlir 43130:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43132:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 43135:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 43137:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 43139:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 43141:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43143:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 43145:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 43147:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 43148:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 43155:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 43156:9]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 43158:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 43159:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 43160:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 43161:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 43162:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 43163:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 43165:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43166:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 43167:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43169:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 43172:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 43173:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 43175:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 43177:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43179:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 43181:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 43183:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 43184:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 43226:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 43227:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 43229:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 43230:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 43231:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 43232:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 43233:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 43234:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 43235:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 43236:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 43237:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 43238:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 43239:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 43240:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 43241:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 43242:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 43243:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 43244:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 43245:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 43246:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 43247:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 43248:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 43249:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 43250:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 43251:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 43252:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 43253:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 43254:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 43255:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 43256:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 43257:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 43258:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 43259:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 43260:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 43262:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 43263:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 43266:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 43269:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 43272:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 43273:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 43274:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 43275:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 43278:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 43281:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 43284:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 43285:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 43286:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 43287:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43289:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43291:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 43293:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 43294:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 43297:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 43299:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 43301:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 43303:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 43304:7]
    wire coh : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } @[build/NutShell.fir.opt.mlir 43305:14]
    connect coh.addr, io.out.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 43311:7]
    connect coh.cmd, io.out.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 43312:7]
    connect coh.size, io.out.coh.req.bits.size @[build/NutShell.fir.opt.mlir 43313:7]
    connect coh.wdata, io.out.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 43314:7]
    connect coh.wmask, io.out.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 43315:7]
    connect arb.io.in[0].bits.wdata, coh.wdata @[build/NutShell.fir.opt.mlir 43316:7]
    connect arb.io.in[0].bits.wmask, coh.wmask @[build/NutShell.fir.opt.mlir 43317:7]
    connect arb.io.in[0].bits.cmd, coh.cmd @[build/NutShell.fir.opt.mlir 43318:7]
    connect arb.io.in[0].bits.size, coh.size @[build/NutShell.fir.opt.mlir 43319:7]
    connect arb.io.in[0].bits.addr, coh.addr @[build/NutShell.fir.opt.mlir 43320:7]
    connect arb.io.in[0].valid, io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 43321:7]
    connect io.out.coh.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 43322:7]
    connect io.out.coh.resp.bits, s3.io.cohResp.bits @[build/NutShell.fir.opt.mlir 43323:7]
    connect io.out.coh.resp.valid, s3.io.cohResp.valid @[build/NutShell.fir.opt.mlir 43324:7]
    connect s3.io.cohResp.ready, io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 43325:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 43330:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 43333:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 43336:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 43339:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 43344:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 43347:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 43350:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 43353:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 43358:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 43361:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 43364:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 43367:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 43372:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43375:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 43378:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 43383:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43386:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 43389:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 43390:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 43391:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 43392:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 43393:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 43394:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 43395:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 43396:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 43397:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 43398:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 43399:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 43400:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 43401:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 43402:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 43403:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 43404:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 43405:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 43406:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 43407:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 43408:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43409:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 43410:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 43411:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 43412:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 43413:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 43414:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 43415:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43416:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 43417:7]
    inst LogPerfHelper of LogPerfHelper_38 @[build/NutShell.fir.opt.mlir 43418:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 43419:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 43424:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 43425:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 43426:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 43427:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43429:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 43430:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43432:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43434:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 43435:9]
        skip @[build/NutShell.fir.opt.mlir 43436:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43439:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43441:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 43442:9]
        skip @[build/NutShell.fir.opt.mlir 43443:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43447:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 43448:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43450:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43452:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 43453:9]
        skip @[build/NutShell.fir.opt.mlir 43454:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43457:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43459:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 43460:9]
        skip @[build/NutShell.fir.opt.mlir 43461:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 43464:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43466:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 43467:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43469:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43471:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 43472:11]
          skip @[build/NutShell.fir.opt.mlir 43473:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43476:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43478:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 43479:11]
          skip @[build/NutShell.fir.opt.mlir 43480:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 43484:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43486:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 43487:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43489:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43491:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 43492:11]
          skip @[build/NutShell.fir.opt.mlir 43493:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43496:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43498:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 43499:11]
          skip @[build/NutShell.fir.opt.mlir 43500:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 43504:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43506:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 43507:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43509:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43511:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 43512:11]
          skip @[build/NutShell.fir.opt.mlir 43513:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43516:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43518:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 43519:11]
          skip @[build/NutShell.fir.opt.mlir 43520:13]

  module NutCore : @[build/NutShell.fir.opt.mlir 43525:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 43525:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 43525:65]
    output io : { imem : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, dmem : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip frontend : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 43525:92]

    inst frontend of Frontend_inorder @[build/NutShell.fir.opt.mlir 43549:56]
    connect frontend.clock, clock @[build/NutShell.fir.opt.mlir 43564:7]
    connect frontend.reset, reset @[build/NutShell.fir.opt.mlir 43565:7]
    inst backend of Backend_inorder @[build/NutShell.fir.opt.mlir 43566:53]
    connect backend.clock, clock @[build/NutShell.fir.opt.mlir 43704:7]
    connect backend.reset, reset @[build/NutShell.fir.opt.mlir 43705:7]
    node _T = bits(frontend.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 43707:13]
    wire _dataBuffer_WIRE : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 43708:27]
    connect _dataBuffer_WIRE.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43772:7]
    connect _dataBuffer_WIRE.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43774:7]
    connect _dataBuffer_WIRE.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43776:7]
    connect _dataBuffer_WIRE.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43779:7]
    connect _dataBuffer_WIRE.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43781:7]
    connect _dataBuffer_WIRE.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43783:7]
    connect _dataBuffer_WIRE.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43785:7]
    connect _dataBuffer_WIRE.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43787:7]
    connect _dataBuffer_WIRE.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43790:7]
    connect _dataBuffer_WIRE.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43792:7]
    connect _dataBuffer_WIRE.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43794:7]
    connect _dataBuffer_WIRE.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43796:7]
    connect _dataBuffer_WIRE.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 43799:7]
    connect _dataBuffer_WIRE.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 43802:7]
    connect _dataBuffer_WIRE.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43804:7]
    connect _dataBuffer_WIRE.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43806:7]
    connect _dataBuffer_WIRE.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43808:7]
    connect _dataBuffer_WIRE.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43810:7]
    connect _dataBuffer_WIRE.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43812:7]
    connect _dataBuffer_WIRE.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43814:7]
    connect _dataBuffer_WIRE.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 43817:7]
    connect _dataBuffer_WIRE.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43819:7]
    connect _dataBuffer_WIRE.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43821:7]
    connect _dataBuffer_WIRE.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43823:7]
    connect _dataBuffer_WIRE.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43825:7]
    connect _dataBuffer_WIRE.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43827:7]
    connect _dataBuffer_WIRE.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43829:7]
    connect _dataBuffer_WIRE.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43831:7]
    connect _dataBuffer_WIRE.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43833:7]
    connect _dataBuffer_WIRE.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43835:7]
    connect _dataBuffer_WIRE.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43837:7]
    connect _dataBuffer_WIRE.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43839:7]
    connect _dataBuffer_WIRE.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43841:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43843:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43845:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43847:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43849:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43851:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43853:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43855:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43857:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43859:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43861:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43863:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43865:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43867:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43869:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43871:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43873:7]
    connect _dataBuffer_WIRE.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43875:7]
    connect _dataBuffer_WIRE.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43877:7]
    connect _dataBuffer_WIRE.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 43880:7]
    connect _dataBuffer_WIRE.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 43882:7]
    connect _dataBuffer_WIRE.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 43884:7]
    connect _dataBuffer_WIRE.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43886:7]
    wire _dataBuffer_WIRE_1 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 43887:29]
    connect _dataBuffer_WIRE_1.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43950:7]
    connect _dataBuffer_WIRE_1.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43952:7]
    connect _dataBuffer_WIRE_1.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43954:7]
    connect _dataBuffer_WIRE_1.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43956:7]
    connect _dataBuffer_WIRE_1.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43958:7]
    connect _dataBuffer_WIRE_1.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43960:7]
    connect _dataBuffer_WIRE_1.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43962:7]
    connect _dataBuffer_WIRE_1.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43964:7]
    connect _dataBuffer_WIRE_1.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43966:7]
    connect _dataBuffer_WIRE_1.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43968:7]
    connect _dataBuffer_WIRE_1.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43970:7]
    connect _dataBuffer_WIRE_1.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 43972:7]
    connect _dataBuffer_WIRE_1.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 43974:7]
    connect _dataBuffer_WIRE_1.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 43976:7]
    connect _dataBuffer_WIRE_1.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43978:7]
    connect _dataBuffer_WIRE_1.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43980:7]
    connect _dataBuffer_WIRE_1.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43982:7]
    connect _dataBuffer_WIRE_1.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43984:7]
    connect _dataBuffer_WIRE_1.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43986:7]
    connect _dataBuffer_WIRE_1.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43988:7]
    connect _dataBuffer_WIRE_1.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 43990:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43992:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43994:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43996:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 43998:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44000:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44002:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44004:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44006:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44008:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44010:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44012:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44014:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44016:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44018:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44020:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44022:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44024:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44026:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44028:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44030:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44032:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44034:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44036:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44038:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44040:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44042:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44044:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44046:7]
    connect _dataBuffer_WIRE_1.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44048:7]
    connect _dataBuffer_WIRE_1.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44050:7]
    connect _dataBuffer_WIRE_1.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44052:7]
    connect _dataBuffer_WIRE_1.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44054:7]
    connect _dataBuffer_WIRE_1.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44056:7]
    connect _dataBuffer_WIRE_1.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44058:7]
    wire _dataBuffer_WIRE_2 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 44059:29]
    connect _dataBuffer_WIRE_2.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44122:7]
    connect _dataBuffer_WIRE_2.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44124:7]
    connect _dataBuffer_WIRE_2.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44126:7]
    connect _dataBuffer_WIRE_2.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44128:7]
    connect _dataBuffer_WIRE_2.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44130:7]
    connect _dataBuffer_WIRE_2.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44132:7]
    connect _dataBuffer_WIRE_2.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44134:7]
    connect _dataBuffer_WIRE_2.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44136:7]
    connect _dataBuffer_WIRE_2.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44138:7]
    connect _dataBuffer_WIRE_2.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44140:7]
    connect _dataBuffer_WIRE_2.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44142:7]
    connect _dataBuffer_WIRE_2.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44144:7]
    connect _dataBuffer_WIRE_2.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44146:7]
    connect _dataBuffer_WIRE_2.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44148:7]
    connect _dataBuffer_WIRE_2.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44150:7]
    connect _dataBuffer_WIRE_2.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44152:7]
    connect _dataBuffer_WIRE_2.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44154:7]
    connect _dataBuffer_WIRE_2.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44156:7]
    connect _dataBuffer_WIRE_2.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44158:7]
    connect _dataBuffer_WIRE_2.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44160:7]
    connect _dataBuffer_WIRE_2.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44162:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44164:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44166:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44168:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44170:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44172:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44174:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44176:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44178:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44180:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44182:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44184:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44186:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44188:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44190:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44192:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44194:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44196:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44198:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44200:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44202:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44204:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44206:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44208:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44210:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44212:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44214:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44216:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44218:7]
    connect _dataBuffer_WIRE_2.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44220:7]
    connect _dataBuffer_WIRE_2.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44222:7]
    connect _dataBuffer_WIRE_2.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44224:7]
    connect _dataBuffer_WIRE_2.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44226:7]
    connect _dataBuffer_WIRE_2.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44228:7]
    connect _dataBuffer_WIRE_2.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44230:7]
    wire _dataBuffer_WIRE_3 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 44231:29]
    connect _dataBuffer_WIRE_3.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44294:7]
    connect _dataBuffer_WIRE_3.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44296:7]
    connect _dataBuffer_WIRE_3.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44298:7]
    connect _dataBuffer_WIRE_3.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44300:7]
    connect _dataBuffer_WIRE_3.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44302:7]
    connect _dataBuffer_WIRE_3.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44304:7]
    connect _dataBuffer_WIRE_3.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44306:7]
    connect _dataBuffer_WIRE_3.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44308:7]
    connect _dataBuffer_WIRE_3.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44310:7]
    connect _dataBuffer_WIRE_3.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44312:7]
    connect _dataBuffer_WIRE_3.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44314:7]
    connect _dataBuffer_WIRE_3.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44316:7]
    connect _dataBuffer_WIRE_3.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44318:7]
    connect _dataBuffer_WIRE_3.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44320:7]
    connect _dataBuffer_WIRE_3.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44322:7]
    connect _dataBuffer_WIRE_3.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44324:7]
    connect _dataBuffer_WIRE_3.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44326:7]
    connect _dataBuffer_WIRE_3.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44328:7]
    connect _dataBuffer_WIRE_3.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44330:7]
    connect _dataBuffer_WIRE_3.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44332:7]
    connect _dataBuffer_WIRE_3.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44334:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44336:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44338:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44340:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44342:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44344:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44346:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44348:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44350:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44352:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44354:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44356:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44358:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44360:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44362:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44364:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44366:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44368:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44370:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44372:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44374:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44376:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44378:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44380:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44382:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44384:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44386:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44388:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44390:7]
    connect _dataBuffer_WIRE_3.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44392:7]
    connect _dataBuffer_WIRE_3.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44394:7]
    connect _dataBuffer_WIRE_3.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44396:7]
    connect _dataBuffer_WIRE_3.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44398:7]
    connect _dataBuffer_WIRE_3.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44400:7]
    connect _dataBuffer_WIRE_3.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44402:7]
    wire _dataBuffer_WIRE_4 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }[4] @[build/NutShell.fir.opt.mlir 44403:29]
    connect _dataBuffer_WIRE_4[0].data.imm, _dataBuffer_WIRE.data.imm @[build/NutShell.fir.opt.mlir 44652:7]
    connect _dataBuffer_WIRE_4[0].data.src2, _dataBuffer_WIRE.data.src2 @[build/NutShell.fir.opt.mlir 44653:7]
    connect _dataBuffer_WIRE_4[0].data.src1, _dataBuffer_WIRE.data.src1 @[build/NutShell.fir.opt.mlir 44654:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isBlocked, _dataBuffer_WIRE.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44655:7]
    connect _dataBuffer_WIRE_4[0].ctrl.noSpecExec, _dataBuffer_WIRE.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44656:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isSrc2Forward, _dataBuffer_WIRE.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44657:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isSrc1Forward, _dataBuffer_WIRE.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44658:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isNutCoreTrap, _dataBuffer_WIRE.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44659:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfDest, _dataBuffer_WIRE.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44660:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfWen, _dataBuffer_WIRE.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44661:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfSrc2, _dataBuffer_WIRE.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44662:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfSrc1, _dataBuffer_WIRE.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44663:7]
    connect _dataBuffer_WIRE_4[0].ctrl.fuOpType, _dataBuffer_WIRE.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44664:7]
    connect _dataBuffer_WIRE_4[0].ctrl.fuType, _dataBuffer_WIRE.ctrl.fuType @[build/NutShell.fir.opt.mlir 44665:7]
    connect _dataBuffer_WIRE_4[0].ctrl.src2Type, _dataBuffer_WIRE.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44666:7]
    connect _dataBuffer_WIRE_4[0].ctrl.src1Type, _dataBuffer_WIRE.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44667:7]
    connect _dataBuffer_WIRE_4[0].cf.isBranch, _dataBuffer_WIRE.cf.isBranch @[build/NutShell.fir.opt.mlir 44668:7]
    connect _dataBuffer_WIRE_4[0].cf.runahead_checkpoint_id, _dataBuffer_WIRE.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44669:7]
    connect _dataBuffer_WIRE_4[0].cf.crossPageIPFFix, _dataBuffer_WIRE.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44670:7]
    connect _dataBuffer_WIRE_4[0].cf.isRVC, _dataBuffer_WIRE.cf.isRVC @[build/NutShell.fir.opt.mlir 44671:7]
    connect _dataBuffer_WIRE_4[0].cf.brIdx, _dataBuffer_WIRE.cf.brIdx @[build/NutShell.fir.opt.mlir 44672:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[0], _dataBuffer_WIRE.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44673:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[1], _dataBuffer_WIRE.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44674:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[2], _dataBuffer_WIRE.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44675:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[3], _dataBuffer_WIRE.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44676:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[4], _dataBuffer_WIRE.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44677:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[5], _dataBuffer_WIRE.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44678:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[6], _dataBuffer_WIRE.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44679:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[7], _dataBuffer_WIRE.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44680:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[8], _dataBuffer_WIRE.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44681:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[9], _dataBuffer_WIRE.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44682:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[10], _dataBuffer_WIRE.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44683:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[11], _dataBuffer_WIRE.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44684:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[0], _dataBuffer_WIRE.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44685:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[1], _dataBuffer_WIRE.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44686:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[2], _dataBuffer_WIRE.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44687:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[3], _dataBuffer_WIRE.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44688:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[4], _dataBuffer_WIRE.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44689:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[5], _dataBuffer_WIRE.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44690:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[6], _dataBuffer_WIRE.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44691:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[7], _dataBuffer_WIRE.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44692:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[8], _dataBuffer_WIRE.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44693:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[9], _dataBuffer_WIRE.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44694:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[10], _dataBuffer_WIRE.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44695:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[11], _dataBuffer_WIRE.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44696:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[12], _dataBuffer_WIRE.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44697:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[13], _dataBuffer_WIRE.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44698:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[14], _dataBuffer_WIRE.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44699:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[15], _dataBuffer_WIRE.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44700:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.valid, _dataBuffer_WIRE.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44701:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.rtype, _dataBuffer_WIRE.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44702:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.target, _dataBuffer_WIRE.cf.redirect.target @[build/NutShell.fir.opt.mlir 44703:7]
    connect _dataBuffer_WIRE_4[0].cf.pnpc, _dataBuffer_WIRE.cf.pnpc @[build/NutShell.fir.opt.mlir 44704:7]
    connect _dataBuffer_WIRE_4[0].cf.pc, _dataBuffer_WIRE.cf.pc @[build/NutShell.fir.opt.mlir 44705:7]
    connect _dataBuffer_WIRE_4[0].cf.instr, _dataBuffer_WIRE.cf.instr @[build/NutShell.fir.opt.mlir 44706:7]
    connect _dataBuffer_WIRE_4[1].data.imm, _dataBuffer_WIRE_1.data.imm @[build/NutShell.fir.opt.mlir 44707:7]
    connect _dataBuffer_WIRE_4[1].data.src2, _dataBuffer_WIRE_1.data.src2 @[build/NutShell.fir.opt.mlir 44708:7]
    connect _dataBuffer_WIRE_4[1].data.src1, _dataBuffer_WIRE_1.data.src1 @[build/NutShell.fir.opt.mlir 44709:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isBlocked, _dataBuffer_WIRE_1.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44710:7]
    connect _dataBuffer_WIRE_4[1].ctrl.noSpecExec, _dataBuffer_WIRE_1.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44711:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isSrc2Forward, _dataBuffer_WIRE_1.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44712:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isSrc1Forward, _dataBuffer_WIRE_1.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44713:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isNutCoreTrap, _dataBuffer_WIRE_1.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44714:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfDest, _dataBuffer_WIRE_1.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44715:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfWen, _dataBuffer_WIRE_1.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44716:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfSrc2, _dataBuffer_WIRE_1.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44717:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfSrc1, _dataBuffer_WIRE_1.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44718:7]
    connect _dataBuffer_WIRE_4[1].ctrl.fuOpType, _dataBuffer_WIRE_1.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44719:7]
    connect _dataBuffer_WIRE_4[1].ctrl.fuType, _dataBuffer_WIRE_1.ctrl.fuType @[build/NutShell.fir.opt.mlir 44720:7]
    connect _dataBuffer_WIRE_4[1].ctrl.src2Type, _dataBuffer_WIRE_1.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44721:7]
    connect _dataBuffer_WIRE_4[1].ctrl.src1Type, _dataBuffer_WIRE_1.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44722:7]
    connect _dataBuffer_WIRE_4[1].cf.isBranch, _dataBuffer_WIRE_1.cf.isBranch @[build/NutShell.fir.opt.mlir 44723:7]
    connect _dataBuffer_WIRE_4[1].cf.runahead_checkpoint_id, _dataBuffer_WIRE_1.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44724:7]
    connect _dataBuffer_WIRE_4[1].cf.crossPageIPFFix, _dataBuffer_WIRE_1.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44725:7]
    connect _dataBuffer_WIRE_4[1].cf.isRVC, _dataBuffer_WIRE_1.cf.isRVC @[build/NutShell.fir.opt.mlir 44726:7]
    connect _dataBuffer_WIRE_4[1].cf.brIdx, _dataBuffer_WIRE_1.cf.brIdx @[build/NutShell.fir.opt.mlir 44727:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[0], _dataBuffer_WIRE_1.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44728:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[1], _dataBuffer_WIRE_1.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44729:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[2], _dataBuffer_WIRE_1.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44730:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[3], _dataBuffer_WIRE_1.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44731:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[4], _dataBuffer_WIRE_1.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44732:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[5], _dataBuffer_WIRE_1.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44733:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[6], _dataBuffer_WIRE_1.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44734:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[7], _dataBuffer_WIRE_1.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44735:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[8], _dataBuffer_WIRE_1.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44736:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[9], _dataBuffer_WIRE_1.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44737:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[10], _dataBuffer_WIRE_1.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44738:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[11], _dataBuffer_WIRE_1.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44739:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[0], _dataBuffer_WIRE_1.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44740:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[1], _dataBuffer_WIRE_1.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44741:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[2], _dataBuffer_WIRE_1.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44742:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[3], _dataBuffer_WIRE_1.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44743:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[4], _dataBuffer_WIRE_1.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44744:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[5], _dataBuffer_WIRE_1.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44745:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[6], _dataBuffer_WIRE_1.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44746:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[7], _dataBuffer_WIRE_1.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44747:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[8], _dataBuffer_WIRE_1.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44748:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[9], _dataBuffer_WIRE_1.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44749:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[10], _dataBuffer_WIRE_1.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44750:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[11], _dataBuffer_WIRE_1.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44751:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[12], _dataBuffer_WIRE_1.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44752:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[13], _dataBuffer_WIRE_1.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44753:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[14], _dataBuffer_WIRE_1.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44754:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[15], _dataBuffer_WIRE_1.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44755:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.valid, _dataBuffer_WIRE_1.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44756:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.rtype, _dataBuffer_WIRE_1.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44757:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.target, _dataBuffer_WIRE_1.cf.redirect.target @[build/NutShell.fir.opt.mlir 44758:7]
    connect _dataBuffer_WIRE_4[1].cf.pnpc, _dataBuffer_WIRE_1.cf.pnpc @[build/NutShell.fir.opt.mlir 44759:7]
    connect _dataBuffer_WIRE_4[1].cf.pc, _dataBuffer_WIRE_1.cf.pc @[build/NutShell.fir.opt.mlir 44760:7]
    connect _dataBuffer_WIRE_4[1].cf.instr, _dataBuffer_WIRE_1.cf.instr @[build/NutShell.fir.opt.mlir 44761:7]
    connect _dataBuffer_WIRE_4[2].data.imm, _dataBuffer_WIRE_2.data.imm @[build/NutShell.fir.opt.mlir 44762:7]
    connect _dataBuffer_WIRE_4[2].data.src2, _dataBuffer_WIRE_2.data.src2 @[build/NutShell.fir.opt.mlir 44763:7]
    connect _dataBuffer_WIRE_4[2].data.src1, _dataBuffer_WIRE_2.data.src1 @[build/NutShell.fir.opt.mlir 44764:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isBlocked, _dataBuffer_WIRE_2.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44765:7]
    connect _dataBuffer_WIRE_4[2].ctrl.noSpecExec, _dataBuffer_WIRE_2.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44766:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isSrc2Forward, _dataBuffer_WIRE_2.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44767:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isSrc1Forward, _dataBuffer_WIRE_2.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44768:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isNutCoreTrap, _dataBuffer_WIRE_2.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44769:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfDest, _dataBuffer_WIRE_2.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44770:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfWen, _dataBuffer_WIRE_2.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44771:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfSrc2, _dataBuffer_WIRE_2.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44772:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfSrc1, _dataBuffer_WIRE_2.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44773:7]
    connect _dataBuffer_WIRE_4[2].ctrl.fuOpType, _dataBuffer_WIRE_2.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44774:7]
    connect _dataBuffer_WIRE_4[2].ctrl.fuType, _dataBuffer_WIRE_2.ctrl.fuType @[build/NutShell.fir.opt.mlir 44775:7]
    connect _dataBuffer_WIRE_4[2].ctrl.src2Type, _dataBuffer_WIRE_2.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44776:7]
    connect _dataBuffer_WIRE_4[2].ctrl.src1Type, _dataBuffer_WIRE_2.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44777:7]
    connect _dataBuffer_WIRE_4[2].cf.isBranch, _dataBuffer_WIRE_2.cf.isBranch @[build/NutShell.fir.opt.mlir 44778:7]
    connect _dataBuffer_WIRE_4[2].cf.runahead_checkpoint_id, _dataBuffer_WIRE_2.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44779:7]
    connect _dataBuffer_WIRE_4[2].cf.crossPageIPFFix, _dataBuffer_WIRE_2.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44780:7]
    connect _dataBuffer_WIRE_4[2].cf.isRVC, _dataBuffer_WIRE_2.cf.isRVC @[build/NutShell.fir.opt.mlir 44781:7]
    connect _dataBuffer_WIRE_4[2].cf.brIdx, _dataBuffer_WIRE_2.cf.brIdx @[build/NutShell.fir.opt.mlir 44782:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[0], _dataBuffer_WIRE_2.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44783:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[1], _dataBuffer_WIRE_2.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44784:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[2], _dataBuffer_WIRE_2.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44785:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[3], _dataBuffer_WIRE_2.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44786:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[4], _dataBuffer_WIRE_2.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44787:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[5], _dataBuffer_WIRE_2.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44788:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[6], _dataBuffer_WIRE_2.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44789:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[7], _dataBuffer_WIRE_2.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44790:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[8], _dataBuffer_WIRE_2.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44791:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[9], _dataBuffer_WIRE_2.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44792:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[10], _dataBuffer_WIRE_2.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44793:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[11], _dataBuffer_WIRE_2.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44794:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[0], _dataBuffer_WIRE_2.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44795:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[1], _dataBuffer_WIRE_2.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44796:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[2], _dataBuffer_WIRE_2.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44797:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[3], _dataBuffer_WIRE_2.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44798:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[4], _dataBuffer_WIRE_2.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44799:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[5], _dataBuffer_WIRE_2.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44800:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[6], _dataBuffer_WIRE_2.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44801:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[7], _dataBuffer_WIRE_2.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44802:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[8], _dataBuffer_WIRE_2.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44803:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[9], _dataBuffer_WIRE_2.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44804:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[10], _dataBuffer_WIRE_2.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44805:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[11], _dataBuffer_WIRE_2.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44806:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[12], _dataBuffer_WIRE_2.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44807:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[13], _dataBuffer_WIRE_2.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44808:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[14], _dataBuffer_WIRE_2.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44809:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[15], _dataBuffer_WIRE_2.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44810:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.valid, _dataBuffer_WIRE_2.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44811:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.rtype, _dataBuffer_WIRE_2.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44812:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.target, _dataBuffer_WIRE_2.cf.redirect.target @[build/NutShell.fir.opt.mlir 44813:7]
    connect _dataBuffer_WIRE_4[2].cf.pnpc, _dataBuffer_WIRE_2.cf.pnpc @[build/NutShell.fir.opt.mlir 44814:7]
    connect _dataBuffer_WIRE_4[2].cf.pc, _dataBuffer_WIRE_2.cf.pc @[build/NutShell.fir.opt.mlir 44815:7]
    connect _dataBuffer_WIRE_4[2].cf.instr, _dataBuffer_WIRE_2.cf.instr @[build/NutShell.fir.opt.mlir 44816:7]
    connect _dataBuffer_WIRE_4[3].data.imm, _dataBuffer_WIRE_3.data.imm @[build/NutShell.fir.opt.mlir 44817:7]
    connect _dataBuffer_WIRE_4[3].data.src2, _dataBuffer_WIRE_3.data.src2 @[build/NutShell.fir.opt.mlir 44818:7]
    connect _dataBuffer_WIRE_4[3].data.src1, _dataBuffer_WIRE_3.data.src1 @[build/NutShell.fir.opt.mlir 44819:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isBlocked, _dataBuffer_WIRE_3.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44820:7]
    connect _dataBuffer_WIRE_4[3].ctrl.noSpecExec, _dataBuffer_WIRE_3.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44821:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isSrc2Forward, _dataBuffer_WIRE_3.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44822:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isSrc1Forward, _dataBuffer_WIRE_3.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44823:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isNutCoreTrap, _dataBuffer_WIRE_3.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44824:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfDest, _dataBuffer_WIRE_3.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44825:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfWen, _dataBuffer_WIRE_3.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44826:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfSrc2, _dataBuffer_WIRE_3.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44827:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfSrc1, _dataBuffer_WIRE_3.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44828:7]
    connect _dataBuffer_WIRE_4[3].ctrl.fuOpType, _dataBuffer_WIRE_3.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44829:7]
    connect _dataBuffer_WIRE_4[3].ctrl.fuType, _dataBuffer_WIRE_3.ctrl.fuType @[build/NutShell.fir.opt.mlir 44830:7]
    connect _dataBuffer_WIRE_4[3].ctrl.src2Type, _dataBuffer_WIRE_3.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44831:7]
    connect _dataBuffer_WIRE_4[3].ctrl.src1Type, _dataBuffer_WIRE_3.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44832:7]
    connect _dataBuffer_WIRE_4[3].cf.isBranch, _dataBuffer_WIRE_3.cf.isBranch @[build/NutShell.fir.opt.mlir 44833:7]
    connect _dataBuffer_WIRE_4[3].cf.runahead_checkpoint_id, _dataBuffer_WIRE_3.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44834:7]
    connect _dataBuffer_WIRE_4[3].cf.crossPageIPFFix, _dataBuffer_WIRE_3.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44835:7]
    connect _dataBuffer_WIRE_4[3].cf.isRVC, _dataBuffer_WIRE_3.cf.isRVC @[build/NutShell.fir.opt.mlir 44836:7]
    connect _dataBuffer_WIRE_4[3].cf.brIdx, _dataBuffer_WIRE_3.cf.brIdx @[build/NutShell.fir.opt.mlir 44837:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[0], _dataBuffer_WIRE_3.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44838:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[1], _dataBuffer_WIRE_3.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44839:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[2], _dataBuffer_WIRE_3.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44840:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[3], _dataBuffer_WIRE_3.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44841:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[4], _dataBuffer_WIRE_3.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44842:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[5], _dataBuffer_WIRE_3.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44843:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[6], _dataBuffer_WIRE_3.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44844:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[7], _dataBuffer_WIRE_3.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44845:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[8], _dataBuffer_WIRE_3.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44846:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[9], _dataBuffer_WIRE_3.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44847:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[10], _dataBuffer_WIRE_3.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44848:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[11], _dataBuffer_WIRE_3.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44849:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[0], _dataBuffer_WIRE_3.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44850:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[1], _dataBuffer_WIRE_3.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44851:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[2], _dataBuffer_WIRE_3.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44852:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[3], _dataBuffer_WIRE_3.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44853:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[4], _dataBuffer_WIRE_3.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44854:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[5], _dataBuffer_WIRE_3.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44855:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[6], _dataBuffer_WIRE_3.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44856:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[7], _dataBuffer_WIRE_3.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44857:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[8], _dataBuffer_WIRE_3.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44858:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[9], _dataBuffer_WIRE_3.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44859:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[10], _dataBuffer_WIRE_3.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44860:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[11], _dataBuffer_WIRE_3.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44861:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[12], _dataBuffer_WIRE_3.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44862:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[13], _dataBuffer_WIRE_3.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44863:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[14], _dataBuffer_WIRE_3.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44864:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[15], _dataBuffer_WIRE_3.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44865:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.valid, _dataBuffer_WIRE_3.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44866:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.rtype, _dataBuffer_WIRE_3.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44867:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.target, _dataBuffer_WIRE_3.cf.redirect.target @[build/NutShell.fir.opt.mlir 44868:7]
    connect _dataBuffer_WIRE_4[3].cf.pnpc, _dataBuffer_WIRE_3.cf.pnpc @[build/NutShell.fir.opt.mlir 44869:7]
    connect _dataBuffer_WIRE_4[3].cf.pc, _dataBuffer_WIRE_3.cf.pc @[build/NutShell.fir.opt.mlir 44870:7]
    connect _dataBuffer_WIRE_4[3].cf.instr, _dataBuffer_WIRE_3.cf.instr @[build/NutShell.fir.opt.mlir 44871:7]
    regreset dataBuffer : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }[4], clock, reset, _dataBuffer_WIRE_4 @[build/NutShell.fir.opt.mlir 44872:21]
    regreset ringBufferHead : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 44874:25]
    regreset ringBufferTail : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 44875:25]
    node ringBufferEmpty = eq(ringBufferHead, ringBufferTail) @[build/NutShell.fir.opt.mlir 44877:26]
    node _ringBufferAllowin_T = add(ringBufferHead, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 44880:31]
    node _ringBufferAllowin_T_1 = tail(_ringBufferAllowin_T, 1) @[build/NutShell.fir.opt.mlir 44882:33]
    node _ringBufferAllowin_T_2 = neq(_ringBufferAllowin_T_1, ringBufferTail) @[build/NutShell.fir.opt.mlir 44884:33]
    node _ringBufferAllowin_T_3 = add(ringBufferHead, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 44887:33]
    node _ringBufferAllowin_T_4 = tail(_ringBufferAllowin_T_3, 1) @[build/NutShell.fir.opt.mlir 44889:33]
    node _ringBufferAllowin_T_5 = neq(_ringBufferAllowin_T_4, ringBufferTail) @[build/NutShell.fir.opt.mlir 44891:33]
    node _ringBufferAllowin_T_6 = and(_ringBufferAllowin_T_5, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 44893:33]
    node ringBufferAllowin = and(_ringBufferAllowin_T_2, _ringBufferAllowin_T_6) @[build/NutShell.fir.opt.mlir 44895:28]
    wire needEnqueue : UInt<1>[2] @[build/NutShell.fir.opt.mlir 44896:22]
    connect needEnqueue[0], frontend.io.out[0].valid @[build/NutShell.fir.opt.mlir 44899:7]
    connect needEnqueue[1], frontend.io.out[1].valid @[build/NutShell.fir.opt.mlir 44900:7]
    node enqueueSize = add(needEnqueue[0], needEnqueue[1]) @[build/NutShell.fir.opt.mlir 44902:22]
    node enqueueFire_0 = geq(enqueueSize, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 44904:24]
    node enqueueFire_1 = geq(enqueueSize, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 44906:24]
    node _wen_T = and(frontend.io.out[0].ready, frontend.io.out[0].valid) @[build/NutShell.fir.opt.mlir 44908:17]
    node _wen_T_1 = and(frontend.io.out[1].ready, frontend.io.out[1].valid) @[build/NutShell.fir.opt.mlir 44910:19]
    node wen = or(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 44912:14]
    when wen : @[build/NutShell.fir.opt.mlir 44913:7]
      when enqueueFire_0 : @[build/NutShell.fir.opt.mlir 44914:9]
        node _T_1 = add(UInt<1>(0), ringBufferHead) @[build/NutShell.fir.opt.mlir 44916:19]
        node _T_2 = tail(_T_1, 1) @[build/NutShell.fir.opt.mlir 44918:19]
        node _dataBuffer_T = mux(needEnqueue[0], frontend.io.out[0].bits, frontend.io.out[1].bits) @[build/NutShell.fir.opt.mlir 44920:28]
        connect dataBuffer[_T_2], _dataBuffer_T @[build/NutShell.fir.opt.mlir 44922:11]
      when enqueueFire_1 : @[build/NutShell.fir.opt.mlir 44924:9]
        node _T_3 = add(UInt<1>(1), ringBufferHead) @[build/NutShell.fir.opt.mlir 44926:19]
        node _T_4 = tail(_T_3, 1) @[build/NutShell.fir.opt.mlir 44928:19]
        connect dataBuffer[_T_4], frontend.io.out[1].bits @[build/NutShell.fir.opt.mlir 44930:11]
      node _ringBufferHead_T = add(ringBufferHead, enqueueSize) @[build/NutShell.fir.opt.mlir 44933:30]
      node _ringBufferHead_T_1 = tail(_ringBufferHead_T, 1) @[build/NutShell.fir.opt.mlir 44935:32]
      connect ringBufferHead, _ringBufferHead_T_1 @[build/NutShell.fir.opt.mlir 44936:9]
    node _frontend_io_out_0_ready_T = eq(frontend.io.out[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 44939:37]
    node _frontend_io_out_0_ready_T_1 = or(ringBufferAllowin, _frontend_io_out_0_ready_T) @[build/NutShell.fir.opt.mlir 44941:39]
    connect frontend.io.out[0].ready, _frontend_io_out_0_ready_T_1 @[build/NutShell.fir.opt.mlir 44942:7]
    node _frontend_io_out_1_ready_T = eq(frontend.io.out[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 44944:37]
    node _frontend_io_out_1_ready_T_1 = or(ringBufferAllowin, _frontend_io_out_1_ready_T) @[build/NutShell.fir.opt.mlir 44946:39]
    connect frontend.io.out[1].ready, _frontend_io_out_1_ready_T_1 @[build/NutShell.fir.opt.mlir 44947:7]
    connect backend.io.in[0].bits.data.imm, dataBuffer[ringBufferTail].data.imm @[build/NutShell.fir.opt.mlir 44951:7]
    connect backend.io.in[0].bits.data.src2, dataBuffer[ringBufferTail].data.src2 @[build/NutShell.fir.opt.mlir 44955:7]
    connect backend.io.in[0].bits.data.src1, dataBuffer[ringBufferTail].data.src1 @[build/NutShell.fir.opt.mlir 44959:7]
    connect backend.io.in[0].bits.ctrl.isBlocked, dataBuffer[ringBufferTail].ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44963:7]
    connect backend.io.in[0].bits.ctrl.noSpecExec, dataBuffer[ringBufferTail].ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44967:7]
    connect backend.io.in[0].bits.ctrl.isSrc2Forward, dataBuffer[ringBufferTail].ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44971:7]
    connect backend.io.in[0].bits.ctrl.isSrc1Forward, dataBuffer[ringBufferTail].ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44975:7]
    connect backend.io.in[0].bits.ctrl.isNutCoreTrap, dataBuffer[ringBufferTail].ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44979:7]
    connect backend.io.in[0].bits.ctrl.rfDest, dataBuffer[ringBufferTail].ctrl.rfDest @[build/NutShell.fir.opt.mlir 44983:7]
    connect backend.io.in[0].bits.ctrl.rfWen, dataBuffer[ringBufferTail].ctrl.rfWen @[build/NutShell.fir.opt.mlir 44987:7]
    connect backend.io.in[0].bits.ctrl.rfSrc2, dataBuffer[ringBufferTail].ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44991:7]
    connect backend.io.in[0].bits.ctrl.rfSrc1, dataBuffer[ringBufferTail].ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44995:7]
    connect backend.io.in[0].bits.ctrl.fuOpType, dataBuffer[ringBufferTail].ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44999:7]
    connect backend.io.in[0].bits.ctrl.fuType, dataBuffer[ringBufferTail].ctrl.fuType @[build/NutShell.fir.opt.mlir 45003:7]
    connect backend.io.in[0].bits.ctrl.src2Type, dataBuffer[ringBufferTail].ctrl.src2Type @[build/NutShell.fir.opt.mlir 45007:7]
    connect backend.io.in[0].bits.ctrl.src1Type, dataBuffer[ringBufferTail].ctrl.src1Type @[build/NutShell.fir.opt.mlir 45011:7]
    connect backend.io.in[0].bits.cf.isBranch, dataBuffer[ringBufferTail].cf.isBranch @[build/NutShell.fir.opt.mlir 45015:7]
    connect backend.io.in[0].bits.cf.runahead_checkpoint_id, dataBuffer[ringBufferTail].cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 45019:7]
    connect backend.io.in[0].bits.cf.crossPageIPFFix, dataBuffer[ringBufferTail].cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 45023:7]
    connect backend.io.in[0].bits.cf.isRVC, dataBuffer[ringBufferTail].cf.isRVC @[build/NutShell.fir.opt.mlir 45027:7]
    connect backend.io.in[0].bits.cf.brIdx, dataBuffer[ringBufferTail].cf.brIdx @[build/NutShell.fir.opt.mlir 45031:7]
    connect backend.io.in[0].bits.cf.intrVec[0], dataBuffer[ringBufferTail].cf.intrVec[0] @[build/NutShell.fir.opt.mlir 45036:7]
    connect backend.io.in[0].bits.cf.intrVec[1], dataBuffer[ringBufferTail].cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45041:7]
    connect backend.io.in[0].bits.cf.intrVec[2], dataBuffer[ringBufferTail].cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45046:7]
    connect backend.io.in[0].bits.cf.intrVec[3], dataBuffer[ringBufferTail].cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45051:7]
    connect backend.io.in[0].bits.cf.intrVec[4], dataBuffer[ringBufferTail].cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45056:7]
    connect backend.io.in[0].bits.cf.intrVec[5], dataBuffer[ringBufferTail].cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45061:7]
    connect backend.io.in[0].bits.cf.intrVec[6], dataBuffer[ringBufferTail].cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45066:7]
    connect backend.io.in[0].bits.cf.intrVec[7], dataBuffer[ringBufferTail].cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45071:7]
    connect backend.io.in[0].bits.cf.intrVec[8], dataBuffer[ringBufferTail].cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45076:7]
    connect backend.io.in[0].bits.cf.intrVec[9], dataBuffer[ringBufferTail].cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45081:7]
    connect backend.io.in[0].bits.cf.intrVec[10], dataBuffer[ringBufferTail].cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45086:7]
    connect backend.io.in[0].bits.cf.intrVec[11], dataBuffer[ringBufferTail].cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45091:7]
    connect backend.io.in[0].bits.cf.exceptionVec[0], dataBuffer[ringBufferTail].cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45096:7]
    connect backend.io.in[0].bits.cf.exceptionVec[1], dataBuffer[ringBufferTail].cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45101:7]
    connect backend.io.in[0].bits.cf.exceptionVec[2], dataBuffer[ringBufferTail].cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45106:7]
    connect backend.io.in[0].bits.cf.exceptionVec[3], dataBuffer[ringBufferTail].cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45111:7]
    connect backend.io.in[0].bits.cf.exceptionVec[4], dataBuffer[ringBufferTail].cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45116:7]
    connect backend.io.in[0].bits.cf.exceptionVec[5], dataBuffer[ringBufferTail].cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45121:7]
    connect backend.io.in[0].bits.cf.exceptionVec[6], dataBuffer[ringBufferTail].cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45126:7]
    connect backend.io.in[0].bits.cf.exceptionVec[7], dataBuffer[ringBufferTail].cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45131:7]
    connect backend.io.in[0].bits.cf.exceptionVec[8], dataBuffer[ringBufferTail].cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45136:7]
    connect backend.io.in[0].bits.cf.exceptionVec[9], dataBuffer[ringBufferTail].cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45141:7]
    connect backend.io.in[0].bits.cf.exceptionVec[10], dataBuffer[ringBufferTail].cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45146:7]
    connect backend.io.in[0].bits.cf.exceptionVec[11], dataBuffer[ringBufferTail].cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45151:7]
    connect backend.io.in[0].bits.cf.exceptionVec[12], dataBuffer[ringBufferTail].cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45156:7]
    connect backend.io.in[0].bits.cf.exceptionVec[13], dataBuffer[ringBufferTail].cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45161:7]
    connect backend.io.in[0].bits.cf.exceptionVec[14], dataBuffer[ringBufferTail].cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45166:7]
    connect backend.io.in[0].bits.cf.exceptionVec[15], dataBuffer[ringBufferTail].cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45171:7]
    connect backend.io.in[0].bits.cf.redirect.valid, dataBuffer[ringBufferTail].cf.redirect.valid @[build/NutShell.fir.opt.mlir 45176:7]
    connect backend.io.in[0].bits.cf.redirect.rtype, dataBuffer[ringBufferTail].cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45181:7]
    connect backend.io.in[0].bits.cf.redirect.target, dataBuffer[ringBufferTail].cf.redirect.target @[build/NutShell.fir.opt.mlir 45186:7]
    connect backend.io.in[0].bits.cf.pnpc, dataBuffer[ringBufferTail].cf.pnpc @[build/NutShell.fir.opt.mlir 45190:7]
    connect backend.io.in[0].bits.cf.pc, dataBuffer[ringBufferTail].cf.pc @[build/NutShell.fir.opt.mlir 45194:7]
    connect backend.io.in[0].bits.cf.instr, dataBuffer[ringBufferTail].cf.instr @[build/NutShell.fir.opt.mlir 45198:7]
    node _backend_io_in_0_valid_T = neq(ringBufferHead, ringBufferTail) @[build/NutShell.fir.opt.mlir 45200:35]
    connect backend.io.in[0].valid, _backend_io_in_0_valid_T @[build/NutShell.fir.opt.mlir 45201:7]
    node _deq2_StartIndex_T = add(ringBufferTail, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 45203:29]
    node deq2_StartIndex = tail(_deq2_StartIndex_T, 1) @[build/NutShell.fir.opt.mlir 45205:26]
    connect backend.io.in[1].bits.data.imm, dataBuffer[deq2_StartIndex].data.imm @[build/NutShell.fir.opt.mlir 45209:7]
    connect backend.io.in[1].bits.data.src2, dataBuffer[deq2_StartIndex].data.src2 @[build/NutShell.fir.opt.mlir 45213:7]
    connect backend.io.in[1].bits.data.src1, dataBuffer[deq2_StartIndex].data.src1 @[build/NutShell.fir.opt.mlir 45217:7]
    connect backend.io.in[1].bits.ctrl.isBlocked, dataBuffer[deq2_StartIndex].ctrl.isBlocked @[build/NutShell.fir.opt.mlir 45221:7]
    connect backend.io.in[1].bits.ctrl.noSpecExec, dataBuffer[deq2_StartIndex].ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 45225:7]
    connect backend.io.in[1].bits.ctrl.isSrc2Forward, dataBuffer[deq2_StartIndex].ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 45229:7]
    connect backend.io.in[1].bits.ctrl.isSrc1Forward, dataBuffer[deq2_StartIndex].ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 45233:7]
    connect backend.io.in[1].bits.ctrl.isNutCoreTrap, dataBuffer[deq2_StartIndex].ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 45237:7]
    connect backend.io.in[1].bits.ctrl.rfDest, dataBuffer[deq2_StartIndex].ctrl.rfDest @[build/NutShell.fir.opt.mlir 45241:7]
    connect backend.io.in[1].bits.ctrl.rfWen, dataBuffer[deq2_StartIndex].ctrl.rfWen @[build/NutShell.fir.opt.mlir 45245:7]
    connect backend.io.in[1].bits.ctrl.rfSrc2, dataBuffer[deq2_StartIndex].ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 45249:7]
    connect backend.io.in[1].bits.ctrl.rfSrc1, dataBuffer[deq2_StartIndex].ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 45253:7]
    connect backend.io.in[1].bits.ctrl.fuOpType, dataBuffer[deq2_StartIndex].ctrl.fuOpType @[build/NutShell.fir.opt.mlir 45257:7]
    connect backend.io.in[1].bits.ctrl.fuType, dataBuffer[deq2_StartIndex].ctrl.fuType @[build/NutShell.fir.opt.mlir 45261:7]
    connect backend.io.in[1].bits.ctrl.src2Type, dataBuffer[deq2_StartIndex].ctrl.src2Type @[build/NutShell.fir.opt.mlir 45265:7]
    connect backend.io.in[1].bits.ctrl.src1Type, dataBuffer[deq2_StartIndex].ctrl.src1Type @[build/NutShell.fir.opt.mlir 45269:7]
    connect backend.io.in[1].bits.cf.isBranch, dataBuffer[deq2_StartIndex].cf.isBranch @[build/NutShell.fir.opt.mlir 45273:7]
    connect backend.io.in[1].bits.cf.runahead_checkpoint_id, dataBuffer[deq2_StartIndex].cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 45277:7]
    connect backend.io.in[1].bits.cf.crossPageIPFFix, dataBuffer[deq2_StartIndex].cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 45281:7]
    connect backend.io.in[1].bits.cf.isRVC, dataBuffer[deq2_StartIndex].cf.isRVC @[build/NutShell.fir.opt.mlir 45285:7]
    connect backend.io.in[1].bits.cf.brIdx, dataBuffer[deq2_StartIndex].cf.brIdx @[build/NutShell.fir.opt.mlir 45289:7]
    connect backend.io.in[1].bits.cf.intrVec[0], dataBuffer[deq2_StartIndex].cf.intrVec[0] @[build/NutShell.fir.opt.mlir 45294:7]
    connect backend.io.in[1].bits.cf.intrVec[1], dataBuffer[deq2_StartIndex].cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45299:7]
    connect backend.io.in[1].bits.cf.intrVec[2], dataBuffer[deq2_StartIndex].cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45304:7]
    connect backend.io.in[1].bits.cf.intrVec[3], dataBuffer[deq2_StartIndex].cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45309:7]
    connect backend.io.in[1].bits.cf.intrVec[4], dataBuffer[deq2_StartIndex].cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45314:7]
    connect backend.io.in[1].bits.cf.intrVec[5], dataBuffer[deq2_StartIndex].cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45319:7]
    connect backend.io.in[1].bits.cf.intrVec[6], dataBuffer[deq2_StartIndex].cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45324:7]
    connect backend.io.in[1].bits.cf.intrVec[7], dataBuffer[deq2_StartIndex].cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45329:7]
    connect backend.io.in[1].bits.cf.intrVec[8], dataBuffer[deq2_StartIndex].cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45334:7]
    connect backend.io.in[1].bits.cf.intrVec[9], dataBuffer[deq2_StartIndex].cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45339:7]
    connect backend.io.in[1].bits.cf.intrVec[10], dataBuffer[deq2_StartIndex].cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45344:7]
    connect backend.io.in[1].bits.cf.intrVec[11], dataBuffer[deq2_StartIndex].cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45349:7]
    connect backend.io.in[1].bits.cf.exceptionVec[0], dataBuffer[deq2_StartIndex].cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45354:7]
    connect backend.io.in[1].bits.cf.exceptionVec[1], dataBuffer[deq2_StartIndex].cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45359:7]
    connect backend.io.in[1].bits.cf.exceptionVec[2], dataBuffer[deq2_StartIndex].cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45364:7]
    connect backend.io.in[1].bits.cf.exceptionVec[3], dataBuffer[deq2_StartIndex].cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45369:7]
    connect backend.io.in[1].bits.cf.exceptionVec[4], dataBuffer[deq2_StartIndex].cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45374:7]
    connect backend.io.in[1].bits.cf.exceptionVec[5], dataBuffer[deq2_StartIndex].cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45379:7]
    connect backend.io.in[1].bits.cf.exceptionVec[6], dataBuffer[deq2_StartIndex].cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45384:7]
    connect backend.io.in[1].bits.cf.exceptionVec[7], dataBuffer[deq2_StartIndex].cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45389:7]
    connect backend.io.in[1].bits.cf.exceptionVec[8], dataBuffer[deq2_StartIndex].cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45394:7]
    connect backend.io.in[1].bits.cf.exceptionVec[9], dataBuffer[deq2_StartIndex].cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45399:7]
    connect backend.io.in[1].bits.cf.exceptionVec[10], dataBuffer[deq2_StartIndex].cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45404:7]
    connect backend.io.in[1].bits.cf.exceptionVec[11], dataBuffer[deq2_StartIndex].cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45409:7]
    connect backend.io.in[1].bits.cf.exceptionVec[12], dataBuffer[deq2_StartIndex].cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45414:7]
    connect backend.io.in[1].bits.cf.exceptionVec[13], dataBuffer[deq2_StartIndex].cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45419:7]
    connect backend.io.in[1].bits.cf.exceptionVec[14], dataBuffer[deq2_StartIndex].cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45424:7]
    connect backend.io.in[1].bits.cf.exceptionVec[15], dataBuffer[deq2_StartIndex].cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45429:7]
    connect backend.io.in[1].bits.cf.redirect.valid, dataBuffer[deq2_StartIndex].cf.redirect.valid @[build/NutShell.fir.opt.mlir 45434:7]
    connect backend.io.in[1].bits.cf.redirect.rtype, dataBuffer[deq2_StartIndex].cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45439:7]
    connect backend.io.in[1].bits.cf.redirect.target, dataBuffer[deq2_StartIndex].cf.redirect.target @[build/NutShell.fir.opt.mlir 45444:7]
    connect backend.io.in[1].bits.cf.pnpc, dataBuffer[deq2_StartIndex].cf.pnpc @[build/NutShell.fir.opt.mlir 45448:7]
    connect backend.io.in[1].bits.cf.pc, dataBuffer[deq2_StartIndex].cf.pc @[build/NutShell.fir.opt.mlir 45452:7]
    connect backend.io.in[1].bits.cf.instr, dataBuffer[deq2_StartIndex].cf.instr @[build/NutShell.fir.opt.mlir 45456:7]
    node _backend_io_in_1_valid_T = neq(ringBufferHead, deq2_StartIndex) @[build/NutShell.fir.opt.mlir 45458:35]
    node _backend_io_in_1_valid_T_1 = and(_backend_io_in_1_valid_T, backend.io.in[0].valid) @[build/NutShell.fir.opt.mlir 45460:37]
    connect backend.io.in[1].valid, _backend_io_in_1_valid_T_1 @[build/NutShell.fir.opt.mlir 45461:7]
    node _dequeueSize_T = and(backend.io.in[0].ready, backend.io.in[0].valid) @[build/NutShell.fir.opt.mlir 45463:25]
    node _dequeueSize_T_1 = and(backend.io.in[1].ready, backend.io.in[1].valid) @[build/NutShell.fir.opt.mlir 45465:27]
    node dequeueSize = add(_dequeueSize_T, _dequeueSize_T_1) @[build/NutShell.fir.opt.mlir 45467:22]
    node dequeueFire = gt(dequeueSize, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45469:22]
    when dequeueFire : @[build/NutShell.fir.opt.mlir 45470:7]
      node _ringBufferTail_T = add(ringBufferTail, dequeueSize) @[build/NutShell.fir.opt.mlir 45472:30]
      node _ringBufferTail_T_1 = tail(_ringBufferTail_T, 1) @[build/NutShell.fir.opt.mlir 45474:32]
      connect ringBufferTail, _ringBufferTail_T_1 @[build/NutShell.fir.opt.mlir 45475:9]
    when _T : @[build/NutShell.fir.opt.mlir 45477:7]
      connect ringBufferHead, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 45480:9]
      connect ringBufferTail, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 45483:9]
    inst LogPerfHelper of LogPerfHelper_20 @[build/NutShell.fir.opt.mlir 45485:99]
    wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 45486:18]
    connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 45491:7]
    connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 45492:7]
    connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 45493:7]
    connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 45494:7]
    node _T_5 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 45496:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 45498:7]
      node _T_6 = add(UInt<3>(4), ringBufferHead) @[build/NutShell.fir.opt.mlir 45500:17]
      node _T_7 = sub(_T_6, ringBufferTail) @[build/NutShell.fir.opt.mlir 45502:17]
      node _T_8 = tail(_T_7, 1) @[build/NutShell.fir.opt.mlir 45504:17]
      node _T_9 = rem(_T_8, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 45506:17]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 45508:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45510:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 45511:9]
        skip @[build/NutShell.fir.opt.mlir 45512:11]
    inst mmioXbar of SimpleBusCrossbarNto1 @[build/NutShell.fir.opt.mlir 45515:56]
    connect mmioXbar.clock, clock @[build/NutShell.fir.opt.mlir 45525:7]
    connect mmioXbar.reset, reset @[build/NutShell.fir.opt.mlir 45526:7]
    inst dmemXbar of SimpleBusCrossbarNto1_1 @[build/NutShell.fir.opt.mlir 45527:56]
    connect dmemXbar.clock, clock @[build/NutShell.fir.opt.mlir 45534:7]
    connect dmemXbar.reset, reset @[build/NutShell.fir.opt.mlir 45535:7]
    node _T_12 = bits(frontend.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 45537:16]
    node _T_13 = or(_T_12, frontend.io.bpFlush) @[build/NutShell.fir.opt.mlir 45539:16]
    inst itlb of EmbeddedTLB @[build/NutShell.fir.opt.mlir 45540:44]
    connect itlb.clock, clock @[build/NutShell.fir.opt.mlir 45548:7]
    connect itlb.reset, reset @[build/NutShell.fir.opt.mlir 45549:7]
    connect frontend.io.imem.req.ready, itlb.io.in.req.ready @[build/NutShell.fir.opt.mlir 45554:7]
    connect itlb.io.in.req.valid, frontend.io.imem.req.valid @[build/NutShell.fir.opt.mlir 45557:7]
    connect itlb.io.in.req.bits, frontend.io.imem.req.bits @[build/NutShell.fir.opt.mlir 45560:7]
    connect itlb.io.in.resp.ready, frontend.io.imem.resp.ready @[build/NutShell.fir.opt.mlir 45565:7]
    connect frontend.io.imem.resp.valid, itlb.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45568:7]
    connect frontend.io.imem.resp.bits, itlb.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45571:7]
    connect itlb.io.mem.req.ready, dmemXbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 45576:7]
    connect dmemXbar.io.in[1].req.valid, itlb.io.mem.req.valid @[build/NutShell.fir.opt.mlir 45579:7]
    connect dmemXbar.io.in[1].req.bits, itlb.io.mem.req.bits @[build/NutShell.fir.opt.mlir 45582:7]
    connect dmemXbar.io.in[1].resp.ready, itlb.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 45587:7]
    connect itlb.io.mem.resp.valid, dmemXbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 45590:7]
    connect itlb.io.mem.resp.bits, dmemXbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 45593:7]
    connect itlb.io.flush, _T_13 @[build/NutShell.fir.opt.mlir 45594:7]
    connect itlb.io.csrMMU.privilegeMode, backend.io.memMMU.imem.privilegeMode @[build/NutShell.fir.opt.mlir 45597:7]
    connect itlb.io.csrMMU.status_sum, backend.io.memMMU.imem.status_sum @[build/NutShell.fir.opt.mlir 45600:7]
    connect itlb.io.csrMMU.status_mxr, backend.io.memMMU.imem.status_mxr @[build/NutShell.fir.opt.mlir 45603:7]
    connect backend.io.memMMU.imem.loadPF, itlb.io.csrMMU.loadPF @[build/NutShell.fir.opt.mlir 45606:7]
    connect backend.io.memMMU.imem.storePF, itlb.io.csrMMU.storePF @[build/NutShell.fir.opt.mlir 45609:7]
    connect backend.io.memMMU.imem.addr, itlb.io.csrMMU.addr @[build/NutShell.fir.opt.mlir 45612:7]
    connect frontend.io.ipf, itlb.io.ipf @[build/NutShell.fir.opt.mlir 45613:7]
    node _io_imem_T = bits(frontend.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 45615:21]
    node _io_imem_T_1 = or(_io_imem_T, frontend.io.bpFlush) @[build/NutShell.fir.opt.mlir 45617:23]
    node _io_imem_T_2 = mux(_io_imem_T_1, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 45620:23]
    inst io_imem_cache of Cache @[build/NutShell.fir.opt.mlir 45621:71]
    connect io_imem_cache.clock, clock @[build/NutShell.fir.opt.mlir 45634:7]
    connect io_imem_cache.reset, reset @[build/NutShell.fir.opt.mlir 45635:7]
    connect io_imem_cache.io.flush, _io_imem_T_2 @[build/NutShell.fir.opt.mlir 45636:7]
    connect itlb.io.out.req.ready, io_imem_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 45641:7]
    connect io_imem_cache.io.in.req.valid, itlb.io.out.req.valid @[build/NutShell.fir.opt.mlir 45644:7]
    connect io_imem_cache.io.in.req.bits, itlb.io.out.req.bits @[build/NutShell.fir.opt.mlir 45647:7]
    connect io_imem_cache.io.in.resp.ready, itlb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 45652:7]
    connect itlb.io.out.resp.valid, io_imem_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45655:7]
    connect itlb.io.out.resp.bits, io_imem_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45658:7]
    connect io_imem_cache.io.mmio.req.ready, mmioXbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 45663:7]
    connect mmioXbar.io.in[0].req.valid, io_imem_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 45666:7]
    connect mmioXbar.io.in[0].req.bits, io_imem_cache.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 45669:7]
    connect mmioXbar.io.in[0].resp.ready, io_imem_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 45674:7]
    connect io_imem_cache.io.mmio.resp.valid, mmioXbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 45677:7]
    connect io_imem_cache.io.mmio.resp.bits, mmioXbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 45680:7]
    connect itlb.io.cacheEmpty, io_imem_cache.io.empty @[build/NutShell.fir.opt.mlir 45681:7]
    connect io.imem.coh.req.ready, io_imem_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 45686:7]
    connect io_imem_cache.io.out.coh.req.valid, io.imem.coh.req.valid @[build/NutShell.fir.opt.mlir 45689:7]
    connect io_imem_cache.io.out.coh.req.bits, io.imem.coh.req.bits @[build/NutShell.fir.opt.mlir 45692:7]
    connect io_imem_cache.io.out.coh.resp.ready, io.imem.coh.resp.ready @[build/NutShell.fir.opt.mlir 45697:7]
    connect io.imem.coh.resp.valid, io_imem_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 45700:7]
    connect io.imem.coh.resp.bits, io_imem_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 45703:7]
    connect io.imem.mem.resp.ready, io_imem_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 45706:7]
    connect io_imem_cache.io.out.mem.resp.valid, io.imem.mem.resp.valid @[build/NutShell.fir.opt.mlir 45709:7]
    connect io_imem_cache.io.out.mem.resp.bits, io.imem.mem.resp.bits @[build/NutShell.fir.opt.mlir 45712:7]
    connect io.imem.mem.req.bits, io_imem_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 45713:7]
    connect io.imem.mem.req.valid, io_imem_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 45714:7]
    connect io_imem_cache.io.out.mem.req.ready, io.imem.mem.req.ready @[build/NutShell.fir.opt.mlir 45715:7]
    inst dtlb of EmbeddedTLB_1 @[build/NutShell.fir.opt.mlir 45716:44]
    connect dtlb.clock, clock @[build/NutShell.fir.opt.mlir 45723:7]
    connect dtlb.reset, reset @[build/NutShell.fir.opt.mlir 45724:7]
    connect backend.io.dmem.req.ready, dtlb.io.in.req.ready @[build/NutShell.fir.opt.mlir 45729:7]
    connect dtlb.io.in.req.valid, backend.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 45732:7]
    connect dtlb.io.in.req.bits, backend.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 45735:7]
    connect dtlb.io.in.resp.ready, backend.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 45740:7]
    connect backend.io.dmem.resp.valid, dtlb.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45743:7]
    connect backend.io.dmem.resp.bits, dtlb.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45746:7]
    connect dtlb.io.mem.req.ready, dmemXbar.io.in[2].req.ready @[build/NutShell.fir.opt.mlir 45751:7]
    connect dmemXbar.io.in[2].req.valid, dtlb.io.mem.req.valid @[build/NutShell.fir.opt.mlir 45754:7]
    connect dmemXbar.io.in[2].req.bits, dtlb.io.mem.req.bits @[build/NutShell.fir.opt.mlir 45757:7]
    connect dmemXbar.io.in[2].resp.ready, dtlb.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 45762:7]
    connect dtlb.io.mem.resp.valid, dmemXbar.io.in[2].resp.valid @[build/NutShell.fir.opt.mlir 45765:7]
    connect dtlb.io.mem.resp.bits, dmemXbar.io.in[2].resp.bits @[build/NutShell.fir.opt.mlir 45768:7]
    connect dtlb.io.flush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 45770:7]
    connect dtlb.io.csrMMU.privilegeMode, backend.io.memMMU.dmem.privilegeMode @[build/NutShell.fir.opt.mlir 45773:7]
    connect dtlb.io.csrMMU.status_sum, backend.io.memMMU.dmem.status_sum @[build/NutShell.fir.opt.mlir 45776:7]
    connect dtlb.io.csrMMU.status_mxr, backend.io.memMMU.dmem.status_mxr @[build/NutShell.fir.opt.mlir 45779:7]
    connect backend.io.memMMU.dmem.loadPF, dtlb.io.csrMMU.loadPF @[build/NutShell.fir.opt.mlir 45782:7]
    connect backend.io.memMMU.dmem.storePF, dtlb.io.csrMMU.storePF @[build/NutShell.fir.opt.mlir 45785:7]
    connect backend.io.memMMU.dmem.addr, dtlb.io.csrMMU.addr @[build/NutShell.fir.opt.mlir 45788:7]
    connect dtlb.io.out.req.ready, dmemXbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 45793:7]
    connect dmemXbar.io.in[0].req.valid, dtlb.io.out.req.valid @[build/NutShell.fir.opt.mlir 45796:7]
    connect dmemXbar.io.in[0].req.bits, dtlb.io.out.req.bits @[build/NutShell.fir.opt.mlir 45799:7]
    connect dmemXbar.io.in[0].resp.ready, dtlb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 45804:7]
    connect dtlb.io.out.resp.valid, dmemXbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 45807:7]
    connect dtlb.io.out.resp.bits, dmemXbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 45810:7]
    inst io_dmem_cache of Cache_1 @[build/NutShell.fir.opt.mlir 45811:71]
    connect io_dmem_cache.clock, clock @[build/NutShell.fir.opt.mlir 45824:7]
    connect io_dmem_cache.reset, reset @[build/NutShell.fir.opt.mlir 45825:7]
    connect io_dmem_cache.io.flush, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 45828:7]
    connect dmemXbar.io.out.req.ready, io_dmem_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 45833:7]
    connect io_dmem_cache.io.in.req.valid, dmemXbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 45836:7]
    connect io_dmem_cache.io.in.req.bits, dmemXbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 45839:7]
    connect io_dmem_cache.io.in.resp.ready, dmemXbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 45844:7]
    connect dmemXbar.io.out.resp.valid, io_dmem_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45847:7]
    connect dmemXbar.io.out.resp.bits, io_dmem_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45850:7]
    connect io_dmem_cache.io.mmio.req.ready, mmioXbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 45855:7]
    connect mmioXbar.io.in[1].req.valid, io_dmem_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 45858:7]
    connect mmioXbar.io.in[1].req.bits, io_dmem_cache.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 45861:7]
    connect mmioXbar.io.in[1].resp.ready, io_dmem_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 45866:7]
    connect io_dmem_cache.io.mmio.resp.valid, mmioXbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 45869:7]
    connect io_dmem_cache.io.mmio.resp.bits, mmioXbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 45872:7]
    connect dtlb.io.cacheEmpty, io_dmem_cache.io.empty @[build/NutShell.fir.opt.mlir 45873:7]
    connect io.dmem.coh.req.ready, io_dmem_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 45878:7]
    connect io_dmem_cache.io.out.coh.req.valid, io.dmem.coh.req.valid @[build/NutShell.fir.opt.mlir 45881:7]
    connect io_dmem_cache.io.out.coh.req.bits, io.dmem.coh.req.bits @[build/NutShell.fir.opt.mlir 45884:7]
    connect io_dmem_cache.io.out.coh.resp.ready, io.dmem.coh.resp.ready @[build/NutShell.fir.opt.mlir 45889:7]
    connect io.dmem.coh.resp.valid, io_dmem_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 45892:7]
    connect io.dmem.coh.resp.bits, io_dmem_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 45895:7]
    connect io.dmem.mem.resp.ready, io_dmem_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 45898:7]
    connect io_dmem_cache.io.out.mem.resp.valid, io.dmem.mem.resp.valid @[build/NutShell.fir.opt.mlir 45901:7]
    connect io_dmem_cache.io.out.mem.resp.bits, io.dmem.mem.resp.bits @[build/NutShell.fir.opt.mlir 45904:7]
    connect io.dmem.mem.req.bits, io_dmem_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 45905:7]
    connect io.dmem.mem.req.valid, io_dmem_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 45906:7]
    connect io_dmem_cache.io.out.mem.req.ready, io.dmem.mem.req.ready @[build/NutShell.fir.opt.mlir 45907:7]
    connect frontend.io.redirect, backend.io.redirect @[build/NutShell.fir.opt.mlir 45908:7]
    node _backend_io_flush_T = bits(frontend.io.flushVec, 3, 2) @[build/NutShell.fir.opt.mlir 45910:30]
    connect backend.io.flush, _backend_io_flush_T @[build/NutShell.fir.opt.mlir 45911:7]
    connect io.frontend.req.ready, dmemXbar.io.in[3].req.ready @[build/NutShell.fir.opt.mlir 45916:7]
    connect dmemXbar.io.in[3].req.valid, io.frontend.req.valid @[build/NutShell.fir.opt.mlir 45919:7]
    connect dmemXbar.io.in[3].req.bits, io.frontend.req.bits @[build/NutShell.fir.opt.mlir 45922:7]
    connect dmemXbar.io.in[3].resp.ready, io.frontend.resp.ready @[build/NutShell.fir.opt.mlir 45927:7]
    connect io.frontend.resp.valid, dmemXbar.io.in[3].resp.valid @[build/NutShell.fir.opt.mlir 45930:7]
    connect io.frontend.resp.bits, dmemXbar.io.in[3].resp.bits @[build/NutShell.fir.opt.mlir 45933:7]
    connect io.mmio.resp.ready, mmioXbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 45936:7]
    connect mmioXbar.io.out.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 45939:7]
    connect mmioXbar.io.out.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 45942:7]
    connect io.mmio.req.bits, mmioXbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 45943:7]
    connect io.mmio.req.valid, mmioXbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 45944:7]
    connect mmioXbar.io.out.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 45945:7]
    node _T_14 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 45947:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 45948:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 45950:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45952:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 45953:9]
        skip @[build/NutShell.fir.opt.mlir 45954:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 45957:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45959:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 45960:9]
        skip @[build/NutShell.fir.opt.mlir 45961:11]

  module CoherenceManager : @[build/NutShell.fir.opt.mlir 45965:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 45965:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 45965:74]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } } @[build/NutShell.fir.opt.mlir 45965:101]

    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46000:16]
    node inflight = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 46002:19]
    node _T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46004:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46007:15]
    node _T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46009:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46011:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 46013:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46015:15]
    node _T_6 = and(io.in.req.valid, _T_5) @[build/NutShell.fir.opt.mlir 46017:15]
    node _T_7 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46019:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46021:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 46023:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46025:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46027:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46029:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 46031:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46033:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 46034:9]
        skip @[build/NutShell.fir.opt.mlir 46035:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 46037:9]
    node _reqLatch_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46040:22]
    node _reqLatch_T_1 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46042:24]
    node _reqLatch_T_2 = eq(_reqLatch_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46044:24]
    node _reqLatch_T_3 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46046:24]
    node _reqLatch_T_4 = eq(_reqLatch_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46048:24]
    node _reqLatch_T_5 = and(_reqLatch_T_2, _reqLatch_T_4) @[build/NutShell.fir.opt.mlir 46050:24]
    node _reqLatch_T_6 = and(_reqLatch_T, _reqLatch_T_5) @[build/NutShell.fir.opt.mlir 46052:24]
    reg reqLatch : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 46053:19]
    when _reqLatch_T_6 : @[build/NutShell.fir.opt.mlir 46054:7]
      connect reqLatch, io.in.req.bits @[build/NutShell.fir.opt.mlir 46055:9]
    connect io.out.coh.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 46057:7]
    connect io.out.coh.req.bits.cmd, UInt<4>(8) @[build/NutShell.fir.opt.mlir 46060:7]
    connect io.out.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46062:7]
    connect io.out.mem.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 46063:7]
    connect io.out.mem.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46065:7]
    connect io.in.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46067:7]
    connect io.out.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46069:7]
    node _T_14 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46071:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 46072:7]
      node _io_out_mem_req_valid_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46074:36]
      node _io_out_mem_req_valid_T_1 = and(io.in.req.valid, _io_out_mem_req_valid_T) @[build/NutShell.fir.opt.mlir 46076:38]
      connect io.out.mem.req.valid, _io_out_mem_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46077:9]
      node _io_in_req_ready_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46079:31]
      node _io_in_req_ready_T_1 = and(io.out.mem.req.ready, _io_in_req_ready_T) @[build/NutShell.fir.opt.mlir 46081:33]
      connect io.in.req.ready, _io_in_req_ready_T_1 @[build/NutShell.fir.opt.mlir 46082:9]
    else :
      node _T_15 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46085:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46087:18]
      node _T_17 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46089:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46091:18]
      node _T_19 = and(_T_16, _T_18) @[build/NutShell.fir.opt.mlir 46093:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 46094:9]
        node _io_out_coh_req_valid_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46096:38]
        node _io_out_coh_req_valid_T_1 = and(io.in.req.valid, _io_out_coh_req_valid_T) @[build/NutShell.fir.opt.mlir 46098:40]
        connect io.out.coh.req.valid, _io_out_coh_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46099:11]
        node _io_in_req_ready_T_2 = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46101:35]
        node _io_in_req_ready_T_3 = and(io.out.coh.req.ready, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 46103:35]
        connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 46104:11]
    connect io.out.mem.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 46109:7]
    connect io.in.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 46112:7]
    connect io.in.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 46115:7]
    node _T_20 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 46117:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 46126:7]
      node _T_21 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 46128:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 46129:9]
        node _T_22 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46131:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46133:20]
        node _T_24 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46135:20]
        node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46137:20]
        node _T_26 = and(_T_23, _T_25) @[build/NutShell.fir.opt.mlir 46139:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 46140:11]
          node _state_T = mux(UInt<1>(1), UInt<3>(1), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 46142:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 46144:13]
        else :
          node _T_27 = eq(io.in.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46147:22]
          when _T_27 : @[build/NutShell.fir.opt.mlir 46148:13]
            connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 46150:15]
    else :
      node _T_28 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 46156:18]
      when _T_28 : @[build/NutShell.fir.opt.mlir 46157:9]
        node _T_29 = and(io.out.coh.resp.ready, io.out.coh.resp.valid) @[build/NutShell.fir.opt.mlir 46159:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 46160:11]
          node _state_T_1 = eq(io.out.coh.resp.bits.cmd, UInt<4>(12)) @[build/NutShell.fir.opt.mlir 46162:27]
          node _state_T_2 = mux(_state_T_1, UInt<3>(2), UInt<3>(3)) @[build/NutShell.fir.opt.mlir 46164:27]
          connect state, _state_T_2 @[build/NutShell.fir.opt.mlir 46165:13]
      else :
        node _T_30 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 46169:20]
        when _T_30 : @[build/NutShell.fir.opt.mlir 46170:11]
          connect io.out.coh.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 46173:13]
          connect io.in.resp.valid, io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 46176:13]
          connect io.in.resp.bits, io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 46179:13]
          node _T_31 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 46181:22]
          node _T_32 = eq(io.in.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46183:22]
          node _T_33 = and(_T_31, _T_32) @[build/NutShell.fir.opt.mlir 46185:22]
          when _T_33 : @[build/NutShell.fir.opt.mlir 46186:13]
            connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46188:15]
        else :
          node _T_34 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 46192:22]
          when _T_34 : @[build/NutShell.fir.opt.mlir 46193:13]
            connect io.out.mem.req.bits, reqLatch @[build/NutShell.fir.opt.mlir 46194:15]
            connect io.out.mem.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46196:15]
            node _T_35 = and(io.out.mem.req.ready, io.out.mem.req.valid) @[build/NutShell.fir.opt.mlir 46198:24]
            when _T_35 : @[build/NutShell.fir.opt.mlir 46199:15]
              connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 46201:17]
          else :
            node _T_36 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 46205:24]
            when _T_36 : @[build/NutShell.fir.opt.mlir 46206:15]
              node _T_37 = and(io.out.mem.resp.ready, io.out.mem.resp.valid) @[build/NutShell.fir.opt.mlir 46208:26]
              node _T_38 = eq(io.out.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46210:26]
              node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 46212:26]
              when _T_39 : @[build/NutShell.fir.opt.mlir 46213:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46215:19]
            else :
              node _T_40 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 46219:26]
              when _T_40 : @[build/NutShell.fir.opt.mlir 46220:17]
                node _T_41 = and(io.out.mem.resp.ready, io.out.mem.resp.valid) @[build/NutShell.fir.opt.mlir 46222:28]
                when _T_41 : @[build/NutShell.fir.opt.mlir 46223:19]
                  connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46225:21]

  module LockingArbiter_2 : @[build/NutShell.fir.opt.mlir 46234:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46234:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46234:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 46234:101]

    wire io_chosen_choice : UInt<1> @[build/NutShell.fir.opt.mlir 46247:27]
    connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46249:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 46250:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 46253:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 46256:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46258:26]
    reg lockIdx : UInt<1>, clock @[build/NutShell.fir.opt.mlir 46259:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46262:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46264:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 46266:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 46268:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 46270:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 46272:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 46274:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 46275:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46277:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46279:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 46281:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 46282:9]
    when locked : @[build/NutShell.fir.opt.mlir 46284:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 46285:9]
    node _T_2 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46288:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46290:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46292:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 46294:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 46295:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46297:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_2) @[build/NutShell.fir.opt.mlir 46299:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 46301:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 46302:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 46303:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46304:9]

  module SimpleBusCrossbarNto1_2 : @[build/NutShell.fir.opt.mlir 46307:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46307:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46307:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[2], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 46307:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46330:16]
    inst inputArb of LockingArbiter_2 @[build/NutShell.fir.opt.mlir 46331:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 46341:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 46342:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 46345:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 46348:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 46351:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 46354:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 46357:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 46360:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46362:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46365:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46367:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46369:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 46371:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46373:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 46375:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46377:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46379:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 46381:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46383:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46385:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46387:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 46389:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46391:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 46392:9]
        skip @[build/NutShell.fir.opt.mlir 46393:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 46395:9]
    regreset inflightSrc : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46397:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 46398:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46400:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 46402:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46403:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46405:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 46407:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 46408:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 46409:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 46410:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46412:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46414:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 46418:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 46422:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 46424:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 46429:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 46431:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 46432:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 46433:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46435:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46437:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46439:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46441:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 46443:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 46444:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 46446:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46449:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46451:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 46453:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 46454:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 46456:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 46462:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 46463:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46465:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46467:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 46469:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 46470:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46472:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 46476:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 46477:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46479:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 46480:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46482:15]

  module AXI42SimpleBusConverter : @[build/NutShell.fir.opt.mlir 46488:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46488:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46488:81]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<18>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<18>, user : UInt<1> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 46488:108]

    regreset inflight_id_reg : UInt<18>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46540:26]
    regreset inflight_type : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46542:24]
    wire default_mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 46543:22]
    connect default_mem.resp.bits.rdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46561:7]
    connect default_mem.resp.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46564:7]
    connect default_mem.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46566:7]
    connect default_mem.resp.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46568:7]
    connect default_mem.req.bits.wdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46570:7]
    connect default_mem.req.bits.wmask, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46573:7]
    connect default_mem.req.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46575:7]
    connect default_mem.req.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46578:7]
    connect default_mem.req.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46581:7]
    connect default_mem.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46583:7]
    connect default_mem.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46585:7]
    wire default_axi : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } @[build/NutShell.fir.opt.mlir 46586:22]
    connect default_axi.r.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46639:7]
    connect default_axi.r.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46641:7]
    connect default_axi.r.bits.last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46643:7]
    connect default_axi.r.bits.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46645:7]
    connect default_axi.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46647:7]
    connect default_axi.r.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46649:7]
    connect default_axi.r.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46651:7]
    connect default_axi.ar.bits.qos, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46653:7]
    connect default_axi.ar.bits.cache, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46655:7]
    connect default_axi.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46657:7]
    connect default_axi.ar.bits.burst, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46659:7]
    connect default_axi.ar.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46661:7]
    connect default_axi.ar.bits.len, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46663:7]
    connect default_axi.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46665:7]
    connect default_axi.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46667:7]
    connect default_axi.ar.bits.prot, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46669:7]
    connect default_axi.ar.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46671:7]
    connect default_axi.ar.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46673:7]
    connect default_axi.ar.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46675:7]
    connect default_axi.b.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46677:7]
    connect default_axi.b.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46679:7]
    connect default_axi.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46681:7]
    connect default_axi.b.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46683:7]
    connect default_axi.b.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46685:7]
    connect default_axi.w.bits.last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46687:7]
    connect default_axi.w.bits.strb, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46689:7]
    connect default_axi.w.bits.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46691:7]
    connect default_axi.w.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46693:7]
    connect default_axi.w.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46695:7]
    connect default_axi.aw.bits.qos, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46697:7]
    connect default_axi.aw.bits.cache, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46699:7]
    connect default_axi.aw.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46701:7]
    connect default_axi.aw.bits.burst, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46703:7]
    connect default_axi.aw.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46705:7]
    connect default_axi.aw.bits.len, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46707:7]
    connect default_axi.aw.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46709:7]
    connect default_axi.aw.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46711:7]
    connect default_axi.aw.bits.prot, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46713:7]
    connect default_axi.aw.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46715:7]
    connect default_axi.aw.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46717:7]
    connect default_axi.aw.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46719:7]
    connect io.out.req.bits, default_mem.req.bits @[build/NutShell.fir.opt.mlir 46720:7]
    connect io.in.r.bits.resp, default_axi.r.bits.resp @[build/NutShell.fir.opt.mlir 46723:7]
    connect io.in.r.bits.data, default_axi.r.bits.data @[build/NutShell.fir.opt.mlir 46726:7]
    connect io.in.r.bits.last, default_axi.r.bits.last @[build/NutShell.fir.opt.mlir 46729:7]
    connect io.in.r.bits.id, pad(default_axi.r.bits.id, 18) @[build/NutShell.fir.opt.mlir 46733:7]
    connect io.in.r.bits.user, default_axi.r.bits.user @[build/NutShell.fir.opt.mlir 46736:7]
    connect io.in.b.bits.resp, default_axi.b.bits.resp @[build/NutShell.fir.opt.mlir 46739:7]
    connect io.in.b.bits.id, pad(default_axi.b.bits.id, 18) @[build/NutShell.fir.opt.mlir 46743:7]
    connect io.in.b.bits.user, default_axi.b.bits.user @[build/NutShell.fir.opt.mlir 46746:7]
    node _T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46748:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46750:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46752:15]
    node _T_3 = and(_T_2, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 46754:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 46758:7]
      connect io.out.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46760:9]
      connect io.out.req.bits.addr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 46761:9]
      node _io_out_req_bits_cmd_T = eq(io.in.ar.bits.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46763:35]
      node _io_out_req_bits_cmd_T_1 = mux(_io_out_req_bits_cmd_T, UInt<1>(0), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46765:37]
      connect io.out.req.bits.cmd, pad(_io_out_req_bits_cmd_T_1, 4) @[build/NutShell.fir.opt.mlir 46767:9]
      connect io.out.req.bits.size, io.in.ar.bits.size @[build/NutShell.fir.opt.mlir 46768:9]
      connect io.out.req.bits.wmask, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 46771:9]
      connect io.out.req.bits.wdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 46774:9]
      node _T_4 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 46776:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 46777:9]
        connect inflight_id_reg, io.in.ar.bits.id @[build/NutShell.fir.opt.mlir 46778:11]
        connect inflight_type, UInt<2>(1) @[build/NutShell.fir.opt.mlir 46780:11]
    node _T_5 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 46784:15]
    node _T_6 = and(_T_5, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46786:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 46788:7]
      connect io.in.r.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46790:9]
      connect io.in.r.bits.data, io.out.resp.bits.rdata @[build/NutShell.fir.opt.mlir 46791:9]
      connect io.in.r.bits.id, inflight_id_reg @[build/NutShell.fir.opt.mlir 46792:9]
      connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46794:9]
      node _io_in_r_bits_last_T = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46796:33]
      connect io.in.r.bits.last, _io_in_r_bits_last_T @[build/NutShell.fir.opt.mlir 46797:9]
      node _T_7 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 46799:17]
      node _T_8 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46801:17]
      node _T_9 = and(_T_7, _T_8) @[build/NutShell.fir.opt.mlir 46803:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 46804:9]
        connect inflight_type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46806:11]
        connect inflight_id_reg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46807:11]
    reg aw_reg : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 46810:17]
    regreset bresp_en : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46814:19]
    node _T_10 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46816:16]
    node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46818:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46820:16]
    node _T_13 = and(_T_12, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 46822:16]
    node _T_14 = eq(io.in.ar.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46824:16]
    node _T_15 = and(_T_13, _T_14) @[build/NutShell.fir.opt.mlir 46826:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 46827:7]
      connect aw_reg, io.in.aw.bits @[build/NutShell.fir.opt.mlir 46828:9]
      node _T_16 = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 46830:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 46831:9]
        connect inflight_id_reg, io.in.aw.bits.id @[build/NutShell.fir.opt.mlir 46832:11]
        connect inflight_type, UInt<2>(2) @[build/NutShell.fir.opt.mlir 46834:11]
    node _T_17 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46838:16]
    node _T_18 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 46840:16]
    node _T_19 = and(_T_17, _T_18) @[build/NutShell.fir.opt.mlir 46842:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 46845:7]
      connect io.out.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46847:9]
      node _io_out_req_bits_cmd_T_2 = eq(aw_reg.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46849:37]
      node _io_out_req_bits_cmd_T_3 = mux(io.in.w.bits.last, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 46851:37]
      node _io_out_req_bits_cmd_T_4 = mux(_io_out_req_bits_cmd_T_2, UInt<1>(1), _io_out_req_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 46853:37]
      connect io.out.req.bits.cmd, pad(_io_out_req_bits_cmd_T_4, 4) @[build/NutShell.fir.opt.mlir 46855:9]
      connect io.out.req.bits.addr, aw_reg.addr @[build/NutShell.fir.opt.mlir 46856:9]
      connect io.out.req.bits.size, aw_reg.size @[build/NutShell.fir.opt.mlir 46857:9]
      connect io.out.req.bits.wmask, io.in.w.bits.strb @[build/NutShell.fir.opt.mlir 46858:9]
      connect io.out.req.bits.wdata, io.in.w.bits.data @[build/NutShell.fir.opt.mlir 46859:9]
      when io.in.w.bits.last : @[build/NutShell.fir.opt.mlir 46860:9]
        connect bresp_en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46862:11]
    node _T_20 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 46866:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 46867:7]
      connect bresp_en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46869:9]
      connect inflight_type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46871:9]
      connect inflight_id_reg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46872:9]
    node _io_out_req_valid_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46875:30]
    node _io_out_req_valid_T_1 = eq(_io_out_req_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46877:32]
    node _io_out_req_valid_T_2 = eq(_io_out_req_valid_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46879:32]
    node _io_out_req_valid_T_3 = and(_io_out_req_valid_T_2, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 46881:32]
    node _io_out_req_valid_T_4 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46883:32]
    node _io_out_req_valid_T_5 = and(_io_out_req_valid_T_4, io.in.w.valid) @[build/NutShell.fir.opt.mlir 46885:32]
    node _io_out_req_valid_T_6 = or(_io_out_req_valid_T_3, _io_out_req_valid_T_5) @[build/NutShell.fir.opt.mlir 46887:32]
    connect io.out.req.valid, _io_out_req_valid_T_6 @[build/NutShell.fir.opt.mlir 46888:7]
    node _io_out_resp_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46890:31]
    node _io_out_resp_ready_T_1 = eq(_io_out_resp_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46892:33]
    node _io_out_resp_ready_T_2 = eq(_io_out_resp_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46894:33]
    node _io_out_resp_ready_T_3 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 46896:33]
    node _io_out_resp_ready_T_4 = and(_io_out_resp_ready_T_3, io.in.r.ready) @[build/NutShell.fir.opt.mlir 46898:33]
    node _io_out_resp_ready_T_5 = or(_io_out_resp_ready_T_2, _io_out_resp_ready_T_4) @[build/NutShell.fir.opt.mlir 46900:33]
    node _io_out_resp_ready_T_6 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46902:33]
    node _io_out_resp_ready_T_7 = and(_io_out_resp_ready_T_6, io.in.b.ready) @[build/NutShell.fir.opt.mlir 46904:33]
    node _io_out_resp_ready_T_8 = or(_io_out_resp_ready_T_5, _io_out_resp_ready_T_7) @[build/NutShell.fir.opt.mlir 46906:33]
    connect io.out.resp.ready, _io_out_resp_ready_T_8 @[build/NutShell.fir.opt.mlir 46907:7]
    node _io_in_ar_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46909:28]
    node _io_in_ar_ready_T_1 = eq(_io_in_ar_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46911:30]
    node _io_in_ar_ready_T_2 = eq(_io_in_ar_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46913:30]
    node _io_in_ar_ready_T_3 = and(_io_in_ar_ready_T_2, io.out.req.ready) @[build/NutShell.fir.opt.mlir 46915:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_3 @[build/NutShell.fir.opt.mlir 46916:7]
    node _io_in_r_valid_T = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 46918:27]
    node _io_in_r_valid_T_1 = and(_io_in_r_valid_T, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46920:29]
    connect io.in.r.valid, _io_in_r_valid_T_1 @[build/NutShell.fir.opt.mlir 46921:7]
    node _io_in_aw_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46923:28]
    node _io_in_aw_ready_T_1 = eq(_io_in_aw_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46925:30]
    node _io_in_aw_ready_T_2 = eq(_io_in_aw_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46927:30]
    node _io_in_aw_ready_T_3 = eq(io.in.ar.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46929:30]
    node _io_in_aw_ready_T_4 = and(_io_in_aw_ready_T_2, _io_in_aw_ready_T_3) @[build/NutShell.fir.opt.mlir 46931:30]
    connect io.in.aw.ready, _io_in_aw_ready_T_4 @[build/NutShell.fir.opt.mlir 46932:7]
    node _io_in_w_ready_T = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46934:27]
    node _io_in_w_ready_T_1 = and(_io_in_w_ready_T, io.out.req.ready) @[build/NutShell.fir.opt.mlir 46936:29]
    connect io.in.w.ready, _io_in_w_ready_T_1 @[build/NutShell.fir.opt.mlir 46937:7]
    node _io_in_b_valid_T = and(bresp_en, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46939:27]
    connect io.in.b.valid, _io_in_b_valid_T @[build/NutShell.fir.opt.mlir 46940:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46942:7]
    node _T_21 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 46944:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 46945:7]
      node _T_22 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 46947:18]
      node _T_23 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46949:18]
      node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46951:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46953:18]
      node _T_26 = and(_T_22, _T_25) @[build/NutShell.fir.opt.mlir 46955:18]
      node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46957:18]
      node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46959:18]
      when _T_28 : @[build/NutShell.fir.opt.mlir 46960:9]
        node _T_29 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46962:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 46963:11]
          skip @[build/NutShell.fir.opt.mlir 46964:13]
        assert(clock, _T_26, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 46966:11]
    node _T_30 = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 46970:16]
    when _T_30 : @[build/NutShell.fir.opt.mlir 46971:7]
      node _T_31 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46973:18]
      node _T_32 = eq(_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46975:18]
      node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46977:18]
      node _T_34 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46979:18]
      node _T_35 = eq(_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46981:18]
      when _T_35 : @[build/NutShell.fir.opt.mlir 46982:9]
        node _T_36 = eq(_T_33, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46984:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 46985:11]
          skip @[build/NutShell.fir.opt.mlir 46986:13]
        assert(clock, _T_33, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 46988:11]
    node _T_37 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 46992:16]
    when _T_37 : @[build/NutShell.fir.opt.mlir 46993:7]
      node _T_38 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 46995:18]
      node _T_39 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46997:18]
      node _T_40 = and(_T_38, _T_39) @[build/NutShell.fir.opt.mlir 46999:18]
      node _T_41 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47001:18]
      node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47003:18]
      when _T_42 : @[build/NutShell.fir.opt.mlir 47004:9]
        node _T_43 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47006:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 47007:11]
          skip @[build/NutShell.fir.opt.mlir 47008:13]
        assert(clock, _T_40, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 47010:11]
    node _T_44 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 47014:16]
    when _T_44 : @[build/NutShell.fir.opt.mlir 47015:7]
      node _T_45 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47017:18]
      node _T_46 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47019:18]
      node _T_47 = and(_T_45, _T_46) @[build/NutShell.fir.opt.mlir 47021:18]
      node _T_48 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47023:18]
      node _T_49 = eq(_T_48, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47025:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 47026:9]
        node _T_50 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47028:20]
        when _T_50 : @[build/NutShell.fir.opt.mlir 47029:11]
          skip @[build/NutShell.fir.opt.mlir 47030:13]
        assert(clock, _T_47, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 47032:11]
    node _T_51 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 47036:16]
    when _T_51 : @[build/NutShell.fir.opt.mlir 47037:7]
      node _T_52 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47039:18]
      node _T_53 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 47041:18]
      node _T_54 = and(_T_52, _T_53) @[build/NutShell.fir.opt.mlir 47043:18]
      node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47045:18]
      node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47047:18]
      when _T_56 : @[build/NutShell.fir.opt.mlir 47048:9]
        node _T_57 = eq(_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47050:20]
        when _T_57 : @[build/NutShell.fir.opt.mlir 47051:11]
          skip @[build/NutShell.fir.opt.mlir 47052:13]
        assert(clock, _T_54, UInt<1>(1), "") : assert_4 @[build/NutShell.fir.opt.mlir 47054:11]

  module SimpleBus2MemPortConverter : @[build/NutShell.fir.opt.mlir 47058:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47058:58]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47058:84]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, data : UInt<32>, fcn : UInt<1>, typ : UInt<3> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<32> } } } } @[build/NutShell.fir.opt.mlir 47058:111]

    connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 47087:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 47088:7]
    connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 47089:7]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 47090:7]
    connect io.out.req.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 47091:7]
    connect io.out.req.bits.data, tail(io.in.req.bits.wdata, 32) @[build/NutShell.fir.opt.mlir 47093:7]
    node _io_out_req_bits_fcn_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 47095:33]
    node _io_out_req_bits_fcn_T_1 = eq(_io_out_req_bits_fcn_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47098:35]
    node _io_out_req_bits_fcn_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 47100:35]
    node _io_out_req_bits_fcn_T_3 = eq(_io_out_req_bits_fcn_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47102:35]
    node _io_out_req_bits_fcn_T_4 = and(_io_out_req_bits_fcn_T_1, _io_out_req_bits_fcn_T_3) @[build/NutShell.fir.opt.mlir 47104:35]
    node _io_out_req_bits_fcn_T_5 = mux(_io_out_req_bits_fcn_T_4, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47107:35]
    connect io.out.req.bits.fcn, _io_out_req_bits_fcn_T_5 @[build/NutShell.fir.opt.mlir 47108:7]
    connect io.out.req.bits.typ, UInt<3>(3) @[build/NutShell.fir.opt.mlir 47111:7]
    connect io.in.resp.bits.rdata, pad(io.out.resp.bits.data, 64) @[build/NutShell.fir.opt.mlir 47113:7]
    connect io.in.resp.bits.cmd, pad(UInt<3>(6), 4) @[build/NutShell.fir.opt.mlir 47117:7]

  extmodule LogPerfHelper_39 : @[build/NutShell.fir.opt.mlir 47119:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47119:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47119:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47119:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47119:141]
    defname = LogPerfHelper

  module Prefetcher : @[build/NutShell.fir.opt.mlir 47120:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47120:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47120:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 47120:95]

    regreset getNewReq : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47132:20]
    reg prefetchReq : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 47133:22]
    connect prefetchReq, io.in.bits @[build/NutShell.fir.opt.mlir 47136:7]
    connect prefetchReq.cmd, pad(UInt<3>(4), 4) @[build/NutShell.fir.opt.mlir 47140:7]
    node _prefetchReq_addr_T = add(io.in.bits.addr, UInt<7>(64)) @[build/NutShell.fir.opt.mlir 47143:30]
    node _prefetchReq_addr_T_1 = tail(_prefetchReq_addr_T, 1) @[build/NutShell.fir.opt.mlir 47145:32]
    connect prefetchReq.addr, _prefetchReq_addr_T_1 @[build/NutShell.fir.opt.mlir 47146:7]
    regreset lastReqAddr : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 47148:22]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47150:13]
    when _T : @[build/NutShell.fir.opt.mlir 47151:7]
      connect lastReqAddr, pad(io.in.bits.addr, 64) @[build/NutShell.fir.opt.mlir 47153:9]
    node _lineMask_T = mux(UInt<1>(1), UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 47159:22]
    node lineMask = cat(_lineMask_T, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 47162:19]
    node _neqAddr_T = and(io.in.bits.addr, lineMask) @[build/NutShell.fir.opt.mlir 47164:21]
    node _neqAddr_T_1 = and(lastReqAddr, lineMask) @[build/NutShell.fir.opt.mlir 47166:23]
    node neqAddr = neq(_neqAddr_T, _neqAddr_T_1) @[build/NutShell.fir.opt.mlir 47168:18]
    node _T_1 = eq(getNewReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47170:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 47173:7]
      connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 47174:9]
      connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 47175:9]
      node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47177:27]
      node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47179:29]
      node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 47181:29]
      connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 47182:9]
      node _getNewReq_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47184:25]
      node _getNewReq_T_1 = bits(io.in.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 47186:27]
      node _getNewReq_T_2 = and(_getNewReq_T, _getNewReq_T_1) @[build/NutShell.fir.opt.mlir 47188:27]
      node _getNewReq_T_3 = and(_getNewReq_T_2, neqAddr) @[build/NutShell.fir.opt.mlir 47190:27]
      connect getNewReq, _getNewReq_T_3 @[build/NutShell.fir.opt.mlir 47191:9]
    else :
      connect io.out.bits, prefetchReq @[build/NutShell.fir.opt.mlir 47193:9]
      node _io_out_valid_T = xor(prefetchReq.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 47195:28]
      node _io_out_valid_T_1 = bits(_io_out_valid_T, 31, 28) @[build/NutShell.fir.opt.mlir 47197:30]
      node _io_out_valid_T_2 = eq(_io_out_valid_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47199:30]
      node _io_out_valid_T_3 = xor(prefetchReq.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 47201:30]
      node _io_out_valid_T_4 = bits(_io_out_valid_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 47203:30]
      node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47205:30]
      node _io_out_valid_T_6 = or(_io_out_valid_T_2, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 47207:30]
      node _io_out_valid_T_7 = eq(_io_out_valid_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47209:30]
      connect io.out.valid, _io_out_valid_T_7 @[build/NutShell.fir.opt.mlir 47210:9]
      connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47212:9]
      node _getNewReq_T_4 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47214:27]
      node _getNewReq_T_5 = xor(prefetchReq.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 47216:27]
      node _getNewReq_T_6 = bits(_getNewReq_T_5, 31, 28) @[build/NutShell.fir.opt.mlir 47218:27]
      node _getNewReq_T_7 = eq(_getNewReq_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47220:27]
      node _getNewReq_T_8 = xor(prefetchReq.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 47222:27]
      node _getNewReq_T_9 = bits(_getNewReq_T_8, 31, 30) @[build/NutShell.fir.opt.mlir 47224:27]
      node _getNewReq_T_10 = eq(_getNewReq_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47226:28]
      node _getNewReq_T_11 = or(_getNewReq_T_7, _getNewReq_T_10) @[build/NutShell.fir.opt.mlir 47228:28]
      node _getNewReq_T_12 = or(_getNewReq_T_4, _getNewReq_T_11) @[build/NutShell.fir.opt.mlir 47230:28]
      node _getNewReq_T_13 = eq(_getNewReq_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47232:28]
      connect getNewReq, _getNewReq_T_13 @[build/NutShell.fir.opt.mlir 47233:9]
    inst LogPerfHelper of LogPerfHelper_39 @[build/NutShell.fir.opt.mlir 47235:99]
    wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47236:18]
    connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47241:7]
    connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47242:7]
    connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47243:7]
    connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47244:7]
    node _T_2 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 47246:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 47247:7]
      regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 47248:14]
      node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47250:17]
      node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 47252:19]
      connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 47253:9]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47255:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47257:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 47258:9]
        skip @[build/NutShell.fir.opt.mlir 47259:11]

  extmodule LogPerfHelper_40 : @[build/NutShell.fir.opt.mlir 47263:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47263:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47263:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47263:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47263:141]
    defname = LogPerfHelper

  module CacheStage1_2 : @[build/NutShell.fir.opt.mlir 47264:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47264:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47264:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 47264:98]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47288:13]
    inst LogPerfHelper of LogPerfHelper_40 @[build/NutShell.fir.opt.mlir 47289:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47290:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47295:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47296:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47297:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47298:7]
    node _T_1 = and(_T, c_control.logEnable) @[build/NutShell.fir.opt.mlir 47300:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 47302:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47304:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47306:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 47307:9]
        skip @[build/NutShell.fir.opt.mlir 47308:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47311:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47313:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 47314:9]
        skip @[build/NutShell.fir.opt.mlir 47315:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 47319:23]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47320:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 47325:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47326:7]
    node _T_6 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 47328:15]
    connect _WIRE.byteOffset, _T_6 @[build/NutShell.fir.opt.mlir 47329:7]
    node _T_7 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 47331:15]
    connect _WIRE.wordIndex, _T_7 @[build/NutShell.fir.opt.mlir 47332:7]
    node _T_8 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 47334:15]
    connect _WIRE.index, _T_8 @[build/NutShell.fir.opt.mlir 47335:7]
    node _T_9 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 47337:15]
    connect _WIRE.tag, _T_9 @[build/NutShell.fir.opt.mlir 47338:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 47339:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 47340:7]
    wire _WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47341:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 47346:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47347:7]
    node _T_10 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 47349:16]
    connect _WIRE_2.byteOffset, _T_10 @[build/NutShell.fir.opt.mlir 47350:7]
    node _T_11 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 47352:16]
    connect _WIRE_2.wordIndex, _T_11 @[build/NutShell.fir.opt.mlir 47353:7]
    node _T_12 = bits(_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 47355:16]
    connect _WIRE_2.index, _T_12 @[build/NutShell.fir.opt.mlir 47356:7]
    node _T_13 = bits(_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 47358:16]
    connect _WIRE_2.tag, _T_13 @[build/NutShell.fir.opt.mlir 47359:7]
    wire _WIRE_4 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47360:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 47365:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47366:7]
    node _T_14 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 47368:16]
    connect _WIRE_4.byteOffset, _T_14 @[build/NutShell.fir.opt.mlir 47369:7]
    node _T_15 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 47371:16]
    connect _WIRE_4.wordIndex, _T_15 @[build/NutShell.fir.opt.mlir 47372:7]
    node _T_16 = bits(_WIRE_5, 14, 6) @[build/NutShell.fir.opt.mlir 47374:16]
    connect _WIRE_4.index, _T_16 @[build/NutShell.fir.opt.mlir 47375:7]
    node _T_17 = bits(_WIRE_5, 31, 15) @[build/NutShell.fir.opt.mlir 47377:16]
    connect _WIRE_4.tag, _T_17 @[build/NutShell.fir.opt.mlir 47378:7]
    node _T_18 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 47380:16]
    connect io.dataReadBus.req.bits.setIdx, _T_18 @[build/NutShell.fir.opt.mlir 47381:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 47382:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 47383:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47385:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47387:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 47388:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47390:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47392:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 47394:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47396:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47398:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 47399:7]
    node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47402:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 47403:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47405:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47407:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 47408:9]
        skip @[build/NutShell.fir.opt.mlir 47409:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47412:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47414:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 47415:9]
        skip @[build/NutShell.fir.opt.mlir 47416:11]

  extmodule LogPerfHelper_41 : @[build/NutShell.fir.opt.mlir 47420:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47420:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47420:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47420:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47420:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_42 : @[build/NutShell.fir.opt.mlir 47421:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47421:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47421:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47421:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47421:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_43 : @[build/NutShell.fir.opt.mlir 47422:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47422:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47422:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47422:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47422:141]
    defname = LogPerfHelper

  module CacheStage2_2 : @[build/NutShell.fir.opt.mlir 47423:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47423:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47423:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 47423:98]

    wire addr : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47458:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 47463:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 47464:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 47466:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 47467:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 47469:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 47470:7]
    node _addr_T_2 = bits(_addr_WIRE, 14, 6) @[build/NutShell.fir.opt.mlir 47472:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 47473:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 15) @[build/NutShell.fir.opt.mlir 47475:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 47476:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 47478:27]
    wire _isForwardMeta_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47479:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 47484:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 47485:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 47487:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 47488:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 47490:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 47491:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 47493:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 47494:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 47496:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 47497:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 47499:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 47501:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47503:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 47505:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 47507:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47510:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47512:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 47514:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 47515:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47517:9]
    reg forwardMetaReg : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 47519:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 47520:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 47521:9]
    wire metaWay : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 47523:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 47537:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 47539:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47543:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47545:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47547:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47549:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 47551:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 47553:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 47554:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 47556:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 47558:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 47559:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 47561:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 47563:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 47564:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 47566:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 47568:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 47569:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47571:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 47573:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 47575:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47577:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 47579:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 47581:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47583:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 47585:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 47587:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47589:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 47591:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 47593:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 47594:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 47599:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 47600:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 47601:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 47602:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 47604:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 47606:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 47608:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 47610:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 47612:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 47614:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 47616:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 47618:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 47620:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 47622:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 47624:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 47625:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47627:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 47629:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 47631:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 47633:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 47634:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 47637:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 47639:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47641:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47643:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47645:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47647:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 47648:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 47653:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 47654:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 47655:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 47656:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 47658:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 47660:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 47662:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 47664:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 47667:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 47670:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47673:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47675:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 47677:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 47679:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 47681:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 47683:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47685:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47687:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47689:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47691:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 47693:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 47695:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 47697:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 47699:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 47701:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 47703:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47705:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 47706:7]
      inst LogPerfHelper of LogPerfHelper_41 @[build/NutShell.fir.opt.mlir 47707:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47708:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47713:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47714:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47715:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47716:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47718:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 47719:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47721:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47723:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 47724:11]
          skip @[build/NutShell.fir.opt.mlir 47725:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47728:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47730:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 47731:11]
          skip @[build/NutShell.fir.opt.mlir 47732:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47736:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 47737:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47739:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47741:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 47742:11]
          skip @[build/NutShell.fir.opt.mlir 47743:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47746:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47748:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 47749:11]
          skip @[build/NutShell.fir.opt.mlir 47750:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47754:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 47755:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47757:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47759:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 47760:11]
          skip @[build/NutShell.fir.opt.mlir 47761:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47764:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47766:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 47767:11]
          skip @[build/NutShell.fir.opt.mlir 47768:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47772:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 47773:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47775:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47777:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 47778:11]
          skip @[build/NutShell.fir.opt.mlir 47779:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47782:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47784:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 47785:11]
          skip @[build/NutShell.fir.opt.mlir 47786:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47790:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 47791:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47793:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47795:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 47796:11]
          skip @[build/NutShell.fir.opt.mlir 47797:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47800:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47802:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 47803:11]
          skip @[build/NutShell.fir.opt.mlir 47804:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47808:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 47809:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47811:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47813:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 47814:11]
          skip @[build/NutShell.fir.opt.mlir 47815:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47818:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47820:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 47821:11]
          skip @[build/NutShell.fir.opt.mlir 47822:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47826:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 47827:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47829:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47831:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 47832:11]
          skip @[build/NutShell.fir.opt.mlir 47833:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47836:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47838:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 47839:11]
          skip @[build/NutShell.fir.opt.mlir 47840:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47844:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 47845:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47847:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47849:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 47850:11]
          skip @[build/NutShell.fir.opt.mlir 47851:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47854:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47856:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 47857:11]
          skip @[build/NutShell.fir.opt.mlir 47858:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47862:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 47863:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47865:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47867:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 47868:11]
          skip @[build/NutShell.fir.opt.mlir 47869:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47872:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47874:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 47875:11]
          skip @[build/NutShell.fir.opt.mlir 47876:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47880:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 47881:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47883:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47885:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 47886:11]
          skip @[build/NutShell.fir.opt.mlir 47887:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47890:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47892:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 47893:11]
          skip @[build/NutShell.fir.opt.mlir 47894:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47899:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47901:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47903:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47905:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 47907:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 47909:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 47911:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 47913:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 47915:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 47917:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47919:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 47920:7]
      inst LogPerfHelper_1 of LogPerfHelper_42 @[build/NutShell.fir.opt.mlir 47921:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47922:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 47927:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 47928:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 47929:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 47930:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 47932:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 47933:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47935:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47937:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 47938:11]
          skip @[build/NutShell.fir.opt.mlir 47939:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47942:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47944:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 47945:11]
          skip @[build/NutShell.fir.opt.mlir 47946:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47951:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47953:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47955:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47957:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 47959:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 47961:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 47963:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 47965:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 47967:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 47969:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47971:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 47973:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47975:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47977:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47979:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 47980:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47982:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 47983:9]
        skip @[build/NutShell.fir.opt.mlir 47984:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 47986:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 47988:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 47990:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 47992:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 47993:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 47994:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 47995:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 47998:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 48000:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48002:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 48005:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 48007:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48009:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 48011:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 48012:7]
    wire _isForwardData_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48013:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48018:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48019:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48021:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 48022:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48024:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 48025:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48027:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 48028:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48030:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 48031:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48032:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 48037:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48038:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 48040:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 48041:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 48043:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 48044:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 48046:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 48047:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 48049:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 48050:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 48052:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 48054:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 48056:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 48058:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48059:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 48060:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48062:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 48065:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48067:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 48069:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 48070:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48072:9]
    reg forwardDataReg : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 48074:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 48075:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 48076:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 48079:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 48080:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 48082:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 48083:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 48084:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 48085:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48087:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48089:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 48091:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 48092:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 48094:16]
    inst LogPerfHelper_2 of LogPerfHelper_43 @[build/NutShell.fir.opt.mlir 48095:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 48096:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 48101:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 48102:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 48103:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 48104:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 48106:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 48107:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48109:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48111:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 48112:9]
        skip @[build/NutShell.fir.opt.mlir 48113:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48116:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48118:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 48119:9]
        skip @[build/NutShell.fir.opt.mlir 48120:11]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48123:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48128:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48129:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48131:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 48132:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48134:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 48135:7]
    node _T_107 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48137:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 48138:7]
    node _T_108 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48140:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 48141:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 48143:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 48144:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48146:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48148:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 48149:9]
        skip @[build/NutShell.fir.opt.mlir 48150:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48153:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48155:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 48156:9]
        skip @[build/NutShell.fir.opt.mlir 48157:11]

  module Arbiter2_SRAMBundleAW_4 : @[build/NutShell.fir.opt.mlir 48161:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48161:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48161:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 48161:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48178:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 48179:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 48181:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48183:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 48184:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48187:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 48189:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 48190:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 48192:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 48193:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48195:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 48197:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 48198:7]

  module Arbiter2_SRAMBundleAW_5 : @[build/NutShell.fir.opt.mlir 48200:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48200:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48200:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 48200:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48217:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 48218:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 48220:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48222:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 48223:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48226:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 48228:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 48229:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 48231:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 48232:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48234:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 48236:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 48237:7]

  extmodule LogPerfHelper_44 : @[build/NutShell.fir.opt.mlir 48239:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 48239:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 48239:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 48239:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 48239:141]
    defname = LogPerfHelper

  module CacheStage3_2 : @[build/NutShell.fir.opt.mlir 48240:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48240:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48240:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 48240:98]

    inst metaWriteArb of Arbiter2_SRAMBundleAW_4 @[build/NutShell.fir.opt.mlir 48343:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 48351:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 48352:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_5 @[build/NutShell.fir.opt.mlir 48353:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 48361:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 48362:7]
    wire addr : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48363:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 48368:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48369:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 48371:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 48372:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 48374:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 48375:7]
    node _addr_T_2 = bits(_addr_WIRE, 14, 6) @[build/NutShell.fir.opt.mlir 48377:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 48378:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 15) @[build/NutShell.fir.opt.mlir 48380:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 48381:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 48383:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 48385:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48388:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 48390:15]
    node _probe_T = and(io.in.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48393:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48396:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 48398:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48401:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 48403:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48405:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48407:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48409:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48411:20]
    wire meta : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 48412:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48417:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48419:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48421:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48423:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 48425:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 48427:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 48429:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 48430:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 48431:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 48432:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48434:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48436:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48438:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48440:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 48442:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 48444:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 48446:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 48447:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 48448:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 48449:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48451:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48453:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48455:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48457:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 48459:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 48461:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 48463:21]
    wire _meta_WIRE_2 : UInt<17> @[build/NutShell.fir.opt.mlir 48464:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 48465:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 48466:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 48468:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48470:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48472:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48474:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 48475:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48477:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 48478:9]
        skip @[build/NutShell.fir.opt.mlir 48479:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 48481:9]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 48484:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 48486:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48488:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48490:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48492:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48494:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48495:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48498:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48500:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48502:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48504:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 48506:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 48508:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 48510:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 48511:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 48512:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 48513:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 48515:19]
    node _wordMask_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48517:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 48519:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 48521:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 48523:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 48525:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 48527:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 48529:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 48531:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 48533:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 48535:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 48537:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48541:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48543:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48545:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48547:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48549:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48551:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48553:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48555:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 48557:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 48559:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 48561:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 48563:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 48565:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 48567:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 48569:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 48572:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48574:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48576:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48579:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48582:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 48584:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 48586:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 48587:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48589:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48591:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 48593:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 48594:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 48597:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 48599:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 48600:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48607:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 48610:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 48612:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 48614:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 48616:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 48617:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48619:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48621:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 48623:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 48625:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 48627:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 48628:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 48629:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 48630:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 48631:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 48632:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48640:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 48642:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48643:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48648:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48649:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48651:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 48652:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48654:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 48655:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48657:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 48658:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48660:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 48661:7]
    wire metaHitWriteBus_x8 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 48662:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 48666:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48668:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48670:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 48671:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 48672:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 48673:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 48674:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 48676:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48677:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 48679:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 48681:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 48682:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48684:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48687:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 48689:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 48690:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48692:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48694:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48695:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 48697:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 48700:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48702:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 48704:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 48706:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 48708:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48710:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 48712:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 48714:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 48715:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 48716:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 48719:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 48720:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 48729:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 48730:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48733:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48735:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48737:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48739:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48740:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48743:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48745:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48747:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48749:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 48751:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 48753:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 48755:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 48756:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 48757:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 48758:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 48760:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 48761:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 48763:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 48764:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 48766:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 48770:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 48771:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 48773:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 48776:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 48777:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 48779:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 48781:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 48783:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 48785:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 48787:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 48788:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 48790:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 48796:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 48798:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 48800:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 48803:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 48806:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48808:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48810:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 48812:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 48814:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 48816:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48818:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 48819:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 48821:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 48824:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 48825:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 48827:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48829:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 48831:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 48833:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48835:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 48837:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 48839:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 48840:7]
    connect io.mmio.req.bits, io.in.bits.req @[build/NutShell.fir.opt.mlir 48841:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48843:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 48846:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 48847:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48848:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48850:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48851:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 48852:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48854:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48857:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 48859:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 48861:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 48864:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 48866:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 48868:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 48871:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 48873:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 48874:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 48875:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 48876:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 48879:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 48881:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48883:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48885:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 48887:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 48889:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 48890:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 48891:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48893:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 48895:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 48897:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48898:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 48899:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48901:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 48902:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48904:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48906:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 48908:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 48909:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 48910:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48913:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48916:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48919:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 48921:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 48922:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 48924:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48926:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 48928:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 48930:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48932:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48934:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 48936:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 48938:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 48940:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 48942:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48943:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 48944:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48946:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 48947:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48949:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48951:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 48953:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 48954:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 48955:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 48958:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 48961:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48963:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48965:9]
      when probe : @[build/NutShell.fir.opt.mlir 48966:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 48968:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 48969:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 48971:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 48972:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 48973:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 48977:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 48978:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 48980:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48982:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48984:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 48986:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 48988:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 48989:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 48992:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48994:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 48996:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 48997:13]
            node _state_T_1 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48999:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 49001:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 49003:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 49005:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 49006:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 49012:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 49013:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 49015:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 49016:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 49018:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 49022:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 49023:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 49025:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 49026:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 49028:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 49032:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 49033:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49035:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 49037:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 49038:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49040:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49042:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 49044:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 49045:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49048:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 49050:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 49052:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 49054:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 49056:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 49057:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 49059:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 49063:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 49064:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49066:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 49067:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 49069:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 49070:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 49074:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 49075:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49077:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 49078:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49080:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49082:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49084:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 49086:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 49087:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 49089:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 49090:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 49093:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49096:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 49097:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 49099:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 49104:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 49105:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49107:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 49108:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49110:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49112:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 49114:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 49115:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49118:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49120:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 49122:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 49123:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 49125:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 49129:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 49130:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49132:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 49133:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 49135:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 49139:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 49140:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49142:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 49144:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 49146:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 49147:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 49149:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 49161:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 49163:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 49165:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 49167:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 49169:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 49170:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49178:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49180:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 49182:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 49184:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 49185:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 49187:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 49188:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 49189:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 49190:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 49191:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 49194:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49197:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49200:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 49203:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49206:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49209:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 49210:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 49211:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 49212:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 49213:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49221:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49223:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 49225:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49227:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 49229:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 49230:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49235:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49237:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 49239:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 49240:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49242:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 49243:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49244:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 49249:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49250:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 49252:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 49253:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 49255:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 49256:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 49258:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 49259:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 49261:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 49262:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 49263:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 49264:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 49265:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 49266:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 49269:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49272:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49275:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 49278:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49281:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49284:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 49285:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 49286:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 49287:7]
    node _T_69 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49289:16]
    node _T_70 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49291:16]
    node _T_71 = and(_T_69, _T_70) @[build/NutShell.fir.opt.mlir 49293:16]
    node _T_72 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49295:16]
    node _T_73 = and(_T_71, _T_72) @[build/NutShell.fir.opt.mlir 49297:16]
    when _T_73 : @[build/NutShell.fir.opt.mlir 49298:7]
      connect io.out.bits.rdata, dataRefill @[build/NutShell.fir.opt.mlir 49299:9]
      node _io_out_bits_cmd_T = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49301:31]
      node _io_out_bits_cmd_T_1 = mux(_io_out_bits_cmd_T, UInt<3>(6), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49303:33]
      connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_1, 4) @[build/NutShell.fir.opt.mlir 49305:9]
    else :
      node _T_74 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49308:18]
      node _T_75 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 49310:18]
      node _T_76 = or(_T_74, _T_75) @[build/NutShell.fir.opt.mlir 49312:18]
      when _T_76 : @[build/NutShell.fir.opt.mlir 49313:9]
        node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 49315:35]
        connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 49316:11]
        invalidate io.out.bits.cmd @[build/NutShell.fir.opt.mlir 49318:11]
      else :
        node _T_77 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49321:20]
        node _T_78 = and(hitReadBurst, _T_77) @[build/NutShell.fir.opt.mlir 49323:20]
        when _T_78 : @[build/NutShell.fir.opt.mlir 49324:11]
          connect io.out.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 49325:13]
          node _io_out_bits_cmd_T_2 = mux(respToL1Last, UInt<3>(6), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49327:37]
          connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_2, 4) @[build/NutShell.fir.opt.mlir 49329:13]
        else :
          node _io_out_bits_rdata_T_1 = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 49332:39]
          connect io.out.bits.rdata, _io_out_bits_rdata_T_1 @[build/NutShell.fir.opt.mlir 49333:13]
          connect io.out.bits.cmd, io.in.bits.req.cmd @[build/NutShell.fir.opt.mlir 49334:13]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 49339:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49341:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49343:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49345:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49347:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 49349:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 49351:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 49353:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49355:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49357:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 49359:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49361:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 49363:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 49365:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 49367:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49369:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 49371:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 49373:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49375:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 49377:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49379:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49381:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 49383:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 49385:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 49387:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 49389:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 49391:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 49393:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 49394:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49396:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49398:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49400:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 49402:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 49404:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 49406:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49408:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 49410:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49412:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49414:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49416:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 49418:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 49420:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 49422:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 49424:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 49425:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49427:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49429:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 49431:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 49433:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49435:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 49437:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49439:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 49441:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 49442:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49444:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 49446:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49448:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49450:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 49452:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 49454:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 49456:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 49457:7]
    node _T_79 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49459:16]
    node _T_80 = eq(_T_79, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49461:16]
    node _T_81 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49463:16]
    node _T_82 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49465:16]
    when _T_82 : @[build/NutShell.fir.opt.mlir 49466:7]
      node _T_83 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49468:18]
      when _T_83 : @[build/NutShell.fir.opt.mlir 49469:9]
        skip @[build/NutShell.fir.opt.mlir 49470:11]
      assert(clock, _T_80, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 49472:9]
    node _T_84 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49475:16]
    node _T_85 = eq(_T_84, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49477:16]
    node _T_86 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49479:16]
    node _T_87 = eq(_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49481:16]
    when _T_87 : @[build/NutShell.fir.opt.mlir 49482:7]
      node _T_88 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49484:18]
      when _T_88 : @[build/NutShell.fir.opt.mlir 49485:9]
        skip @[build/NutShell.fir.opt.mlir 49486:11]
      assert(clock, _T_85, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 49488:9]
    node _T_89 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49491:16]
    node _T_90 = and(_T_89, io.flush) @[build/NutShell.fir.opt.mlir 49493:16]
    node _T_91 = eq(_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49495:16]
    node _T_92 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49497:16]
    node _T_93 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49499:16]
    when _T_93 : @[build/NutShell.fir.opt.mlir 49500:7]
      node _T_94 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49502:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 49503:9]
        skip @[build/NutShell.fir.opt.mlir 49504:11]
      assert(clock, _T_91, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 49506:9]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49508:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 49513:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49514:7]
    node _T_95 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 49516:16]
    connect _WIRE.byteOffset, _T_95 @[build/NutShell.fir.opt.mlir 49517:7]
    node _T_96 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 49519:16]
    connect _WIRE.wordIndex, _T_96 @[build/NutShell.fir.opt.mlir 49520:7]
    node _T_97 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 49522:16]
    connect _WIRE.index, _T_97 @[build/NutShell.fir.opt.mlir 49523:7]
    node _T_98 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 49525:16]
    connect _WIRE.tag, _T_98 @[build/NutShell.fir.opt.mlir 49526:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 49528:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 49530:13]
    node _T_99 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 49532:16]
    inst LogPerfHelper of LogPerfHelper_44 @[build/NutShell.fir.opt.mlir 49533:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 49534:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 49539:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 49540:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 49541:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 49542:7]
    node _T_100 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49544:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 49545:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49547:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49549:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 49550:9]
        skip @[build/NutShell.fir.opt.mlir 49551:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49554:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49556:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 49557:9]
        skip @[build/NutShell.fir.opt.mlir 49558:11]
    node _T_105 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49562:17]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 49563:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49565:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 49567:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 49568:7]
    node _T_106 = and(_T_105, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49570:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 49571:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49573:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49575:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 49576:9]
        skip @[build/NutShell.fir.opt.mlir 49577:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49580:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49582:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 49583:9]
        skip @[build/NutShell.fir.opt.mlir 49584:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49588:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 49589:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49591:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49593:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 49594:9]
        skip @[build/NutShell.fir.opt.mlir 49595:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49598:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49600:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 49601:9]
        skip @[build/NutShell.fir.opt.mlir 49602:11]
    node _T_116 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49606:17]
    when _T_116 : @[build/NutShell.fir.opt.mlir 49607:7]
      node _T_117 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49609:19]
      node _T_118 = eq(_T_117, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49611:19]
      when _T_118 : @[build/NutShell.fir.opt.mlir 49612:9]
        skip @[build/NutShell.fir.opt.mlir 49613:11]
      node _T_119 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49616:19]
      node _T_120 = eq(_T_119, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49618:19]
      when _T_120 : @[build/NutShell.fir.opt.mlir 49619:9]
        skip @[build/NutShell.fir.opt.mlir 49620:11]
    node _T_121 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49624:17]
    when _T_121 : @[build/NutShell.fir.opt.mlir 49625:7]
      node _T_122 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49627:19]
      node _T_123 = eq(_T_122, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49629:19]
      when _T_123 : @[build/NutShell.fir.opt.mlir 49630:9]
        skip @[build/NutShell.fir.opt.mlir 49631:11]
      node _T_124 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49634:19]
      node _T_125 = eq(_T_124, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49636:19]
      when _T_125 : @[build/NutShell.fir.opt.mlir 49637:9]
        skip @[build/NutShell.fir.opt.mlir 49638:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 49642:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 49644:15]
    node _T_126 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 49646:17]
    node _T_127 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49648:17]
    when _T_127 : @[build/NutShell.fir.opt.mlir 49649:7]
      node _T_128 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49651:19]
      node _T_129 = eq(_T_128, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49653:19]
      when _T_129 : @[build/NutShell.fir.opt.mlir 49654:9]
        skip @[build/NutShell.fir.opt.mlir 49655:11]
      node _T_130 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49658:19]
      node _T_131 = eq(_T_130, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49660:19]
      when _T_131 : @[build/NutShell.fir.opt.mlir 49661:9]
        skip @[build/NutShell.fir.opt.mlir 49662:11]
    node _T_132 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49666:17]
    when _T_132 : @[build/NutShell.fir.opt.mlir 49667:7]
      node _T_133 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49669:19]
      node _T_134 = eq(_T_133, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49671:19]
      when _T_134 : @[build/NutShell.fir.opt.mlir 49672:9]
        skip @[build/NutShell.fir.opt.mlir 49673:11]
      node _T_135 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49676:19]
      node _T_136 = eq(_T_135, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49678:19]
      when _T_136 : @[build/NutShell.fir.opt.mlir 49679:9]
        skip @[build/NutShell.fir.opt.mlir 49680:11]
    node _T_137 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49684:17]
    node _T_138 = and(_T_137, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49686:17]
    when _T_138 : @[build/NutShell.fir.opt.mlir 49687:7]
      node _T_139 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49689:19]
      node _T_140 = eq(_T_139, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49691:19]
      when _T_140 : @[build/NutShell.fir.opt.mlir 49692:9]
        skip @[build/NutShell.fir.opt.mlir 49693:11]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49696:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49698:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 49699:9]
        skip @[build/NutShell.fir.opt.mlir 49700:11]
    node _T_143 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 49704:17]
    node _T_144 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49706:17]
    node _T_145 = and(_T_143, _T_144) @[build/NutShell.fir.opt.mlir 49708:17]
    wire _WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49709:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 49714:18]
    connect _WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49715:7]
    node _T_146 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 49717:17]
    connect _WIRE_2.byteOffset, _T_146 @[build/NutShell.fir.opt.mlir 49718:7]
    node _T_147 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 49720:17]
    connect _WIRE_2.wordIndex, _T_147 @[build/NutShell.fir.opt.mlir 49721:7]
    node _T_148 = bits(_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 49723:17]
    connect _WIRE_2.index, _T_148 @[build/NutShell.fir.opt.mlir 49724:7]
    node _T_149 = bits(_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 49726:17]
    connect _WIRE_2.tag, _T_149 @[build/NutShell.fir.opt.mlir 49727:7]
    node _T_150 = and(_T_145, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49729:17]
    when _T_150 : @[build/NutShell.fir.opt.mlir 49730:7]
      node _T_151 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49732:19]
      node _T_152 = eq(_T_151, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49734:19]
      when _T_152 : @[build/NutShell.fir.opt.mlir 49735:9]
        skip @[build/NutShell.fir.opt.mlir 49736:11]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49739:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49741:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 49742:9]
        skip @[build/NutShell.fir.opt.mlir 49743:11]
    node _T_155 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 49747:17]
    node _T_156 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49749:17]
    node _T_157 = and(_T_155, _T_156) @[build/NutShell.fir.opt.mlir 49751:17]
    wire _WIRE_4 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49752:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 49757:18]
    connect _WIRE_5, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49758:7]
    node _T_158 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 49760:17]
    connect _WIRE_4.byteOffset, _T_158 @[build/NutShell.fir.opt.mlir 49761:7]
    node _T_159 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 49763:17]
    connect _WIRE_4.wordIndex, _T_159 @[build/NutShell.fir.opt.mlir 49764:7]
    node _T_160 = bits(_WIRE_5, 14, 6) @[build/NutShell.fir.opt.mlir 49766:17]
    connect _WIRE_4.index, _T_160 @[build/NutShell.fir.opt.mlir 49767:7]
    node _T_161 = bits(_WIRE_5, 31, 15) @[build/NutShell.fir.opt.mlir 49769:17]
    connect _WIRE_4.tag, _T_161 @[build/NutShell.fir.opt.mlir 49770:7]
    node _T_162 = and(_T_157, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49772:17]
    when _T_162 : @[build/NutShell.fir.opt.mlir 49773:7]
      node _T_163 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49775:19]
      node _T_164 = eq(_T_163, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49777:19]
      when _T_164 : @[build/NutShell.fir.opt.mlir 49778:9]
        skip @[build/NutShell.fir.opt.mlir 49779:11]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49782:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49784:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 49785:9]
        skip @[build/NutShell.fir.opt.mlir 49786:11]
    node _T_167 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49790:17]
    node _T_168 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49792:17]
    node _T_169 = and(_T_167, _T_168) @[build/NutShell.fir.opt.mlir 49794:17]
    wire _WIRE_6 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49795:18]
    wire _WIRE_7 : UInt<32> @[build/NutShell.fir.opt.mlir 49800:18]
    connect _WIRE_7, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49801:7]
    node _T_170 = bits(_WIRE_7, 2, 0) @[build/NutShell.fir.opt.mlir 49803:17]
    connect _WIRE_6.byteOffset, _T_170 @[build/NutShell.fir.opt.mlir 49804:7]
    node _T_171 = bits(_WIRE_7, 5, 3) @[build/NutShell.fir.opt.mlir 49806:17]
    connect _WIRE_6.wordIndex, _T_171 @[build/NutShell.fir.opt.mlir 49807:7]
    node _T_172 = bits(_WIRE_7, 14, 6) @[build/NutShell.fir.opt.mlir 49809:17]
    connect _WIRE_6.index, _T_172 @[build/NutShell.fir.opt.mlir 49810:7]
    node _T_173 = bits(_WIRE_7, 31, 15) @[build/NutShell.fir.opt.mlir 49812:17]
    connect _WIRE_6.tag, _T_173 @[build/NutShell.fir.opt.mlir 49813:7]
    node _T_174 = and(_T_169, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49815:17]
    when _T_174 : @[build/NutShell.fir.opt.mlir 49816:7]
      node _T_175 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49818:19]
      node _T_176 = eq(_T_175, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49820:19]
      when _T_176 : @[build/NutShell.fir.opt.mlir 49821:9]
        skip @[build/NutShell.fir.opt.mlir 49822:11]
      node _T_177 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49825:19]
      node _T_178 = eq(_T_177, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49827:19]
      when _T_178 : @[build/NutShell.fir.opt.mlir 49828:9]
        skip @[build/NutShell.fir.opt.mlir 49829:11]

  module SRAMTemplate_5 : @[build/NutShell.fir.opt.mlir 49833:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 49833:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 49833:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 49833:99]

    mem array : @[build/NutShell.fir.opt.mlir 49859:42]
      data-type => UInt<19>[4]
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 49861:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49863:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 49865:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 49867:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 49869:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 49871:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49873:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 49875:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 49889:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49892:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 49893:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49894:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49896:22]
    regreset _resetSet : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 49898:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 49899:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49901:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 49903:7]
      node wrap_wrap = eq(_resetSet, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 49905:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49907:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 49909:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 49910:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 49911:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 49913:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49915:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 49917:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 49918:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 49920:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49922:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 49924:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 49926:17]
    wire _wdataword_WIRE : UInt<19> @[build/NutShell.fir.opt.mlir 49927:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 19) @[build/NutShell.fir.opt.mlir 49930:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 49932:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 49934:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 49936:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49940:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 49942:18]
    wire wdata : UInt<19>[4] @[build/NutShell.fir.opt.mlir 49943:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 49948:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 49949:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 49950:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 49951:7]
    when wen : @[build/NutShell.fir.opt.mlir 49952:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 49954:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 49956:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 49958:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 49960:17]
      node _T_4 = or(setIdx, UInt<9>(0)) @[build/NutShell.fir.opt.mlir 49962:17]
      node _T_5 = bits(_T_4, 8, 0) @[build/NutShell.fir.opt.mlir 49964:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 49965:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49966:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 49967:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 49969:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 49971:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 49973:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 49975:9]
      when _T : @[build/NutShell.fir.opt.mlir 49976:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 49977:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 49978:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 49980:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 49981:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 49982:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 49984:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 49985:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 49986:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 49988:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 49989:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 49990:11]
    wire _rdata_WIRE : UInt<9> @[build/NutShell.fir.opt.mlir 49993:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 49995:7]
    when realRen : @[build/NutShell.fir.opt.mlir 49996:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49997:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 49998:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 49999:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50000:9]
    wire rdata_0 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50002:18]
    wire _rdata_WIRE_1 : UInt<19> @[build/NutShell.fir.opt.mlir 50006:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 50007:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 50009:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 50010:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 50012:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 50013:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 18, 2) @[build/NutShell.fir.opt.mlir 50015:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 50016:7]
    wire rdata_1 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50017:18]
    wire _rdata_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 50021:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 50022:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 50024:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 50025:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 50027:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 50028:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 18, 2) @[build/NutShell.fir.opt.mlir 50030:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 50031:7]
    wire rdata_2 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50032:18]
    wire _rdata_WIRE_3 : UInt<19> @[build/NutShell.fir.opt.mlir 50036:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 50037:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 50039:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 50040:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 50042:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 50043:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 18, 2) @[build/NutShell.fir.opt.mlir 50045:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 50046:7]
    wire rdata_3 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50047:18]
    wire _rdata_WIRE_4 : UInt<19> @[build/NutShell.fir.opt.mlir 50051:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 50052:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 50054:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 50055:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 50057:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 50058:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 18, 2) @[build/NutShell.fir.opt.mlir 50060:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 50061:7]
    wire _WIRE : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 50062:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 50079:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 50080:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 50081:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 50082:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 50083:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 50084:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 50085:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 50086:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 50087:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 50088:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 50089:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 50090:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 50091:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50093:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50095:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 50097:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 50098:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50100:7]

  module Arbiter1_SRAMBundleA_2 : @[build/NutShell.fir.opt.mlir 50102:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50102:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50102:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 50102:107]

    connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50116:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50117:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50120:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50121:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50123:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 50125:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50126:7]

  module SRAMTemplateWithArbiter_4 : @[build/NutShell.fir.opt.mlir 50128:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50128:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50128:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50128:110]

    inst ram of SRAMTemplate_5 @[build/NutShell.fir.opt.mlir 50137:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 50143:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 50144:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 50149:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 50152:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 50155:7]
    inst readArb of Arbiter1_SRAMBundleA_2 @[build/NutShell.fir.opt.mlir 50156:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 50160:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 50161:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 50164:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 50167:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 50170:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 50173:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 50176:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 50179:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 50181:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50182:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 50183:7]
    wire _WIRE : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 50184:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50203:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50205:7]
    connect _WIRE[0].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50208:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50210:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50212:7]
    connect _WIRE[1].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50214:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50216:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50218:7]
    connect _WIRE[2].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50220:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50222:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50224:7]
    connect _WIRE[3].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50226:7]
    regreset r : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 50227:12]
    when REG : @[build/NutShell.fir.opt.mlir 50228:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50229:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 50232:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 50233:7]

  module SRAMTemplate_6 : @[build/NutShell.fir.opt.mlir 50235:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50235:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50235:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50235:99]

    mem array : @[build/NutShell.fir.opt.mlir 50259:42]
      data-type => UInt<64>[4]
      depth => 4096
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 50261:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50263:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 50265:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 50267:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 50269:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 50271:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50273:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 50275:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 50289:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50292:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 50293:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50294:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 50296:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50298:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 50300:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 50302:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 50303:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 50306:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 50308:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 50313:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 50315:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 50316:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 50321:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 50322:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 50323:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 50324:7]
    when wen : @[build/NutShell.fir.opt.mlir 50326:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 50328:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 50330:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 50332:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 50334:17]
      node _T_4 = or(setIdx, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 50336:17]
      node _T_5 = bits(_T_4, 11, 0) @[build/NutShell.fir.opt.mlir 50338:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 50339:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50340:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50341:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50343:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50345:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50347:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50349:9]
      when _T : @[build/NutShell.fir.opt.mlir 50350:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50351:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 50352:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 50354:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50355:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 50356:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 50358:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50359:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 50360:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 50362:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50363:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 50364:11]
    wire _rdata_WIRE : UInt<12> @[build/NutShell.fir.opt.mlir 50367:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 50369:7]
    when realRen : @[build/NutShell.fir.opt.mlir 50370:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50371:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 50372:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 50373:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50374:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50376:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 50378:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 50379:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 50381:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 50382:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50383:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 50385:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 50386:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 50388:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 50389:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50390:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 50392:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 50393:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 50395:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 50396:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50397:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 50399:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 50400:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 50402:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 50403:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50404:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 50413:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 50414:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 50415:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 50416:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 50417:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50419:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50421:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 50423:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 50424:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50426:7]

  module Arbiter2_SRAMBundleA_2 : @[build/NutShell.fir.opt.mlir 50428:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50428:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50428:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 50428:107]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50445:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 50446:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 50448:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50450:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50451:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50454:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50456:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50457:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 50459:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 50460:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50462:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 50464:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50465:7]

  module SRAMTemplateWithArbiter_5 : @[build/NutShell.fir.opt.mlir 50467:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50467:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50467:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50467:110]

    inst ram of SRAMTemplate_6 @[build/NutShell.fir.opt.mlir 50482:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 50488:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 50489:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 50494:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 50497:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 50500:7]
    inst readArb of Arbiter2_SRAMBundleA_2 @[build/NutShell.fir.opt.mlir 50501:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 50506:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 50507:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 50510:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 50513:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 50516:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 50519:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 50522:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 50525:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 50528:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 50531:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 50534:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 50536:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50537:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 50538:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50539:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50550:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50552:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50554:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50556:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 50557:12]
    when REG : @[build/NutShell.fir.opt.mlir 50558:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50559:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 50562:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 50563:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 50565:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50566:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 50567:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50568:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50578:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50580:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50582:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50584:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 50585:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 50586:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50587:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 50590:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 50591:7]

  module Arbiter2_SimpleBusReqBundle_1 : @[build/NutShell.fir.opt.mlir 50593:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50593:61]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50593:87]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 50593:114]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50610:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 50611:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 50613:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50615:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50616:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50619:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50621:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50622:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 50624:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 50625:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50627:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 50629:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50630:7]

  extmodule LogPerfHelper_45 : @[build/NutShell.fir.opt.mlir 50632:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 50632:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 50632:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 50632:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 50632:141]
    defname = LogPerfHelper

  module Cache_2 : @[build/NutShell.fir.opt.mlir 50633:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50633:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50633:65]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 50633:92]

    inst s1 of CacheStage1_2 @[build/NutShell.fir.opt.mlir 50669:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 50706:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 50707:7]
    inst s2 of CacheStage2_2 @[build/NutShell.fir.opt.mlir 50708:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 50769:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 50770:7]
    inst s3 of CacheStage3_2 @[build/NutShell.fir.opt.mlir 50771:38]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 50862:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 50863:7]
    inst metaArray of SRAMTemplateWithArbiter_4 @[build/NutShell.fir.opt.mlir 50864:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 50868:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 50869:7]
    inst dataArray of SRAMTemplateWithArbiter_5 @[build/NutShell.fir.opt.mlir 50870:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 50875:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 50876:7]
    inst arb of Arbiter2_SimpleBusReqBundle_1 @[build/NutShell.fir.opt.mlir 50877:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 50890:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 50891:7]
    connect io.in.req.ready, arb.io.in[1].ready @[build/NutShell.fir.opt.mlir 50894:7]
    connect arb.io.in[1].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 50897:7]
    connect arb.io.in[1].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 50900:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 50903:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 50906:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 50909:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 50911:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 50913:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50915:16]
    when _T : @[build/NutShell.fir.opt.mlir 50916:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50918:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 50921:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 50923:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50925:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 50927:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50929:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 50931:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 50933:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 50934:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 50941:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 50942:9]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 50944:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 50945:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 50946:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 50947:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 50948:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 50949:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 50951:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50952:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 50953:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50955:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 50958:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 50959:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50961:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 50963:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50965:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 50967:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 50969:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 50970:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 51012:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 51013:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 51015:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 51016:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 51017:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 51018:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 51019:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 51020:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 51021:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 51022:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 51023:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 51024:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 51025:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 51026:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 51027:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 51028:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 51029:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 51030:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 51031:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 51032:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 51033:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 51034:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 51035:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 51036:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 51037:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 51038:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 51039:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 51040:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 51041:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 51042:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 51043:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 51044:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 51045:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51046:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 51048:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 51049:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 51052:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 51055:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 51058:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 51059:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 51060:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 51061:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 51064:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 51067:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 51070:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 51071:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 51072:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 51073:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51075:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51077:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 51079:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 51080:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 51083:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 51085:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 51087:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 51089:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 51090:7]
    wire coh : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } @[build/NutShell.fir.opt.mlir 51091:14]
    connect coh.addr, io.out.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 51097:7]
    connect coh.cmd, io.out.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 51098:7]
    connect coh.size, io.out.coh.req.bits.size @[build/NutShell.fir.opt.mlir 51099:7]
    connect coh.wdata, io.out.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 51100:7]
    connect coh.wmask, io.out.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 51101:7]
    connect arb.io.in[0].bits.wdata, coh.wdata @[build/NutShell.fir.opt.mlir 51102:7]
    connect arb.io.in[0].bits.wmask, coh.wmask @[build/NutShell.fir.opt.mlir 51103:7]
    connect arb.io.in[0].bits.cmd, coh.cmd @[build/NutShell.fir.opt.mlir 51104:7]
    connect arb.io.in[0].bits.size, coh.size @[build/NutShell.fir.opt.mlir 51105:7]
    connect arb.io.in[0].bits.addr, coh.addr @[build/NutShell.fir.opt.mlir 51106:7]
    connect arb.io.in[0].valid, io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 51107:7]
    connect io.out.coh.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 51108:7]
    connect io.out.coh.resp.bits, s3.io.cohResp.bits @[build/NutShell.fir.opt.mlir 51109:7]
    connect io.out.coh.resp.valid, s3.io.cohResp.valid @[build/NutShell.fir.opt.mlir 51110:7]
    connect s3.io.cohResp.ready, io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 51111:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 51116:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 51119:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 51122:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 51125:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 51130:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 51133:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 51136:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 51139:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 51144:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 51147:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 51150:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 51153:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 51158:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51161:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 51164:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 51169:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51172:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 51175:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 51176:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 51177:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 51178:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 51179:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 51180:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 51181:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 51182:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 51183:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 51184:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 51185:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 51186:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 51187:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 51188:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 51189:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 51190:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 51191:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 51192:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 51193:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 51194:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51195:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 51196:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 51197:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 51198:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 51199:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 51200:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 51201:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51202:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 51203:7]
    inst LogPerfHelper of LogPerfHelper_45 @[build/NutShell.fir.opt.mlir 51204:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 51205:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 51210:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 51211:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 51212:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 51213:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51215:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 51216:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51218:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51220:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 51221:9]
        skip @[build/NutShell.fir.opt.mlir 51222:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51225:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51227:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 51228:9]
        skip @[build/NutShell.fir.opt.mlir 51229:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51233:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 51234:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51236:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51238:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 51239:9]
        skip @[build/NutShell.fir.opt.mlir 51240:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51243:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51245:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 51246:9]
        skip @[build/NutShell.fir.opt.mlir 51247:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 51250:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51252:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 51253:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51255:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51257:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 51258:11]
          skip @[build/NutShell.fir.opt.mlir 51259:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51262:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51264:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 51265:11]
          skip @[build/NutShell.fir.opt.mlir 51266:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 51270:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51272:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 51273:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51275:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51277:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 51278:11]
          skip @[build/NutShell.fir.opt.mlir 51279:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51282:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51284:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 51285:11]
          skip @[build/NutShell.fir.opt.mlir 51286:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 51290:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51292:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 51293:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51295:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51297:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 51298:11]
          skip @[build/NutShell.fir.opt.mlir 51299:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51302:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51304:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 51305:11]
          skip @[build/NutShell.fir.opt.mlir 51306:13]

  module SimpleBusAddressMapper : @[build/NutShell.fir.opt.mlir 51311:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51311:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51311:80]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 51311:107]

    connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 51318:7]
    connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 51321:7]
    connect io.out.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51324:7]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51329:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 51332:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 51335:7]

  module SimpleBus2AXI4Converter : @[build/NutShell.fir.opt.mlir 51337:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51337:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51337:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 51337:108]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 51400:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 51402:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51405:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51407:21]
    node _T = or(toAXI4Lite, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51410:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51412:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51414:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 51415:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51417:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 51418:9]
        skip @[build/NutShell.fir.opt.mlir 51419:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 51421:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 51423:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 51426:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 51427:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 51428:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 51429:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51431:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 51432:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51434:7]
    connect io.out.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51436:7]
    node _io_out_ar_bits_len_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 51438:32]
    node _io_out_ar_bits_len_T_1 = mux(_io_out_ar_bits_len_T, UInt<3>(7), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51441:34]
    connect io.out.ar.bits.len, pad(_io_out_ar_bits_len_T_1, 8) @[build/NutShell.fir.opt.mlir 51443:7]
    connect io.out.ar.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 51444:7]
    connect io.out.ar.bits.burst, UInt<2>(2) @[build/NutShell.fir.opt.mlir 51447:7]
    connect io.out.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51449:7]
    connect io.out.ar.bits.cache, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 51452:7]
    connect io.out.ar.bits.qos, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 51455:7]
    connect io.out.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51457:7]
    node _io_out_w_bits_last_T = eq(io.in.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 51459:32]
    node _io_out_w_bits_last_T_1 = eq(io.in.req.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51461:34]
    node _io_out_w_bits_last_T_2 = or(_io_out_w_bits_last_T, _io_out_w_bits_last_T_1) @[build/NutShell.fir.opt.mlir 51463:34]
    connect io.out.w.bits.last, _io_out_w_bits_last_T_2 @[build/NutShell.fir.opt.mlir 51464:7]
    connect wlast, io.out.w.bits.last @[build/NutShell.fir.opt.mlir 51465:7]
    connect rlast, io.out.r.bits.last @[build/NutShell.fir.opt.mlir 51466:7]
    connect io.out.aw.bits.qos, io.out.ar.bits.qos @[build/NutShell.fir.opt.mlir 51467:7]
    connect io.out.aw.bits.cache, io.out.ar.bits.cache @[build/NutShell.fir.opt.mlir 51468:7]
    connect io.out.aw.bits.lock, io.out.ar.bits.lock @[build/NutShell.fir.opt.mlir 51469:7]
    connect io.out.aw.bits.burst, io.out.ar.bits.burst @[build/NutShell.fir.opt.mlir 51470:7]
    connect io.out.aw.bits.size, io.out.ar.bits.size @[build/NutShell.fir.opt.mlir 51471:7]
    connect io.out.aw.bits.len, io.out.ar.bits.len @[build/NutShell.fir.opt.mlir 51472:7]
    connect io.out.aw.bits.user, io.out.ar.bits.user @[build/NutShell.fir.opt.mlir 51473:7]
    connect io.out.aw.bits.id, io.out.ar.bits.id @[build/NutShell.fir.opt.mlir 51474:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 51475:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 51476:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 51477:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51480:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 51482:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 51483:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 51485:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51486:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 51487:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51489:9]
    when wSend : @[build/NutShell.fir.opt.mlir 51491:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51493:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 51496:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 51498:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51499:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 51500:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51502:9]
    when wSend : @[build/NutShell.fir.opt.mlir 51504:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51506:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 51509:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 51511:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 51513:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 51515:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 51517:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 51519:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 51520:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51522:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51524:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 51525:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 51526:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 51527:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51530:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51532:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 51534:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51536:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 51538:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 51540:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 51541:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51543:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 51545:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51547:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 51549:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 51550:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51552:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 51554:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51556:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 51558:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 51559:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51561:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51563:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 51565:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 51567:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 51568:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51569:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51570:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 51572:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 51573:7]

  extmodule LogPerfHelper_46 : @[build/NutShell.fir.opt.mlir 51575:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 51575:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 51575:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 51575:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 51575:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_47 : @[build/NutShell.fir.opt.mlir 51576:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 51576:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 51576:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 51576:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 51576:141]
    defname = LogPerfHelper

  module SimpleBusCrossbar1toN : @[build/NutShell.fir.opt.mlir 51577:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51577:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51577:79]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[3] } @[build/NutShell.fir.opt.mlir 51577:106]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51623:16]
    node _outMatchVec_T = geq(io.in.req.bits.addr, UInt<30>(939524096)) @[build/NutShell.fir.opt.mlir 51626:25]
    node _outMatchVec_T_1 = lt(io.in.req.bits.addr, UInt<30>(939589632)) @[build/NutShell.fir.opt.mlir 51629:27]
    node _outMatchVec_T_2 = and(_outMatchVec_T, _outMatchVec_T_1) @[build/NutShell.fir.opt.mlir 51631:27]
    node _outMatchVec_T_3 = geq(io.in.req.bits.addr, UInt<30>(1006632960)) @[build/NutShell.fir.opt.mlir 51634:27]
    node _outMatchVec_T_4 = lt(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 51637:27]
    node _outMatchVec_T_5 = and(_outMatchVec_T_3, _outMatchVec_T_4) @[build/NutShell.fir.opt.mlir 51639:27]
    node _outMatchVec_T_6 = geq(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 51641:27]
    node _outMatchVec_T_7 = lt(io.in.req.bits.addr, UInt<32>(2147483648)) @[build/NutShell.fir.opt.mlir 51644:27]
    node _outMatchVec_T_8 = and(_outMatchVec_T_6, _outMatchVec_T_7) @[build/NutShell.fir.opt.mlir 51646:27]
    wire outMatchVec : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51647:22]
    connect outMatchVec[0], _outMatchVec_T_2 @[build/NutShell.fir.opt.mlir 51651:7]
    connect outMatchVec[1], _outMatchVec_T_5 @[build/NutShell.fir.opt.mlir 51652:7]
    connect outMatchVec[2], _outMatchVec_T_8 @[build/NutShell.fir.opt.mlir 51653:7]
    node _outSelVec_enc_T = mux(outMatchVec[2], UInt<3>(4), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 51657:27]
    node _outSelVec_enc_T_1 = mux(outMatchVec[1], UInt<3>(2), _outSelVec_enc_T) @[build/NutShell.fir.opt.mlir 51660:29]
    node outSelVec_enc = mux(outMatchVec[0], UInt<3>(1), _outSelVec_enc_T_1) @[build/NutShell.fir.opt.mlir 51663:24]
    node _outSelVec_T = bits(outSelVec_enc, 0, 0) @[build/NutShell.fir.opt.mlir 51665:23]
    node _outSelVec_T_1 = bits(outSelVec_enc, 1, 1) @[build/NutShell.fir.opt.mlir 51667:25]
    node _outSelVec_T_2 = bits(outSelVec_enc, 2, 2) @[build/NutShell.fir.opt.mlir 51669:25]
    wire outSelVec : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51670:20]
    connect outSelVec[0], _outSelVec_T @[build/NutShell.fir.opt.mlir 51674:7]
    connect outSelVec[1], _outSelVec_T_1 @[build/NutShell.fir.opt.mlir 51675:7]
    connect outSelVec[2], _outSelVec_T_2 @[build/NutShell.fir.opt.mlir 51676:7]
    wire _outSelRespVec_WIRE : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51677:30]
    connect _outSelRespVec_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51683:7]
    connect _outSelRespVec_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51685:7]
    connect _outSelRespVec_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51687:7]
    node _outSelRespVec_T = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51689:27]
    node _outSelRespVec_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51691:29]
    node _outSelRespVec_T_2 = and(_outSelRespVec_T, _outSelRespVec_T_1) @[build/NutShell.fir.opt.mlir 51693:29]
    regreset outSelRespVec : UInt<1>[3], clock, reset, _outSelRespVec_WIRE @[build/NutShell.fir.opt.mlir 51694:24]
    when _outSelRespVec_T_2 : @[build/NutShell.fir.opt.mlir 51698:7]
      connect outSelRespVec, outSelVec @[build/NutShell.fir.opt.mlir 51699:9]
    node reqInvalidAddr_hi = cat(outSelVec[2], outSelVec[1]) @[build/NutShell.fir.opt.mlir 51702:28]
    node _reqInvalidAddr_T = cat(reqInvalidAddr_hi, outSelVec[0]) @[build/NutShell.fir.opt.mlir 51704:28]
    node _reqInvalidAddr_T_1 = orr(_reqInvalidAddr_T) @[build/NutShell.fir.opt.mlir 51706:30]
    node _reqInvalidAddr_T_2 = eq(_reqInvalidAddr_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51708:30]
    node reqInvalidAddr = and(io.in.req.valid, _reqInvalidAddr_T_2) @[build/NutShell.fir.opt.mlir 51710:25]
    when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 51713:7]
      inst LogPerfHelper of LogPerfHelper_46 @[build/NutShell.fir.opt.mlir 51714:101]
      wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 51715:20]
      connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 51720:9]
      connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 51721:9]
      connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 51722:9]
      connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 51723:9]
      node _T = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 51725:15]
      when _T : @[build/NutShell.fir.opt.mlir 51726:9]
        regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 51727:16]
        node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51729:19]
        node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 51731:21]
        connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 51732:11]
        node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51734:19]
        node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51736:19]
        when _T_2 : @[build/NutShell.fir.opt.mlir 51737:11]
          skip @[build/NutShell.fir.opt.mlir 51738:13]
    node _T_3 = eq(reqInvalidAddr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51743:15]
    node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51745:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51747:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 51748:7]
      node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51750:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 51751:9]
        skip @[build/NutShell.fir.opt.mlir 51752:11]
      assert(clock, _T_3, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 51754:9]
    node _T_7 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 51757:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 51760:7]
      node _T_8 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51762:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 51763:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 51765:11]
      when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 51767:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 51769:11]
    else :
      node _T_9 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 51773:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 51774:9]
        node _T_10 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 51776:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 51777:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51779:13]
      else :
        node _T_11 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 51783:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 51784:11]
          node _T_12 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 51786:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 51787:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51789:15]
    node _io_in_req_ready_T = mux(outSelVec[0], io.out[0].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51795:29]
    node _io_in_req_ready_T_1 = mux(outSelVec[1], io.out[1].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51797:31]
    node _io_in_req_ready_T_2 = mux(outSelVec[2], io.out[2].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51799:31]
    node _io_in_req_ready_T_3 = or(_io_in_req_ready_T, _io_in_req_ready_T_1) @[build/NutShell.fir.opt.mlir 51801:31]
    node _io_in_req_ready_T_4 = or(_io_in_req_ready_T_3, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 51803:31]
    wire _io_in_req_ready_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 51804:32]
    connect _io_in_req_ready_WIRE, _io_in_req_ready_T_4 @[build/NutShell.fir.opt.mlir 51805:7]
    node _io_in_req_ready_T_5 = or(_io_in_req_ready_WIRE, reqInvalidAddr) @[build/NutShell.fir.opt.mlir 51807:31]
    connect io.in.req.ready, _io_in_req_ready_T_5 @[build/NutShell.fir.opt.mlir 51808:7]
    node _io_out_0_req_valid_T = and(outSelVec[0], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51810:32]
    node _io_out_0_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51812:34]
    node _io_out_0_req_valid_T_2 = and(_io_out_0_req_valid_T, _io_out_0_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51814:34]
    connect io.out[0].req.valid, _io_out_0_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51815:7]
    connect io.out[0].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51816:7]
    node _io_out_1_req_valid_T = and(outSelVec[1], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51818:32]
    node _io_out_1_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51820:34]
    node _io_out_1_req_valid_T_2 = and(_io_out_1_req_valid_T, _io_out_1_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51822:34]
    connect io.out[1].req.valid, _io_out_1_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51823:7]
    connect io.out[1].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51824:7]
    node _io_out_2_req_valid_T = and(outSelVec[2], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51826:32]
    node _io_out_2_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51828:34]
    node _io_out_2_req_valid_T_2 = and(_io_out_2_req_valid_T, _io_out_2_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51830:34]
    connect io.out[2].req.valid, _io_out_2_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51831:7]
    connect io.out[2].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51832:7]
    node _io_out_0_resp_ready_T = and(outSelRespVec[0], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51834:33]
    node _io_out_0_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51836:35]
    node _io_out_0_resp_ready_T_2 = and(_io_out_0_resp_ready_T, _io_out_0_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51838:35]
    connect io.out[0].resp.ready, _io_out_0_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51839:7]
    node _io_out_1_resp_ready_T = and(outSelRespVec[1], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51841:33]
    node _io_out_1_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51843:35]
    node _io_out_1_resp_ready_T_2 = and(_io_out_1_resp_ready_T, _io_out_1_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51845:35]
    connect io.out[1].resp.ready, _io_out_1_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51846:7]
    node _io_out_2_resp_ready_T = and(outSelRespVec[2], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51848:33]
    node _io_out_2_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51850:35]
    node _io_out_2_resp_ready_T_2 = and(_io_out_2_resp_ready_T, _io_out_2_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51852:35]
    connect io.out[2].resp.ready, _io_out_2_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51853:7]
    node _io_in_resp_valid_T = mux(outSelRespVec[0], io.out[0].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51855:30]
    node _io_in_resp_valid_T_1 = mux(outSelRespVec[1], io.out[1].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51857:32]
    node _io_in_resp_valid_T_2 = mux(outSelRespVec[2], io.out[2].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51859:32]
    node _io_in_resp_valid_T_3 = or(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/NutShell.fir.opt.mlir 51861:32]
    node _io_in_resp_valid_T_4 = or(_io_in_resp_valid_T_3, _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 51863:32]
    wire _io_in_resp_valid_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 51864:33]
    connect _io_in_resp_valid_WIRE, _io_in_resp_valid_T_4 @[build/NutShell.fir.opt.mlir 51865:7]
    node _io_in_resp_valid_T_5 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 51867:32]
    node _io_in_resp_valid_T_6 = or(_io_in_resp_valid_WIRE, _io_in_resp_valid_T_5) @[build/NutShell.fir.opt.mlir 51869:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_6 @[build/NutShell.fir.opt.mlir 51870:7]
    wire _io_in_resp_bits_WIRE : { cmd : UInt<4>, rdata : UInt<64> } @[build/NutShell.fir.opt.mlir 51871:32]
    node _io_in_resp_bits_T = mux(outSelRespVec[0], io.out[0].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51875:29]
    node _io_in_resp_bits_T_1 = mux(outSelRespVec[1], io.out[1].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51877:31]
    node _io_in_resp_bits_T_2 = mux(outSelRespVec[2], io.out[2].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51879:31]
    node _io_in_resp_bits_T_3 = or(_io_in_resp_bits_T, _io_in_resp_bits_T_1) @[build/NutShell.fir.opt.mlir 51881:31]
    node _io_in_resp_bits_T_4 = or(_io_in_resp_bits_T_3, _io_in_resp_bits_T_2) @[build/NutShell.fir.opt.mlir 51883:31]
    wire _io_in_resp_bits_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 51884:34]
    connect _io_in_resp_bits_WIRE_1, _io_in_resp_bits_T_4 @[build/NutShell.fir.opt.mlir 51885:7]
    connect _io_in_resp_bits_WIRE.rdata, _io_in_resp_bits_WIRE_1 @[build/NutShell.fir.opt.mlir 51886:7]
    node _io_in_resp_bits_T_5 = mux(outSelRespVec[0], io.out[0].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51888:31]
    node _io_in_resp_bits_T_6 = mux(outSelRespVec[1], io.out[1].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51890:31]
    node _io_in_resp_bits_T_7 = mux(outSelRespVec[2], io.out[2].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51892:31]
    node _io_in_resp_bits_T_8 = or(_io_in_resp_bits_T_5, _io_in_resp_bits_T_6) @[build/NutShell.fir.opt.mlir 51894:31]
    node _io_in_resp_bits_T_9 = or(_io_in_resp_bits_T_8, _io_in_resp_bits_T_7) @[build/NutShell.fir.opt.mlir 51896:31]
    wire _io_in_resp_bits_WIRE_2 : UInt<4> @[build/NutShell.fir.opt.mlir 51897:34]
    connect _io_in_resp_bits_WIRE_2, _io_in_resp_bits_T_9 @[build/NutShell.fir.opt.mlir 51898:7]
    connect _io_in_resp_bits_WIRE.cmd, _io_in_resp_bits_WIRE_2 @[build/NutShell.fir.opt.mlir 51899:7]
    connect io.in.resp.bits, _io_in_resp_bits_WIRE @[build/NutShell.fir.opt.mlir 51900:7]
    inst LogPerfHelper_1 of LogPerfHelper_47 @[build/NutShell.fir.opt.mlir 51901:107]
    wire control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 51902:20]
    connect control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 51907:7]
    connect control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 51908:7]
    connect control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 51909:7]
    connect control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 51910:7]
    node _T_13 = and(UInt<1>(1), control_1.logEnable) @[build/NutShell.fir.opt.mlir 51912:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 51913:7]
      node _T_14 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51915:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 51916:9]
        regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 51917:18]
        node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51919:21]
        node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 51921:21]
        connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 51922:11]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51924:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51926:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 51927:11]
          skip @[build/NutShell.fir.opt.mlir 51928:13]
      node _T_17 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 51932:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 51933:9]
        regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 51934:18]
        node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51936:21]
        node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 51938:21]
        connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 51939:11]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51941:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51943:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 51944:11]
          skip @[build/NutShell.fir.opt.mlir 51945:13]

  module AXI4CLINT : @[build/NutShell.fir.opt.mlir 51950:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51950:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51950:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { mtip : UInt<1>, msip : UInt<1> } } @[build/NutShell.fir.opt.mlir 51950:94]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 51983:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 51985:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 51987:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 51989:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 51991:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 51993:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 51995:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 51997:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52001:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52003:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52005:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52007:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52009:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52011:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52013:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52015:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 52017:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 52019:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 52021:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 52023:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 52025:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 52027:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 52029:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 52030:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 52031:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 52032:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52034:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52036:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52039:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52041:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 52042:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52044:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 52046:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52048:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52051:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 52053:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 52054:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52057:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52059:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52060:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 52061:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52063:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52065:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 52067:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 52069:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 52070:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52072:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 52074:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 52076:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52078:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52079:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 52080:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52082:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 52084:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52086:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 52088:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 52089:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 52090:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 52092:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52094:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52095:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 52096:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52098:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 52100:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52102:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52105:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 52106:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 52108:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 52109:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52111:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52113:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52115:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52117:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52118:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 52119:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52121:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 52123:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52125:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 52127:7]
    regreset mtime : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52129:16]
    regreset mtimecmp : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52130:19]
    regreset msip : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52131:15]
    regreset freq_reg : UInt<64>, clock, reset, UInt<64>(10000) @[build/NutShell.fir.opt.mlir 52133:19]
    node freq = bits(freq_reg, 15, 0) @[build/NutShell.fir.opt.mlir 52135:15]
    regreset inc_reg : UInt<64>, clock, reset, UInt<64>(1) @[build/NutShell.fir.opt.mlir 52137:18]
    node inc = bits(inc_reg, 15, 0) @[build/NutShell.fir.opt.mlir 52139:14]
    regreset cnt : UInt<16>, clock, reset, UInt<16>(0) @[build/NutShell.fir.opt.mlir 52141:14]
    node _nextCnt_T = add(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52143:21]
    node nextCnt = tail(_nextCnt_T, 1) @[build/NutShell.fir.opt.mlir 52145:18]
    node _cnt_T = lt(nextCnt, freq) @[build/NutShell.fir.opt.mlir 52147:17]
    node _cnt_T_1 = mux(_cnt_T, nextCnt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52149:19]
    connect cnt, _cnt_T_1 @[build/NutShell.fir.opt.mlir 52150:7]
    node tick = eq(nextCnt, freq) @[build/NutShell.fir.opt.mlir 52152:15]
    when tick : @[build/NutShell.fir.opt.mlir 52153:7]
      node _mtime_T = add(mtime, inc) @[build/NutShell.fir.opt.mlir 52155:21]
      node _mtime_T_1 = tail(_mtime_T, 1) @[build/NutShell.fir.opt.mlir 52157:23]
      connect mtime, _mtime_T_1 @[build/NutShell.fir.opt.mlir 52158:9]
    wire isWFI : UInt<1> @[build/NutShell.fir.opt.mlir 52160:16]
    connect isWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52162:7]
    when isWFI : @[build/NutShell.fir.opt.mlir 52164:7]
      node _mtime_T_2 = add(mtime, UInt<17>(100000)) @[build/NutShell.fir.opt.mlir 52166:23]
      node _mtime_T_3 = tail(_mtime_T_2, 1) @[build/NutShell.fir.opt.mlir 52168:23]
      connect mtime, _mtime_T_3 @[build/NutShell.fir.opt.mlir 52169:9]
    node _T = bits(raddr, 15, 0) @[build/NutShell.fir.opt.mlir 52172:13]
    node _T_1 = bits(waddr, 15, 0) @[build/NutShell.fir.opt.mlir 52174:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52176:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 52178:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 52180:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 52182:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 52184:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 52186:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 52188:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 52190:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 52192:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52194:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52196:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52198:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52200:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52202:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52204:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52206:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52208:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 52210:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 52212:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 52214:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 52216:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 52218:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 52220:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 52222:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 52224:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<16>(32768), _T) @[build/NutShell.fir.opt.mlir 52227:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<16>(49144), _T) @[build/NutShell.fir.opt.mlir 52230:33]
    node _io_in_r_bits_data_T_3 = eq(UInt<16>(32776), _T) @[build/NutShell.fir.opt.mlir 52233:33]
    node _io_in_r_bits_data_T_4 = eq(UInt<15>(16384), _T) @[build/NutShell.fir.opt.mlir 52236:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T, msip, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52238:33]
    node _io_in_r_bits_data_T_6 = mux(_io_in_r_bits_data_T_1, freq_reg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52240:33]
    node _io_in_r_bits_data_T_7 = mux(_io_in_r_bits_data_T_2, mtime, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52242:33]
    node _io_in_r_bits_data_T_8 = mux(_io_in_r_bits_data_T_3, inc_reg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52244:33]
    node _io_in_r_bits_data_T_9 = mux(_io_in_r_bits_data_T_4, mtimecmp, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52246:33]
    node _io_in_r_bits_data_T_10 = or(_io_in_r_bits_data_T_5, _io_in_r_bits_data_T_6) @[build/NutShell.fir.opt.mlir 52248:34]
    node _io_in_r_bits_data_T_11 = or(_io_in_r_bits_data_T_10, _io_in_r_bits_data_T_7) @[build/NutShell.fir.opt.mlir 52250:34]
    node _io_in_r_bits_data_T_12 = or(_io_in_r_bits_data_T_11, _io_in_r_bits_data_T_8) @[build/NutShell.fir.opt.mlir 52252:34]
    node _io_in_r_bits_data_T_13 = or(_io_in_r_bits_data_T_12, _io_in_r_bits_data_T_9) @[build/NutShell.fir.opt.mlir 52254:34]
    wire _io_in_r_bits_data_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 52255:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_13 @[build/NutShell.fir.opt.mlir 52256:7]
    connect io.in.r.bits.data, _io_in_r_bits_data_WIRE @[build/NutShell.fir.opt.mlir 52257:7]
    node _T_20 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52259:16]
    node _T_21 = and(_T_2, _T_20) @[build/NutShell.fir.opt.mlir 52261:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 52262:7]
      node _msip_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52264:20]
      node _msip_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52266:22]
      node _msip_T_2 = and(msip, _msip_T_1) @[build/NutShell.fir.opt.mlir 52268:22]
      node _msip_T_3 = or(_msip_T, _msip_T_2) @[build/NutShell.fir.opt.mlir 52270:22]
      connect msip, _msip_T_3 @[build/NutShell.fir.opt.mlir 52271:9]
    node _T_22 = eq(_T_1, UInt<16>(32768)) @[build/NutShell.fir.opt.mlir 52274:16]
    node _T_23 = and(_T_2, _T_22) @[build/NutShell.fir.opt.mlir 52276:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 52277:7]
      node _freq_reg_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52279:24]
      node _freq_reg_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52281:26]
      node _freq_reg_T_2 = and(freq_reg, _freq_reg_T_1) @[build/NutShell.fir.opt.mlir 52283:26]
      node _freq_reg_T_3 = or(_freq_reg_T, _freq_reg_T_2) @[build/NutShell.fir.opt.mlir 52285:26]
      connect freq_reg, _freq_reg_T_3 @[build/NutShell.fir.opt.mlir 52286:9]
    node _T_24 = eq(_T_1, UInt<16>(49144)) @[build/NutShell.fir.opt.mlir 52289:16]
    node _T_25 = and(_T_2, _T_24) @[build/NutShell.fir.opt.mlir 52291:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 52292:7]
      node _mtime_T_4 = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52294:23]
      node _mtime_T_5 = not(_T_19) @[build/NutShell.fir.opt.mlir 52296:23]
      node _mtime_T_6 = and(mtime, _mtime_T_5) @[build/NutShell.fir.opt.mlir 52298:23]
      node _mtime_T_7 = or(_mtime_T_4, _mtime_T_6) @[build/NutShell.fir.opt.mlir 52300:23]
      connect mtime, _mtime_T_7 @[build/NutShell.fir.opt.mlir 52301:9]
    node _T_26 = eq(_T_1, UInt<16>(32776)) @[build/NutShell.fir.opt.mlir 52304:16]
    node _T_27 = and(_T_2, _T_26) @[build/NutShell.fir.opt.mlir 52306:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 52307:7]
      node _inc_reg_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52309:23]
      node _inc_reg_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52311:25]
      node _inc_reg_T_2 = and(inc_reg, _inc_reg_T_1) @[build/NutShell.fir.opt.mlir 52313:25]
      node _inc_reg_T_3 = or(_inc_reg_T, _inc_reg_T_2) @[build/NutShell.fir.opt.mlir 52315:25]
      connect inc_reg, _inc_reg_T_3 @[build/NutShell.fir.opt.mlir 52316:9]
    node _T_28 = eq(_T_1, UInt<15>(16384)) @[build/NutShell.fir.opt.mlir 52319:16]
    node _T_29 = and(_T_2, _T_28) @[build/NutShell.fir.opt.mlir 52321:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 52322:7]
      node _mtimecmp_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52324:24]
      node _mtimecmp_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52326:26]
      node _mtimecmp_T_2 = and(mtimecmp, _mtimecmp_T_1) @[build/NutShell.fir.opt.mlir 52328:26]
      node _mtimecmp_T_3 = or(_mtimecmp_T, _mtimecmp_T_2) @[build/NutShell.fir.opt.mlir 52330:26]
      connect mtimecmp, _mtimecmp_T_3 @[build/NutShell.fir.opt.mlir 52331:9]
    node _io_extra_mtip_T = geq(mtime, mtimecmp) @[build/NutShell.fir.opt.mlir 52334:27]
    reg io_extra_mtip_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52335:28]
    connect io_extra_mtip_REG, _io_extra_mtip_T @[build/NutShell.fir.opt.mlir 52336:7]
    connect io.extra.mtip, io_extra_mtip_REG @[build/NutShell.fir.opt.mlir 52337:7]
    node _io_extra_msip_T = neq(msip, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52339:27]
    reg io_extra_msip_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52340:28]
    connect io_extra_msip_REG, _io_extra_msip_T @[build/NutShell.fir.opt.mlir 52341:7]
    connect io.extra.msip, io_extra_msip_REG @[build/NutShell.fir.opt.mlir 52342:7]

  module SimpleBus2AXI4Converter_1 : @[build/NutShell.fir.opt.mlir 52344:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 52344:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 52344:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 52344:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 52388:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 52390:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52393:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52396:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52398:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 52400:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52402:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 52403:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52405:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 52406:9]
        skip @[build/NutShell.fir.opt.mlir 52407:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 52409:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 52411:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 52414:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 52415:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 52416:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 52417:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52419:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 52420:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52422:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 52423:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 52424:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 52425:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52428:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 52430:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 52431:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 52433:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52434:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 52435:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52437:9]
    when wSend : @[build/NutShell.fir.opt.mlir 52439:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52441:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 52444:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 52446:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52447:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 52448:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52450:9]
    when wSend : @[build/NutShell.fir.opt.mlir 52452:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52454:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 52457:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 52459:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 52461:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 52463:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 52465:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 52467:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 52468:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52470:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 52472:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52473:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 52474:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 52475:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52478:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52480:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 52482:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52484:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 52486:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 52488:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 52489:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52491:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 52493:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52495:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 52497:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 52498:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52500:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 52502:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52504:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 52506:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 52507:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52509:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52511:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 52513:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 52515:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 52516:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 52517:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 52518:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 52520:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 52521:7]

  module AXI4PLIC : @[build/NutShell.fir.opt.mlir 52523:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 52523:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 52523:66]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { flip intrVec : UInt<1>, meip : UInt<1>[1] } } @[build/NutShell.fir.opt.mlir 52523:93]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 52557:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 52559:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 52561:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 52563:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 52565:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 52567:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 52569:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 52571:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52575:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52577:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52579:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52581:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52583:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52585:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52587:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52589:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 52591:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 52593:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 52595:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 52597:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 52599:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 52601:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 52603:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 52604:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 52605:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 52606:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52608:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52610:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52613:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52615:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 52616:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52618:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 52620:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52622:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52625:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 52627:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 52628:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52631:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52633:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52634:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 52635:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52637:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52639:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 52641:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 52643:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 52644:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52646:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 52648:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 52650:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52652:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52653:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 52654:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52656:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 52658:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52660:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 52662:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 52663:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 52664:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 52666:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52668:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52669:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 52670:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52672:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 52674:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52676:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52679:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 52680:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 52682:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 52683:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52685:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52687:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52689:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52691:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52692:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 52693:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52695:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 52697:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52699:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 52701:7]
    reg priority_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 52702:21]
    wire _pending_WIRE : UInt<1>[32] @[build/NutShell.fir.opt.mlir 52703:24]
    connect _pending_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52737:7]
    connect _pending_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52739:7]
    connect _pending_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52741:7]
    connect _pending_WIRE[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52743:7]
    connect _pending_WIRE[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52745:7]
    connect _pending_WIRE[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52747:7]
    connect _pending_WIRE[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52749:7]
    connect _pending_WIRE[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52751:7]
    connect _pending_WIRE[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52753:7]
    connect _pending_WIRE[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52755:7]
    connect _pending_WIRE[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52757:7]
    connect _pending_WIRE[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52759:7]
    connect _pending_WIRE[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52761:7]
    connect _pending_WIRE[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52763:7]
    connect _pending_WIRE[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52765:7]
    connect _pending_WIRE[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52767:7]
    connect _pending_WIRE[16], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52769:7]
    connect _pending_WIRE[17], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52771:7]
    connect _pending_WIRE[18], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52773:7]
    connect _pending_WIRE[19], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52775:7]
    connect _pending_WIRE[20], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52777:7]
    connect _pending_WIRE[21], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52779:7]
    connect _pending_WIRE[22], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52781:7]
    connect _pending_WIRE[23], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52783:7]
    connect _pending_WIRE[24], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52785:7]
    connect _pending_WIRE[25], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52787:7]
    connect _pending_WIRE[26], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52789:7]
    connect _pending_WIRE[27], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52791:7]
    connect _pending_WIRE[28], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52793:7]
    connect _pending_WIRE[29], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52795:7]
    connect _pending_WIRE[30], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52797:7]
    connect _pending_WIRE[31], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52799:7]
    regreset pending_0 : UInt<1>[32], clock, reset, _pending_WIRE @[build/NutShell.fir.opt.mlir 52800:20]
    node pendingMap_lo_lo_lo_lo = cat(pending_0[1], pending_0[0]) @[build/NutShell.fir.opt.mlir 52834:33]
    node pendingMap_lo_lo_lo_hi = cat(pending_0[3], pending_0[2]) @[build/NutShell.fir.opt.mlir 52836:33]
    node pendingMap_lo_lo_lo = cat(pendingMap_lo_lo_lo_hi, pendingMap_lo_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52838:30]
    node pendingMap_lo_lo_hi_lo = cat(pending_0[5], pending_0[4]) @[build/NutShell.fir.opt.mlir 52840:33]
    node pendingMap_lo_lo_hi_hi = cat(pending_0[7], pending_0[6]) @[build/NutShell.fir.opt.mlir 52842:33]
    node pendingMap_lo_lo_hi = cat(pendingMap_lo_lo_hi_hi, pendingMap_lo_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52844:30]
    node pendingMap_lo_lo = cat(pendingMap_lo_lo_hi, pendingMap_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52846:27]
    node pendingMap_lo_hi_lo_lo = cat(pending_0[9], pending_0[8]) @[build/NutShell.fir.opt.mlir 52848:33]
    node pendingMap_lo_hi_lo_hi = cat(pending_0[11], pending_0[10]) @[build/NutShell.fir.opt.mlir 52850:33]
    node pendingMap_lo_hi_lo = cat(pendingMap_lo_hi_lo_hi, pendingMap_lo_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52852:30]
    node pendingMap_lo_hi_hi_lo = cat(pending_0[13], pending_0[12]) @[build/NutShell.fir.opt.mlir 52854:33]
    node pendingMap_lo_hi_hi_hi = cat(pending_0[15], pending_0[14]) @[build/NutShell.fir.opt.mlir 52856:33]
    node pendingMap_lo_hi_hi = cat(pendingMap_lo_hi_hi_hi, pendingMap_lo_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52858:30]
    node pendingMap_lo_hi = cat(pendingMap_lo_hi_hi, pendingMap_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52860:27]
    node pendingMap_lo = cat(pendingMap_lo_hi, pendingMap_lo_lo) @[build/NutShell.fir.opt.mlir 52862:24]
    node pendingMap_hi_lo_lo_lo = cat(pending_0[17], pending_0[16]) @[build/NutShell.fir.opt.mlir 52864:33]
    node pendingMap_hi_lo_lo_hi = cat(pending_0[19], pending_0[18]) @[build/NutShell.fir.opt.mlir 52866:33]
    node pendingMap_hi_lo_lo = cat(pendingMap_hi_lo_lo_hi, pendingMap_hi_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52868:30]
    node pendingMap_hi_lo_hi_lo = cat(pending_0[21], pending_0[20]) @[build/NutShell.fir.opt.mlir 52870:33]
    node pendingMap_hi_lo_hi_hi = cat(pending_0[23], pending_0[22]) @[build/NutShell.fir.opt.mlir 52872:33]
    node pendingMap_hi_lo_hi = cat(pendingMap_hi_lo_hi_hi, pendingMap_hi_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52874:30]
    node pendingMap_hi_lo = cat(pendingMap_hi_lo_hi, pendingMap_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52876:27]
    node pendingMap_hi_hi_lo_lo = cat(pending_0[25], pending_0[24]) @[build/NutShell.fir.opt.mlir 52878:33]
    node pendingMap_hi_hi_lo_hi = cat(pending_0[27], pending_0[26]) @[build/NutShell.fir.opt.mlir 52880:33]
    node pendingMap_hi_hi_lo = cat(pendingMap_hi_hi_lo_hi, pendingMap_hi_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52882:30]
    node pendingMap_hi_hi_hi_lo = cat(pending_0[29], pending_0[28]) @[build/NutShell.fir.opt.mlir 52884:33]
    node pendingMap_hi_hi_hi_hi = cat(pending_0[31], pending_0[30]) @[build/NutShell.fir.opt.mlir 52886:33]
    node pendingMap_hi_hi_hi = cat(pendingMap_hi_hi_hi_hi, pendingMap_hi_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52888:30]
    node pendingMap_hi_hi = cat(pendingMap_hi_hi_hi, pendingMap_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52890:27]
    node pendingMap_hi = cat(pendingMap_hi_hi, pendingMap_hi_lo) @[build/NutShell.fir.opt.mlir 52892:24]
    node pendingMap_0_2_1 = cat(pendingMap_hi, pendingMap_lo) @[build/NutShell.fir.opt.mlir 52894:27]
    regreset enable_0_0 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 52896:21]
    reg threshold_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 52897:22]
    wire _inHandle_WIRE : UInt<1>[2] @[build/NutShell.fir.opt.mlir 52898:25]
    connect _inHandle_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52902:7]
    connect _inHandle_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52904:7]
    regreset inHandle : UInt<1>[2], clock, reset, _inHandle_WIRE @[build/NutShell.fir.opt.mlir 52905:19]
    reg claimCompletion_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 52907:28]
    node _claimCompletionMap_T = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52909:32]
    node _claimCompletionMap_T_1 = bits(raddr, 25, 0) @[build/NutShell.fir.opt.mlir 52911:34]
    node _claimCompletionMap_T_2 = eq(_claimCompletionMap_T_1, UInt<22>(2097156)) @[build/NutShell.fir.opt.mlir 52914:34]
    node _claimCompletionMap_T_3 = and(_claimCompletionMap_T, _claimCompletionMap_T_2) @[build/NutShell.fir.opt.mlir 52916:34]
    when _claimCompletionMap_T_3 : @[build/NutShell.fir.opt.mlir 52917:7]
      node _claimCompletionMap_T_4 = bits(claimCompletion_0, 0, 0) @[build/NutShell.fir.opt.mlir 52919:36]
      connect inHandle[_claimCompletionMap_T_4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 52922:9]
    node _T = bits(io.extra.intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 52925:13]
    when _T : @[build/NutShell.fir.opt.mlir 52926:7]
      connect pending_0[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 52928:9]
    when inHandle[1] : @[build/NutShell.fir.opt.mlir 52930:7]
      connect pending_0[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52932:9]
    node pendingVec_lo_lo_lo_lo = cat(pending_0[1], pending_0[0]) @[build/NutShell.fir.opt.mlir 52935:33]
    node pendingVec_lo_lo_lo_hi = cat(pending_0[3], pending_0[2]) @[build/NutShell.fir.opt.mlir 52937:33]
    node pendingVec_lo_lo_lo = cat(pendingVec_lo_lo_lo_hi, pendingVec_lo_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52939:30]
    node pendingVec_lo_lo_hi_lo = cat(pending_0[5], pending_0[4]) @[build/NutShell.fir.opt.mlir 52941:33]
    node pendingVec_lo_lo_hi_hi = cat(pending_0[7], pending_0[6]) @[build/NutShell.fir.opt.mlir 52943:33]
    node pendingVec_lo_lo_hi = cat(pendingVec_lo_lo_hi_hi, pendingVec_lo_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52945:30]
    node pendingVec_lo_lo = cat(pendingVec_lo_lo_hi, pendingVec_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52947:27]
    node pendingVec_lo_hi_lo_lo = cat(pending_0[9], pending_0[8]) @[build/NutShell.fir.opt.mlir 52949:33]
    node pendingVec_lo_hi_lo_hi = cat(pending_0[11], pending_0[10]) @[build/NutShell.fir.opt.mlir 52951:33]
    node pendingVec_lo_hi_lo = cat(pendingVec_lo_hi_lo_hi, pendingVec_lo_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52953:30]
    node pendingVec_lo_hi_hi_lo = cat(pending_0[13], pending_0[12]) @[build/NutShell.fir.opt.mlir 52955:33]
    node pendingVec_lo_hi_hi_hi = cat(pending_0[15], pending_0[14]) @[build/NutShell.fir.opt.mlir 52957:33]
    node pendingVec_lo_hi_hi = cat(pendingVec_lo_hi_hi_hi, pendingVec_lo_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52959:30]
    node pendingVec_lo_hi = cat(pendingVec_lo_hi_hi, pendingVec_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52961:27]
    node pendingVec_lo = cat(pendingVec_lo_hi, pendingVec_lo_lo) @[build/NutShell.fir.opt.mlir 52963:24]
    node pendingVec_hi_lo_lo_lo = cat(pending_0[17], pending_0[16]) @[build/NutShell.fir.opt.mlir 52965:33]
    node pendingVec_hi_lo_lo_hi = cat(pending_0[19], pending_0[18]) @[build/NutShell.fir.opt.mlir 52967:33]
    node pendingVec_hi_lo_lo = cat(pendingVec_hi_lo_lo_hi, pendingVec_hi_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52969:30]
    node pendingVec_hi_lo_hi_lo = cat(pending_0[21], pending_0[20]) @[build/NutShell.fir.opt.mlir 52971:33]
    node pendingVec_hi_lo_hi_hi = cat(pending_0[23], pending_0[22]) @[build/NutShell.fir.opt.mlir 52973:33]
    node pendingVec_hi_lo_hi = cat(pendingVec_hi_lo_hi_hi, pendingVec_hi_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52975:30]
    node pendingVec_hi_lo = cat(pendingVec_hi_lo_hi, pendingVec_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52977:27]
    node pendingVec_hi_hi_lo_lo = cat(pending_0[25], pending_0[24]) @[build/NutShell.fir.opt.mlir 52979:33]
    node pendingVec_hi_hi_lo_hi = cat(pending_0[27], pending_0[26]) @[build/NutShell.fir.opt.mlir 52981:33]
    node pendingVec_hi_hi_lo = cat(pendingVec_hi_hi_lo_hi, pendingVec_hi_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52983:30]
    node pendingVec_hi_hi_hi_lo = cat(pending_0[29], pending_0[28]) @[build/NutShell.fir.opt.mlir 52985:33]
    node pendingVec_hi_hi_hi_hi = cat(pending_0[31], pending_0[30]) @[build/NutShell.fir.opt.mlir 52987:33]
    node pendingVec_hi_hi_hi = cat(pendingVec_hi_hi_hi_hi, pendingVec_hi_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52989:30]
    node pendingVec_hi_hi = cat(pendingVec_hi_hi_hi, pendingVec_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52991:27]
    node pendingVec_hi = cat(pendingVec_hi_hi, pendingVec_hi_lo) @[build/NutShell.fir.opt.mlir 52993:24]
    node pendingVec = cat(pendingVec_hi, pendingVec_lo) @[build/NutShell.fir.opt.mlir 52995:21]
    node takenVec = and(pendingVec, enable_0_0) @[build/NutShell.fir.opt.mlir 52997:19]
    node _claimCompletion_0_T = eq(takenVec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52999:31]
    node _claimCompletion_0_T_1 = bits(takenVec, 0, 0) @[build/NutShell.fir.opt.mlir 53001:33]
    node _claimCompletion_0_T_2 = bits(takenVec, 1, 1) @[build/NutShell.fir.opt.mlir 53003:33]
    node _claimCompletion_0_T_3 = bits(takenVec, 2, 2) @[build/NutShell.fir.opt.mlir 53005:33]
    node _claimCompletion_0_T_4 = bits(takenVec, 3, 3) @[build/NutShell.fir.opt.mlir 53007:33]
    node _claimCompletion_0_T_5 = bits(takenVec, 4, 4) @[build/NutShell.fir.opt.mlir 53009:33]
    node _claimCompletion_0_T_6 = bits(takenVec, 5, 5) @[build/NutShell.fir.opt.mlir 53011:33]
    node _claimCompletion_0_T_7 = bits(takenVec, 6, 6) @[build/NutShell.fir.opt.mlir 53013:33]
    node _claimCompletion_0_T_8 = bits(takenVec, 7, 7) @[build/NutShell.fir.opt.mlir 53015:33]
    node _claimCompletion_0_T_9 = bits(takenVec, 8, 8) @[build/NutShell.fir.opt.mlir 53017:33]
    node _claimCompletion_0_T_10 = bits(takenVec, 9, 9) @[build/NutShell.fir.opt.mlir 53019:34]
    node _claimCompletion_0_T_11 = bits(takenVec, 10, 10) @[build/NutShell.fir.opt.mlir 53021:34]
    node _claimCompletion_0_T_12 = bits(takenVec, 11, 11) @[build/NutShell.fir.opt.mlir 53023:34]
    node _claimCompletion_0_T_13 = bits(takenVec, 12, 12) @[build/NutShell.fir.opt.mlir 53025:34]
    node _claimCompletion_0_T_14 = bits(takenVec, 13, 13) @[build/NutShell.fir.opt.mlir 53027:34]
    node _claimCompletion_0_T_15 = bits(takenVec, 14, 14) @[build/NutShell.fir.opt.mlir 53029:34]
    node _claimCompletion_0_T_16 = bits(takenVec, 15, 15) @[build/NutShell.fir.opt.mlir 53031:34]
    node _claimCompletion_0_T_17 = bits(takenVec, 16, 16) @[build/NutShell.fir.opt.mlir 53033:34]
    node _claimCompletion_0_T_18 = bits(takenVec, 17, 17) @[build/NutShell.fir.opt.mlir 53035:34]
    node _claimCompletion_0_T_19 = bits(takenVec, 18, 18) @[build/NutShell.fir.opt.mlir 53037:34]
    node _claimCompletion_0_T_20 = bits(takenVec, 19, 19) @[build/NutShell.fir.opt.mlir 53039:34]
    node _claimCompletion_0_T_21 = bits(takenVec, 20, 20) @[build/NutShell.fir.opt.mlir 53041:34]
    node _claimCompletion_0_T_22 = bits(takenVec, 21, 21) @[build/NutShell.fir.opt.mlir 53043:34]
    node _claimCompletion_0_T_23 = bits(takenVec, 22, 22) @[build/NutShell.fir.opt.mlir 53045:34]
    node _claimCompletion_0_T_24 = bits(takenVec, 23, 23) @[build/NutShell.fir.opt.mlir 53047:34]
    node _claimCompletion_0_T_25 = bits(takenVec, 24, 24) @[build/NutShell.fir.opt.mlir 53049:34]
    node _claimCompletion_0_T_26 = bits(takenVec, 25, 25) @[build/NutShell.fir.opt.mlir 53051:34]
    node _claimCompletion_0_T_27 = bits(takenVec, 26, 26) @[build/NutShell.fir.opt.mlir 53053:34]
    node _claimCompletion_0_T_28 = bits(takenVec, 27, 27) @[build/NutShell.fir.opt.mlir 53055:34]
    node _claimCompletion_0_T_29 = bits(takenVec, 28, 28) @[build/NutShell.fir.opt.mlir 53057:34]
    node _claimCompletion_0_T_30 = bits(takenVec, 29, 29) @[build/NutShell.fir.opt.mlir 53059:34]
    node _claimCompletion_0_T_31 = bits(takenVec, 30, 30) @[build/NutShell.fir.opt.mlir 53061:34]
    node _claimCompletion_0_T_32 = bits(takenVec, 31, 31) @[build/NutShell.fir.opt.mlir 53063:34]
    node _claimCompletion_0_T_33 = mux(_claimCompletion_0_T_31, UInt<5>(30), UInt<5>(31)) @[build/NutShell.fir.opt.mlir 53067:34]
    node _claimCompletion_0_T_34 = mux(_claimCompletion_0_T_30, UInt<5>(29), _claimCompletion_0_T_33) @[build/NutShell.fir.opt.mlir 53070:34]
    node _claimCompletion_0_T_35 = mux(_claimCompletion_0_T_29, UInt<5>(28), _claimCompletion_0_T_34) @[build/NutShell.fir.opt.mlir 53073:34]
    node _claimCompletion_0_T_36 = mux(_claimCompletion_0_T_28, UInt<5>(27), _claimCompletion_0_T_35) @[build/NutShell.fir.opt.mlir 53076:34]
    node _claimCompletion_0_T_37 = mux(_claimCompletion_0_T_27, UInt<5>(26), _claimCompletion_0_T_36) @[build/NutShell.fir.opt.mlir 53079:34]
    node _claimCompletion_0_T_38 = mux(_claimCompletion_0_T_26, UInt<5>(25), _claimCompletion_0_T_37) @[build/NutShell.fir.opt.mlir 53082:34]
    node _claimCompletion_0_T_39 = mux(_claimCompletion_0_T_25, UInt<5>(24), _claimCompletion_0_T_38) @[build/NutShell.fir.opt.mlir 53085:34]
    node _claimCompletion_0_T_40 = mux(_claimCompletion_0_T_24, UInt<5>(23), _claimCompletion_0_T_39) @[build/NutShell.fir.opt.mlir 53088:34]
    node _claimCompletion_0_T_41 = mux(_claimCompletion_0_T_23, UInt<5>(22), _claimCompletion_0_T_40) @[build/NutShell.fir.opt.mlir 53091:34]
    node _claimCompletion_0_T_42 = mux(_claimCompletion_0_T_22, UInt<5>(21), _claimCompletion_0_T_41) @[build/NutShell.fir.opt.mlir 53094:34]
    node _claimCompletion_0_T_43 = mux(_claimCompletion_0_T_21, UInt<5>(20), _claimCompletion_0_T_42) @[build/NutShell.fir.opt.mlir 53097:34]
    node _claimCompletion_0_T_44 = mux(_claimCompletion_0_T_20, UInt<5>(19), _claimCompletion_0_T_43) @[build/NutShell.fir.opt.mlir 53100:34]
    node _claimCompletion_0_T_45 = mux(_claimCompletion_0_T_19, UInt<5>(18), _claimCompletion_0_T_44) @[build/NutShell.fir.opt.mlir 53103:34]
    node _claimCompletion_0_T_46 = mux(_claimCompletion_0_T_18, UInt<5>(17), _claimCompletion_0_T_45) @[build/NutShell.fir.opt.mlir 53106:34]
    node _claimCompletion_0_T_47 = mux(_claimCompletion_0_T_17, UInt<5>(16), _claimCompletion_0_T_46) @[build/NutShell.fir.opt.mlir 53109:34]
    node _claimCompletion_0_T_48 = mux(_claimCompletion_0_T_16, UInt<4>(15), _claimCompletion_0_T_47) @[build/NutShell.fir.opt.mlir 53112:34]
    node _claimCompletion_0_T_49 = mux(_claimCompletion_0_T_15, UInt<4>(14), _claimCompletion_0_T_48) @[build/NutShell.fir.opt.mlir 53115:34]
    node _claimCompletion_0_T_50 = mux(_claimCompletion_0_T_14, UInt<4>(13), _claimCompletion_0_T_49) @[build/NutShell.fir.opt.mlir 53118:34]
    node _claimCompletion_0_T_51 = mux(_claimCompletion_0_T_13, UInt<4>(12), _claimCompletion_0_T_50) @[build/NutShell.fir.opt.mlir 53121:34]
    node _claimCompletion_0_T_52 = mux(_claimCompletion_0_T_12, UInt<4>(11), _claimCompletion_0_T_51) @[build/NutShell.fir.opt.mlir 53124:34]
    node _claimCompletion_0_T_53 = mux(_claimCompletion_0_T_11, UInt<4>(10), _claimCompletion_0_T_52) @[build/NutShell.fir.opt.mlir 53127:34]
    node _claimCompletion_0_T_54 = mux(_claimCompletion_0_T_10, UInt<4>(9), _claimCompletion_0_T_53) @[build/NutShell.fir.opt.mlir 53130:34]
    node _claimCompletion_0_T_55 = mux(_claimCompletion_0_T_9, UInt<4>(8), _claimCompletion_0_T_54) @[build/NutShell.fir.opt.mlir 53133:34]
    node _claimCompletion_0_T_56 = mux(_claimCompletion_0_T_8, UInt<3>(7), _claimCompletion_0_T_55) @[build/NutShell.fir.opt.mlir 53136:34]
    node _claimCompletion_0_T_57 = mux(_claimCompletion_0_T_7, UInt<3>(6), _claimCompletion_0_T_56) @[build/NutShell.fir.opt.mlir 53139:34]
    node _claimCompletion_0_T_58 = mux(_claimCompletion_0_T_6, UInt<3>(5), _claimCompletion_0_T_57) @[build/NutShell.fir.opt.mlir 53142:34]
    node _claimCompletion_0_T_59 = mux(_claimCompletion_0_T_5, UInt<3>(4), _claimCompletion_0_T_58) @[build/NutShell.fir.opt.mlir 53145:34]
    node _claimCompletion_0_T_60 = mux(_claimCompletion_0_T_4, UInt<2>(3), _claimCompletion_0_T_59) @[build/NutShell.fir.opt.mlir 53148:34]
    node _claimCompletion_0_T_61 = mux(_claimCompletion_0_T_3, UInt<2>(2), _claimCompletion_0_T_60) @[build/NutShell.fir.opt.mlir 53151:34]
    node _claimCompletion_0_T_62 = mux(_claimCompletion_0_T_2, UInt<1>(1), _claimCompletion_0_T_61) @[build/NutShell.fir.opt.mlir 53153:34]
    node _claimCompletion_0_T_63 = mux(_claimCompletion_0_T_1, UInt<1>(0), _claimCompletion_0_T_62) @[build/NutShell.fir.opt.mlir 53155:34]
    node _claimCompletion_0_T_64 = mux(_claimCompletion_0_T, UInt<1>(0), _claimCompletion_0_T_63) @[build/NutShell.fir.opt.mlir 53157:34]
    connect claimCompletion_0, pad(_claimCompletion_0_T_64, 32) @[build/NutShell.fir.opt.mlir 53159:7]
    wire rdata : UInt<32> @[build/NutShell.fir.opt.mlir 53160:16]
    node _T_1 = bits(raddr, 25, 0) @[build/NutShell.fir.opt.mlir 53162:15]
    node _T_2 = bits(waddr, 25, 0) @[build/NutShell.fir.opt.mlir 53164:15]
    node _T_3 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 53166:15]
    node _T_4 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 53168:15]
    node _T_5 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 53170:15]
    node _T_6 = dshr(io.in.w.bits.strb, _T_5) @[build/NutShell.fir.opt.mlir 53172:15]
    node _T_7 = bits(_T_6, 0, 0) @[build/NutShell.fir.opt.mlir 53174:15]
    node _T_8 = bits(_T_6, 1, 1) @[build/NutShell.fir.opt.mlir 53176:15]
    node _T_9 = bits(_T_6, 2, 2) @[build/NutShell.fir.opt.mlir 53178:15]
    node _T_10 = bits(_T_6, 3, 3) @[build/NutShell.fir.opt.mlir 53180:16]
    node _T_11 = bits(_T_6, 4, 4) @[build/NutShell.fir.opt.mlir 53182:16]
    node _T_12 = bits(_T_6, 5, 5) @[build/NutShell.fir.opt.mlir 53184:16]
    node _T_13 = bits(_T_6, 6, 6) @[build/NutShell.fir.opt.mlir 53186:16]
    node _T_14 = bits(_T_6, 7, 7) @[build/NutShell.fir.opt.mlir 53188:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53190:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53192:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53194:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53196:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53198:16]
    node _T_20 = mux(_T_12, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53200:16]
    node _T_21 = mux(_T_13, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53202:16]
    node _T_22 = mux(_T_14, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53204:16]
    node lo_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 53206:16]
    node lo_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 53208:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 53210:13]
    node hi_lo = cat(_T_20, _T_19) @[build/NutShell.fir.opt.mlir 53212:16]
    node hi_hi = cat(_T_22, _T_21) @[build/NutShell.fir.opt.mlir 53214:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 53216:13]
    node _T_23 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 53218:16]
    node _T_24 = bits(_T_23, 31, 0) @[build/NutShell.fir.opt.mlir 53220:16]
    node _rdata_T = eq(UInt<13>(4096), _T_1) @[build/NutShell.fir.opt.mlir 53223:19]
    node _rdata_T_1 = eq(UInt<14>(8192), _T_1) @[build/NutShell.fir.opt.mlir 53226:21]
    node _rdata_T_2 = eq(UInt<22>(2097156), _T_1) @[build/NutShell.fir.opt.mlir 53228:21]
    node _rdata_T_3 = eq(UInt<3>(4), _T_1) @[build/NutShell.fir.opt.mlir 53230:21]
    node _rdata_T_4 = eq(UInt<22>(2097152), _T_1) @[build/NutShell.fir.opt.mlir 53233:21]
    node _rdata_T_5 = mux(_rdata_T, pendingMap_0_2_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53235:21]
    node _rdata_T_6 = mux(_rdata_T_1, enable_0_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53237:21]
    node _rdata_T_7 = mux(_rdata_T_2, claimCompletion_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53239:21]
    node _rdata_T_8 = mux(_rdata_T_3, priority_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53241:21]
    node _rdata_T_9 = mux(_rdata_T_4, threshold_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53243:21]
    node _rdata_T_10 = or(_rdata_T_5, _rdata_T_6) @[build/NutShell.fir.opt.mlir 53245:22]
    node _rdata_T_11 = or(_rdata_T_10, _rdata_T_7) @[build/NutShell.fir.opt.mlir 53247:22]
    node _rdata_T_12 = or(_rdata_T_11, _rdata_T_8) @[build/NutShell.fir.opt.mlir 53249:22]
    node _rdata_T_13 = or(_rdata_T_12, _rdata_T_9) @[build/NutShell.fir.opt.mlir 53251:22]
    wire _rdata_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 53252:22]
    connect _rdata_WIRE, _rdata_T_13 @[build/NutShell.fir.opt.mlir 53253:7]
    connect rdata, _rdata_WIRE @[build/NutShell.fir.opt.mlir 53254:7]
    node _T_25 = eq(_T_2, UInt<14>(8192)) @[build/NutShell.fir.opt.mlir 53256:16]
    node _T_26 = and(_T_3, _T_25) @[build/NutShell.fir.opt.mlir 53258:16]
    when _T_26 : @[build/NutShell.fir.opt.mlir 53259:7]
      node _enable_0_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53261:26]
      node _enable_0_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53263:28]
      node _enable_0_0_T_2 = and(enable_0_0, _enable_0_0_T_1) @[build/NutShell.fir.opt.mlir 53265:28]
      node _enable_0_0_T_3 = or(_enable_0_0_T, _enable_0_0_T_2) @[build/NutShell.fir.opt.mlir 53267:28]
      connect enable_0_0, _enable_0_0_T_3 @[build/NutShell.fir.opt.mlir 53268:9]
    node _T_27 = eq(_T_2, UInt<22>(2097156)) @[build/NutShell.fir.opt.mlir 53271:16]
    node _T_28 = and(_T_3, _T_27) @[build/NutShell.fir.opt.mlir 53273:16]
    when _T_28 : @[build/NutShell.fir.opt.mlir 53274:7]
      node _claimCompletion_0_T_65 = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53276:36]
      node _claimCompletion_0_T_66 = not(_T_24) @[build/NutShell.fir.opt.mlir 53278:36]
      node _claimCompletion_0_T_67 = and(claimCompletion_0, _claimCompletion_0_T_66) @[build/NutShell.fir.opt.mlir 53280:36]
      node _claimCompletion_0_T_68 = or(_claimCompletion_0_T_65, _claimCompletion_0_T_67) @[build/NutShell.fir.opt.mlir 53282:36]
      node _claimCompletion_0_T_69 = bits(_claimCompletion_0_T_68, 31, 0) @[build/NutShell.fir.opt.mlir 53284:36]
      node _claimCompletion_0_T_70 = bits(_claimCompletion_0_T_69, 0, 0) @[build/NutShell.fir.opt.mlir 53286:36]
      connect inHandle[_claimCompletion_0_T_70], UInt<1>(0) @[build/NutShell.fir.opt.mlir 53289:9]
      connect claimCompletion_0, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 53292:9]
    node _T_29 = eq(_T_2, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 53295:16]
    node _T_30 = and(_T_3, _T_29) @[build/NutShell.fir.opt.mlir 53297:16]
    when _T_30 : @[build/NutShell.fir.opt.mlir 53298:7]
      node _priority_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53300:26]
      node _priority_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53302:28]
      node _priority_0_T_2 = and(priority_0, _priority_0_T_1) @[build/NutShell.fir.opt.mlir 53304:28]
      node _priority_0_T_3 = or(_priority_0_T, _priority_0_T_2) @[build/NutShell.fir.opt.mlir 53306:28]
      connect priority_0, _priority_0_T_3 @[build/NutShell.fir.opt.mlir 53307:9]
    node _T_31 = eq(_T_2, UInt<22>(2097152)) @[build/NutShell.fir.opt.mlir 53310:16]
    node _T_32 = and(_T_3, _T_31) @[build/NutShell.fir.opt.mlir 53312:16]
    when _T_32 : @[build/NutShell.fir.opt.mlir 53313:7]
      node _threshold_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53315:27]
      node _threshold_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53317:29]
      node _threshold_0_T_2 = and(threshold_0, _threshold_0_T_1) @[build/NutShell.fir.opt.mlir 53319:29]
      node _threshold_0_T_3 = or(_threshold_0_T, _threshold_0_T_2) @[build/NutShell.fir.opt.mlir 53321:29]
      connect threshold_0, _threshold_0_T_3 @[build/NutShell.fir.opt.mlir 53322:9]
    node _io_in_r_bits_data_T = cat(rdata, rdata) @[build/NutShell.fir.opt.mlir 53325:31]
    connect io.in.r.bits.data, _io_in_r_bits_data_T @[build/NutShell.fir.opt.mlir 53326:7]
    node _io_extra_meip_0_T = neq(claimCompletion_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53328:29]
    connect io.extra.meip[0], _io_extra_meip_0_T @[build/NutShell.fir.opt.mlir 53329:7]

  module SimpleBus2AXI4Converter_2 : @[build/NutShell.fir.opt.mlir 53331:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 53331:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 53331:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 53331:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 53375:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 53377:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53380:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 53383:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53385:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 53387:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53389:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 53390:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53392:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 53393:9]
        skip @[build/NutShell.fir.opt.mlir 53394:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 53396:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 53398:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 53401:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 53402:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 53403:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 53404:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53406:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 53407:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53409:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 53410:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 53411:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 53412:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53415:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 53417:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 53418:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 53420:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53421:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 53422:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53424:9]
    when wSend : @[build/NutShell.fir.opt.mlir 53426:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53428:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 53431:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 53433:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53434:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 53435:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53437:9]
    when wSend : @[build/NutShell.fir.opt.mlir 53439:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53441:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 53444:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 53446:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 53448:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 53450:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 53452:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 53454:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 53455:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53457:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 53459:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 53460:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 53461:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 53462:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53465:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53467:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 53469:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53471:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 53473:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 53475:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 53476:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53478:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 53480:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53482:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 53484:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 53485:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53487:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 53489:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53491:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 53493:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 53494:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53496:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53498:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 53500:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 53502:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 53503:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 53504:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 53505:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 53507:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 53508:7]

  module NutShell : @[build/NutShell.fir.opt.mlir 53510:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 53510:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 53510:66]
    output io : { mem : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip frontend : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, flip meip : UInt<1> } @[build/NutShell.fir.opt.mlir 53510:93]

    inst nutcore of NutCore @[build/NutShell.fir.opt.mlir 53534:53]
    connect nutcore.clock, clock @[build/NutShell.fir.opt.mlir 53553:7]
    connect nutcore.reset, reset @[build/NutShell.fir.opt.mlir 53554:7]
    inst cohMg of CoherenceManager @[build/NutShell.fir.opt.mlir 53555:47]
    connect cohMg.clock, clock @[build/NutShell.fir.opt.mlir 53560:7]
    connect cohMg.reset, reset @[build/NutShell.fir.opt.mlir 53561:7]
    inst xbar of SimpleBusCrossbarNto1_2 @[build/NutShell.fir.opt.mlir 53562:44]
    connect xbar.clock, clock @[build/NutShell.fir.opt.mlir 53569:7]
    connect xbar.reset, reset @[build/NutShell.fir.opt.mlir 53570:7]
    connect nutcore.io.imem.mem.req.ready, cohMg.io.in.req.ready @[build/NutShell.fir.opt.mlir 53575:7]
    connect cohMg.io.in.req.valid, nutcore.io.imem.mem.req.valid @[build/NutShell.fir.opt.mlir 53578:7]
    connect cohMg.io.in.req.bits, nutcore.io.imem.mem.req.bits @[build/NutShell.fir.opt.mlir 53581:7]
    connect cohMg.io.in.resp.ready, nutcore.io.imem.mem.resp.ready @[build/NutShell.fir.opt.mlir 53586:7]
    connect nutcore.io.imem.mem.resp.valid, cohMg.io.in.resp.valid @[build/NutShell.fir.opt.mlir 53589:7]
    connect nutcore.io.imem.mem.resp.bits, cohMg.io.in.resp.bits @[build/NutShell.fir.opt.mlir 53592:7]
    connect cohMg.io.out.coh.req.ready, nutcore.io.dmem.coh.req.ready @[build/NutShell.fir.opt.mlir 53597:7]
    connect nutcore.io.dmem.coh.req.valid, cohMg.io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 53600:7]
    connect nutcore.io.dmem.coh.req.bits, cohMg.io.out.coh.req.bits @[build/NutShell.fir.opt.mlir 53603:7]
    connect nutcore.io.dmem.coh.resp.ready, cohMg.io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 53608:7]
    connect cohMg.io.out.coh.resp.valid, nutcore.io.dmem.coh.resp.valid @[build/NutShell.fir.opt.mlir 53611:7]
    connect cohMg.io.out.coh.resp.bits, nutcore.io.dmem.coh.resp.bits @[build/NutShell.fir.opt.mlir 53614:7]
    connect cohMg.io.out.mem.req.ready, xbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 53619:7]
    connect xbar.io.in[0].req.valid, cohMg.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 53622:7]
    connect xbar.io.in[0].req.bits, cohMg.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 53625:7]
    connect xbar.io.in[0].resp.ready, cohMg.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 53630:7]
    connect cohMg.io.out.mem.resp.valid, xbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 53633:7]
    connect cohMg.io.out.mem.resp.bits, xbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 53636:7]
    connect nutcore.io.dmem.mem.req.ready, xbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 53641:7]
    connect xbar.io.in[1].req.valid, nutcore.io.dmem.mem.req.valid @[build/NutShell.fir.opt.mlir 53644:7]
    connect xbar.io.in[1].req.bits, nutcore.io.dmem.mem.req.bits @[build/NutShell.fir.opt.mlir 53647:7]
    connect xbar.io.in[1].resp.ready, nutcore.io.dmem.mem.resp.ready @[build/NutShell.fir.opt.mlir 53652:7]
    connect nutcore.io.dmem.mem.resp.valid, xbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 53655:7]
    connect nutcore.io.dmem.mem.resp.bits, xbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 53658:7]
    inst axi2sb of AXI42SimpleBusConverter @[build/NutShell.fir.opt.mlir 53659:50]
    connect axi2sb.clock, clock @[build/NutShell.fir.opt.mlir 53662:7]
    connect axi2sb.reset, reset @[build/NutShell.fir.opt.mlir 53663:7]
    connect io.frontend.aw.ready, axi2sb.io.in.aw.ready @[build/NutShell.fir.opt.mlir 53668:7]
    connect axi2sb.io.in.aw.valid, io.frontend.aw.valid @[build/NutShell.fir.opt.mlir 53671:7]
    connect axi2sb.io.in.aw.bits.addr, io.frontend.aw.bits.addr @[build/NutShell.fir.opt.mlir 53676:7]
    connect axi2sb.io.in.aw.bits.prot, io.frontend.aw.bits.prot @[build/NutShell.fir.opt.mlir 53679:7]
    connect axi2sb.io.in.aw.bits.id, pad(io.frontend.aw.bits.id, 18) @[build/NutShell.fir.opt.mlir 53683:7]
    connect axi2sb.io.in.aw.bits.user, io.frontend.aw.bits.user @[build/NutShell.fir.opt.mlir 53686:7]
    connect axi2sb.io.in.aw.bits.len, io.frontend.aw.bits.len @[build/NutShell.fir.opt.mlir 53689:7]
    connect axi2sb.io.in.aw.bits.size, io.frontend.aw.bits.size @[build/NutShell.fir.opt.mlir 53692:7]
    connect axi2sb.io.in.aw.bits.burst, io.frontend.aw.bits.burst @[build/NutShell.fir.opt.mlir 53695:7]
    connect axi2sb.io.in.aw.bits.lock, io.frontend.aw.bits.lock @[build/NutShell.fir.opt.mlir 53698:7]
    connect axi2sb.io.in.aw.bits.cache, io.frontend.aw.bits.cache @[build/NutShell.fir.opt.mlir 53701:7]
    connect axi2sb.io.in.aw.bits.qos, io.frontend.aw.bits.qos @[build/NutShell.fir.opt.mlir 53704:7]
    connect io.frontend.w.ready, axi2sb.io.in.w.ready @[build/NutShell.fir.opt.mlir 53709:7]
    connect axi2sb.io.in.w.valid, io.frontend.w.valid @[build/NutShell.fir.opt.mlir 53712:7]
    connect axi2sb.io.in.w.bits, io.frontend.w.bits @[build/NutShell.fir.opt.mlir 53715:7]
    connect axi2sb.io.in.b.ready, io.frontend.b.ready @[build/NutShell.fir.opt.mlir 53720:7]
    connect io.frontend.b.valid, axi2sb.io.in.b.valid @[build/NutShell.fir.opt.mlir 53723:7]
    connect io.frontend.b.bits.resp, axi2sb.io.in.b.bits.resp @[build/NutShell.fir.opt.mlir 53728:7]
    connect io.frontend.b.bits.id, tail(axi2sb.io.in.b.bits.id, 17) @[build/NutShell.fir.opt.mlir 53732:7]
    connect io.frontend.b.bits.user, axi2sb.io.in.b.bits.user @[build/NutShell.fir.opt.mlir 53735:7]
    connect io.frontend.ar.ready, axi2sb.io.in.ar.ready @[build/NutShell.fir.opt.mlir 53740:7]
    connect axi2sb.io.in.ar.valid, io.frontend.ar.valid @[build/NutShell.fir.opt.mlir 53743:7]
    connect axi2sb.io.in.ar.bits.addr, io.frontend.ar.bits.addr @[build/NutShell.fir.opt.mlir 53748:7]
    connect axi2sb.io.in.ar.bits.prot, io.frontend.ar.bits.prot @[build/NutShell.fir.opt.mlir 53751:7]
    connect axi2sb.io.in.ar.bits.id, pad(io.frontend.ar.bits.id, 18) @[build/NutShell.fir.opt.mlir 53755:7]
    connect axi2sb.io.in.ar.bits.user, io.frontend.ar.bits.user @[build/NutShell.fir.opt.mlir 53758:7]
    connect axi2sb.io.in.ar.bits.len, io.frontend.ar.bits.len @[build/NutShell.fir.opt.mlir 53761:7]
    connect axi2sb.io.in.ar.bits.size, io.frontend.ar.bits.size @[build/NutShell.fir.opt.mlir 53764:7]
    connect axi2sb.io.in.ar.bits.burst, io.frontend.ar.bits.burst @[build/NutShell.fir.opt.mlir 53767:7]
    connect axi2sb.io.in.ar.bits.lock, io.frontend.ar.bits.lock @[build/NutShell.fir.opt.mlir 53770:7]
    connect axi2sb.io.in.ar.bits.cache, io.frontend.ar.bits.cache @[build/NutShell.fir.opt.mlir 53773:7]
    connect axi2sb.io.in.ar.bits.qos, io.frontend.ar.bits.qos @[build/NutShell.fir.opt.mlir 53776:7]
    connect axi2sb.io.in.r.ready, io.frontend.r.ready @[build/NutShell.fir.opt.mlir 53781:7]
    connect io.frontend.r.valid, axi2sb.io.in.r.valid @[build/NutShell.fir.opt.mlir 53784:7]
    connect io.frontend.r.bits.resp, axi2sb.io.in.r.bits.resp @[build/NutShell.fir.opt.mlir 53789:7]
    connect io.frontend.r.bits.data, axi2sb.io.in.r.bits.data @[build/NutShell.fir.opt.mlir 53792:7]
    connect io.frontend.r.bits.last, axi2sb.io.in.r.bits.last @[build/NutShell.fir.opt.mlir 53795:7]
    connect io.frontend.r.bits.id, tail(axi2sb.io.in.r.bits.id, 17) @[build/NutShell.fir.opt.mlir 53799:7]
    connect io.frontend.r.bits.user, axi2sb.io.in.r.bits.user @[build/NutShell.fir.opt.mlir 53802:7]
    connect axi2sb.io.out.req.ready, nutcore.io.frontend.req.ready @[build/NutShell.fir.opt.mlir 53807:7]
    connect nutcore.io.frontend.req.valid, axi2sb.io.out.req.valid @[build/NutShell.fir.opt.mlir 53810:7]
    connect nutcore.io.frontend.req.bits, axi2sb.io.out.req.bits @[build/NutShell.fir.opt.mlir 53813:7]
    connect nutcore.io.frontend.resp.ready, axi2sb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 53818:7]
    connect axi2sb.io.out.resp.valid, nutcore.io.frontend.resp.valid @[build/NutShell.fir.opt.mlir 53821:7]
    connect axi2sb.io.out.resp.bits, nutcore.io.frontend.resp.bits @[build/NutShell.fir.opt.mlir 53824:7]
    inst memport_bridge of SimpleBus2MemPortConverter @[build/NutShell.fir.opt.mlir 53825:74]
    connect memport_bridge.clock, clock @[build/NutShell.fir.opt.mlir 53834:7]
    connect memport_bridge.reset, reset @[build/NutShell.fir.opt.mlir 53835:7]
    connect xbar.io.out.req.ready, memport_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 53840:7]
    connect memport_bridge.io.in.req.valid, xbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 53843:7]
    connect memport_bridge.io.in.req.bits, xbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 53846:7]
    connect memport_bridge.io.in.resp.ready, xbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 53851:7]
    connect xbar.io.out.resp.valid, memport_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 53854:7]
    connect xbar.io.out.resp.bits, memport_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 53857:7]
    invalidate memport_bridge.io.out.resp.bits.data @[build/NutShell.fir.opt.mlir 53859:7]
    invalidate memport_bridge.io.out.resp.valid @[build/NutShell.fir.opt.mlir 53861:7]
    invalidate memport_bridge.io.out.req.ready @[build/NutShell.fir.opt.mlir 53863:7]
    wire mem_l2cacheOut : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 53864:25]
    inst mem_l2cacheIn_prefetcher of Prefetcher @[build/NutShell.fir.opt.mlir 53882:104]
    connect mem_l2cacheIn_prefetcher.clock, clock @[build/NutShell.fir.opt.mlir 53888:7]
    connect mem_l2cacheIn_prefetcher.reset, reset @[build/NutShell.fir.opt.mlir 53889:7]
    wire mem_l2cacheIn : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 53890:24]
    connect xbar.io.out.req.ready, mem_l2cacheIn_prefetcher.io.in.ready @[build/NutShell.fir.opt.mlir 53898:7]
    connect mem_l2cacheIn_prefetcher.io.in.valid, xbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 53901:7]
    connect mem_l2cacheIn_prefetcher.io.in.bits, xbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 53904:7]
    connect mem_l2cacheIn.req.bits, mem_l2cacheIn_prefetcher.io.out.bits @[build/NutShell.fir.opt.mlir 53905:7]
    connect mem_l2cacheIn.req.valid, mem_l2cacheIn_prefetcher.io.out.valid @[build/NutShell.fir.opt.mlir 53906:7]
    connect mem_l2cacheIn_prefetcher.io.out.ready, mem_l2cacheIn.req.ready @[build/NutShell.fir.opt.mlir 53907:7]
    connect mem_l2cacheIn.resp.ready, xbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 53910:7]
    connect xbar.io.out.resp.valid, mem_l2cacheIn.resp.valid @[build/NutShell.fir.opt.mlir 53913:7]
    connect xbar.io.out.resp.bits, mem_l2cacheIn.resp.bits @[build/NutShell.fir.opt.mlir 53916:7]
    wire mem_l2Empty : UInt<1> @[build/NutShell.fir.opt.mlir 53917:22]
    wire _mem_l2cacheOut_WIRE : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 53918:31]
    connect _mem_l2cacheOut_WIRE.resp.bits.rdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 53936:7]
    connect _mem_l2cacheOut_WIRE.resp.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 53939:7]
    connect _mem_l2cacheOut_WIRE.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53942:7]
    connect _mem_l2cacheOut_WIRE.resp.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53944:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 53946:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wmask, UInt<8>(0) @[build/NutShell.fir.opt.mlir 53949:7]
    connect _mem_l2cacheOut_WIRE.req.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 53951:7]
    connect _mem_l2cacheOut_WIRE.req.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 53954:7]
    connect _mem_l2cacheOut_WIRE.req.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 53957:7]
    connect _mem_l2cacheOut_WIRE.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53959:7]
    connect _mem_l2cacheOut_WIRE.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53961:7]
    inst mem_l2cacheOut_cache of Cache_2 @[build/NutShell.fir.opt.mlir 53962:92]
    connect mem_l2cacheOut_cache.clock, clock @[build/NutShell.fir.opt.mlir 53990:7]
    connect mem_l2cacheOut_cache.reset, reset @[build/NutShell.fir.opt.mlir 53991:7]
    connect mem_l2cacheOut_cache.io.flush, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 53994:7]
    connect mem_l2cacheIn.req.ready, mem_l2cacheOut_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 53999:7]
    connect mem_l2cacheOut_cache.io.in.req.valid, mem_l2cacheIn.req.valid @[build/NutShell.fir.opt.mlir 54002:7]
    connect mem_l2cacheOut_cache.io.in.req.bits, mem_l2cacheIn.req.bits @[build/NutShell.fir.opt.mlir 54005:7]
    connect mem_l2cacheOut_cache.io.in.resp.ready, mem_l2cacheIn.resp.ready @[build/NutShell.fir.opt.mlir 54010:7]
    connect mem_l2cacheIn.resp.valid, mem_l2cacheOut_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54013:7]
    connect mem_l2cacheIn.resp.bits, mem_l2cacheOut_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54016:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.bits.rdata, _mem_l2cacheOut_WIRE.resp.bits.rdata @[build/NutShell.fir.opt.mlir 54017:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.bits.cmd, _mem_l2cacheOut_WIRE.resp.bits.cmd @[build/NutShell.fir.opt.mlir 54018:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.valid, _mem_l2cacheOut_WIRE.resp.valid @[build/NutShell.fir.opt.mlir 54019:7]
    connect _mem_l2cacheOut_WIRE.resp.ready, mem_l2cacheOut_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 54020:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wdata, mem_l2cacheOut_cache.io.mmio.req.bits.wdata @[build/NutShell.fir.opt.mlir 54021:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wmask, mem_l2cacheOut_cache.io.mmio.req.bits.wmask @[build/NutShell.fir.opt.mlir 54022:7]
    connect _mem_l2cacheOut_WIRE.req.bits.cmd, mem_l2cacheOut_cache.io.mmio.req.bits.cmd @[build/NutShell.fir.opt.mlir 54023:7]
    connect _mem_l2cacheOut_WIRE.req.bits.size, mem_l2cacheOut_cache.io.mmio.req.bits.size @[build/NutShell.fir.opt.mlir 54024:7]
    connect _mem_l2cacheOut_WIRE.req.bits.addr, mem_l2cacheOut_cache.io.mmio.req.bits.addr @[build/NutShell.fir.opt.mlir 54025:7]
    connect _mem_l2cacheOut_WIRE.req.valid, mem_l2cacheOut_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 54026:7]
    connect mem_l2cacheOut_cache.io.mmio.req.ready, _mem_l2cacheOut_WIRE.req.ready @[build/NutShell.fir.opt.mlir 54027:7]
    connect mem_l2Empty, mem_l2cacheOut_cache.io.empty @[build/NutShell.fir.opt.mlir 54028:7]
    connect mem_l2cacheOut.coh.req.ready, mem_l2cacheOut_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 54033:7]
    connect mem_l2cacheOut_cache.io.out.coh.req.valid, mem_l2cacheOut.coh.req.valid @[build/NutShell.fir.opt.mlir 54036:7]
    connect mem_l2cacheOut_cache.io.out.coh.req.bits, mem_l2cacheOut.coh.req.bits @[build/NutShell.fir.opt.mlir 54039:7]
    connect mem_l2cacheOut_cache.io.out.coh.resp.ready, mem_l2cacheOut.coh.resp.ready @[build/NutShell.fir.opt.mlir 54044:7]
    connect mem_l2cacheOut.coh.resp.valid, mem_l2cacheOut_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 54047:7]
    connect mem_l2cacheOut.coh.resp.bits, mem_l2cacheOut_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 54050:7]
    connect mem_l2cacheOut.mem.resp.ready, mem_l2cacheOut_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 54053:7]
    connect mem_l2cacheOut_cache.io.out.mem.resp.valid, mem_l2cacheOut.mem.resp.valid @[build/NutShell.fir.opt.mlir 54056:7]
    connect mem_l2cacheOut_cache.io.out.mem.resp.bits, mem_l2cacheOut.mem.resp.bits @[build/NutShell.fir.opt.mlir 54059:7]
    connect mem_l2cacheOut.mem.req.bits, mem_l2cacheOut_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 54060:7]
    connect mem_l2cacheOut.mem.req.valid, mem_l2cacheOut_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 54061:7]
    connect mem_l2cacheOut_cache.io.out.mem.req.ready, mem_l2cacheOut.mem.req.ready @[build/NutShell.fir.opt.mlir 54062:7]
    connect mem_l2cacheOut.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54065:7]
    connect mem_l2cacheOut.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54067:7]
    invalidate mem_l2cacheOut.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 54069:7]
    invalidate mem_l2cacheOut.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 54071:7]
    invalidate mem_l2cacheOut.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 54073:7]
    invalidate mem_l2cacheOut.coh.req.bits.size @[build/NutShell.fir.opt.mlir 54075:7]
    invalidate mem_l2cacheOut.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 54077:7]
    inst memAddrMap of SimpleBusAddressMapper @[build/NutShell.fir.opt.mlir 54078:62]
    connect memAddrMap.clock, clock @[build/NutShell.fir.opt.mlir 54081:7]
    connect memAddrMap.reset, reset @[build/NutShell.fir.opt.mlir 54082:7]
    connect mem_l2cacheOut.mem.req.ready, memAddrMap.io.in.req.ready @[build/NutShell.fir.opt.mlir 54087:7]
    connect memAddrMap.io.in.req.valid, mem_l2cacheOut.mem.req.valid @[build/NutShell.fir.opt.mlir 54090:7]
    connect memAddrMap.io.in.req.bits, mem_l2cacheOut.mem.req.bits @[build/NutShell.fir.opt.mlir 54093:7]
    connect memAddrMap.io.in.resp.ready, mem_l2cacheOut.mem.resp.ready @[build/NutShell.fir.opt.mlir 54098:7]
    connect mem_l2cacheOut.mem.resp.valid, memAddrMap.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54101:7]
    connect mem_l2cacheOut.mem.resp.bits, memAddrMap.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54104:7]
    inst io_mem_bridge of SimpleBus2AXI4Converter @[build/NutShell.fir.opt.mlir 54105:71]
    connect io_mem_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54122:7]
    connect io_mem_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54123:7]
    connect memAddrMap.io.out.req.ready, io_mem_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54128:7]
    connect io_mem_bridge.io.in.req.valid, memAddrMap.io.out.req.valid @[build/NutShell.fir.opt.mlir 54131:7]
    connect io_mem_bridge.io.in.req.bits, memAddrMap.io.out.req.bits @[build/NutShell.fir.opt.mlir 54134:7]
    connect io_mem_bridge.io.in.resp.ready, memAddrMap.io.out.resp.ready @[build/NutShell.fir.opt.mlir 54139:7]
    connect memAddrMap.io.out.resp.valid, io_mem_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54142:7]
    connect memAddrMap.io.out.resp.bits, io_mem_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54145:7]
    connect io.mem.r.ready, io_mem_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54148:7]
    connect io_mem_bridge.io.out.r.valid, io.mem.r.valid @[build/NutShell.fir.opt.mlir 54151:7]
    connect io_mem_bridge.io.out.r.bits, io.mem.r.bits @[build/NutShell.fir.opt.mlir 54154:7]
    connect io.mem.ar.bits, io_mem_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54155:7]
    connect io.mem.ar.valid, io_mem_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54156:7]
    connect io_mem_bridge.io.out.ar.ready, io.mem.ar.ready @[build/NutShell.fir.opt.mlir 54157:7]
    connect io.mem.b.ready, io_mem_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54160:7]
    connect io_mem_bridge.io.out.b.valid, io.mem.b.valid @[build/NutShell.fir.opt.mlir 54163:7]
    connect io_mem_bridge.io.out.b.bits, io.mem.b.bits @[build/NutShell.fir.opt.mlir 54166:7]
    connect io.mem.w.bits, io_mem_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54167:7]
    connect io.mem.w.valid, io_mem_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54168:7]
    connect io_mem_bridge.io.out.w.ready, io.mem.w.ready @[build/NutShell.fir.opt.mlir 54169:7]
    connect io.mem.aw.bits, io_mem_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54170:7]
    connect io.mem.aw.valid, io_mem_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54171:7]
    connect io_mem_bridge.io.out.aw.ready, io.mem.aw.ready @[build/NutShell.fir.opt.mlir 54172:7]
    connect nutcore.io.imem.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54174:7]
    connect nutcore.io.imem.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54176:7]
    invalidate nutcore.io.imem.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 54178:7]
    invalidate nutcore.io.imem.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 54180:7]
    invalidate nutcore.io.imem.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 54182:7]
    invalidate nutcore.io.imem.coh.req.bits.size @[build/NutShell.fir.opt.mlir 54184:7]
    invalidate nutcore.io.imem.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 54186:7]
    inst mmioXbar of SimpleBusCrossbar1toN @[build/NutShell.fir.opt.mlir 54187:56]
    connect mmioXbar.clock, clock @[build/NutShell.fir.opt.mlir 54198:7]
    connect mmioXbar.reset, reset @[build/NutShell.fir.opt.mlir 54199:7]
    connect nutcore.io.mmio.req.ready, mmioXbar.io.in.req.ready @[build/NutShell.fir.opt.mlir 54204:7]
    connect mmioXbar.io.in.req.valid, nutcore.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 54207:7]
    connect mmioXbar.io.in.req.bits, nutcore.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 54210:7]
    connect mmioXbar.io.in.resp.ready, nutcore.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 54215:7]
    connect nutcore.io.mmio.resp.valid, mmioXbar.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54218:7]
    connect nutcore.io.mmio.resp.bits, mmioXbar.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54221:7]
    connect io.mmio.resp.ready, mmioXbar.io.out[2].resp.ready @[build/NutShell.fir.opt.mlir 54224:7]
    connect mmioXbar.io.out[2].resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 54227:7]
    connect mmioXbar.io.out[2].resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 54230:7]
    connect io.mmio.req.bits, mmioXbar.io.out[2].req.bits @[build/NutShell.fir.opt.mlir 54231:7]
    connect io.mmio.req.valid, mmioXbar.io.out[2].req.valid @[build/NutShell.fir.opt.mlir 54232:7]
    connect mmioXbar.io.out[2].req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 54233:7]
    inst clint of AXI4CLINT @[build/NutShell.fir.opt.mlir 54234:47]
    connect clint.clock, clock @[build/NutShell.fir.opt.mlir 54236:7]
    connect clint.reset, reset @[build/NutShell.fir.opt.mlir 54237:7]
    inst clint_io_in_bridge of SimpleBus2AXI4Converter_1 @[build/NutShell.fir.opt.mlir 54238:86]
    connect clint_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54241:7]
    connect clint_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54242:7]
    connect mmioXbar.io.out[0].req.ready, clint_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54247:7]
    connect clint_io_in_bridge.io.in.req.valid, mmioXbar.io.out[0].req.valid @[build/NutShell.fir.opt.mlir 54250:7]
    connect clint_io_in_bridge.io.in.req.bits, mmioXbar.io.out[0].req.bits @[build/NutShell.fir.opt.mlir 54253:7]
    connect clint_io_in_bridge.io.in.resp.ready, mmioXbar.io.out[0].resp.ready @[build/NutShell.fir.opt.mlir 54258:7]
    connect mmioXbar.io.out[0].resp.valid, clint_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54261:7]
    connect mmioXbar.io.out[0].resp.bits, clint_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54264:7]
    connect clint_io_in_bridge.io.out.aw.ready, clint.io.in.aw.ready @[build/NutShell.fir.opt.mlir 54269:7]
    connect clint.io.in.aw.valid, clint_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54272:7]
    connect clint.io.in.aw.bits, clint_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54275:7]
    connect clint_io_in_bridge.io.out.w.ready, clint.io.in.w.ready @[build/NutShell.fir.opt.mlir 54280:7]
    connect clint.io.in.w.valid, clint_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54283:7]
    connect clint.io.in.w.bits, clint_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54286:7]
    connect clint.io.in.b.ready, clint_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54291:7]
    connect clint_io_in_bridge.io.out.b.valid, clint.io.in.b.valid @[build/NutShell.fir.opt.mlir 54294:7]
    connect clint_io_in_bridge.io.out.b.bits, clint.io.in.b.bits @[build/NutShell.fir.opt.mlir 54297:7]
    connect clint_io_in_bridge.io.out.ar.ready, clint.io.in.ar.ready @[build/NutShell.fir.opt.mlir 54302:7]
    connect clint.io.in.ar.valid, clint_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54305:7]
    connect clint.io.in.ar.bits, clint_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54308:7]
    connect clint.io.in.r.ready, clint_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54313:7]
    connect clint_io_in_bridge.io.out.r.valid, clint.io.in.r.valid @[build/NutShell.fir.opt.mlir 54316:7]
    connect clint_io_in_bridge.io.out.r.bits, clint.io.in.r.bits @[build/NutShell.fir.opt.mlir 54319:7]
    inst plic of AXI4PLIC @[build/NutShell.fir.opt.mlir 54320:44]
    connect plic.clock, clock @[build/NutShell.fir.opt.mlir 54324:7]
    connect plic.reset, reset @[build/NutShell.fir.opt.mlir 54325:7]
    inst plic_io_in_bridge of SimpleBus2AXI4Converter_2 @[build/NutShell.fir.opt.mlir 54326:83]
    connect plic_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54329:7]
    connect plic_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54330:7]
    connect mmioXbar.io.out[1].req.ready, plic_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54335:7]
    connect plic_io_in_bridge.io.in.req.valid, mmioXbar.io.out[1].req.valid @[build/NutShell.fir.opt.mlir 54338:7]
    connect plic_io_in_bridge.io.in.req.bits, mmioXbar.io.out[1].req.bits @[build/NutShell.fir.opt.mlir 54341:7]
    connect plic_io_in_bridge.io.in.resp.ready, mmioXbar.io.out[1].resp.ready @[build/NutShell.fir.opt.mlir 54346:7]
    connect mmioXbar.io.out[1].resp.valid, plic_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54349:7]
    connect mmioXbar.io.out[1].resp.bits, plic_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54352:7]
    connect plic_io_in_bridge.io.out.aw.ready, plic.io.in.aw.ready @[build/NutShell.fir.opt.mlir 54357:7]
    connect plic.io.in.aw.valid, plic_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54360:7]
    connect plic.io.in.aw.bits, plic_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54363:7]
    connect plic_io_in_bridge.io.out.w.ready, plic.io.in.w.ready @[build/NutShell.fir.opt.mlir 54368:7]
    connect plic.io.in.w.valid, plic_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54371:7]
    connect plic.io.in.w.bits, plic_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54374:7]
    connect plic.io.in.b.ready, plic_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54379:7]
    connect plic_io_in_bridge.io.out.b.valid, plic.io.in.b.valid @[build/NutShell.fir.opt.mlir 54382:7]
    connect plic_io_in_bridge.io.out.b.bits, plic.io.in.b.bits @[build/NutShell.fir.opt.mlir 54385:7]
    connect plic_io_in_bridge.io.out.ar.ready, plic.io.in.ar.ready @[build/NutShell.fir.opt.mlir 54390:7]
    connect plic.io.in.ar.valid, plic_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54393:7]
    connect plic.io.in.ar.bits, plic_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54396:7]
    connect plic.io.in.r.ready, plic_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54401:7]
    connect plic_io_in_bridge.io.out.r.valid, plic.io.in.r.valid @[build/NutShell.fir.opt.mlir 54404:7]
    connect plic_io_in_bridge.io.out.r.bits, plic.io.in.r.bits @[build/NutShell.fir.opt.mlir 54407:7]
    reg plic_io_extra_intrVec_REG : UInt, clock @[build/NutShell.fir.opt.mlir 54408:36]
    connect plic_io_extra_intrVec_REG, io.meip @[build/NutShell.fir.opt.mlir 54409:7]
    reg plic_io_extra_intrVec_REG_1 : UInt, clock @[build/NutShell.fir.opt.mlir 54410:38]
    connect plic_io_extra_intrVec_REG_1, plic_io_extra_intrVec_REG @[build/NutShell.fir.opt.mlir 54411:7]
    connect plic.io.extra.intrVec, plic_io_extra_intrVec_REG_1 @[build/NutShell.fir.opt.mlir 54412:7]

  module AXI4RAM : @[build/NutShell.fir.opt.mlir 54414:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 54414:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 54414:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 54414:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 54463:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 54465:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 54467:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 54469:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 54471:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 54473:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 54475:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 54477:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54481:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54483:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54485:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54487:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54489:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54491:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54493:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54495:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 54497:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 54499:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 54501:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 54503:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 54505:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 54507:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 54509:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 54510:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 54511:14]
    regreset c_value : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54512:18]
    regreset readBeatCnt : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54513:22]
    node _len_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54515:17]
    wire _len_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 54516:20]
    connect _len_WIRE, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54520:7]
    regreset len_r : UInt<8>, clock, reset, _len_WIRE @[build/NutShell.fir.opt.mlir 54521:16]
    when _len_T : @[build/NutShell.fir.opt.mlir 54522:7]
      connect len_r, io.in.ar.bits.len @[build/NutShell.fir.opt.mlir 54523:9]
    node len = mux(_len_T, io.in.ar.bits.len, len_r) @[build/NutShell.fir.opt.mlir 54526:14]
    node _burst_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54528:19]
    wire _burst_WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 54529:22]
    connect _burst_WIRE, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 54532:7]
    regreset burst_r : UInt<2>, clock, reset, _burst_WIRE @[build/NutShell.fir.opt.mlir 54533:18]
    when _burst_T : @[build/NutShell.fir.opt.mlir 54534:7]
      connect burst_r, io.in.ar.bits.burst @[build/NutShell.fir.opt.mlir 54535:9]
    node burst = mux(_burst_T, io.in.ar.bits.burst, burst_r) @[build/NutShell.fir.opt.mlir 54538:16]
    wire _wrapAddr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 54539:25]
    connect _wrapAddr_WIRE, pad(io.in.ar.bits.len, 32) @[build/NutShell.fir.opt.mlir 54541:7]
    node _wrapAddr_T = dshl(_wrapAddr_WIRE, io.in.ar.bits.size) @[build/NutShell.fir.opt.mlir 54543:22]
    node _wrapAddr_T_1 = not(_wrapAddr_T) @[build/NutShell.fir.opt.mlir 54545:24]
    node wrapAddr = and(io.in.ar.bits.addr, _wrapAddr_T_1) @[build/NutShell.fir.opt.mlir 54547:19]
    node _raddr_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54549:19]
    wire _raddr_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 54550:22]
    connect _raddr_WIRE, pad(UInt<1>(0), 39) @[build/NutShell.fir.opt.mlir 54553:7]
    regreset raddr_r : UInt<39>, clock, reset, _raddr_WIRE @[build/NutShell.fir.opt.mlir 54554:18]
    when _raddr_T : @[build/NutShell.fir.opt.mlir 54555:7]
      connect raddr_r, wrapAddr @[build/NutShell.fir.opt.mlir 54556:9]
    node _raddr_T_1 = mux(_raddr_T, wrapAddr, raddr_r) @[build/NutShell.fir.opt.mlir 54559:21]
    connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 54560:7]
    node _io_in_r_bits_last_T = eq(c_value, len) @[build/NutShell.fir.opt.mlir 54562:31]
    connect io.in.r.bits.last, _io_in_r_bits_last_T @[build/NutShell.fir.opt.mlir 54563:7]
    when ren : @[build/NutShell.fir.opt.mlir 54566:7]
      node wrap = eq(readBeatCnt, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54568:17]
      node _value_T = add(readBeatCnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54570:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 54572:23]
      connect readBeatCnt, _value_T_1 @[build/NutShell.fir.opt.mlir 54573:9]
      node _T = eq(burst, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 54575:15]
      node _T_1 = eq(readBeatCnt, len) @[build/NutShell.fir.opt.mlir 54577:17]
      node _T_2 = and(_T, _T_1) @[build/NutShell.fir.opt.mlir 54579:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 54580:9]
        connect readBeatCnt, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54583:11]
    node _T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54587:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 54588:7]
      node wrap_1 = eq(c_value, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54590:19]
      node _value_T_2 = add(c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54592:23]
      node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 54594:23]
      connect c_value, _value_T_3 @[build/NutShell.fir.opt.mlir 54595:9]
      when io.in.r.bits.last : @[build/NutShell.fir.opt.mlir 54596:9]
        connect c_value, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54599:11]
    node _T_4 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54603:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 54607:7]
      node _value_T_4 = dshr(io.in.ar.bits.addr, io.in.ar.bits.size) @[build/NutShell.fir.opt.mlir 54609:23]
      node _value_T_5 = and(_value_T_4, io.in.ar.bits.len) @[build/NutShell.fir.opt.mlir 54611:23]
      connect readBeatCnt, tail(_value_T_5, 24) @[build/NutShell.fir.opt.mlir 54613:9]
      node _T_5 = neq(io.in.ar.bits.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54615:17]
      node _T_6 = eq(io.in.ar.bits.burst, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 54617:17]
      node _T_7 = and(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 54619:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 54620:9]
        node _T_8 = eq(io.in.ar.bits.len, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54622:19]
        node _T_9 = eq(io.in.ar.bits.len, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 54624:19]
        node _T_10 = or(_T_8, _T_9) @[build/NutShell.fir.opt.mlir 54626:20]
        node _T_11 = eq(io.in.ar.bits.len, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 54628:20]
        node _T_12 = or(_T_10, _T_11) @[build/NutShell.fir.opt.mlir 54630:20]
        node _T_13 = eq(io.in.ar.bits.len, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 54632:20]
        node _T_14 = or(_T_12, _T_13) @[build/NutShell.fir.opt.mlir 54634:20]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 54636:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54638:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 54639:11]
          node _T_17 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54641:22]
          when _T_17 : @[build/NutShell.fir.opt.mlir 54642:13]
            skip @[build/NutShell.fir.opt.mlir 54643:15]
          assert(clock, _T_14, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 54645:13]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54650:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54652:22]
    node _r_busy_T_2 = and(_r_busy_T_1, io.in.r.bits.last) @[build/NutShell.fir.opt.mlir 54654:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54655:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 54656:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54658:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 54660:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54662:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54665:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 54667:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 54668:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 54671:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54673:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54674:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 54675:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54677:19]
    node _ren_T_2 = eq(io.in.r.bits.last, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54679:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 54681:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 54683:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 54684:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54686:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 54688:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 54690:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54692:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54693:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 54694:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54696:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 54698:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54700:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 54702:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 54703:16]
    regreset writeBeatCnt : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54704:23]
    node _waddr_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54706:19]
    wire _waddr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 54707:22]
    connect _waddr_WIRE, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 54710:7]
    regreset waddr_r : UInt<32>, clock, reset, _waddr_WIRE @[build/NutShell.fir.opt.mlir 54711:18]
    when _waddr_T : @[build/NutShell.fir.opt.mlir 54712:7]
      connect waddr_r, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 54713:9]
    node _waddr_T_1 = mux(_waddr_T, io.in.aw.bits.addr, waddr_r) @[build/NutShell.fir.opt.mlir 54716:21]
    connect waddr, _waddr_T_1 @[build/NutShell.fir.opt.mlir 54717:7]
    node _T_18 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54719:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 54720:7]
      node wrap_2 = eq(writeBeatCnt, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54722:19]
      node _value_T_6 = add(writeBeatCnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54724:23]
      node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 54726:23]
      connect writeBeatCnt, _value_T_7 @[build/NutShell.fir.opt.mlir 54727:9]
      when io.in.w.bits.last : @[build/NutShell.fir.opt.mlir 54728:9]
        connect writeBeatCnt, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54731:11]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54735:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 54737:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54738:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 54739:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54741:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 54743:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54745:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54748:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 54749:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 54751:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 54752:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 54754:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54756:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, io.in.w.bits.last) @[build/NutShell.fir.opt.mlir 54758:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 54760:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54761:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 54762:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54764:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 54766:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54768:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 54770:7]
    node _io_in_b_bits_id_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54772:29]
    reg io_in_b_bits_id_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54773:28]
    when _io_in_b_bits_id_T : @[build/NutShell.fir.opt.mlir 54774:7]
      connect io_in_b_bits_id_r, io.in.aw.bits.id @[build/NutShell.fir.opt.mlir 54775:9]
    connect io.in.b.bits.id, io_in_b_bits_id_r @[build/NutShell.fir.opt.mlir 54777:7]
    node _io_in_b_bits_user_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54779:31]
    reg io_in_b_bits_user_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54780:30]
    when _io_in_b_bits_user_T : @[build/NutShell.fir.opt.mlir 54781:7]
      connect io_in_b_bits_user_r, io.in.aw.bits.user @[build/NutShell.fir.opt.mlir 54782:9]
    connect io.in.b.bits.user, io_in_b_bits_user_r @[build/NutShell.fir.opt.mlir 54784:7]
    node _io_in_r_bits_id_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54786:29]
    reg io_in_r_bits_id_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54787:28]
    when _io_in_r_bits_id_T : @[build/NutShell.fir.opt.mlir 54788:7]
      connect io_in_r_bits_id_r, io.in.ar.bits.id @[build/NutShell.fir.opt.mlir 54789:9]
    connect io.in.r.bits.id, io_in_r_bits_id_r @[build/NutShell.fir.opt.mlir 54791:7]
    node _io_in_r_bits_user_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54793:31]
    reg io_in_r_bits_user_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54794:30]
    when _io_in_r_bits_user_T : @[build/NutShell.fir.opt.mlir 54795:7]
      connect io_in_r_bits_user_r, io.in.ar.bits.user @[build/NutShell.fir.opt.mlir 54796:9]
    connect io.in.r.bits.user, io_in_r_bits_user_r @[build/NutShell.fir.opt.mlir 54798:7]
    node _wIdx_T = bits(waddr, 30, 3) @[build/NutShell.fir.opt.mlir 54800:18]
    node _wIdx_T_1 = add(_wIdx_T, writeBeatCnt) @[build/NutShell.fir.opt.mlir 54802:20]
    node wIdx = tail(_wIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 54804:15]
    node _rIdx_T = bits(raddr, 30, 3) @[build/NutShell.fir.opt.mlir 54806:18]
    node _rIdx_T_1 = add(_rIdx_T, readBeatCnt) @[build/NutShell.fir.opt.mlir 54808:20]
    node rIdx = tail(_rIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 54810:15]
    node _wen_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54812:17]
    node _wen_T_1 = lt(wIdx, UInt<29>(268435456)) @[build/NutShell.fir.opt.mlir 54815:19]
    node wen = and(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 54817:14]
    mem rdata_mem : @[build/NutShell.fir.opt.mlir 54818:58]
      data-type => UInt<8>[8]
      depth => 268435456
      read-latency => 0
      write-latency => 1
      reader => rdata_MPORT_1
      writer => rdata_MPORT
      read-under-write => undefined
    invalidate rdata_mem.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 54820:7]
    connect rdata_mem.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54822:7]
    invalidate rdata_mem.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 54824:7]
    invalidate rdata_mem.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 54826:7]
    invalidate rdata_mem.rdata_MPORT.mask @[build/NutShell.fir.opt.mlir 54828:7]
    invalidate rdata_mem.rdata_MPORT_1.addr @[build/NutShell.fir.opt.mlir 54830:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54832:7]
    invalidate rdata_mem.rdata_MPORT_1.clk @[build/NutShell.fir.opt.mlir 54834:7]
    node _rdata_wdata_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 54861:25]
    node _rdata_wdata_T_1 = bits(io.in.w.bits.data, 15, 8) @[build/NutShell.fir.opt.mlir 54863:27]
    node _rdata_wdata_T_2 = bits(io.in.w.bits.data, 23, 16) @[build/NutShell.fir.opt.mlir 54865:27]
    node _rdata_wdata_T_3 = bits(io.in.w.bits.data, 31, 24) @[build/NutShell.fir.opt.mlir 54867:27]
    node _rdata_wdata_T_4 = bits(io.in.w.bits.data, 39, 32) @[build/NutShell.fir.opt.mlir 54869:27]
    node _rdata_wdata_T_5 = bits(io.in.w.bits.data, 47, 40) @[build/NutShell.fir.opt.mlir 54871:27]
    node _rdata_wdata_T_6 = bits(io.in.w.bits.data, 55, 48) @[build/NutShell.fir.opt.mlir 54873:27]
    node _rdata_wdata_T_7 = bits(io.in.w.bits.data, 63, 56) @[build/NutShell.fir.opt.mlir 54875:27]
    wire rdata_wdata : UInt<8>[8] @[build/NutShell.fir.opt.mlir 54876:22]
    connect rdata_wdata[0], _rdata_wdata_T @[build/NutShell.fir.opt.mlir 54885:7]
    connect rdata_wdata[1], _rdata_wdata_T_1 @[build/NutShell.fir.opt.mlir 54886:7]
    connect rdata_wdata[2], _rdata_wdata_T_2 @[build/NutShell.fir.opt.mlir 54887:7]
    connect rdata_wdata[3], _rdata_wdata_T_3 @[build/NutShell.fir.opt.mlir 54888:7]
    connect rdata_wdata[4], _rdata_wdata_T_4 @[build/NutShell.fir.opt.mlir 54889:7]
    connect rdata_wdata[5], _rdata_wdata_T_5 @[build/NutShell.fir.opt.mlir 54890:7]
    connect rdata_wdata[6], _rdata_wdata_T_6 @[build/NutShell.fir.opt.mlir 54891:7]
    connect rdata_wdata[7], _rdata_wdata_T_7 @[build/NutShell.fir.opt.mlir 54892:7]
    when wen : @[build/NutShell.fir.opt.mlir 54893:7]
      node _rdata_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 54895:21]
      node _rdata_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 54897:23]
      node _rdata_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 54899:23]
      node _rdata_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 54901:23]
      node _rdata_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 54903:23]
      node _rdata_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 54905:23]
      node _rdata_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 54907:23]
      node _rdata_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 54909:23]
      connect rdata_mem.rdata_MPORT.addr, wIdx @[build/NutShell.fir.opt.mlir 54910:9]
      connect rdata_mem.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54911:9]
      connect rdata_mem.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 54912:9]
      connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54914:9]
      connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54916:9]
      connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54918:9]
      connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54920:9]
      connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54922:9]
      connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54924:9]
      connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54926:9]
      connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 54928:9]
      when _rdata_T : @[build/NutShell.fir.opt.mlir 54929:9]
        connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54930:11]
        connect rdata_mem.rdata_MPORT.data[0], rdata_wdata[0] @[build/NutShell.fir.opt.mlir 54931:11]
      when _rdata_T_1 : @[build/NutShell.fir.opt.mlir 54933:9]
        connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54934:11]
        connect rdata_mem.rdata_MPORT.data[1], rdata_wdata[1] @[build/NutShell.fir.opt.mlir 54935:11]
      when _rdata_T_2 : @[build/NutShell.fir.opt.mlir 54937:9]
        connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54938:11]
        connect rdata_mem.rdata_MPORT.data[2], rdata_wdata[2] @[build/NutShell.fir.opt.mlir 54939:11]
      when _rdata_T_3 : @[build/NutShell.fir.opt.mlir 54941:9]
        connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54942:11]
        connect rdata_mem.rdata_MPORT.data[3], rdata_wdata[3] @[build/NutShell.fir.opt.mlir 54943:11]
      when _rdata_T_4 : @[build/NutShell.fir.opt.mlir 54945:9]
        connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54946:11]
        connect rdata_mem.rdata_MPORT.data[4], rdata_wdata[4] @[build/NutShell.fir.opt.mlir 54947:11]
      when _rdata_T_5 : @[build/NutShell.fir.opt.mlir 54949:9]
        connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54950:11]
        connect rdata_mem.rdata_MPORT.data[5], rdata_wdata[5] @[build/NutShell.fir.opt.mlir 54951:11]
      when _rdata_T_6 : @[build/NutShell.fir.opt.mlir 54953:9]
        connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54954:11]
        connect rdata_mem.rdata_MPORT.data[6], rdata_wdata[6] @[build/NutShell.fir.opt.mlir 54955:11]
      when _rdata_T_7 : @[build/NutShell.fir.opt.mlir 54957:9]
        connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 54958:11]
        connect rdata_mem.rdata_MPORT.data[7], rdata_wdata[7] @[build/NutShell.fir.opt.mlir 54959:11]
    connect rdata_mem.rdata_MPORT_1.addr, rIdx @[build/NutShell.fir.opt.mlir 54962:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54963:7]
    connect rdata_mem.rdata_MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 54964:7]
    node rdata_lo_lo = cat(rdata_mem.rdata_MPORT_1.data[1], rdata_mem.rdata_MPORT_1.data[0]) @[build/NutShell.fir.opt.mlir 54966:22]
    node rdata_lo_hi = cat(rdata_mem.rdata_MPORT_1.data[3], rdata_mem.rdata_MPORT_1.data[2]) @[build/NutShell.fir.opt.mlir 54968:22]
    node rdata_lo = cat(rdata_lo_hi, rdata_lo_lo) @[build/NutShell.fir.opt.mlir 54970:19]
    node rdata_hi_lo = cat(rdata_mem.rdata_MPORT_1.data[5], rdata_mem.rdata_MPORT_1.data[4]) @[build/NutShell.fir.opt.mlir 54972:22]
    node rdata_hi_hi = cat(rdata_mem.rdata_MPORT_1.data[7], rdata_mem.rdata_MPORT_1.data[6]) @[build/NutShell.fir.opt.mlir 54974:22]
    node rdata_hi = cat(rdata_hi_hi, rdata_hi_lo) @[build/NutShell.fir.opt.mlir 54976:19]
    node _rdata_T_8 = cat(rdata_hi, rdata_lo) @[build/NutShell.fir.opt.mlir 54978:21]
    reg rdata : UInt<64>, clock @[build/NutShell.fir.opt.mlir 54979:16]
    when ren : @[build/NutShell.fir.opt.mlir 54980:7]
      connect rdata, _rdata_T_8 @[build/NutShell.fir.opt.mlir 54981:9]
    connect io.in.r.bits.data, rdata @[build/NutShell.fir.opt.mlir 54983:7]

  module LatencyPipe : @[build/NutShell.fir.opt.mlir 54985:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 54985:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 54985:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } } } @[build/NutShell.fir.opt.mlir 54985:96]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 54990:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 54993:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 54996:7]

  module LatencyPipe_1 : @[build/NutShell.fir.opt.mlir 54998:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 54998:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 54998:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } } } @[build/NutShell.fir.opt.mlir 54998:98]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 55003:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 55006:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 55009:7]

  module AXI4Delayer : @[build/NutShell.fir.opt.mlir 55011:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55011:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55011:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 55011:96]

    inst io_out_ar_pipe of LatencyPipe @[build/NutShell.fir.opt.mlir 55030:74]
    connect io_out_ar_pipe.clock, clock @[build/NutShell.fir.opt.mlir 55036:7]
    connect io_out_ar_pipe.reset, reset @[build/NutShell.fir.opt.mlir 55037:7]
    connect io.in.ar.ready, io_out_ar_pipe.io.in.ready @[build/NutShell.fir.opt.mlir 55040:7]
    connect io_out_ar_pipe.io.in.valid, io.in.ar.valid @[build/NutShell.fir.opt.mlir 55043:7]
    connect io_out_ar_pipe.io.in.bits, io.in.ar.bits @[build/NutShell.fir.opt.mlir 55046:7]
    connect io.out.ar.bits, io_out_ar_pipe.io.out.bits @[build/NutShell.fir.opt.mlir 55047:7]
    connect io.out.ar.valid, io_out_ar_pipe.io.out.valid @[build/NutShell.fir.opt.mlir 55048:7]
    connect io_out_ar_pipe.io.out.ready, io.out.ar.ready @[build/NutShell.fir.opt.mlir 55049:7]
    inst io_out_aw_pipe of LatencyPipe_1 @[build/NutShell.fir.opt.mlir 55050:74]
    connect io_out_aw_pipe.clock, clock @[build/NutShell.fir.opt.mlir 55056:7]
    connect io_out_aw_pipe.reset, reset @[build/NutShell.fir.opt.mlir 55057:7]
    connect io.in.aw.ready, io_out_aw_pipe.io.in.ready @[build/NutShell.fir.opt.mlir 55060:7]
    connect io_out_aw_pipe.io.in.valid, io.in.aw.valid @[build/NutShell.fir.opt.mlir 55063:7]
    connect io_out_aw_pipe.io.in.bits, io.in.aw.bits @[build/NutShell.fir.opt.mlir 55066:7]
    connect io.out.aw.bits, io_out_aw_pipe.io.out.bits @[build/NutShell.fir.opt.mlir 55067:7]
    connect io.out.aw.valid, io_out_aw_pipe.io.out.valid @[build/NutShell.fir.opt.mlir 55068:7]
    connect io_out_aw_pipe.io.out.ready, io.out.aw.ready @[build/NutShell.fir.opt.mlir 55069:7]
    connect io.in.w.ready, io.out.w.ready @[build/NutShell.fir.opt.mlir 55072:7]
    connect io.out.w.valid, io.in.w.valid @[build/NutShell.fir.opt.mlir 55075:7]
    connect io.out.w.bits, io.in.w.bits @[build/NutShell.fir.opt.mlir 55078:7]
    connect io.out.b.ready, io.in.b.ready @[build/NutShell.fir.opt.mlir 55081:7]
    connect io.in.b.valid, io.out.b.valid @[build/NutShell.fir.opt.mlir 55084:7]
    connect io.in.b.bits, io.out.b.bits @[build/NutShell.fir.opt.mlir 55087:7]
    connect io.out.r.ready, io.in.r.ready @[build/NutShell.fir.opt.mlir 55090:7]
    connect io.in.r.valid, io.out.r.valid @[build/NutShell.fir.opt.mlir 55093:7]
    connect io.in.r.bits, io.out.r.bits @[build/NutShell.fir.opt.mlir 55096:7]

  extmodule LogPerfHelper_48 : @[build/NutShell.fir.opt.mlir 55098:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 55098:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 55098:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 55098:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 55098:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_49 : @[build/NutShell.fir.opt.mlir 55099:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 55099:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 55099:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 55099:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 55099:141]
    defname = LogPerfHelper

  module SimpleBusCrossbar1toN_1 : @[build/NutShell.fir.opt.mlir 55100:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55100:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55100:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[7] } @[build/NutShell.fir.opt.mlir 55100:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55190:16]
    node _outMatchVec_T = geq(io.in.req.bits.addr, UInt<31>(1080033280)) @[build/NutShell.fir.opt.mlir 55193:25]
    node _outMatchVec_T_1 = lt(io.in.req.bits.addr, UInt<31>(1080033296)) @[build/NutShell.fir.opt.mlir 55196:27]
    node _outMatchVec_T_2 = and(_outMatchVec_T, _outMatchVec_T_1) @[build/NutShell.fir.opt.mlir 55198:27]
    node _outMatchVec_T_3 = geq(io.in.req.bits.addr, UInt<31>(1342177280)) @[build/NutShell.fir.opt.mlir 55201:27]
    node _outMatchVec_T_4 = lt(io.in.req.bits.addr, UInt<31>(1346371584)) @[build/NutShell.fir.opt.mlir 55204:27]
    node _outMatchVec_T_5 = and(_outMatchVec_T_3, _outMatchVec_T_4) @[build/NutShell.fir.opt.mlir 55206:27]
    node _outMatchVec_T_6 = geq(io.in.req.bits.addr, UInt<31>(1073745920)) @[build/NutShell.fir.opt.mlir 55209:27]
    node _outMatchVec_T_7 = lt(io.in.req.bits.addr, UInt<31>(1073745928)) @[build/NutShell.fir.opt.mlir 55212:27]
    node _outMatchVec_T_8 = and(_outMatchVec_T_6, _outMatchVec_T_7) @[build/NutShell.fir.opt.mlir 55214:27]
    node _outMatchVec_T_9 = geq(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 55217:27]
    node _outMatchVec_T_10 = lt(io.in.req.bits.addr, UInt<31>(1073745920)) @[build/NutShell.fir.opt.mlir 55219:28]
    node _outMatchVec_T_11 = and(_outMatchVec_T_9, _outMatchVec_T_10) @[build/NutShell.fir.opt.mlir 55221:28]
    node _outMatchVec_T_12 = geq(io.in.req.bits.addr, UInt<31>(1073750016)) @[build/NutShell.fir.opt.mlir 55224:28]
    node _outMatchVec_T_13 = lt(io.in.req.bits.addr, UInt<31>(1073754112)) @[build/NutShell.fir.opt.mlir 55227:28]
    node _outMatchVec_T_14 = and(_outMatchVec_T_12, _outMatchVec_T_13) @[build/NutShell.fir.opt.mlir 55229:28]
    node _outMatchVec_T_15 = geq(io.in.req.bits.addr, UInt<31>(1073758208)) @[build/NutShell.fir.opt.mlir 55232:28]
    node _outMatchVec_T_16 = lt(io.in.req.bits.addr, UInt<31>(1073762304)) @[build/NutShell.fir.opt.mlir 55235:28]
    node _outMatchVec_T_17 = and(_outMatchVec_T_15, _outMatchVec_T_16) @[build/NutShell.fir.opt.mlir 55237:28]
    node _outMatchVec_T_18 = geq(io.in.req.bits.addr, UInt<31>(1073754112)) @[build/NutShell.fir.opt.mlir 55239:28]
    node _outMatchVec_T_19 = lt(io.in.req.bits.addr, UInt<31>(1073758208)) @[build/NutShell.fir.opt.mlir 55241:28]
    node _outMatchVec_T_20 = and(_outMatchVec_T_18, _outMatchVec_T_19) @[build/NutShell.fir.opt.mlir 55243:28]
    wire outMatchVec : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55244:22]
    connect outMatchVec[0], _outMatchVec_T_2 @[build/NutShell.fir.opt.mlir 55252:7]
    connect outMatchVec[1], _outMatchVec_T_5 @[build/NutShell.fir.opt.mlir 55253:7]
    connect outMatchVec[2], _outMatchVec_T_8 @[build/NutShell.fir.opt.mlir 55254:7]
    connect outMatchVec[3], _outMatchVec_T_11 @[build/NutShell.fir.opt.mlir 55255:7]
    connect outMatchVec[4], _outMatchVec_T_14 @[build/NutShell.fir.opt.mlir 55256:7]
    connect outMatchVec[5], _outMatchVec_T_17 @[build/NutShell.fir.opt.mlir 55257:7]
    connect outMatchVec[6], _outMatchVec_T_20 @[build/NutShell.fir.opt.mlir 55258:7]
    node _outSelVec_enc_T = mux(outMatchVec[6], UInt<7>(64), UInt<7>(0)) @[build/NutShell.fir.opt.mlir 55262:27]
    node _outSelVec_enc_T_1 = mux(outMatchVec[5], UInt<7>(32), _outSelVec_enc_T) @[build/NutShell.fir.opt.mlir 55265:29]
    node _outSelVec_enc_T_2 = mux(outMatchVec[4], UInt<7>(16), _outSelVec_enc_T_1) @[build/NutShell.fir.opt.mlir 55268:29]
    node _outSelVec_enc_T_3 = mux(outMatchVec[3], UInt<7>(8), _outSelVec_enc_T_2) @[build/NutShell.fir.opt.mlir 55271:29]
    node _outSelVec_enc_T_4 = mux(outMatchVec[2], UInt<7>(4), _outSelVec_enc_T_3) @[build/NutShell.fir.opt.mlir 55274:29]
    node _outSelVec_enc_T_5 = mux(outMatchVec[1], UInt<7>(2), _outSelVec_enc_T_4) @[build/NutShell.fir.opt.mlir 55277:29]
    node outSelVec_enc = mux(outMatchVec[0], UInt<7>(1), _outSelVec_enc_T_5) @[build/NutShell.fir.opt.mlir 55280:24]
    node _outSelVec_T = bits(outSelVec_enc, 0, 0) @[build/NutShell.fir.opt.mlir 55282:23]
    node _outSelVec_T_1 = bits(outSelVec_enc, 1, 1) @[build/NutShell.fir.opt.mlir 55284:25]
    node _outSelVec_T_2 = bits(outSelVec_enc, 2, 2) @[build/NutShell.fir.opt.mlir 55286:25]
    node _outSelVec_T_3 = bits(outSelVec_enc, 3, 3) @[build/NutShell.fir.opt.mlir 55288:25]
    node _outSelVec_T_4 = bits(outSelVec_enc, 4, 4) @[build/NutShell.fir.opt.mlir 55290:25]
    node _outSelVec_T_5 = bits(outSelVec_enc, 5, 5) @[build/NutShell.fir.opt.mlir 55292:25]
    node _outSelVec_T_6 = bits(outSelVec_enc, 6, 6) @[build/NutShell.fir.opt.mlir 55294:25]
    wire outSelVec : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55295:20]
    connect outSelVec[0], _outSelVec_T @[build/NutShell.fir.opt.mlir 55303:7]
    connect outSelVec[1], _outSelVec_T_1 @[build/NutShell.fir.opt.mlir 55304:7]
    connect outSelVec[2], _outSelVec_T_2 @[build/NutShell.fir.opt.mlir 55305:7]
    connect outSelVec[3], _outSelVec_T_3 @[build/NutShell.fir.opt.mlir 55306:7]
    connect outSelVec[4], _outSelVec_T_4 @[build/NutShell.fir.opt.mlir 55307:7]
    connect outSelVec[5], _outSelVec_T_5 @[build/NutShell.fir.opt.mlir 55308:7]
    connect outSelVec[6], _outSelVec_T_6 @[build/NutShell.fir.opt.mlir 55309:7]
    wire _outSelRespVec_WIRE : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55310:30]
    connect _outSelRespVec_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55320:7]
    connect _outSelRespVec_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55322:7]
    connect _outSelRespVec_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55324:7]
    connect _outSelRespVec_WIRE[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55326:7]
    connect _outSelRespVec_WIRE[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55328:7]
    connect _outSelRespVec_WIRE[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55330:7]
    connect _outSelRespVec_WIRE[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55332:7]
    node _outSelRespVec_T = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55334:27]
    node _outSelRespVec_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55336:29]
    node _outSelRespVec_T_2 = and(_outSelRespVec_T, _outSelRespVec_T_1) @[build/NutShell.fir.opt.mlir 55338:29]
    regreset outSelRespVec : UInt<1>[7], clock, reset, _outSelRespVec_WIRE @[build/NutShell.fir.opt.mlir 55339:24]
    when _outSelRespVec_T_2 : @[build/NutShell.fir.opt.mlir 55347:7]
      connect outSelRespVec, outSelVec @[build/NutShell.fir.opt.mlir 55348:9]
    node reqInvalidAddr_lo_hi = cat(outSelVec[2], outSelVec[1]) @[build/NutShell.fir.opt.mlir 55351:31]
    node reqInvalidAddr_lo = cat(reqInvalidAddr_lo_hi, outSelVec[0]) @[build/NutShell.fir.opt.mlir 55353:28]
    node reqInvalidAddr_hi_lo = cat(outSelVec[4], outSelVec[3]) @[build/NutShell.fir.opt.mlir 55355:31]
    node reqInvalidAddr_hi_hi = cat(outSelVec[6], outSelVec[5]) @[build/NutShell.fir.opt.mlir 55357:31]
    node reqInvalidAddr_hi = cat(reqInvalidAddr_hi_hi, reqInvalidAddr_hi_lo) @[build/NutShell.fir.opt.mlir 55359:28]
    node _reqInvalidAddr_T = cat(reqInvalidAddr_hi, reqInvalidAddr_lo) @[build/NutShell.fir.opt.mlir 55361:28]
    node _reqInvalidAddr_T_1 = orr(_reqInvalidAddr_T) @[build/NutShell.fir.opt.mlir 55363:30]
    node _reqInvalidAddr_T_2 = eq(_reqInvalidAddr_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55365:30]
    node reqInvalidAddr = and(io.in.req.valid, _reqInvalidAddr_T_2) @[build/NutShell.fir.opt.mlir 55367:25]
    when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 55370:7]
      inst LogPerfHelper of LogPerfHelper_48 @[build/NutShell.fir.opt.mlir 55371:101]
      wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 55372:20]
      connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 55377:9]
      connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 55378:9]
      connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 55379:9]
      connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 55380:9]
      node _T = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 55382:15]
      when _T : @[build/NutShell.fir.opt.mlir 55383:9]
        regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55384:16]
        node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55386:19]
        node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 55388:21]
        connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 55389:11]
        node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55391:19]
        node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55393:19]
        when _T_2 : @[build/NutShell.fir.opt.mlir 55394:11]
          skip @[build/NutShell.fir.opt.mlir 55395:13]
    node _T_3 = eq(reqInvalidAddr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55400:15]
    node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55402:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55404:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 55405:7]
      node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55407:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 55408:9]
        skip @[build/NutShell.fir.opt.mlir 55409:11]
      assert(clock, _T_3, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 55411:9]
    node _T_7 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 55414:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 55417:7]
      node _T_8 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55419:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 55420:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 55422:11]
      when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 55424:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 55426:11]
    else :
      node _T_9 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 55430:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 55431:9]
        node _T_10 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55433:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 55434:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55436:13]
      else :
        node _T_11 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 55440:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 55441:11]
          node _T_12 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55443:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 55444:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55446:15]
    node _io_in_req_ready_T = mux(outSelVec[0], io.out[0].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55452:29]
    node _io_in_req_ready_T_1 = mux(outSelVec[1], io.out[1].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55454:31]
    node _io_in_req_ready_T_2 = mux(outSelVec[2], io.out[2].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55456:31]
    node _io_in_req_ready_T_3 = mux(outSelVec[3], io.out[3].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55458:31]
    node _io_in_req_ready_T_4 = mux(outSelVec[4], io.out[4].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55460:31]
    node _io_in_req_ready_T_5 = mux(outSelVec[5], io.out[5].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55462:31]
    node _io_in_req_ready_T_6 = mux(outSelVec[6], io.out[6].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55464:31]
    node _io_in_req_ready_T_7 = or(_io_in_req_ready_T, _io_in_req_ready_T_1) @[build/NutShell.fir.opt.mlir 55466:31]
    node _io_in_req_ready_T_8 = or(_io_in_req_ready_T_7, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 55468:31]
    node _io_in_req_ready_T_9 = or(_io_in_req_ready_T_8, _io_in_req_ready_T_3) @[build/NutShell.fir.opt.mlir 55470:31]
    node _io_in_req_ready_T_10 = or(_io_in_req_ready_T_9, _io_in_req_ready_T_4) @[build/NutShell.fir.opt.mlir 55472:32]
    node _io_in_req_ready_T_11 = or(_io_in_req_ready_T_10, _io_in_req_ready_T_5) @[build/NutShell.fir.opt.mlir 55474:32]
    node _io_in_req_ready_T_12 = or(_io_in_req_ready_T_11, _io_in_req_ready_T_6) @[build/NutShell.fir.opt.mlir 55476:32]
    wire _io_in_req_ready_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 55477:32]
    connect _io_in_req_ready_WIRE, _io_in_req_ready_T_12 @[build/NutShell.fir.opt.mlir 55478:7]
    node _io_in_req_ready_T_13 = or(_io_in_req_ready_WIRE, reqInvalidAddr) @[build/NutShell.fir.opt.mlir 55480:32]
    connect io.in.req.ready, _io_in_req_ready_T_13 @[build/NutShell.fir.opt.mlir 55481:7]
    node _io_out_0_req_valid_T = and(outSelVec[0], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55483:32]
    node _io_out_0_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55485:34]
    node _io_out_0_req_valid_T_2 = and(_io_out_0_req_valid_T, _io_out_0_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55487:34]
    connect io.out[0].req.valid, _io_out_0_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55488:7]
    connect io.out[0].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55489:7]
    node _io_out_1_req_valid_T = and(outSelVec[1], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55491:32]
    node _io_out_1_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55493:34]
    node _io_out_1_req_valid_T_2 = and(_io_out_1_req_valid_T, _io_out_1_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55495:34]
    connect io.out[1].req.valid, _io_out_1_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55496:7]
    connect io.out[1].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55497:7]
    node _io_out_2_req_valid_T = and(outSelVec[2], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55499:32]
    node _io_out_2_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55501:34]
    node _io_out_2_req_valid_T_2 = and(_io_out_2_req_valid_T, _io_out_2_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55503:34]
    connect io.out[2].req.valid, _io_out_2_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55504:7]
    connect io.out[2].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55505:7]
    node _io_out_3_req_valid_T = and(outSelVec[3], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55507:32]
    node _io_out_3_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55509:34]
    node _io_out_3_req_valid_T_2 = and(_io_out_3_req_valid_T, _io_out_3_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55511:34]
    connect io.out[3].req.valid, _io_out_3_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55512:7]
    connect io.out[3].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55513:7]
    node _io_out_4_req_valid_T = and(outSelVec[4], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55515:32]
    node _io_out_4_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55517:34]
    node _io_out_4_req_valid_T_2 = and(_io_out_4_req_valid_T, _io_out_4_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55519:34]
    connect io.out[4].req.valid, _io_out_4_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55520:7]
    connect io.out[4].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55521:7]
    node _io_out_5_req_valid_T = and(outSelVec[5], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55523:32]
    node _io_out_5_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55525:34]
    node _io_out_5_req_valid_T_2 = and(_io_out_5_req_valid_T, _io_out_5_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55527:34]
    connect io.out[5].req.valid, _io_out_5_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55528:7]
    connect io.out[5].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55529:7]
    node _io_out_6_req_valid_T = and(outSelVec[6], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55531:32]
    node _io_out_6_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55533:34]
    node _io_out_6_req_valid_T_2 = and(_io_out_6_req_valid_T, _io_out_6_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55535:34]
    connect io.out[6].req.valid, _io_out_6_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55536:7]
    connect io.out[6].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55537:7]
    node _io_out_0_resp_ready_T = and(outSelRespVec[0], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55539:33]
    node _io_out_0_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55541:35]
    node _io_out_0_resp_ready_T_2 = and(_io_out_0_resp_ready_T, _io_out_0_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55543:35]
    connect io.out[0].resp.ready, _io_out_0_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55544:7]
    node _io_out_1_resp_ready_T = and(outSelRespVec[1], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55546:33]
    node _io_out_1_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55548:35]
    node _io_out_1_resp_ready_T_2 = and(_io_out_1_resp_ready_T, _io_out_1_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55550:35]
    connect io.out[1].resp.ready, _io_out_1_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55551:7]
    node _io_out_2_resp_ready_T = and(outSelRespVec[2], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55553:33]
    node _io_out_2_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55555:35]
    node _io_out_2_resp_ready_T_2 = and(_io_out_2_resp_ready_T, _io_out_2_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55557:35]
    connect io.out[2].resp.ready, _io_out_2_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55558:7]
    node _io_out_3_resp_ready_T = and(outSelRespVec[3], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55560:33]
    node _io_out_3_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55562:35]
    node _io_out_3_resp_ready_T_2 = and(_io_out_3_resp_ready_T, _io_out_3_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55564:35]
    connect io.out[3].resp.ready, _io_out_3_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55565:7]
    node _io_out_4_resp_ready_T = and(outSelRespVec[4], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55567:33]
    node _io_out_4_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55569:35]
    node _io_out_4_resp_ready_T_2 = and(_io_out_4_resp_ready_T, _io_out_4_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55571:35]
    connect io.out[4].resp.ready, _io_out_4_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55572:7]
    node _io_out_5_resp_ready_T = and(outSelRespVec[5], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55574:33]
    node _io_out_5_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55576:35]
    node _io_out_5_resp_ready_T_2 = and(_io_out_5_resp_ready_T, _io_out_5_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55578:35]
    connect io.out[5].resp.ready, _io_out_5_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55579:7]
    node _io_out_6_resp_ready_T = and(outSelRespVec[6], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55581:33]
    node _io_out_6_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55583:35]
    node _io_out_6_resp_ready_T_2 = and(_io_out_6_resp_ready_T, _io_out_6_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55585:35]
    connect io.out[6].resp.ready, _io_out_6_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55586:7]
    node _io_in_resp_valid_T = mux(outSelRespVec[0], io.out[0].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55588:30]
    node _io_in_resp_valid_T_1 = mux(outSelRespVec[1], io.out[1].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55590:32]
    node _io_in_resp_valid_T_2 = mux(outSelRespVec[2], io.out[2].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55592:32]
    node _io_in_resp_valid_T_3 = mux(outSelRespVec[3], io.out[3].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55594:32]
    node _io_in_resp_valid_T_4 = mux(outSelRespVec[4], io.out[4].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55596:32]
    node _io_in_resp_valid_T_5 = mux(outSelRespVec[5], io.out[5].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55598:32]
    node _io_in_resp_valid_T_6 = mux(outSelRespVec[6], io.out[6].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55600:32]
    node _io_in_resp_valid_T_7 = or(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/NutShell.fir.opt.mlir 55602:32]
    node _io_in_resp_valid_T_8 = or(_io_in_resp_valid_T_7, _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 55604:32]
    node _io_in_resp_valid_T_9 = or(_io_in_resp_valid_T_8, _io_in_resp_valid_T_3) @[build/NutShell.fir.opt.mlir 55606:32]
    node _io_in_resp_valid_T_10 = or(_io_in_resp_valid_T_9, _io_in_resp_valid_T_4) @[build/NutShell.fir.opt.mlir 55608:33]
    node _io_in_resp_valid_T_11 = or(_io_in_resp_valid_T_10, _io_in_resp_valid_T_5) @[build/NutShell.fir.opt.mlir 55610:33]
    node _io_in_resp_valid_T_12 = or(_io_in_resp_valid_T_11, _io_in_resp_valid_T_6) @[build/NutShell.fir.opt.mlir 55612:33]
    wire _io_in_resp_valid_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 55613:33]
    connect _io_in_resp_valid_WIRE, _io_in_resp_valid_T_12 @[build/NutShell.fir.opt.mlir 55614:7]
    node _io_in_resp_valid_T_13 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 55616:33]
    node _io_in_resp_valid_T_14 = or(_io_in_resp_valid_WIRE, _io_in_resp_valid_T_13) @[build/NutShell.fir.opt.mlir 55618:33]
    connect io.in.resp.valid, _io_in_resp_valid_T_14 @[build/NutShell.fir.opt.mlir 55619:7]
    wire _io_in_resp_bits_WIRE : { cmd : UInt<4>, rdata : UInt<64> } @[build/NutShell.fir.opt.mlir 55620:32]
    node _io_in_resp_bits_T = mux(outSelRespVec[0], io.out[0].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55624:29]
    node _io_in_resp_bits_T_1 = mux(outSelRespVec[1], io.out[1].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55626:31]
    node _io_in_resp_bits_T_2 = mux(outSelRespVec[2], io.out[2].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55628:31]
    node _io_in_resp_bits_T_3 = mux(outSelRespVec[3], io.out[3].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55630:31]
    node _io_in_resp_bits_T_4 = mux(outSelRespVec[4], io.out[4].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55632:31]
    node _io_in_resp_bits_T_5 = mux(outSelRespVec[5], io.out[5].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55634:31]
    node _io_in_resp_bits_T_6 = mux(outSelRespVec[6], io.out[6].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55636:31]
    node _io_in_resp_bits_T_7 = or(_io_in_resp_bits_T, _io_in_resp_bits_T_1) @[build/NutShell.fir.opt.mlir 55638:31]
    node _io_in_resp_bits_T_8 = or(_io_in_resp_bits_T_7, _io_in_resp_bits_T_2) @[build/NutShell.fir.opt.mlir 55640:31]
    node _io_in_resp_bits_T_9 = or(_io_in_resp_bits_T_8, _io_in_resp_bits_T_3) @[build/NutShell.fir.opt.mlir 55642:31]
    node _io_in_resp_bits_T_10 = or(_io_in_resp_bits_T_9, _io_in_resp_bits_T_4) @[build/NutShell.fir.opt.mlir 55644:32]
    node _io_in_resp_bits_T_11 = or(_io_in_resp_bits_T_10, _io_in_resp_bits_T_5) @[build/NutShell.fir.opt.mlir 55646:32]
    node _io_in_resp_bits_T_12 = or(_io_in_resp_bits_T_11, _io_in_resp_bits_T_6) @[build/NutShell.fir.opt.mlir 55648:32]
    wire _io_in_resp_bits_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 55649:34]
    connect _io_in_resp_bits_WIRE_1, _io_in_resp_bits_T_12 @[build/NutShell.fir.opt.mlir 55650:7]
    connect _io_in_resp_bits_WIRE.rdata, _io_in_resp_bits_WIRE_1 @[build/NutShell.fir.opt.mlir 55651:7]
    node _io_in_resp_bits_T_13 = mux(outSelRespVec[0], io.out[0].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55653:32]
    node _io_in_resp_bits_T_14 = mux(outSelRespVec[1], io.out[1].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55655:32]
    node _io_in_resp_bits_T_15 = mux(outSelRespVec[2], io.out[2].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55657:32]
    node _io_in_resp_bits_T_16 = mux(outSelRespVec[3], io.out[3].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55659:32]
    node _io_in_resp_bits_T_17 = mux(outSelRespVec[4], io.out[4].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55661:32]
    node _io_in_resp_bits_T_18 = mux(outSelRespVec[5], io.out[5].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55663:32]
    node _io_in_resp_bits_T_19 = mux(outSelRespVec[6], io.out[6].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55665:32]
    node _io_in_resp_bits_T_20 = or(_io_in_resp_bits_T_13, _io_in_resp_bits_T_14) @[build/NutShell.fir.opt.mlir 55667:32]
    node _io_in_resp_bits_T_21 = or(_io_in_resp_bits_T_20, _io_in_resp_bits_T_15) @[build/NutShell.fir.opt.mlir 55669:32]
    node _io_in_resp_bits_T_22 = or(_io_in_resp_bits_T_21, _io_in_resp_bits_T_16) @[build/NutShell.fir.opt.mlir 55671:32]
    node _io_in_resp_bits_T_23 = or(_io_in_resp_bits_T_22, _io_in_resp_bits_T_17) @[build/NutShell.fir.opt.mlir 55673:32]
    node _io_in_resp_bits_T_24 = or(_io_in_resp_bits_T_23, _io_in_resp_bits_T_18) @[build/NutShell.fir.opt.mlir 55675:32]
    node _io_in_resp_bits_T_25 = or(_io_in_resp_bits_T_24, _io_in_resp_bits_T_19) @[build/NutShell.fir.opt.mlir 55677:32]
    wire _io_in_resp_bits_WIRE_2 : UInt<4> @[build/NutShell.fir.opt.mlir 55678:34]
    connect _io_in_resp_bits_WIRE_2, _io_in_resp_bits_T_25 @[build/NutShell.fir.opt.mlir 55679:7]
    connect _io_in_resp_bits_WIRE.cmd, _io_in_resp_bits_WIRE_2 @[build/NutShell.fir.opt.mlir 55680:7]
    connect io.in.resp.bits, _io_in_resp_bits_WIRE @[build/NutShell.fir.opt.mlir 55681:7]
    inst LogPerfHelper_1 of LogPerfHelper_49 @[build/NutShell.fir.opt.mlir 55682:107]
    wire control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 55683:20]
    connect control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 55688:7]
    connect control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 55689:7]
    connect control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 55690:7]
    connect control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 55691:7]
    node _T_13 = and(UInt<1>(1), control_1.logEnable) @[build/NutShell.fir.opt.mlir 55693:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 55694:7]
      node _T_14 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55696:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 55697:9]
        regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55698:18]
        node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55700:21]
        node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 55702:21]
        connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 55703:11]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55705:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55707:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 55708:11]
          skip @[build/NutShell.fir.opt.mlir 55709:13]
      node _T_17 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55713:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 55714:9]
        regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55715:18]
        node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55717:21]
        node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 55719:21]
        connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 55720:11]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55722:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55724:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 55725:11]
          skip @[build/NutShell.fir.opt.mlir 55726:13]

  module AXI4UART : @[build/NutShell.fir.opt.mlir 55731:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55731:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55731:66]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 55731:93]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 55768:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 55770:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 55772:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 55774:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 55776:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 55778:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 55780:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 55782:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55786:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55788:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55790:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55792:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55794:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55796:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55798:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55800:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 55802:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 55804:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 55806:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 55808:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 55810:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 55812:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 55814:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 55815:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 55816:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 55817:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55819:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55821:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55824:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55826:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 55827:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55829:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 55831:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55833:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55836:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 55838:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 55839:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55842:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55844:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55845:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 55846:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55848:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55850:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 55852:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 55854:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 55855:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55857:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 55859:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 55861:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55863:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55864:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 55865:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55867:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 55869:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55871:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 55873:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 55874:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 55875:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 55877:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 55879:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55880:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 55881:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55883:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 55885:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55887:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55890:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 55891:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 55893:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 55894:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55896:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 55898:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55900:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 55902:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55903:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 55904:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55906:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 55908:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55910:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 55912:7]
    regreset rxfifo : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 55914:17]
    reg txfifo : UInt<32>, clock @[build/NutShell.fir.opt.mlir 55915:17]
    regreset stat : UInt<32>, clock, reset, UInt<32>(1) @[build/NutShell.fir.opt.mlir 55917:15]
    regreset ctrl : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 55918:15]
    node _io_extra_out_valid_T = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 55920:32]
    node _io_extra_out_valid_T_1 = eq(_io_extra_out_valid_T, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 55923:34]
    node _io_extra_out_valid_T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 55925:34]
    node _io_extra_out_valid_T_3 = and(_io_extra_out_valid_T_1, _io_extra_out_valid_T_2) @[build/NutShell.fir.opt.mlir 55927:34]
    connect io.extra.out.valid, _io_extra_out_valid_T_3 @[build/NutShell.fir.opt.mlir 55928:7]
    node _io_extra_out_ch_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 55930:29]
    connect io.extra.out.ch, _io_extra_out_ch_T @[build/NutShell.fir.opt.mlir 55931:7]
    node _io_extra_in_valid_T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 55933:31]
    node _io_extra_in_valid_T_1 = eq(_io_extra_in_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55935:33]
    node _io_extra_in_valid_T_2 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55937:33]
    node _io_extra_in_valid_T_3 = and(_io_extra_in_valid_T_1, _io_extra_in_valid_T_2) @[build/NutShell.fir.opt.mlir 55939:33]
    connect io.extra.in.valid, _io_extra_in_valid_T_3 @[build/NutShell.fir.opt.mlir 55940:7]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 55942:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 55944:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 55946:15]
    node _T_3 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 55948:15]
    node _T_4 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 55950:15]
    node _T_5 = dshr(io.in.w.bits.strb, _T_4) @[build/NutShell.fir.opt.mlir 55952:15]
    node _T_6 = bits(_T_5, 0, 0) @[build/NutShell.fir.opt.mlir 55954:15]
    node _T_7 = bits(_T_5, 1, 1) @[build/NutShell.fir.opt.mlir 55956:15]
    node _T_8 = bits(_T_5, 2, 2) @[build/NutShell.fir.opt.mlir 55958:15]
    node _T_9 = bits(_T_5, 3, 3) @[build/NutShell.fir.opt.mlir 55960:15]
    node _T_10 = bits(_T_5, 4, 4) @[build/NutShell.fir.opt.mlir 55962:16]
    node _T_11 = bits(_T_5, 5, 5) @[build/NutShell.fir.opt.mlir 55964:16]
    node _T_12 = bits(_T_5, 6, 6) @[build/NutShell.fir.opt.mlir 55966:16]
    node _T_13 = bits(_T_5, 7, 7) @[build/NutShell.fir.opt.mlir 55968:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55970:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55972:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55974:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55976:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55978:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55980:16]
    node _T_20 = mux(_T_12, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55982:16]
    node _T_21 = mux(_T_13, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55984:16]
    node lo_lo = cat(_T_15, _T_14) @[build/NutShell.fir.opt.mlir 55986:16]
    node lo_hi = cat(_T_17, _T_16) @[build/NutShell.fir.opt.mlir 55988:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 55990:13]
    node hi_lo = cat(_T_19, _T_18) @[build/NutShell.fir.opt.mlir 55992:16]
    node hi_hi = cat(_T_21, _T_20) @[build/NutShell.fir.opt.mlir 55994:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 55996:13]
    node _T_22 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 55998:16]
    node _T_23 = bits(_T_22, 31, 0) @[build/NutShell.fir.opt.mlir 56000:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 56002:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 56004:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<4>(8), _T) @[build/NutShell.fir.opt.mlir 56007:33]
    node _io_in_r_bits_data_T_3 = eq(UInt<4>(12), _T) @[build/NutShell.fir.opt.mlir 56010:33]
    node _io_in_r_bits_data_T_4 = mux(_io_in_r_bits_data_T, io.extra.in.ch, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56012:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T_1, txfifo, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56014:33]
    node _io_in_r_bits_data_T_6 = mux(_io_in_r_bits_data_T_2, stat, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56016:33]
    node _io_in_r_bits_data_T_7 = mux(_io_in_r_bits_data_T_3, ctrl, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56018:33]
    node _io_in_r_bits_data_T_8 = or(_io_in_r_bits_data_T_4, _io_in_r_bits_data_T_5) @[build/NutShell.fir.opt.mlir 56020:33]
    node _io_in_r_bits_data_T_9 = or(_io_in_r_bits_data_T_8, _io_in_r_bits_data_T_6) @[build/NutShell.fir.opt.mlir 56022:33]
    node _io_in_r_bits_data_T_10 = or(_io_in_r_bits_data_T_9, _io_in_r_bits_data_T_7) @[build/NutShell.fir.opt.mlir 56024:34]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 56025:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_10 @[build/NutShell.fir.opt.mlir 56026:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 56028:7]
    node _T_24 = eq(_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 56030:16]
    node _T_25 = and(_T_2, _T_24) @[build/NutShell.fir.opt.mlir 56032:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 56033:7]
      node _txfifo_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56035:22]
      node _txfifo_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56037:24]
      node _txfifo_T_2 = and(txfifo, _txfifo_T_1) @[build/NutShell.fir.opt.mlir 56039:24]
      node _txfifo_T_3 = or(_txfifo_T, _txfifo_T_2) @[build/NutShell.fir.opt.mlir 56041:24]
      connect txfifo, _txfifo_T_3 @[build/NutShell.fir.opt.mlir 56042:9]
    node _T_26 = eq(_T_1, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 56045:16]
    node _T_27 = and(_T_2, _T_26) @[build/NutShell.fir.opt.mlir 56047:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 56048:7]
      node _stat_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56050:20]
      node _stat_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56052:22]
      node _stat_T_2 = and(stat, _stat_T_1) @[build/NutShell.fir.opt.mlir 56054:22]
      node _stat_T_3 = or(_stat_T, _stat_T_2) @[build/NutShell.fir.opt.mlir 56056:22]
      connect stat, _stat_T_3 @[build/NutShell.fir.opt.mlir 56057:9]
    node _T_28 = eq(_T_1, UInt<4>(12)) @[build/NutShell.fir.opt.mlir 56060:16]
    node _T_29 = and(_T_2, _T_28) @[build/NutShell.fir.opt.mlir 56062:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 56063:7]
      node _ctrl_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56065:20]
      node _ctrl_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56067:22]
      node _ctrl_T_2 = and(ctrl, _ctrl_T_1) @[build/NutShell.fir.opt.mlir 56069:22]
      node _ctrl_T_3 = or(_ctrl_T, _ctrl_T_2) @[build/NutShell.fir.opt.mlir 56071:22]
      connect ctrl, _ctrl_T_3 @[build/NutShell.fir.opt.mlir 56072:9]

  module VGACtrl : @[build/NutShell.fir.opt.mlir 56075:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56075:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56075:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { sync : UInt<1> } } @[build/NutShell.fir.opt.mlir 56075:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56106:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56108:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56110:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56112:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56114:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56116:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56118:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56120:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56124:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56126:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56128:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56130:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56132:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56134:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56136:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56138:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 56140:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 56142:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 56144:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 56146:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 56148:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 56150:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 56152:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 56153:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 56154:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 56155:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56157:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56159:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56162:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56164:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 56165:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56167:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 56169:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56171:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56174:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 56176:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 56177:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56180:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56182:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56183:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 56184:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56186:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56188:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 56190:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 56192:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 56193:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56195:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 56197:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 56199:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56201:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56202:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 56203:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56205:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 56207:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56209:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 56211:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 56212:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 56213:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56215:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56217:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56218:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 56219:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56221:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 56223:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56225:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56228:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 56229:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 56231:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 56232:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56234:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56236:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56238:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56240:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56241:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 56242:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56244:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 56246:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56248:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 56250:7]
    node fbSizeReg = cat(UInt<16>(400), UInt<16>(300)) @[build/NutShell.fir.opt.mlir 56254:20]
    node sync = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56256:15]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 56258:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 56260:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56262:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56264:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56266:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56268:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56270:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56272:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56274:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56276:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56278:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56280:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56282:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56284:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56286:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56288:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56290:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56292:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56294:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 56296:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 56298:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 56300:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 56302:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 56304:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 56306:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 56308:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 56310:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 56313:33]
    node _io_in_r_bits_data_T_2 = mux(_io_in_r_bits_data_T, fbSizeReg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56315:33]
    node _io_in_r_bits_data_T_3 = mux(_io_in_r_bits_data_T_1, sync, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56317:33]
    node _io_in_r_bits_data_T_4 = or(_io_in_r_bits_data_T_2, _io_in_r_bits_data_T_3) @[build/NutShell.fir.opt.mlir 56319:33]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 56320:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_4 @[build/NutShell.fir.opt.mlir 56321:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 56323:7]
    connect io.extra.sync, sync @[build/NutShell.fir.opt.mlir 56324:7]

  module AXI4RAM_1 : @[build/NutShell.fir.opt.mlir 56326:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56326:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56326:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 56326:94]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56362:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56364:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56366:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56368:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56370:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56372:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56374:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56376:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56380:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56382:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56384:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56386:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56388:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56390:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56392:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56394:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 56396:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 56398:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 56400:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 56402:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 56404:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 56406:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 56408:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 56409:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 56410:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 56411:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56413:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56415:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56418:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56420:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 56421:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56423:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 56425:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56427:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56430:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 56432:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 56433:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56436:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56438:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56439:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 56440:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56442:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56444:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 56446:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 56448:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 56449:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56451:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 56453:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 56455:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56457:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56458:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 56459:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56461:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 56463:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56465:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 56467:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 56468:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 56469:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56471:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56473:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56474:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 56475:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56477:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 56479:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56481:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56484:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 56485:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 56487:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 56488:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56490:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56492:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56494:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56496:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56497:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 56498:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56500:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 56502:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56504:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 56506:7]
    node _wIdx_T = bits(waddr, 18, 3) @[build/NutShell.fir.opt.mlir 56508:18]
    node _wIdx_T_1 = add(_wIdx_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56510:20]
    node wIdx = tail(_wIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 56512:15]
    node _rIdx_T = bits(raddr, 18, 3) @[build/NutShell.fir.opt.mlir 56514:18]
    node _rIdx_T_1 = add(_rIdx_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56516:20]
    node rIdx = tail(_rIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 56518:15]
    node _wen_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56520:17]
    node _wen_T_1 = lt(wIdx, UInt<16>(60000)) @[build/NutShell.fir.opt.mlir 56523:19]
    node wen = and(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 56525:14]
    mem rdata_mem : @[build/NutShell.fir.opt.mlir 56526:58]
      data-type => UInt<8>[8]
      depth => 60000
      read-latency => 0
      write-latency => 1
      reader => rdata_MPORT_1
      writer => rdata_MPORT
      read-under-write => undefined
    invalidate rdata_mem.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 56528:7]
    connect rdata_mem.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56530:7]
    invalidate rdata_mem.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 56532:7]
    invalidate rdata_mem.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 56534:7]
    invalidate rdata_mem.rdata_MPORT.mask @[build/NutShell.fir.opt.mlir 56536:7]
    invalidate rdata_mem.rdata_MPORT_1.addr @[build/NutShell.fir.opt.mlir 56538:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56540:7]
    invalidate rdata_mem.rdata_MPORT_1.clk @[build/NutShell.fir.opt.mlir 56542:7]
    node _rdata_wdata_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 56569:25]
    node _rdata_wdata_T_1 = bits(io.in.w.bits.data, 15, 8) @[build/NutShell.fir.opt.mlir 56571:27]
    node _rdata_wdata_T_2 = bits(io.in.w.bits.data, 23, 16) @[build/NutShell.fir.opt.mlir 56573:27]
    node _rdata_wdata_T_3 = bits(io.in.w.bits.data, 31, 24) @[build/NutShell.fir.opt.mlir 56575:27]
    node _rdata_wdata_T_4 = bits(io.in.w.bits.data, 39, 32) @[build/NutShell.fir.opt.mlir 56577:27]
    node _rdata_wdata_T_5 = bits(io.in.w.bits.data, 47, 40) @[build/NutShell.fir.opt.mlir 56579:27]
    node _rdata_wdata_T_6 = bits(io.in.w.bits.data, 55, 48) @[build/NutShell.fir.opt.mlir 56581:27]
    node _rdata_wdata_T_7 = bits(io.in.w.bits.data, 63, 56) @[build/NutShell.fir.opt.mlir 56583:27]
    wire rdata_wdata : UInt<8>[8] @[build/NutShell.fir.opt.mlir 56584:22]
    connect rdata_wdata[0], _rdata_wdata_T @[build/NutShell.fir.opt.mlir 56593:7]
    connect rdata_wdata[1], _rdata_wdata_T_1 @[build/NutShell.fir.opt.mlir 56594:7]
    connect rdata_wdata[2], _rdata_wdata_T_2 @[build/NutShell.fir.opt.mlir 56595:7]
    connect rdata_wdata[3], _rdata_wdata_T_3 @[build/NutShell.fir.opt.mlir 56596:7]
    connect rdata_wdata[4], _rdata_wdata_T_4 @[build/NutShell.fir.opt.mlir 56597:7]
    connect rdata_wdata[5], _rdata_wdata_T_5 @[build/NutShell.fir.opt.mlir 56598:7]
    connect rdata_wdata[6], _rdata_wdata_T_6 @[build/NutShell.fir.opt.mlir 56599:7]
    connect rdata_wdata[7], _rdata_wdata_T_7 @[build/NutShell.fir.opt.mlir 56600:7]
    when wen : @[build/NutShell.fir.opt.mlir 56601:7]
      node _rdata_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56603:21]
      node _rdata_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56605:23]
      node _rdata_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56607:23]
      node _rdata_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56609:23]
      node _rdata_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56611:23]
      node _rdata_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56613:23]
      node _rdata_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56615:23]
      node _rdata_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56617:23]
      connect rdata_mem.rdata_MPORT.addr, wIdx @[build/NutShell.fir.opt.mlir 56618:9]
      connect rdata_mem.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56619:9]
      connect rdata_mem.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 56620:9]
      connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56622:9]
      connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56624:9]
      connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56626:9]
      connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56628:9]
      connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56630:9]
      connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56632:9]
      connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56634:9]
      connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56636:9]
      when _rdata_T : @[build/NutShell.fir.opt.mlir 56637:9]
        connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56638:11]
        connect rdata_mem.rdata_MPORT.data[0], rdata_wdata[0] @[build/NutShell.fir.opt.mlir 56639:11]
      when _rdata_T_1 : @[build/NutShell.fir.opt.mlir 56641:9]
        connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56642:11]
        connect rdata_mem.rdata_MPORT.data[1], rdata_wdata[1] @[build/NutShell.fir.opt.mlir 56643:11]
      when _rdata_T_2 : @[build/NutShell.fir.opt.mlir 56645:9]
        connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56646:11]
        connect rdata_mem.rdata_MPORT.data[2], rdata_wdata[2] @[build/NutShell.fir.opt.mlir 56647:11]
      when _rdata_T_3 : @[build/NutShell.fir.opt.mlir 56649:9]
        connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56650:11]
        connect rdata_mem.rdata_MPORT.data[3], rdata_wdata[3] @[build/NutShell.fir.opt.mlir 56651:11]
      when _rdata_T_4 : @[build/NutShell.fir.opt.mlir 56653:9]
        connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56654:11]
        connect rdata_mem.rdata_MPORT.data[4], rdata_wdata[4] @[build/NutShell.fir.opt.mlir 56655:11]
      when _rdata_T_5 : @[build/NutShell.fir.opt.mlir 56657:9]
        connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56658:11]
        connect rdata_mem.rdata_MPORT.data[5], rdata_wdata[5] @[build/NutShell.fir.opt.mlir 56659:11]
      when _rdata_T_6 : @[build/NutShell.fir.opt.mlir 56661:9]
        connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56662:11]
        connect rdata_mem.rdata_MPORT.data[6], rdata_wdata[6] @[build/NutShell.fir.opt.mlir 56663:11]
      when _rdata_T_7 : @[build/NutShell.fir.opt.mlir 56665:9]
        connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56666:11]
        connect rdata_mem.rdata_MPORT.data[7], rdata_wdata[7] @[build/NutShell.fir.opt.mlir 56667:11]
    connect rdata_mem.rdata_MPORT_1.addr, rIdx @[build/NutShell.fir.opt.mlir 56670:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56671:7]
    connect rdata_mem.rdata_MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 56672:7]
    node rdata_lo_lo = cat(rdata_mem.rdata_MPORT_1.data[1], rdata_mem.rdata_MPORT_1.data[0]) @[build/NutShell.fir.opt.mlir 56674:22]
    node rdata_lo_hi = cat(rdata_mem.rdata_MPORT_1.data[3], rdata_mem.rdata_MPORT_1.data[2]) @[build/NutShell.fir.opt.mlir 56676:22]
    node rdata_lo = cat(rdata_lo_hi, rdata_lo_lo) @[build/NutShell.fir.opt.mlir 56678:19]
    node rdata_hi_lo = cat(rdata_mem.rdata_MPORT_1.data[5], rdata_mem.rdata_MPORT_1.data[4]) @[build/NutShell.fir.opt.mlir 56680:22]
    node rdata_hi_hi = cat(rdata_mem.rdata_MPORT_1.data[7], rdata_mem.rdata_MPORT_1.data[6]) @[build/NutShell.fir.opt.mlir 56682:22]
    node rdata_hi = cat(rdata_hi_hi, rdata_hi_lo) @[build/NutShell.fir.opt.mlir 56684:19]
    node _rdata_T_8 = cat(rdata_hi, rdata_lo) @[build/NutShell.fir.opt.mlir 56686:21]
    reg rdata : UInt<64>, clock @[build/NutShell.fir.opt.mlir 56687:16]
    when ren : @[build/NutShell.fir.opt.mlir 56688:7]
      connect rdata, _rdata_T_8 @[build/NutShell.fir.opt.mlir 56689:9]
    connect io.in.r.bits.data, rdata @[build/NutShell.fir.opt.mlir 56691:7]

  extmodule FBHelper : @[build/NutShell.fir.opt.mlir 56693:5]
    input clk : Clock @[build/NutShell.fir.opt.mlir 56693:43]
    input valid : UInt<1> @[build/NutShell.fir.opt.mlir 56693:66]
    input pixel : UInt<32> @[build/NutShell.fir.opt.mlir 56693:93]
    input sync : UInt<1> @[build/NutShell.fir.opt.mlir 56693:121]
    defname = FBHelper

  module AXI4VGA : @[build/NutShell.fir.opt.mlir 56694:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56694:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56694:65]
    output io : { in : { flip fb : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, flip ctrl : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } }, vga : { rgb : UInt<24>, hsync : UInt<1>, vsync : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 56694:92]

    inst ctrl of VGACtrl @[build/NutShell.fir.opt.mlir 56720:44]
    connect ctrl.clock, clock @[build/NutShell.fir.opt.mlir 56724:7]
    connect ctrl.reset, reset @[build/NutShell.fir.opt.mlir 56725:7]
    connect io.in.ctrl.aw.ready, ctrl.io.in.aw.ready @[build/NutShell.fir.opt.mlir 56730:7]
    connect ctrl.io.in.aw.valid, io.in.ctrl.aw.valid @[build/NutShell.fir.opt.mlir 56733:7]
    connect ctrl.io.in.aw.bits, io.in.ctrl.aw.bits @[build/NutShell.fir.opt.mlir 56736:7]
    connect io.in.ctrl.w.ready, ctrl.io.in.w.ready @[build/NutShell.fir.opt.mlir 56741:7]
    connect ctrl.io.in.w.valid, io.in.ctrl.w.valid @[build/NutShell.fir.opt.mlir 56744:7]
    connect ctrl.io.in.w.bits, io.in.ctrl.w.bits @[build/NutShell.fir.opt.mlir 56747:7]
    connect ctrl.io.in.b.ready, io.in.ctrl.b.ready @[build/NutShell.fir.opt.mlir 56752:7]
    connect io.in.ctrl.b.valid, ctrl.io.in.b.valid @[build/NutShell.fir.opt.mlir 56755:7]
    connect io.in.ctrl.b.bits, ctrl.io.in.b.bits @[build/NutShell.fir.opt.mlir 56758:7]
    connect io.in.ctrl.ar.ready, ctrl.io.in.ar.ready @[build/NutShell.fir.opt.mlir 56763:7]
    connect ctrl.io.in.ar.valid, io.in.ctrl.ar.valid @[build/NutShell.fir.opt.mlir 56766:7]
    connect ctrl.io.in.ar.bits, io.in.ctrl.ar.bits @[build/NutShell.fir.opt.mlir 56769:7]
    connect ctrl.io.in.r.ready, io.in.ctrl.r.ready @[build/NutShell.fir.opt.mlir 56774:7]
    connect io.in.ctrl.r.valid, ctrl.io.in.r.valid @[build/NutShell.fir.opt.mlir 56777:7]
    connect io.in.ctrl.r.bits, ctrl.io.in.r.bits @[build/NutShell.fir.opt.mlir 56780:7]
    inst fb of AXI4RAM_1 @[build/NutShell.fir.opt.mlir 56781:38]
    connect fb.clock, clock @[build/NutShell.fir.opt.mlir 56799:7]
    connect fb.reset, reset @[build/NutShell.fir.opt.mlir 56800:7]
    connect io.in.fb.aw.ready, fb.io.in.aw.ready @[build/NutShell.fir.opt.mlir 56803:7]
    connect fb.io.in.aw.valid, io.in.fb.aw.valid @[build/NutShell.fir.opt.mlir 56806:7]
    connect fb.io.in.aw.bits, io.in.fb.aw.bits @[build/NutShell.fir.opt.mlir 56809:7]
    connect io.in.fb.w.ready, fb.io.in.w.ready @[build/NutShell.fir.opt.mlir 56812:7]
    connect fb.io.in.w.valid, io.in.fb.w.valid @[build/NutShell.fir.opt.mlir 56815:7]
    connect fb.io.in.w.bits, io.in.fb.w.bits @[build/NutShell.fir.opt.mlir 56818:7]
    connect io.in.fb.b.bits, fb.io.in.b.bits @[build/NutShell.fir.opt.mlir 56819:7]
    connect io.in.fb.b.valid, fb.io.in.b.valid @[build/NutShell.fir.opt.mlir 56820:7]
    connect fb.io.in.b.ready, io.in.fb.b.ready @[build/NutShell.fir.opt.mlir 56821:7]
    connect io.in.fb.ar.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56824:7]
    connect io.in.fb.r.bits.data, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 56828:7]
    connect io.in.fb.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56831:7]
    node _io_in_fb_r_valid_T = and(io.in.fb.ar.ready, io.in.fb.ar.valid) @[build/NutShell.fir.opt.mlir 56833:30]
    node _io_in_fb_r_valid_T_1 = and(io.in.fb.r.ready, io.in.fb.r.valid) @[build/NutShell.fir.opt.mlir 56835:32]
    regreset io_in_fb_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56836:29]
    when _io_in_fb_r_valid_T_1 : @[build/NutShell.fir.opt.mlir 56837:7]
      connect io_in_fb_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56839:9]
    when _io_in_fb_r_valid_T : @[build/NutShell.fir.opt.mlir 56841:7]
      connect io_in_fb_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56843:9]
    connect io.in.fb.r.valid, io_in_fb_r_valid_r @[build/NutShell.fir.opt.mlir 56845:7]
    regreset vga_fb_used : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56846:22]
    node _T = or(io.in.fb.aw.valid, io.in.fb.w.valid) @[build/NutShell.fir.opt.mlir 56848:13]
    node _T_1 = or(_T, io.in.fb.ar.valid) @[build/NutShell.fir.opt.mlir 56850:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 56851:7]
      connect vga_fb_used, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56853:9]
    regreset hCounter : UInt<11>, clock, reset, UInt<11>(0) @[build/NutShell.fir.opt.mlir 56856:19]
    wire hFinish : UInt<1> @[build/NutShell.fir.opt.mlir 56857:18]
    connect hFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56859:7]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 56861:7]
      node wrap_wrap = eq(hCounter, UInt<11>(1055)) @[build/NutShell.fir.opt.mlir 56863:22]
      node _wrap_value_T = add(hCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56865:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 56867:28]
      connect hCounter, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 56868:9]
      when wrap_wrap : @[build/NutShell.fir.opt.mlir 56869:9]
        connect hCounter, pad(UInt<1>(0), 11) @[build/NutShell.fir.opt.mlir 56872:11]
      connect hFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 56874:9]
    regreset vCounter : UInt<10>, clock, reset, UInt<10>(0) @[build/NutShell.fir.opt.mlir 56877:19]
    wire vFinish : UInt<1> @[build/NutShell.fir.opt.mlir 56878:18]
    connect vFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56880:7]
    when hFinish : @[build/NutShell.fir.opt.mlir 56882:7]
      node wrap_wrap_1 = eq(vCounter, UInt<10>(627)) @[build/NutShell.fir.opt.mlir 56884:24]
      node _wrap_value_T_2 = add(vCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56886:28]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[build/NutShell.fir.opt.mlir 56888:28]
      connect vCounter, _wrap_value_T_3 @[build/NutShell.fir.opt.mlir 56889:9]
      when wrap_wrap_1 : @[build/NutShell.fir.opt.mlir 56890:9]
        connect vCounter, pad(UInt<1>(0), 10) @[build/NutShell.fir.opt.mlir 56893:11]
      connect vFinish, wrap_wrap_1 @[build/NutShell.fir.opt.mlir 56895:9]
    node _io_vga_hsync_T = geq(hCounter, UInt<6>(40)) @[build/NutShell.fir.opt.mlir 56899:26]
    connect io.vga.hsync, _io_vga_hsync_T @[build/NutShell.fir.opt.mlir 56900:7]
    node _io_vga_vsync_T = geq(vCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56902:26]
    connect io.vga.vsync, _io_vga_vsync_T @[build/NutShell.fir.opt.mlir 56903:7]
    node _hInRange_T = geq(hCounter, UInt<8>(168)) @[build/NutShell.fir.opt.mlir 56906:22]
    node _hInRange_T_1 = lt(hCounter, UInt<10>(968)) @[build/NutShell.fir.opt.mlir 56909:24]
    node hInRange = and(_hInRange_T, _hInRange_T_1) @[build/NutShell.fir.opt.mlir 56911:19]
    node _vInRange_T = geq(vCounter, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 56914:22]
    node _vInRange_T_1 = lt(vCounter, UInt<10>(605)) @[build/NutShell.fir.opt.mlir 56917:24]
    node vInRange = and(_vInRange_T, _vInRange_T_1) @[build/NutShell.fir.opt.mlir 56919:19]
    node _io_vga_valid_T = and(hInRange, vInRange) @[build/NutShell.fir.opt.mlir 56921:26]
    connect io.vga.valid, _io_vga_valid_T @[build/NutShell.fir.opt.mlir 56922:7]
    node hCounterIsOdd = bits(hCounter, 0, 0) @[build/NutShell.fir.opt.mlir 56924:24]
    node _hCounterIs2_T = bits(hCounter, 1, 0) @[build/NutShell.fir.opt.mlir 56926:25]
    node hCounterIs2 = eq(_hCounterIs2_T, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 56929:22]
    node vCounterIsOdd = bits(vCounter, 0, 0) @[build/NutShell.fir.opt.mlir 56931:24]
    node _nextPixel_T = geq(hCounter, UInt<8>(167)) @[build/NutShell.fir.opt.mlir 56934:23]
    node _nextPixel_T_1 = lt(hCounter, UInt<10>(967)) @[build/NutShell.fir.opt.mlir 56937:25]
    node _nextPixel_T_2 = and(_nextPixel_T, _nextPixel_T_1) @[build/NutShell.fir.opt.mlir 56939:25]
    node _nextPixel_T_3 = and(_nextPixel_T_2, vInRange) @[build/NutShell.fir.opt.mlir 56941:25]
    node nextPixel = and(_nextPixel_T_3, hCounterIsOdd) @[build/NutShell.fir.opt.mlir 56943:20]
    node _fbPixelAddrV0_T = eq(vCounterIsOdd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56945:27]
    node _fbPixelAddrV0_T_1 = and(nextPixel, _fbPixelAddrV0_T) @[build/NutShell.fir.opt.mlir 56947:29]
    regreset fbPixelAddrV0 : UInt<17>, clock, reset, UInt<17>(0) @[build/NutShell.fir.opt.mlir 56949:24]
    wire fbPixelAddrV0_wrap : UInt<1> @[build/NutShell.fir.opt.mlir 56950:29]
    connect fbPixelAddrV0_wrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56952:7]
    when _fbPixelAddrV0_T_1 : @[build/NutShell.fir.opt.mlir 56954:7]
      node fbPixelAddrV0_wrap_wrap = eq(fbPixelAddrV0, UInt<17>(119999)) @[build/NutShell.fir.opt.mlir 56956:36]
      node _fbPixelAddrV0_wrap_value_T = add(fbPixelAddrV0, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56958:40]
      node _fbPixelAddrV0_wrap_value_T_1 = tail(_fbPixelAddrV0_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 56960:42]
      connect fbPixelAddrV0, _fbPixelAddrV0_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 56961:9]
      when fbPixelAddrV0_wrap_wrap : @[build/NutShell.fir.opt.mlir 56962:9]
        connect fbPixelAddrV0, pad(UInt<1>(0), 17) @[build/NutShell.fir.opt.mlir 56965:11]
      connect fbPixelAddrV0_wrap, fbPixelAddrV0_wrap_wrap @[build/NutShell.fir.opt.mlir 56967:9]
    node _fbPixelAddrV1_T = and(nextPixel, vCounterIsOdd) @[build/NutShell.fir.opt.mlir 56970:27]
    regreset fbPixelAddrV1 : UInt<17>, clock, reset, UInt<17>(0) @[build/NutShell.fir.opt.mlir 56971:24]
    wire fbPixelAddrV1_wrap : UInt<1> @[build/NutShell.fir.opt.mlir 56972:29]
    connect fbPixelAddrV1_wrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56974:7]
    when _fbPixelAddrV1_T : @[build/NutShell.fir.opt.mlir 56975:7]
      node fbPixelAddrV1_wrap_wrap = eq(fbPixelAddrV1, UInt<17>(119999)) @[build/NutShell.fir.opt.mlir 56977:36]
      node _fbPixelAddrV1_wrap_value_T = add(fbPixelAddrV1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56979:40]
      node _fbPixelAddrV1_wrap_value_T_1 = tail(_fbPixelAddrV1_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 56981:42]
      connect fbPixelAddrV1, _fbPixelAddrV1_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 56982:9]
      when fbPixelAddrV1_wrap_wrap : @[build/NutShell.fir.opt.mlir 56983:9]
        connect fbPixelAddrV1, pad(UInt<1>(0), 17) @[build/NutShell.fir.opt.mlir 56986:11]
      connect fbPixelAddrV1_wrap, fbPixelAddrV1_wrap_wrap @[build/NutShell.fir.opt.mlir 56988:9]
    connect fb.io.in.ar.bits.prot, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 56992:7]
    node _fb_io_in_ar_bits_addr_T = mux(vCounterIsOdd, fbPixelAddrV1, fbPixelAddrV0) @[build/NutShell.fir.opt.mlir 56994:35]
    node _fb_io_in_ar_bits_addr_T_1 = cat(_fb_io_in_ar_bits_addr_T, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 56996:37]
    connect fb.io.in.ar.bits.addr, pad(_fb_io_in_ar_bits_addr_T_1, 32) @[build/NutShell.fir.opt.mlir 56998:7]
    reg fb_io_in_ar_valid_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 56999:32]
    connect fb_io_in_ar_valid_REG, nextPixel @[build/NutShell.fir.opt.mlir 57000:7]
    node _fb_io_in_ar_valid_T = and(fb_io_in_ar_valid_REG, hCounterIs2) @[build/NutShell.fir.opt.mlir 57002:31]
    connect fb.io.in.ar.valid, _fb_io_in_ar_valid_T @[build/NutShell.fir.opt.mlir 57003:7]
    connect fb.io.in.r.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57005:7]
    node _data_T = and(fb.io.in.r.ready, fb.io.in.r.valid) @[build/NutShell.fir.opt.mlir 57007:18]
    wire _data_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 57008:21]
    connect _data_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 57011:7]
    regreset data_r : UInt, clock, reset, _data_WIRE @[build/NutShell.fir.opt.mlir 57012:17]
    when _data_T : @[build/NutShell.fir.opt.mlir 57013:7]
      connect data_r, fb.io.in.r.bits.data @[build/NutShell.fir.opt.mlir 57014:9]
    node data = mux(_data_T, fb.io.in.r.bits.data, data_r) @[build/NutShell.fir.opt.mlir 57017:15]
    node _color_T = bits(hCounter, 1, 1) @[build/NutShell.fir.opt.mlir 57019:19]
    node _color_T_1 = bits(data, 63, 32) @[build/NutShell.fir.opt.mlir 57021:21]
    node _color_T_2 = bits(data, 31, 0) @[build/NutShell.fir.opt.mlir 57023:21]
    node color = mux(_color_T, _color_T_1, _color_T_2) @[build/NutShell.fir.opt.mlir 57025:16]
    node _io_vga_rgb_T = bits(color, 23, 0) @[build/NutShell.fir.opt.mlir 57027:24]
    node _io_vga_rgb_T_1 = mux(io.vga.valid, _io_vga_rgb_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57029:26]
    connect io.vga.rgb, _io_vga_rgb_T_1 @[build/NutShell.fir.opt.mlir 57030:7]
    inst fbHelper of FBHelper @[build/NutShell.fir.opt.mlir 57031:73]
    connect fbHelper.clk, clock @[build/NutShell.fir.opt.mlir 57032:7]
    node _fbHelper_io_valid_T = and(io.vga.valid, vga_fb_used) @[build/NutShell.fir.opt.mlir 57034:31]
    connect fbHelper.valid, _fbHelper_io_valid_T @[build/NutShell.fir.opt.mlir 57035:7]
    connect fbHelper.pixel, color @[build/NutShell.fir.opt.mlir 57036:7]
    connect fbHelper.sync, ctrl.io.extra.sync @[build/NutShell.fir.opt.mlir 57037:7]

  module AXI4Flash : @[build/NutShell.fir.opt.mlir 57039:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57039:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57039:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 57039:94]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57068:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57070:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57072:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57074:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57076:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57078:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57080:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57082:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57086:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57088:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57090:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57092:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57094:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57096:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57098:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57100:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57102:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57104:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57106:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57108:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57110:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57112:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57114:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57115:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57116:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57117:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57119:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57121:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57124:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57126:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 57127:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57129:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 57131:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57133:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57136:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 57138:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 57139:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57142:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57144:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57145:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 57146:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57148:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57150:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 57152:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 57154:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 57155:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57157:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 57159:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 57161:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57163:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57164:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 57165:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57167:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 57169:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57171:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 57173:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 57174:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 57175:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 57177:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57179:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57180:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 57181:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57183:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 57185:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57187:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57190:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 57191:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 57193:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 57194:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57196:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57198:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57200:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57202:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57203:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 57204:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57206:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 57208:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57210:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 57212:7]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 57213:16]
    node _T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57215:13]
    node _T_1 = bits(waddr, 12, 0) @[build/NutShell.fir.opt.mlir 57217:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57219:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57221:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57223:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57225:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57227:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57229:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57231:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57233:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57235:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57237:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57239:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57241:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57243:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57245:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57247:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57249:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57251:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 57253:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 57255:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 57257:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 57259:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 57261:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 57263:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 57265:16]
    node _rdata_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 57267:19]
    node _rdata_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 57270:21]
    node _rdata_T_2 = eq(UInt<4>(8), _T) @[build/NutShell.fir.opt.mlir 57273:21]
    node _rdata_T_3 = mux(_rdata_T, UInt<21>(1049243), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57276:21]
    node _rdata_T_4 = mux(_rdata_T_1, UInt<25>(32674451), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57279:21]
    node _rdata_T_5 = mux(_rdata_T_2, UInt<18>(163943), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57282:21]
    node _rdata_T_6 = or(_rdata_T_3, _rdata_T_4) @[build/NutShell.fir.opt.mlir 57284:21]
    node _rdata_T_7 = or(_rdata_T_6, _rdata_T_5) @[build/NutShell.fir.opt.mlir 57286:21]
    wire _rdata_WIRE : UInt<25> @[build/NutShell.fir.opt.mlir 57287:22]
    connect _rdata_WIRE, _rdata_T_7 @[build/NutShell.fir.opt.mlir 57288:7]
    connect rdata, pad(_rdata_WIRE, 64) @[build/NutShell.fir.opt.mlir 57290:7]
    node _io_in_r_bits_data_T = bits(rdata, 31, 0) @[build/NutShell.fir.opt.mlir 57292:31]
    node _io_in_r_bits_data_T_1 = cat(_io_in_r_bits_data_T, _io_in_r_bits_data_T) @[build/NutShell.fir.opt.mlir 57294:33]
    reg io_in_r_bits_data_REG : UInt, clock @[build/NutShell.fir.opt.mlir 57295:32]
    connect io_in_r_bits_data_REG, _io_in_r_bits_data_T_1 @[build/NutShell.fir.opt.mlir 57296:7]
    reg io_in_r_bits_data_r : UInt, clock @[build/NutShell.fir.opt.mlir 57297:30]
    when ren : @[build/NutShell.fir.opt.mlir 57298:7]
      connect io_in_r_bits_data_r, io_in_r_bits_data_REG @[build/NutShell.fir.opt.mlir 57299:9]
    connect io.in.r.bits.data, io_in_r_bits_data_r @[build/NutShell.fir.opt.mlir 57301:7]

  extmodule SDHelper : @[build/NutShell.fir.opt.mlir 57303:5]
    input clk : Clock @[build/NutShell.fir.opt.mlir 57303:43]
    input ren : UInt<1> @[build/NutShell.fir.opt.mlir 57303:66]
    output data : UInt<32> @[build/NutShell.fir.opt.mlir 57303:92]
    input setAddr : UInt<1> @[build/NutShell.fir.opt.mlir 57303:119]
    input addr : UInt<32> @[build/NutShell.fir.opt.mlir 57303:148]
    defname = SDHelper

  module AXI4DummySD : @[build/NutShell.fir.opt.mlir 57304:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57304:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57304:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 57304:96]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57334:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57336:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57338:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57340:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57342:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57344:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57346:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57348:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57352:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57354:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57356:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57358:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57360:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57362:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57364:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57366:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57368:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57370:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57372:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57374:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57376:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57378:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57380:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57381:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57382:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57383:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57385:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57387:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57390:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57392:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 57393:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57395:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 57397:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57399:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57402:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 57404:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 57405:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57408:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57410:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57411:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 57412:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57414:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57416:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 57418:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 57420:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 57421:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57423:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 57425:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 57427:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57429:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57430:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 57431:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57433:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 57435:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57437:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 57439:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 57440:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 57441:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 57443:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57445:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57446:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 57447:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57449:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 57451:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57453:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57456:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 57457:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 57459:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 57460:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57462:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57464:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57466:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57468:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57469:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 57470:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57472:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 57474:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57476:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 57478:7]
    regreset regs_0 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57480:17]
    regreset regs_1 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57481:17]
    regreset regs_2 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57482:17]
    regreset regs_3 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57483:17]
    regreset regs_4 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57484:17]
    regreset regs_5 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57485:17]
    regreset regs_6 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57486:17]
    regreset regs_7 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57487:17]
    regreset regs_8 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57488:17]
    regreset regs_9 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57489:17]
    regreset regs_10 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57490:18]
    regreset regs_11 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57491:18]
    regreset regs_12 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57492:18]
    regreset regs_13 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57493:18]
    regreset regs_14 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57494:18]
    regreset regs_15 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57495:18]
    regreset regs_16 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57496:18]
    regreset regs_17 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57497:18]
    regreset regs_18 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57498:18]
    regreset regs_19 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57499:18]
    regreset regs_20 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57500:18]
    wire setAddr : UInt<1> @[build/NutShell.fir.opt.mlir 57501:18]
    connect setAddr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57503:7]
    inst sdHelper of SDHelper @[build/NutShell.fir.opt.mlir 57504:89]
    connect sdHelper.clk, clock @[build/NutShell.fir.opt.mlir 57505:7]
    node _sdHelper_io_ren_T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57507:29]
    node _sdHelper_io_ren_T_1 = eq(_sdHelper_io_ren_T, UInt<7>(64)) @[build/NutShell.fir.opt.mlir 57510:31]
    node _sdHelper_io_ren_T_2 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57512:31]
    node _sdHelper_io_ren_T_3 = and(_sdHelper_io_ren_T_1, _sdHelper_io_ren_T_2) @[build/NutShell.fir.opt.mlir 57514:31]
    connect sdHelper.ren, _sdHelper_io_ren_T_3 @[build/NutShell.fir.opt.mlir 57515:7]
    connect sdHelper.setAddr, setAddr @[build/NutShell.fir.opt.mlir 57516:7]
    connect sdHelper.addr, regs_1 @[build/NutShell.fir.opt.mlir 57517:7]
    node _strb_T = bits(waddr, 2, 2) @[build/NutShell.fir.opt.mlir 57519:18]
    node _strb_T_1 = bits(io.in.w.bits.strb, 7, 4) @[build/NutShell.fir.opt.mlir 57521:20]
    node _strb_T_2 = bits(io.in.w.bits.strb, 3, 0) @[build/NutShell.fir.opt.mlir 57523:20]
    node strb = mux(_strb_T, _strb_T_1, _strb_T_2) @[build/NutShell.fir.opt.mlir 57525:15]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 57526:16]
    node _T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57528:13]
    node _T_1 = bits(waddr, 12, 0) @[build/NutShell.fir.opt.mlir 57530:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57532:15]
    node _T_3 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 57534:15]
    node _T_4 = bits(strb, 0, 0) @[build/NutShell.fir.opt.mlir 57536:15]
    node _T_5 = bits(strb, 1, 1) @[build/NutShell.fir.opt.mlir 57538:15]
    node _T_6 = bits(strb, 2, 2) @[build/NutShell.fir.opt.mlir 57540:15]
    node _T_7 = bits(strb, 3, 3) @[build/NutShell.fir.opt.mlir 57542:15]
    node _T_8 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57544:15]
    node _T_9 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57546:15]
    node _T_10 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57548:16]
    node _T_11 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57550:16]
    node lo = cat(_T_9, _T_8) @[build/NutShell.fir.opt.mlir 57552:13]
    node hi = cat(_T_11, _T_10) @[build/NutShell.fir.opt.mlir 57554:13]
    node _T_12 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 57556:16]
    node _rdata_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 57558:19]
    node _rdata_T_1 = eq(UInt<6>(56), _T) @[build/NutShell.fir.opt.mlir 57561:21]
    node _rdata_T_2 = eq(UInt<5>(24), _T) @[build/NutShell.fir.opt.mlir 57564:21]
    node _rdata_T_3 = eq(UInt<6>(52), _T) @[build/NutShell.fir.opt.mlir 57567:21]
    node _rdata_T_4 = eq(UInt<5>(20), _T) @[build/NutShell.fir.opt.mlir 57570:21]
    node _rdata_T_5 = eq(UInt<5>(28), _T) @[build/NutShell.fir.opt.mlir 57573:21]
    node _rdata_T_6 = eq(UInt<7>(80), _T) @[build/NutShell.fir.opt.mlir 57576:21]
    node _rdata_T_7 = eq(UInt<5>(16), _T) @[build/NutShell.fir.opt.mlir 57579:21]
    node _rdata_T_8 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 57582:21]
    node _rdata_T_9 = eq(UInt<6>(32), _T) @[build/NutShell.fir.opt.mlir 57585:21]
    node _rdata_T_10 = eq(UInt<7>(64), _T) @[build/NutShell.fir.opt.mlir 57587:22]
    node _rdata_T_11 = mux(_rdata_T, regs_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57589:22]
    node _rdata_T_12 = mux(_rdata_T_1, regs_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57591:22]
    node _rdata_T_13 = mux(_rdata_T_2, regs_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57593:22]
    node _rdata_T_14 = mux(_rdata_T_3, UInt<8>(128), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57596:22]
    node _rdata_T_15 = mux(_rdata_T_4, regs_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57598:22]
    node _rdata_T_16 = mux(_rdata_T_5, regs_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57600:22]
    node _rdata_T_17 = mux(_rdata_T_6, regs_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57602:22]
    node _rdata_T_18 = mux(_rdata_T_7, regs_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57604:22]
    node _rdata_T_19 = mux(_rdata_T_8, regs_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57606:22]
    node _rdata_T_20 = mux(_rdata_T_9, regs_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57608:22]
    node _rdata_T_21 = mux(_rdata_T_10, sdHelper.data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57610:22]
    node _rdata_T_22 = or(_rdata_T_11, _rdata_T_12) @[build/NutShell.fir.opt.mlir 57612:22]
    node _rdata_T_23 = or(_rdata_T_22, _rdata_T_13) @[build/NutShell.fir.opt.mlir 57614:22]
    node _rdata_T_24 = or(_rdata_T_23, _rdata_T_14) @[build/NutShell.fir.opt.mlir 57616:22]
    node _rdata_T_25 = or(_rdata_T_24, _rdata_T_15) @[build/NutShell.fir.opt.mlir 57618:22]
    node _rdata_T_26 = or(_rdata_T_25, _rdata_T_16) @[build/NutShell.fir.opt.mlir 57620:22]
    node _rdata_T_27 = or(_rdata_T_26, _rdata_T_17) @[build/NutShell.fir.opt.mlir 57622:22]
    node _rdata_T_28 = or(_rdata_T_27, _rdata_T_18) @[build/NutShell.fir.opt.mlir 57624:22]
    node _rdata_T_29 = or(_rdata_T_28, _rdata_T_19) @[build/NutShell.fir.opt.mlir 57626:22]
    node _rdata_T_30 = or(_rdata_T_29, _rdata_T_20) @[build/NutShell.fir.opt.mlir 57628:22]
    node _rdata_T_31 = or(_rdata_T_30, _rdata_T_21) @[build/NutShell.fir.opt.mlir 57630:22]
    wire _rdata_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 57631:22]
    connect _rdata_WIRE, _rdata_T_31 @[build/NutShell.fir.opt.mlir 57632:7]
    connect rdata, pad(_rdata_WIRE, 64) @[build/NutShell.fir.opt.mlir 57634:7]
    node _T_13 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57636:16]
    node _T_14 = and(_T_2, _T_13) @[build/NutShell.fir.opt.mlir 57638:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 57652:7]
      node _regs_0_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57654:22]
      node _regs_0_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57656:24]
      node _regs_0_T_2 = and(regs_0, _regs_0_T_1) @[build/NutShell.fir.opt.mlir 57658:24]
      node _regs_0_T_3 = or(_regs_0_T, _regs_0_T_2) @[build/NutShell.fir.opt.mlir 57660:24]
      node regs_0_cmd = bits(_regs_0_T_3, 5, 0) @[build/NutShell.fir.opt.mlir 57662:23]
      node _regs_0_T_4 = eq(UInt<1>(1), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57664:24]
      when _regs_0_T_4 : @[build/NutShell.fir.opt.mlir 57665:9]
        connect regs_4, UInt<32>(2164228096) @[build/NutShell.fir.opt.mlir 57667:11]
      else :
        node _regs_0_T_5 = eq(UInt<2>(2), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57670:26]
        when _regs_0_T_5 : @[build/NutShell.fir.opt.mlir 57671:11]
          connect regs_4, pad(UInt<1>(1), 32) @[build/NutShell.fir.opt.mlir 57674:13]
          connect regs_5, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57677:13]
          connect regs_6, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57680:13]
          connect regs_7, pad(UInt<29>(352321536), 32) @[build/NutShell.fir.opt.mlir 57683:13]
        else :
          node _regs_0_T_6 = eq(UInt<4>(9), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57686:28]
          when _regs_0_T_6 : @[build/NutShell.fir.opt.mlir 57687:13]
            connect regs_4, UInt<32>(2453684225) @[build/NutShell.fir.opt.mlir 57689:15]
            node _regs_0_regs_5_T = shl(UInt<2>(3), 30) @[build/NutShell.fir.opt.mlir 57691:35]
            node _regs_0_regs_5_T_1 = or(UInt<29>(306943971), _regs_0_regs_5_T) @[build/NutShell.fir.opt.mlir 57693:37]
            connect regs_5, _regs_0_regs_5_T_1 @[build/NutShell.fir.opt.mlir 57695:15]
            node _regs_0_regs_6_T = or(UInt<28>(256933888), UInt<10>(63)) @[build/NutShell.fir.opt.mlir 57697:35]
            node _regs_0_regs_6_T_1 = shl(UInt<4>(15), 16) @[build/NutShell.fir.opt.mlir 57699:37]
            node _regs_0_regs_6_T_2 = or(_regs_0_regs_6_T, _regs_0_regs_6_T_1) @[build/NutShell.fir.opt.mlir 57701:37]
            connect regs_6, pad(_regs_0_regs_6_T_2, 32) @[build/NutShell.fir.opt.mlir 57704:15]
            connect regs_7, UInt<32>(2351300906) @[build/NutShell.fir.opt.mlir 57706:15]
          else :
            node _regs_0_T_7 = eq(UInt<4>(13), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57709:30]
            when _regs_0_T_7 : @[build/NutShell.fir.opt.mlir 57710:15]
              connect regs_4, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57713:17]
              connect regs_5, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57716:17]
              connect regs_6, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57719:17]
              connect regs_7, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57722:17]
            else :
              node _regs_0_T_8 = eq(UInt<5>(18), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57725:32]
              when _regs_0_T_8 : @[build/NutShell.fir.opt.mlir 57726:17]
                connect setAddr, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57728:19]
      connect regs_0, _regs_0_T_3 @[build/NutShell.fir.opt.mlir 57734:9]
    node _T_15 = eq(_T_1, UInt<6>(56)) @[build/NutShell.fir.opt.mlir 57737:16]
    node _T_16 = and(_T_2, _T_15) @[build/NutShell.fir.opt.mlir 57739:16]
    when _T_16 : @[build/NutShell.fir.opt.mlir 57740:7]
      node _regs_15_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57742:23]
      node _regs_15_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57744:25]
      node _regs_15_T_2 = and(regs_15, _regs_15_T_1) @[build/NutShell.fir.opt.mlir 57746:25]
      node _regs_15_T_3 = or(_regs_15_T, _regs_15_T_2) @[build/NutShell.fir.opt.mlir 57748:25]
      connect regs_15, _regs_15_T_3 @[build/NutShell.fir.opt.mlir 57749:9]
    node _T_17 = eq(_T_1, UInt<7>(80)) @[build/NutShell.fir.opt.mlir 57752:16]
    node _T_18 = and(_T_2, _T_17) @[build/NutShell.fir.opt.mlir 57754:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 57755:7]
      node _regs_20_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57757:23]
      node _regs_20_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57759:25]
      node _regs_20_T_2 = and(regs_20, _regs_20_T_1) @[build/NutShell.fir.opt.mlir 57761:25]
      node _regs_20_T_3 = or(_regs_20_T, _regs_20_T_2) @[build/NutShell.fir.opt.mlir 57763:25]
      connect regs_20, _regs_20_T_3 @[build/NutShell.fir.opt.mlir 57764:9]
    node _T_19 = eq(_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 57767:16]
    node _T_20 = and(_T_2, _T_19) @[build/NutShell.fir.opt.mlir 57769:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 57770:7]
      node _regs_1_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57772:22]
      node _regs_1_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57774:24]
      node _regs_1_T_2 = and(regs_1, _regs_1_T_1) @[build/NutShell.fir.opt.mlir 57776:24]
      node _regs_1_T_3 = or(_regs_1_T, _regs_1_T_2) @[build/NutShell.fir.opt.mlir 57778:24]
      connect regs_1, _regs_1_T_3 @[build/NutShell.fir.opt.mlir 57779:9]
    node _T_21 = eq(_T_1, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 57782:16]
    node _T_22 = and(_T_2, _T_21) @[build/NutShell.fir.opt.mlir 57784:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 57785:7]
      node _regs_8_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57787:22]
      node _regs_8_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57789:24]
      node _regs_8_T_2 = and(regs_8, _regs_8_T_1) @[build/NutShell.fir.opt.mlir 57791:24]
      node _regs_8_T_3 = or(_regs_8_T, _regs_8_T_2) @[build/NutShell.fir.opt.mlir 57793:24]
      connect regs_8, _regs_8_T_3 @[build/NutShell.fir.opt.mlir 57794:9]
    node _io_in_r_bits_data_T = bits(rdata, 31, 0) @[build/NutShell.fir.opt.mlir 57797:31]
    node _io_in_r_bits_data_T_1 = cat(_io_in_r_bits_data_T, _io_in_r_bits_data_T) @[build/NutShell.fir.opt.mlir 57799:33]
    reg io_in_r_bits_data_REG : UInt, clock @[build/NutShell.fir.opt.mlir 57800:32]
    connect io_in_r_bits_data_REG, _io_in_r_bits_data_T_1 @[build/NutShell.fir.opt.mlir 57801:7]
    reg io_in_r_bits_data_r : UInt, clock @[build/NutShell.fir.opt.mlir 57802:30]
    when ren : @[build/NutShell.fir.opt.mlir 57803:7]
      connect io_in_r_bits_data_r, io_in_r_bits_data_REG @[build/NutShell.fir.opt.mlir 57804:9]
    connect io.in.r.bits.data, io_in_r_bits_data_r @[build/NutShell.fir.opt.mlir 57806:7]

  module AXI4MeipGen : @[build/NutShell.fir.opt.mlir 57808:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57808:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57808:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { meip : UInt<1> } } @[build/NutShell.fir.opt.mlir 57808:96]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57840:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57842:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57844:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57846:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57848:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57850:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57852:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57854:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57858:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57860:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57862:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57864:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57866:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57868:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57870:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57872:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57874:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57876:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57878:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57880:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57882:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57884:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57886:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57887:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57888:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57889:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57891:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57893:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57896:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57898:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 57899:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57901:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 57903:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57905:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57908:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 57910:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 57911:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57914:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57916:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57917:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 57918:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57920:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57922:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 57924:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 57926:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 57927:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57929:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 57931:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 57933:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57935:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57936:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 57937:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57939:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 57941:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57943:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 57945:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 57946:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 57947:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 57949:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57951:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57952:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 57953:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57955:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 57957:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57959:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57962:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 57963:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 57965:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 57966:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57968:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57970:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57972:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57974:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57975:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 57976:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57978:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 57980:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57982:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 57984:7]
    regreset meip : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57985:15]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 57987:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 57989:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57991:15]
    node _T_3 = bits(io.in.w.bits.data, 0, 0) @[build/NutShell.fir.opt.mlir 57993:15]
    node _T_4 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57995:15]
    node _T_5 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57997:15]
    node _T_6 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57999:15]
    node _T_7 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 58001:15]
    node _T_8 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 58003:15]
    node _T_9 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 58005:15]
    node _T_10 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 58007:16]
    node _T_11 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 58009:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58011:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58013:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58015:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58017:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58019:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58021:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58023:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58025:16]
    node lo_lo = cat(_T_13, _T_12) @[build/NutShell.fir.opt.mlir 58027:16]
    node lo_hi = cat(_T_15, _T_14) @[build/NutShell.fir.opt.mlir 58029:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 58031:13]
    node hi_lo = cat(_T_17, _T_16) @[build/NutShell.fir.opt.mlir 58033:16]
    node hi_hi = cat(_T_19, _T_18) @[build/NutShell.fir.opt.mlir 58035:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 58037:13]
    node _T_20 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 58039:16]
    node _T_21 = bits(_T_20, 0, 0) @[build/NutShell.fir.opt.mlir 58041:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 58043:31]
    connect io.in.r.bits.data, pad(meip, 64) @[build/NutShell.fir.opt.mlir 58045:7]
    node _T_22 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58047:16]
    node _T_23 = and(_T_2, _T_22) @[build/NutShell.fir.opt.mlir 58049:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 58050:7]
      node _meip_T = and(_T_3, _T_21) @[build/NutShell.fir.opt.mlir 58052:20]
      node _meip_T_1 = not(_T_21) @[build/NutShell.fir.opt.mlir 58054:22]
      node _meip_T_2 = and(meip, _meip_T_1) @[build/NutShell.fir.opt.mlir 58056:22]
      node _meip_T_3 = or(_meip_T, _meip_T_2) @[build/NutShell.fir.opt.mlir 58058:22]
      connect meip, _meip_T_3 @[build/NutShell.fir.opt.mlir 58059:9]
    connect io.extra.meip, meip @[build/NutShell.fir.opt.mlir 58061:7]

  module AXI4DMA : @[build/NutShell.fir.opt.mlir 58063:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58063:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58063:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { dma : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } } @[build/NutShell.fir.opt.mlir 58063:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 58138:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 58140:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 58142:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 58144:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 58146:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 58148:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 58150:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 58152:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58156:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58158:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58160:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58162:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58164:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58166:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58168:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58170:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 58172:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 58174:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 58176:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 58178:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 58180:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 58182:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 58184:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 58185:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 58186:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 58187:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58189:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58191:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58194:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58196:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 58197:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58199:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 58201:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58203:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58206:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 58208:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 58209:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58212:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58214:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58215:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 58216:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58218:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58220:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 58222:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 58224:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 58225:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58227:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 58229:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 58231:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58233:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58234:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 58235:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58237:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 58239:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58241:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 58243:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 58244:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 58245:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 58247:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58249:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58250:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 58251:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58253:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 58255:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58257:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58260:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 58261:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 58263:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 58264:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58266:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58268:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58270:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58272:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58273:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 58274:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58276:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 58278:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58280:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 58282:7]
    reg dest : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58283:15]
    reg src : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58284:14]
    regreset len : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 58286:14]
    reg data : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58287:15]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 58289:16]
    node _T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 58291:13]
    node _T_1 = neq(len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58293:15]
    node _T_2 = and(_T, _T_1) @[build/NutShell.fir.opt.mlir 58295:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58297:7]
      connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58299:9]
    node _T_3 = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58302:15]
    node _T_4 = and(io.extra.dma.ar.ready, io.extra.dma.ar.valid) @[build/NutShell.fir.opt.mlir 58304:15]
    node _T_5 = and(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 58306:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 58308:7]
      connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 58310:9]
    node _T_6 = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 58313:15]
    node _T_7 = and(io.extra.dma.r.ready, io.extra.dma.r.valid) @[build/NutShell.fir.opt.mlir 58315:15]
    node _T_8 = and(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 58317:15]
    when _T_8 : @[build/NutShell.fir.opt.mlir 58319:7]
      wire _data_WIRE : UInt<32>[2] @[build/NutShell.fir.opt.mlir 58320:23]
      wire _data_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 58323:25]
      connect _data_WIRE_1, io.extra.dma.r.bits.data @[build/NutShell.fir.opt.mlir 58324:9]
      node _data_T = bits(_data_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 58326:20]
      connect _data_WIRE[0], _data_T @[build/NutShell.fir.opt.mlir 58327:9]
      node _data_T_1 = bits(_data_WIRE_1, 63, 32) @[build/NutShell.fir.opt.mlir 58329:22]
      connect _data_WIRE[1], _data_T_1 @[build/NutShell.fir.opt.mlir 58330:9]
      node _data_T_2 = bits(src, 2, 2) @[build/NutShell.fir.opt.mlir 58332:22]
      connect data, _data_WIRE[_data_T_2] @[build/NutShell.fir.opt.mlir 58334:9]
      connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 58336:9]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58338:16]
    node _awAck_T = and(io.extra.dma.aw.ready, io.extra.dma.aw.valid) @[build/NutShell.fir.opt.mlir 58340:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58341:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58342:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58344:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58346:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58348:9]
    node _wAck_T = and(io.extra.dma.w.ready, io.extra.dma.w.valid) @[build/NutShell.fir.opt.mlir 58351:18]
    node _wAck_T_1 = and(_wAck_T, io.extra.dma.w.bits.last) @[build/NutShell.fir.opt.mlir 58353:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58354:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 58355:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58357:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58359:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58361:9]
    node _wSend_T = and(io.extra.dma.aw.ready, io.extra.dma.aw.valid) @[build/NutShell.fir.opt.mlir 58364:19]
    node _wSend_T_1 = and(io.extra.dma.w.ready, io.extra.dma.w.valid) @[build/NutShell.fir.opt.mlir 58366:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 58368:21]
    node _wSend_T_3 = and(_wSend_T_2, io.extra.dma.w.bits.last) @[build/NutShell.fir.opt.mlir 58370:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 58372:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 58374:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 58375:7]
    node _T_9 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58377:15]
    node _T_10 = and(_T_9, wSend) @[build/NutShell.fir.opt.mlir 58379:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 58381:7]
      connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 58383:9]
    node _T_11 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58386:16]
    node _T_12 = and(io.extra.dma.b.ready, io.extra.dma.b.valid) @[build/NutShell.fir.opt.mlir 58388:16]
    node _T_13 = and(_T_11, _T_12) @[build/NutShell.fir.opt.mlir 58390:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 58391:7]
      node _len_T = sub(len, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58393:19]
      node _len_T_1 = tail(_len_T, 1) @[build/NutShell.fir.opt.mlir 58395:21]
      connect len, _len_T_1 @[build/NutShell.fir.opt.mlir 58396:9]
      node _dest_T = add(dest, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58398:20]
      node _dest_T_1 = tail(_dest_T, 1) @[build/NutShell.fir.opt.mlir 58400:22]
      connect dest, _dest_T_1 @[build/NutShell.fir.opt.mlir 58401:9]
      node _src_T = add(src, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58403:19]
      node _src_T_1 = tail(_src_T, 1) @[build/NutShell.fir.opt.mlir 58405:21]
      connect src, _src_T_1 @[build/NutShell.fir.opt.mlir 58406:9]
      node _state_T = leq(len, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58408:21]
      node _state_T_1 = mux(_state_T, UInt<3>(0), UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58410:23]
      connect state, _state_T_1 @[build/NutShell.fir.opt.mlir 58411:9]
    connect io.extra.dma.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58414:7]
    connect io.extra.dma.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58416:7]
    connect io.extra.dma.ar.bits.size, pad(UInt<2>(2), 3) @[build/NutShell.fir.opt.mlir 58420:7]
    connect io.extra.dma.ar.bits.burst, UInt<2>(1) @[build/NutShell.fir.opt.mlir 58423:7]
    connect io.extra.dma.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58425:7]
    connect io.extra.dma.ar.bits.cache, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 58428:7]
    connect io.extra.dma.ar.bits.qos, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 58431:7]
    connect io.extra.dma.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58433:7]
    connect io.extra.dma.ar.bits.len, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 58436:7]
    connect io.extra.dma.ar.bits.addr, src @[build/NutShell.fir.opt.mlir 58437:7]
    node _io_extra_dma_ar_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58439:35]
    connect io.extra.dma.ar.valid, _io_extra_dma_ar_valid_T @[build/NutShell.fir.opt.mlir 58440:7]
    node _io_extra_dma_r_ready_T = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 58442:34]
    connect io.extra.dma.r.ready, _io_extra_dma_r_ready_T @[build/NutShell.fir.opt.mlir 58443:7]
    connect io.extra.dma.aw.bits.qos, io.extra.dma.ar.bits.qos @[build/NutShell.fir.opt.mlir 58444:7]
    connect io.extra.dma.aw.bits.cache, io.extra.dma.ar.bits.cache @[build/NutShell.fir.opt.mlir 58445:7]
    connect io.extra.dma.aw.bits.lock, io.extra.dma.ar.bits.lock @[build/NutShell.fir.opt.mlir 58446:7]
    connect io.extra.dma.aw.bits.burst, io.extra.dma.ar.bits.burst @[build/NutShell.fir.opt.mlir 58447:7]
    connect io.extra.dma.aw.bits.size, io.extra.dma.ar.bits.size @[build/NutShell.fir.opt.mlir 58448:7]
    connect io.extra.dma.aw.bits.len, io.extra.dma.ar.bits.len @[build/NutShell.fir.opt.mlir 58449:7]
    connect io.extra.dma.aw.bits.user, io.extra.dma.ar.bits.user @[build/NutShell.fir.opt.mlir 58450:7]
    connect io.extra.dma.aw.bits.id, io.extra.dma.ar.bits.id @[build/NutShell.fir.opt.mlir 58451:7]
    connect io.extra.dma.aw.bits.prot, io.extra.dma.ar.bits.prot @[build/NutShell.fir.opt.mlir 58452:7]
    connect io.extra.dma.aw.bits.addr, io.extra.dma.ar.bits.addr @[build/NutShell.fir.opt.mlir 58453:7]
    connect io.extra.dma.aw.bits.addr, dest @[build/NutShell.fir.opt.mlir 58454:7]
    node _io_extra_dma_aw_valid_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58456:35]
    node _io_extra_dma_aw_valid_T_1 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58458:37]
    node _io_extra_dma_aw_valid_T_2 = and(_io_extra_dma_aw_valid_T, _io_extra_dma_aw_valid_T_1) @[build/NutShell.fir.opt.mlir 58460:37]
    connect io.extra.dma.aw.valid, _io_extra_dma_aw_valid_T_2 @[build/NutShell.fir.opt.mlir 58461:7]
    node _io_extra_dma_w_valid_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58463:34]
    node _io_extra_dma_w_valid_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58465:36]
    node _io_extra_dma_w_valid_T_2 = and(_io_extra_dma_w_valid_T, _io_extra_dma_w_valid_T_1) @[build/NutShell.fir.opt.mlir 58467:36]
    connect io.extra.dma.w.valid, _io_extra_dma_w_valid_T_2 @[build/NutShell.fir.opt.mlir 58468:7]
    node _io_extra_dma_w_bits_data_T = cat(data, data) @[build/NutShell.fir.opt.mlir 58470:38]
    connect io.extra.dma.w.bits.data, _io_extra_dma_w_bits_data_T @[build/NutShell.fir.opt.mlir 58471:7]
    node _io_extra_dma_w_bits_strb_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 58475:38]
    node _io_extra_dma_w_bits_strb_T_1 = bits(dest, 2, 2) @[build/NutShell.fir.opt.mlir 58477:40]
    node _io_extra_dma_w_bits_strb_T_2 = mul(_io_extra_dma_w_bits_strb_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58479:40]
    node _io_extra_dma_w_bits_strb_T_3 = dshl(_io_extra_dma_w_bits_strb_T, _io_extra_dma_w_bits_strb_T_2) @[build/NutShell.fir.opt.mlir 58481:40]
    connect io.extra.dma.w.bits.strb, tail(_io_extra_dma_w_bits_strb_T_3, 11) @[build/NutShell.fir.opt.mlir 58483:7]
    connect io.extra.dma.w.bits.last, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58485:7]
    node _io_extra_dma_b_ready_T = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58487:34]
    connect io.extra.dma.b.ready, _io_extra_dma_b_ready_T @[build/NutShell.fir.opt.mlir 58488:7]
    node _T_14 = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 58490:16]
    node _T_15 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 58492:16]
    node _T_16 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58494:16]
    node _T_17 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 58496:16]
    node _T_18 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 58498:16]
    node _T_19 = dshr(io.in.w.bits.strb, _T_18) @[build/NutShell.fir.opt.mlir 58500:16]
    node _T_20 = bits(_T_19, 0, 0) @[build/NutShell.fir.opt.mlir 58502:16]
    node _T_21 = bits(_T_19, 1, 1) @[build/NutShell.fir.opt.mlir 58504:16]
    node _T_22 = bits(_T_19, 2, 2) @[build/NutShell.fir.opt.mlir 58506:16]
    node _T_23 = bits(_T_19, 3, 3) @[build/NutShell.fir.opt.mlir 58508:16]
    node _T_24 = bits(_T_19, 4, 4) @[build/NutShell.fir.opt.mlir 58510:16]
    node _T_25 = bits(_T_19, 5, 5) @[build/NutShell.fir.opt.mlir 58512:16]
    node _T_26 = bits(_T_19, 6, 6) @[build/NutShell.fir.opt.mlir 58514:16]
    node _T_27 = bits(_T_19, 7, 7) @[build/NutShell.fir.opt.mlir 58516:16]
    node _T_28 = mux(_T_20, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58518:16]
    node _T_29 = mux(_T_21, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58520:16]
    node _T_30 = mux(_T_22, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58522:16]
    node _T_31 = mux(_T_23, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58524:16]
    node _T_32 = mux(_T_24, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58526:16]
    node _T_33 = mux(_T_25, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58528:16]
    node _T_34 = mux(_T_26, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58530:16]
    node _T_35 = mux(_T_27, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58532:16]
    node lo_lo = cat(_T_29, _T_28) @[build/NutShell.fir.opt.mlir 58534:16]
    node lo_hi = cat(_T_31, _T_30) @[build/NutShell.fir.opt.mlir 58536:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 58538:13]
    node hi_lo = cat(_T_33, _T_32) @[build/NutShell.fir.opt.mlir 58540:16]
    node hi_hi = cat(_T_35, _T_34) @[build/NutShell.fir.opt.mlir 58542:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 58544:13]
    node _T_36 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 58546:16]
    node _T_37 = bits(_T_36, 31, 0) @[build/NutShell.fir.opt.mlir 58548:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T_14) @[build/NutShell.fir.opt.mlir 58550:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T_14) @[build/NutShell.fir.opt.mlir 58552:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<4>(8), _T_14) @[build/NutShell.fir.opt.mlir 58555:33]
    node _io_in_r_bits_data_T_3 = mux(_io_in_r_bits_data_T, dest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58557:33]
    node _io_in_r_bits_data_T_4 = mux(_io_in_r_bits_data_T_1, src, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58559:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T_2, len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58561:33]
    node _io_in_r_bits_data_T_6 = or(_io_in_r_bits_data_T_3, _io_in_r_bits_data_T_4) @[build/NutShell.fir.opt.mlir 58563:33]
    node _io_in_r_bits_data_T_7 = or(_io_in_r_bits_data_T_6, _io_in_r_bits_data_T_5) @[build/NutShell.fir.opt.mlir 58565:33]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 58566:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_7 @[build/NutShell.fir.opt.mlir 58567:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 58569:7]
    node _T_38 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58571:16]
    node _T_39 = and(_T_16, _T_38) @[build/NutShell.fir.opt.mlir 58573:16]
    when _T_39 : @[build/NutShell.fir.opt.mlir 58574:7]
      node _dest_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58576:22]
      node _dest_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58578:22]
      node _dest_T_4 = and(dest, _dest_T_3) @[build/NutShell.fir.opt.mlir 58580:22]
      node _dest_T_5 = or(_dest_T_2, _dest_T_4) @[build/NutShell.fir.opt.mlir 58582:22]
      connect dest, _dest_T_5 @[build/NutShell.fir.opt.mlir 58583:9]
    node _T_40 = eq(_T_15, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58586:16]
    node _T_41 = and(_T_16, _T_40) @[build/NutShell.fir.opt.mlir 58588:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 58589:7]
      node _src_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58591:21]
      node _src_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58593:21]
      node _src_T_4 = and(src, _src_T_3) @[build/NutShell.fir.opt.mlir 58595:21]
      node _src_T_5 = or(_src_T_2, _src_T_4) @[build/NutShell.fir.opt.mlir 58597:21]
      connect src, _src_T_5 @[build/NutShell.fir.opt.mlir 58598:9]
    node _T_42 = eq(_T_15, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 58601:16]
    node _T_43 = and(_T_16, _T_42) @[build/NutShell.fir.opt.mlir 58603:16]
    when _T_43 : @[build/NutShell.fir.opt.mlir 58604:7]
      node _len_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58606:21]
      node _len_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58608:21]
      node _len_T_4 = and(len, _len_T_3) @[build/NutShell.fir.opt.mlir 58610:21]
      node _len_T_5 = or(_len_T_2, _len_T_4) @[build/NutShell.fir.opt.mlir 58612:21]
      connect len, _len_T_5 @[build/NutShell.fir.opt.mlir 58613:9]

  module SimpleBus2AXI4Converter_3 : @[build/NutShell.fir.opt.mlir 58616:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58616:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58616:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 58616:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 58660:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 58662:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58665:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58668:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58670:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 58672:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58674:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58675:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58677:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 58678:9]
        skip @[build/NutShell.fir.opt.mlir 58679:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 58681:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 58683:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58686:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 58687:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 58688:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 58689:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58691:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 58692:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58694:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 58695:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 58696:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 58697:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58700:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 58702:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58703:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58705:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58706:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58707:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58709:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58711:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58713:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58716:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 58718:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58719:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 58720:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58722:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58724:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58726:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58729:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58731:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 58733:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 58735:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 58737:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 58739:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 58740:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58742:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 58744:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 58745:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 58746:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 58747:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58750:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58752:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 58754:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58756:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 58758:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 58760:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 58761:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58763:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 58765:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58767:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 58769:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 58770:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58772:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 58774:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58776:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 58778:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 58779:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58781:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58783:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 58785:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 58787:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 58788:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58789:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58790:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 58792:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 58793:7]

  module SimpleBus2AXI4Converter_4 : @[build/NutShell.fir.opt.mlir 58795:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58795:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58795:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 58795:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 58839:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 58841:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58844:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58847:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58849:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 58851:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58853:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58854:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58856:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 58857:9]
        skip @[build/NutShell.fir.opt.mlir 58858:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 58860:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 58862:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58865:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 58866:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 58867:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 58868:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58870:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 58871:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58873:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 58874:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 58875:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 58876:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58879:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 58881:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58882:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58884:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58885:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58886:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58888:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58890:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58892:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58895:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 58897:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58898:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 58899:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58901:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58903:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58905:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58908:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58910:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 58912:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 58914:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 58916:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 58918:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 58919:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58921:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 58923:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 58924:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 58925:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 58926:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58929:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58931:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 58933:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58935:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 58937:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 58939:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 58940:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58942:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 58944:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58946:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 58948:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 58949:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58951:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 58953:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58955:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 58957:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 58958:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58960:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58962:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 58964:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 58966:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 58967:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58968:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58969:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 58971:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 58972:7]

  module SimpleBus2AXI4Converter_5 : @[build/NutShell.fir.opt.mlir 58974:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58974:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58974:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 58974:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59018:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59020:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59023:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59026:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59028:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59030:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59032:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59033:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59035:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59036:9]
        skip @[build/NutShell.fir.opt.mlir 59037:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59039:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59041:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59044:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59045:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59046:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59047:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59049:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59050:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59052:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59053:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59054:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59055:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59058:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59060:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59061:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59063:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59064:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59065:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59067:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59069:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59071:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59074:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59076:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59077:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59078:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59080:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59082:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59084:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59087:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59089:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59091:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59093:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59095:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59097:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59098:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59100:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59102:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59103:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59104:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59105:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59108:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59110:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59112:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59114:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59116:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59118:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59119:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59121:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59123:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59125:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59127:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59128:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59130:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59132:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59134:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59136:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59137:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59139:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59141:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59143:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59145:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59146:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59147:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59148:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59150:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59151:7]

  module SimpleBus2AXI4Converter_6 : @[build/NutShell.fir.opt.mlir 59153:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59153:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59153:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59153:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59197:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59199:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59202:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59205:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59207:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59209:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59211:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59212:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59214:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59215:9]
        skip @[build/NutShell.fir.opt.mlir 59216:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59218:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59220:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59223:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59224:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59225:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59226:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59228:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59229:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59231:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59232:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59233:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59234:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59237:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59239:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59240:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59242:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59243:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59244:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59246:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59248:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59250:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59253:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59255:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59256:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59257:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59259:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59261:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59263:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59266:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59268:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59270:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59272:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59274:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59276:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59277:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59279:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59281:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59282:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59283:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59284:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59287:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59289:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59291:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59293:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59295:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59297:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59298:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59300:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59302:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59304:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59306:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59307:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59309:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59311:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59313:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59315:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59316:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59318:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59320:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59322:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59324:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59325:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59326:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59327:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59329:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59330:7]

  module SimpleBus2AXI4Converter_7 : @[build/NutShell.fir.opt.mlir 59332:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59332:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59332:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59332:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59376:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59378:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59381:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59384:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59386:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59388:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59390:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59391:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59393:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59394:9]
        skip @[build/NutShell.fir.opt.mlir 59395:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59397:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59399:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59402:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59403:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59404:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59405:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59407:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59408:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59410:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59411:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59412:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59413:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59416:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59418:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59419:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59421:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59422:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59423:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59425:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59427:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59429:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59432:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59434:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59435:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59436:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59438:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59440:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59442:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59445:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59447:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59449:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59451:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59453:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59455:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59456:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59458:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59460:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59461:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59462:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59463:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59466:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59468:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59470:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59472:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59474:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59476:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59477:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59479:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59481:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59483:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59485:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59486:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59488:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59490:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59492:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59494:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59495:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59497:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59499:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59501:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59503:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59504:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59505:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59506:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59508:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59509:7]

  module SimpleBus2AXI4Converter_8 : @[build/NutShell.fir.opt.mlir 59511:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59511:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59511:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59511:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59555:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59557:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59560:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59563:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59565:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59567:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59569:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59570:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59572:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59573:9]
        skip @[build/NutShell.fir.opt.mlir 59574:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59576:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59578:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59581:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59582:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59583:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59584:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59586:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59587:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59589:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59590:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59591:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59592:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59595:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59597:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59598:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59600:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59601:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59602:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59604:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59606:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59608:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59611:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59613:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59614:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59615:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59617:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59619:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59621:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59624:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59626:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59628:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59630:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59632:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59634:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59635:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59637:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59639:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59640:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59641:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59642:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59645:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59647:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59649:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59651:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59653:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59655:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59656:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59658:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59660:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59662:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59664:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59665:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59667:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59669:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59671:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59673:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59674:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59676:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59678:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59680:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59682:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59683:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59684:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59685:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59687:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59688:7]

  module SimpleBus2AXI4Converter_9 : @[build/NutShell.fir.opt.mlir 59690:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59690:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59690:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59690:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59734:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59736:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59739:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59742:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59744:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59746:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59748:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59749:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59751:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59752:9]
        skip @[build/NutShell.fir.opt.mlir 59753:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59755:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59757:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59760:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59761:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59762:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59763:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59765:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59766:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59768:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59769:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59770:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59771:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59774:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59776:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59777:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59779:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59780:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59781:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59783:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59785:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59787:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59790:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59792:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59793:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59794:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59796:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59798:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59800:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59803:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59805:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59807:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59809:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59811:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59813:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59814:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59816:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59818:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59819:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59820:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59821:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59824:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59826:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59828:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59830:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59832:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59834:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59835:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59837:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59839:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59841:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59843:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59844:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59846:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59848:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59850:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59852:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59853:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59855:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59857:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59859:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59861:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59862:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59863:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59864:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59866:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59867:7]

  module SimMMIO : @[build/NutShell.fir.opt.mlir 59869:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59869:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59869:65]
    output io : { flip rw : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, meip : UInt<1>, dma : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, uart : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 59869:92]

    inst xbar of SimpleBusCrossbar1toN_1 @[build/NutShell.fir.opt.mlir 59892:44]
    connect xbar.clock, clock @[build/NutShell.fir.opt.mlir 59902:7]
    connect xbar.reset, reset @[build/NutShell.fir.opt.mlir 59903:7]
    connect io.rw.req.ready, xbar.io.in.req.ready @[build/NutShell.fir.opt.mlir 59908:7]
    connect xbar.io.in.req.valid, io.rw.req.valid @[build/NutShell.fir.opt.mlir 59911:7]
    connect xbar.io.in.req.bits, io.rw.req.bits @[build/NutShell.fir.opt.mlir 59914:7]
    connect xbar.io.in.resp.ready, io.rw.resp.ready @[build/NutShell.fir.opt.mlir 59919:7]
    connect io.rw.resp.valid, xbar.io.in.resp.valid @[build/NutShell.fir.opt.mlir 59922:7]
    connect io.rw.resp.bits, xbar.io.in.resp.bits @[build/NutShell.fir.opt.mlir 59925:7]
    inst uart of AXI4UART @[build/NutShell.fir.opt.mlir 59926:44]
    connect uart.clock, clock @[build/NutShell.fir.opt.mlir 59933:7]
    connect uart.reset, reset @[build/NutShell.fir.opt.mlir 59934:7]
    inst vga of AXI4VGA @[build/NutShell.fir.opt.mlir 59935:41]
    connect vga.clock, clock @[build/NutShell.fir.opt.mlir 59944:7]
    connect vga.reset, reset @[build/NutShell.fir.opt.mlir 59945:7]
    inst flash of AXI4Flash @[build/NutShell.fir.opt.mlir 59946:47]
    connect flash.clock, clock @[build/NutShell.fir.opt.mlir 59948:7]
    connect flash.reset, reset @[build/NutShell.fir.opt.mlir 59949:7]
    inst sd of AXI4DummySD @[build/NutShell.fir.opt.mlir 59950:38]
    connect sd.clock, clock @[build/NutShell.fir.opt.mlir 59952:7]
    connect sd.reset, reset @[build/NutShell.fir.opt.mlir 59953:7]
    inst meipGen of AXI4MeipGen @[build/NutShell.fir.opt.mlir 59954:53]
    connect meipGen.clock, clock @[build/NutShell.fir.opt.mlir 59958:7]
    connect meipGen.reset, reset @[build/NutShell.fir.opt.mlir 59959:7]
    inst dma of AXI4DMA @[build/NutShell.fir.opt.mlir 59960:41]
    connect dma.clock, clock @[build/NutShell.fir.opt.mlir 59978:7]
    connect dma.reset, reset @[build/NutShell.fir.opt.mlir 59979:7]
    inst uart_io_in_bridge of SimpleBus2AXI4Converter_3 @[build/NutShell.fir.opt.mlir 59980:83]
    connect uart_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 59983:7]
    connect uart_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 59984:7]
    connect xbar.io.out[0].req.ready, uart_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 59989:7]
    connect uart_io_in_bridge.io.in.req.valid, xbar.io.out[0].req.valid @[build/NutShell.fir.opt.mlir 59992:7]
    connect uart_io_in_bridge.io.in.req.bits, xbar.io.out[0].req.bits @[build/NutShell.fir.opt.mlir 59995:7]
    connect uart_io_in_bridge.io.in.resp.ready, xbar.io.out[0].resp.ready @[build/NutShell.fir.opt.mlir 60000:7]
    connect xbar.io.out[0].resp.valid, uart_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60003:7]
    connect xbar.io.out[0].resp.bits, uart_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60006:7]
    connect uart_io_in_bridge.io.out.aw.ready, uart.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60011:7]
    connect uart.io.in.aw.valid, uart_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60014:7]
    connect uart.io.in.aw.bits, uart_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60017:7]
    connect uart_io_in_bridge.io.out.w.ready, uart.io.in.w.ready @[build/NutShell.fir.opt.mlir 60022:7]
    connect uart.io.in.w.valid, uart_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60025:7]
    connect uart.io.in.w.bits, uart_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60028:7]
    connect uart.io.in.b.ready, uart_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60033:7]
    connect uart_io_in_bridge.io.out.b.valid, uart.io.in.b.valid @[build/NutShell.fir.opt.mlir 60036:7]
    connect uart_io_in_bridge.io.out.b.bits, uart.io.in.b.bits @[build/NutShell.fir.opt.mlir 60039:7]
    connect uart_io_in_bridge.io.out.ar.ready, uart.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60044:7]
    connect uart.io.in.ar.valid, uart_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60047:7]
    connect uart.io.in.ar.bits, uart_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60050:7]
    connect uart.io.in.r.ready, uart_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60055:7]
    connect uart_io_in_bridge.io.out.r.valid, uart.io.in.r.valid @[build/NutShell.fir.opt.mlir 60058:7]
    connect uart_io_in_bridge.io.out.r.bits, uart.io.in.r.bits @[build/NutShell.fir.opt.mlir 60061:7]
    inst vga_io_in_fb_bridge of SimpleBus2AXI4Converter_4 @[build/NutShell.fir.opt.mlir 60062:89]
    connect vga_io_in_fb_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60065:7]
    connect vga_io_in_fb_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60066:7]
    connect xbar.io.out[1].req.ready, vga_io_in_fb_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60071:7]
    connect vga_io_in_fb_bridge.io.in.req.valid, xbar.io.out[1].req.valid @[build/NutShell.fir.opt.mlir 60074:7]
    connect vga_io_in_fb_bridge.io.in.req.bits, xbar.io.out[1].req.bits @[build/NutShell.fir.opt.mlir 60077:7]
    connect vga_io_in_fb_bridge.io.in.resp.ready, xbar.io.out[1].resp.ready @[build/NutShell.fir.opt.mlir 60082:7]
    connect xbar.io.out[1].resp.valid, vga_io_in_fb_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60085:7]
    connect xbar.io.out[1].resp.bits, vga_io_in_fb_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60088:7]
    connect vga_io_in_fb_bridge.io.out.aw.ready, vga.io.in.fb.aw.ready @[build/NutShell.fir.opt.mlir 60093:7]
    connect vga.io.in.fb.aw.valid, vga_io_in_fb_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60096:7]
    connect vga.io.in.fb.aw.bits, vga_io_in_fb_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60099:7]
    connect vga_io_in_fb_bridge.io.out.w.ready, vga.io.in.fb.w.ready @[build/NutShell.fir.opt.mlir 60104:7]
    connect vga.io.in.fb.w.valid, vga_io_in_fb_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60107:7]
    connect vga.io.in.fb.w.bits, vga_io_in_fb_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60110:7]
    connect vga.io.in.fb.b.ready, vga_io_in_fb_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60115:7]
    connect vga_io_in_fb_bridge.io.out.b.valid, vga.io.in.fb.b.valid @[build/NutShell.fir.opt.mlir 60118:7]
    connect vga_io_in_fb_bridge.io.out.b.bits, vga.io.in.fb.b.bits @[build/NutShell.fir.opt.mlir 60121:7]
    connect vga_io_in_fb_bridge.io.out.ar.ready, vga.io.in.fb.ar.ready @[build/NutShell.fir.opt.mlir 60126:7]
    connect vga.io.in.fb.ar.valid, vga_io_in_fb_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60129:7]
    connect vga.io.in.fb.ar.bits, vga_io_in_fb_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60132:7]
    connect vga.io.in.fb.r.ready, vga_io_in_fb_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60137:7]
    connect vga_io_in_fb_bridge.io.out.r.valid, vga.io.in.fb.r.valid @[build/NutShell.fir.opt.mlir 60140:7]
    connect vga_io_in_fb_bridge.io.out.r.bits, vga.io.in.fb.r.bits @[build/NutShell.fir.opt.mlir 60143:7]
    inst vga_io_in_ctrl_bridge of SimpleBus2AXI4Converter_5 @[build/NutShell.fir.opt.mlir 60144:95]
    connect vga_io_in_ctrl_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60147:7]
    connect vga_io_in_ctrl_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60148:7]
    connect xbar.io.out[2].req.ready, vga_io_in_ctrl_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60153:7]
    connect vga_io_in_ctrl_bridge.io.in.req.valid, xbar.io.out[2].req.valid @[build/NutShell.fir.opt.mlir 60156:7]
    connect vga_io_in_ctrl_bridge.io.in.req.bits, xbar.io.out[2].req.bits @[build/NutShell.fir.opt.mlir 60159:7]
    connect vga_io_in_ctrl_bridge.io.in.resp.ready, xbar.io.out[2].resp.ready @[build/NutShell.fir.opt.mlir 60164:7]
    connect xbar.io.out[2].resp.valid, vga_io_in_ctrl_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60167:7]
    connect xbar.io.out[2].resp.bits, vga_io_in_ctrl_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60170:7]
    connect vga_io_in_ctrl_bridge.io.out.aw.ready, vga.io.in.ctrl.aw.ready @[build/NutShell.fir.opt.mlir 60175:7]
    connect vga.io.in.ctrl.aw.valid, vga_io_in_ctrl_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60178:7]
    connect vga.io.in.ctrl.aw.bits, vga_io_in_ctrl_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60181:7]
    connect vga_io_in_ctrl_bridge.io.out.w.ready, vga.io.in.ctrl.w.ready @[build/NutShell.fir.opt.mlir 60186:7]
    connect vga.io.in.ctrl.w.valid, vga_io_in_ctrl_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60189:7]
    connect vga.io.in.ctrl.w.bits, vga_io_in_ctrl_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60192:7]
    connect vga.io.in.ctrl.b.ready, vga_io_in_ctrl_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60197:7]
    connect vga_io_in_ctrl_bridge.io.out.b.valid, vga.io.in.ctrl.b.valid @[build/NutShell.fir.opt.mlir 60200:7]
    connect vga_io_in_ctrl_bridge.io.out.b.bits, vga.io.in.ctrl.b.bits @[build/NutShell.fir.opt.mlir 60203:7]
    connect vga_io_in_ctrl_bridge.io.out.ar.ready, vga.io.in.ctrl.ar.ready @[build/NutShell.fir.opt.mlir 60208:7]
    connect vga.io.in.ctrl.ar.valid, vga_io_in_ctrl_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60211:7]
    connect vga.io.in.ctrl.ar.bits, vga_io_in_ctrl_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60214:7]
    connect vga.io.in.ctrl.r.ready, vga_io_in_ctrl_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60219:7]
    connect vga_io_in_ctrl_bridge.io.out.r.valid, vga.io.in.ctrl.r.valid @[build/NutShell.fir.opt.mlir 60222:7]
    connect vga_io_in_ctrl_bridge.io.out.r.bits, vga.io.in.ctrl.r.bits @[build/NutShell.fir.opt.mlir 60225:7]
    inst flash_io_in_bridge of SimpleBus2AXI4Converter_6 @[build/NutShell.fir.opt.mlir 60226:86]
    connect flash_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60229:7]
    connect flash_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60230:7]
    connect xbar.io.out[3].req.ready, flash_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60235:7]
    connect flash_io_in_bridge.io.in.req.valid, xbar.io.out[3].req.valid @[build/NutShell.fir.opt.mlir 60238:7]
    connect flash_io_in_bridge.io.in.req.bits, xbar.io.out[3].req.bits @[build/NutShell.fir.opt.mlir 60241:7]
    connect flash_io_in_bridge.io.in.resp.ready, xbar.io.out[3].resp.ready @[build/NutShell.fir.opt.mlir 60246:7]
    connect xbar.io.out[3].resp.valid, flash_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60249:7]
    connect xbar.io.out[3].resp.bits, flash_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60252:7]
    connect flash_io_in_bridge.io.out.aw.ready, flash.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60257:7]
    connect flash.io.in.aw.valid, flash_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60260:7]
    connect flash.io.in.aw.bits, flash_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60263:7]
    connect flash_io_in_bridge.io.out.w.ready, flash.io.in.w.ready @[build/NutShell.fir.opt.mlir 60268:7]
    connect flash.io.in.w.valid, flash_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60271:7]
    connect flash.io.in.w.bits, flash_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60274:7]
    connect flash.io.in.b.ready, flash_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60279:7]
    connect flash_io_in_bridge.io.out.b.valid, flash.io.in.b.valid @[build/NutShell.fir.opt.mlir 60282:7]
    connect flash_io_in_bridge.io.out.b.bits, flash.io.in.b.bits @[build/NutShell.fir.opt.mlir 60285:7]
    connect flash_io_in_bridge.io.out.ar.ready, flash.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60290:7]
    connect flash.io.in.ar.valid, flash_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60293:7]
    connect flash.io.in.ar.bits, flash_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60296:7]
    connect flash.io.in.r.ready, flash_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60301:7]
    connect flash_io_in_bridge.io.out.r.valid, flash.io.in.r.valid @[build/NutShell.fir.opt.mlir 60304:7]
    connect flash_io_in_bridge.io.out.r.bits, flash.io.in.r.bits @[build/NutShell.fir.opt.mlir 60307:7]
    inst sd_io_in_bridge of SimpleBus2AXI4Converter_7 @[build/NutShell.fir.opt.mlir 60308:77]
    connect sd_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60311:7]
    connect sd_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60312:7]
    connect xbar.io.out[4].req.ready, sd_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60317:7]
    connect sd_io_in_bridge.io.in.req.valid, xbar.io.out[4].req.valid @[build/NutShell.fir.opt.mlir 60320:7]
    connect sd_io_in_bridge.io.in.req.bits, xbar.io.out[4].req.bits @[build/NutShell.fir.opt.mlir 60323:7]
    connect sd_io_in_bridge.io.in.resp.ready, xbar.io.out[4].resp.ready @[build/NutShell.fir.opt.mlir 60328:7]
    connect xbar.io.out[4].resp.valid, sd_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60331:7]
    connect xbar.io.out[4].resp.bits, sd_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60334:7]
    connect sd_io_in_bridge.io.out.aw.ready, sd.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60339:7]
    connect sd.io.in.aw.valid, sd_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60342:7]
    connect sd.io.in.aw.bits, sd_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60345:7]
    connect sd_io_in_bridge.io.out.w.ready, sd.io.in.w.ready @[build/NutShell.fir.opt.mlir 60350:7]
    connect sd.io.in.w.valid, sd_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60353:7]
    connect sd.io.in.w.bits, sd_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60356:7]
    connect sd.io.in.b.ready, sd_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60361:7]
    connect sd_io_in_bridge.io.out.b.valid, sd.io.in.b.valid @[build/NutShell.fir.opt.mlir 60364:7]
    connect sd_io_in_bridge.io.out.b.bits, sd.io.in.b.bits @[build/NutShell.fir.opt.mlir 60367:7]
    connect sd_io_in_bridge.io.out.ar.ready, sd.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60372:7]
    connect sd.io.in.ar.valid, sd_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60375:7]
    connect sd.io.in.ar.bits, sd_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60378:7]
    connect sd.io.in.r.ready, sd_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60383:7]
    connect sd_io_in_bridge.io.out.r.valid, sd.io.in.r.valid @[build/NutShell.fir.opt.mlir 60386:7]
    connect sd_io_in_bridge.io.out.r.bits, sd.io.in.r.bits @[build/NutShell.fir.opt.mlir 60389:7]
    inst meipGen_io_in_bridge of SimpleBus2AXI4Converter_8 @[build/NutShell.fir.opt.mlir 60390:92]
    connect meipGen_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60393:7]
    connect meipGen_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60394:7]
    connect xbar.io.out[5].req.ready, meipGen_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60399:7]
    connect meipGen_io_in_bridge.io.in.req.valid, xbar.io.out[5].req.valid @[build/NutShell.fir.opt.mlir 60402:7]
    connect meipGen_io_in_bridge.io.in.req.bits, xbar.io.out[5].req.bits @[build/NutShell.fir.opt.mlir 60405:7]
    connect meipGen_io_in_bridge.io.in.resp.ready, xbar.io.out[5].resp.ready @[build/NutShell.fir.opt.mlir 60410:7]
    connect xbar.io.out[5].resp.valid, meipGen_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60413:7]
    connect xbar.io.out[5].resp.bits, meipGen_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60416:7]
    connect meipGen_io_in_bridge.io.out.aw.ready, meipGen.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60421:7]
    connect meipGen.io.in.aw.valid, meipGen_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60424:7]
    connect meipGen.io.in.aw.bits, meipGen_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60427:7]
    connect meipGen_io_in_bridge.io.out.w.ready, meipGen.io.in.w.ready @[build/NutShell.fir.opt.mlir 60432:7]
    connect meipGen.io.in.w.valid, meipGen_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60435:7]
    connect meipGen.io.in.w.bits, meipGen_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60438:7]
    connect meipGen.io.in.b.ready, meipGen_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60443:7]
    connect meipGen_io_in_bridge.io.out.b.valid, meipGen.io.in.b.valid @[build/NutShell.fir.opt.mlir 60446:7]
    connect meipGen_io_in_bridge.io.out.b.bits, meipGen.io.in.b.bits @[build/NutShell.fir.opt.mlir 60449:7]
    connect meipGen_io_in_bridge.io.out.ar.ready, meipGen.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60454:7]
    connect meipGen.io.in.ar.valid, meipGen_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60457:7]
    connect meipGen.io.in.ar.bits, meipGen_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60460:7]
    connect meipGen.io.in.r.ready, meipGen_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60465:7]
    connect meipGen_io_in_bridge.io.out.r.valid, meipGen.io.in.r.valid @[build/NutShell.fir.opt.mlir 60468:7]
    connect meipGen_io_in_bridge.io.out.r.bits, meipGen.io.in.r.bits @[build/NutShell.fir.opt.mlir 60471:7]
    inst dma_io_in_bridge of SimpleBus2AXI4Converter_9 @[build/NutShell.fir.opt.mlir 60472:80]
    connect dma_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60475:7]
    connect dma_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60476:7]
    connect xbar.io.out[6].req.ready, dma_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60481:7]
    connect dma_io_in_bridge.io.in.req.valid, xbar.io.out[6].req.valid @[build/NutShell.fir.opt.mlir 60484:7]
    connect dma_io_in_bridge.io.in.req.bits, xbar.io.out[6].req.bits @[build/NutShell.fir.opt.mlir 60487:7]
    connect dma_io_in_bridge.io.in.resp.ready, xbar.io.out[6].resp.ready @[build/NutShell.fir.opt.mlir 60492:7]
    connect xbar.io.out[6].resp.valid, dma_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60495:7]
    connect xbar.io.out[6].resp.bits, dma_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60498:7]
    connect dma_io_in_bridge.io.out.aw.ready, dma.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60503:7]
    connect dma.io.in.aw.valid, dma_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60506:7]
    connect dma.io.in.aw.bits, dma_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60509:7]
    connect dma_io_in_bridge.io.out.w.ready, dma.io.in.w.ready @[build/NutShell.fir.opt.mlir 60514:7]
    connect dma.io.in.w.valid, dma_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60517:7]
    connect dma.io.in.w.bits, dma_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60520:7]
    connect dma.io.in.b.ready, dma_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60525:7]
    connect dma_io_in_bridge.io.out.b.valid, dma.io.in.b.valid @[build/NutShell.fir.opt.mlir 60528:7]
    connect dma_io_in_bridge.io.out.b.bits, dma.io.in.b.bits @[build/NutShell.fir.opt.mlir 60531:7]
    connect dma_io_in_bridge.io.out.ar.ready, dma.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60536:7]
    connect dma.io.in.ar.valid, dma_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60539:7]
    connect dma.io.in.ar.bits, dma_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60542:7]
    connect dma.io.in.r.ready, dma_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60547:7]
    connect dma_io_in_bridge.io.out.r.valid, dma.io.in.r.valid @[build/NutShell.fir.opt.mlir 60550:7]
    connect dma_io_in_bridge.io.out.r.bits, dma.io.in.r.bits @[build/NutShell.fir.opt.mlir 60553:7]
    connect io.dma.r.ready, dma.io.extra.dma.r.ready @[build/NutShell.fir.opt.mlir 60556:7]
    connect dma.io.extra.dma.r.valid, io.dma.r.valid @[build/NutShell.fir.opt.mlir 60559:7]
    connect dma.io.extra.dma.r.bits, io.dma.r.bits @[build/NutShell.fir.opt.mlir 60562:7]
    connect io.dma.ar.bits, dma.io.extra.dma.ar.bits @[build/NutShell.fir.opt.mlir 60563:7]
    connect io.dma.ar.valid, dma.io.extra.dma.ar.valid @[build/NutShell.fir.opt.mlir 60564:7]
    connect dma.io.extra.dma.ar.ready, io.dma.ar.ready @[build/NutShell.fir.opt.mlir 60565:7]
    connect io.dma.b.ready, dma.io.extra.dma.b.ready @[build/NutShell.fir.opt.mlir 60568:7]
    connect dma.io.extra.dma.b.valid, io.dma.b.valid @[build/NutShell.fir.opt.mlir 60571:7]
    connect dma.io.extra.dma.b.bits, io.dma.b.bits @[build/NutShell.fir.opt.mlir 60574:7]
    connect io.dma.w.bits, dma.io.extra.dma.w.bits @[build/NutShell.fir.opt.mlir 60575:7]
    connect io.dma.w.valid, dma.io.extra.dma.w.valid @[build/NutShell.fir.opt.mlir 60576:7]
    connect dma.io.extra.dma.w.ready, io.dma.w.ready @[build/NutShell.fir.opt.mlir 60577:7]
    connect io.dma.aw.bits, dma.io.extra.dma.aw.bits @[build/NutShell.fir.opt.mlir 60578:7]
    connect io.dma.aw.valid, dma.io.extra.dma.aw.valid @[build/NutShell.fir.opt.mlir 60579:7]
    connect dma.io.extra.dma.aw.ready, io.dma.aw.ready @[build/NutShell.fir.opt.mlir 60580:7]
    connect io.meip, meipGen.io.extra.meip @[build/NutShell.fir.opt.mlir 60581:7]
    connect uart.io.extra.in.ch, io.uart.in.ch @[build/NutShell.fir.opt.mlir 60582:7]
    connect io.uart.in.valid, uart.io.extra.in.valid @[build/NutShell.fir.opt.mlir 60583:7]
    connect io.uart.out, uart.io.extra.out @[build/NutShell.fir.opt.mlir 60584:7]

  public module SimTop : @[build/NutShell.fir.opt.mlir 60586:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 60586:30]
    input reset : UInt<1> @[build/NutShell.fir.opt.mlir 60586:56]
    output difftest : { step : UInt<64>, perfCtrl : { flip clean : UInt<1>, flip dump : UInt<1> }, logCtrl : { flip begin : UInt<64>, flip end : UInt<64>, flip level : UInt<64> }, uart : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 60586:85]

    inst soc of NutShell @[build/NutShell.fir.opt.mlir 60598:41]
    connect soc.clock, clock @[build/NutShell.fir.opt.mlir 60603:7]
    connect soc.reset, reset @[build/NutShell.fir.opt.mlir 60605:7]
    inst mem of AXI4RAM @[build/NutShell.fir.opt.mlir 60606:41]
    connect mem.clock, clock @[build/NutShell.fir.opt.mlir 60608:7]
    connect mem.reset, reset @[build/NutShell.fir.opt.mlir 60610:7]
    inst memdelay of AXI4Delayer @[build/NutShell.fir.opt.mlir 60611:56]
    connect memdelay.clock, clock @[build/NutShell.fir.opt.mlir 60614:7]
    connect memdelay.reset, reset @[build/NutShell.fir.opt.mlir 60616:7]
    inst mmio of SimMMIO @[build/NutShell.fir.opt.mlir 60617:44]
    connect mmio.clock, clock @[build/NutShell.fir.opt.mlir 60626:7]
    connect mmio.reset, reset @[build/NutShell.fir.opt.mlir 60628:7]
    connect mmio.io.dma.aw.ready, soc.io.frontend.aw.ready @[build/NutShell.fir.opt.mlir 60633:7]
    connect soc.io.frontend.aw.valid, mmio.io.dma.aw.valid @[build/NutShell.fir.opt.mlir 60636:7]
    connect soc.io.frontend.aw.bits, mmio.io.dma.aw.bits @[build/NutShell.fir.opt.mlir 60639:7]
    connect mmio.io.dma.w.ready, soc.io.frontend.w.ready @[build/NutShell.fir.opt.mlir 60644:7]
    connect soc.io.frontend.w.valid, mmio.io.dma.w.valid @[build/NutShell.fir.opt.mlir 60647:7]
    connect soc.io.frontend.w.bits, mmio.io.dma.w.bits @[build/NutShell.fir.opt.mlir 60650:7]
    connect soc.io.frontend.b.ready, mmio.io.dma.b.ready @[build/NutShell.fir.opt.mlir 60655:7]
    connect mmio.io.dma.b.valid, soc.io.frontend.b.valid @[build/NutShell.fir.opt.mlir 60658:7]
    connect mmio.io.dma.b.bits, soc.io.frontend.b.bits @[build/NutShell.fir.opt.mlir 60661:7]
    connect mmio.io.dma.ar.ready, soc.io.frontend.ar.ready @[build/NutShell.fir.opt.mlir 60666:7]
    connect soc.io.frontend.ar.valid, mmio.io.dma.ar.valid @[build/NutShell.fir.opt.mlir 60669:7]
    connect soc.io.frontend.ar.bits, mmio.io.dma.ar.bits @[build/NutShell.fir.opt.mlir 60672:7]
    connect soc.io.frontend.r.ready, mmio.io.dma.r.ready @[build/NutShell.fir.opt.mlir 60677:7]
    connect mmio.io.dma.r.valid, soc.io.frontend.r.valid @[build/NutShell.fir.opt.mlir 60680:7]
    connect mmio.io.dma.r.bits, soc.io.frontend.r.bits @[build/NutShell.fir.opt.mlir 60683:7]
    connect soc.io.mem.aw.ready, memdelay.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60688:7]
    connect memdelay.io.in.aw.valid, soc.io.mem.aw.valid @[build/NutShell.fir.opt.mlir 60691:7]
    connect memdelay.io.in.aw.bits, soc.io.mem.aw.bits @[build/NutShell.fir.opt.mlir 60694:7]
    connect soc.io.mem.w.ready, memdelay.io.in.w.ready @[build/NutShell.fir.opt.mlir 60699:7]
    connect memdelay.io.in.w.valid, soc.io.mem.w.valid @[build/NutShell.fir.opt.mlir 60702:7]
    connect memdelay.io.in.w.bits, soc.io.mem.w.bits @[build/NutShell.fir.opt.mlir 60705:7]
    connect memdelay.io.in.b.ready, soc.io.mem.b.ready @[build/NutShell.fir.opt.mlir 60710:7]
    connect soc.io.mem.b.valid, memdelay.io.in.b.valid @[build/NutShell.fir.opt.mlir 60713:7]
    connect soc.io.mem.b.bits, memdelay.io.in.b.bits @[build/NutShell.fir.opt.mlir 60716:7]
    connect soc.io.mem.ar.ready, memdelay.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60721:7]
    connect memdelay.io.in.ar.valid, soc.io.mem.ar.valid @[build/NutShell.fir.opt.mlir 60724:7]
    connect memdelay.io.in.ar.bits, soc.io.mem.ar.bits @[build/NutShell.fir.opt.mlir 60727:7]
    connect memdelay.io.in.r.ready, soc.io.mem.r.ready @[build/NutShell.fir.opt.mlir 60732:7]
    connect soc.io.mem.r.valid, memdelay.io.in.r.valid @[build/NutShell.fir.opt.mlir 60735:7]
    connect soc.io.mem.r.bits, memdelay.io.in.r.bits @[build/NutShell.fir.opt.mlir 60738:7]
    connect memdelay.io.out.aw.ready, mem.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60743:7]
    connect mem.io.in.aw.valid, memdelay.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60746:7]
    connect mem.io.in.aw.bits, memdelay.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60749:7]
    connect memdelay.io.out.w.ready, mem.io.in.w.ready @[build/NutShell.fir.opt.mlir 60754:7]
    connect mem.io.in.w.valid, memdelay.io.out.w.valid @[build/NutShell.fir.opt.mlir 60757:7]
    connect mem.io.in.w.bits, memdelay.io.out.w.bits @[build/NutShell.fir.opt.mlir 60760:7]
    connect mem.io.in.b.ready, memdelay.io.out.b.ready @[build/NutShell.fir.opt.mlir 60765:7]
    connect memdelay.io.out.b.valid, mem.io.in.b.valid @[build/NutShell.fir.opt.mlir 60768:7]
    connect memdelay.io.out.b.bits, mem.io.in.b.bits @[build/NutShell.fir.opt.mlir 60771:7]
    connect memdelay.io.out.ar.ready, mem.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60776:7]
    connect mem.io.in.ar.valid, memdelay.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60779:7]
    connect mem.io.in.ar.bits, memdelay.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60782:7]
    connect mem.io.in.r.ready, memdelay.io.out.r.ready @[build/NutShell.fir.opt.mlir 60787:7]
    connect memdelay.io.out.r.valid, mem.io.in.r.valid @[build/NutShell.fir.opt.mlir 60790:7]
    connect memdelay.io.out.r.bits, mem.io.in.r.bits @[build/NutShell.fir.opt.mlir 60793:7]
    connect soc.io.mmio.req.ready, mmio.io.rw.req.ready @[build/NutShell.fir.opt.mlir 60798:7]
    connect mmio.io.rw.req.valid, soc.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 60801:7]
    connect mmio.io.rw.req.bits, soc.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 60804:7]
    connect mmio.io.rw.resp.ready, soc.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 60809:7]
    connect soc.io.mmio.resp.valid, mmio.io.rw.resp.valid @[build/NutShell.fir.opt.mlir 60812:7]
    connect soc.io.mmio.resp.bits, mmio.io.rw.resp.bits @[build/NutShell.fir.opt.mlir 60815:7]
    connect soc.io.meip, mmio.io.meip @[build/NutShell.fir.opt.mlir 60816:7]
    connect difftest.step, pad(UInt<1>(1), 64) @[build/NutShell.fir.opt.mlir 60820:7]
    regreset difftest_timer : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 60822:25]
    node _difftest_timer_T = add(difftest_timer, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 60824:28]
    node _difftest_timer_T_1 = tail(_difftest_timer_T, 1) @[build/NutShell.fir.opt.mlir 60826:30]
    connect difftest_timer, _difftest_timer_T_1 @[build/NutShell.fir.opt.mlir 60827:7]
    wire difftest_log_enable : UInt<1> @[build/NutShell.fir.opt.mlir 60828:30]
    connect difftest_log_enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 60831:7]
    node _difftest_log_enable_en_T = geq(difftest_timer, difftest.logCtrl.begin) @[build/NutShell.fir.opt.mlir 60833:36]
    node _difftest_log_enable_en_T_1 = lt(difftest_timer, difftest.logCtrl.end) @[build/NutShell.fir.opt.mlir 60835:38]
    node _difftest_log_enable_en_T_2 = and(_difftest_log_enable_en_T, _difftest_log_enable_en_T_1) @[build/NutShell.fir.opt.mlir 60837:38]
    connect difftest_log_enable, _difftest_log_enable_en_T_2 @[build/NutShell.fir.opt.mlir 60838:7]
    invalidate difftest.uart.in.valid @[build/NutShell.fir.opt.mlir 60840:7]
    invalidate difftest.uart.out.ch @[build/NutShell.fir.opt.mlir 60842:7]
    invalidate difftest.uart.out.valid @[build/NutShell.fir.opt.mlir 60844:7]
    connect mmio.io.uart.in.ch, difftest.uart.in.ch @[build/NutShell.fir.opt.mlir 60845:7]
    connect difftest.uart.in.valid, mmio.io.uart.in.valid @[build/NutShell.fir.opt.mlir 60846:7]
    connect difftest.uart.out, mmio.io.uart.out @[build/NutShell.fir.opt.mlir 60847:7]
