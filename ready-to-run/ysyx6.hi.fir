FIRRTL version 4.0.0
circuit ysyx6 :%[[
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Stage0",
    "group":"Stage0"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Stage1",
    "group":"Stage1"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|FetchUnit",
    "group":"FetchUnit"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Decoder",
    "group":"Decoder"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|DecodeStage",
    "group":"DecodeStage"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|FrontEnd",
    "group":"FrontEnd"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|ExecuteUnit",
    "group":"ExecuteUnit"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|LoadStoreUnit",
    "group":"LoadStoreUnit"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|CSR",
    "group":"CSR"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|NaiveMultiplier",
    "group":"NaiveMultiplier"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|NaiveDivider",
    "group":"NaiveDivider"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|MDU",
    "group":"MDU"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Fence",
    "group":"Fence"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|EXU",
    "group":"EXU"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|WBU",
    "group":"WBU"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|RegFile",
    "group":"RegFile"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|ISU",
    "group":"ISU"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Backend",
    "group":"Backend"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Core",
    "group":"Core"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|LockingArbiter",
    "group":"LockingArbiter"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBusArbiter",
    "group":"SimpleBusArbiter"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|FakeCache",
    "group":"FakeCache"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|FakeCache_1",
    "group":"FakeCache"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|Tile",
    "group":"Tile"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBusClint",
    "group":"SimpleBusClint"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBusMem",
    "group":"SimpleBusMem"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBusUart",
    "group":"SimpleBusUart"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBusCrossbar",
    "group":"SimpleBusCrossbar"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|SimpleBus2AXI4",
    "group":"SimpleBus2AXI4"
  },
  {
    "class":"firrtl.transforms.DedupGroupAnnotation",
    "target":"~ysyx|ysyx",
    "group":"ysyx"
  },
  {
    "class":"chisel3.util.experimental.decode.DecodeTableAnnotation",
    "target":"~ysyx|Decoder>decodeBundle_plaOutput",
    "truthTable":"?????????????????000?????0000011->0000000000010011\n?????????????????000?????0001111->0000?????0000001\n?????????????????000?????0010011->0100000000000011\n?????????????????????????0010111->0110000000000111\n?????????????????000?????0011011->0000?????0000001\n?????????????????000?????0100011->0000010000010100\n0000000??????????000?????0110011->0000000000000001\n?????????????????????????0110111->0111000010000111\n0000000??????????000?????0111011->0000?????0000001\n?????????????????000?????1100011->0000100010001010\n?????????????????000?????1100111->0100010110000011\n?????????????????????????1101111->0110010100001001\n00000000000000000000000001110011->1111000110100010\n?????????????????001?????0000011->0000000010010011\n000000???????????001?????0010011->0100011100000011\n0000000??????????001?????0011011->0000?????0000001\n?????????????????001?????0100011->0000010010010100\n0000000??????????001?????0110011->0000011100000001\n0000000??????????001?????0111011->0000?????0000001\n?????????????????001?????1100011->0000001110001010\n?????????????????010?????0000011->0000000100010011\n?????????????????010?????0010011->0000?????0000001\n?????????????????010?????0100011->0000010100010100\n0000000??????????010?????0110011->0000000100000001\n?????????????????011?????0000011->0000?????0000001\n?????????????????011?????0010011->0100000110000011\n?????????????????011?????0100011->0000?????0000000\n0000000??????????011?????0110011->0000000110000001\n?????????????????100?????0000011->0000000110010011\n?????????????????100?????0010011->0100001010000011\n0000000??????????100?????0110011->0000001010000001\n?????????????????100?????1100011->0000010010001010\n?????????????????101?????0000011->0000001000010011\n000000???????????101?????0010011->0100100000000011\n0000000??????????101?????0011011->0000?????0000001\n0000000??????????101?????0110011->0000100000000001\n0000000??????????101?????0111011->0000?????0000001\n?????????????????101?????1100011->0000010000001010\n?????????????????110?????0000011->0000?????0000001\n?????????????????110?????0010011->0100011110000011\n0000000??????????110?????0110011->0000011110000001\n?????????????????110?????1100011->0000100110001010\n?????????????????111?????0010011->0100011010000011\n0000000??????????111?????0110011->0000011010000001\n?????????????????111?????1100011->0000100100001010\n00000000000100000000000001110011->0000011000000010\n0000001??????????000?????0110011->0000?????0000001\n0000001??????????001?????0110011->0000?????0000001\n0000001??????????010?????0110011->0000?????0000001\n0000001??????????011?????0110011->0000?????0000001\n0000001??????????100?????0110011->0000?????0000001\n0000001??????????101?????0110011->0000?????0000001\n0000001??????????110?????0110011->0000?????0000001\n0000001??????????111?????0110011->0000?????0000001\n0100000??????????000?????0110011->0000001000000001\n0100000??????????000?????0111011->0000?????0000001\n010000???????????101?????0010011->0100001100000011\n0100000??????????101?????0011011->0000?????0000001\n0100000??????????101?????0110011->0000001100000001\n0100000??????????101?????0111011->0000?????0000001\n                                  ????????????????",
    "minimizedTable":"??????????????????????????0?????->0000000000000001\n??????????????????0???????00?0??->0000000000010010\n???????????????????????????001??->0100010100000001\n?????????????????????????0?1????->0000000000000001\n??????????????????0???????010???->0100000000000010\n???????????????????????????1?1??->0110000000000110\n???????????????????0?????010????->0000010000010100\n??????????????????0??????010????->0000010000000100\n??????????????????????????11?1??->0001000010000000\n???????????????????0?????1?00???->0000000010000010\n?????????????????0?0?????1?0?0??->0000100000001000\n?????????????????????????1??1???->0110010100001001\n???????????0?????????????1?1????->1111000110100010\n?????????????????001?????0?0????->0000000010010000\n?????????????????001???????1?0??->0000011100000000\n?????????????????0?1?????1???0??->0000001110001010\n??????????????????10?????????0??->0000000100000000\n?????????????????01??????????0??->0000000100000000\n?????????????????010??????00????->0000000000010010\n??????????????????1??????1???0??->0000100100001010\n??????????????????11???????1?0??->0000000010000000\n??????????????????11??????01????->0100000000000010\n?????????????????1?0??????00????->0000000110000000\n?????????????????1?0???????1?0??->0000001010000000\n?????????????????1?0??????01????->0100000000000010\n?????????????????10??????1???0??->0000010000001010\n?????????????????1?1??????00????->0000001000000000\n?0???????????????101???????1?0??->0000100000000000\n?????????????????11??????0???0??->0000011000000000\n???????????1?????????????1?1????->0000011000000010\n?1????????????????????????11?0??->0000001000000000\n?1????????????????01???????1?0??->0000001100000000\n                                  ????????????????"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~ysyx|ISU>src1Ready"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~ysyx|ISU>src2Ready"
  },
  {
    "class":"firrtl.transforms.DontTouchAnnotation",
    "target":"~ysyx|ISU>Stall"
  }
]]
  module Stage0 : @[build/npc.fir.opt.mlir 3:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3:38]
    input reset : Reset @[build/npc.fir.opt.mlir 3:64]
    output io : { flip flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }[2], imem : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, id : UInt<32> } } } @[build/npc.fir.opt.mlir 3:91]

    regreset id_value : UInt<31>, clock, reset, UInt<31>(0) @[build/npc.fir.opt.mlir 29:19]
    regreset pc : UInt<32>, clock, reset, UInt<32>(2147483648) @[build/npc.fir.opt.mlir 31:13]
    node flush = or(io.flush[0].valid, io.flush[1].valid) @[build/npc.fir.opt.mlir 33:16]
    node _needFlush_T = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 35:23]
    node _needFlush_T_1 = and(io.flush[1].valid, io.flush[1].brType) @[build/npc.fir.opt.mlir 37:25]
    node needFlush = or(_needFlush_T, _needFlush_T_1) @[build/npc.fir.opt.mlir 39:20]
    node _pcUpdate_T = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 41:22]
    node pcUpdate = or(needFlush, _pcUpdate_T) @[build/npc.fir.opt.mlir 43:19]
    node _snpc_T = add(pc, UInt<3>(4)) @[build/npc.fir.opt.mlir 46:18]
    node snpc = tail(_snpc_T, 1) @[build/npc.fir.opt.mlir 48:15]
    node _npc_T = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 50:17]
    node _npc_T_1 = and(io.flush[1].valid, io.flush[1].brType) @[build/npc.fir.opt.mlir 52:19]
    node _npc_T_2 = mux(_npc_T_1, io.flush[1].target, snpc) @[build/npc.fir.opt.mlir 54:19]
    node npc = mux(_npc_T, io.flush[0].target, _npc_T_2) @[build/npc.fir.opt.mlir 56:14]
    when pcUpdate : @[build/npc.fir.opt.mlir 57:7]
      connect pc, npc @[build/npc.fir.opt.mlir 58:9]
    connect io.imem.bits.addr, pc @[build/npc.fir.opt.mlir 60:7]
    connect io.imem.bits.cmd, UInt<1>(0) @[build/npc.fir.opt.mlir 63:7]
    connect io.imem.bits.wmask, pad(UInt<1>(0), 4) @[build/npc.fir.opt.mlir 66:7]
    connect io.imem.bits.wdata, pad(UInt<1>(0), 32) @[build/npc.fir.opt.mlir 69:7]
    connect io.imem.bits.size, UInt<2>(2) @[build/npc.fir.opt.mlir 72:7]
    node _io_imem_valid_T = asUInt(reset) @[build/npc.fir.opt.mlir 74:27]
    node _io_imem_valid_T_1 = eq(_io_imem_valid_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 76:29]
    reg io_imem_valid_REG : UInt<1>, clock @[build/npc.fir.opt.mlir 77:28]
    connect io_imem_valid_REG, _io_imem_valid_T_1 @[build/npc.fir.opt.mlir 78:7]
    node _io_imem_valid_T_2 = and(io_imem_valid_REG, io.out.ready) @[build/npc.fir.opt.mlir 80:29]
    node _io_imem_valid_T_3 = eq(needFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 82:29]
    node _io_imem_valid_T_4 = and(_io_imem_valid_T_2, _io_imem_valid_T_3) @[build/npc.fir.opt.mlir 84:29]
    connect io.imem.valid, _io_imem_valid_T_4 @[build/npc.fir.opt.mlir 85:7]
    connect io.out.bits.id, pad(id_value, 32) @[build/npc.fir.opt.mlir 87:7]
    connect io.out.bits.pc, pc @[build/npc.fir.opt.mlir 88:7]
    node _io_out_valid_T = asUInt(reset) @[build/npc.fir.opt.mlir 90:26]
    node _io_out_valid_T_1 = eq(_io_out_valid_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 92:28]
    reg io_out_valid_REG : UInt<1>, clock @[build/npc.fir.opt.mlir 93:27]
    connect io_out_valid_REG, _io_out_valid_T_1 @[build/npc.fir.opt.mlir 94:7]
    node _io_out_valid_T_2 = eq(needFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 96:28]
    node _io_out_valid_T_3 = and(io_out_valid_REG, _io_out_valid_T_2) @[build/npc.fir.opt.mlir 98:28]
    node _io_out_valid_T_4 = and(io.imem.ready, io.imem.valid) @[build/npc.fir.opt.mlir 100:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/npc.fir.opt.mlir 102:28]
    connect io.out.valid, _io_out_valid_T_5 @[build/npc.fir.opt.mlir 103:7]

  module Stage1 : @[build/npc.fir.opt.mlir 105:5]
    input clock : Clock @[build/npc.fir.opt.mlir 105:38]
    input reset : Reset @[build/npc.fir.opt.mlir 105:64]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, id : UInt<32> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<32>, pc : UInt<32>, id : UInt<32> } }, flip imem : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } }, flip flush : UInt<1> } @[build/npc.fir.opt.mlir 105:91]

    connect io.imem.ready, io.out.ready @[build/npc.fir.opt.mlir 125:7]
    reg DelayFlush : UInt<1>, clock @[build/npc.fir.opt.mlir 126:21]
    connect DelayFlush, io.flush @[build/npc.fir.opt.mlir 127:7]
    node _MemReady_T = eq(io.out.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 130:22]
    node _MemReady_T_1 = and(io.imem.valid, _MemReady_T) @[build/npc.fir.opt.mlir 132:24]
    node _MemReady_T_2 = eq(io.flush, UInt<1>(0)) @[build/npc.fir.opt.mlir 134:24]
    node _MemReady_T_3 = and(_MemReady_T_1, _MemReady_T_2) @[build/npc.fir.opt.mlir 136:24]
    node _MemReady_T_4 = eq(DelayFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 138:24]
    node _MemReady_T_5 = and(_MemReady_T_3, _MemReady_T_4) @[build/npc.fir.opt.mlir 140:24]
    node _MemReady_T_6 = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 142:24]
    regreset MemReady : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 143:19]
    when _MemReady_T_5 : @[build/npc.fir.opt.mlir 145:7]
      connect MemReady, UInt<1>(1) @[build/npc.fir.opt.mlir 147:9]
    when _MemReady_T_6 : @[build/npc.fir.opt.mlir 149:7]
      connect MemReady, UInt<1>(0) @[build/npc.fir.opt.mlir 151:9]
    node _Stall_T = and(io.in.ready, io.in.valid) @[build/npc.fir.opt.mlir 154:19]
    node _Stall_T_1 = eq(io.imem.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 156:21]
    node _Stall_T_2 = and(_Stall_T, _Stall_T_1) @[build/npc.fir.opt.mlir 158:21]
    node _Stall_T_3 = or(io.imem.valid, io.flush) @[build/npc.fir.opt.mlir 160:21]
    regreset Stall : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 161:16]
    when _Stall_T_2 : @[build/npc.fir.opt.mlir 162:7]
      connect Stall, UInt<1>(1) @[build/npc.fir.opt.mlir 164:9]
    when _Stall_T_3 : @[build/npc.fir.opt.mlir 166:7]
      connect Stall, UInt<1>(0) @[build/npc.fir.opt.mlir 168:9]
    connect io.out.bits.instr, io.imem.bits.rdata @[build/npc.fir.opt.mlir 170:7]
    connect io.out.bits.instr, io.imem.bits.rdata @[build/npc.fir.opt.mlir 171:7]
    connect io.out.bits.pc, io.in.bits.pc @[build/npc.fir.opt.mlir 172:7]
    connect io.out.bits.id, io.in.bits.id @[build/npc.fir.opt.mlir 173:7]
    node _io_out_valid_T = or(io.imem.valid, MemReady) @[build/npc.fir.opt.mlir 175:26]
    node _io_out_valid_T_1 = eq(io.flush, UInt<1>(0)) @[build/npc.fir.opt.mlir 177:28]
    node _io_out_valid_T_2 = and(_io_out_valid_T, _io_out_valid_T_1) @[build/npc.fir.opt.mlir 179:28]
    node _io_out_valid_T_3 = and(_io_out_valid_T_2, io.in.valid) @[build/npc.fir.opt.mlir 181:28]
    node _io_out_valid_T_4 = eq(DelayFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 183:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/npc.fir.opt.mlir 185:28]
    connect io.out.valid, _io_out_valid_T_5 @[build/npc.fir.opt.mlir 186:7]
    node _io_in_ready_T = eq(io.flush, UInt<1>(0)) @[build/npc.fir.opt.mlir 188:25]
    node _io_in_ready_T_1 = and(io.out.ready, _io_in_ready_T) @[build/npc.fir.opt.mlir 190:27]
    node _io_in_ready_T_2 = eq(io.imem.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 192:27]
    node _io_in_ready_T_3 = and(io.in.valid, _io_in_ready_T_2) @[build/npc.fir.opt.mlir 194:27]
    node _io_in_ready_T_4 = or(Stall, _io_in_ready_T_3) @[build/npc.fir.opt.mlir 196:27]
    node _io_in_ready_T_5 = eq(_io_in_ready_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 198:27]
    node _io_in_ready_T_6 = and(_io_in_ready_T_1, _io_in_ready_T_5) @[build/npc.fir.opt.mlir 200:27]
    connect io.in.ready, _io_in_ready_T_6 @[build/npc.fir.opt.mlir 201:7]

  module FetchUnit : @[build/npc.fir.opt.mlir 203:5]
    input clock : Clock @[build/npc.fir.opt.mlir 203:41]
    input reset : Reset @[build/npc.fir.opt.mlir 203:67]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } }, flip flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<32>, pc : UInt<32>, id : UInt<32> } } } @[build/npc.fir.opt.mlir 203:94]

    inst f0 of Stage0 @[build/npc.fir.opt.mlir 221:38]
    connect f0.clock, clock @[build/npc.fir.opt.mlir 233:7]
    connect f0.reset, reset @[build/npc.fir.opt.mlir 234:7]
    inst f1 of Stage1 @[build/npc.fir.opt.mlir 235:38]
    connect f1.clock, clock @[build/npc.fir.opt.mlir 248:7]
    connect f1.reset, reset @[build/npc.fir.opt.mlir 249:7]
    connect f0.io.out.ready, f1.io.in.ready @[build/npc.fir.opt.mlir 252:7]
    connect f1.io.in.valid, f0.io.out.valid @[build/npc.fir.opt.mlir 255:7]
    connect f1.io.in.bits, f0.io.out.bits @[build/npc.fir.opt.mlir 258:7]
    connect f0.io.flush[0], io.flush[0] @[build/npc.fir.opt.mlir 259:7]
    connect f0.io.flush[1], io.flush[1] @[build/npc.fir.opt.mlir 260:7]
    connect io.imem.req.bits, f0.io.imem.bits @[build/npc.fir.opt.mlir 261:7]
    connect io.imem.req.valid, f0.io.imem.valid @[build/npc.fir.opt.mlir 262:7]
    connect f0.io.imem.ready, io.imem.req.ready @[build/npc.fir.opt.mlir 263:7]
    node _flush_T = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 265:19]
    node _flush_T_1 = and(io.flush[1].valid, io.flush[1].brType) @[build/npc.fir.opt.mlir 267:21]
    node flush = or(_flush_T, _flush_T_1) @[build/npc.fir.opt.mlir 269:16]
    connect io.imem.resp.ready, f1.io.imem.ready @[build/npc.fir.opt.mlir 272:7]
    connect f1.io.imem.valid, io.imem.resp.valid @[build/npc.fir.opt.mlir 275:7]
    connect f1.io.imem.bits, io.imem.resp.bits @[build/npc.fir.opt.mlir 278:7]
    connect io.out.bits, f1.io.out.bits @[build/npc.fir.opt.mlir 279:7]
    connect io.out.valid, f1.io.out.valid @[build/npc.fir.opt.mlir 280:7]
    connect f1.io.out.ready, io.out.ready @[build/npc.fir.opt.mlir 281:7]
    connect f1.io.flush, flush @[build/npc.fir.opt.mlir 282:7]
    node _T = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 284:13]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 286:16]
    when _T : @[build/npc.fir.opt.mlir 287:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 289:9]
    node _T_1 = and(f0.io.out.valid, f1.io.in.ready) @[build/npc.fir.opt.mlir 292:15]
    when _T_1 : @[build/npc.fir.opt.mlir 294:7]
      connect valid, UInt<1>(1) @[build/npc.fir.opt.mlir 296:9]
    when flush : @[build/npc.fir.opt.mlir 298:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 300:9]
    connect f0.io.out.ready, f1.io.in.ready @[build/npc.fir.opt.mlir 302:7]
    node _f1_io_in_bits_T = and(f0.io.out.valid, f1.io.in.ready) @[build/npc.fir.opt.mlir 304:27]
    reg f1_io_in_bits_r : { pc : UInt<32>, id : UInt<32> }, clock @[build/npc.fir.opt.mlir 305:26]
    when _f1_io_in_bits_T : @[build/npc.fir.opt.mlir 308:7]
      connect f1_io_in_bits_r, f0.io.out.bits @[build/npc.fir.opt.mlir 309:9]
    connect f1.io.in.bits.id, f1_io_in_bits_r.id @[build/npc.fir.opt.mlir 311:7]
    connect f1.io.in.bits.pc, f1_io_in_bits_r.pc @[build/npc.fir.opt.mlir 312:7]
    connect f1.io.in.valid, valid @[build/npc.fir.opt.mlir 313:7]

  module Decoder : @[build/npc.fir.opt.mlir 315:5]
    input clock : Clock @[build/npc.fir.opt.mlir 315:39]
    input reset : Reset @[build/npc.fir.opt.mlir 315:65]
    output io : { flip in : { instr : UInt<32>, pc : UInt<32>, id : UInt<32> }, out : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } } @[build/npc.fir.opt.mlir 315:92]

    wire decodeBundle_plaInput : UInt<32> @[build/npc.fir.opt.mlir 332:32]
    node decodeBundle_invInputs = not(decodeBundle_plaInput) @[build/npc.fir.opt.mlir 334:33]
    wire decodeBundle_plaOutput : UInt<16> @[build/npc.fir.opt.mlir 335:33]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 337:57]
    node decodeBundle_andMatrixOutputs_20_2 = andr(decodeBundle_andMatrixOutputs_andMatrixInput_0) @[build/npc.fir.opt.mlir 339:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_1 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 341:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 343:57]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 345:57]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 347:57]
    node decodeBundle_andMatrixOutputs_lo = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2, decodeBundle_andMatrixOutputs_andMatrixInput_3) @[build/npc.fir.opt.mlir 349:43]
    node decodeBundle_andMatrixOutputs_hi = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_1, decodeBundle_andMatrixOutputs_andMatrixInput_1) @[build/npc.fir.opt.mlir 351:43]
    node _decodeBundle_andMatrixOutputs_T = cat(decodeBundle_andMatrixOutputs_hi, decodeBundle_andMatrixOutputs_lo) @[build/npc.fir.opt.mlir 353:43]
    node decodeBundle_andMatrixOutputs_2_2 = andr(_decodeBundle_andMatrixOutputs_T) @[build/npc.fir.opt.mlir 355:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_2 = bits(decodeBundle_plaInput, 2, 2) @[build/npc.fir.opt.mlir 357:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_1 = bits(decodeBundle_invInputs, 3, 3) @[build/npc.fir.opt.mlir 359:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_1 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 361:59]
    node decodeBundle_andMatrixOutputs_hi_1 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_2, decodeBundle_andMatrixOutputs_andMatrixInput_1_1) @[build/npc.fir.opt.mlir 363:45]
    node _decodeBundle_andMatrixOutputs_T_1 = cat(decodeBundle_andMatrixOutputs_hi_1, decodeBundle_andMatrixOutputs_andMatrixInput_2_1) @[build/npc.fir.opt.mlir 365:45]
    node decodeBundle_andMatrixOutputs_17_2 = andr(_decodeBundle_andMatrixOutputs_T_1) @[build/npc.fir.opt.mlir 367:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_3 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 369:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_2 = bits(decodeBundle_invInputs, 6, 6) @[build/npc.fir.opt.mlir 371:59]
    node _decodeBundle_andMatrixOutputs_T_2 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_3, decodeBundle_andMatrixOutputs_andMatrixInput_1_2) @[build/npc.fir.opt.mlir 373:45]
    node decodeBundle_andMatrixOutputs_27_2 = andr(_decodeBundle_andMatrixOutputs_T_2) @[build/npc.fir.opt.mlir 375:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_4 = bits(decodeBundle_invInputs, 3, 3) @[build/npc.fir.opt.mlir 377:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_3 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 379:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_2 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 381:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_1 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 383:59]
    node decodeBundle_andMatrixOutputs_lo_1 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_2, decodeBundle_andMatrixOutputs_andMatrixInput_3_1) @[build/npc.fir.opt.mlir 385:45]
    node decodeBundle_andMatrixOutputs_hi_2 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_4, decodeBundle_andMatrixOutputs_andMatrixInput_1_3) @[build/npc.fir.opt.mlir 387:45]
    node _decodeBundle_andMatrixOutputs_T_3 = cat(decodeBundle_andMatrixOutputs_hi_2, decodeBundle_andMatrixOutputs_lo_1) @[build/npc.fir.opt.mlir 389:45]
    node decodeBundle_andMatrixOutputs_9_2 = andr(_decodeBundle_andMatrixOutputs_T_3) @[build/npc.fir.opt.mlir 391:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_5 = bits(decodeBundle_plaInput, 2, 2) @[build/npc.fir.opt.mlir 393:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_4 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 395:59]
    node _decodeBundle_andMatrixOutputs_T_4 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_5, decodeBundle_andMatrixOutputs_andMatrixInput_1_4) @[build/npc.fir.opt.mlir 397:45]
    node decodeBundle_andMatrixOutputs_23_2 = andr(_decodeBundle_andMatrixOutputs_T_4) @[build/npc.fir.opt.mlir 399:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_6 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 401:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_5 = bits(decodeBundle_plaInput, 5, 5) @[build/npc.fir.opt.mlir 403:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_3 = bits(decodeBundle_invInputs, 6, 6) @[build/npc.fir.opt.mlir 405:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_2 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 407:59]
    node decodeBundle_andMatrixOutputs_lo_2 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_3, decodeBundle_andMatrixOutputs_andMatrixInput_3_2) @[build/npc.fir.opt.mlir 409:45]
    node decodeBundle_andMatrixOutputs_hi_3 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_6, decodeBundle_andMatrixOutputs_andMatrixInput_1_5) @[build/npc.fir.opt.mlir 411:45]
    node _decodeBundle_andMatrixOutputs_T_5 = cat(decodeBundle_andMatrixOutputs_hi_3, decodeBundle_andMatrixOutputs_lo_2) @[build/npc.fir.opt.mlir 413:45]
    node decodeBundle_andMatrixOutputs_10_2 = andr(_decodeBundle_andMatrixOutputs_T_5) @[build/npc.fir.opt.mlir 415:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_7 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 417:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_6 = bits(decodeBundle_plaInput, 5, 5) @[build/npc.fir.opt.mlir 419:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_4 = bits(decodeBundle_invInputs, 6, 6) @[build/npc.fir.opt.mlir 421:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_3 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 423:59]
    node decodeBundle_andMatrixOutputs_lo_3 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_4, decodeBundle_andMatrixOutputs_andMatrixInput_3_3) @[build/npc.fir.opt.mlir 425:45]
    node decodeBundle_andMatrixOutputs_hi_4 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_7, decodeBundle_andMatrixOutputs_andMatrixInput_1_6) @[build/npc.fir.opt.mlir 427:45]
    node _decodeBundle_andMatrixOutputs_T_6 = cat(decodeBundle_andMatrixOutputs_hi_4, decodeBundle_andMatrixOutputs_lo_3) @[build/npc.fir.opt.mlir 429:45]
    node decodeBundle_andMatrixOutputs_26_2 = andr(_decodeBundle_andMatrixOutputs_T_6) @[build/npc.fir.opt.mlir 431:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_8 = bits(decodeBundle_plaInput, 2, 2) @[build/npc.fir.opt.mlir 433:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_7 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 435:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_5 = bits(decodeBundle_plaInput, 5, 5) @[build/npc.fir.opt.mlir 437:59]
    node decodeBundle_andMatrixOutputs_hi_5 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_8, decodeBundle_andMatrixOutputs_andMatrixInput_1_7) @[build/npc.fir.opt.mlir 439:45]
    node _decodeBundle_andMatrixOutputs_T_7 = cat(decodeBundle_andMatrixOutputs_hi_5, decodeBundle_andMatrixOutputs_andMatrixInput_2_5) @[build/npc.fir.opt.mlir 441:45]
    node decodeBundle_andMatrixOutputs_19_2 = andr(_decodeBundle_andMatrixOutputs_T_7) @[build/npc.fir.opt.mlir 443:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_9 = bits(decodeBundle_invInputs, 3, 3) @[build/npc.fir.opt.mlir 445:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_8 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 447:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_6 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 449:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_4 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 451:59]
    node decodeBundle_andMatrixOutputs_lo_4 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_6, decodeBundle_andMatrixOutputs_andMatrixInput_3_4) @[build/npc.fir.opt.mlir 453:45]
    node decodeBundle_andMatrixOutputs_hi_6 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_9, decodeBundle_andMatrixOutputs_andMatrixInput_1_8) @[build/npc.fir.opt.mlir 455:45]
    node _decodeBundle_andMatrixOutputs_T_8 = cat(decodeBundle_andMatrixOutputs_hi_6, decodeBundle_andMatrixOutputs_lo_4) @[build/npc.fir.opt.mlir 457:45]
    node decodeBundle_andMatrixOutputs_25_2 = andr(_decodeBundle_andMatrixOutputs_T_8) @[build/npc.fir.opt.mlir 459:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_10 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 461:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_9 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 463:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_7 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 465:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_5 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 467:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 469:57]
    node decodeBundle_andMatrixOutputs_lo_5 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_5, decodeBundle_andMatrixOutputs_andMatrixInput_4) @[build/npc.fir.opt.mlir 471:45]
    node decodeBundle_andMatrixOutputs_hi_hi = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_10, decodeBundle_andMatrixOutputs_andMatrixInput_1_9) @[build/npc.fir.opt.mlir 473:46]
    node decodeBundle_andMatrixOutputs_hi_7 = cat(decodeBundle_andMatrixOutputs_hi_hi, decodeBundle_andMatrixOutputs_andMatrixInput_2_7) @[build/npc.fir.opt.mlir 475:45]
    node _decodeBundle_andMatrixOutputs_T_9 = cat(decodeBundle_andMatrixOutputs_hi_7, decodeBundle_andMatrixOutputs_lo_5) @[build/npc.fir.opt.mlir 477:45]
    node decodeBundle_andMatrixOutputs_3_2 = andr(_decodeBundle_andMatrixOutputs_T_9) @[build/npc.fir.opt.mlir 479:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_11 = bits(decodeBundle_plaInput, 3, 3) @[build/npc.fir.opt.mlir 481:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_10 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 483:60]
    node _decodeBundle_andMatrixOutputs_T_10 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_11, decodeBundle_andMatrixOutputs_andMatrixInput_1_10) @[build/npc.fir.opt.mlir 485:46]
    node decodeBundle_andMatrixOutputs_24_2 = andr(_decodeBundle_andMatrixOutputs_T_10) @[build/npc.fir.opt.mlir 487:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_12 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 489:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_11 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 491:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_8 = bits(decodeBundle_invInputs, 20, 20) @[build/npc.fir.opt.mlir 493:59]
    node decodeBundle_andMatrixOutputs_hi_8 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_12, decodeBundle_andMatrixOutputs_andMatrixInput_1_11) @[build/npc.fir.opt.mlir 495:45]
    node _decodeBundle_andMatrixOutputs_T_11 = cat(decodeBundle_andMatrixOutputs_hi_8, decodeBundle_andMatrixOutputs_andMatrixInput_2_8) @[build/npc.fir.opt.mlir 497:46]
    node decodeBundle_andMatrixOutputs_12_2 = andr(_decodeBundle_andMatrixOutputs_T_11) @[build/npc.fir.opt.mlir 499:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_13 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 501:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_12 = bits(decodeBundle_invInputs, 6, 6) @[build/npc.fir.opt.mlir 503:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_9 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 505:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_6 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 507:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4_1 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 509:59]
    node decodeBundle_andMatrixOutputs_lo_6 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_6, decodeBundle_andMatrixOutputs_andMatrixInput_4_1) @[build/npc.fir.opt.mlir 511:45]
    node decodeBundle_andMatrixOutputs_hi_hi_1 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_13, decodeBundle_andMatrixOutputs_andMatrixInput_1_12) @[build/npc.fir.opt.mlir 513:48]
    node decodeBundle_andMatrixOutputs_hi_9 = cat(decodeBundle_andMatrixOutputs_hi_hi_1, decodeBundle_andMatrixOutputs_andMatrixInput_2_9) @[build/npc.fir.opt.mlir 515:45]
    node _decodeBundle_andMatrixOutputs_T_12 = cat(decodeBundle_andMatrixOutputs_hi_9, decodeBundle_andMatrixOutputs_lo_6) @[build/npc.fir.opt.mlir 517:46]
    node decodeBundle_andMatrixOutputs_31_2 = andr(_decodeBundle_andMatrixOutputs_T_12) @[build/npc.fir.opt.mlir 519:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_14 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 521:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_13 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 523:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_10 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 525:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_7 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 527:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4_2 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 529:59]
    node decodeBundle_andMatrixOutputs_lo_7 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_7, decodeBundle_andMatrixOutputs_andMatrixInput_4_2) @[build/npc.fir.opt.mlir 531:45]
    node decodeBundle_andMatrixOutputs_hi_hi_2 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_14, decodeBundle_andMatrixOutputs_andMatrixInput_1_13) @[build/npc.fir.opt.mlir 533:48]
    node decodeBundle_andMatrixOutputs_hi_10 = cat(decodeBundle_andMatrixOutputs_hi_hi_2, decodeBundle_andMatrixOutputs_andMatrixInput_2_10) @[build/npc.fir.opt.mlir 535:46]
    node _decodeBundle_andMatrixOutputs_T_13 = cat(decodeBundle_andMatrixOutputs_hi_10, decodeBundle_andMatrixOutputs_lo_7) @[build/npc.fir.opt.mlir 537:46]
    node decodeBundle_andMatrixOutputs_11_2 = andr(_decodeBundle_andMatrixOutputs_T_13) @[build/npc.fir.opt.mlir 539:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_15 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 541:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_14 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 543:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_11 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 545:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_8 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 547:59]
    node decodeBundle_andMatrixOutputs_lo_8 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_11, decodeBundle_andMatrixOutputs_andMatrixInput_3_8) @[build/npc.fir.opt.mlir 549:45]
    node decodeBundle_andMatrixOutputs_hi_11 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_15, decodeBundle_andMatrixOutputs_andMatrixInput_1_14) @[build/npc.fir.opt.mlir 551:46]
    node _decodeBundle_andMatrixOutputs_T_14 = cat(decodeBundle_andMatrixOutputs_hi_11, decodeBundle_andMatrixOutputs_lo_8) @[build/npc.fir.opt.mlir 553:46]
    node decodeBundle_andMatrixOutputs_18_2 = andr(_decodeBundle_andMatrixOutputs_T_14) @[build/npc.fir.opt.mlir 555:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_16 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 557:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_15 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 559:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_12 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 561:60]
    node decodeBundle_andMatrixOutputs_hi_12 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_16, decodeBundle_andMatrixOutputs_andMatrixInput_1_15) @[build/npc.fir.opt.mlir 563:46]
    node _decodeBundle_andMatrixOutputs_T_15 = cat(decodeBundle_andMatrixOutputs_hi_12, decodeBundle_andMatrixOutputs_andMatrixInput_2_12) @[build/npc.fir.opt.mlir 565:46]
    node decodeBundle_andMatrixOutputs_13_2 = andr(_decodeBundle_andMatrixOutputs_T_15) @[build/npc.fir.opt.mlir 567:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_17 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 569:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_16 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 571:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_13 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 573:60]
    node decodeBundle_andMatrixOutputs_hi_13 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_17, decodeBundle_andMatrixOutputs_andMatrixInput_1_16) @[build/npc.fir.opt.mlir 575:46]
    node _decodeBundle_andMatrixOutputs_T_16 = cat(decodeBundle_andMatrixOutputs_hi_13, decodeBundle_andMatrixOutputs_andMatrixInput_2_13) @[build/npc.fir.opt.mlir 577:46]
    node decodeBundle_andMatrixOutputs_15_2 = andr(_decodeBundle_andMatrixOutputs_T_16) @[build/npc.fir.opt.mlir 579:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_18 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 581:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_17 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 583:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_14 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 585:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_9 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 587:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4_3 = bits(decodeBundle_invInputs, 14, 14) @[build/npc.fir.opt.mlir 589:59]
    node decodeBundle_andMatrixOutputs_lo_9 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_9, decodeBundle_andMatrixOutputs_andMatrixInput_4_3) @[build/npc.fir.opt.mlir 591:45]
    node decodeBundle_andMatrixOutputs_hi_hi_3 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_18, decodeBundle_andMatrixOutputs_andMatrixInput_1_17) @[build/npc.fir.opt.mlir 593:48]
    node decodeBundle_andMatrixOutputs_hi_14 = cat(decodeBundle_andMatrixOutputs_hi_hi_3, decodeBundle_andMatrixOutputs_andMatrixInput_2_14) @[build/npc.fir.opt.mlir 595:46]
    node _decodeBundle_andMatrixOutputs_T_17 = cat(decodeBundle_andMatrixOutputs_hi_14, decodeBundle_andMatrixOutputs_lo_9) @[build/npc.fir.opt.mlir 597:46]
    node decodeBundle_andMatrixOutputs_28_2 = andr(_decodeBundle_andMatrixOutputs_T_17) @[build/npc.fir.opt.mlir 599:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_19 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 601:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_18 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 603:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_15 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 605:60]
    node decodeBundle_andMatrixOutputs_hi_15 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_19, decodeBundle_andMatrixOutputs_andMatrixInput_1_18) @[build/npc.fir.opt.mlir 607:46]
    node _decodeBundle_andMatrixOutputs_T_18 = cat(decodeBundle_andMatrixOutputs_hi_15, decodeBundle_andMatrixOutputs_andMatrixInput_2_15) @[build/npc.fir.opt.mlir 609:46]
    node decodeBundle_andMatrixOutputs_4_2 = andr(_decodeBundle_andMatrixOutputs_T_18) @[build/npc.fir.opt.mlir 611:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_20 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 613:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_19 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 615:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_16 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 617:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_10 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 619:60]
    node decodeBundle_andMatrixOutputs_lo_10 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_16, decodeBundle_andMatrixOutputs_andMatrixInput_3_10) @[build/npc.fir.opt.mlir 621:46]
    node decodeBundle_andMatrixOutputs_hi_16 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_20, decodeBundle_andMatrixOutputs_andMatrixInput_1_19) @[build/npc.fir.opt.mlir 623:46]
    node _decodeBundle_andMatrixOutputs_T_19 = cat(decodeBundle_andMatrixOutputs_hi_16, decodeBundle_andMatrixOutputs_lo_10) @[build/npc.fir.opt.mlir 625:46]
    node decodeBundle_andMatrixOutputs_7_2 = andr(_decodeBundle_andMatrixOutputs_T_19) @[build/npc.fir.opt.mlir 627:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_21 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 629:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_20 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 631:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_17 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 633:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_11 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 635:60]
    node decodeBundle_andMatrixOutputs_lo_11 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_17, decodeBundle_andMatrixOutputs_andMatrixInput_3_11) @[build/npc.fir.opt.mlir 637:46]
    node decodeBundle_andMatrixOutputs_hi_17 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_21, decodeBundle_andMatrixOutputs_andMatrixInput_1_20) @[build/npc.fir.opt.mlir 639:46]
    node _decodeBundle_andMatrixOutputs_T_20 = cat(decodeBundle_andMatrixOutputs_hi_17, decodeBundle_andMatrixOutputs_lo_11) @[build/npc.fir.opt.mlir 641:46]
    node decodeBundle_andMatrixOutputs_16_2 = andr(_decodeBundle_andMatrixOutputs_T_20) @[build/npc.fir.opt.mlir 643:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_22 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 645:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_21 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 647:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_18 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 649:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_12 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 651:60]
    node decodeBundle_andMatrixOutputs_lo_12 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_18, decodeBundle_andMatrixOutputs_andMatrixInput_3_12) @[build/npc.fir.opt.mlir 653:46]
    node decodeBundle_andMatrixOutputs_hi_18 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_22, decodeBundle_andMatrixOutputs_andMatrixInput_1_21) @[build/npc.fir.opt.mlir 655:46]
    node _decodeBundle_andMatrixOutputs_T_21 = cat(decodeBundle_andMatrixOutputs_hi_18, decodeBundle_andMatrixOutputs_lo_12) @[build/npc.fir.opt.mlir 657:46]
    node decodeBundle_andMatrixOutputs_30_2 = andr(_decodeBundle_andMatrixOutputs_T_21) @[build/npc.fir.opt.mlir 659:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_23 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 661:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_22 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 663:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_19 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 665:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_13 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 667:60]
    node decodeBundle_andMatrixOutputs_lo_13 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_19, decodeBundle_andMatrixOutputs_andMatrixInput_3_13) @[build/npc.fir.opt.mlir 669:46]
    node decodeBundle_andMatrixOutputs_hi_19 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_23, decodeBundle_andMatrixOutputs_andMatrixInput_1_22) @[build/npc.fir.opt.mlir 671:46]
    node _decodeBundle_andMatrixOutputs_T_22 = cat(decodeBundle_andMatrixOutputs_hi_19, decodeBundle_andMatrixOutputs_lo_13) @[build/npc.fir.opt.mlir 673:46]
    node decodeBundle_andMatrixOutputs_6_2 = andr(_decodeBundle_andMatrixOutputs_T_22) @[build/npc.fir.opt.mlir 675:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_24 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 677:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_23 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 679:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_20 = bits(decodeBundle_invInputs, 12, 12) @[build/npc.fir.opt.mlir 681:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_14 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 683:60]
    node decodeBundle_andMatrixOutputs_lo_14 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_20, decodeBundle_andMatrixOutputs_andMatrixInput_3_14) @[build/npc.fir.opt.mlir 685:46]
    node decodeBundle_andMatrixOutputs_hi_20 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_24, decodeBundle_andMatrixOutputs_andMatrixInput_1_23) @[build/npc.fir.opt.mlir 687:46]
    node _decodeBundle_andMatrixOutputs_T_23 = cat(decodeBundle_andMatrixOutputs_hi_20, decodeBundle_andMatrixOutputs_lo_14) @[build/npc.fir.opt.mlir 689:46]
    node decodeBundle_andMatrixOutputs_1_2 = andr(_decodeBundle_andMatrixOutputs_T_23) @[build/npc.fir.opt.mlir 691:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_25 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 693:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_24 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 695:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_21 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 697:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_15 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 699:60]
    node decodeBundle_andMatrixOutputs_lo_15 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_21, decodeBundle_andMatrixOutputs_andMatrixInput_3_15) @[build/npc.fir.opt.mlir 701:46]
    node decodeBundle_andMatrixOutputs_hi_21 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_25, decodeBundle_andMatrixOutputs_andMatrixInput_1_24) @[build/npc.fir.opt.mlir 703:46]
    node _decodeBundle_andMatrixOutputs_T_24 = cat(decodeBundle_andMatrixOutputs_hi_21, decodeBundle_andMatrixOutputs_lo_15) @[build/npc.fir.opt.mlir 705:46]
    node decodeBundle_andMatrixOutputs_22_2 = andr(_decodeBundle_andMatrixOutputs_T_24) @[build/npc.fir.opt.mlir 707:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_26 = bits(decodeBundle_invInputs, 4, 4) @[build/npc.fir.opt.mlir 709:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_25 = bits(decodeBundle_invInputs, 5, 5) @[build/npc.fir.opt.mlir 711:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_22 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 713:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_16 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 715:60]
    node decodeBundle_andMatrixOutputs_lo_16 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_22, decodeBundle_andMatrixOutputs_andMatrixInput_3_16) @[build/npc.fir.opt.mlir 717:46]
    node decodeBundle_andMatrixOutputs_hi_22 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_26, decodeBundle_andMatrixOutputs_andMatrixInput_1_25) @[build/npc.fir.opt.mlir 719:46]
    node _decodeBundle_andMatrixOutputs_T_25 = cat(decodeBundle_andMatrixOutputs_hi_22, decodeBundle_andMatrixOutputs_lo_16) @[build/npc.fir.opt.mlir 721:46]
    node decodeBundle_andMatrixOutputs_5_2 = andr(_decodeBundle_andMatrixOutputs_T_25) @[build/npc.fir.opt.mlir 723:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_27 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 725:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_26 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 727:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_23 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 729:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_17 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 731:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4_4 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 733:59]
    node decodeBundle_andMatrixOutputs_andMatrixInput_5 = bits(decodeBundle_invInputs, 30, 30) @[build/npc.fir.opt.mlir 735:57]
    node decodeBundle_andMatrixOutputs_lo_hi = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_17, decodeBundle_andMatrixOutputs_andMatrixInput_4_4) @[build/npc.fir.opt.mlir 737:46]
    node decodeBundle_andMatrixOutputs_lo_17 = cat(decodeBundle_andMatrixOutputs_lo_hi, decodeBundle_andMatrixOutputs_andMatrixInput_5) @[build/npc.fir.opt.mlir 739:46]
    node decodeBundle_andMatrixOutputs_hi_hi_4 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_27, decodeBundle_andMatrixOutputs_andMatrixInput_1_26) @[build/npc.fir.opt.mlir 741:48]
    node decodeBundle_andMatrixOutputs_hi_23 = cat(decodeBundle_andMatrixOutputs_hi_hi_4, decodeBundle_andMatrixOutputs_andMatrixInput_2_23) @[build/npc.fir.opt.mlir 743:46]
    node _decodeBundle_andMatrixOutputs_T_26 = cat(decodeBundle_andMatrixOutputs_hi_23, decodeBundle_andMatrixOutputs_lo_17) @[build/npc.fir.opt.mlir 745:46]
    node decodeBundle_andMatrixOutputs_8_2 = andr(_decodeBundle_andMatrixOutputs_T_26) @[build/npc.fir.opt.mlir 747:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_28 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 749:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_27 = bits(decodeBundle_invInputs, 6, 6) @[build/npc.fir.opt.mlir 751:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_24 = bits(decodeBundle_plaInput, 13, 13) @[build/npc.fir.opt.mlir 753:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_18 = bits(decodeBundle_plaInput, 14, 14) @[build/npc.fir.opt.mlir 755:60]
    node decodeBundle_andMatrixOutputs_lo_18 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_24, decodeBundle_andMatrixOutputs_andMatrixInput_3_18) @[build/npc.fir.opt.mlir 757:46]
    node decodeBundle_andMatrixOutputs_hi_24 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_28, decodeBundle_andMatrixOutputs_andMatrixInput_1_27) @[build/npc.fir.opt.mlir 759:46]
    node _decodeBundle_andMatrixOutputs_T_27 = cat(decodeBundle_andMatrixOutputs_hi_24, decodeBundle_andMatrixOutputs_lo_18) @[build/npc.fir.opt.mlir 761:46]
    node decodeBundle_andMatrixOutputs_0_2 = andr(_decodeBundle_andMatrixOutputs_T_27) @[build/npc.fir.opt.mlir 763:44]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_29 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 765:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_28 = bits(decodeBundle_plaInput, 6, 6) @[build/npc.fir.opt.mlir 767:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_25 = bits(decodeBundle_plaInput, 20, 20) @[build/npc.fir.opt.mlir 769:60]
    node decodeBundle_andMatrixOutputs_hi_25 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_29, decodeBundle_andMatrixOutputs_andMatrixInput_1_28) @[build/npc.fir.opt.mlir 771:46]
    node _decodeBundle_andMatrixOutputs_T_28 = cat(decodeBundle_andMatrixOutputs_hi_25, decodeBundle_andMatrixOutputs_andMatrixInput_2_25) @[build/npc.fir.opt.mlir 773:46]
    node decodeBundle_andMatrixOutputs_14_2 = andr(_decodeBundle_andMatrixOutputs_T_28) @[build/npc.fir.opt.mlir 775:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_30 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 777:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_29 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 779:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_26 = bits(decodeBundle_plaInput, 5, 5) @[build/npc.fir.opt.mlir 781:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_19 = bits(decodeBundle_plaInput, 30, 30) @[build/npc.fir.opt.mlir 783:60]
    node decodeBundle_andMatrixOutputs_lo_19 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_2_26, decodeBundle_andMatrixOutputs_andMatrixInput_3_19) @[build/npc.fir.opt.mlir 785:46]
    node decodeBundle_andMatrixOutputs_hi_26 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_30, decodeBundle_andMatrixOutputs_andMatrixInput_1_29) @[build/npc.fir.opt.mlir 787:46]
    node _decodeBundle_andMatrixOutputs_T_29 = cat(decodeBundle_andMatrixOutputs_hi_26, decodeBundle_andMatrixOutputs_lo_19) @[build/npc.fir.opt.mlir 789:46]
    node decodeBundle_andMatrixOutputs_21_2 = andr(_decodeBundle_andMatrixOutputs_T_29) @[build/npc.fir.opt.mlir 791:45]
    node decodeBundle_andMatrixOutputs_andMatrixInput_0_31 = bits(decodeBundle_invInputs, 2, 2) @[build/npc.fir.opt.mlir 793:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_1_30 = bits(decodeBundle_plaInput, 4, 4) @[build/npc.fir.opt.mlir 795:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_2_27 = bits(decodeBundle_plaInput, 12, 12) @[build/npc.fir.opt.mlir 797:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_3_20 = bits(decodeBundle_invInputs, 13, 13) @[build/npc.fir.opt.mlir 799:60]
    node decodeBundle_andMatrixOutputs_andMatrixInput_4_5 = bits(decodeBundle_plaInput, 30, 30) @[build/npc.fir.opt.mlir 801:59]
    node decodeBundle_andMatrixOutputs_lo_20 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_3_20, decodeBundle_andMatrixOutputs_andMatrixInput_4_5) @[build/npc.fir.opt.mlir 803:46]
    node decodeBundle_andMatrixOutputs_hi_hi_5 = cat(decodeBundle_andMatrixOutputs_andMatrixInput_0_31, decodeBundle_andMatrixOutputs_andMatrixInput_1_30) @[build/npc.fir.opt.mlir 805:48]
    node decodeBundle_andMatrixOutputs_hi_27 = cat(decodeBundle_andMatrixOutputs_hi_hi_5, decodeBundle_andMatrixOutputs_andMatrixInput_2_27) @[build/npc.fir.opt.mlir 807:46]
    node _decodeBundle_andMatrixOutputs_T_30 = cat(decodeBundle_andMatrixOutputs_hi_27, decodeBundle_andMatrixOutputs_lo_20) @[build/npc.fir.opt.mlir 809:46]
    node decodeBundle_andMatrixOutputs_29_2 = andr(_decodeBundle_andMatrixOutputs_T_30) @[build/npc.fir.opt.mlir 811:45]
    node decodeBundle_orMatrixOutputs_lo = cat(decodeBundle_andMatrixOutputs_27_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 813:42]
    node decodeBundle_orMatrixOutputs_hi = cat(decodeBundle_andMatrixOutputs_20_2, decodeBundle_andMatrixOutputs_17_2) @[build/npc.fir.opt.mlir 815:42]
    node _decodeBundle_orMatrixOutputs_T = cat(decodeBundle_orMatrixOutputs_hi, decodeBundle_orMatrixOutputs_lo) @[build/npc.fir.opt.mlir 817:42]
    node _decodeBundle_orMatrixOutputs_T_1 = orr(_decodeBundle_orMatrixOutputs_T) @[build/npc.fir.opt.mlir 819:44]
    node decodeBundle_orMatrixOutputs_lo_lo_hi = cat(decodeBundle_andMatrixOutputs_1_2, decodeBundle_andMatrixOutputs_22_2) @[build/npc.fir.opt.mlir 821:48]
    node decodeBundle_orMatrixOutputs_lo_lo = cat(decodeBundle_orMatrixOutputs_lo_lo_hi, decodeBundle_andMatrixOutputs_14_2) @[build/npc.fir.opt.mlir 823:45]
    node decodeBundle_orMatrixOutputs_lo_hi_hi = cat(decodeBundle_andMatrixOutputs_28_2, decodeBundle_andMatrixOutputs_4_2) @[build/npc.fir.opt.mlir 825:48]
    node decodeBundle_orMatrixOutputs_lo_hi = cat(decodeBundle_orMatrixOutputs_lo_hi_hi, decodeBundle_andMatrixOutputs_16_2) @[build/npc.fir.opt.mlir 827:45]
    node decodeBundle_orMatrixOutputs_lo_1 = cat(decodeBundle_orMatrixOutputs_lo_hi, decodeBundle_orMatrixOutputs_lo_lo) @[build/npc.fir.opt.mlir 829:44]
    node decodeBundle_orMatrixOutputs_hi_lo_hi = cat(decodeBundle_andMatrixOutputs_25_2, decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 831:48]
    node decodeBundle_orMatrixOutputs_hi_lo = cat(decodeBundle_orMatrixOutputs_hi_lo_hi, decodeBundle_andMatrixOutputs_18_2) @[build/npc.fir.opt.mlir 833:45]
    node decodeBundle_orMatrixOutputs_hi_hi_hi = cat(decodeBundle_andMatrixOutputs_2_2, decodeBundle_andMatrixOutputs_9_2) @[build/npc.fir.opt.mlir 835:48]
    node decodeBundle_orMatrixOutputs_hi_hi = cat(decodeBundle_orMatrixOutputs_hi_hi_hi, decodeBundle_andMatrixOutputs_23_2) @[build/npc.fir.opt.mlir 837:45]
    node decodeBundle_orMatrixOutputs_hi_1 = cat(decodeBundle_orMatrixOutputs_hi_hi, decodeBundle_orMatrixOutputs_hi_lo) @[build/npc.fir.opt.mlir 839:44]
    node _decodeBundle_orMatrixOutputs_T_2 = cat(decodeBundle_orMatrixOutputs_hi_1, decodeBundle_orMatrixOutputs_lo_1) @[build/npc.fir.opt.mlir 841:44]
    node _decodeBundle_orMatrixOutputs_T_3 = orr(_decodeBundle_orMatrixOutputs_T_2) @[build/npc.fir.opt.mlir 843:44]
    node decodeBundle_orMatrixOutputs_hi_2 = cat(decodeBundle_andMatrixOutputs_23_2, decodeBundle_andMatrixOutputs_10_2) @[build/npc.fir.opt.mlir 845:44]
    node _decodeBundle_orMatrixOutputs_T_4 = cat(decodeBundle_orMatrixOutputs_hi_2, decodeBundle_andMatrixOutputs_26_2) @[build/npc.fir.opt.mlir 847:44]
    node _decodeBundle_orMatrixOutputs_T_5 = orr(_decodeBundle_orMatrixOutputs_T_4) @[build/npc.fir.opt.mlir 849:44]
    node decodeBundle_orMatrixOutputs_lo_2 = cat(decodeBundle_andMatrixOutputs_4_2, decodeBundle_andMatrixOutputs_22_2) @[build/npc.fir.opt.mlir 851:44]
    node decodeBundle_orMatrixOutputs_hi_hi_1 = cat(decodeBundle_andMatrixOutputs_3_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 853:47]
    node decodeBundle_orMatrixOutputs_hi_3 = cat(decodeBundle_orMatrixOutputs_hi_hi_1, decodeBundle_andMatrixOutputs_18_2) @[build/npc.fir.opt.mlir 855:44]
    node _decodeBundle_orMatrixOutputs_T_6 = cat(decodeBundle_orMatrixOutputs_hi_3, decodeBundle_orMatrixOutputs_lo_2) @[build/npc.fir.opt.mlir 857:44]
    node _decodeBundle_orMatrixOutputs_T_7 = orr(_decodeBundle_orMatrixOutputs_T_6) @[build/npc.fir.opt.mlir 859:44]
    node decodeBundle_orMatrixOutputs_lo_3 = cat(decodeBundle_andMatrixOutputs_31_2, decodeBundle_andMatrixOutputs_28_2) @[build/npc.fir.opt.mlir 861:44]
    node decodeBundle_orMatrixOutputs_hi_4 = cat(decodeBundle_andMatrixOutputs_2_2, decodeBundle_andMatrixOutputs_10_2) @[build/npc.fir.opt.mlir 863:44]
    node _decodeBundle_orMatrixOutputs_T_8 = cat(decodeBundle_orMatrixOutputs_hi_4, decodeBundle_orMatrixOutputs_lo_3) @[build/npc.fir.opt.mlir 865:44]
    node _decodeBundle_orMatrixOutputs_T_9 = orr(_decodeBundle_orMatrixOutputs_T_8) @[build/npc.fir.opt.mlir 867:44]
    node _decodeBundle_orMatrixOutputs_T_10 = orr(decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 869:45]
    node decodeBundle_orMatrixOutputs_lo_lo_1 = cat(decodeBundle_andMatrixOutputs_30_2, decodeBundle_andMatrixOutputs_6_2) @[build/npc.fir.opt.mlir 871:47]
    node decodeBundle_orMatrixOutputs_lo_hi_1 = cat(decodeBundle_andMatrixOutputs_18_2, decodeBundle_andMatrixOutputs_7_2) @[build/npc.fir.opt.mlir 873:47]
    node decodeBundle_orMatrixOutputs_lo_4 = cat(decodeBundle_orMatrixOutputs_lo_hi_1, decodeBundle_orMatrixOutputs_lo_lo_1) @[build/npc.fir.opt.mlir 875:44]
    node decodeBundle_orMatrixOutputs_hi_lo_1 = cat(decodeBundle_andMatrixOutputs_12_2, decodeBundle_andMatrixOutputs_31_2) @[build/npc.fir.opt.mlir 877:47]
    node decodeBundle_orMatrixOutputs_hi_hi_2 = cat(decodeBundle_andMatrixOutputs_19_2, decodeBundle_andMatrixOutputs_25_2) @[build/npc.fir.opt.mlir 879:47]
    node decodeBundle_orMatrixOutputs_hi_5 = cat(decodeBundle_orMatrixOutputs_hi_hi_2, decodeBundle_orMatrixOutputs_hi_lo_1) @[build/npc.fir.opt.mlir 881:44]
    node _decodeBundle_orMatrixOutputs_T_11 = cat(decodeBundle_orMatrixOutputs_hi_5, decodeBundle_orMatrixOutputs_lo_4) @[build/npc.fir.opt.mlir 883:45]
    node _decodeBundle_orMatrixOutputs_T_12 = orr(_decodeBundle_orMatrixOutputs_T_11) @[build/npc.fir.opt.mlir 885:45]
    node decodeBundle_orMatrixOutputs_lo_lo_2 = cat(decodeBundle_andMatrixOutputs_30_2, decodeBundle_andMatrixOutputs_29_2) @[build/npc.fir.opt.mlir 887:47]
    node decodeBundle_orMatrixOutputs_lo_hi_hi_1 = cat(decodeBundle_andMatrixOutputs_13_2, decodeBundle_andMatrixOutputs_15_2) @[build/npc.fir.opt.mlir 889:50]
    node decodeBundle_orMatrixOutputs_lo_hi_2 = cat(decodeBundle_orMatrixOutputs_lo_hi_hi_1, decodeBundle_andMatrixOutputs_4_2) @[build/npc.fir.opt.mlir 891:47]
    node decodeBundle_orMatrixOutputs_lo_5 = cat(decodeBundle_orMatrixOutputs_lo_hi_2, decodeBundle_orMatrixOutputs_lo_lo_2) @[build/npc.fir.opt.mlir 893:44]
    node decodeBundle_orMatrixOutputs_hi_lo_2 = cat(decodeBundle_andMatrixOutputs_11_2, decodeBundle_andMatrixOutputs_18_2) @[build/npc.fir.opt.mlir 895:47]
    node decodeBundle_orMatrixOutputs_hi_hi_hi_1 = cat(decodeBundle_andMatrixOutputs_17_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 897:50]
    node decodeBundle_orMatrixOutputs_hi_hi_3 = cat(decodeBundle_orMatrixOutputs_hi_hi_hi_1, decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 899:47]
    node decodeBundle_orMatrixOutputs_hi_6 = cat(decodeBundle_orMatrixOutputs_hi_hi_3, decodeBundle_orMatrixOutputs_hi_lo_2) @[build/npc.fir.opt.mlir 901:44]
    node _decodeBundle_orMatrixOutputs_T_13 = cat(decodeBundle_orMatrixOutputs_hi_6, decodeBundle_orMatrixOutputs_lo_5) @[build/npc.fir.opt.mlir 903:45]
    node _decodeBundle_orMatrixOutputs_T_14 = orr(_decodeBundle_orMatrixOutputs_T_13) @[build/npc.fir.opt.mlir 905:45]
    node decodeBundle_orMatrixOutputs_lo_lo_3 = cat(decodeBundle_andMatrixOutputs_21_2, decodeBundle_andMatrixOutputs_29_2) @[build/npc.fir.opt.mlir 907:47]
    node decodeBundle_orMatrixOutputs_lo_hi_3 = cat(decodeBundle_andMatrixOutputs_0_2, decodeBundle_andMatrixOutputs_14_2) @[build/npc.fir.opt.mlir 909:47]
    node decodeBundle_orMatrixOutputs_lo_6 = cat(decodeBundle_orMatrixOutputs_lo_hi_3, decodeBundle_orMatrixOutputs_lo_lo_3) @[build/npc.fir.opt.mlir 911:44]
    node decodeBundle_orMatrixOutputs_hi_lo_3 = cat(decodeBundle_andMatrixOutputs_6_2, decodeBundle_andMatrixOutputs_5_2) @[build/npc.fir.opt.mlir 913:47]
    node decodeBundle_orMatrixOutputs_hi_hi_4 = cat(decodeBundle_andMatrixOutputs_11_2, decodeBundle_andMatrixOutputs_18_2) @[build/npc.fir.opt.mlir 915:47]
    node decodeBundle_orMatrixOutputs_hi_7 = cat(decodeBundle_orMatrixOutputs_hi_hi_4, decodeBundle_orMatrixOutputs_hi_lo_3) @[build/npc.fir.opt.mlir 917:44]
    node _decodeBundle_orMatrixOutputs_T_15 = cat(decodeBundle_orMatrixOutputs_hi_7, decodeBundle_orMatrixOutputs_lo_6) @[build/npc.fir.opt.mlir 919:45]
    node _decodeBundle_orMatrixOutputs_T_16 = orr(_decodeBundle_orMatrixOutputs_T_15) @[build/npc.fir.opt.mlir 921:45]
    node decodeBundle_orMatrixOutputs_lo_lo_4 = cat(decodeBundle_andMatrixOutputs_0_2, decodeBundle_andMatrixOutputs_14_2) @[build/npc.fir.opt.mlir 923:47]
    node decodeBundle_orMatrixOutputs_lo_hi_4 = cat(decodeBundle_andMatrixOutputs_11_2, decodeBundle_andMatrixOutputs_22_2) @[build/npc.fir.opt.mlir 925:47]
    node decodeBundle_orMatrixOutputs_lo_7 = cat(decodeBundle_orMatrixOutputs_lo_hi_4, decodeBundle_orMatrixOutputs_lo_lo_4) @[build/npc.fir.opt.mlir 927:44]
    node decodeBundle_orMatrixOutputs_hi_lo_4 = cat(decodeBundle_andMatrixOutputs_26_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 929:47]
    node decodeBundle_orMatrixOutputs_hi_hi_5 = cat(decodeBundle_andMatrixOutputs_17_2, decodeBundle_andMatrixOutputs_10_2) @[build/npc.fir.opt.mlir 931:47]
    node decodeBundle_orMatrixOutputs_hi_8 = cat(decodeBundle_orMatrixOutputs_hi_hi_5, decodeBundle_orMatrixOutputs_hi_lo_4) @[build/npc.fir.opt.mlir 933:44]
    node _decodeBundle_orMatrixOutputs_T_17 = cat(decodeBundle_orMatrixOutputs_hi_8, decodeBundle_orMatrixOutputs_lo_7) @[build/npc.fir.opt.mlir 935:45]
    node _decodeBundle_orMatrixOutputs_T_18 = orr(_decodeBundle_orMatrixOutputs_T_17) @[build/npc.fir.opt.mlir 937:45]
    node decodeBundle_orMatrixOutputs_hi_9 = cat(decodeBundle_andMatrixOutputs_3_2, decodeBundle_andMatrixOutputs_4_2) @[build/npc.fir.opt.mlir 939:44]
    node _decodeBundle_orMatrixOutputs_T_19 = cat(decodeBundle_orMatrixOutputs_hi_9, decodeBundle_andMatrixOutputs_8_2) @[build/npc.fir.opt.mlir 941:45]
    node _decodeBundle_orMatrixOutputs_T_20 = orr(_decodeBundle_orMatrixOutputs_T_19) @[build/npc.fir.opt.mlir 943:45]
    node _decodeBundle_orMatrixOutputs_T_21 = cat(decodeBundle_andMatrixOutputs_19_2, decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 945:45]
    node _decodeBundle_orMatrixOutputs_T_22 = orr(_decodeBundle_orMatrixOutputs_T_21) @[build/npc.fir.opt.mlir 947:45]
    node decodeBundle_orMatrixOutputs_hi_10 = cat(decodeBundle_andMatrixOutputs_23_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 949:45]
    node _decodeBundle_orMatrixOutputs_T_23 = cat(decodeBundle_orMatrixOutputs_hi_10, decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 951:45]
    node _decodeBundle_orMatrixOutputs_T_24 = orr(_decodeBundle_orMatrixOutputs_T_23) @[build/npc.fir.opt.mlir 953:45]
    node decodeBundle_orMatrixOutputs_lo_hi_5 = cat(decodeBundle_andMatrixOutputs_12_2, decodeBundle_andMatrixOutputs_16_2) @[build/npc.fir.opt.mlir 955:47]
    node decodeBundle_orMatrixOutputs_lo_8 = cat(decodeBundle_orMatrixOutputs_lo_hi_5, decodeBundle_andMatrixOutputs_1_2) @[build/npc.fir.opt.mlir 957:44]
    node decodeBundle_orMatrixOutputs_hi_lo_5 = cat(decodeBundle_andMatrixOutputs_23_2, decodeBundle_andMatrixOutputs_24_2) @[build/npc.fir.opt.mlir 959:47]
    node decodeBundle_orMatrixOutputs_hi_hi_6 = cat(decodeBundle_andMatrixOutputs_17_2, decodeBundle_andMatrixOutputs_9_2) @[build/npc.fir.opt.mlir 961:47]
    node decodeBundle_orMatrixOutputs_hi_11 = cat(decodeBundle_orMatrixOutputs_hi_hi_6, decodeBundle_orMatrixOutputs_hi_lo_5) @[build/npc.fir.opt.mlir 963:45]
    node _decodeBundle_orMatrixOutputs_T_25 = cat(decodeBundle_orMatrixOutputs_hi_11, decodeBundle_orMatrixOutputs_lo_8) @[build/npc.fir.opt.mlir 965:45]
    node _decodeBundle_orMatrixOutputs_T_26 = orr(_decodeBundle_orMatrixOutputs_T_25) @[build/npc.fir.opt.mlir 967:45]
    node _decodeBundle_orMatrixOutputs_T_27 = orr(decodeBundle_andMatrixOutputs_12_2) @[build/npc.fir.opt.mlir 969:45]
    node decodeBundle_orMatrixOutputs_lo_lo_lo = cat(_decodeBundle_orMatrixOutputs_T_3, _decodeBundle_orMatrixOutputs_T_1) @[build/npc.fir.opt.mlir 971:48]
    node decodeBundle_orMatrixOutputs_lo_lo_hi_1 = cat(_decodeBundle_orMatrixOutputs_T_7, _decodeBundle_orMatrixOutputs_T_5) @[build/npc.fir.opt.mlir 973:50]
    node decodeBundle_orMatrixOutputs_lo_lo_5 = cat(decodeBundle_orMatrixOutputs_lo_lo_hi_1, decodeBundle_orMatrixOutputs_lo_lo_lo) @[build/npc.fir.opt.mlir 975:47]
    node decodeBundle_orMatrixOutputs_lo_hi_lo = cat(_decodeBundle_orMatrixOutputs_T_10, _decodeBundle_orMatrixOutputs_T_9) @[build/npc.fir.opt.mlir 977:48]
    node decodeBundle_orMatrixOutputs_lo_hi_hi_2 = cat(_decodeBundle_orMatrixOutputs_T_12, UInt<1>(0)) @[build/npc.fir.opt.mlir 980:50]
    node decodeBundle_orMatrixOutputs_lo_hi_6 = cat(decodeBundle_orMatrixOutputs_lo_hi_hi_2, decodeBundle_orMatrixOutputs_lo_hi_lo) @[build/npc.fir.opt.mlir 982:47]
    node decodeBundle_orMatrixOutputs_lo_9 = cat(decodeBundle_orMatrixOutputs_lo_hi_6, decodeBundle_orMatrixOutputs_lo_lo_5) @[build/npc.fir.opt.mlir 984:44]
    node decodeBundle_orMatrixOutputs_hi_lo_lo = cat(_decodeBundle_orMatrixOutputs_T_16, _decodeBundle_orMatrixOutputs_T_14) @[build/npc.fir.opt.mlir 986:48]
    node decodeBundle_orMatrixOutputs_hi_lo_hi_1 = cat(_decodeBundle_orMatrixOutputs_T_20, _decodeBundle_orMatrixOutputs_T_18) @[build/npc.fir.opt.mlir 988:50]
    node decodeBundle_orMatrixOutputs_hi_lo_6 = cat(decodeBundle_orMatrixOutputs_hi_lo_hi_1, decodeBundle_orMatrixOutputs_hi_lo_lo) @[build/npc.fir.opt.mlir 990:47]
    node decodeBundle_orMatrixOutputs_hi_hi_lo = cat(_decodeBundle_orMatrixOutputs_T_24, _decodeBundle_orMatrixOutputs_T_22) @[build/npc.fir.opt.mlir 992:48]
    node decodeBundle_orMatrixOutputs_hi_hi_hi_2 = cat(_decodeBundle_orMatrixOutputs_T_27, _decodeBundle_orMatrixOutputs_T_26) @[build/npc.fir.opt.mlir 994:50]
    node decodeBundle_orMatrixOutputs_hi_hi_7 = cat(decodeBundle_orMatrixOutputs_hi_hi_hi_2, decodeBundle_orMatrixOutputs_hi_hi_lo) @[build/npc.fir.opt.mlir 996:47]
    node decodeBundle_orMatrixOutputs_hi_12 = cat(decodeBundle_orMatrixOutputs_hi_hi_7, decodeBundle_orMatrixOutputs_hi_lo_6) @[build/npc.fir.opt.mlir 998:45]
    node decodeBundle_orMatrixOutputs = cat(decodeBundle_orMatrixOutputs_hi_12, decodeBundle_orMatrixOutputs_lo_9) @[build/npc.fir.opt.mlir 1000:39]
    node _decodeBundle_invMatrixOutputs_T = bits(decodeBundle_orMatrixOutputs, 0, 0) @[build/npc.fir.opt.mlir 1002:43]
    node _decodeBundle_invMatrixOutputs_T_1 = bits(decodeBundle_orMatrixOutputs, 1, 1) @[build/npc.fir.opt.mlir 1004:45]
    node _decodeBundle_invMatrixOutputs_T_2 = bits(decodeBundle_orMatrixOutputs, 2, 2) @[build/npc.fir.opt.mlir 1006:45]
    node _decodeBundle_invMatrixOutputs_T_3 = bits(decodeBundle_orMatrixOutputs, 3, 3) @[build/npc.fir.opt.mlir 1008:45]
    node _decodeBundle_invMatrixOutputs_T_4 = bits(decodeBundle_orMatrixOutputs, 4, 4) @[build/npc.fir.opt.mlir 1010:45]
    node _decodeBundle_invMatrixOutputs_T_5 = bits(decodeBundle_orMatrixOutputs, 5, 5) @[build/npc.fir.opt.mlir 1012:45]
    node _decodeBundle_invMatrixOutputs_T_6 = bits(decodeBundle_orMatrixOutputs, 6, 6) @[build/npc.fir.opt.mlir 1014:45]
    node _decodeBundle_invMatrixOutputs_T_7 = bits(decodeBundle_orMatrixOutputs, 7, 7) @[build/npc.fir.opt.mlir 1016:45]
    node _decodeBundle_invMatrixOutputs_T_8 = bits(decodeBundle_orMatrixOutputs, 8, 8) @[build/npc.fir.opt.mlir 1018:45]
    node _decodeBundle_invMatrixOutputs_T_9 = bits(decodeBundle_orMatrixOutputs, 9, 9) @[build/npc.fir.opt.mlir 1020:45]
    node _decodeBundle_invMatrixOutputs_T_10 = bits(decodeBundle_orMatrixOutputs, 10, 10) @[build/npc.fir.opt.mlir 1022:46]
    node _decodeBundle_invMatrixOutputs_T_11 = bits(decodeBundle_orMatrixOutputs, 11, 11) @[build/npc.fir.opt.mlir 1024:46]
    node _decodeBundle_invMatrixOutputs_T_12 = bits(decodeBundle_orMatrixOutputs, 12, 12) @[build/npc.fir.opt.mlir 1026:46]
    node _decodeBundle_invMatrixOutputs_T_13 = bits(decodeBundle_orMatrixOutputs, 13, 13) @[build/npc.fir.opt.mlir 1028:46]
    node _decodeBundle_invMatrixOutputs_T_14 = bits(decodeBundle_orMatrixOutputs, 14, 14) @[build/npc.fir.opt.mlir 1030:46]
    node _decodeBundle_invMatrixOutputs_T_15 = bits(decodeBundle_orMatrixOutputs, 15, 15) @[build/npc.fir.opt.mlir 1032:46]
    node decodeBundle_invMatrixOutputs_lo_lo_lo = cat(_decodeBundle_invMatrixOutputs_T_1, _decodeBundle_invMatrixOutputs_T) @[build/npc.fir.opt.mlir 1034:49]
    node decodeBundle_invMatrixOutputs_lo_lo_hi = cat(_decodeBundle_invMatrixOutputs_T_3, _decodeBundle_invMatrixOutputs_T_2) @[build/npc.fir.opt.mlir 1036:49]
    node decodeBundle_invMatrixOutputs_lo_lo = cat(decodeBundle_invMatrixOutputs_lo_lo_hi, decodeBundle_invMatrixOutputs_lo_lo_lo) @[build/npc.fir.opt.mlir 1038:46]
    node decodeBundle_invMatrixOutputs_lo_hi_lo = cat(_decodeBundle_invMatrixOutputs_T_5, _decodeBundle_invMatrixOutputs_T_4) @[build/npc.fir.opt.mlir 1040:49]
    node decodeBundle_invMatrixOutputs_lo_hi_hi = cat(_decodeBundle_invMatrixOutputs_T_7, _decodeBundle_invMatrixOutputs_T_6) @[build/npc.fir.opt.mlir 1042:49]
    node decodeBundle_invMatrixOutputs_lo_hi = cat(decodeBundle_invMatrixOutputs_lo_hi_hi, decodeBundle_invMatrixOutputs_lo_hi_lo) @[build/npc.fir.opt.mlir 1044:46]
    node decodeBundle_invMatrixOutputs_lo = cat(decodeBundle_invMatrixOutputs_lo_hi, decodeBundle_invMatrixOutputs_lo_lo) @[build/npc.fir.opt.mlir 1046:43]
    node decodeBundle_invMatrixOutputs_hi_lo_lo = cat(_decodeBundle_invMatrixOutputs_T_9, _decodeBundle_invMatrixOutputs_T_8) @[build/npc.fir.opt.mlir 1048:49]
    node decodeBundle_invMatrixOutputs_hi_lo_hi = cat(_decodeBundle_invMatrixOutputs_T_11, _decodeBundle_invMatrixOutputs_T_10) @[build/npc.fir.opt.mlir 1050:49]
    node decodeBundle_invMatrixOutputs_hi_lo = cat(decodeBundle_invMatrixOutputs_hi_lo_hi, decodeBundle_invMatrixOutputs_hi_lo_lo) @[build/npc.fir.opt.mlir 1052:46]
    node decodeBundle_invMatrixOutputs_hi_hi_lo = cat(_decodeBundle_invMatrixOutputs_T_13, _decodeBundle_invMatrixOutputs_T_12) @[build/npc.fir.opt.mlir 1054:49]
    node decodeBundle_invMatrixOutputs_hi_hi_hi = cat(_decodeBundle_invMatrixOutputs_T_15, _decodeBundle_invMatrixOutputs_T_14) @[build/npc.fir.opt.mlir 1056:49]
    node decodeBundle_invMatrixOutputs_hi_hi = cat(decodeBundle_invMatrixOutputs_hi_hi_hi, decodeBundle_invMatrixOutputs_hi_hi_lo) @[build/npc.fir.opt.mlir 1058:46]
    node decodeBundle_invMatrixOutputs_hi = cat(decodeBundle_invMatrixOutputs_hi_hi, decodeBundle_invMatrixOutputs_hi_lo) @[build/npc.fir.opt.mlir 1060:43]
    node decodeBundle_invMatrixOutputs = cat(decodeBundle_invMatrixOutputs_hi, decodeBundle_invMatrixOutputs_lo) @[build/npc.fir.opt.mlir 1062:40]
    connect decodeBundle_plaOutput, decodeBundle_invMatrixOutputs @[build/npc.fir.opt.mlir 1063:7]
    connect decodeBundle_plaInput, io.in.instr @[build/npc.fir.opt.mlir 1064:7]
    wire decodeBundle : { OpRight : UInt<2>, OpLeft : UInt<2>, OpType : UInt<5>, FuType : UInt<3>, ImmType : UInt<3>, WriteEnable : UInt<1> } @[build/npc.fir.opt.mlir 1065:23]
    wire _decodeBundle_WIRE : UInt<16> @[build/npc.fir.opt.mlir 1072:29]
    connect _decodeBundle_WIRE, decodeBundle_plaOutput @[build/npc.fir.opt.mlir 1073:7]
    node _decodeBundle_T = bits(_decodeBundle_WIRE, 0, 0) @[build/npc.fir.opt.mlir 1075:26]
    connect decodeBundle.WriteEnable, _decodeBundle_T @[build/npc.fir.opt.mlir 1076:7]
    node _decodeBundle_T_1 = bits(_decodeBundle_WIRE, 3, 1) @[build/npc.fir.opt.mlir 1078:28]
    connect decodeBundle.ImmType, _decodeBundle_T_1 @[build/npc.fir.opt.mlir 1079:7]
    node _decodeBundle_T_2 = bits(_decodeBundle_WIRE, 6, 4) @[build/npc.fir.opt.mlir 1081:28]
    connect decodeBundle.FuType, _decodeBundle_T_2 @[build/npc.fir.opt.mlir 1082:7]
    node _decodeBundle_T_3 = bits(_decodeBundle_WIRE, 11, 7) @[build/npc.fir.opt.mlir 1084:28]
    connect decodeBundle.OpType, _decodeBundle_T_3 @[build/npc.fir.opt.mlir 1085:7]
    node _decodeBundle_T_4 = bits(_decodeBundle_WIRE, 13, 12) @[build/npc.fir.opt.mlir 1087:28]
    connect decodeBundle.OpLeft, _decodeBundle_T_4 @[build/npc.fir.opt.mlir 1088:7]
    node _decodeBundle_T_5 = bits(_decodeBundle_WIRE, 15, 14) @[build/npc.fir.opt.mlir 1090:28]
    connect decodeBundle.OpRight, _decodeBundle_T_5 @[build/npc.fir.opt.mlir 1091:7]
    connect io.out.rfWen, decodeBundle.WriteEnable @[build/npc.fir.opt.mlir 1092:7]
    node _T = bits(io.in.instr, 19, 15) @[build/npc.fir.opt.mlir 1094:13]
    node _T_1 = bits(io.in.instr, 24, 20) @[build/npc.fir.opt.mlir 1096:15]
    wire _WIRE : UInt<5>[2] @[build/npc.fir.opt.mlir 1097:16]
    connect _WIRE[0], _T @[build/npc.fir.opt.mlir 1100:7]
    connect _WIRE[1], _T_1 @[build/npc.fir.opt.mlir 1101:7]
    connect io.out.rfSrc, _WIRE @[build/npc.fir.opt.mlir 1102:7]
    node _io_out_rfDest_T = bits(io.in.instr, 11, 7) @[build/npc.fir.opt.mlir 1104:27]
    node _io_out_rfDest_T_1 = mux(io.out.rfWen, _io_out_rfDest_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 1106:29]
    connect io.out.rfDest, _io_out_rfDest_T_1 @[build/npc.fir.opt.mlir 1107:7]
    node _io_out_imm_T = bits(io.in.instr, 31, 20) @[build/npc.fir.opt.mlir 1109:24]
    node io_out_imm_signBit = bits(_io_out_imm_T, 11, 11) @[build/npc.fir.opt.mlir 1111:29]
    node _io_out_imm_T_1 = mux(io_out_imm_signBit, UInt<20>(1048575), UInt<20>(0)) @[build/npc.fir.opt.mlir 1115:26]
    node _io_out_imm_T_2 = cat(_io_out_imm_T_1, _io_out_imm_T) @[build/npc.fir.opt.mlir 1117:26]
    node _io_out_imm_T_3 = bits(io.in.instr, 31, 12) @[build/npc.fir.opt.mlir 1119:26]
    node _io_out_imm_T_4 = cat(_io_out_imm_T_3, UInt<12>(0)) @[build/npc.fir.opt.mlir 1122:26]
    node io_out_imm_signBit_1 = bits(_io_out_imm_T_4, 31, 31) @[build/npc.fir.opt.mlir 1124:31]
    node _io_out_imm_T_5 = bits(_io_out_imm_T_4, 31, 0) @[build/npc.fir.opt.mlir 1126:26]
    node _io_out_imm_T_6 = bits(io.in.instr, 31, 31) @[build/npc.fir.opt.mlir 1128:26]
    node _io_out_imm_T_7 = bits(io.in.instr, 19, 12) @[build/npc.fir.opt.mlir 1130:26]
    node _io_out_imm_T_8 = bits(io.in.instr, 20, 20) @[build/npc.fir.opt.mlir 1132:26]
    node _io_out_imm_T_9 = bits(io.in.instr, 30, 21) @[build/npc.fir.opt.mlir 1134:26]
    node io_out_imm_lo = cat(_io_out_imm_T_9, UInt<1>(0)) @[build/npc.fir.opt.mlir 1136:24]
    node io_out_imm_hi_hi = cat(_io_out_imm_T_6, _io_out_imm_T_7) @[build/npc.fir.opt.mlir 1138:27]
    node io_out_imm_hi = cat(io_out_imm_hi_hi, _io_out_imm_T_8) @[build/npc.fir.opt.mlir 1140:24]
    node _io_out_imm_T_10 = cat(io_out_imm_hi, io_out_imm_lo) @[build/npc.fir.opt.mlir 1142:27]
    node io_out_imm_signBit_2 = bits(_io_out_imm_T_10, 20, 20) @[build/npc.fir.opt.mlir 1144:31]
    node _io_out_imm_T_11 = mux(io_out_imm_signBit_2, UInt<11>(2047), UInt<11>(0)) @[build/npc.fir.opt.mlir 1148:27]
    node _io_out_imm_T_12 = cat(_io_out_imm_T_11, _io_out_imm_T_10) @[build/npc.fir.opt.mlir 1150:27]
    node _io_out_imm_T_13 = bits(io.in.instr, 31, 25) @[build/npc.fir.opt.mlir 1152:27]
    node _io_out_imm_T_14 = bits(io.in.instr, 11, 7) @[build/npc.fir.opt.mlir 1154:27]
    node _io_out_imm_T_15 = cat(_io_out_imm_T_13, _io_out_imm_T_14) @[build/npc.fir.opt.mlir 1156:27]
    node io_out_imm_signBit_3 = bits(_io_out_imm_T_15, 11, 11) @[build/npc.fir.opt.mlir 1158:31]
    node _io_out_imm_T_16 = mux(io_out_imm_signBit_3, UInt<20>(1048575), UInt<20>(0)) @[build/npc.fir.opt.mlir 1160:27]
    node _io_out_imm_T_17 = cat(_io_out_imm_T_16, _io_out_imm_T_15) @[build/npc.fir.opt.mlir 1162:27]
    node _io_out_imm_T_18 = bits(io.in.instr, 31, 31) @[build/npc.fir.opt.mlir 1164:27]
    node _io_out_imm_T_19 = bits(io.in.instr, 7, 7) @[build/npc.fir.opt.mlir 1166:27]
    node _io_out_imm_T_20 = bits(io.in.instr, 30, 25) @[build/npc.fir.opt.mlir 1168:27]
    node _io_out_imm_T_21 = bits(io.in.instr, 11, 8) @[build/npc.fir.opt.mlir 1170:27]
    node io_out_imm_lo_1 = cat(_io_out_imm_T_21, UInt<1>(0)) @[build/npc.fir.opt.mlir 1172:26]
    node io_out_imm_hi_hi_1 = cat(_io_out_imm_T_18, _io_out_imm_T_19) @[build/npc.fir.opt.mlir 1174:29]
    node io_out_imm_hi_1 = cat(io_out_imm_hi_hi_1, _io_out_imm_T_20) @[build/npc.fir.opt.mlir 1176:26]
    node _io_out_imm_T_22 = cat(io_out_imm_hi_1, io_out_imm_lo_1) @[build/npc.fir.opt.mlir 1178:27]
    node io_out_imm_signBit_4 = bits(_io_out_imm_T_22, 12, 12) @[build/npc.fir.opt.mlir 1180:31]
    node _io_out_imm_T_23 = mux(io_out_imm_signBit_4, UInt<19>(524287), UInt<19>(0)) @[build/npc.fir.opt.mlir 1184:27]
    node _io_out_imm_T_24 = cat(_io_out_imm_T_23, _io_out_imm_T_22) @[build/npc.fir.opt.mlir 1186:27]
    node _io_out_imm_T_25 = eq(UInt<3>(1), decodeBundle.ImmType) @[build/npc.fir.opt.mlir 1189:27]
    node _io_out_imm_T_26 = eq(UInt<3>(3), decodeBundle.ImmType) @[build/npc.fir.opt.mlir 1192:27]
    node _io_out_imm_T_27 = eq(UInt<3>(4), decodeBundle.ImmType) @[build/npc.fir.opt.mlir 1195:27]
    node _io_out_imm_T_28 = eq(UInt<3>(2), decodeBundle.ImmType) @[build/npc.fir.opt.mlir 1198:27]
    node _io_out_imm_T_29 = eq(UInt<3>(5), decodeBundle.ImmType) @[build/npc.fir.opt.mlir 1201:27]
    node _io_out_imm_T_30 = mux(_io_out_imm_T_25, _io_out_imm_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 1203:27]
    node _io_out_imm_T_31 = mux(_io_out_imm_T_26, _io_out_imm_T_5, UInt<1>(0)) @[build/npc.fir.opt.mlir 1205:27]
    node _io_out_imm_T_32 = mux(_io_out_imm_T_27, _io_out_imm_T_12, UInt<1>(0)) @[build/npc.fir.opt.mlir 1207:27]
    node _io_out_imm_T_33 = mux(_io_out_imm_T_28, _io_out_imm_T_17, UInt<1>(0)) @[build/npc.fir.opt.mlir 1209:27]
    node _io_out_imm_T_34 = mux(_io_out_imm_T_29, _io_out_imm_T_24, UInt<1>(0)) @[build/npc.fir.opt.mlir 1211:27]
    node _io_out_imm_T_35 = or(_io_out_imm_T_30, _io_out_imm_T_31) @[build/npc.fir.opt.mlir 1213:27]
    node _io_out_imm_T_36 = or(_io_out_imm_T_35, _io_out_imm_T_32) @[build/npc.fir.opt.mlir 1215:27]
    node _io_out_imm_T_37 = or(_io_out_imm_T_36, _io_out_imm_T_33) @[build/npc.fir.opt.mlir 1217:27]
    node _io_out_imm_T_38 = or(_io_out_imm_T_37, _io_out_imm_T_34) @[build/npc.fir.opt.mlir 1219:27]
    wire _io_out_imm_WIRE : UInt<32> @[build/npc.fir.opt.mlir 1220:27]
    connect _io_out_imm_WIRE, _io_out_imm_T_38 @[build/npc.fir.opt.mlir 1221:7]
    connect io.out.imm, _io_out_imm_WIRE @[build/npc.fir.opt.mlir 1222:7]
    connect io.out.fuType, decodeBundle.FuType @[build/npc.fir.opt.mlir 1223:7]
    connect io.out.funcOpType, decodeBundle.OpType @[build/npc.fir.opt.mlir 1224:7]
    wire _WIRE_1 : UInt<2>[2] @[build/npc.fir.opt.mlir 1225:18]
    connect _WIRE_1[0], decodeBundle.OpLeft @[build/npc.fir.opt.mlir 1228:7]
    connect _WIRE_1[1], decodeBundle.OpRight @[build/npc.fir.opt.mlir 1229:7]
    connect io.out.srcType, _WIRE_1 @[build/npc.fir.opt.mlir 1230:7]
    node _T_2 = eq(io.out.funcOpType, UInt<5>(12)) @[build/npc.fir.opt.mlir 1233:15]
    node _T_3 = eq(io.out.fuType, UInt<3>(0)) @[build/npc.fir.opt.mlir 1236:15]
    node _T_4 = and(_T_2, _T_3) @[build/npc.fir.opt.mlir 1238:15]
    when _T_4 : @[build/npc.fir.opt.mlir 1240:7]
      connect io.out.rfSrc[0], pad(UInt<4>(10), 5) @[build/npc.fir.opt.mlir 1243:9]
    connect io.out.pc, io.in.pc @[build/npc.fir.opt.mlir 1245:7]
    connect io.out.instr, io.in.instr @[build/npc.fir.opt.mlir 1246:7]
    connect io.out.id, io.in.id @[build/npc.fir.opt.mlir 1247:7]

  module DecodeStage : @[build/npc.fir.opt.mlir 1249:5]
    input clock : Clock @[build/npc.fir.opt.mlir 1249:43]
    input reset : Reset @[build/npc.fir.opt.mlir 1249:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<32>, pc : UInt<32>, id : UInt<32> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } } } @[build/npc.fir.opt.mlir 1249:96]

    inst dec of Decoder @[build/npc.fir.opt.mlir 1261:41]
    connect dec.clock, clock @[build/npc.fir.opt.mlir 1267:7]
    connect dec.reset, reset @[build/npc.fir.opt.mlir 1268:7]
    connect dec.io.in.id, io.in.bits.id @[build/npc.fir.opt.mlir 1269:7]
    connect dec.io.in.pc, io.in.bits.pc @[build/npc.fir.opt.mlir 1270:7]
    connect dec.io.in.instr, io.in.bits.instr @[build/npc.fir.opt.mlir 1271:7]
    connect io.out.bits, dec.io.out @[build/npc.fir.opt.mlir 1272:7]
    connect io.in.ready, io.out.ready @[build/npc.fir.opt.mlir 1273:7]
    connect io.out.valid, io.in.valid @[build/npc.fir.opt.mlir 1274:7]

  module FrontEnd : @[build/npc.fir.opt.mlir 1276:5]
    input clock : Clock @[build/npc.fir.opt.mlir 1276:40]
    input reset : Reset @[build/npc.fir.opt.mlir 1276:66]
    output io : { out : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } }, flip flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }[2], imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } } } @[build/npc.fir.opt.mlir 1276:93]

    inst fetchUnit of FetchUnit @[build/npc.fir.opt.mlir 1294:59]
    connect fetchUnit.clock, clock @[build/npc.fir.opt.mlir 1308:7]
    connect fetchUnit.reset, reset @[build/npc.fir.opt.mlir 1309:7]
    inst Decoder of DecodeStage @[build/npc.fir.opt.mlir 1310:53]
    connect Decoder.clock, clock @[build/npc.fir.opt.mlir 1322:7]
    connect Decoder.reset, reset @[build/npc.fir.opt.mlir 1323:7]
    connect io.imem.resp.ready, fetchUnit.io.imem.resp.ready @[build/npc.fir.opt.mlir 1326:7]
    connect fetchUnit.io.imem.resp.valid, io.imem.resp.valid @[build/npc.fir.opt.mlir 1329:7]
    connect fetchUnit.io.imem.resp.bits, io.imem.resp.bits @[build/npc.fir.opt.mlir 1332:7]
    connect io.imem.req.bits, fetchUnit.io.imem.req.bits @[build/npc.fir.opt.mlir 1333:7]
    connect io.imem.req.valid, fetchUnit.io.imem.req.valid @[build/npc.fir.opt.mlir 1334:7]
    connect fetchUnit.io.imem.req.ready, io.imem.req.ready @[build/npc.fir.opt.mlir 1335:7]
    connect fetchUnit.io.flush[0], io.flush[0] @[build/npc.fir.opt.mlir 1336:7]
    connect fetchUnit.io.flush[1], io.flush[1] @[build/npc.fir.opt.mlir 1337:7]
    node _flush_T = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 1339:19]
    node _flush_T_1 = and(io.flush[1].valid, io.flush[1].brType) @[build/npc.fir.opt.mlir 1341:21]
    node flush = or(_flush_T, _flush_T_1) @[build/npc.fir.opt.mlir 1343:16]
    node _T = and(Decoder.io.out.ready, Decoder.io.out.valid) @[build/npc.fir.opt.mlir 1345:13]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 1347:16]
    when _T : @[build/npc.fir.opt.mlir 1348:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 1350:9]
    node _T_1 = and(fetchUnit.io.out.valid, Decoder.io.in.ready) @[build/npc.fir.opt.mlir 1353:15]
    when _T_1 : @[build/npc.fir.opt.mlir 1355:7]
      connect valid, UInt<1>(1) @[build/npc.fir.opt.mlir 1357:9]
    when flush : @[build/npc.fir.opt.mlir 1359:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 1361:9]
    connect fetchUnit.io.out.ready, Decoder.io.in.ready @[build/npc.fir.opt.mlir 1363:7]
    node _Decoder_io_in_bits_T = and(fetchUnit.io.out.valid, Decoder.io.in.ready) @[build/npc.fir.opt.mlir 1365:32]
    reg Decoder_io_in_bits_r : { instr : UInt<32>, pc : UInt<32>, id : UInt<32> }, clock @[build/npc.fir.opt.mlir 1366:31]
    when _Decoder_io_in_bits_T : @[build/npc.fir.opt.mlir 1370:7]
      connect Decoder_io_in_bits_r, fetchUnit.io.out.bits @[build/npc.fir.opt.mlir 1371:9]
    connect Decoder.io.in.bits.id, Decoder_io_in_bits_r.id @[build/npc.fir.opt.mlir 1373:7]
    connect Decoder.io.in.bits.pc, Decoder_io_in_bits_r.pc @[build/npc.fir.opt.mlir 1374:7]
    connect Decoder.io.in.bits.instr, Decoder_io_in_bits_r.instr @[build/npc.fir.opt.mlir 1375:7]
    connect Decoder.io.in.valid, valid @[build/npc.fir.opt.mlir 1376:7]
    connect io.out.bits, Decoder.io.out.bits @[build/npc.fir.opt.mlir 1377:7]
    connect io.out.valid, Decoder.io.out.valid @[build/npc.fir.opt.mlir 1378:7]
    connect Decoder.io.out.ready, io.out.ready @[build/npc.fir.opt.mlir 1379:7]

  module ExecuteUnit : @[build/npc.fir.opt.mlir 1381:5]
    input clock : Clock @[build/npc.fir.opt.mlir 1381:43]
    input reset : Reset @[build/npc.fir.opt.mlir 1381:69]
    output io : { flip uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, flip src : UInt<32>[2], flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }, rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> } @[build/npc.fir.opt.mlir 1381:96]

    node isALU = neq(io.uop.fuType, UInt<3>(1)) @[build/npc.fir.opt.mlir 1404:16]
    wire ops : UInt<32>[2] @[build/npc.fir.opt.mlir 1405:14]
    node _ops_0_T = eq(UInt<2>(0), io.uop.srcType[0]) @[build/npc.fir.opt.mlir 1410:19]
    node _ops_0_T_1 = eq(UInt<2>(1), io.uop.srcType[0]) @[build/npc.fir.opt.mlir 1413:21]
    node _ops_0_T_2 = eq(UInt<2>(2), io.uop.srcType[0]) @[build/npc.fir.opt.mlir 1416:21]
    node _ops_0_T_3 = eq(UInt<2>(3), io.uop.srcType[0]) @[build/npc.fir.opt.mlir 1419:21]
    node _ops_0_T_4 = mux(_ops_0_T, io.src[0], UInt<1>(0)) @[build/npc.fir.opt.mlir 1422:21]
    node _ops_0_T_5 = mux(_ops_0_T_1, io.uop.imm, UInt<1>(0)) @[build/npc.fir.opt.mlir 1424:21]
    node _ops_0_T_6 = mux(_ops_0_T_2, io.uop.pc, UInt<1>(0)) @[build/npc.fir.opt.mlir 1426:21]
    node _ops_0_T_7 = mux(_ops_0_T_3, UInt<32>(0), UInt<1>(0)) @[build/npc.fir.opt.mlir 1429:21]
    node _ops_0_T_8 = or(_ops_0_T_4, _ops_0_T_5) @[build/npc.fir.opt.mlir 1431:21]
    node _ops_0_T_9 = or(_ops_0_T_8, _ops_0_T_6) @[build/npc.fir.opt.mlir 1433:21]
    node _ops_0_T_10 = or(_ops_0_T_9, _ops_0_T_7) @[build/npc.fir.opt.mlir 1435:22]
    wire _ops_0_WIRE : UInt<32> @[build/npc.fir.opt.mlir 1436:22]
    connect _ops_0_WIRE, _ops_0_T_10 @[build/npc.fir.opt.mlir 1437:7]
    connect ops[0], _ops_0_WIRE @[build/npc.fir.opt.mlir 1438:7]
    node _ops_1_T = eq(UInt<2>(0), io.uop.srcType[1]) @[build/npc.fir.opt.mlir 1440:19]
    node _ops_1_T_1 = eq(UInt<2>(1), io.uop.srcType[1]) @[build/npc.fir.opt.mlir 1442:21]
    node _ops_1_T_2 = eq(UInt<2>(2), io.uop.srcType[1]) @[build/npc.fir.opt.mlir 1444:21]
    node _ops_1_T_3 = eq(UInt<2>(3), io.uop.srcType[1]) @[build/npc.fir.opt.mlir 1446:21]
    node _ops_1_T_4 = mux(_ops_1_T, io.src[1], UInt<1>(0)) @[build/npc.fir.opt.mlir 1448:21]
    node _ops_1_T_5 = mux(_ops_1_T_1, io.uop.imm, UInt<1>(0)) @[build/npc.fir.opt.mlir 1450:21]
    node _ops_1_T_6 = mux(_ops_1_T_2, io.uop.pc, UInt<1>(0)) @[build/npc.fir.opt.mlir 1452:21]
    node _ops_1_T_7 = mux(_ops_1_T_3, UInt<32>(0), UInt<1>(0)) @[build/npc.fir.opt.mlir 1454:21]
    node _ops_1_T_8 = or(_ops_1_T_4, _ops_1_T_5) @[build/npc.fir.opt.mlir 1456:21]
    node _ops_1_T_9 = or(_ops_1_T_8, _ops_1_T_6) @[build/npc.fir.opt.mlir 1458:21]
    node _ops_1_T_10 = or(_ops_1_T_9, _ops_1_T_7) @[build/npc.fir.opt.mlir 1460:22]
    wire _ops_1_WIRE : UInt<32> @[build/npc.fir.opt.mlir 1461:22]
    connect _ops_1_WIRE, _ops_1_T_10 @[build/npc.fir.opt.mlir 1462:7]
    connect ops[1], _ops_1_WIRE @[build/npc.fir.opt.mlir 1463:7]
    node isAdderSub = neq(io.uop.funcOpType, UInt<5>(0)) @[build/npc.fir.opt.mlir 1466:21]
    node _adder_T = mux(isAdderSub, UInt<32>(4294967295), UInt<32>(0)) @[build/npc.fir.opt.mlir 1469:19]
    node _adder_T_1 = xor(ops[1], _adder_T) @[build/npc.fir.opt.mlir 1471:21]
    node _adder_T_2 = add(ops[0], _adder_T_1) @[build/npc.fir.opt.mlir 1473:21]
    node _adder_T_3 = add(_adder_T_2, isAdderSub) @[build/npc.fir.opt.mlir 1475:21]
    node adder = tail(_adder_T_3, 1) @[build/npc.fir.opt.mlir 1477:16]
    node xorer = xor(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1479:16]
    node _sltu_T = bits(adder, 32, 32) @[build/npc.fir.opt.mlir 1481:18]
    node sltu = eq(_sltu_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 1483:15]
    node _slt_T = bits(xorer, 31, 31) @[build/npc.fir.opt.mlir 1485:17]
    node slt = xor(_slt_T, sltu) @[build/npc.fir.opt.mlir 1487:14]
    node shamt = bits(ops[1], 4, 0) @[build/npc.fir.opt.mlir 1489:16]
    node ander = and(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1491:16]
    node orer = or(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1493:15]
    node _res_T = add(io.uop.pc, UInt<3>(4)) @[build/npc.fir.opt.mlir 1496:17]
    node _res_T_1 = tail(_res_T, 1) @[build/npc.fir.opt.mlir 1498:19]
    node _res_T_2 = add(io.uop.pc, UInt<3>(4)) @[build/npc.fir.opt.mlir 1500:19]
    node _res_T_3 = tail(_res_T_2, 1) @[build/npc.fir.opt.mlir 1502:19]
    node _res_T_4 = cat(UInt<31>(0), sltu) @[build/npc.fir.opt.mlir 1505:19]
    node _res_T_5 = asSInt(ops[0]) @[build/npc.fir.opt.mlir 1507:19]
    node _res_T_6 = dshr(_res_T_5, shamt) @[build/npc.fir.opt.mlir 1509:19]
    node _res_T_7 = asUInt(_res_T_6) @[build/npc.fir.opt.mlir 1511:19]
    node _res_T_8 = dshl(ops[0], shamt) @[build/npc.fir.opt.mlir 1513:19]
    node _res_T_9 = dshr(ops[0], shamt) @[build/npc.fir.opt.mlir 1515:19]
    node _res_T_10 = eq(UInt<5>(0), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1517:20]
    node _res_T_11 = eq(UInt<5>(1), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1520:20]
    node _res_T_12 = eq(UInt<5>(10), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1523:20]
    node _res_T_13 = eq(UInt<5>(11), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1526:20]
    node _res_T_14 = eq(UInt<5>(3), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1529:20]
    node _res_T_15 = eq(UInt<5>(4), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1532:20]
    node _res_T_16 = eq(UInt<5>(5), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1535:20]
    node _res_T_17 = eq(UInt<5>(6), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1538:20]
    node _res_T_18 = eq(UInt<5>(13), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1541:20]
    node _res_T_19 = eq(UInt<5>(14), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1544:20]
    node _res_T_20 = eq(UInt<5>(15), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1547:20]
    node _res_T_21 = eq(UInt<5>(16), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1550:20]
    node _res_T_22 = eq(UInt<5>(2), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1553:20]
    node _res_T_23 = mux(_res_T_10, adder, UInt<1>(0)) @[build/npc.fir.opt.mlir 1555:20]
    node _res_T_24 = mux(_res_T_11, ops[1], UInt<1>(0)) @[build/npc.fir.opt.mlir 1557:20]
    node _res_T_25 = mux(_res_T_12, _res_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 1559:20]
    node _res_T_26 = mux(_res_T_13, _res_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 1561:20]
    node _res_T_27 = mux(_res_T_14, _res_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 1563:20]
    node _res_T_28 = mux(_res_T_15, adder, UInt<1>(0)) @[build/npc.fir.opt.mlir 1565:20]
    node _res_T_29 = mux(_res_T_16, xorer, UInt<1>(0)) @[build/npc.fir.opt.mlir 1567:20]
    node _res_T_30 = mux(_res_T_17, _res_T_7, UInt<1>(0)) @[build/npc.fir.opt.mlir 1569:20]
    node _res_T_31 = mux(_res_T_18, ander, UInt<1>(0)) @[build/npc.fir.opt.mlir 1571:20]
    node _res_T_32 = mux(_res_T_19, _res_T_8, UInt<1>(0)) @[build/npc.fir.opt.mlir 1573:20]
    node _res_T_33 = mux(_res_T_20, orer, UInt<1>(0)) @[build/npc.fir.opt.mlir 1575:20]
    node _res_T_34 = mux(_res_T_21, _res_T_9, UInt<1>(0)) @[build/npc.fir.opt.mlir 1577:20]
    node _res_T_35 = mux(_res_T_22, slt, UInt<1>(0)) @[build/npc.fir.opt.mlir 1579:20]
    node _res_T_36 = or(_res_T_23, _res_T_24) @[build/npc.fir.opt.mlir 1581:20]
    node _res_T_37 = or(_res_T_36, _res_T_25) @[build/npc.fir.opt.mlir 1583:20]
    node _res_T_38 = or(_res_T_37, _res_T_26) @[build/npc.fir.opt.mlir 1585:20]
    node _res_T_39 = or(_res_T_38, _res_T_27) @[build/npc.fir.opt.mlir 1587:20]
    node _res_T_40 = or(_res_T_39, _res_T_28) @[build/npc.fir.opt.mlir 1589:20]
    node _res_T_41 = or(_res_T_40, _res_T_29) @[build/npc.fir.opt.mlir 1591:20]
    node _res_T_42 = or(_res_T_41, _res_T_30) @[build/npc.fir.opt.mlir 1593:20]
    node _res_T_43 = or(_res_T_42, _res_T_31) @[build/npc.fir.opt.mlir 1595:20]
    node _res_T_44 = or(_res_T_43, _res_T_32) @[build/npc.fir.opt.mlir 1597:20]
    node _res_T_45 = or(_res_T_44, _res_T_33) @[build/npc.fir.opt.mlir 1599:20]
    node _res_T_46 = or(_res_T_45, _res_T_34) @[build/npc.fir.opt.mlir 1601:20]
    node _res_T_47 = or(_res_T_46, _res_T_35) @[build/npc.fir.opt.mlir 1603:20]
    wire res : UInt<63> @[build/npc.fir.opt.mlir 1604:14]
    connect res, _res_T_47 @[build/npc.fir.opt.mlir 1605:7]
    node _io_rfWen_T = eq(io.uop.fuType, UInt<3>(0)) @[build/npc.fir.opt.mlir 1608:22]
    node _io_rfWen_T_1 = and(io.uop.rfWen, _io_rfWen_T) @[build/npc.fir.opt.mlir 1610:24]
    connect io.rfWen, _io_rfWen_T_1 @[build/npc.fir.opt.mlir 1611:7]
    connect io.rfDest, io.uop.rfDest @[build/npc.fir.opt.mlir 1612:7]
    connect io.rfData, tail(res, 31) @[build/npc.fir.opt.mlir 1614:7]
    node _io_flush_target_T = add(io.uop.pc, io.uop.imm) @[build/npc.fir.opt.mlir 1616:29]
    node _io_flush_target_T_1 = tail(_io_flush_target_T, 1) @[build/npc.fir.opt.mlir 1618:31]
    node _io_flush_target_T_2 = add(io.src[0], io.uop.imm) @[build/npc.fir.opt.mlir 1620:31]
    node _io_flush_target_T_3 = tail(_io_flush_target_T_2, 1) @[build/npc.fir.opt.mlir 1622:31]
    node _io_flush_target_T_4 = eq(UInt<5>(11), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1624:31]
    node _io_flush_target_T_5 = mux(_io_flush_target_T_4, _io_flush_target_T_3, _io_flush_target_T_1) @[build/npc.fir.opt.mlir 1626:31]
    connect io.flush.target, _io_flush_target_T_5 @[build/npc.fir.opt.mlir 1627:7]
    node _io_flush_valid_T = eq(io.uop.funcOpType, UInt<5>(7)) @[build/npc.fir.opt.mlir 1630:28]
    node _io_flush_valid_T_1 = eq(io.uop.funcOpType, UInt<5>(8)) @[build/npc.fir.opt.mlir 1633:30]
    node _io_flush_valid_T_2 = or(_io_flush_valid_T, _io_flush_valid_T_1) @[build/npc.fir.opt.mlir 1635:30]
    node _io_flush_valid_T_3 = eq(io.uop.funcOpType, UInt<5>(9)) @[build/npc.fir.opt.mlir 1638:30]
    node _io_flush_valid_T_4 = or(_io_flush_valid_T_2, _io_flush_valid_T_3) @[build/npc.fir.opt.mlir 1640:30]
    node _io_flush_valid_T_5 = eq(io.uop.funcOpType, UInt<5>(17)) @[build/npc.fir.opt.mlir 1643:30]
    node _io_flush_valid_T_6 = or(_io_flush_valid_T_4, _io_flush_valid_T_5) @[build/npc.fir.opt.mlir 1645:30]
    node _io_flush_valid_T_7 = eq(io.uop.funcOpType, UInt<5>(18)) @[build/npc.fir.opt.mlir 1648:30]
    node _io_flush_valid_T_8 = or(_io_flush_valid_T_6, _io_flush_valid_T_7) @[build/npc.fir.opt.mlir 1650:30]
    node _io_flush_valid_T_9 = eq(io.uop.funcOpType, UInt<5>(19)) @[build/npc.fir.opt.mlir 1653:30]
    node _io_flush_valid_T_10 = or(_io_flush_valid_T_8, _io_flush_valid_T_9) @[build/npc.fir.opt.mlir 1655:31]
    node _io_flush_valid_T_11 = eq(io.uop.funcOpType, UInt<5>(10)) @[build/npc.fir.opt.mlir 1657:31]
    node _io_flush_valid_T_12 = eq(io.uop.funcOpType, UInt<5>(11)) @[build/npc.fir.opt.mlir 1659:31]
    node _io_flush_valid_T_13 = or(_io_flush_valid_T_11, _io_flush_valid_T_12) @[build/npc.fir.opt.mlir 1661:31]
    node _io_flush_valid_T_14 = or(_io_flush_valid_T_10, _io_flush_valid_T_13) @[build/npc.fir.opt.mlir 1663:31]
    node _io_flush_valid_T_15 = and(_io_flush_valid_T_14, isALU) @[build/npc.fir.opt.mlir 1665:31]
    connect io.flush.valid, _io_flush_valid_T_15 @[build/npc.fir.opt.mlir 1666:7]
    node _io_flush_brType_T = neq(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1668:29]
    node _io_flush_brType_T_1 = asSInt(ops[0]) @[build/npc.fir.opt.mlir 1670:31]
    node _io_flush_brType_T_2 = asSInt(ops[1]) @[build/npc.fir.opt.mlir 1672:31]
    node _io_flush_brType_T_3 = geq(_io_flush_brType_T_1, _io_flush_brType_T_2) @[build/npc.fir.opt.mlir 1674:31]
    node _io_flush_brType_T_4 = asSInt(ops[0]) @[build/npc.fir.opt.mlir 1676:31]
    node _io_flush_brType_T_5 = asSInt(ops[1]) @[build/npc.fir.opt.mlir 1678:31]
    node _io_flush_brType_T_6 = lt(_io_flush_brType_T_4, _io_flush_brType_T_5) @[build/npc.fir.opt.mlir 1680:31]
    node _io_flush_brType_T_7 = eq(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1682:31]
    node _io_flush_brType_T_8 = geq(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1684:31]
    node _io_flush_brType_T_9 = lt(ops[0], ops[1]) @[build/npc.fir.opt.mlir 1686:31]
    node _io_flush_brType_T_10 = eq(UInt<5>(11), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1688:32]
    node _io_flush_brType_T_11 = eq(UInt<5>(10), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1690:32]
    node _io_flush_brType_T_12 = eq(UInt<5>(7), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1692:32]
    node _io_flush_brType_T_13 = eq(UInt<5>(8), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1694:32]
    node _io_flush_brType_T_14 = eq(UInt<5>(9), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1696:32]
    node _io_flush_brType_T_15 = eq(UInt<5>(17), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1698:32]
    node _io_flush_brType_T_16 = eq(UInt<5>(18), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1700:32]
    node _io_flush_brType_T_17 = eq(UInt<5>(19), io.uop.funcOpType) @[build/npc.fir.opt.mlir 1702:32]
    node _io_flush_brType_T_18 = mux(_io_flush_brType_T_10, UInt<1>(1), UInt<1>(0)) @[build/npc.fir.opt.mlir 1705:32]
    node _io_flush_brType_T_19 = mux(_io_flush_brType_T_11, UInt<1>(1), UInt<1>(0)) @[build/npc.fir.opt.mlir 1707:32]
    node _io_flush_brType_T_20 = mux(_io_flush_brType_T_12, _io_flush_brType_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 1709:32]
    node _io_flush_brType_T_21 = mux(_io_flush_brType_T_13, _io_flush_brType_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 1711:32]
    node _io_flush_brType_T_22 = mux(_io_flush_brType_T_14, _io_flush_brType_T_6, UInt<1>(0)) @[build/npc.fir.opt.mlir 1713:32]
    node _io_flush_brType_T_23 = mux(_io_flush_brType_T_15, _io_flush_brType_T_7, UInt<1>(0)) @[build/npc.fir.opt.mlir 1715:32]
    node _io_flush_brType_T_24 = mux(_io_flush_brType_T_16, _io_flush_brType_T_8, UInt<1>(0)) @[build/npc.fir.opt.mlir 1717:32]
    node _io_flush_brType_T_25 = mux(_io_flush_brType_T_17, _io_flush_brType_T_9, UInt<1>(0)) @[build/npc.fir.opt.mlir 1719:32]
    node _io_flush_brType_T_26 = or(_io_flush_brType_T_18, _io_flush_brType_T_19) @[build/npc.fir.opt.mlir 1721:32]
    node _io_flush_brType_T_27 = or(_io_flush_brType_T_26, _io_flush_brType_T_20) @[build/npc.fir.opt.mlir 1723:32]
    node _io_flush_brType_T_28 = or(_io_flush_brType_T_27, _io_flush_brType_T_21) @[build/npc.fir.opt.mlir 1725:32]
    node _io_flush_brType_T_29 = or(_io_flush_brType_T_28, _io_flush_brType_T_22) @[build/npc.fir.opt.mlir 1727:32]
    node _io_flush_brType_T_30 = or(_io_flush_brType_T_29, _io_flush_brType_T_23) @[build/npc.fir.opt.mlir 1729:32]
    node _io_flush_brType_T_31 = or(_io_flush_brType_T_30, _io_flush_brType_T_24) @[build/npc.fir.opt.mlir 1731:32]
    node _io_flush_brType_T_32 = or(_io_flush_brType_T_31, _io_flush_brType_T_25) @[build/npc.fir.opt.mlir 1733:32]
    wire _io_flush_brType_WIRE : UInt<1> @[build/npc.fir.opt.mlir 1734:32]
    connect _io_flush_brType_WIRE, _io_flush_brType_T_32 @[build/npc.fir.opt.mlir 1735:7]
    node _io_flush_brType_T_33 = eq(io.uop.fuType, UInt<3>(0)) @[build/npc.fir.opt.mlir 1737:32]
    node _io_flush_brType_T_34 = and(_io_flush_brType_WIRE, _io_flush_brType_T_33) @[build/npc.fir.opt.mlir 1739:32]
    connect io.flush.brType, _io_flush_brType_T_34 @[build/npc.fir.opt.mlir 1740:7]

  module LoadStoreUnit : @[build/npc.fir.opt.mlir 1742:5]
    input clock : Clock @[build/npc.fir.opt.mlir 1742:45]
    input reset : Reset @[build/npc.fir.opt.mlir 1742:71]
    output io : { dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } }, flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, addrBase : UInt<32>, src : UInt<32> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { wbEn : UInt<1>, wbAddr : UInt<5>, wbData : UInt<32>, isMMIO : UInt<1> } } } @[build/npc.fir.opt.mlir 1742:98]

    reg uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, clock @[build/npc.fir.opt.mlir 1786:14]
    when io.in.valid : @[build/npc.fir.opt.mlir 1801:7]
      connect uop.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 1802:9]
      connect uop.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 1803:9]
      connect uop.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 1804:9]
      connect uop.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 1805:9]
      connect uop.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 1806:9]
      connect uop.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 1807:9]
      connect uop.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 1808:9]
      connect uop.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 1809:9]
      connect uop.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 1810:9]
      connect uop.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 1811:9]
      connect uop.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 1812:9]
      connect uop.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 1813:9]
    node _isLoad_T = bits(io.in.bits.uop.funcOpType, 3, 3) @[build/npc.fir.opt.mlir 1816:20]
    node isLoad = eq(_isLoad_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 1819:17]
    node _addr_T = add(io.in.bits.addrBase, io.in.bits.uop.imm) @[build/npc.fir.opt.mlir 1821:18]
    node addr = tail(_addr_T, 1) @[build/npc.fir.opt.mlir 1823:15]
    node _Stall_T = and(io.dmem.req.ready, io.dmem.req.valid) @[build/npc.fir.opt.mlir 1825:19]
    node _Stall_T_1 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/npc.fir.opt.mlir 1827:21]
    regreset Stall : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 1828:16]
    when _Stall_T : @[build/npc.fir.opt.mlir 1830:7]
      connect Stall, UInt<1>(1) @[build/npc.fir.opt.mlir 1832:9]
    when _Stall_T_1 : @[build/npc.fir.opt.mlir 1834:7]
      connect Stall, UInt<1>(0) @[build/npc.fir.opt.mlir 1836:9]
    node _mmio_r_T = xor(io.dmem.req.bits.addr, UInt<32>(2684355576)) @[build/npc.fir.opt.mlir 1840:20]
    node _mmio_r_T_1 = bits(_mmio_r_T, 31, 3) @[build/npc.fir.opt.mlir 1842:22]
    node _mmio_r_T_2 = eq(_mmio_r_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 1844:22]
    node _mmio_r_T_3 = xor(io.dmem.req.bits.addr, UInt<32>(2684354632)) @[build/npc.fir.opt.mlir 1847:22]
    node _mmio_r_T_4 = bits(_mmio_r_T_3, 31, 3) @[build/npc.fir.opt.mlir 1849:22]
    node _mmio_r_T_5 = eq(_mmio_r_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 1851:22]
    node _mmio_r_T_6 = or(_mmio_r_T_2, _mmio_r_T_5) @[build/npc.fir.opt.mlir 1853:22]
    node _mmio_r_T_7 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/npc.fir.opt.mlir 1855:22]
    reg mmio_r : UInt<1>, clock @[build/npc.fir.opt.mlir 1856:17]
    when _mmio_r_T_7 : @[build/npc.fir.opt.mlir 1857:7]
      connect mmio_r, _mmio_r_T_6 @[build/npc.fir.opt.mlir 1858:9]
    node _woffset_T = bits(addr, 1, 1) @[build/npc.fir.opt.mlir 1861:21]
    node _woffset_T_1 = dshl(_woffset_T, UInt<3>(4)) @[build/npc.fir.opt.mlir 1864:23]
    node _woffset_T_2 = bits(addr, 0, 0) @[build/npc.fir.opt.mlir 1866:23]
    node _woffset_T_3 = dshl(_woffset_T_2, UInt<2>(3)) @[build/npc.fir.opt.mlir 1869:23]
    node woffset = or(_woffset_T_1, _woffset_T_3) @[build/npc.fir.opt.mlir 1871:18]
    node _io_dmem_req_valid_T = eq(Stall, UInt<1>(0)) @[build/npc.fir.opt.mlir 1873:31]
    node _io_dmem_req_valid_T_1 = and(io.in.valid, _io_dmem_req_valid_T) @[build/npc.fir.opt.mlir 1875:33]
    connect io.dmem.req.valid, _io_dmem_req_valid_T_1 @[build/npc.fir.opt.mlir 1876:7]
    node _io_dmem_req_bits_cmd_T = mux(isLoad, UInt<1>(0), UInt<1>(1)) @[build/npc.fir.opt.mlir 1878:34]
    connect io.dmem.req.bits.cmd, _io_dmem_req_bits_cmd_T @[build/npc.fir.opt.mlir 1879:7]
    connect io.dmem.req.bits.addr, addr @[build/npc.fir.opt.mlir 1880:7]
    node _io_dmem_req_bits_wdata_T = bits(io.in.bits.src, 7, 0) @[build/npc.fir.opt.mlir 1882:36]
    node _io_dmem_req_bits_wdata_T_1 = cat(_io_dmem_req_bits_wdata_T, _io_dmem_req_bits_wdata_T) @[build/npc.fir.opt.mlir 1884:38]
    node _io_dmem_req_bits_wdata_T_2 = cat(_io_dmem_req_bits_wdata_T_1, _io_dmem_req_bits_wdata_T_1) @[build/npc.fir.opt.mlir 1886:38]
    node _io_dmem_req_bits_wdata_T_3 = bits(io.in.bits.src, 15, 0) @[build/npc.fir.opt.mlir 1888:38]
    node _io_dmem_req_bits_wdata_T_4 = cat(_io_dmem_req_bits_wdata_T_3, _io_dmem_req_bits_wdata_T_3) @[build/npc.fir.opt.mlir 1890:38]
    node _io_dmem_req_bits_wdata_T_5 = eq(UInt<5>(8), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1893:38]
    node _io_dmem_req_bits_wdata_T_6 = eq(UInt<5>(9), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1896:38]
    node _io_dmem_req_bits_wdata_T_7 = eq(UInt<5>(10), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1899:38]
    node _io_dmem_req_bits_wdata_T_8 = mux(_io_dmem_req_bits_wdata_T_5, _io_dmem_req_bits_wdata_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 1901:38]
    node _io_dmem_req_bits_wdata_T_9 = mux(_io_dmem_req_bits_wdata_T_6, _io_dmem_req_bits_wdata_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 1903:38]
    node _io_dmem_req_bits_wdata_T_10 = mux(_io_dmem_req_bits_wdata_T_7, io.in.bits.src, UInt<1>(0)) @[build/npc.fir.opt.mlir 1905:39]
    node _io_dmem_req_bits_wdata_T_11 = or(_io_dmem_req_bits_wdata_T_8, _io_dmem_req_bits_wdata_T_9) @[build/npc.fir.opt.mlir 1907:39]
    node _io_dmem_req_bits_wdata_T_12 = or(_io_dmem_req_bits_wdata_T_11, _io_dmem_req_bits_wdata_T_10) @[build/npc.fir.opt.mlir 1909:39]
    wire _io_dmem_req_bits_wdata_WIRE : UInt<32> @[build/npc.fir.opt.mlir 1910:39]
    connect _io_dmem_req_bits_wdata_WIRE, _io_dmem_req_bits_wdata_T_12 @[build/npc.fir.opt.mlir 1911:7]
    connect io.dmem.req.bits.wdata, _io_dmem_req_bits_wdata_WIRE @[build/npc.fir.opt.mlir 1912:7]
    node _io_dmem_req_bits_wmask_T = eq(UInt<5>(8), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1914:36]
    node _io_dmem_req_bits_wmask_T_1 = eq(UInt<5>(9), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1916:38]
    node _io_dmem_req_bits_wmask_T_2 = eq(UInt<5>(10), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1918:38]
    node _io_dmem_req_bits_wmask_T_3 = mux(_io_dmem_req_bits_wmask_T, UInt<1>(1), UInt<1>(0)) @[build/npc.fir.opt.mlir 1920:38]
    node _io_dmem_req_bits_wmask_T_4 = mux(_io_dmem_req_bits_wmask_T_1, UInt<2>(3), UInt<1>(0)) @[build/npc.fir.opt.mlir 1922:38]
    node _io_dmem_req_bits_wmask_T_5 = mux(_io_dmem_req_bits_wmask_T_2, UInt<4>(15), UInt<1>(0)) @[build/npc.fir.opt.mlir 1925:38]
    node _io_dmem_req_bits_wmask_T_6 = or(_io_dmem_req_bits_wmask_T_3, _io_dmem_req_bits_wmask_T_4) @[build/npc.fir.opt.mlir 1927:38]
    node _io_dmem_req_bits_wmask_T_7 = or(_io_dmem_req_bits_wmask_T_6, _io_dmem_req_bits_wmask_T_5) @[build/npc.fir.opt.mlir 1929:38]
    wire _io_dmem_req_bits_wmask_WIRE : UInt<4> @[build/npc.fir.opt.mlir 1930:39]
    connect _io_dmem_req_bits_wmask_WIRE, _io_dmem_req_bits_wmask_T_7 @[build/npc.fir.opt.mlir 1931:7]
    connect io.dmem.req.bits.wmask, _io_dmem_req_bits_wmask_WIRE @[build/npc.fir.opt.mlir 1932:7]
    node _io_dmem_req_bits_size_T = eq(UInt<5>(8), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1934:35]
    node _io_dmem_req_bits_size_T_1 = eq(UInt<5>(9), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1936:37]
    node _io_dmem_req_bits_size_T_2 = eq(UInt<5>(10), io.in.bits.uop.funcOpType) @[build/npc.fir.opt.mlir 1938:37]
    node _io_dmem_req_bits_size_T_3 = mux(_io_dmem_req_bits_size_T, UInt<1>(0), UInt<1>(0)) @[build/npc.fir.opt.mlir 1940:37]
    node _io_dmem_req_bits_size_T_4 = mux(_io_dmem_req_bits_size_T_1, UInt<1>(1), UInt<1>(0)) @[build/npc.fir.opt.mlir 1942:37]
    node _io_dmem_req_bits_size_T_5 = mux(_io_dmem_req_bits_size_T_2, UInt<2>(2), UInt<1>(0)) @[build/npc.fir.opt.mlir 1945:37]
    node _io_dmem_req_bits_size_T_6 = or(_io_dmem_req_bits_size_T_3, _io_dmem_req_bits_size_T_4) @[build/npc.fir.opt.mlir 1947:37]
    node _io_dmem_req_bits_size_T_7 = or(_io_dmem_req_bits_size_T_6, _io_dmem_req_bits_size_T_5) @[build/npc.fir.opt.mlir 1949:37]
    wire _io_dmem_req_bits_size_WIRE : UInt<2> @[build/npc.fir.opt.mlir 1950:38]
    connect _io_dmem_req_bits_size_WIRE, _io_dmem_req_bits_size_T_7 @[build/npc.fir.opt.mlir 1951:7]
    connect io.dmem.req.bits.size, _io_dmem_req_bits_size_WIRE @[build/npc.fir.opt.mlir 1952:7]
    connect io.dmem.resp.ready, Stall @[build/npc.fir.opt.mlir 1953:7]
    node _io_out_valid_T = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/npc.fir.opt.mlir 1955:26]
    node _io_out_valid_T_1 = and(Stall, _io_out_valid_T) @[build/npc.fir.opt.mlir 1957:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/npc.fir.opt.mlir 1958:7]
    node _io_out_bits_wbEn_T = and(uop.rfWen, io.out.valid) @[build/npc.fir.opt.mlir 1960:30]
    connect io.out.bits.wbEn, _io_out_bits_wbEn_T @[build/npc.fir.opt.mlir 1961:7]
    connect io.out.bits.wbAddr, uop.rfDest @[build/npc.fir.opt.mlir 1962:7]
    connect io.out.bits.isMMIO, mmio_r @[build/npc.fir.opt.mlir 1963:7]
    reg raddr : UInt<32>, clock @[build/npc.fir.opt.mlir 1964:16]
    when io.in.valid : @[build/npc.fir.opt.mlir 1965:7]
      connect raddr, addr @[build/npc.fir.opt.mlir 1966:9]
    node _rDataSel_T = bits(raddr, 1, 0) @[build/npc.fir.opt.mlir 1969:22]
    node _rDataSel_T_1 = bits(io.dmem.resp.bits.rdata, 31, 0) @[build/npc.fir.opt.mlir 1971:24]
    node _rDataSel_T_2 = bits(io.dmem.resp.bits.rdata, 31, 8) @[build/npc.fir.opt.mlir 1973:24]
    node _rDataSel_T_3 = bits(io.dmem.resp.bits.rdata, 31, 16) @[build/npc.fir.opt.mlir 1975:24]
    node _rDataSel_T_4 = bits(io.dmem.resp.bits.rdata, 31, 24) @[build/npc.fir.opt.mlir 1977:24]
    node _rDataSel_T_5 = eq(UInt<1>(0), _rDataSel_T) @[build/npc.fir.opt.mlir 1979:24]
    node _rDataSel_T_6 = eq(UInt<1>(1), _rDataSel_T) @[build/npc.fir.opt.mlir 1981:24]
    node _rDataSel_T_7 = eq(UInt<2>(2), _rDataSel_T) @[build/npc.fir.opt.mlir 1983:24]
    node _rDataSel_T_8 = eq(UInt<2>(3), _rDataSel_T) @[build/npc.fir.opt.mlir 1985:24]
    node _rDataSel_T_9 = mux(_rDataSel_T_5, _rDataSel_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 1987:24]
    node _rDataSel_T_10 = mux(_rDataSel_T_6, _rDataSel_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 1989:25]
    node _rDataSel_T_11 = mux(_rDataSel_T_7, _rDataSel_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 1991:25]
    node _rDataSel_T_12 = mux(_rDataSel_T_8, _rDataSel_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 1993:25]
    node _rDataSel_T_13 = or(_rDataSel_T_9, _rDataSel_T_10) @[build/npc.fir.opt.mlir 1995:25]
    node _rDataSel_T_14 = or(_rDataSel_T_13, _rDataSel_T_11) @[build/npc.fir.opt.mlir 1997:25]
    node _rDataSel_T_15 = or(_rDataSel_T_14, _rDataSel_T_12) @[build/npc.fir.opt.mlir 1999:25]
    wire rDataSel : UInt<32> @[build/npc.fir.opt.mlir 2000:19]
    connect rDataSel, _rDataSel_T_15 @[build/npc.fir.opt.mlir 2001:7]
    node _io_out_bits_wbData_T = bits(rDataSel, 7, 0) @[build/npc.fir.opt.mlir 2003:32]
    node io_out_bits_wbData_signBit = bits(_io_out_bits_wbData_T, 7, 7) @[build/npc.fir.opt.mlir 2005:37]
    node _io_out_bits_wbData_T_1 = mux(io_out_bits_wbData_signBit, UInt<24>(16777215), UInt<24>(0)) @[build/npc.fir.opt.mlir 2009:34]
    node _io_out_bits_wbData_T_2 = cat(_io_out_bits_wbData_T_1, _io_out_bits_wbData_T) @[build/npc.fir.opt.mlir 2011:34]
    node _io_out_bits_wbData_T_3 = bits(rDataSel, 15, 0) @[build/npc.fir.opt.mlir 2013:34]
    node io_out_bits_wbData_signBit_1 = bits(_io_out_bits_wbData_T_3, 15, 15) @[build/npc.fir.opt.mlir 2015:39]
    node _io_out_bits_wbData_T_4 = mux(io_out_bits_wbData_signBit_1, UInt<16>(65535), UInt<16>(0)) @[build/npc.fir.opt.mlir 2019:34]
    node _io_out_bits_wbData_T_5 = cat(_io_out_bits_wbData_T_4, _io_out_bits_wbData_T_3) @[build/npc.fir.opt.mlir 2021:34]
    node _io_out_bits_wbData_T_6 = bits(rDataSel, 7, 0) @[build/npc.fir.opt.mlir 2023:34]
    node _io_out_bits_wbData_T_7 = cat(UInt<24>(0), _io_out_bits_wbData_T_6) @[build/npc.fir.opt.mlir 2025:34]
    node _io_out_bits_wbData_T_8 = bits(rDataSel, 15, 0) @[build/npc.fir.opt.mlir 2027:34]
    node _io_out_bits_wbData_T_9 = cat(UInt<16>(0), _io_out_bits_wbData_T_8) @[build/npc.fir.opt.mlir 2029:34]
    node _io_out_bits_wbData_T_10 = eq(UInt<5>(0), uop.funcOpType) @[build/npc.fir.opt.mlir 2032:35]
    node _io_out_bits_wbData_T_11 = eq(UInt<5>(1), uop.funcOpType) @[build/npc.fir.opt.mlir 2035:35]
    node _io_out_bits_wbData_T_12 = eq(UInt<5>(2), uop.funcOpType) @[build/npc.fir.opt.mlir 2038:35]
    node _io_out_bits_wbData_T_13 = eq(UInt<5>(3), uop.funcOpType) @[build/npc.fir.opt.mlir 2041:35]
    node _io_out_bits_wbData_T_14 = eq(UInt<5>(4), uop.funcOpType) @[build/npc.fir.opt.mlir 2044:35]
    node _io_out_bits_wbData_T_15 = mux(_io_out_bits_wbData_T_10, _io_out_bits_wbData_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 2046:35]
    node _io_out_bits_wbData_T_16 = mux(_io_out_bits_wbData_T_11, _io_out_bits_wbData_T_5, UInt<1>(0)) @[build/npc.fir.opt.mlir 2048:35]
    node _io_out_bits_wbData_T_17 = mux(_io_out_bits_wbData_T_12, io.dmem.resp.bits.rdata, UInt<1>(0)) @[build/npc.fir.opt.mlir 2050:35]
    node _io_out_bits_wbData_T_18 = mux(_io_out_bits_wbData_T_13, _io_out_bits_wbData_T_7, UInt<1>(0)) @[build/npc.fir.opt.mlir 2052:35]
    node _io_out_bits_wbData_T_19 = mux(_io_out_bits_wbData_T_14, _io_out_bits_wbData_T_9, UInt<1>(0)) @[build/npc.fir.opt.mlir 2054:35]
    node _io_out_bits_wbData_T_20 = or(_io_out_bits_wbData_T_15, _io_out_bits_wbData_T_16) @[build/npc.fir.opt.mlir 2056:35]
    node _io_out_bits_wbData_T_21 = or(_io_out_bits_wbData_T_20, _io_out_bits_wbData_T_17) @[build/npc.fir.opt.mlir 2058:35]
    node _io_out_bits_wbData_T_22 = or(_io_out_bits_wbData_T_21, _io_out_bits_wbData_T_18) @[build/npc.fir.opt.mlir 2060:35]
    node _io_out_bits_wbData_T_23 = or(_io_out_bits_wbData_T_22, _io_out_bits_wbData_T_19) @[build/npc.fir.opt.mlir 2062:35]
    wire _io_out_bits_wbData_WIRE : UInt<32> @[build/npc.fir.opt.mlir 2063:35]
    connect _io_out_bits_wbData_WIRE, _io_out_bits_wbData_T_23 @[build/npc.fir.opt.mlir 2064:7]
    connect io.out.bits.wbData, _io_out_bits_wbData_WIRE @[build/npc.fir.opt.mlir 2065:7]
    node _io_in_ready_T = and(io.dmem.req.ready, io.dmem.req.valid) @[build/npc.fir.opt.mlir 2067:25]
    connect io.in.ready, _io_in_ready_T @[build/npc.fir.opt.mlir 2068:7]

  module CSR : @[build/npc.fir.opt.mlir 2070:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2070:35]
    input reset : Reset @[build/npc.fir.opt.mlir 2070:61]
    output io : { flip uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, flip src : UInt<32>[2], exptReq : UInt<1>, eVec : UInt<32>, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> } } @[build/npc.fir.opt.mlir 2070:88]

    node isPrivInst = eq(io.uop.fuType, UInt<3>(2)) @[build/npc.fir.opt.mlir 2088:21]
    node _isEbreak_T = eq(io.uop.funcOpType, UInt<5>(2)) @[build/npc.fir.opt.mlir 2091:22]
    node isEbreak = and(_isEbreak_T, isPrivInst) @[build/npc.fir.opt.mlir 2093:19]
    node _isEcall_T = eq(io.uop.funcOpType, UInt<5>(3)) @[build/npc.fir.opt.mlir 2096:21]
    node isEcall = and(_isEcall_T, isPrivInst) @[build/npc.fir.opt.mlir 2098:18]
    node _isMret_T = eq(io.uop.funcOpType, UInt<5>(4)) @[build/npc.fir.opt.mlir 2101:20]
    node isMret = and(_isMret_T, isPrivInst) @[build/npc.fir.opt.mlir 2103:17]
    regreset mtvec : UInt<32>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 2105:16]
    regreset mepc : UInt<32>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 2106:15]
    regreset mcause : UInt<32>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 2107:17]
    regreset mstatus : UInt<32>, clock, reset, UInt<13>(6144) @[build/npc.fir.opt.mlir 2109:18]
    regreset mvendorid : UInt<32>, clock, reset, UInt<31>(2037610872) @[build/npc.fir.opt.mlir 2111:20]
    regreset marchid : UInt<32>, clock, reset, UInt<25>(23060011) @[build/npc.fir.opt.mlir 2113:18]
    node _wen_T = eq(io.uop.funcOpType, UInt<5>(2)) @[build/npc.fir.opt.mlir 2115:17]
    node _wen_T_1 = eq(io.uop.funcOpType, UInt<5>(3)) @[build/npc.fir.opt.mlir 2117:19]
    node _wen_T_2 = or(_wen_T, _wen_T_1) @[build/npc.fir.opt.mlir 2119:19]
    node _wen_T_3 = eq(io.uop.funcOpType, UInt<5>(4)) @[build/npc.fir.opt.mlir 2121:19]
    node _wen_T_4 = or(_wen_T_2, _wen_T_3) @[build/npc.fir.opt.mlir 2123:19]
    node _wen_T_5 = eq(_wen_T_4, UInt<1>(0)) @[build/npc.fir.opt.mlir 2125:19]
    node wen = and(isPrivInst, _wen_T_5) @[build/npc.fir.opt.mlir 2127:14]
    node _wdata_T = or(io.src[0], io.wb.rfData) @[build/npc.fir.opt.mlir 2129:19]
    node _wdata_T_1 = eq(UInt<5>(0), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2132:21]
    node _wdata_T_2 = eq(UInt<5>(1), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2135:21]
    node _wdata_T_3 = mux(_wdata_T_1, io.src[0], UInt<1>(0)) @[build/npc.fir.opt.mlir 2137:21]
    node _wdata_T_4 = mux(_wdata_T_2, _wdata_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 2139:21]
    node _wdata_T_5 = or(_wdata_T_3, _wdata_T_4) @[build/npc.fir.opt.mlir 2141:21]
    wire wdata : UInt<32> @[build/npc.fir.opt.mlir 2142:16]
    connect wdata, _wdata_T_5 @[build/npc.fir.opt.mlir 2143:7]
    node _T = bits(io.uop.imm, 11, 0) @[build/npc.fir.opt.mlir 2145:13]
    node _T_1 = eq(_T, UInt<12>(3858)) @[build/npc.fir.opt.mlir 2148:15]
    node _T_2 = and(wen, _T_1) @[build/npc.fir.opt.mlir 2150:15]
    when _T_2 : @[build/npc.fir.opt.mlir 2151:7]
      connect marchid, wdata @[build/npc.fir.opt.mlir 2152:9]
    node _T_3 = eq(_T, UInt<10>(834)) @[build/npc.fir.opt.mlir 2156:15]
    node _T_4 = and(wen, _T_3) @[build/npc.fir.opt.mlir 2158:15]
    when _T_4 : @[build/npc.fir.opt.mlir 2159:7]
      connect mcause, wdata @[build/npc.fir.opt.mlir 2160:9]
    node _T_5 = eq(_T, UInt<12>(3857)) @[build/npc.fir.opt.mlir 2164:15]
    node _T_6 = and(wen, _T_5) @[build/npc.fir.opt.mlir 2166:15]
    when _T_6 : @[build/npc.fir.opt.mlir 2167:7]
      connect mvendorid, wdata @[build/npc.fir.opt.mlir 2168:9]
    node _T_7 = eq(_T, UInt<10>(773)) @[build/npc.fir.opt.mlir 2172:15]
    node _T_8 = and(wen, _T_7) @[build/npc.fir.opt.mlir 2174:15]
    when _T_8 : @[build/npc.fir.opt.mlir 2175:7]
      connect mtvec, wdata @[build/npc.fir.opt.mlir 2176:9]
    node _T_9 = eq(_T, UInt<10>(768)) @[build/npc.fir.opt.mlir 2180:15]
    node _T_10 = and(wen, _T_9) @[build/npc.fir.opt.mlir 2182:16]
    when _T_10 : @[build/npc.fir.opt.mlir 2183:7]
      connect mstatus, wdata @[build/npc.fir.opt.mlir 2184:9]
    node _T_11 = eq(_T, UInt<10>(833)) @[build/npc.fir.opt.mlir 2188:16]
    node _T_12 = and(wen, _T_11) @[build/npc.fir.opt.mlir 2190:16]
    when _T_12 : @[build/npc.fir.opt.mlir 2191:7]
      connect mepc, wdata @[build/npc.fir.opt.mlir 2192:9]
    node _io_wb_rfWen_T = and(io.uop.rfWen, isPrivInst) @[build/npc.fir.opt.mlir 2195:25]
    connect io.wb.rfWen, _io_wb_rfWen_T @[build/npc.fir.opt.mlir 2196:7]
    connect io.wb.rfDest, io.uop.rfDest @[build/npc.fir.opt.mlir 2197:7]
    node _io_wb_rfData_T = bits(io.uop.imm, 11, 0) @[build/npc.fir.opt.mlir 2199:26]
    node _io_wb_rfData_T_1 = eq(_io_wb_rfData_T, UInt<12>(3858)) @[build/npc.fir.opt.mlir 2201:28]
    node _io_wb_rfData_T_2 = mux(_io_wb_rfData_T_1, marchid, UInt<1>(0)) @[build/npc.fir.opt.mlir 2203:28]
    node _io_wb_rfData_T_3 = eq(_io_wb_rfData_T, UInt<10>(834)) @[build/npc.fir.opt.mlir 2205:28]
    node _io_wb_rfData_T_4 = mux(_io_wb_rfData_T_3, mcause, _io_wb_rfData_T_2) @[build/npc.fir.opt.mlir 2207:28]
    node _io_wb_rfData_T_5 = eq(_io_wb_rfData_T, UInt<12>(3857)) @[build/npc.fir.opt.mlir 2209:28]
    node _io_wb_rfData_T_6 = mux(_io_wb_rfData_T_5, mvendorid, _io_wb_rfData_T_4) @[build/npc.fir.opt.mlir 2211:28]
    node _io_wb_rfData_T_7 = eq(_io_wb_rfData_T, UInt<10>(773)) @[build/npc.fir.opt.mlir 2213:28]
    node _io_wb_rfData_T_8 = mux(_io_wb_rfData_T_7, mtvec, _io_wb_rfData_T_6) @[build/npc.fir.opt.mlir 2215:28]
    node _io_wb_rfData_T_9 = eq(_io_wb_rfData_T, UInt<10>(768)) @[build/npc.fir.opt.mlir 2217:28]
    node _io_wb_rfData_T_10 = mux(_io_wb_rfData_T_9, mstatus, _io_wb_rfData_T_8) @[build/npc.fir.opt.mlir 2219:29]
    node _io_wb_rfData_T_11 = eq(_io_wb_rfData_T, UInt<10>(833)) @[build/npc.fir.opt.mlir 2221:29]
    node _io_wb_rfData_T_12 = mux(_io_wb_rfData_T_11, mepc, _io_wb_rfData_T_10) @[build/npc.fir.opt.mlir 2223:29]
    connect io.wb.rfData, _io_wb_rfData_T_12 @[build/npc.fir.opt.mlir 2224:7]
    node _io_exptReq_T = or(isEcall, isMret) @[build/npc.fir.opt.mlir 2226:24]
    connect io.exptReq, _io_exptReq_T @[build/npc.fir.opt.mlir 2227:7]
    node _io_eVec_T = mux(isEcall, mtvec, mepc) @[build/npc.fir.opt.mlir 2229:21]
    connect io.eVec, _io_eVec_T @[build/npc.fir.opt.mlir 2230:7]
    when isEcall : @[build/npc.fir.opt.mlir 2232:7]
      connect mcause, pad(UInt<4>(11), 32) @[build/npc.fir.opt.mlir 2235:9]
      connect mepc, io.uop.pc @[build/npc.fir.opt.mlir 2236:9]

  module NaiveMultiplier : @[build/npc.fir.opt.mlir 2239:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2239:47]
    input reset : Reset @[build/npc.fir.opt.mlir 2239:73]
    output io : { flip in : UInt<33>[2], out : UInt<66> } @[build/npc.fir.opt.mlir 2239:100]

    node _res_T = asSInt(io.in[0]) @[build/npc.fir.opt.mlir 2245:17]
    node _res_T_1 = asSInt(io.in[1]) @[build/npc.fir.opt.mlir 2247:19]
    node res = mul(_res_T, _res_T_1) @[build/npc.fir.opt.mlir 2249:14]
    node _io_out_T = asUInt(res) @[build/npc.fir.opt.mlir 2251:20]
    connect io.out, _io_out_T @[build/npc.fir.opt.mlir 2252:7]

  module NaiveDivider : @[build/npc.fir.opt.mlir 2254:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2254:44]
    input reset : Reset @[build/npc.fir.opt.mlir 2254:70]
    output io : { flip sign : UInt<1>, flip dividend : UInt<32>, flip divisor : UInt<32>, quotient : UInt<32>, remainder : UInt<32> } @[build/npc.fir.opt.mlir 2254:97]

    wire quotient : UInt<32> @[build/npc.fir.opt.mlir 2260:19]
    wire remainder : UInt<32> @[build/npc.fir.opt.mlir 2261:20]
    when io.sign : @[build/npc.fir.opt.mlir 2262:7]
      node _quotient_T = asSInt(io.dividend) @[build/npc.fir.opt.mlir 2264:24]
      node _quotient_T_1 = asSInt(io.divisor) @[build/npc.fir.opt.mlir 2266:26]
      node _quotient_T_2 = div(_quotient_T, _quotient_T_1) @[build/npc.fir.opt.mlir 2268:26]
      node _quotient_T_3 = asUInt(_quotient_T_2) @[build/npc.fir.opt.mlir 2270:26]
      connect quotient, tail(_quotient_T_3, 1) @[build/npc.fir.opt.mlir 2272:9]
      node _remainder_T = asSInt(io.dividend) @[build/npc.fir.opt.mlir 2274:25]
      node _remainder_T_1 = asSInt(io.divisor) @[build/npc.fir.opt.mlir 2276:27]
      node _remainder_T_2 = rem(_remainder_T, _remainder_T_1) @[build/npc.fir.opt.mlir 2278:27]
      node _remainder_T_3 = asUInt(_remainder_T_2) @[build/npc.fir.opt.mlir 2280:27]
      connect remainder, _remainder_T_3 @[build/npc.fir.opt.mlir 2281:9]
    else :
      node _quotient_T_4 = div(io.dividend, io.divisor) @[build/npc.fir.opt.mlir 2284:26]
      connect quotient, _quotient_T_4 @[build/npc.fir.opt.mlir 2285:9]
      node _remainder_T_4 = rem(io.dividend, io.divisor) @[build/npc.fir.opt.mlir 2287:27]
      connect remainder, _remainder_T_4 @[build/npc.fir.opt.mlir 2288:9]
    node _io_quotient_T = eq(io.divisor, UInt<1>(0)) @[build/npc.fir.opt.mlir 2292:25]
    node _io_quotient_T_1 = mux(_io_quotient_T, UInt<1>(0), quotient) @[build/npc.fir.opt.mlir 2294:27]
    connect io.quotient, _io_quotient_T_1 @[build/npc.fir.opt.mlir 2295:7]
    node _io_remainder_T = eq(io.divisor, UInt<1>(0)) @[build/npc.fir.opt.mlir 2297:26]
    node _io_remainder_T_1 = mux(_io_remainder_T, UInt<1>(0), remainder) @[build/npc.fir.opt.mlir 2299:28]
    connect io.remainder, _io_remainder_T_1 @[build/npc.fir.opt.mlir 2300:7]

  module MDU : @[build/npc.fir.opt.mlir 2302:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2302:35]
    input reset : Reset @[build/npc.fir.opt.mlir 2302:61]
    output io : { flip uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, flip src : UInt<32>[2], wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> } } @[build/npc.fir.opt.mlir 2302:88]

    inst mul of NaiveMultiplier @[build/npc.fir.opt.mlir 2314:41]
    connect mul.clock, clock @[build/npc.fir.opt.mlir 2319:7]
    connect mul.reset, reset @[build/npc.fir.opt.mlir 2320:7]
    inst div of NaiveDivider @[build/npc.fir.opt.mlir 2321:41]
    connect div.clock, clock @[build/npc.fir.opt.mlir 2327:7]
    connect div.reset, reset @[build/npc.fir.opt.mlir 2328:7]
    node _mul_io_in_0_T = cat(UInt<1>(0), io.src[0]) @[build/npc.fir.opt.mlir 2331:25]
    node mul_io_in_0_signBit = bits(io.src[0], 31, 31) @[build/npc.fir.opt.mlir 2333:30]
    node _mul_io_in_0_T_1 = cat(mul_io_in_0_signBit, io.src[0]) @[build/npc.fir.opt.mlir 2335:27]
    node _mul_io_in_0_T_2 = cat(UInt<1>(0), io.src[0]) @[build/npc.fir.opt.mlir 2337:27]
    node mul_io_in_0_signBit_1 = bits(io.src[0], 31, 31) @[build/npc.fir.opt.mlir 2339:32]
    node _mul_io_in_0_T_3 = cat(mul_io_in_0_signBit_1, io.src[0]) @[build/npc.fir.opt.mlir 2341:27]
    node _mul_io_in_0_T_4 = eq(UInt<2>(0), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2344:27]
    node _mul_io_in_0_T_5 = eq(UInt<2>(1), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2347:27]
    node _mul_io_in_0_T_6 = eq(UInt<2>(2), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2350:27]
    node _mul_io_in_0_T_7 = eq(UInt<2>(3), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2353:27]
    node _mul_io_in_0_T_8 = mux(_mul_io_in_0_T_4, _mul_io_in_0_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 2355:27]
    node _mul_io_in_0_T_9 = mux(_mul_io_in_0_T_5, _mul_io_in_0_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 2357:27]
    node _mul_io_in_0_T_10 = mux(_mul_io_in_0_T_6, _mul_io_in_0_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 2359:28]
    node _mul_io_in_0_T_11 = mux(_mul_io_in_0_T_7, _mul_io_in_0_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 2361:28]
    node _mul_io_in_0_T_12 = or(_mul_io_in_0_T_8, _mul_io_in_0_T_9) @[build/npc.fir.opt.mlir 2363:28]
    node _mul_io_in_0_T_13 = or(_mul_io_in_0_T_12, _mul_io_in_0_T_10) @[build/npc.fir.opt.mlir 2365:28]
    node _mul_io_in_0_T_14 = or(_mul_io_in_0_T_13, _mul_io_in_0_T_11) @[build/npc.fir.opt.mlir 2367:28]
    wire _mul_io_in_0_WIRE : UInt<33> @[build/npc.fir.opt.mlir 2368:28]
    connect _mul_io_in_0_WIRE, _mul_io_in_0_T_14 @[build/npc.fir.opt.mlir 2369:7]
    connect mul.io.in[0], _mul_io_in_0_WIRE @[build/npc.fir.opt.mlir 2370:7]
    node _mul_io_in_1_T = cat(UInt<1>(0), io.src[1]) @[build/npc.fir.opt.mlir 2372:25]
    node mul_io_in_1_signBit = bits(io.src[1], 31, 31) @[build/npc.fir.opt.mlir 2374:30]
    node _mul_io_in_1_T_1 = cat(mul_io_in_1_signBit, io.src[1]) @[build/npc.fir.opt.mlir 2376:27]
    node _mul_io_in_1_T_2 = cat(UInt<1>(0), io.src[1]) @[build/npc.fir.opt.mlir 2378:27]
    node mul_io_in_1_signBit_1 = bits(io.src[1], 31, 31) @[build/npc.fir.opt.mlir 2380:32]
    node _mul_io_in_1_T_3 = cat(mul_io_in_1_signBit_1, io.src[1]) @[build/npc.fir.opt.mlir 2382:27]
    node _mul_io_in_1_T_4 = eq(UInt<2>(0), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2384:27]
    node _mul_io_in_1_T_5 = eq(UInt<2>(1), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2386:27]
    node _mul_io_in_1_T_6 = eq(UInt<2>(2), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2388:27]
    node _mul_io_in_1_T_7 = eq(UInt<2>(3), io.uop.funcOpType) @[build/npc.fir.opt.mlir 2390:27]
    node _mul_io_in_1_T_8 = mux(_mul_io_in_1_T_4, _mul_io_in_1_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 2392:27]
    node _mul_io_in_1_T_9 = mux(_mul_io_in_1_T_5, _mul_io_in_1_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 2394:27]
    node _mul_io_in_1_T_10 = mux(_mul_io_in_1_T_6, _mul_io_in_1_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 2396:28]
    node _mul_io_in_1_T_11 = mux(_mul_io_in_1_T_7, _mul_io_in_1_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 2398:28]
    node _mul_io_in_1_T_12 = or(_mul_io_in_1_T_8, _mul_io_in_1_T_9) @[build/npc.fir.opt.mlir 2400:28]
    node _mul_io_in_1_T_13 = or(_mul_io_in_1_T_12, _mul_io_in_1_T_10) @[build/npc.fir.opt.mlir 2402:28]
    node _mul_io_in_1_T_14 = or(_mul_io_in_1_T_13, _mul_io_in_1_T_11) @[build/npc.fir.opt.mlir 2404:28]
    wire _mul_io_in_1_WIRE : UInt<33> @[build/npc.fir.opt.mlir 2405:28]
    connect _mul_io_in_1_WIRE, _mul_io_in_1_T_14 @[build/npc.fir.opt.mlir 2406:7]
    connect mul.io.in[1], _mul_io_in_1_WIRE @[build/npc.fir.opt.mlir 2407:7]
    node _mulRes_T = eq(io.uop.funcOpType, UInt<1>(1)) @[build/npc.fir.opt.mlir 2410:20]
    node _mulRes_T_1 = eq(io.uop.funcOpType, UInt<2>(2)) @[build/npc.fir.opt.mlir 2412:22]
    node _mulRes_T_2 = or(_mulRes_T, _mulRes_T_1) @[build/npc.fir.opt.mlir 2414:22]
    node _mulRes_T_3 = eq(_mulRes_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 2416:22]
    node _mulRes_T_4 = bits(mul.io.out, 31, 0) @[build/npc.fir.opt.mlir 2418:22]
    node _mulRes_T_5 = bits(mul.io.out, 63, 32) @[build/npc.fir.opt.mlir 2420:22]
    node mulRes = mux(_mulRes_T_3, _mulRes_T_4, _mulRes_T_5) @[build/npc.fir.opt.mlir 2422:17]
    node _div_io_sign_T = eq(io.uop.funcOpType, UInt<3>(4)) @[build/npc.fir.opt.mlir 2425:25]
    node _div_io_sign_T_1 = eq(io.uop.funcOpType, UInt<3>(5)) @[build/npc.fir.opt.mlir 2428:27]
    node _div_io_sign_T_2 = or(_div_io_sign_T, _div_io_sign_T_1) @[build/npc.fir.opt.mlir 2430:27]
    node _div_io_sign_T_3 = eq(io.uop.funcOpType, UInt<3>(6)) @[build/npc.fir.opt.mlir 2433:27]
    node _div_io_sign_T_4 = eq(io.uop.funcOpType, UInt<3>(7)) @[build/npc.fir.opt.mlir 2436:27]
    node _div_io_sign_T_5 = or(_div_io_sign_T_3, _div_io_sign_T_4) @[build/npc.fir.opt.mlir 2438:27]
    node _div_io_sign_T_6 = or(_div_io_sign_T_2, _div_io_sign_T_5) @[build/npc.fir.opt.mlir 2440:27]
    node _div_io_sign_T_7 = bits(io.uop.funcOpType, 0, 0) @[build/npc.fir.opt.mlir 2442:27]
    node _div_io_sign_T_8 = eq(_div_io_sign_T_7, UInt<1>(0)) @[build/npc.fir.opt.mlir 2444:27]
    node _div_io_sign_T_9 = and(_div_io_sign_T_6, _div_io_sign_T_8) @[build/npc.fir.opt.mlir 2446:27]
    connect div.io.sign, _div_io_sign_T_9 @[build/npc.fir.opt.mlir 2447:7]
    connect div.io.dividend, io.src[0] @[build/npc.fir.opt.mlir 2448:7]
    connect div.io.divisor, io.src[1] @[build/npc.fir.opt.mlir 2449:7]
    node _divRes_T = eq(io.uop.funcOpType, UInt<3>(4)) @[build/npc.fir.opt.mlir 2451:20]
    node _divRes_T_1 = eq(io.uop.funcOpType, UInt<3>(5)) @[build/npc.fir.opt.mlir 2453:22]
    node _divRes_T_2 = or(_divRes_T, _divRes_T_1) @[build/npc.fir.opt.mlir 2455:22]
    node divRes = mux(_divRes_T_2, div.io.quotient, div.io.remainder) @[build/npc.fir.opt.mlir 2457:17]
    node _io_wb_rfWen_T = eq(io.uop.funcOpType, UInt<3>(3)) @[build/npc.fir.opt.mlir 2460:25]
    node _io_wb_rfWen_T_1 = and(io.uop.rfWen, _io_wb_rfWen_T) @[build/npc.fir.opt.mlir 2462:27]
    connect io.wb.rfWen, _io_wb_rfWen_T_1 @[build/npc.fir.opt.mlir 2463:7]
    connect io.wb.rfDest, io.uop.rfDest @[build/npc.fir.opt.mlir 2464:7]
    node _io_wb_rfData_T = bits(io.uop.funcOpType, 2, 2) @[build/npc.fir.opt.mlir 2466:26]
    node _io_wb_rfData_T_1 = eq(_io_wb_rfData_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 2468:28]
    node _io_wb_rfData_T_2 = mux(_io_wb_rfData_T_1, mulRes, divRes) @[build/npc.fir.opt.mlir 2470:28]
    connect io.wb.rfData, _io_wb_rfData_T_2 @[build/npc.fir.opt.mlir 2471:7]

  module Fence : @[build/npc.fir.opt.mlir 2473:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2473:37]
    input reset : Reset @[build/npc.fir.opt.mlir 2473:63]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } }, flushReq : UInt<1>, flushPC : UInt<32> } @[build/npc.fir.opt.mlir 2473:90]

    node _fencei_T = eq(io.in.bits.funcOpType, UInt<5>(0)) @[build/npc.fir.opt.mlir 2485:20]
    node _fencei_T_1 = eq(io.in.bits.fuType, UInt<3>(4)) @[build/npc.fir.opt.mlir 2488:22]
    node _fencei_T_2 = and(_fencei_T, _fencei_T_1) @[build/npc.fir.opt.mlir 2490:22]
    node fencei = and(_fencei_T_2, io.in.valid) @[build/npc.fir.opt.mlir 2492:17]
    connect io.flushReq, fencei @[build/npc.fir.opt.mlir 2493:7]
    node _io_flushPC_T = add(io.in.bits.pc, UInt<3>(4)) @[build/npc.fir.opt.mlir 2495:24]
    node _io_flushPC_T_1 = tail(_io_flushPC_T, 1) @[build/npc.fir.opt.mlir 2497:26]
    connect io.flushPC, _io_flushPC_T_1 @[build/npc.fir.opt.mlir 2498:7]
    connect io.in.ready, UInt<1>(1) @[build/npc.fir.opt.mlir 2501:7]

  module EXU : @[build/npc.fir.opt.mlir 2503:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2503:35]
    input reset : Reset @[build/npc.fir.opt.mlir 2503:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, srcs : UInt<32>[2], isForward : UInt<1>[2] } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, isMMIO : UInt<1>, commits : UInt<32>[5] } }, flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }[2], dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } }, flip wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> } } @[build/npc.fir.opt.mlir 2503:88]
    output io_debug_trap_bore : UInt<1> @[build/npc.fir.opt.mlir 2503:1138]
    output io_debug_trapCode_bore : UInt<32> @[build/npc.fir.opt.mlir 2503:1180]

    inst executeUnit of ExecuteUnit @[build/npc.fir.opt.mlir 2559:65]
    connect executeUnit.clock, clock @[build/npc.fir.opt.mlir 2579:7]
    connect executeUnit.reset, reset @[build/npc.fir.opt.mlir 2580:7]
    inst LSU of LoadStoreUnit @[build/npc.fir.opt.mlir 2581:41]
    connect LSU.clock, clock @[build/npc.fir.opt.mlir 2614:7]
    connect LSU.reset, reset @[build/npc.fir.opt.mlir 2615:7]
    inst CSR of CSR @[build/npc.fir.opt.mlir 2616:41]
    connect CSR.clock, clock @[build/npc.fir.opt.mlir 2637:7]
    connect CSR.reset, reset @[build/npc.fir.opt.mlir 2638:7]
    inst MDU of MDU @[build/npc.fir.opt.mlir 2639:41]
    connect MDU.clock, clock @[build/npc.fir.opt.mlir 2658:7]
    connect MDU.reset, reset @[build/npc.fir.opt.mlir 2659:7]
    inst Fence of Fence @[build/npc.fir.opt.mlir 2660:47]
    connect Fence.clock, clock @[build/npc.fir.opt.mlir 2680:7]
    connect Fence.reset, reset @[build/npc.fir.opt.mlir 2681:7]
    node _srcs_T = mux(io.in.bits.isForward[0], io.wb.rfData, io.in.bits.srcs[0]) @[build/npc.fir.opt.mlir 2683:18]
    node _srcs_T_1 = mux(io.in.bits.isForward[1], io.wb.rfData, io.in.bits.srcs[1]) @[build/npc.fir.opt.mlir 2685:20]
    wire srcs : UInt<32>[2] @[build/npc.fir.opt.mlir 2686:15]
    connect srcs[0], _srcs_T @[build/npc.fir.opt.mlir 2689:7]
    connect srcs[1], _srcs_T_1 @[build/npc.fir.opt.mlir 2690:7]
    connect executeUnit.io.uop.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 2691:7]
    connect executeUnit.io.uop.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 2692:7]
    connect executeUnit.io.uop.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 2693:7]
    connect executeUnit.io.uop.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 2694:7]
    connect executeUnit.io.uop.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 2695:7]
    connect executeUnit.io.uop.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 2696:7]
    connect executeUnit.io.uop.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 2697:7]
    connect executeUnit.io.uop.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 2698:7]
    connect executeUnit.io.uop.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 2699:7]
    connect executeUnit.io.uop.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2700:7]
    connect executeUnit.io.uop.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 2701:7]
    connect executeUnit.io.uop.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 2702:7]
    connect executeUnit.io.src, srcs @[build/npc.fir.opt.mlir 2703:7]
    connect io.flush[0], executeUnit.io.flush @[build/npc.fir.opt.mlir 2704:7]
    node _io_flush_0_valid_T = and(executeUnit.io.flush.valid, io.in.valid) @[build/npc.fir.opt.mlir 2706:30]
    connect io.flush[0].valid, _io_flush_0_valid_T @[build/npc.fir.opt.mlir 2707:7]
    node _LSU_io_in_valid_T = eq(io.in.bits.uop.fuType, UInt<3>(1)) @[build/npc.fir.opt.mlir 2710:29]
    node _LSU_io_in_valid_T_1 = and(io.in.valid, _LSU_io_in_valid_T) @[build/npc.fir.opt.mlir 2712:31]
    connect LSU.io.in.valid, _LSU_io_in_valid_T_1 @[build/npc.fir.opt.mlir 2713:7]
    connect LSU.io.in.bits.uop.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 2714:7]
    connect LSU.io.in.bits.uop.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 2715:7]
    connect LSU.io.in.bits.uop.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 2716:7]
    connect LSU.io.in.bits.uop.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 2717:7]
    connect LSU.io.in.bits.uop.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 2718:7]
    connect LSU.io.in.bits.uop.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 2719:7]
    connect LSU.io.in.bits.uop.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 2720:7]
    connect LSU.io.in.bits.uop.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 2721:7]
    connect LSU.io.in.bits.uop.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 2722:7]
    connect LSU.io.in.bits.uop.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2723:7]
    connect LSU.io.in.bits.uop.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 2724:7]
    connect LSU.io.in.bits.uop.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 2725:7]
    connect LSU.io.in.bits.addrBase, srcs[0] @[build/npc.fir.opt.mlir 2726:7]
    connect LSU.io.in.bits.src, srcs[1] @[build/npc.fir.opt.mlir 2727:7]
    connect LSU.io.out.ready, UInt<1>(1) @[build/npc.fir.opt.mlir 2730:7]
    connect io.dmem.resp.ready, LSU.io.dmem.resp.ready @[build/npc.fir.opt.mlir 2733:7]
    connect LSU.io.dmem.resp.valid, io.dmem.resp.valid @[build/npc.fir.opt.mlir 2736:7]
    connect LSU.io.dmem.resp.bits, io.dmem.resp.bits @[build/npc.fir.opt.mlir 2739:7]
    connect io.dmem.req.bits, LSU.io.dmem.req.bits @[build/npc.fir.opt.mlir 2740:7]
    connect io.dmem.req.valid, LSU.io.dmem.req.valid @[build/npc.fir.opt.mlir 2741:7]
    connect LSU.io.dmem.req.ready, io.dmem.req.ready @[build/npc.fir.opt.mlir 2742:7]
    node fenceFlush = and(io.in.valid, Fence.io.flushReq) @[build/npc.fir.opt.mlir 2744:21]
    connect Fence.io.in.valid, io.in.valid @[build/npc.fir.opt.mlir 2745:7]
    connect Fence.io.in.bits.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 2746:7]
    connect Fence.io.in.bits.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 2747:7]
    connect Fence.io.in.bits.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 2748:7]
    connect Fence.io.in.bits.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 2749:7]
    connect Fence.io.in.bits.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 2750:7]
    connect Fence.io.in.bits.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 2751:7]
    connect Fence.io.in.bits.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 2752:7]
    connect Fence.io.in.bits.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 2753:7]
    connect Fence.io.in.bits.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 2754:7]
    connect Fence.io.in.bits.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2755:7]
    connect Fence.io.in.bits.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 2756:7]
    connect Fence.io.in.bits.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 2757:7]
    connect CSR.io.uop.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 2758:7]
    connect CSR.io.uop.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 2759:7]
    connect CSR.io.uop.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 2760:7]
    connect CSR.io.uop.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 2761:7]
    connect CSR.io.uop.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 2762:7]
    connect CSR.io.uop.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 2763:7]
    connect CSR.io.uop.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 2764:7]
    connect CSR.io.uop.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 2765:7]
    connect CSR.io.uop.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 2766:7]
    connect CSR.io.uop.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2767:7]
    connect CSR.io.uop.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 2768:7]
    connect CSR.io.uop.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 2769:7]
    connect CSR.io.src, srcs @[build/npc.fir.opt.mlir 2770:7]
    node _io_flush_1_valid_T = and(CSR.io.exptReq, io.in.valid) @[build/npc.fir.opt.mlir 2772:30]
    node _io_flush_1_valid_T_1 = or(_io_flush_1_valid_T, fenceFlush) @[build/npc.fir.opt.mlir 2774:32]
    connect io.flush[1].valid, _io_flush_1_valid_T_1 @[build/npc.fir.opt.mlir 2775:7]
    node _io_flush_1_target_T = mux(fenceFlush, Fence.io.flushPC, CSR.io.eVec) @[build/npc.fir.opt.mlir 2777:31]
    connect io.flush[1].target, _io_flush_1_target_T @[build/npc.fir.opt.mlir 2778:7]
    connect io.flush[1].brType, UInt<1>(1) @[build/npc.fir.opt.mlir 2780:7]
    connect MDU.io.uop.id, io.in.bits.uop.id @[build/npc.fir.opt.mlir 2781:7]
    connect MDU.io.uop.instr, io.in.bits.uop.instr @[build/npc.fir.opt.mlir 2782:7]
    connect MDU.io.uop.srcType[0], io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 2783:7]
    connect MDU.io.uop.srcType[1], io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 2784:7]
    connect MDU.io.uop.fuType, io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 2785:7]
    connect MDU.io.uop.funcOpType, io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 2786:7]
    connect MDU.io.uop.imm, io.in.bits.uop.imm @[build/npc.fir.opt.mlir 2787:7]
    connect MDU.io.uop.rfSrc[0], io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 2788:7]
    connect MDU.io.uop.rfSrc[1], io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 2789:7]
    connect MDU.io.uop.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2790:7]
    connect MDU.io.uop.rfWen, io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 2791:7]
    connect MDU.io.uop.pc, io.in.bits.uop.pc @[build/npc.fir.opt.mlir 2792:7]
    connect MDU.io.src, srcs @[build/npc.fir.opt.mlir 2793:7]
    node _busy_T = eq(io.in.bits.uop.fuType, UInt<3>(1)) @[build/npc.fir.opt.mlir 2795:18]
    node _busy_T_1 = and(io.in.valid, _busy_T) @[build/npc.fir.opt.mlir 2797:20]
    regreset busy : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 2799:15]
    when _busy_T_1 : @[build/npc.fir.opt.mlir 2800:7]
      connect busy, UInt<1>(1) @[build/npc.fir.opt.mlir 2802:9]
    when io.out.valid : @[build/npc.fir.opt.mlir 2804:7]
      connect busy, UInt<1>(0) @[build/npc.fir.opt.mlir 2806:9]
    node _StallLoad_T = bits(io.in.bits.uop.funcOpType, 3, 3) @[build/npc.fir.opt.mlir 2809:23]
    node _StallLoad_T_1 = eq(_StallLoad_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 2811:25]
    node StallLoad = and(busy, _StallLoad_T_1) @[build/npc.fir.opt.mlir 2813:20]
    node _StallStore_T = bits(io.in.bits.uop.funcOpType, 3, 3) @[build/npc.fir.opt.mlir 2815:24]
    node StallStore = and(busy, _StallStore_T) @[build/npc.fir.opt.mlir 2817:21]
    node _io_out_valid_T = neq(io.in.bits.uop.fuType, UInt<3>(1)) @[build/npc.fir.opt.mlir 2819:26]
    node _io_out_valid_T_1 = and(io.in.valid, _io_out_valid_T) @[build/npc.fir.opt.mlir 2821:28]
    node _io_out_valid_T_2 = and(io.in.valid, LSU.io.out.valid) @[build/npc.fir.opt.mlir 2823:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_1, _io_out_valid_T_2) @[build/npc.fir.opt.mlir 2825:28]
    connect io.out.valid, _io_out_valid_T_3 @[build/npc.fir.opt.mlir 2826:7]
    node _io_in_ready_T = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 2828:25]
    node _io_in_ready_T_1 = eq(io.in.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 2830:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/npc.fir.opt.mlir 2832:27]
    node _io_in_ready_T_3 = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 2834:27]
    node _io_in_ready_T_4 = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 2836:27]
    node _io_in_ready_T_5 = or(_io_in_ready_T_3, _io_in_ready_T_4) @[build/npc.fir.opt.mlir 2838:27]
    node _io_in_ready_T_6 = eq(_io_in_ready_T_5, UInt<1>(0)) @[build/npc.fir.opt.mlir 2840:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_2, _io_in_ready_T_6) @[build/npc.fir.opt.mlir 2842:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/npc.fir.opt.mlir 2843:7]
    connect io.out.bits.commits[0], executeUnit.io.rfData @[build/npc.fir.opt.mlir 2844:7]
    connect io.out.bits.commits[1], LSU.io.out.bits.wbData @[build/npc.fir.opt.mlir 2845:7]
    connect io.out.bits.commits[2], CSR.io.wb.rfData @[build/npc.fir.opt.mlir 2846:7]
    connect io.out.bits.commits[3], MDU.io.wb.rfData @[build/npc.fir.opt.mlir 2847:7]
    connect io.out.bits.commits[4], pad(UInt<1>(0), 32) @[build/npc.fir.opt.mlir 2850:7]
    node _io_out_bits_isMMIO_T = and(LSU.io.out.bits.isMMIO, LSU.io.out.valid) @[build/npc.fir.opt.mlir 2852:32]
    connect io.out.bits.isMMIO, _io_out_bits_isMMIO_T @[build/npc.fir.opt.mlir 2853:7]
    connect io.out.bits.uop, io.in.bits.uop @[build/npc.fir.opt.mlir 2854:7]
    node _isTrap_T = eq(io.out.bits.uop.funcOpType, UInt<5>(12)) @[build/npc.fir.opt.mlir 2857:20]
    node _isTrap_T_1 = eq(io.out.bits.uop.fuType, UInt<3>(0)) @[build/npc.fir.opt.mlir 2860:22]
    node _isTrap_T_2 = and(_isTrap_T, _isTrap_T_1) @[build/npc.fir.opt.mlir 2862:22]
    node isTrap = and(_isTrap_T_2, io.in.valid) @[build/npc.fir.opt.mlir 2864:17]
    connect io_debug_trap_bore, isTrap @[build/npc.fir.opt.mlir 2865:7]
    connect io_debug_trapCode_bore, srcs[0] @[build/npc.fir.opt.mlir 2866:7]

  module WBU : @[build/npc.fir.opt.mlir 2868:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2868:35]
    input reset : Reset @[build/npc.fir.opt.mlir 2868:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, isMMIO : UInt<1>, commits : UInt<32>[5] } }, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> } } @[build/npc.fir.opt.mlir 2868:88]

    node _io_wb_rfWen_T = and(io.in.bits.uop.rfWen, io.in.valid) @[build/npc.fir.opt.mlir 2883:25]
    connect io.wb.rfWen, _io_wb_rfWen_T @[build/npc.fir.opt.mlir 2884:7]
    connect io.wb.rfDest, io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 2885:7]
    connect io.wb.rfData, io.in.bits.commits[io.in.bits.uop.fuType] @[build/npc.fir.opt.mlir 2887:7]
    connect io.in.ready, UInt<1>(1) @[build/npc.fir.opt.mlir 2890:7]

  module RegFile : @[build/npc.fir.opt.mlir 2892:5]
    input clock : Clock @[build/npc.fir.opt.mlir 2892:39]
    input reset : Reset @[build/npc.fir.opt.mlir 2892:65]
    output io : { readPorts : { flip addr : UInt<5>, data : UInt<32> }[2], writePorts : { flip en : UInt<1>, flip addr : UInt<5>, flip data : UInt<32> }[1], out : UInt<32>[16] } @[build/npc.fir.opt.mlir 2892:92]

    mem regs : @[build/npc.fir.opt.mlir 2912:334]
      data-type => UInt<32>
      depth => 32
      read-latency => 0
      write-latency => 1
      reader => MPORT_1
      reader => MPORT_10
      reader => MPORT_11
      reader => MPORT_12
      reader => MPORT_13
      reader => MPORT_14
      reader => MPORT_15
      reader => MPORT_16
      reader => MPORT_2
      reader => MPORT_3
      reader => MPORT_4
      reader => MPORT_5
      reader => MPORT_6
      reader => MPORT_7
      reader => MPORT_8
      reader => MPORT_9
      reader => io_readPorts_0_data_MPORT
      reader => io_readPorts_1_data_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate regs.MPORT.addr @[build/npc.fir.opt.mlir 2914:7]
    connect regs.MPORT.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2916:7]
    invalidate regs.MPORT.clk @[build/npc.fir.opt.mlir 2918:7]
    invalidate regs.MPORT.data @[build/npc.fir.opt.mlir 2920:7]
    invalidate regs.MPORT.mask @[build/npc.fir.opt.mlir 2922:7]
    invalidate regs.MPORT_1.addr @[build/npc.fir.opt.mlir 2924:7]
    connect regs.MPORT_1.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2926:7]
    invalidate regs.MPORT_1.clk @[build/npc.fir.opt.mlir 2928:7]
    invalidate regs.MPORT_10.addr @[build/npc.fir.opt.mlir 2931:7]
    connect regs.MPORT_10.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2933:7]
    invalidate regs.MPORT_10.clk @[build/npc.fir.opt.mlir 2935:7]
    invalidate regs.MPORT_11.addr @[build/npc.fir.opt.mlir 2938:7]
    connect regs.MPORT_11.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2940:7]
    invalidate regs.MPORT_11.clk @[build/npc.fir.opt.mlir 2942:7]
    invalidate regs.MPORT_12.addr @[build/npc.fir.opt.mlir 2945:7]
    connect regs.MPORT_12.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2947:7]
    invalidate regs.MPORT_12.clk @[build/npc.fir.opt.mlir 2949:7]
    invalidate regs.MPORT_13.addr @[build/npc.fir.opt.mlir 2952:7]
    connect regs.MPORT_13.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2954:7]
    invalidate regs.MPORT_13.clk @[build/npc.fir.opt.mlir 2956:7]
    invalidate regs.MPORT_14.addr @[build/npc.fir.opt.mlir 2959:7]
    connect regs.MPORT_14.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2961:7]
    invalidate regs.MPORT_14.clk @[build/npc.fir.opt.mlir 2963:7]
    invalidate regs.MPORT_15.addr @[build/npc.fir.opt.mlir 2966:7]
    connect regs.MPORT_15.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2968:7]
    invalidate regs.MPORT_15.clk @[build/npc.fir.opt.mlir 2970:7]
    invalidate regs.MPORT_16.addr @[build/npc.fir.opt.mlir 2973:7]
    connect regs.MPORT_16.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2975:7]
    invalidate regs.MPORT_16.clk @[build/npc.fir.opt.mlir 2977:7]
    invalidate regs.MPORT_2.addr @[build/npc.fir.opt.mlir 2980:7]
    connect regs.MPORT_2.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2982:7]
    invalidate regs.MPORT_2.clk @[build/npc.fir.opt.mlir 2984:7]
    invalidate regs.MPORT_3.addr @[build/npc.fir.opt.mlir 2987:7]
    connect regs.MPORT_3.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2989:7]
    invalidate regs.MPORT_3.clk @[build/npc.fir.opt.mlir 2991:7]
    invalidate regs.MPORT_4.addr @[build/npc.fir.opt.mlir 2994:7]
    connect regs.MPORT_4.en, UInt<1>(0) @[build/npc.fir.opt.mlir 2996:7]
    invalidate regs.MPORT_4.clk @[build/npc.fir.opt.mlir 2998:7]
    invalidate regs.MPORT_5.addr @[build/npc.fir.opt.mlir 3001:7]
    connect regs.MPORT_5.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3003:7]
    invalidate regs.MPORT_5.clk @[build/npc.fir.opt.mlir 3005:7]
    invalidate regs.MPORT_6.addr @[build/npc.fir.opt.mlir 3008:7]
    connect regs.MPORT_6.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3010:7]
    invalidate regs.MPORT_6.clk @[build/npc.fir.opt.mlir 3012:7]
    invalidate regs.MPORT_7.addr @[build/npc.fir.opt.mlir 3015:7]
    connect regs.MPORT_7.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3017:7]
    invalidate regs.MPORT_7.clk @[build/npc.fir.opt.mlir 3019:7]
    invalidate regs.MPORT_8.addr @[build/npc.fir.opt.mlir 3022:7]
    connect regs.MPORT_8.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3024:7]
    invalidate regs.MPORT_8.clk @[build/npc.fir.opt.mlir 3026:7]
    invalidate regs.MPORT_9.addr @[build/npc.fir.opt.mlir 3029:7]
    connect regs.MPORT_9.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3031:7]
    invalidate regs.MPORT_9.clk @[build/npc.fir.opt.mlir 3033:7]
    invalidate regs.io_readPorts_0_data_MPORT.addr @[build/npc.fir.opt.mlir 3036:7]
    connect regs.io_readPorts_0_data_MPORT.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3038:7]
    invalidate regs.io_readPorts_0_data_MPORT.clk @[build/npc.fir.opt.mlir 3040:7]
    invalidate regs.io_readPorts_1_data_MPORT.addr @[build/npc.fir.opt.mlir 3043:7]
    connect regs.io_readPorts_1_data_MPORT.en, UInt<1>(0) @[build/npc.fir.opt.mlir 3045:7]
    invalidate regs.io_readPorts_1_data_MPORT.clk @[build/npc.fir.opt.mlir 3047:7]
    node _io_readPorts_0_data_T = eq(io.readPorts[0].addr, UInt<1>(0)) @[build/npc.fir.opt.mlir 3051:33]
    connect regs.io_readPorts_0_data_MPORT.addr, io.readPorts[0].addr @[build/npc.fir.opt.mlir 3052:7]
    connect regs.io_readPorts_0_data_MPORT.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3053:7]
    connect regs.io_readPorts_0_data_MPORT.clk, clock @[build/npc.fir.opt.mlir 3054:7]
    node _io_readPorts_0_data_T_1 = mux(_io_readPorts_0_data_T, UInt<1>(0), regs.io_readPorts_0_data_MPORT.data) @[build/npc.fir.opt.mlir 3056:35]
    connect io.readPorts[0].data, _io_readPorts_0_data_T_1 @[build/npc.fir.opt.mlir 3057:7]
    node _io_readPorts_1_data_T = eq(io.readPorts[1].addr, UInt<1>(0)) @[build/npc.fir.opt.mlir 3059:33]
    connect regs.io_readPorts_1_data_MPORT.addr, io.readPorts[1].addr @[build/npc.fir.opt.mlir 3060:7]
    connect regs.io_readPorts_1_data_MPORT.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3061:7]
    connect regs.io_readPorts_1_data_MPORT.clk, clock @[build/npc.fir.opt.mlir 3062:7]
    node _io_readPorts_1_data_T_1 = mux(_io_readPorts_1_data_T, UInt<1>(0), regs.io_readPorts_1_data_MPORT.data) @[build/npc.fir.opt.mlir 3064:35]
    connect io.readPorts[1].data, _io_readPorts_1_data_T_1 @[build/npc.fir.opt.mlir 3065:7]
    node _T = neq(io.writePorts[0].addr, UInt<1>(0)) @[build/npc.fir.opt.mlir 3067:13]
    node _T_1 = and(io.writePorts[0].en, _T) @[build/npc.fir.opt.mlir 3069:15]
    when _T_1 : @[build/npc.fir.opt.mlir 3070:7]
      connect regs.MPORT.addr, io.writePorts[0].addr @[build/npc.fir.opt.mlir 3071:9]
      connect regs.MPORT.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3072:9]
      connect regs.MPORT.clk, clock @[build/npc.fir.opt.mlir 3073:9]
      connect regs.MPORT.mask, UInt<1>(0) @[build/npc.fir.opt.mlir 3074:9]
      connect regs.MPORT.mask, UInt<1>(1) @[build/npc.fir.opt.mlir 3075:9]
      connect regs.MPORT.data, io.writePorts[0].data @[build/npc.fir.opt.mlir 3076:9]
    connect regs.MPORT_1.addr, pad(UInt<1>(0), 5) @[build/npc.fir.opt.mlir 3080:7]
    connect regs.MPORT_1.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3081:7]
    connect regs.MPORT_1.clk, clock @[build/npc.fir.opt.mlir 3082:7]
    connect regs.MPORT_2.addr, pad(UInt<1>(1), 5) @[build/npc.fir.opt.mlir 3086:7]
    connect regs.MPORT_2.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3087:7]
    connect regs.MPORT_2.clk, clock @[build/npc.fir.opt.mlir 3088:7]
    connect regs.MPORT_3.addr, pad(UInt<2>(2), 5) @[build/npc.fir.opt.mlir 3092:7]
    connect regs.MPORT_3.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3093:7]
    connect regs.MPORT_3.clk, clock @[build/npc.fir.opt.mlir 3094:7]
    connect regs.MPORT_4.addr, pad(UInt<2>(3), 5) @[build/npc.fir.opt.mlir 3098:7]
    connect regs.MPORT_4.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3099:7]
    connect regs.MPORT_4.clk, clock @[build/npc.fir.opt.mlir 3100:7]
    connect regs.MPORT_5.addr, pad(UInt<3>(4), 5) @[build/npc.fir.opt.mlir 3104:7]
    connect regs.MPORT_5.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3105:7]
    connect regs.MPORT_5.clk, clock @[build/npc.fir.opt.mlir 3106:7]
    connect regs.MPORT_6.addr, pad(UInt<3>(5), 5) @[build/npc.fir.opt.mlir 3110:7]
    connect regs.MPORT_6.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3111:7]
    connect regs.MPORT_6.clk, clock @[build/npc.fir.opt.mlir 3112:7]
    connect regs.MPORT_7.addr, pad(UInt<3>(6), 5) @[build/npc.fir.opt.mlir 3116:7]
    connect regs.MPORT_7.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3117:7]
    connect regs.MPORT_7.clk, clock @[build/npc.fir.opt.mlir 3118:7]
    connect regs.MPORT_8.addr, pad(UInt<3>(7), 5) @[build/npc.fir.opt.mlir 3122:7]
    connect regs.MPORT_8.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3123:7]
    connect regs.MPORT_8.clk, clock @[build/npc.fir.opt.mlir 3124:7]
    connect regs.MPORT_9.addr, pad(UInt<4>(8), 5) @[build/npc.fir.opt.mlir 3128:7]
    connect regs.MPORT_9.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3129:7]
    connect regs.MPORT_9.clk, clock @[build/npc.fir.opt.mlir 3130:7]
    connect regs.MPORT_10.addr, pad(UInt<4>(9), 5) @[build/npc.fir.opt.mlir 3134:7]
    connect regs.MPORT_10.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3135:7]
    connect regs.MPORT_10.clk, clock @[build/npc.fir.opt.mlir 3136:7]
    connect regs.MPORT_11.addr, pad(UInt<4>(10), 5) @[build/npc.fir.opt.mlir 3140:7]
    connect regs.MPORT_11.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3141:7]
    connect regs.MPORT_11.clk, clock @[build/npc.fir.opt.mlir 3142:7]
    connect regs.MPORT_12.addr, pad(UInt<4>(11), 5) @[build/npc.fir.opt.mlir 3146:7]
    connect regs.MPORT_12.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3147:7]
    connect regs.MPORT_12.clk, clock @[build/npc.fir.opt.mlir 3148:7]
    connect regs.MPORT_13.addr, pad(UInt<4>(12), 5) @[build/npc.fir.opt.mlir 3152:7]
    connect regs.MPORT_13.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3153:7]
    connect regs.MPORT_13.clk, clock @[build/npc.fir.opt.mlir 3154:7]
    connect regs.MPORT_14.addr, pad(UInt<4>(13), 5) @[build/npc.fir.opt.mlir 3158:7]
    connect regs.MPORT_14.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3159:7]
    connect regs.MPORT_14.clk, clock @[build/npc.fir.opt.mlir 3160:7]
    connect regs.MPORT_15.addr, pad(UInt<4>(14), 5) @[build/npc.fir.opt.mlir 3164:7]
    connect regs.MPORT_15.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3165:7]
    connect regs.MPORT_15.clk, clock @[build/npc.fir.opt.mlir 3166:7]
    connect regs.MPORT_16.addr, pad(UInt<4>(15), 5) @[build/npc.fir.opt.mlir 3170:7]
    connect regs.MPORT_16.en, UInt<1>(1) @[build/npc.fir.opt.mlir 3171:7]
    connect regs.MPORT_16.clk, clock @[build/npc.fir.opt.mlir 3172:7]
    wire _WIRE : UInt<32>[16] @[build/npc.fir.opt.mlir 3173:16]
    connect _WIRE[0], regs.MPORT_1.data @[build/npc.fir.opt.mlir 3190:7]
    connect _WIRE[1], regs.MPORT_2.data @[build/npc.fir.opt.mlir 3191:7]
    connect _WIRE[2], regs.MPORT_3.data @[build/npc.fir.opt.mlir 3192:7]
    connect _WIRE[3], regs.MPORT_4.data @[build/npc.fir.opt.mlir 3193:7]
    connect _WIRE[4], regs.MPORT_5.data @[build/npc.fir.opt.mlir 3194:7]
    connect _WIRE[5], regs.MPORT_6.data @[build/npc.fir.opt.mlir 3195:7]
    connect _WIRE[6], regs.MPORT_7.data @[build/npc.fir.opt.mlir 3196:7]
    connect _WIRE[7], regs.MPORT_8.data @[build/npc.fir.opt.mlir 3197:7]
    connect _WIRE[8], regs.MPORT_9.data @[build/npc.fir.opt.mlir 3198:7]
    connect _WIRE[9], regs.MPORT_10.data @[build/npc.fir.opt.mlir 3199:7]
    connect _WIRE[10], regs.MPORT_11.data @[build/npc.fir.opt.mlir 3200:7]
    connect _WIRE[11], regs.MPORT_12.data @[build/npc.fir.opt.mlir 3201:7]
    connect _WIRE[12], regs.MPORT_13.data @[build/npc.fir.opt.mlir 3202:7]
    connect _WIRE[13], regs.MPORT_14.data @[build/npc.fir.opt.mlir 3203:7]
    connect _WIRE[14], regs.MPORT_15.data @[build/npc.fir.opt.mlir 3204:7]
    connect _WIRE[15], regs.MPORT_16.data @[build/npc.fir.opt.mlir 3205:7]
    connect io.out, _WIRE @[build/npc.fir.opt.mlir 3206:7]

  module ISU : @[build/npc.fir.opt.mlir 3208:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3208:35]
    input reset : Reset @[build/npc.fir.opt.mlir 3208:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, srcs : UInt<32>[2], isForward : UInt<1>[2] } }, flip flush : UInt<1>, flip wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<32> }, flip bypass : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } } } @[build/npc.fir.opt.mlir 3208:88]

    inst rf of RegFile @[build/npc.fir.opt.mlir 3241:38]
    connect rf.clock, clock @[build/npc.fir.opt.mlir 3254:7]
    connect rf.reset, reset @[build/npc.fir.opt.mlir 3255:7]
    regreset busy : UInt<32>, clock, reset, UInt<32>(0) @[build/npc.fir.opt.mlir 3257:15]
    connect rf.io.readPorts[0].addr, io.in.bits.rfSrc[0] @[build/npc.fir.opt.mlir 3258:7]
    connect rf.io.readPorts[1].addr, io.in.bits.rfSrc[1] @[build/npc.fir.opt.mlir 3259:7]
    connect rf.io.writePorts[0].en, io.wb.rfWen @[build/npc.fir.opt.mlir 3260:7]
    connect rf.io.writePorts[0].addr, io.wb.rfDest @[build/npc.fir.opt.mlir 3261:7]
    connect rf.io.writePorts[0].data, io.wb.rfData @[build/npc.fir.opt.mlir 3262:7]
    node _allowForward_T = eq(io.bypass.uop.fuType, UInt<3>(0)) @[build/npc.fir.opt.mlir 3265:26]
    node _allowForward_T_1 = eq(io.bypass.uop.fuType, UInt<3>(1)) @[build/npc.fir.opt.mlir 3268:28]
    node allowForward = or(_allowForward_T, _allowForward_T_1) @[build/npc.fir.opt.mlir 3270:23]
    node _src1Depend_T = neq(io.in.bits.rfSrc[0], UInt<1>(0)) @[build/npc.fir.opt.mlir 3273:24]
    node _src1Depend_T_1 = eq(io.in.bits.rfSrc[0], io.bypass.uop.rfDest) @[build/npc.fir.opt.mlir 3275:26]
    node _src1Depend_T_2 = and(_src1Depend_T, _src1Depend_T_1) @[build/npc.fir.opt.mlir 3277:26]
    node _src1Depend_T_3 = and(_src1Depend_T_2, io.bypass.uop.rfWen) @[build/npc.fir.opt.mlir 3279:26]
    node src1Depend = and(allowForward, _src1Depend_T_3) @[build/npc.fir.opt.mlir 3281:21]
    node _src2Depend_T = neq(io.in.bits.rfSrc[1], UInt<1>(0)) @[build/npc.fir.opt.mlir 3283:24]
    node _src2Depend_T_1 = eq(io.in.bits.rfSrc[1], io.bypass.uop.rfDest) @[build/npc.fir.opt.mlir 3285:26]
    node _src2Depend_T_2 = and(_src2Depend_T, _src2Depend_T_1) @[build/npc.fir.opt.mlir 3287:26]
    node _src2Depend_T_3 = and(_src2Depend_T_2, io.bypass.uop.rfWen) @[build/npc.fir.opt.mlir 3289:26]
    node src2Depend = and(allowForward, _src2Depend_T_3) @[build/npc.fir.opt.mlir 3291:21]
    node _src1DependWB_T = neq(io.in.bits.rfSrc[0], UInt<1>(0)) @[build/npc.fir.opt.mlir 3293:26]
    node _src1DependWB_T_1 = eq(io.in.bits.rfSrc[0], io.wb.rfDest) @[build/npc.fir.opt.mlir 3295:28]
    node _src1DependWB_T_2 = and(_src1DependWB_T, _src1DependWB_T_1) @[build/npc.fir.opt.mlir 3297:28]
    node _src1DependWB_T_3 = and(_src1DependWB_T_2, io.wb.rfWen) @[build/npc.fir.opt.mlir 3299:28]
    node src1DependWB = and(allowForward, _src1DependWB_T_3) @[build/npc.fir.opt.mlir 3301:23]
    node _src2DependWB_T = neq(io.in.bits.rfSrc[1], UInt<1>(0)) @[build/npc.fir.opt.mlir 3303:26]
    node _src2DependWB_T_1 = eq(io.in.bits.rfSrc[1], io.wb.rfDest) @[build/npc.fir.opt.mlir 3305:28]
    node _src2DependWB_T_2 = and(_src2DependWB_T, _src2DependWB_T_1) @[build/npc.fir.opt.mlir 3307:28]
    node _src2DependWB_T_3 = and(_src2DependWB_T_2, io.wb.rfWen) @[build/npc.fir.opt.mlir 3309:28]
    node src2DependWB = and(allowForward, _src2DependWB_T_3) @[build/npc.fir.opt.mlir 3311:23]
    node _src1Busy_T = dshr(busy, io.in.bits.rfSrc[0]) @[build/npc.fir.opt.mlir 3313:22]
    node src1Busy = bits(_src1Busy_T, 0, 0) @[build/npc.fir.opt.mlir 3315:19]
    node _src2Busy_T = dshr(busy, io.in.bits.rfSrc[1]) @[build/npc.fir.opt.mlir 3317:22]
    node src2Busy = bits(_src2Busy_T, 0, 0) @[build/npc.fir.opt.mlir 3319:19]
    node _src1Ready_T = eq(io.in.bits.srcType[0], UInt<2>(0)) @[build/npc.fir.opt.mlir 3322:23]
    node _src1Ready_T_1 = eq(src1Busy, UInt<1>(0)) @[build/npc.fir.opt.mlir 3324:25]
    node _src1Ready_T_2 = or(_src1Ready_T_1, src1DependWB) @[build/npc.fir.opt.mlir 3326:25]
    node _src1Ready_T_3 = or(_src1Ready_T_2, src1Depend) @[build/npc.fir.opt.mlir 3328:25]
    node src1Ready = mux(_src1Ready_T, _src1Ready_T_3, UInt<1>(1)) @[build/npc.fir.opt.mlir 3331:20]
    node _src2Ready_T = eq(io.in.bits.srcType[1], UInt<2>(0)) @[build/npc.fir.opt.mlir 3333:23]
    node _src2Ready_T_1 = eq(src2Busy, UInt<1>(0)) @[build/npc.fir.opt.mlir 3335:25]
    node _src2Ready_T_2 = or(_src2Ready_T_1, src2DependWB) @[build/npc.fir.opt.mlir 3337:25]
    node _src2Ready_T_3 = or(_src2Ready_T_2, src2Depend) @[build/npc.fir.opt.mlir 3339:25]
    node src2Ready = mux(_src2Ready_T, _src2Ready_T_3, UInt<1>(1)) @[build/npc.fir.opt.mlir 3341:20]
    node _wbClearMask_T = dshl(UInt<32>(1), io.wb.rfDest) @[build/npc.fir.opt.mlir 3344:25]
    node _wbClearMask_T_1 = bits(_wbClearMask_T, 31, 0) @[build/npc.fir.opt.mlir 3346:27]
    node wbClearMask = mux(io.wb.rfWen, _wbClearMask_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 3348:22]
    node _fireSetMask_T = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 3350:25]
    node _fireSetMask_T_1 = dshl(UInt<32>(1), io.in.bits.rfDest) @[build/npc.fir.opt.mlir 3352:27]
    node _fireSetMask_T_2 = bits(_fireSetMask_T_1, 31, 0) @[build/npc.fir.opt.mlir 3354:27]
    node fireSetMask = mux(_fireSetMask_T, _fireSetMask_T_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 3356:22]
    when io.flush : @[build/npc.fir.opt.mlir 3358:7]
      node _T = mux(UInt<1>(1), UInt<32>(4294967295), UInt<32>(0)) @[build/npc.fir.opt.mlir 3360:15]
      node _busy_T = not(_T) @[build/npc.fir.opt.mlir 3362:20]
      node _busy_T_1 = and(busy, _busy_T) @[build/npc.fir.opt.mlir 3364:22]
      node _busy_T_2 = or(_busy_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 3366:22]
      node _busy_T_3 = bits(_busy_T_2, 31, 1) @[build/npc.fir.opt.mlir 3368:22]
      node _busy_T_4 = cat(_busy_T_3, UInt<1>(0)) @[build/npc.fir.opt.mlir 3370:22]
      connect busy, _busy_T_4 @[build/npc.fir.opt.mlir 3371:9]
    else :
      node _busy_T_5 = not(wbClearMask) @[build/npc.fir.opt.mlir 3374:22]
      node _busy_T_6 = and(busy, _busy_T_5) @[build/npc.fir.opt.mlir 3376:22]
      node _busy_T_7 = or(_busy_T_6, fireSetMask) @[build/npc.fir.opt.mlir 3378:22]
      node _busy_T_8 = bits(_busy_T_7, 31, 1) @[build/npc.fir.opt.mlir 3380:22]
      node _busy_T_9 = cat(_busy_T_8, UInt<1>(0)) @[build/npc.fir.opt.mlir 3382:22]
      connect busy, _busy_T_9 @[build/npc.fir.opt.mlir 3383:9]
    connect io.out.bits.uop, io.in.bits @[build/npc.fir.opt.mlir 3385:7]
    node _io_out_bits_srcs_0_T = eq(src1Depend, UInt<1>(0)) @[build/npc.fir.opt.mlir 3387:32]
    node _io_out_bits_srcs_0_T_1 = and(src1DependWB, _io_out_bits_srcs_0_T) @[build/npc.fir.opt.mlir 3389:34]
    node _io_out_bits_srcs_0_T_2 = mux(_io_out_bits_srcs_0_T_1, io.wb.rfData, rf.io.readPorts[0].data) @[build/npc.fir.opt.mlir 3391:34]
    connect io.out.bits.srcs[0], _io_out_bits_srcs_0_T_2 @[build/npc.fir.opt.mlir 3392:7]
    node _io_out_bits_srcs_1_T = eq(src2Depend, UInt<1>(0)) @[build/npc.fir.opt.mlir 3394:32]
    node _io_out_bits_srcs_1_T_1 = and(src2DependWB, _io_out_bits_srcs_1_T) @[build/npc.fir.opt.mlir 3396:34]
    node _io_out_bits_srcs_1_T_2 = mux(_io_out_bits_srcs_1_T_1, io.wb.rfData, rf.io.readPorts[1].data) @[build/npc.fir.opt.mlir 3398:34]
    connect io.out.bits.srcs[1], _io_out_bits_srcs_1_T_2 @[build/npc.fir.opt.mlir 3399:7]
    connect io.out.bits.isForward[0], src1Depend @[build/npc.fir.opt.mlir 3400:7]
    connect io.out.bits.isForward[1], src2Depend @[build/npc.fir.opt.mlir 3401:7]
    node _io_out_valid_T = and(io.in.valid, src1Ready) @[build/npc.fir.opt.mlir 3403:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, src2Ready) @[build/npc.fir.opt.mlir 3405:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/npc.fir.opt.mlir 3406:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 3408:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/npc.fir.opt.mlir 3410:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/npc.fir.opt.mlir 3412:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/npc.fir.opt.mlir 3413:7]
    node _Stall_T = eq(src1Ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 3415:19]
    node _Stall_T_1 = eq(src2Ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 3417:21]
    node _Stall_T_2 = or(_Stall_T, _Stall_T_1) @[build/npc.fir.opt.mlir 3419:21]
    node _Stall_T_3 = and(io.in.valid, _Stall_T_2) @[build/npc.fir.opt.mlir 3421:21]
    node Stall = and(_Stall_T_3, io.out.ready) @[build/npc.fir.opt.mlir 3423:16]

  module Backend : @[build/npc.fir.opt.mlir 3425:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3425:39]
    input reset : Reset @[build/npc.fir.opt.mlir 3425:65]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> } }, flush : { valid : UInt<1>, target : UInt<32>, brType : UInt<1> }[2], dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } } } @[build/npc.fir.opt.mlir 3425:92]
    output io_debug_trap_bore : UInt<1> @[build/npc.fir.opt.mlir 3425:692]
    output io_debug_trapCode_bore : UInt<32> @[build/npc.fir.opt.mlir 3425:734]
    output io_debug_commit_valid_bore : UInt<1> @[build/npc.fir.opt.mlir 3425:781]
    output io_debug_commit_pc_bore : UInt<32> @[build/npc.fir.opt.mlir 3425:831]
    output io_debug_commit_instr_bore : UInt<32> @[build/npc.fir.opt.mlir 3425:879]

    inst EXU of EXU @[build/npc.fir.opt.mlir 3443:95]
    connect EXU.clock, clock @[build/npc.fir.opt.mlir 3481:7]
    connect EXU.reset, reset @[build/npc.fir.opt.mlir 3482:7]
    inst WBU of WBU @[build/npc.fir.opt.mlir 3483:41]
    connect WBU.clock, clock @[build/npc.fir.opt.mlir 3511:7]
    connect WBU.reset, reset @[build/npc.fir.opt.mlir 3512:7]
    inst ISU of ISU @[build/npc.fir.opt.mlir 3513:41]
    connect ISU.clock, clock @[build/npc.fir.opt.mlir 3554:7]
    connect ISU.reset, reset @[build/npc.fir.opt.mlir 3555:7]
    node _flush_T = and(io.flush[0].valid, io.flush[0].brType) @[build/npc.fir.opt.mlir 3557:19]
    node _flush_T_1 = and(io.flush[1].valid, io.flush[1].brType) @[build/npc.fir.opt.mlir 3559:21]
    node flush = or(_flush_T, _flush_T_1) @[build/npc.fir.opt.mlir 3561:16]
    node _T = and(ISU.io.out.ready, ISU.io.out.valid) @[build/npc.fir.opt.mlir 3563:13]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 3565:16]
    when _T : @[build/npc.fir.opt.mlir 3566:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 3568:9]
    node _T_1 = and(io.in.valid, ISU.io.in.ready) @[build/npc.fir.opt.mlir 3571:15]
    when _T_1 : @[build/npc.fir.opt.mlir 3573:7]
      connect valid, UInt<1>(1) @[build/npc.fir.opt.mlir 3575:9]
    when flush : @[build/npc.fir.opt.mlir 3577:7]
      connect valid, UInt<1>(0) @[build/npc.fir.opt.mlir 3579:9]
    connect io.in.ready, ISU.io.in.ready @[build/npc.fir.opt.mlir 3581:7]
    node _ISU_io_in_bits_T = and(io.in.valid, ISU.io.in.ready) @[build/npc.fir.opt.mlir 3583:28]
    reg ISU_io_in_bits_r : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, clock @[build/npc.fir.opt.mlir 3584:27]
    when _ISU_io_in_bits_T : @[build/npc.fir.opt.mlir 3599:7]
      connect ISU_io_in_bits_r, io.in.bits @[build/npc.fir.opt.mlir 3600:9]
    connect ISU.io.in.bits.id, ISU_io_in_bits_r.id @[build/npc.fir.opt.mlir 3602:7]
    connect ISU.io.in.bits.instr, ISU_io_in_bits_r.instr @[build/npc.fir.opt.mlir 3603:7]
    connect ISU.io.in.bits.srcType[0], ISU_io_in_bits_r.srcType[0] @[build/npc.fir.opt.mlir 3604:7]
    connect ISU.io.in.bits.srcType[1], ISU_io_in_bits_r.srcType[1] @[build/npc.fir.opt.mlir 3605:7]
    connect ISU.io.in.bits.fuType, ISU_io_in_bits_r.fuType @[build/npc.fir.opt.mlir 3606:7]
    connect ISU.io.in.bits.funcOpType, ISU_io_in_bits_r.funcOpType @[build/npc.fir.opt.mlir 3607:7]
    connect ISU.io.in.bits.imm, ISU_io_in_bits_r.imm @[build/npc.fir.opt.mlir 3608:7]
    connect ISU.io.in.bits.rfSrc[0], ISU_io_in_bits_r.rfSrc[0] @[build/npc.fir.opt.mlir 3609:7]
    connect ISU.io.in.bits.rfSrc[1], ISU_io_in_bits_r.rfSrc[1] @[build/npc.fir.opt.mlir 3610:7]
    connect ISU.io.in.bits.rfDest, ISU_io_in_bits_r.rfDest @[build/npc.fir.opt.mlir 3611:7]
    connect ISU.io.in.bits.rfWen, ISU_io_in_bits_r.rfWen @[build/npc.fir.opt.mlir 3612:7]
    connect ISU.io.in.bits.pc, ISU_io_in_bits_r.pc @[build/npc.fir.opt.mlir 3613:7]
    connect ISU.io.in.valid, valid @[build/npc.fir.opt.mlir 3614:7]
    node _T_2 = and(EXU.io.out.ready, EXU.io.out.valid) @[build/npc.fir.opt.mlir 3616:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 3617:18]
    when _T_2 : @[build/npc.fir.opt.mlir 3618:7]
      connect valid_1, UInt<1>(0) @[build/npc.fir.opt.mlir 3620:9]
    node _T_3 = and(ISU.io.out.valid, EXU.io.in.ready) @[build/npc.fir.opt.mlir 3623:15]
    when _T_3 : @[build/npc.fir.opt.mlir 3624:7]
      connect valid_1, UInt<1>(1) @[build/npc.fir.opt.mlir 3626:9]
    when flush : @[build/npc.fir.opt.mlir 3628:7]
      connect valid_1, UInt<1>(0) @[build/npc.fir.opt.mlir 3630:9]
    connect ISU.io.out.ready, EXU.io.in.ready @[build/npc.fir.opt.mlir 3632:7]
    node _EXU_io_in_bits_T = and(ISU.io.out.valid, EXU.io.in.ready) @[build/npc.fir.opt.mlir 3634:28]
    reg EXU_io_in_bits_r : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, srcs : UInt<32>[2], isForward : UInt<1>[2] }, clock @[build/npc.fir.opt.mlir 3635:27]
    when _EXU_io_in_bits_T : @[build/npc.fir.opt.mlir 3657:7]
      connect EXU_io_in_bits_r, ISU.io.out.bits @[build/npc.fir.opt.mlir 3658:9]
    connect EXU.io.in.bits.isForward[0], EXU_io_in_bits_r.isForward[0] @[build/npc.fir.opt.mlir 3660:7]
    connect EXU.io.in.bits.isForward[1], EXU_io_in_bits_r.isForward[1] @[build/npc.fir.opt.mlir 3661:7]
    connect EXU.io.in.bits.srcs[0], EXU_io_in_bits_r.srcs[0] @[build/npc.fir.opt.mlir 3662:7]
    connect EXU.io.in.bits.srcs[1], EXU_io_in_bits_r.srcs[1] @[build/npc.fir.opt.mlir 3663:7]
    connect EXU.io.in.bits.uop.id, EXU_io_in_bits_r.uop.id @[build/npc.fir.opt.mlir 3664:7]
    connect EXU.io.in.bits.uop.instr, EXU_io_in_bits_r.uop.instr @[build/npc.fir.opt.mlir 3665:7]
    connect EXU.io.in.bits.uop.srcType[0], EXU_io_in_bits_r.uop.srcType[0] @[build/npc.fir.opt.mlir 3666:7]
    connect EXU.io.in.bits.uop.srcType[1], EXU_io_in_bits_r.uop.srcType[1] @[build/npc.fir.opt.mlir 3667:7]
    connect EXU.io.in.bits.uop.fuType, EXU_io_in_bits_r.uop.fuType @[build/npc.fir.opt.mlir 3668:7]
    connect EXU.io.in.bits.uop.funcOpType, EXU_io_in_bits_r.uop.funcOpType @[build/npc.fir.opt.mlir 3669:7]
    connect EXU.io.in.bits.uop.imm, EXU_io_in_bits_r.uop.imm @[build/npc.fir.opt.mlir 3670:7]
    connect EXU.io.in.bits.uop.rfSrc[0], EXU_io_in_bits_r.uop.rfSrc[0] @[build/npc.fir.opt.mlir 3671:7]
    connect EXU.io.in.bits.uop.rfSrc[1], EXU_io_in_bits_r.uop.rfSrc[1] @[build/npc.fir.opt.mlir 3672:7]
    connect EXU.io.in.bits.uop.rfDest, EXU_io_in_bits_r.uop.rfDest @[build/npc.fir.opt.mlir 3673:7]
    connect EXU.io.in.bits.uop.rfWen, EXU_io_in_bits_r.uop.rfWen @[build/npc.fir.opt.mlir 3674:7]
    connect EXU.io.in.bits.uop.pc, EXU_io_in_bits_r.uop.pc @[build/npc.fir.opt.mlir 3675:7]
    connect EXU.io.in.valid, valid_1 @[build/npc.fir.opt.mlir 3676:7]
    regreset valid_2 : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 3677:18]
    when UInt<1>(1) : @[build/npc.fir.opt.mlir 3678:7]
      connect valid_2, UInt<1>(0) @[build/npc.fir.opt.mlir 3680:9]
    node _T_4 = and(EXU.io.out.valid, WBU.io.in.ready) @[build/npc.fir.opt.mlir 3683:15]
    when _T_4 : @[build/npc.fir.opt.mlir 3684:7]
      connect valid_2, UInt<1>(1) @[build/npc.fir.opt.mlir 3686:9]
    when UInt<1>(0) : @[build/npc.fir.opt.mlir 3688:7]
      connect valid_2, UInt<1>(0) @[build/npc.fir.opt.mlir 3690:9]
    connect EXU.io.out.ready, WBU.io.in.ready @[build/npc.fir.opt.mlir 3692:7]
    node _WBU_io_in_bits_T = and(EXU.io.out.valid, WBU.io.in.ready) @[build/npc.fir.opt.mlir 3694:28]
    reg WBU_io_in_bits_r : { uop : { pc : UInt<32>, rfWen : UInt<1>, rfDest : UInt<5>, rfSrc : UInt<5>[2], imm : UInt<32>, funcOpType : UInt<5>, fuType : UInt<3>, srcType : UInt<2>[2], instr : UInt<32>, id : UInt<32> }, isMMIO : UInt<1>, commits : UInt<32>[5] }, clock @[build/npc.fir.opt.mlir 3695:27]
    when _WBU_io_in_bits_T : @[build/npc.fir.opt.mlir 3718:7]
      connect WBU_io_in_bits_r, EXU.io.out.bits @[build/npc.fir.opt.mlir 3719:9]
    connect WBU.io.in.bits.commits[0], WBU_io_in_bits_r.commits[0] @[build/npc.fir.opt.mlir 3721:7]
    connect WBU.io.in.bits.commits[1], WBU_io_in_bits_r.commits[1] @[build/npc.fir.opt.mlir 3722:7]
    connect WBU.io.in.bits.commits[2], WBU_io_in_bits_r.commits[2] @[build/npc.fir.opt.mlir 3723:7]
    connect WBU.io.in.bits.commits[3], WBU_io_in_bits_r.commits[3] @[build/npc.fir.opt.mlir 3724:7]
    connect WBU.io.in.bits.commits[4], WBU_io_in_bits_r.commits[4] @[build/npc.fir.opt.mlir 3725:7]
    connect WBU.io.in.bits.isMMIO, WBU_io_in_bits_r.isMMIO @[build/npc.fir.opt.mlir 3726:7]
    connect WBU.io.in.bits.uop.id, WBU_io_in_bits_r.uop.id @[build/npc.fir.opt.mlir 3727:7]
    connect WBU.io.in.bits.uop.instr, WBU_io_in_bits_r.uop.instr @[build/npc.fir.opt.mlir 3728:7]
    connect WBU.io.in.bits.uop.srcType[0], WBU_io_in_bits_r.uop.srcType[0] @[build/npc.fir.opt.mlir 3729:7]
    connect WBU.io.in.bits.uop.srcType[1], WBU_io_in_bits_r.uop.srcType[1] @[build/npc.fir.opt.mlir 3730:7]
    connect WBU.io.in.bits.uop.fuType, WBU_io_in_bits_r.uop.fuType @[build/npc.fir.opt.mlir 3731:7]
    connect WBU.io.in.bits.uop.funcOpType, WBU_io_in_bits_r.uop.funcOpType @[build/npc.fir.opt.mlir 3732:7]
    connect WBU.io.in.bits.uop.imm, WBU_io_in_bits_r.uop.imm @[build/npc.fir.opt.mlir 3733:7]
    connect WBU.io.in.bits.uop.rfSrc[0], WBU_io_in_bits_r.uop.rfSrc[0] @[build/npc.fir.opt.mlir 3734:7]
    connect WBU.io.in.bits.uop.rfSrc[1], WBU_io_in_bits_r.uop.rfSrc[1] @[build/npc.fir.opt.mlir 3735:7]
    connect WBU.io.in.bits.uop.rfDest, WBU_io_in_bits_r.uop.rfDest @[build/npc.fir.opt.mlir 3736:7]
    connect WBU.io.in.bits.uop.rfWen, WBU_io_in_bits_r.uop.rfWen @[build/npc.fir.opt.mlir 3737:7]
    connect WBU.io.in.bits.uop.pc, WBU_io_in_bits_r.uop.pc @[build/npc.fir.opt.mlir 3738:7]
    connect WBU.io.in.valid, valid_2 @[build/npc.fir.opt.mlir 3739:7]
    connect io.dmem.resp.ready, EXU.io.dmem.resp.ready @[build/npc.fir.opt.mlir 3742:7]
    connect EXU.io.dmem.resp.valid, io.dmem.resp.valid @[build/npc.fir.opt.mlir 3745:7]
    connect EXU.io.dmem.resp.bits, io.dmem.resp.bits @[build/npc.fir.opt.mlir 3748:7]
    connect io.dmem.req.bits, EXU.io.dmem.req.bits @[build/npc.fir.opt.mlir 3749:7]
    connect io.dmem.req.valid, EXU.io.dmem.req.valid @[build/npc.fir.opt.mlir 3750:7]
    connect EXU.io.dmem.req.ready, io.dmem.req.ready @[build/npc.fir.opt.mlir 3751:7]
    connect EXU.io.wb, WBU.io.wb @[build/npc.fir.opt.mlir 3752:7]
    connect ISU.io.wb, WBU.io.wb @[build/npc.fir.opt.mlir 3753:7]
    connect ISU.io.flush, flush @[build/npc.fir.opt.mlir 3754:7]
    connect ISU.io.bypass.uop.id, EXU.io.in.bits.uop.id @[build/npc.fir.opt.mlir 3755:7]
    connect ISU.io.bypass.uop.instr, EXU.io.in.bits.uop.instr @[build/npc.fir.opt.mlir 3756:7]
    connect ISU.io.bypass.uop.srcType[0], EXU.io.in.bits.uop.srcType[0] @[build/npc.fir.opt.mlir 3757:7]
    connect ISU.io.bypass.uop.srcType[1], EXU.io.in.bits.uop.srcType[1] @[build/npc.fir.opt.mlir 3758:7]
    connect ISU.io.bypass.uop.fuType, EXU.io.in.bits.uop.fuType @[build/npc.fir.opt.mlir 3759:7]
    connect ISU.io.bypass.uop.funcOpType, EXU.io.in.bits.uop.funcOpType @[build/npc.fir.opt.mlir 3760:7]
    connect ISU.io.bypass.uop.imm, EXU.io.in.bits.uop.imm @[build/npc.fir.opt.mlir 3761:7]
    connect ISU.io.bypass.uop.rfSrc[0], EXU.io.in.bits.uop.rfSrc[0] @[build/npc.fir.opt.mlir 3762:7]
    connect ISU.io.bypass.uop.rfSrc[1], EXU.io.in.bits.uop.rfSrc[1] @[build/npc.fir.opt.mlir 3763:7]
    connect ISU.io.bypass.uop.rfDest, EXU.io.in.bits.uop.rfDest @[build/npc.fir.opt.mlir 3764:7]
    connect ISU.io.bypass.uop.rfWen, EXU.io.in.bits.uop.rfWen @[build/npc.fir.opt.mlir 3765:7]
    connect ISU.io.bypass.uop.pc, EXU.io.in.bits.uop.pc @[build/npc.fir.opt.mlir 3766:7]
    connect io.flush, EXU.io.flush @[build/npc.fir.opt.mlir 3767:7]
    connect io_debug_trap_bore, EXU.io_debug_trap_bore @[build/npc.fir.opt.mlir 3768:7]
    connect io_debug_trapCode_bore, EXU.io_debug_trapCode_bore @[build/npc.fir.opt.mlir 3769:7]
    connect io_debug_commit_valid_bore, WBU.io.in.valid @[build/npc.fir.opt.mlir 3770:7]
    connect io_debug_commit_pc_bore, WBU.io.in.bits.uop.pc @[build/npc.fir.opt.mlir 3771:7]
    connect io_debug_commit_instr_bore, WBU.io.in.bits.uop.instr @[build/npc.fir.opt.mlir 3772:7]

  module Core : @[build/npc.fir.opt.mlir 3774:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3774:36]
    input reset : Reset @[build/npc.fir.opt.mlir 3774:62]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } }, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<4>, wdata : UInt<32> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<32> } } }, iflush : UInt<1> } @[build/npc.fir.opt.mlir 3774:89]
    output io_debug_trap_bore : UInt<1> @[build/npc.fir.opt.mlir 3774:617]
    output io_debug_trapCode_bore : UInt<32> @[build/npc.fir.opt.mlir 3774:659]
    output io_debug_commit_valid_bore : UInt<1> @[build/npc.fir.opt.mlir 3774:706]
    output io_debug_commit_pc_bore : UInt<32> @[build/npc.fir.opt.mlir 3774:756]
    output io_debug_commit_instr_bore : UInt<32> @[build/npc.fir.opt.mlir 3774:804]

    inst frontend of FrontEnd @[build/npc.fir.opt.mlir 3788:56]
    connect frontend.clock, clock @[build/npc.fir.opt.mlir 3799:7]
    connect frontend.reset, reset @[build/npc.fir.opt.mlir 3800:7]
    inst backend of Backend @[build/npc.fir.opt.mlir 3801:223]
    connect backend.clock, clock @[build/npc.fir.opt.mlir 3816:7]
    connect backend.reset, reset @[build/npc.fir.opt.mlir 3817:7]
    connect io.dmem.resp.ready, backend.io.dmem.resp.ready @[build/npc.fir.opt.mlir 3820:7]
    connect backend.io.dmem.resp.valid, io.dmem.resp.valid @[build/npc.fir.opt.mlir 3823:7]
    connect backend.io.dmem.resp.bits, io.dmem.resp.bits @[build/npc.fir.opt.mlir 3826:7]
    connect io.dmem.req.bits, backend.io.dmem.req.bits @[build/npc.fir.opt.mlir 3827:7]
    connect io.dmem.req.valid, backend.io.dmem.req.valid @[build/npc.fir.opt.mlir 3828:7]
    connect backend.io.dmem.req.ready, io.dmem.req.ready @[build/npc.fir.opt.mlir 3829:7]
    connect io.imem.resp.ready, frontend.io.imem.resp.ready @[build/npc.fir.opt.mlir 3832:7]
    connect frontend.io.imem.resp.valid, io.imem.resp.valid @[build/npc.fir.opt.mlir 3835:7]
    connect frontend.io.imem.resp.bits, io.imem.resp.bits @[build/npc.fir.opt.mlir 3838:7]
    connect io.imem.req.bits, frontend.io.imem.req.bits @[build/npc.fir.opt.mlir 3839:7]
    connect io.imem.req.valid, frontend.io.imem.req.valid @[build/npc.fir.opt.mlir 3840:7]
    connect frontend.io.imem.req.ready, io.imem.req.ready @[build/npc.fir.opt.mlir 3841:7]
    connect frontend.io.flush[0], backend.io.flush[0] @[build/npc.fir.opt.mlir 3842:7]
    connect frontend.io.flush[1], backend.io.flush[1] @[build/npc.fir.opt.mlir 3843:7]
    connect frontend.io.out.ready, backend.io.in.ready @[build/npc.fir.opt.mlir 3846:7]
    connect backend.io.in.valid, frontend.io.out.valid @[build/npc.fir.opt.mlir 3849:7]
    connect backend.io.in.bits, frontend.io.out.bits @[build/npc.fir.opt.mlir 3852:7]
    node _io_iflush_T = and(backend.io.flush[0].valid, backend.io.flush[0].brType) @[build/npc.fir.opt.mlir 3854:23]
    node _io_iflush_T_1 = and(backend.io.flush[1].valid, backend.io.flush[1].brType) @[build/npc.fir.opt.mlir 3856:25]
    node _io_iflush_T_2 = or(_io_iflush_T, _io_iflush_T_1) @[build/npc.fir.opt.mlir 3858:25]
    connect io.iflush, _io_iflush_T_2 @[build/npc.fir.opt.mlir 3859:7]
    connect io_debug_trap_bore, backend.io_debug_trap_bore @[build/npc.fir.opt.mlir 3860:7]
    connect io_debug_trapCode_bore, backend.io_debug_trapCode_bore @[build/npc.fir.opt.mlir 3861:7]
    connect io_debug_commit_valid_bore, backend.io_debug_commit_valid_bore @[build/npc.fir.opt.mlir 3862:7]
    connect io_debug_commit_pc_bore, backend.io_debug_commit_pc_bore @[build/npc.fir.opt.mlir 3863:7]
    connect io_debug_commit_instr_bore, backend.io_debug_commit_instr_bore @[build/npc.fir.opt.mlir 3864:7]

  module LockingArbiter : @[build/npc.fir.opt.mlir 3866:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3866:46]
    input reset : Reset @[build/npc.fir.opt.mlir 3866:72]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/npc.fir.opt.mlir 3866:99]

    wire io_chosen_choice : UInt<1> @[build/npc.fir.opt.mlir 3878:27]
    connect io_chosen_choice, UInt<1>(1) @[build/npc.fir.opt.mlir 3880:7]
    connect io.chosen, io_chosen_choice @[build/npc.fir.opt.mlir 3881:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/npc.fir.opt.mlir 3884:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/npc.fir.opt.mlir 3887:7]
    node _T = eq(io.in[0].valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 3890:13]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/npc.fir.opt.mlir 3892:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/npc.fir.opt.mlir 3893:7]
    node _io_in_1_ready_T = and(_T, io.out.ready) @[build/npc.fir.opt.mlir 3895:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/npc.fir.opt.mlir 3896:7]
    when io.in[0].valid : @[build/npc.fir.opt.mlir 3897:7]
      connect io_chosen_choice, UInt<1>(0) @[build/npc.fir.opt.mlir 3898:9]

  module SimpleBusArbiter : @[build/npc.fir.opt.mlir 3901:5]
    input clock : Clock @[build/npc.fir.opt.mlir 3901:48]
    input reset : Reset @[build/npc.fir.opt.mlir 3901:74]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }[2], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } } } @[build/npc.fir.opt.mlir 3901:101]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/npc.fir.opt.mlir 3923:16]
    inst inputArb of LockingArbiter @[build/npc.fir.opt.mlir 3924:56]
    connect inputArb.clock, clock @[build/npc.fir.opt.mlir 3934:7]
    connect inputArb.reset, reset @[build/npc.fir.opt.mlir 3935:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/npc.fir.opt.mlir 3938:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/npc.fir.opt.mlir 3941:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/npc.fir.opt.mlir 3944:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/npc.fir.opt.mlir 3947:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/npc.fir.opt.mlir 3950:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/npc.fir.opt.mlir 3953:7]
    regreset inflightSrc : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 3955:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/npc.fir.opt.mlir 3956:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/npc.fir.opt.mlir 3958:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/npc.fir.opt.mlir 3960:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/npc.fir.opt.mlir 3961:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/npc.fir.opt.mlir 3963:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/npc.fir.opt.mlir 3965:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/npc.fir.opt.mlir 3966:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/npc.fir.opt.mlir 3967:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/npc.fir.opt.mlir 3968:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/npc.fir.opt.mlir 3970:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/npc.fir.opt.mlir 3972:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/npc.fir.opt.mlir 3976:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/npc.fir.opt.mlir 3980:7]
    node _T = eq(UInt<2>(0), state) @[build/npc.fir.opt.mlir 3982:13]
    when _T : @[build/npc.fir.opt.mlir 3986:7]
      node _T_1 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/npc.fir.opt.mlir 3988:17]
      when _T_1 : @[build/npc.fir.opt.mlir 3989:9]
        connect inflightSrc, inputArb.io.chosen @[build/npc.fir.opt.mlir 3990:11]
        node _T_2 = eq(inputArb.io.out.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 3992:19]
        when _T_2 : @[build/npc.fir.opt.mlir 3993:11]
          connect state, UInt<2>(1) @[build/npc.fir.opt.mlir 3995:13]
        else :
          node _T_3 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/npc.fir.opt.mlir 3998:21]
          when _T_3 : @[build/npc.fir.opt.mlir 3999:13]
            connect state, UInt<2>(2) @[build/npc.fir.opt.mlir 4001:15]
    else :
      node _T_4 = eq(UInt<2>(1), state) @[build/npc.fir.opt.mlir 4007:17]
      when _T_4 : @[build/npc.fir.opt.mlir 4008:9]
        node _T_5 = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4010:19]
        when _T_5 : @[build/npc.fir.opt.mlir 4011:11]
          connect state, UInt<2>(0) @[build/npc.fir.opt.mlir 4013:13]
      else :
        node _T_6 = eq(UInt<2>(2), state) @[build/npc.fir.opt.mlir 4017:19]
        when _T_6 : @[build/npc.fir.opt.mlir 4018:11]
          node _T_7 = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4020:21]
          when _T_7 : @[build/npc.fir.opt.mlir 4021:13]
            connect state, UInt<2>(0) @[build/npc.fir.opt.mlir 4023:15]

  module FakeCache : @[build/npc.fir.opt.mlir 4029:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4029:41]
    input reset : Reset @[build/npc.fir.opt.mlir 4029:67]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, topdownInfo : { AccessCounter : UInt<64>, AccessRead : UInt<64>, AccessHit : UInt<64> }, flip flush : UInt<1> } @[build/npc.fir.opt.mlir 4029:94]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/npc.fir.opt.mlir 4066:16]
    node _needFlush_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4068:23]
    node _needFlush_T_1 = eq(io.flush, UInt<1>(0)) @[build/npc.fir.opt.mlir 4071:25]
    node _needFlush_T_2 = and(_needFlush_T, _needFlush_T_1) @[build/npc.fir.opt.mlir 4073:25]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 4074:20]
    when io.flush : @[build/npc.fir.opt.mlir 4076:7]
      connect needFlush, UInt<1>(1) @[build/npc.fir.opt.mlir 4078:9]
    when _needFlush_T_2 : @[build/npc.fir.opt.mlir 4080:7]
      connect needFlush, UInt<1>(0) @[build/npc.fir.opt.mlir 4082:9]
    node _io_in_req_ready_T = eq(state, UInt<2>(0)) @[build/npc.fir.opt.mlir 4085:29]
    connect io.in.req.ready, _io_in_req_ready_T @[build/npc.fir.opt.mlir 4086:7]
    node _ReqAddr_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4088:21]
    reg ReqAddr : UInt<32>, clock @[build/npc.fir.opt.mlir 4089:18]
    when _ReqAddr_T : @[build/npc.fir.opt.mlir 4090:7]
      connect ReqAddr, io.in.req.bits.addr @[build/npc.fir.opt.mlir 4091:9]
    node _io_out_req_valid_T = eq(state, UInt<2>(1)) @[build/npc.fir.opt.mlir 4095:30]
    connect io.out.req.valid, _io_out_req_valid_T @[build/npc.fir.opt.mlir 4096:7]
    connect io.out.req.bits.addr, ReqAddr @[build/npc.fir.opt.mlir 4097:7]
    node _io_out_req_bits_size_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4099:34]
    reg io_out_req_bits_size_r : UInt<2>, clock @[build/npc.fir.opt.mlir 4100:33]
    when _io_out_req_bits_size_T : @[build/npc.fir.opt.mlir 4101:7]
      connect io_out_req_bits_size_r, io.in.req.bits.size @[build/npc.fir.opt.mlir 4102:9]
    connect io.out.req.bits.size, io_out_req_bits_size_r @[build/npc.fir.opt.mlir 4104:7]
    node _io_out_req_bits_cmd_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4106:33]
    reg io_out_req_bits_cmd_r : UInt<1>, clock @[build/npc.fir.opt.mlir 4107:32]
    when _io_out_req_bits_cmd_T : @[build/npc.fir.opt.mlir 4108:7]
      connect io_out_req_bits_cmd_r, io.in.req.bits.cmd @[build/npc.fir.opt.mlir 4109:9]
    connect io.out.req.bits.cmd, io_out_req_bits_cmd_r @[build/npc.fir.opt.mlir 4111:7]
    node _io_out_req_bits_wmask_T = bits(io.in.req.bits.addr, 2, 0) @[build/npc.fir.opt.mlir 4113:35]
    node _io_out_req_bits_wmask_T_1 = dshl(io.in.req.bits.wmask, _io_out_req_bits_wmask_T) @[build/npc.fir.opt.mlir 4115:37]
    node _io_out_req_bits_wmask_T_2 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4117:37]
    reg io_out_req_bits_wmask_r : UInt<15>, clock @[build/npc.fir.opt.mlir 4118:34]
    when _io_out_req_bits_wmask_T_2 : @[build/npc.fir.opt.mlir 4119:7]
      connect io_out_req_bits_wmask_r, _io_out_req_bits_wmask_T_1 @[build/npc.fir.opt.mlir 4120:9]
    connect io.out.req.bits.wmask, tail(io_out_req_bits_wmask_r, 7) @[build/npc.fir.opt.mlir 4123:7]
    node _io_out_req_bits_wdata_T = bits(io.in.req.bits.wdata, 31, 0) @[build/npc.fir.opt.mlir 4125:35]
    node _io_out_req_bits_wdata_T_1 = cat(_io_out_req_bits_wdata_T, _io_out_req_bits_wdata_T) @[build/npc.fir.opt.mlir 4127:37]
    node _io_out_req_bits_wdata_T_2 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4129:37]
    reg io_out_req_bits_wdata_r : UInt<64>, clock @[build/npc.fir.opt.mlir 4130:34]
    when _io_out_req_bits_wdata_T_2 : @[build/npc.fir.opt.mlir 4131:7]
      connect io_out_req_bits_wdata_r, _io_out_req_bits_wdata_T_1 @[build/npc.fir.opt.mlir 4132:9]
    connect io.out.req.bits.wdata, io_out_req_bits_wdata_r @[build/npc.fir.opt.mlir 4134:7]
    node _RespRdata_T = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4136:23]
    reg RespRdata : UInt<64>, clock @[build/npc.fir.opt.mlir 4137:20]
    when _RespRdata_T : @[build/npc.fir.opt.mlir 4138:7]
      connect RespRdata, io.out.resp.bits.rdata @[build/npc.fir.opt.mlir 4139:9]
    node _io_out_resp_ready_T = eq(state, UInt<2>(2)) @[build/npc.fir.opt.mlir 4143:31]
    connect io.out.resp.ready, _io_out_resp_ready_T @[build/npc.fir.opt.mlir 4144:7]
    node _io_in_resp_valid_T = eq(state, UInt<2>(3)) @[build/npc.fir.opt.mlir 4147:30]
    node _io_in_resp_valid_T_1 = eq(needFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 4149:32]
    node _io_in_resp_valid_T_2 = and(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/npc.fir.opt.mlir 4151:32]
    node _io_in_resp_valid_T_3 = or(_io_in_resp_valid_T_2, io.flush) @[build/npc.fir.opt.mlir 4153:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/npc.fir.opt.mlir 4154:7]
    node _io_in_resp_bits_rdata_T = bits(ReqAddr, 2, 2) @[build/npc.fir.opt.mlir 4156:35]
    node _io_in_resp_bits_rdata_T_1 = bits(RespRdata, 63, 32) @[build/npc.fir.opt.mlir 4158:37]
    node _io_in_resp_bits_rdata_T_2 = bits(RespRdata, 31, 0) @[build/npc.fir.opt.mlir 4160:37]
    node _io_in_resp_bits_rdata_T_3 = mux(_io_in_resp_bits_rdata_T, _io_in_resp_bits_rdata_T_1, _io_in_resp_bits_rdata_T_2) @[build/npc.fir.opt.mlir 4162:37]
    connect io.in.resp.bits.rdata, pad(_io_in_resp_bits_rdata_T_3, 64) @[build/npc.fir.opt.mlir 4164:7]
    invalidate io.topdownInfo.AccessHit @[build/npc.fir.opt.mlir 4166:7]
    invalidate io.topdownInfo.AccessRead @[build/npc.fir.opt.mlir 4168:7]
    invalidate io.topdownInfo.AccessCounter @[build/npc.fir.opt.mlir 4170:7]
    node _T = eq(UInt<2>(0), state) @[build/npc.fir.opt.mlir 4172:13]
    when _T : @[build/npc.fir.opt.mlir 4173:7]
      node _T_1 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4175:17]
      when _T_1 : @[build/npc.fir.opt.mlir 4176:9]
        connect state, UInt<2>(1) @[build/npc.fir.opt.mlir 4178:11]
    else :
      node _T_2 = eq(UInt<2>(1), state) @[build/npc.fir.opt.mlir 4182:17]
      when _T_2 : @[build/npc.fir.opt.mlir 4183:9]
        node _T_3 = and(io.out.req.ready, io.out.req.valid) @[build/npc.fir.opt.mlir 4185:19]
        when _T_3 : @[build/npc.fir.opt.mlir 4186:11]
          connect state, UInt<2>(2) @[build/npc.fir.opt.mlir 4188:13]
      else :
        node _T_4 = eq(UInt<2>(2), state) @[build/npc.fir.opt.mlir 4192:19]
        when _T_4 : @[build/npc.fir.opt.mlir 4193:11]
          node _T_5 = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4195:21]
          when _T_5 : @[build/npc.fir.opt.mlir 4196:13]
            connect state, UInt<2>(3) @[build/npc.fir.opt.mlir 4198:15]
        else :
          node _T_6 = eq(UInt<2>(3), state) @[build/npc.fir.opt.mlir 4202:21]
          when _T_6 : @[build/npc.fir.opt.mlir 4203:13]
            node _T_7 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 4205:23]
            node _T_8 = or(_T_7, needFlush) @[build/npc.fir.opt.mlir 4207:23]
            when _T_8 : @[build/npc.fir.opt.mlir 4208:15]
              connect state, UInt<2>(0) @[build/npc.fir.opt.mlir 4210:17]

  module FakeCache_1 : @[build/npc.fir.opt.mlir 4217:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4217:43]
    input reset : Reset @[build/npc.fir.opt.mlir 4217:69]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, topdownInfo : { AccessCounter : UInt<64>, AccessRead : UInt<64>, AccessHit : UInt<64> }, flip flush : UInt<1> } @[build/npc.fir.opt.mlir 4217:96]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/npc.fir.opt.mlir 4254:16]
    node _needFlush_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4256:23]
    node _needFlush_T_1 = eq(io.flush, UInt<1>(0)) @[build/npc.fir.opt.mlir 4259:25]
    node _needFlush_T_2 = and(_needFlush_T, _needFlush_T_1) @[build/npc.fir.opt.mlir 4261:25]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 4262:20]
    when io.flush : @[build/npc.fir.opt.mlir 4264:7]
      connect needFlush, UInt<1>(1) @[build/npc.fir.opt.mlir 4266:9]
    when _needFlush_T_2 : @[build/npc.fir.opt.mlir 4268:7]
      connect needFlush, UInt<1>(0) @[build/npc.fir.opt.mlir 4270:9]
    node _io_in_req_ready_T = eq(state, UInt<2>(0)) @[build/npc.fir.opt.mlir 4273:29]
    connect io.in.req.ready, _io_in_req_ready_T @[build/npc.fir.opt.mlir 4274:7]
    node _ReqAddr_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4276:21]
    reg ReqAddr : UInt<32>, clock @[build/npc.fir.opt.mlir 4277:18]
    when _ReqAddr_T : @[build/npc.fir.opt.mlir 4278:7]
      connect ReqAddr, io.in.req.bits.addr @[build/npc.fir.opt.mlir 4279:9]
    node _io_out_req_valid_T = eq(state, UInt<2>(1)) @[build/npc.fir.opt.mlir 4283:30]
    connect io.out.req.valid, _io_out_req_valid_T @[build/npc.fir.opt.mlir 4284:7]
    connect io.out.req.bits.addr, ReqAddr @[build/npc.fir.opt.mlir 4285:7]
    node _io_out_req_bits_size_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4287:34]
    reg io_out_req_bits_size_r : UInt<2>, clock @[build/npc.fir.opt.mlir 4288:33]
    when _io_out_req_bits_size_T : @[build/npc.fir.opt.mlir 4289:7]
      connect io_out_req_bits_size_r, io.in.req.bits.size @[build/npc.fir.opt.mlir 4290:9]
    connect io.out.req.bits.size, io_out_req_bits_size_r @[build/npc.fir.opt.mlir 4292:7]
    node _io_out_req_bits_cmd_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4294:33]
    reg io_out_req_bits_cmd_r : UInt<1>, clock @[build/npc.fir.opt.mlir 4295:32]
    when _io_out_req_bits_cmd_T : @[build/npc.fir.opt.mlir 4296:7]
      connect io_out_req_bits_cmd_r, io.in.req.bits.cmd @[build/npc.fir.opt.mlir 4297:9]
    connect io.out.req.bits.cmd, io_out_req_bits_cmd_r @[build/npc.fir.opt.mlir 4299:7]
    node _io_out_req_bits_wmask_T = bits(io.in.req.bits.addr, 2, 0) @[build/npc.fir.opt.mlir 4301:35]
    node _io_out_req_bits_wmask_T_1 = dshl(io.in.req.bits.wmask, _io_out_req_bits_wmask_T) @[build/npc.fir.opt.mlir 4303:37]
    node _io_out_req_bits_wmask_T_2 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4305:37]
    reg io_out_req_bits_wmask_r : UInt<15>, clock @[build/npc.fir.opt.mlir 4306:34]
    when _io_out_req_bits_wmask_T_2 : @[build/npc.fir.opt.mlir 4307:7]
      connect io_out_req_bits_wmask_r, _io_out_req_bits_wmask_T_1 @[build/npc.fir.opt.mlir 4308:9]
    connect io.out.req.bits.wmask, tail(io_out_req_bits_wmask_r, 7) @[build/npc.fir.opt.mlir 4311:7]
    node _io_out_req_bits_wdata_T = bits(io.in.req.bits.wdata, 31, 0) @[build/npc.fir.opt.mlir 4313:35]
    node _io_out_req_bits_wdata_T_1 = cat(_io_out_req_bits_wdata_T, _io_out_req_bits_wdata_T) @[build/npc.fir.opt.mlir 4315:37]
    node _io_out_req_bits_wdata_T_2 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4317:37]
    reg io_out_req_bits_wdata_r : UInt<64>, clock @[build/npc.fir.opt.mlir 4318:34]
    when _io_out_req_bits_wdata_T_2 : @[build/npc.fir.opt.mlir 4319:7]
      connect io_out_req_bits_wdata_r, _io_out_req_bits_wdata_T_1 @[build/npc.fir.opt.mlir 4320:9]
    connect io.out.req.bits.wdata, io_out_req_bits_wdata_r @[build/npc.fir.opt.mlir 4322:7]
    node _RespRdata_T = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4324:23]
    reg RespRdata : UInt<64>, clock @[build/npc.fir.opt.mlir 4325:20]
    when _RespRdata_T : @[build/npc.fir.opt.mlir 4326:7]
      connect RespRdata, io.out.resp.bits.rdata @[build/npc.fir.opt.mlir 4327:9]
    node _io_out_resp_ready_T = eq(state, UInt<2>(2)) @[build/npc.fir.opt.mlir 4331:31]
    connect io.out.resp.ready, _io_out_resp_ready_T @[build/npc.fir.opt.mlir 4332:7]
    node _io_in_resp_valid_T = eq(state, UInt<2>(3)) @[build/npc.fir.opt.mlir 4335:30]
    node _io_in_resp_valid_T_1 = eq(needFlush, UInt<1>(0)) @[build/npc.fir.opt.mlir 4337:32]
    node _io_in_resp_valid_T_2 = and(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/npc.fir.opt.mlir 4339:32]
    node _io_in_resp_valid_T_3 = or(_io_in_resp_valid_T_2, io.flush) @[build/npc.fir.opt.mlir 4341:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/npc.fir.opt.mlir 4342:7]
    node _io_in_resp_bits_rdata_T = bits(ReqAddr, 2, 2) @[build/npc.fir.opt.mlir 4344:35]
    node _io_in_resp_bits_rdata_T_1 = bits(RespRdata, 63, 32) @[build/npc.fir.opt.mlir 4346:37]
    node _io_in_resp_bits_rdata_T_2 = bits(RespRdata, 31, 0) @[build/npc.fir.opt.mlir 4348:37]
    node _io_in_resp_bits_rdata_T_3 = mux(_io_in_resp_bits_rdata_T, _io_in_resp_bits_rdata_T_1, _io_in_resp_bits_rdata_T_2) @[build/npc.fir.opt.mlir 4350:37]
    connect io.in.resp.bits.rdata, pad(_io_in_resp_bits_rdata_T_3, 64) @[build/npc.fir.opt.mlir 4352:7]
    invalidate io.topdownInfo.AccessHit @[build/npc.fir.opt.mlir 4354:7]
    invalidate io.topdownInfo.AccessRead @[build/npc.fir.opt.mlir 4356:7]
    invalidate io.topdownInfo.AccessCounter @[build/npc.fir.opt.mlir 4358:7]
    node _T = eq(UInt<2>(0), state) @[build/npc.fir.opt.mlir 4360:13]
    when _T : @[build/npc.fir.opt.mlir 4361:7]
      node _T_1 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4363:17]
      when _T_1 : @[build/npc.fir.opt.mlir 4364:9]
        connect state, UInt<2>(1) @[build/npc.fir.opt.mlir 4366:11]
    else :
      node _T_2 = eq(UInt<2>(1), state) @[build/npc.fir.opt.mlir 4370:17]
      when _T_2 : @[build/npc.fir.opt.mlir 4371:9]
        node _T_3 = and(io.out.req.ready, io.out.req.valid) @[build/npc.fir.opt.mlir 4373:19]
        when _T_3 : @[build/npc.fir.opt.mlir 4374:11]
          connect state, UInt<2>(2) @[build/npc.fir.opt.mlir 4376:13]
      else :
        node _T_4 = eq(UInt<2>(2), state) @[build/npc.fir.opt.mlir 4380:19]
        when _T_4 : @[build/npc.fir.opt.mlir 4381:11]
          node _T_5 = and(io.out.resp.ready, io.out.resp.valid) @[build/npc.fir.opt.mlir 4383:21]
          when _T_5 : @[build/npc.fir.opt.mlir 4384:13]
            connect state, UInt<2>(3) @[build/npc.fir.opt.mlir 4386:15]
        else :
          node _T_6 = eq(UInt<2>(3), state) @[build/npc.fir.opt.mlir 4390:21]
          when _T_6 : @[build/npc.fir.opt.mlir 4391:13]
            node _T_7 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 4393:23]
            node _T_8 = or(_T_7, needFlush) @[build/npc.fir.opt.mlir 4395:23]
            when _T_8 : @[build/npc.fir.opt.mlir 4396:15]
              connect state, UInt<2>(0) @[build/npc.fir.opt.mlir 4398:17]

  module Tile : @[build/npc.fir.opt.mlir 4405:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4405:36]
    input reset : Reset @[build/npc.fir.opt.mlir 4405:62]
    output io : { bus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } } } @[build/npc.fir.opt.mlir 4405:89]
    output io_debug_trap_bore : UInt<1> @[build/npc.fir.opt.mlir 4405:356]
    output io_debug_trapCode_bore : UInt<32> @[build/npc.fir.opt.mlir 4405:398]
    output io_debug_commit_valid_bore : UInt<1> @[build/npc.fir.opt.mlir 4405:445]
    output io_debug_commit_pc_bore : UInt<32> @[build/npc.fir.opt.mlir 4405:495]
    output io_debug_commit_instr_bore : UInt<32> @[build/npc.fir.opt.mlir 4405:543]

    inst Core of Core @[build/npc.fir.opt.mlir 4412:199]
    connect Core.clock, clock @[build/npc.fir.opt.mlir 4416:7]
    connect Core.reset, reset @[build/npc.fir.opt.mlir 4417:7]
    inst Arb of SimpleBusArbiter @[build/npc.fir.opt.mlir 4418:41]
    connect Arb.clock, clock @[build/npc.fir.opt.mlir 4428:7]
    connect Arb.reset, reset @[build/npc.fir.opt.mlir 4429:7]
    wire topDownInfo : { cache : { AccessCounter : UInt<64>, AccessRead : UInt<64>, AccessHit : UInt<64> }[2] } @[build/npc.fir.opt.mlir 4430:22]
    invalidate topDownInfo.cache[0].AccessHit @[build/npc.fir.opt.mlir 4441:7]
    invalidate topDownInfo.cache[0].AccessRead @[build/npc.fir.opt.mlir 4443:7]
    invalidate topDownInfo.cache[0].AccessCounter @[build/npc.fir.opt.mlir 4445:7]
    invalidate topDownInfo.cache[1].AccessHit @[build/npc.fir.opt.mlir 4447:7]
    invalidate topDownInfo.cache[1].AccessRead @[build/npc.fir.opt.mlir 4449:7]
    invalidate topDownInfo.cache[1].AccessCounter @[build/npc.fir.opt.mlir 4451:7]
    inst FakeICache of FakeCache @[build/npc.fir.opt.mlir 4452:62]
    connect FakeICache.clock, clock @[build/npc.fir.opt.mlir 4456:7]
    connect FakeICache.reset, reset @[build/npc.fir.opt.mlir 4457:7]
    connect Core.io.imem.req.ready, FakeICache.io.in.req.ready @[build/npc.fir.opt.mlir 4462:7]
    connect FakeICache.io.in.req.valid, Core.io.imem.req.valid @[build/npc.fir.opt.mlir 4465:7]
    connect FakeICache.io.in.req.bits.addr, Core.io.imem.req.bits.addr @[build/npc.fir.opt.mlir 4470:7]
    connect FakeICache.io.in.req.bits.size, Core.io.imem.req.bits.size @[build/npc.fir.opt.mlir 4473:7]
    connect FakeICache.io.in.req.bits.cmd, Core.io.imem.req.bits.cmd @[build/npc.fir.opt.mlir 4476:7]
    connect FakeICache.io.in.req.bits.wmask, pad(Core.io.imem.req.bits.wmask, 8) @[build/npc.fir.opt.mlir 4480:7]
    connect FakeICache.io.in.req.bits.wdata, pad(Core.io.imem.req.bits.wdata, 64) @[build/npc.fir.opt.mlir 4484:7]
    connect FakeICache.io.in.resp.ready, Core.io.imem.resp.ready @[build/npc.fir.opt.mlir 4489:7]
    connect Core.io.imem.resp.valid, FakeICache.io.in.resp.valid @[build/npc.fir.opt.mlir 4492:7]
    connect Core.io.imem.resp.bits.rdata, tail(FakeICache.io.in.resp.bits.rdata, 32) @[build/npc.fir.opt.mlir 4498:7]
    connect FakeICache.io.out.req.ready, Arb.io.in[0].req.ready @[build/npc.fir.opt.mlir 4503:7]
    connect Arb.io.in[0].req.valid, FakeICache.io.out.req.valid @[build/npc.fir.opt.mlir 4506:7]
    connect Arb.io.in[0].req.bits, FakeICache.io.out.req.bits @[build/npc.fir.opt.mlir 4509:7]
    connect Arb.io.in[0].resp.ready, FakeICache.io.out.resp.ready @[build/npc.fir.opt.mlir 4514:7]
    connect FakeICache.io.out.resp.valid, Arb.io.in[0].resp.valid @[build/npc.fir.opt.mlir 4517:7]
    connect FakeICache.io.out.resp.bits, Arb.io.in[0].resp.bits @[build/npc.fir.opt.mlir 4520:7]
    connect FakeICache.io.flush, Core.io.iflush @[build/npc.fir.opt.mlir 4521:7]
    inst FakeDCache of FakeCache_1 @[build/npc.fir.opt.mlir 4522:62]
    connect FakeDCache.clock, clock @[build/npc.fir.opt.mlir 4526:7]
    connect FakeDCache.reset, reset @[build/npc.fir.opt.mlir 4527:7]
    connect Core.io.dmem.req.ready, FakeDCache.io.in.req.ready @[build/npc.fir.opt.mlir 4532:7]
    connect FakeDCache.io.in.req.valid, Core.io.dmem.req.valid @[build/npc.fir.opt.mlir 4535:7]
    connect FakeDCache.io.in.req.bits.addr, Core.io.dmem.req.bits.addr @[build/npc.fir.opt.mlir 4540:7]
    connect FakeDCache.io.in.req.bits.size, Core.io.dmem.req.bits.size @[build/npc.fir.opt.mlir 4543:7]
    connect FakeDCache.io.in.req.bits.cmd, Core.io.dmem.req.bits.cmd @[build/npc.fir.opt.mlir 4546:7]
    connect FakeDCache.io.in.req.bits.wmask, pad(Core.io.dmem.req.bits.wmask, 8) @[build/npc.fir.opt.mlir 4550:7]
    connect FakeDCache.io.in.req.bits.wdata, pad(Core.io.dmem.req.bits.wdata, 64) @[build/npc.fir.opt.mlir 4554:7]
    connect FakeDCache.io.in.resp.ready, Core.io.dmem.resp.ready @[build/npc.fir.opt.mlir 4559:7]
    connect Core.io.dmem.resp.valid, FakeDCache.io.in.resp.valid @[build/npc.fir.opt.mlir 4562:7]
    connect Core.io.dmem.resp.bits.rdata, tail(FakeDCache.io.in.resp.bits.rdata, 32) @[build/npc.fir.opt.mlir 4568:7]
    connect FakeDCache.io.out.req.ready, Arb.io.in[1].req.ready @[build/npc.fir.opt.mlir 4573:7]
    connect Arb.io.in[1].req.valid, FakeDCache.io.out.req.valid @[build/npc.fir.opt.mlir 4576:7]
    connect Arb.io.in[1].req.bits, FakeDCache.io.out.req.bits @[build/npc.fir.opt.mlir 4579:7]
    connect Arb.io.in[1].resp.ready, FakeDCache.io.out.resp.ready @[build/npc.fir.opt.mlir 4584:7]
    connect FakeDCache.io.out.resp.valid, Arb.io.in[1].resp.valid @[build/npc.fir.opt.mlir 4587:7]
    connect FakeDCache.io.out.resp.bits, Arb.io.in[1].resp.bits @[build/npc.fir.opt.mlir 4590:7]
    connect FakeDCache.io.flush, UInt<1>(0) @[build/npc.fir.opt.mlir 4593:7]
    connect io.bus.resp.ready, Arb.io.out.resp.ready @[build/npc.fir.opt.mlir 4596:7]
    connect Arb.io.out.resp.valid, io.bus.resp.valid @[build/npc.fir.opt.mlir 4599:7]
    connect Arb.io.out.resp.bits, io.bus.resp.bits @[build/npc.fir.opt.mlir 4602:7]
    connect io.bus.req.bits, Arb.io.out.req.bits @[build/npc.fir.opt.mlir 4603:7]
    connect io.bus.req.valid, Arb.io.out.req.valid @[build/npc.fir.opt.mlir 4604:7]
    connect Arb.io.out.req.ready, io.bus.req.ready @[build/npc.fir.opt.mlir 4605:7]
    connect io_debug_trap_bore, Core.io_debug_trap_bore @[build/npc.fir.opt.mlir 4606:7]
    connect io_debug_trapCode_bore, Core.io_debug_trapCode_bore @[build/npc.fir.opt.mlir 4607:7]
    connect io_debug_commit_valid_bore, Core.io_debug_commit_valid_bore @[build/npc.fir.opt.mlir 4608:7]
    connect io_debug_commit_pc_bore, Core.io_debug_commit_pc_bore @[build/npc.fir.opt.mlir 4609:7]
    connect io_debug_commit_instr_bore, Core.io_debug_commit_instr_bore @[build/npc.fir.opt.mlir 4610:7]

  module SimpleBusClint : @[build/npc.fir.opt.mlir 4612:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4612:46]
    input reset : Reset @[build/npc.fir.opt.mlir 4612:72]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } } } @[build/npc.fir.opt.mlir 4612:99]

    node isRead = eq(io.in.req.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 4627:17]
    node _ren_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4629:17]
    node ren = and(_ren_T, isRead) @[build/npc.fir.opt.mlir 4631:14]
    node _wen_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4633:17]
    node _wen_T_1 = eq(isRead, UInt<1>(0)) @[build/npc.fir.opt.mlir 4635:19]
    node wen = and(_wen_T, _wen_T_1) @[build/npc.fir.opt.mlir 4637:14]
    node _Busy_T = or(ren, wen) @[build/npc.fir.opt.mlir 4639:18]
    node _Busy_T_1 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 4641:20]
    regreset Busy : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 4642:15]
    when _Busy_T_1 : @[build/npc.fir.opt.mlir 4643:7]
      connect Busy, UInt<1>(0) @[build/npc.fir.opt.mlir 4645:9]
    when _Busy_T : @[build/npc.fir.opt.mlir 4648:7]
      connect Busy, UInt<1>(1) @[build/npc.fir.opt.mlir 4650:9]
    node _io_in_req_ready_T = eq(Busy, UInt<1>(0)) @[build/npc.fir.opt.mlir 4653:29]
    node _io_in_req_ready_T_1 = or(io.in.resp.ready, _io_in_req_ready_T) @[build/npc.fir.opt.mlir 4655:31]
    connect io.in.req.ready, _io_in_req_ready_T_1 @[build/npc.fir.opt.mlir 4656:7]
    connect io.in.resp.valid, Busy @[build/npc.fir.opt.mlir 4657:7]
    regreset mtime : UInt<64>, clock, reset, UInt<64>(0) @[build/npc.fir.opt.mlir 4659:16]
    node _mtime_T = add(mtime, UInt<1>(1)) @[build/npc.fir.opt.mlir 4661:19]
    node _mtime_T_1 = tail(_mtime_T, 1) @[build/npc.fir.opt.mlir 4663:21]
    connect mtime, _mtime_T_1 @[build/npc.fir.opt.mlir 4664:7]
    node mapping_0_2 = bits(mtime, 31, 0) @[build/npc.fir.opt.mlir 4666:22]
    node mapping_1_2 = bits(mtime, 63, 32) @[build/npc.fir.opt.mlir 4668:22]
    node offset = bits(io.in.req.bits.addr, 2, 0) @[build/npc.fir.opt.mlir 4670:17]
    node _io_in_resp_bits_rdata_T = eq(offset, UInt<1>(0)) @[build/npc.fir.opt.mlir 4672:35]
    node _io_in_resp_bits_rdata_T_1 = mux(_io_in_resp_bits_rdata_T, mapping_0_2, UInt<1>(0)) @[build/npc.fir.opt.mlir 4674:37]
    node _io_in_resp_bits_rdata_T_2 = eq(offset, UInt<3>(4)) @[build/npc.fir.opt.mlir 4677:37]
    node _io_in_resp_bits_rdata_T_3 = mux(_io_in_resp_bits_rdata_T_2, mapping_1_2, _io_in_resp_bits_rdata_T_1) @[build/npc.fir.opt.mlir 4679:37]
    connect io.in.resp.bits.rdata, pad(_io_in_resp_bits_rdata_T_3, 64) @[build/npc.fir.opt.mlir 4681:7]

  module SimpleBusMem : @[build/npc.fir.opt.mlir 4683:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4683:44]
    input reset : Reset @[build/npc.fir.opt.mlir 4683:70]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } } } @[build/npc.fir.opt.mlir 4683:97]

    node isRead = eq(io.in.req.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 4706:17]
    node _ren_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4708:17]
    node ren = and(_ren_T, isRead) @[build/npc.fir.opt.mlir 4710:14]
    node _wen_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4712:17]
    node _wen_T_1 = eq(isRead, UInt<1>(0)) @[build/npc.fir.opt.mlir 4714:19]
    node wen = and(_wen_T, _wen_T_1) @[build/npc.fir.opt.mlir 4716:14]
    node _Busy_T = or(ren, wen) @[build/npc.fir.opt.mlir 4718:18]
    node _Busy_T_1 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 4720:20]
    regreset Busy : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 4721:15]
    when _Busy_T_1 : @[build/npc.fir.opt.mlir 4722:7]
      connect Busy, UInt<1>(0) @[build/npc.fir.opt.mlir 4724:9]
    when _Busy_T : @[build/npc.fir.opt.mlir 4727:7]
      connect Busy, UInt<1>(1) @[build/npc.fir.opt.mlir 4729:9]
    node _io_in_req_ready_T = eq(Busy, UInt<1>(0)) @[build/npc.fir.opt.mlir 4732:29]
    node _io_in_req_ready_T_1 = or(io.in.resp.ready, _io_in_req_ready_T) @[build/npc.fir.opt.mlir 4734:31]
    connect io.in.req.ready, _io_in_req_ready_T_1 @[build/npc.fir.opt.mlir 4735:7]
    connect io.in.resp.valid, Busy @[build/npc.fir.opt.mlir 4736:7]
    mem mem : @[build/npc.fir.opt.mlir 4737:54]
      data-type => UInt<8>[8]
      depth => 48576
      read-latency => 0
      write-latency => 1
      reader => io_in_resp_bits_rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate mem.MPORT.addr @[build/npc.fir.opt.mlir 4739:7]
    connect mem.MPORT.en, UInt<1>(0) @[build/npc.fir.opt.mlir 4741:7]
    invalidate mem.MPORT.clk @[build/npc.fir.opt.mlir 4743:7]
    invalidate mem.MPORT.data @[build/npc.fir.opt.mlir 4745:7]
    invalidate mem.MPORT.mask @[build/npc.fir.opt.mlir 4747:7]
    invalidate mem.io_in_resp_bits_rdata_MPORT.addr @[build/npc.fir.opt.mlir 4749:7]
    connect mem.io_in_resp_bits_rdata_MPORT.en, UInt<1>(0) @[build/npc.fir.opt.mlir 4751:7]
    invalidate mem.io_in_resp_bits_rdata_MPORT.clk @[build/npc.fir.opt.mlir 4753:7]
    node idx = dshr(io.in.req.bits.addr, UInt<2>(3)) @[build/npc.fir.opt.mlir 4781:14]
    node _io_in_resp_bits_rdata_T = bits(idx, 19, 0) @[build/npc.fir.opt.mlir 4783:35]
    connect mem.io_in_resp_bits_rdata_MPORT.addr, _io_in_resp_bits_rdata_T @[build/npc.fir.opt.mlir 4784:7]
    connect mem.io_in_resp_bits_rdata_MPORT.en, UInt<1>(1) @[build/npc.fir.opt.mlir 4785:7]
    connect mem.io_in_resp_bits_rdata_MPORT.clk, clock @[build/npc.fir.opt.mlir 4786:7]
    node io_in_resp_bits_rdata_lo_lo = cat(mem.io_in_resp_bits_rdata_MPORT.data[1], mem.io_in_resp_bits_rdata_MPORT.data[0]) @[build/npc.fir.opt.mlir 4788:38]
    node io_in_resp_bits_rdata_lo_hi = cat(mem.io_in_resp_bits_rdata_MPORT.data[3], mem.io_in_resp_bits_rdata_MPORT.data[2]) @[build/npc.fir.opt.mlir 4790:38]
    node io_in_resp_bits_rdata_lo = cat(io_in_resp_bits_rdata_lo_hi, io_in_resp_bits_rdata_lo_lo) @[build/npc.fir.opt.mlir 4792:35]
    node io_in_resp_bits_rdata_hi_lo = cat(mem.io_in_resp_bits_rdata_MPORT.data[5], mem.io_in_resp_bits_rdata_MPORT.data[4]) @[build/npc.fir.opt.mlir 4794:38]
    node io_in_resp_bits_rdata_hi_hi = cat(mem.io_in_resp_bits_rdata_MPORT.data[7], mem.io_in_resp_bits_rdata_MPORT.data[6]) @[build/npc.fir.opt.mlir 4796:38]
    node io_in_resp_bits_rdata_hi = cat(io_in_resp_bits_rdata_hi_hi, io_in_resp_bits_rdata_hi_lo) @[build/npc.fir.opt.mlir 4798:35]
    node _io_in_resp_bits_rdata_T_1 = cat(io_in_resp_bits_rdata_hi, io_in_resp_bits_rdata_lo) @[build/npc.fir.opt.mlir 4800:37]
    reg io_in_resp_bits_rdata_r : UInt<64>, clock @[build/npc.fir.opt.mlir 4801:34]
    when isRead : @[build/npc.fir.opt.mlir 4802:7]
      connect io_in_resp_bits_rdata_r, _io_in_resp_bits_rdata_T_1 @[build/npc.fir.opt.mlir 4803:9]
    connect io.in.resp.bits.rdata, io_in_resp_bits_rdata_r @[build/npc.fir.opt.mlir 4805:7]
    node _wdata_T = bits(io.in.req.bits.wdata, 7, 0) @[build/npc.fir.opt.mlir 4807:19]
    node _wdata_T_1 = bits(io.in.req.bits.wdata, 15, 8) @[build/npc.fir.opt.mlir 4809:21]
    node _wdata_T_2 = bits(io.in.req.bits.wdata, 23, 16) @[build/npc.fir.opt.mlir 4811:21]
    node _wdata_T_3 = bits(io.in.req.bits.wdata, 31, 24) @[build/npc.fir.opt.mlir 4813:21]
    node _wdata_T_4 = bits(io.in.req.bits.wdata, 39, 32) @[build/npc.fir.opt.mlir 4815:21]
    node _wdata_T_5 = bits(io.in.req.bits.wdata, 47, 40) @[build/npc.fir.opt.mlir 4817:21]
    node _wdata_T_6 = bits(io.in.req.bits.wdata, 55, 48) @[build/npc.fir.opt.mlir 4819:21]
    node _wdata_T_7 = bits(io.in.req.bits.wdata, 63, 56) @[build/npc.fir.opt.mlir 4821:21]
    wire wdata : UInt<8>[8] @[build/npc.fir.opt.mlir 4822:16]
    connect wdata[0], _wdata_T @[build/npc.fir.opt.mlir 4831:7]
    connect wdata[1], _wdata_T_1 @[build/npc.fir.opt.mlir 4832:7]
    connect wdata[2], _wdata_T_2 @[build/npc.fir.opt.mlir 4833:7]
    connect wdata[3], _wdata_T_3 @[build/npc.fir.opt.mlir 4834:7]
    connect wdata[4], _wdata_T_4 @[build/npc.fir.opt.mlir 4835:7]
    connect wdata[5], _wdata_T_5 @[build/npc.fir.opt.mlir 4836:7]
    connect wdata[6], _wdata_T_6 @[build/npc.fir.opt.mlir 4837:7]
    connect wdata[7], _wdata_T_7 @[build/npc.fir.opt.mlir 4838:7]
    when wen : @[build/npc.fir.opt.mlir 4839:7]
      node _T = shr(io.in.req.bits.addr, 3) @[build/npc.fir.opt.mlir 4841:15]
      node _T_1 = bits(io.in.req.bits.wmask, 0, 0) @[build/npc.fir.opt.mlir 4843:17]
      node _T_2 = bits(io.in.req.bits.wmask, 1, 1) @[build/npc.fir.opt.mlir 4845:17]
      node _T_3 = bits(io.in.req.bits.wmask, 2, 2) @[build/npc.fir.opt.mlir 4847:17]
      node _T_4 = bits(io.in.req.bits.wmask, 3, 3) @[build/npc.fir.opt.mlir 4849:17]
      node _T_5 = bits(io.in.req.bits.wmask, 4, 4) @[build/npc.fir.opt.mlir 4851:17]
      node _T_6 = bits(io.in.req.bits.wmask, 5, 5) @[build/npc.fir.opt.mlir 4853:17]
      node _T_7 = bits(io.in.req.bits.wmask, 6, 6) @[build/npc.fir.opt.mlir 4855:17]
      node _T_8 = bits(io.in.req.bits.wmask, 7, 7) @[build/npc.fir.opt.mlir 4857:17]
      node _T_9 = bits(_T, 19, 0) @[build/npc.fir.opt.mlir 4859:17]
      connect mem.MPORT.addr, _T_9 @[build/npc.fir.opt.mlir 4860:9]
      connect mem.MPORT.en, UInt<1>(1) @[build/npc.fir.opt.mlir 4861:9]
      connect mem.MPORT.clk, clock @[build/npc.fir.opt.mlir 4862:9]
      connect mem.MPORT.mask[0], UInt<1>(0) @[build/npc.fir.opt.mlir 4864:9]
      connect mem.MPORT.mask[1], UInt<1>(0) @[build/npc.fir.opt.mlir 4866:9]
      connect mem.MPORT.mask[2], UInt<1>(0) @[build/npc.fir.opt.mlir 4868:9]
      connect mem.MPORT.mask[3], UInt<1>(0) @[build/npc.fir.opt.mlir 4870:9]
      connect mem.MPORT.mask[4], UInt<1>(0) @[build/npc.fir.opt.mlir 4872:9]
      connect mem.MPORT.mask[5], UInt<1>(0) @[build/npc.fir.opt.mlir 4874:9]
      connect mem.MPORT.mask[6], UInt<1>(0) @[build/npc.fir.opt.mlir 4876:9]
      connect mem.MPORT.mask[7], UInt<1>(0) @[build/npc.fir.opt.mlir 4878:9]
      when _T_1 : @[build/npc.fir.opt.mlir 4879:9]
        connect mem.MPORT.mask[0], UInt<1>(1) @[build/npc.fir.opt.mlir 4880:11]
        connect mem.MPORT.data[0], wdata[0] @[build/npc.fir.opt.mlir 4881:11]
      when _T_2 : @[build/npc.fir.opt.mlir 4883:9]
        connect mem.MPORT.mask[1], UInt<1>(1) @[build/npc.fir.opt.mlir 4884:11]
        connect mem.MPORT.data[1], wdata[1] @[build/npc.fir.opt.mlir 4885:11]
      when _T_3 : @[build/npc.fir.opt.mlir 4887:9]
        connect mem.MPORT.mask[2], UInt<1>(1) @[build/npc.fir.opt.mlir 4888:11]
        connect mem.MPORT.data[2], wdata[2] @[build/npc.fir.opt.mlir 4889:11]
      when _T_4 : @[build/npc.fir.opt.mlir 4891:9]
        connect mem.MPORT.mask[3], UInt<1>(1) @[build/npc.fir.opt.mlir 4892:11]
        connect mem.MPORT.data[3], wdata[3] @[build/npc.fir.opt.mlir 4893:11]
      when _T_5 : @[build/npc.fir.opt.mlir 4895:9]
        connect mem.MPORT.mask[4], UInt<1>(1) @[build/npc.fir.opt.mlir 4896:11]
        connect mem.MPORT.data[4], wdata[4] @[build/npc.fir.opt.mlir 4897:11]
      when _T_6 : @[build/npc.fir.opt.mlir 4899:9]
        connect mem.MPORT.mask[5], UInt<1>(1) @[build/npc.fir.opt.mlir 4900:11]
        connect mem.MPORT.data[5], wdata[5] @[build/npc.fir.opt.mlir 4901:11]
      when _T_7 : @[build/npc.fir.opt.mlir 4903:9]
        connect mem.MPORT.mask[6], UInt<1>(1) @[build/npc.fir.opt.mlir 4904:11]
        connect mem.MPORT.data[6], wdata[6] @[build/npc.fir.opt.mlir 4905:11]
      when _T_8 : @[build/npc.fir.opt.mlir 4907:9]
        connect mem.MPORT.mask[7], UInt<1>(1) @[build/npc.fir.opt.mlir 4908:11]
        connect mem.MPORT.data[7], wdata[7] @[build/npc.fir.opt.mlir 4909:11]

  module SimpleBusUart : @[build/npc.fir.opt.mlir 4913:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4913:45]
    input reset : Reset @[build/npc.fir.opt.mlir 4913:71]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } } } @[build/npc.fir.opt.mlir 4913:98]

    node isRead = eq(io.in.req.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 4928:17]
    node _ren_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4930:17]
    node ren = and(_ren_T, isRead) @[build/npc.fir.opt.mlir 4932:14]
    node _wen_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 4934:17]
    node _wen_T_1 = eq(isRead, UInt<1>(0)) @[build/npc.fir.opt.mlir 4936:19]
    node wen = and(_wen_T, _wen_T_1) @[build/npc.fir.opt.mlir 4938:14]
    node _Busy_T = or(ren, wen) @[build/npc.fir.opt.mlir 4940:18]
    node _Busy_T_1 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 4942:20]
    regreset Busy : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 4943:15]
    when _Busy_T_1 : @[build/npc.fir.opt.mlir 4944:7]
      connect Busy, UInt<1>(0) @[build/npc.fir.opt.mlir 4946:9]
    when _Busy_T : @[build/npc.fir.opt.mlir 4949:7]
      connect Busy, UInt<1>(1) @[build/npc.fir.opt.mlir 4951:9]
    node _io_in_req_ready_T = eq(Busy, UInt<1>(0)) @[build/npc.fir.opt.mlir 4954:29]
    node _io_in_req_ready_T_1 = or(io.in.resp.ready, _io_in_req_ready_T) @[build/npc.fir.opt.mlir 4956:31]
    connect io.in.req.ready, _io_in_req_ready_T_1 @[build/npc.fir.opt.mlir 4957:7]
    connect io.in.resp.valid, Busy @[build/npc.fir.opt.mlir 4958:7]
    node char = bits(io.in.req.bits.wdata, 7, 0) @[build/npc.fir.opt.mlir 4960:15]
    when wen : @[build/npc.fir.opt.mlir 4961:7]
      node _T = asUInt(reset) @[build/npc.fir.opt.mlir 4963:15]
      node _T_1 = eq(_T, UInt<1>(0)) @[build/npc.fir.opt.mlir 4965:17]
      when _T_1 : @[build/npc.fir.opt.mlir 4966:9]
        printf(clock, UInt<1>(1), "%c", char) : printf @[build/npc.fir.opt.mlir 4967:11]
    connect io.in.resp.bits.rdata, pad(UInt<1>(0), 64) @[build/npc.fir.opt.mlir 4972:7]

  module SimpleBusCrossbar : @[build/npc.fir.opt.mlir 4974:5]
    input clock : Clock @[build/npc.fir.opt.mlir 4974:49]
    input reset : Reset @[build/npc.fir.opt.mlir 4974:75]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }[4] } @[build/npc.fir.opt.mlir 4974:102]

    regreset state : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 5027:16]
    node _outMatchVec_T = geq(io.in.req.bits.addr, UInt<32>(2684354632)) @[build/npc.fir.opt.mlir 5030:25]
    node _outMatchVec_T_1 = lt(io.in.req.bits.addr, UInt<32>(2684354640)) @[build/npc.fir.opt.mlir 5033:27]
    node _outMatchVec_T_2 = and(_outMatchVec_T, _outMatchVec_T_1) @[build/npc.fir.opt.mlir 5035:27]
    node _outMatchVec_T_3 = geq(io.in.req.bits.addr, UInt<32>(2147483648)) @[build/npc.fir.opt.mlir 5038:27]
    node _outMatchVec_T_4 = lt(io.in.req.bits.addr, UInt<32>(2281701376)) @[build/npc.fir.opt.mlir 5041:27]
    node _outMatchVec_T_5 = and(_outMatchVec_T_3, _outMatchVec_T_4) @[build/npc.fir.opt.mlir 5043:27]
    node _outMatchVec_T_6 = geq(io.in.req.bits.addr, UInt<32>(2684355576)) @[build/npc.fir.opt.mlir 5046:27]
    node _outMatchVec_T_7 = lt(io.in.req.bits.addr, UInt<32>(2684355584)) @[build/npc.fir.opt.mlir 5049:27]
    node _outMatchVec_T_8 = and(_outMatchVec_T_6, _outMatchVec_T_7) @[build/npc.fir.opt.mlir 5051:27]
    node _outMatchVec_T_9 = geq(io.in.req.bits.addr, UInt<28>(251658240)) @[build/npc.fir.opt.mlir 5054:27]
    node _outMatchVec_T_10 = lt(io.in.req.bits.addr, UInt<33>(4546625536)) @[build/npc.fir.opt.mlir 5057:28]
    node _outMatchVec_T_11 = and(_outMatchVec_T_9, _outMatchVec_T_10) @[build/npc.fir.opt.mlir 5059:28]
    wire outMatchVec : UInt<1>[4] @[build/npc.fir.opt.mlir 5060:22]
    connect outMatchVec[0], _outMatchVec_T_2 @[build/npc.fir.opt.mlir 5065:7]
    connect outMatchVec[1], _outMatchVec_T_5 @[build/npc.fir.opt.mlir 5066:7]
    connect outMatchVec[2], _outMatchVec_T_8 @[build/npc.fir.opt.mlir 5067:7]
    connect outMatchVec[3], _outMatchVec_T_11 @[build/npc.fir.opt.mlir 5068:7]
    node _outSelVec_enc_T = mux(outMatchVec[3], UInt<4>(8), UInt<4>(0)) @[build/npc.fir.opt.mlir 5072:27]
    node _outSelVec_enc_T_1 = mux(outMatchVec[2], UInt<4>(4), _outSelVec_enc_T) @[build/npc.fir.opt.mlir 5075:29]
    node _outSelVec_enc_T_2 = mux(outMatchVec[1], UInt<4>(2), _outSelVec_enc_T_1) @[build/npc.fir.opt.mlir 5078:29]
    node outSelVec_enc = mux(outMatchVec[0], UInt<4>(1), _outSelVec_enc_T_2) @[build/npc.fir.opt.mlir 5081:24]
    node _outSelVec_T = bits(outSelVec_enc, 0, 0) @[build/npc.fir.opt.mlir 5083:23]
    node _outSelVec_T_1 = bits(outSelVec_enc, 1, 1) @[build/npc.fir.opt.mlir 5085:25]
    node _outSelVec_T_2 = bits(outSelVec_enc, 2, 2) @[build/npc.fir.opt.mlir 5087:25]
    node _outSelVec_T_3 = bits(outSelVec_enc, 3, 3) @[build/npc.fir.opt.mlir 5089:25]
    wire outSelVec : UInt<1>[4] @[build/npc.fir.opt.mlir 5090:20]
    connect outSelVec[0], _outSelVec_T @[build/npc.fir.opt.mlir 5095:7]
    connect outSelVec[1], _outSelVec_T_1 @[build/npc.fir.opt.mlir 5096:7]
    connect outSelVec[2], _outSelVec_T_2 @[build/npc.fir.opt.mlir 5097:7]
    connect outSelVec[3], _outSelVec_T_3 @[build/npc.fir.opt.mlir 5098:7]
    wire _outSelRespVec_WIRE : UInt<1>[4] @[build/npc.fir.opt.mlir 5099:30]
    connect _outSelRespVec_WIRE[0], UInt<1>(0) @[build/npc.fir.opt.mlir 5105:7]
    connect _outSelRespVec_WIRE[1], UInt<1>(0) @[build/npc.fir.opt.mlir 5107:7]
    connect _outSelRespVec_WIRE[2], UInt<1>(0) @[build/npc.fir.opt.mlir 5109:7]
    connect _outSelRespVec_WIRE[3], UInt<1>(0) @[build/npc.fir.opt.mlir 5111:7]
    node _outSelRespVec_T = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 5113:27]
    node _outSelRespVec_T_1 = eq(state, UInt<1>(0)) @[build/npc.fir.opt.mlir 5115:29]
    node _outSelRespVec_T_2 = and(_outSelRespVec_T, _outSelRespVec_T_1) @[build/npc.fir.opt.mlir 5117:29]
    regreset outSelRespVec : UInt<1>[4], clock, reset, _outSelRespVec_WIRE @[build/npc.fir.opt.mlir 5118:24]
    when _outSelRespVec_T_2 : @[build/npc.fir.opt.mlir 5123:7]
      connect outSelRespVec, outSelVec @[build/npc.fir.opt.mlir 5124:9]
    node reqInvalidAddr_lo = cat(outSelVec[1], outSelVec[0]) @[build/npc.fir.opt.mlir 5127:28]
    node reqInvalidAddr_hi = cat(outSelVec[3], outSelVec[2]) @[build/npc.fir.opt.mlir 5129:28]
    node _reqInvalidAddr_T = cat(reqInvalidAddr_hi, reqInvalidAddr_lo) @[build/npc.fir.opt.mlir 5131:28]
    node _reqInvalidAddr_T_1 = orr(_reqInvalidAddr_T) @[build/npc.fir.opt.mlir 5133:30]
    node _reqInvalidAddr_T_2 = eq(_reqInvalidAddr_T_1, UInt<1>(0)) @[build/npc.fir.opt.mlir 5135:30]
    node reqInvalidAddr = and(io.in.req.valid, _reqInvalidAddr_T_2) @[build/npc.fir.opt.mlir 5137:25]
    node _T = eq(UInt<1>(0), state) @[build/npc.fir.opt.mlir 5139:13]
    when _T : @[build/npc.fir.opt.mlir 5141:7]
      node _T_1 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 5143:17]
      when _T_1 : @[build/npc.fir.opt.mlir 5144:9]
        connect state, UInt<1>(1) @[build/npc.fir.opt.mlir 5146:11]
    else :
      node _T_2 = eq(UInt<1>(1), state) @[build/npc.fir.opt.mlir 5150:17]
      when _T_2 : @[build/npc.fir.opt.mlir 5151:9]
        node _T_3 = and(io.in.resp.ready, io.in.resp.valid) @[build/npc.fir.opt.mlir 5153:19]
        when _T_3 : @[build/npc.fir.opt.mlir 5154:11]
          connect state, UInt<1>(0) @[build/npc.fir.opt.mlir 5156:13]
    node _io_in_req_ready_T = mux(outSelVec[0], io.out[0].req.ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 5161:29]
    node _io_in_req_ready_T_1 = mux(outSelVec[1], io.out[1].req.ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 5163:31]
    node _io_in_req_ready_T_2 = mux(outSelVec[2], io.out[2].req.ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 5165:31]
    node _io_in_req_ready_T_3 = mux(outSelVec[3], io.out[3].req.ready, UInt<1>(0)) @[build/npc.fir.opt.mlir 5167:31]
    node _io_in_req_ready_T_4 = or(_io_in_req_ready_T, _io_in_req_ready_T_1) @[build/npc.fir.opt.mlir 5169:31]
    node _io_in_req_ready_T_5 = or(_io_in_req_ready_T_4, _io_in_req_ready_T_2) @[build/npc.fir.opt.mlir 5171:31]
    node _io_in_req_ready_T_6 = or(_io_in_req_ready_T_5, _io_in_req_ready_T_3) @[build/npc.fir.opt.mlir 5173:31]
    wire _io_in_req_ready_WIRE : UInt<1> @[build/npc.fir.opt.mlir 5174:32]
    connect _io_in_req_ready_WIRE, _io_in_req_ready_T_6 @[build/npc.fir.opt.mlir 5175:7]
    connect io.in.req.ready, _io_in_req_ready_WIRE @[build/npc.fir.opt.mlir 5176:7]
    node _io_out_0_req_valid_T = and(outSelVec[0], io.in.req.valid) @[build/npc.fir.opt.mlir 5178:32]
    node _io_out_0_req_valid_T_1 = eq(state, UInt<1>(0)) @[build/npc.fir.opt.mlir 5180:34]
    node _io_out_0_req_valid_T_2 = and(_io_out_0_req_valid_T, _io_out_0_req_valid_T_1) @[build/npc.fir.opt.mlir 5182:34]
    connect io.out[0].req.valid, _io_out_0_req_valid_T_2 @[build/npc.fir.opt.mlir 5183:7]
    connect io.out[0].req.bits, io.in.req.bits @[build/npc.fir.opt.mlir 5184:7]
    node _io_out_1_req_valid_T = and(outSelVec[1], io.in.req.valid) @[build/npc.fir.opt.mlir 5186:32]
    node _io_out_1_req_valid_T_1 = eq(state, UInt<1>(0)) @[build/npc.fir.opt.mlir 5188:34]
    node _io_out_1_req_valid_T_2 = and(_io_out_1_req_valid_T, _io_out_1_req_valid_T_1) @[build/npc.fir.opt.mlir 5190:34]
    connect io.out[1].req.valid, _io_out_1_req_valid_T_2 @[build/npc.fir.opt.mlir 5191:7]
    connect io.out[1].req.bits, io.in.req.bits @[build/npc.fir.opt.mlir 5192:7]
    node _io_out_2_req_valid_T = and(outSelVec[2], io.in.req.valid) @[build/npc.fir.opt.mlir 5194:32]
    node _io_out_2_req_valid_T_1 = eq(state, UInt<1>(0)) @[build/npc.fir.opt.mlir 5196:34]
    node _io_out_2_req_valid_T_2 = and(_io_out_2_req_valid_T, _io_out_2_req_valid_T_1) @[build/npc.fir.opt.mlir 5198:34]
    connect io.out[2].req.valid, _io_out_2_req_valid_T_2 @[build/npc.fir.opt.mlir 5199:7]
    connect io.out[2].req.bits, io.in.req.bits @[build/npc.fir.opt.mlir 5200:7]
    node _io_out_3_req_valid_T = and(outSelVec[3], io.in.req.valid) @[build/npc.fir.opt.mlir 5202:32]
    node _io_out_3_req_valid_T_1 = eq(state, UInt<1>(0)) @[build/npc.fir.opt.mlir 5204:34]
    node _io_out_3_req_valid_T_2 = and(_io_out_3_req_valid_T, _io_out_3_req_valid_T_1) @[build/npc.fir.opt.mlir 5206:34]
    connect io.out[3].req.valid, _io_out_3_req_valid_T_2 @[build/npc.fir.opt.mlir 5207:7]
    connect io.out[3].req.bits, io.in.req.bits @[build/npc.fir.opt.mlir 5208:7]
    node _io_out_0_resp_ready_T = and(outSelRespVec[0], io.in.resp.ready) @[build/npc.fir.opt.mlir 5210:33]
    node _io_out_0_resp_ready_T_1 = eq(state, UInt<1>(1)) @[build/npc.fir.opt.mlir 5212:35]
    node _io_out_0_resp_ready_T_2 = and(_io_out_0_resp_ready_T, _io_out_0_resp_ready_T_1) @[build/npc.fir.opt.mlir 5214:35]
    connect io.out[0].resp.ready, _io_out_0_resp_ready_T_2 @[build/npc.fir.opt.mlir 5215:7]
    node _io_out_1_resp_ready_T = and(outSelRespVec[1], io.in.resp.ready) @[build/npc.fir.opt.mlir 5217:33]
    node _io_out_1_resp_ready_T_1 = eq(state, UInt<1>(1)) @[build/npc.fir.opt.mlir 5219:35]
    node _io_out_1_resp_ready_T_2 = and(_io_out_1_resp_ready_T, _io_out_1_resp_ready_T_1) @[build/npc.fir.opt.mlir 5221:35]
    connect io.out[1].resp.ready, _io_out_1_resp_ready_T_2 @[build/npc.fir.opt.mlir 5222:7]
    node _io_out_2_resp_ready_T = and(outSelRespVec[2], io.in.resp.ready) @[build/npc.fir.opt.mlir 5224:33]
    node _io_out_2_resp_ready_T_1 = eq(state, UInt<1>(1)) @[build/npc.fir.opt.mlir 5226:35]
    node _io_out_2_resp_ready_T_2 = and(_io_out_2_resp_ready_T, _io_out_2_resp_ready_T_1) @[build/npc.fir.opt.mlir 5228:35]
    connect io.out[2].resp.ready, _io_out_2_resp_ready_T_2 @[build/npc.fir.opt.mlir 5229:7]
    node _io_out_3_resp_ready_T = and(outSelRespVec[3], io.in.resp.ready) @[build/npc.fir.opt.mlir 5231:33]
    node _io_out_3_resp_ready_T_1 = eq(state, UInt<1>(1)) @[build/npc.fir.opt.mlir 5233:35]
    node _io_out_3_resp_ready_T_2 = and(_io_out_3_resp_ready_T, _io_out_3_resp_ready_T_1) @[build/npc.fir.opt.mlir 5235:35]
    connect io.out[3].resp.ready, _io_out_3_resp_ready_T_2 @[build/npc.fir.opt.mlir 5236:7]
    node _io_in_resp_valid_T = mux(outSelRespVec[0], io.out[0].resp.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 5238:30]
    node _io_in_resp_valid_T_1 = mux(outSelRespVec[1], io.out[1].resp.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 5240:32]
    node _io_in_resp_valid_T_2 = mux(outSelRespVec[2], io.out[2].resp.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 5242:32]
    node _io_in_resp_valid_T_3 = mux(outSelRespVec[3], io.out[3].resp.valid, UInt<1>(0)) @[build/npc.fir.opt.mlir 5244:32]
    node _io_in_resp_valid_T_4 = or(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/npc.fir.opt.mlir 5246:32]
    node _io_in_resp_valid_T_5 = or(_io_in_resp_valid_T_4, _io_in_resp_valid_T_2) @[build/npc.fir.opt.mlir 5248:32]
    node _io_in_resp_valid_T_6 = or(_io_in_resp_valid_T_5, _io_in_resp_valid_T_3) @[build/npc.fir.opt.mlir 5250:32]
    wire _io_in_resp_valid_WIRE : UInt<1> @[build/npc.fir.opt.mlir 5251:33]
    connect _io_in_resp_valid_WIRE, _io_in_resp_valid_T_6 @[build/npc.fir.opt.mlir 5252:7]
    connect io.in.resp.valid, _io_in_resp_valid_WIRE @[build/npc.fir.opt.mlir 5253:7]
    wire _io_in_resp_bits_WIRE : { rdata : UInt<64> } @[build/npc.fir.opt.mlir 5254:32]
    node _io_in_resp_bits_T = mux(outSelRespVec[0], io.out[0].resp.bits.rdata, UInt<1>(0)) @[build/npc.fir.opt.mlir 5257:29]
    node _io_in_resp_bits_T_1 = mux(outSelRespVec[1], io.out[1].resp.bits.rdata, UInt<1>(0)) @[build/npc.fir.opt.mlir 5259:31]
    node _io_in_resp_bits_T_2 = mux(outSelRespVec[2], io.out[2].resp.bits.rdata, UInt<1>(0)) @[build/npc.fir.opt.mlir 5261:31]
    node _io_in_resp_bits_T_3 = mux(outSelRespVec[3], io.out[3].resp.bits.rdata, UInt<1>(0)) @[build/npc.fir.opt.mlir 5263:31]
    node _io_in_resp_bits_T_4 = or(_io_in_resp_bits_T, _io_in_resp_bits_T_1) @[build/npc.fir.opt.mlir 5265:31]
    node _io_in_resp_bits_T_5 = or(_io_in_resp_bits_T_4, _io_in_resp_bits_T_2) @[build/npc.fir.opt.mlir 5267:31]
    node _io_in_resp_bits_T_6 = or(_io_in_resp_bits_T_5, _io_in_resp_bits_T_3) @[build/npc.fir.opt.mlir 5269:31]
    wire _io_in_resp_bits_WIRE_1 : UInt<64> @[build/npc.fir.opt.mlir 5270:34]
    connect _io_in_resp_bits_WIRE_1, _io_in_resp_bits_T_6 @[build/npc.fir.opt.mlir 5271:7]
    connect _io_in_resp_bits_WIRE.rdata, _io_in_resp_bits_WIRE_1 @[build/npc.fir.opt.mlir 5272:7]
    connect io.in.resp.bits, _io_in_resp_bits_WIRE @[build/npc.fir.opt.mlir 5273:7]

  module SimpleBus2AXI4 : @[build/npc.fir.opt.mlir 5275:5]
    input clock : Clock @[build/npc.fir.opt.mlir 5275:46]
    input reset : Reset @[build/npc.fir.opt.mlir 5275:72]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<2>, cmd : UInt<1>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<4> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, resp : UInt<2>, id : UInt<4>, last : UInt<1> } } } } @[build/npc.fir.opt.mlir 5275:99]

    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/npc.fir.opt.mlir 5325:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/npc.fir.opt.mlir 5326:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/npc.fir.opt.mlir 5327:7]
    wire wLast : UInt<1> @[build/npc.fir.opt.mlir 5328:16]
    connect wLast, UInt<1>(1) @[build/npc.fir.opt.mlir 5331:7]
    wire rLast : UInt<1> @[build/npc.fir.opt.mlir 5332:16]
    connect rLast, UInt<1>(1) @[build/npc.fir.opt.mlir 5334:7]
    connect io.out.ar.bits.id, pad(UInt<1>(0), 4) @[build/npc.fir.opt.mlir 5338:7]
    connect io.out.ar.bits.len, pad(UInt<1>(0), 8) @[build/npc.fir.opt.mlir 5341:7]
    connect io.out.ar.bits.size, pad(io.in.req.bits.size, 3) @[build/npc.fir.opt.mlir 5343:7]
    connect io.out.ar.bits.burst, pad(UInt<1>(0), 2) @[build/npc.fir.opt.mlir 5346:7]
    connect io.out.w.bits.last, UInt<1>(1) @[build/npc.fir.opt.mlir 5348:7]
    connect io.out.aw.bits.burst, io.out.ar.bits.burst @[build/npc.fir.opt.mlir 5349:7]
    connect io.out.aw.bits.size, io.out.ar.bits.size @[build/npc.fir.opt.mlir 5350:7]
    connect io.out.aw.bits.len, io.out.ar.bits.len @[build/npc.fir.opt.mlir 5351:7]
    connect io.out.aw.bits.id, io.out.ar.bits.id @[build/npc.fir.opt.mlir 5352:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/npc.fir.opt.mlir 5353:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/npc.fir.opt.mlir 5354:7]
    wire wSend : UInt<1> @[build/npc.fir.opt.mlir 5355:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/npc.fir.opt.mlir 5357:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 5358:16]
    when _awAck_T : @[build/npc.fir.opt.mlir 5359:7]
      connect awAck, UInt<1>(1) @[build/npc.fir.opt.mlir 5361:9]
    when wSend : @[build/npc.fir.opt.mlir 5363:7]
      connect awAck, UInt<1>(0) @[build/npc.fir.opt.mlir 5365:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/npc.fir.opt.mlir 5368:18]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/npc.fir.opt.mlir 5369:15]
    when _wAck_T : @[build/npc.fir.opt.mlir 5370:7]
      connect wAck, UInt<1>(1) @[build/npc.fir.opt.mlir 5372:9]
    when wSend : @[build/npc.fir.opt.mlir 5374:7]
      connect wAck, UInt<1>(0) @[build/npc.fir.opt.mlir 5376:9]
    node _wen_T = eq(io.in.req.bits.cmd, UInt<1>(1)) @[build/npc.fir.opt.mlir 5379:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/npc.fir.opt.mlir 5381:19]
    reg wen : UInt<1>, clock @[build/npc.fir.opt.mlir 5382:14]
    when _wen_T_1 : @[build/npc.fir.opt.mlir 5383:7]
      connect wen, _wen_T @[build/npc.fir.opt.mlir 5384:9]
    node _wSend_T = and(awAck, wAck) @[build/npc.fir.opt.mlir 5387:19]
    connect wSend, _wSend_T @[build/npc.fir.opt.mlir 5388:7]
    node _io_out_ar_valid_T = eq(io.in.req.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 5390:29]
    node _io_out_ar_valid_T_1 = and(io.in.req.valid, _io_out_ar_valid_T) @[build/npc.fir.opt.mlir 5392:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_1 @[build/npc.fir.opt.mlir 5393:7]
    node _io_out_aw_valid_T = eq(io.in.req.bits.cmd, UInt<1>(1)) @[build/npc.fir.opt.mlir 5395:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/npc.fir.opt.mlir 5397:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/npc.fir.opt.mlir 5399:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/npc.fir.opt.mlir 5401:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/npc.fir.opt.mlir 5402:7]
    node _io_out_w_valid_T = eq(io.in.req.bits.cmd, UInt<1>(1)) @[build/npc.fir.opt.mlir 5404:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/npc.fir.opt.mlir 5406:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/npc.fir.opt.mlir 5408:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/npc.fir.opt.mlir 5410:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/npc.fir.opt.mlir 5411:7]
    node _io_in_req_ready_T = eq(io.in.req.bits.cmd, UInt<1>(0)) @[build/npc.fir.opt.mlir 5413:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/npc.fir.opt.mlir 5415:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/npc.fir.opt.mlir 5417:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, io.out.ar.ready, _io_in_req_ready_T_2) @[build/npc.fir.opt.mlir 5419:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/npc.fir.opt.mlir 5420:7]
    connect io.out.r.ready, io.in.resp.ready @[build/npc.fir.opt.mlir 5421:7]
    connect io.out.b.ready, io.in.resp.ready @[build/npc.fir.opt.mlir 5422:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/npc.fir.opt.mlir 5424:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/npc.fir.opt.mlir 5425:7]

  public module ysyx6 : @[build/npc.fir.opt.mlir 5427:5]
    input clock : Clock @[build/npc.fir.opt.mlir 5427:28]
    input reset : UInt<1> @[build/npc.fir.opt.mlir 5427:54]
    output io : { flip interrupt : UInt<1>, master : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<4> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, resp : UInt<2>, id : UInt<4>, last : UInt<1> } } }, flip slave : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<4> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, id : UInt<4>, len : UInt<8>, size : UInt<3>, burst : UInt<2> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, resp : UInt<2>, id : UInt<4>, last : UInt<1> } } }, debug_trap : UInt<1>, debug_trapCode : UInt<32>, debug_commit_valid : UInt<1>, debug_commit_pc : UInt<32>, debug_commit_instr : UInt<32> } @[build/npc.fir.opt.mlir 5427:83]

    inst Tile of Tile @[build/npc.fir.opt.mlir 5489:199]
    connect Tile.clock, clock @[build/npc.fir.opt.mlir 5491:7]
    connect Tile.reset, reset @[build/npc.fir.opt.mlir 5493:7]
    inst Clint of SimpleBusClint @[build/npc.fir.opt.mlir 5494:47]
    connect Clint.clock, clock @[build/npc.fir.opt.mlir 5496:7]
    connect Clint.reset, reset @[build/npc.fir.opt.mlir 5498:7]
    inst Mem of SimpleBusMem @[build/npc.fir.opt.mlir 5499:41]
    connect Mem.clock, clock @[build/npc.fir.opt.mlir 5501:7]
    connect Mem.reset, reset @[build/npc.fir.opt.mlir 5503:7]
    inst Uart of SimpleBusUart @[build/npc.fir.opt.mlir 5504:44]
    connect Uart.clock, clock @[build/npc.fir.opt.mlir 5506:7]
    connect Uart.reset, reset @[build/npc.fir.opt.mlir 5508:7]
    inst xbar of SimpleBusCrossbar @[build/npc.fir.opt.mlir 5509:44]
    connect xbar.clock, clock @[build/npc.fir.opt.mlir 5516:7]
    connect xbar.reset, reset @[build/npc.fir.opt.mlir 5518:7]
    connect Tile.io.bus.req.ready, xbar.io.in.req.ready @[build/npc.fir.opt.mlir 5523:7]
    connect xbar.io.in.req.valid, Tile.io.bus.req.valid @[build/npc.fir.opt.mlir 5526:7]
    connect xbar.io.in.req.bits, Tile.io.bus.req.bits @[build/npc.fir.opt.mlir 5529:7]
    connect xbar.io.in.resp.ready, Tile.io.bus.resp.ready @[build/npc.fir.opt.mlir 5534:7]
    connect Tile.io.bus.resp.valid, xbar.io.in.resp.valid @[build/npc.fir.opt.mlir 5537:7]
    connect Tile.io.bus.resp.bits, xbar.io.in.resp.bits @[build/npc.fir.opt.mlir 5540:7]
    connect xbar.io.out[0].req.ready, Clint.io.in.req.ready @[build/npc.fir.opt.mlir 5545:7]
    connect Clint.io.in.req.valid, xbar.io.out[0].req.valid @[build/npc.fir.opt.mlir 5548:7]
    connect Clint.io.in.req.bits, xbar.io.out[0].req.bits @[build/npc.fir.opt.mlir 5551:7]
    connect Clint.io.in.resp.ready, xbar.io.out[0].resp.ready @[build/npc.fir.opt.mlir 5556:7]
    connect xbar.io.out[0].resp.valid, Clint.io.in.resp.valid @[build/npc.fir.opt.mlir 5559:7]
    connect xbar.io.out[0].resp.bits, Clint.io.in.resp.bits @[build/npc.fir.opt.mlir 5562:7]
    connect xbar.io.out[1].req.ready, Mem.io.in.req.ready @[build/npc.fir.opt.mlir 5567:7]
    connect Mem.io.in.req.valid, xbar.io.out[1].req.valid @[build/npc.fir.opt.mlir 5570:7]
    connect Mem.io.in.req.bits, xbar.io.out[1].req.bits @[build/npc.fir.opt.mlir 5573:7]
    connect Mem.io.in.resp.ready, xbar.io.out[1].resp.ready @[build/npc.fir.opt.mlir 5578:7]
    connect xbar.io.out[1].resp.valid, Mem.io.in.resp.valid @[build/npc.fir.opt.mlir 5581:7]
    connect xbar.io.out[1].resp.bits, Mem.io.in.resp.bits @[build/npc.fir.opt.mlir 5584:7]
    connect xbar.io.out[2].req.ready, Uart.io.in.req.ready @[build/npc.fir.opt.mlir 5589:7]
    connect Uart.io.in.req.valid, xbar.io.out[2].req.valid @[build/npc.fir.opt.mlir 5592:7]
    connect Uart.io.in.req.bits, xbar.io.out[2].req.bits @[build/npc.fir.opt.mlir 5595:7]
    connect Uart.io.in.resp.ready, xbar.io.out[2].resp.ready @[build/npc.fir.opt.mlir 5600:7]
    connect xbar.io.out[2].resp.valid, Uart.io.in.resp.valid @[build/npc.fir.opt.mlir 5603:7]
    connect xbar.io.out[2].resp.bits, Uart.io.in.resp.bits @[build/npc.fir.opt.mlir 5606:7]
    inst io_master_bridge of SimpleBus2AXI4 @[build/npc.fir.opt.mlir 5607:80]
    connect io_master_bridge.clock, clock @[build/npc.fir.opt.mlir 5624:7]
    connect io_master_bridge.reset, reset @[build/npc.fir.opt.mlir 5626:7]
    connect xbar.io.out[3].req.ready, io_master_bridge.io.in.req.ready @[build/npc.fir.opt.mlir 5631:7]
    connect io_master_bridge.io.in.req.valid, xbar.io.out[3].req.valid @[build/npc.fir.opt.mlir 5634:7]
    connect io_master_bridge.io.in.req.bits, xbar.io.out[3].req.bits @[build/npc.fir.opt.mlir 5637:7]
    connect io_master_bridge.io.in.resp.ready, xbar.io.out[3].resp.ready @[build/npc.fir.opt.mlir 5642:7]
    connect xbar.io.out[3].resp.valid, io_master_bridge.io.in.resp.valid @[build/npc.fir.opt.mlir 5645:7]
    connect xbar.io.out[3].resp.bits, io_master_bridge.io.in.resp.bits @[build/npc.fir.opt.mlir 5648:7]
    connect io.master.r.ready, io_master_bridge.io.out.r.ready @[build/npc.fir.opt.mlir 5651:7]
    connect io_master_bridge.io.out.r.valid, io.master.r.valid @[build/npc.fir.opt.mlir 5654:7]
    connect io_master_bridge.io.out.r.bits, io.master.r.bits @[build/npc.fir.opt.mlir 5657:7]
    connect io.master.ar.bits, io_master_bridge.io.out.ar.bits @[build/npc.fir.opt.mlir 5658:7]
    connect io.master.ar.valid, io_master_bridge.io.out.ar.valid @[build/npc.fir.opt.mlir 5659:7]
    connect io_master_bridge.io.out.ar.ready, io.master.ar.ready @[build/npc.fir.opt.mlir 5660:7]
    connect io.master.b.ready, io_master_bridge.io.out.b.ready @[build/npc.fir.opt.mlir 5663:7]
    connect io_master_bridge.io.out.b.valid, io.master.b.valid @[build/npc.fir.opt.mlir 5666:7]
    connect io_master_bridge.io.out.b.bits, io.master.b.bits @[build/npc.fir.opt.mlir 5669:7]
    connect io.master.w.bits, io_master_bridge.io.out.w.bits @[build/npc.fir.opt.mlir 5670:7]
    connect io.master.w.valid, io_master_bridge.io.out.w.valid @[build/npc.fir.opt.mlir 5671:7]
    connect io_master_bridge.io.out.w.ready, io.master.w.ready @[build/npc.fir.opt.mlir 5672:7]
    connect io.master.aw.bits, io_master_bridge.io.out.aw.bits @[build/npc.fir.opt.mlir 5673:7]
    connect io.master.aw.valid, io_master_bridge.io.out.aw.valid @[build/npc.fir.opt.mlir 5674:7]
    connect io_master_bridge.io.out.aw.ready, io.master.aw.ready @[build/npc.fir.opt.mlir 5675:7]
    invalidate io.slave.r.bits.last @[build/npc.fir.opt.mlir 5677:7]
    invalidate io.slave.r.bits.id @[build/npc.fir.opt.mlir 5679:7]
    invalidate io.slave.r.bits.resp @[build/npc.fir.opt.mlir 5681:7]
    invalidate io.slave.r.bits.data @[build/npc.fir.opt.mlir 5683:7]
    invalidate io.slave.r.valid @[build/npc.fir.opt.mlir 5685:7]
    invalidate io.slave.ar.ready @[build/npc.fir.opt.mlir 5687:7]
    invalidate io.slave.b.bits.id @[build/npc.fir.opt.mlir 5689:7]
    invalidate io.slave.b.bits.resp @[build/npc.fir.opt.mlir 5691:7]
    invalidate io.slave.b.valid @[build/npc.fir.opt.mlir 5693:7]
    invalidate io.slave.w.ready @[build/npc.fir.opt.mlir 5695:7]
    invalidate io.slave.aw.ready @[build/npc.fir.opt.mlir 5697:7]
    wire io_debug_trap_bore : UInt<1> @[build/npc.fir.opt.mlir 5698:29]
    connect io.debug_trap, io_debug_trap_bore @[build/npc.fir.opt.mlir 5699:7]
    wire io_debug_trapCode_bore : UInt<32> @[build/npc.fir.opt.mlir 5700:33]
    connect io.debug_trapCode, io_debug_trapCode_bore @[build/npc.fir.opt.mlir 5701:7]
    wire io_debug_commit_valid_bore : UInt<1> @[build/npc.fir.opt.mlir 5702:37]
    connect io.debug_commit_valid, io_debug_commit_valid_bore @[build/npc.fir.opt.mlir 5703:7]
    wire io_debug_commit_pc_bore : UInt<32> @[build/npc.fir.opt.mlir 5704:34]
    connect io.debug_commit_pc, io_debug_commit_pc_bore @[build/npc.fir.opt.mlir 5705:7]
    wire io_debug_commit_instr_bore : UInt<32> @[build/npc.fir.opt.mlir 5706:37]
    connect io.debug_commit_instr, io_debug_commit_instr_bore @[build/npc.fir.opt.mlir 5707:7]
    connect io_debug_trap_bore, Tile.io_debug_trap_bore @[build/npc.fir.opt.mlir 5708:7]
    connect io_debug_trapCode_bore, Tile.io_debug_trapCode_bore @[build/npc.fir.opt.mlir 5709:7]
    connect io_debug_commit_valid_bore, Tile.io_debug_commit_valid_bore @[build/npc.fir.opt.mlir 5710:7]
    connect io_debug_commit_pc_bore, Tile.io_debug_commit_pc_bore @[build/npc.fir.opt.mlir 5711:7]
    connect io_debug_commit_instr_bore, Tile.io_debug_commit_instr_bore @[build/npc.fir.opt.mlir 5712:7]
