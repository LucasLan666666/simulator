FIRRTL version 4.0.0
circuit SimTop :
  module SRAMTemplate : @[build/NutShell.fir.opt.mlir 3:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 3:44]
    input reset : Reset @[build/NutShell.fir.opt.mlir 3:70]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> }[1] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } } } } } @[build/NutShell.fir.opt.mlir 3:97]

    mem array : @[build/NutShell.fir.opt.mlir 30:42]
      data-type => UInt<73>[1]
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 32:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 36:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 38:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 40:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 46:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 50:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 54:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57:22]
    regreset _resetSet : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 59:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 60:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 62:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 64:7]
      node wrap_wrap = eq(_resetSet, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 66:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 68:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 70:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 71:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 72:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 74:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 76:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 78:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 79:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 81:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 83:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 85:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 87:17]
    wire _wdataword_WIRE : UInt<73> @[build/NutShell.fir.opt.mlir 88:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 73) @[build/NutShell.fir.opt.mlir 91:7]
    node wdataword_lo = cat(io.w.req.bits.data.brIdx, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 93:23]
    node wdataword_hi_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data._type) @[build/NutShell.fir.opt.mlir 95:26]
    node wdataword_hi = cat(wdataword_hi_hi, io.w.req.bits.data.target) @[build/NutShell.fir.opt.mlir 97:23]
    node _wdataword_T = cat(wdataword_hi, wdataword_lo) @[build/NutShell.fir.opt.mlir 99:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 101:20]
    node waymask = mux(resetState, UInt<1>(1), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 103:18]
    wire wdata : UInt<73>[1] @[build/NutShell.fir.opt.mlir 104:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 106:7]
    when wen : @[build/NutShell.fir.opt.mlir 107:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 109:15]
      node _T_1 = or(setIdx, UInt<9>(0)) @[build/NutShell.fir.opt.mlir 111:17]
      node _T_2 = bits(_T_1, 8, 0) @[build/NutShell.fir.opt.mlir 113:17]
      connect array.MPORT.addr, _T_2 @[build/NutShell.fir.opt.mlir 114:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 115:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 116:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 118:9]
      when _T : @[build/NutShell.fir.opt.mlir 119:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 120:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 121:11]
    wire _rdata_WIRE : UInt<9> @[build/NutShell.fir.opt.mlir 124:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 126:7]
    when realRen : @[build/NutShell.fir.opt.mlir 127:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 128:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 129:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 130:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 131:9]
    reg rdata_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 133:20]
    connect rdata_REG, realRen @[build/NutShell.fir.opt.mlir 134:7]
    wire _rdata_WIRE_1 : UInt<73>[1] @[build/NutShell.fir.opt.mlir 135:24]
    connect _rdata_WIRE_1[0], UInt<73>(0) @[build/NutShell.fir.opt.mlir 139:7]
    regreset rdata_r : UInt<73>[1], clock, reset, _rdata_WIRE_1 @[build/NutShell.fir.opt.mlir 140:18]
    when rdata_REG : @[build/NutShell.fir.opt.mlir 141:7]
      connect rdata_r, array.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 142:9]
    node _rdata_T = mux(rdata_REG, array.rdata_MPORT.data, rdata_r) @[build/NutShell.fir.opt.mlir 145:19]
    wire rdata_0 : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 147:18]
    wire _rdata_WIRE_2 : UInt<73> @[build/NutShell.fir.opt.mlir 153:24]
    connect _rdata_WIRE_2, _rdata_T[0] @[build/NutShell.fir.opt.mlir 154:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 156:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 157:7]
    node _rdata_T_2 = bits(_rdata_WIRE_2, 3, 1) @[build/NutShell.fir.opt.mlir 159:21]
    connect rdata_0.brIdx, _rdata_T_2 @[build/NutShell.fir.opt.mlir 160:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 42, 4) @[build/NutShell.fir.opt.mlir 162:21]
    connect rdata_0.target, _rdata_T_3 @[build/NutShell.fir.opt.mlir 163:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 44, 43) @[build/NutShell.fir.opt.mlir 165:21]
    connect rdata_0._type, _rdata_T_4 @[build/NutShell.fir.opt.mlir 166:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 72, 45) @[build/NutShell.fir.opt.mlir 168:21]
    connect rdata_0.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 169:7]
    wire _WIRE : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> }[1] @[build/NutShell.fir.opt.mlir 170:16]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 177:7]
    connect _WIRE[0].brIdx, rdata_0.brIdx @[build/NutShell.fir.opt.mlir 178:7]
    connect _WIRE[0].target, rdata_0.target @[build/NutShell.fir.opt.mlir 179:7]
    connect _WIRE[0]._type, rdata_0._type @[build/NutShell.fir.opt.mlir 180:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 181:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 182:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 184:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 186:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 188:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 189:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 191:7]

  extmodule LogPerfHelper : @[build/NutShell.fir.opt.mlir 193:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 193:49]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 193:78]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 193:110]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 193:138]
    defname = LogPerfHelper

  module BPU_inorder : @[build/NutShell.fir.opt.mlir 194:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 194:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 194:69]
    output io : { in : { flip pc : { valid : UInt<1>, bits : UInt<39> } }, out : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip flush : UInt<1>, brIdx : UInt<3>, crosslineJump : UInt<1> } @[build/NutShell.fir.opt.mlir 194:96]
    input req__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 194:305]
    input flushTLB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 194:489]
    input flushBTB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 194:526]

    regreset flush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 215:16]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 216:7]
      connect flush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 218:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 221:7]
      connect flush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 223:9]
    inst btb of SRAMTemplate @[build/NutShell.fir.opt.mlir 225:41]
    connect btb.clock, clock @[build/NutShell.fir.opt.mlir 246:7]
    connect btb.reset, reset @[build/NutShell.fir.opt.mlir 247:7]
    wire flushBTB : UInt<1> @[build/NutShell.fir.opt.mlir 248:19]
    connect flushBTB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 250:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 251:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 253:7]
    node _btb_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 255:23]
    node _btb_reset_T_1 = or(flushBTB, flushTLB) @[build/NutShell.fir.opt.mlir 257:25]
    node _btb_reset_T_2 = or(_btb_reset_T, _btb_reset_T_1) @[build/NutShell.fir.opt.mlir 259:25]
    connect btb.reset, _btb_reset_T_2 @[build/NutShell.fir.opt.mlir 261:7]
    node _T = asUInt(reset) @[build/NutShell.fir.opt.mlir 263:13]
    node _T_1 = or(flushBTB, flushTLB) @[build/NutShell.fir.opt.mlir 265:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 267:15]
    inst LogPerfHelper of LogPerfHelper @[build/NutShell.fir.opt.mlir 268:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 269:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 274:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 275:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 276:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 277:7]
    node _T_3 = and(_T_2, c_control.logEnable) @[build/NutShell.fir.opt.mlir 279:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 280:7]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 282:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 284:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 285:9]
        skip @[build/NutShell.fir.opt.mlir 286:11]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 289:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 291:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 292:9]
        skip @[build/NutShell.fir.opt.mlir 293:11]
    connect btb.io.r.req.valid, io.in.pc.valid @[build/NutShell.fir.opt.mlir 296:7]
    wire _btb_io_r_req_bits_setIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 297:41]
    connect _btb_io_r_req_bits_setIdx_WIRE, io.in.pc.bits @[build/NutShell.fir.opt.mlir 298:7]
    wire _btb_io_r_req_bits_setIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 299:43]
    wire _btb_io_r_req_bits_setIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 303:43]
    connect _btb_io_r_req_bits_setIdx_WIRE_2, _btb_io_r_req_bits_setIdx_WIRE @[build/NutShell.fir.opt.mlir 304:7]
    node _btb_io_r_req_bits_setIdx_T = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 306:38]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.pad, _btb_io_r_req_bits_setIdx_T @[build/NutShell.fir.opt.mlir 307:7]
    node _btb_io_r_req_bits_setIdx_T_1 = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 309:40]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.idx, _btb_io_r_req_bits_setIdx_T_1 @[build/NutShell.fir.opt.mlir 310:7]
    node _btb_io_r_req_bits_setIdx_T_2 = bits(_btb_io_r_req_bits_setIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 312:40]
    connect _btb_io_r_req_bits_setIdx_WIRE_1.tag, _btb_io_r_req_bits_setIdx_T_2 @[build/NutShell.fir.opt.mlir 313:7]
    connect btb.io.r.req.bits.setIdx, _btb_io_r_req_bits_setIdx_WIRE_1.idx @[build/NutShell.fir.opt.mlir 314:7]
    wire btbRead : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 315:18]
    connect btbRead, btb.io.r.resp.data[0] @[build/NutShell.fir.opt.mlir 321:7]
    reg pcLatch : UInt<39>, clock @[build/NutShell.fir.opt.mlir 322:18]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 323:7]
      connect pcLatch, io.in.pc.bits @[build/NutShell.fir.opt.mlir 324:9]
    wire _btbHit_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 326:23]
    connect _btbHit_WIRE, pcLatch @[build/NutShell.fir.opt.mlir 327:7]
    wire _btbHit_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 328:25]
    wire _btbHit_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 332:25]
    connect _btbHit_WIRE_2, _btbHit_WIRE @[build/NutShell.fir.opt.mlir 333:7]
    node _btbHit_T = bits(_btbHit_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 335:20]
    connect _btbHit_WIRE_1.pad, _btbHit_T @[build/NutShell.fir.opt.mlir 336:7]
    node _btbHit_T_1 = bits(_btbHit_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 338:22]
    connect _btbHit_WIRE_1.idx, _btbHit_T_1 @[build/NutShell.fir.opt.mlir 339:7]
    node _btbHit_T_2 = bits(_btbHit_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 341:22]
    connect _btbHit_WIRE_1.tag, _btbHit_T_2 @[build/NutShell.fir.opt.mlir 342:7]
    node _btbHit_T_3 = eq(btbRead.tag, _btbHit_WIRE_1.tag) @[build/NutShell.fir.opt.mlir 344:22]
    node _btbHit_T_4 = and(btbRead.valid, _btbHit_T_3) @[build/NutShell.fir.opt.mlir 346:22]
    node _btbHit_T_5 = eq(flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 348:22]
    node _btbHit_T_6 = and(_btbHit_T_4, _btbHit_T_5) @[build/NutShell.fir.opt.mlir 350:22]
    regreset btbHit_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 351:21]
    connect btbHit_REG, btb.io.r.req.ready @[build/NutShell.fir.opt.mlir 352:7]
    node _btbHit_T_7 = and(_btbHit_T_6, btbHit_REG) @[build/NutShell.fir.opt.mlir 354:22]
    node _btbHit_T_8 = bits(pcLatch, 1, 1) @[build/NutShell.fir.opt.mlir 356:22]
    node _btbHit_T_9 = bits(btbRead.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 358:22]
    node _btbHit_T_10 = and(_btbHit_T_8, _btbHit_T_9) @[build/NutShell.fir.opt.mlir 360:23]
    node _btbHit_T_11 = eq(_btbHit_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 362:23]
    node btbHit = and(_btbHit_T_7, _btbHit_T_11) @[build/NutShell.fir.opt.mlir 364:17]
    node _crosslineJump_T = bits(btbRead.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 366:27]
    node crosslineJump = and(_crosslineJump_T, btbHit) @[build/NutShell.fir.opt.mlir 368:24]
    connect io.crosslineJump, crosslineJump @[build/NutShell.fir.opt.mlir 369:7]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 371:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 373:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 375:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 376:7]
    wire _WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 377:16]
    connect _WIRE, pcLatch @[build/NutShell.fir.opt.mlir 378:7]
    wire _WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 379:18]
    wire _WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 383:18]
    connect _WIRE_2, _WIRE @[build/NutShell.fir.opt.mlir 384:7]
    node _T_8 = bits(_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 386:15]
    connect _WIRE_1.pad, _T_8 @[build/NutShell.fir.opt.mlir 387:7]
    node _T_9 = bits(_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 389:15]
    connect _WIRE_1.idx, _T_9 @[build/NutShell.fir.opt.mlir 390:7]
    node _T_10 = bits(_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 392:16]
    connect _WIRE_1.tag, _T_10 @[build/NutShell.fir.opt.mlir 393:7]
    wire _WIRE_3 : UInt<39> @[build/NutShell.fir.opt.mlir 394:18]
    connect _WIRE_3, pcLatch @[build/NutShell.fir.opt.mlir 395:7]
    wire _WIRE_4 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 396:18]
    wire _WIRE_5 : UInt<39> @[build/NutShell.fir.opt.mlir 400:18]
    connect _WIRE_5, _WIRE_3 @[build/NutShell.fir.opt.mlir 401:7]
    node _T_11 = bits(_WIRE_5, 1, 0) @[build/NutShell.fir.opt.mlir 403:16]
    connect _WIRE_4.pad, _T_11 @[build/NutShell.fir.opt.mlir 404:7]
    node _T_12 = bits(_WIRE_5, 10, 2) @[build/NutShell.fir.opt.mlir 406:16]
    connect _WIRE_4.idx, _T_12 @[build/NutShell.fir.opt.mlir 407:7]
    node _T_13 = bits(_WIRE_5, 38, 11) @[build/NutShell.fir.opt.mlir 409:16]
    connect _WIRE_4.tag, _T_13 @[build/NutShell.fir.opt.mlir 410:7]
    node _T_14 = and(btbHit, c_control.logEnable) @[build/NutShell.fir.opt.mlir 412:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 413:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 415:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 417:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 418:9]
        skip @[build/NutShell.fir.opt.mlir 419:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 422:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 424:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 425:9]
        skip @[build/NutShell.fir.opt.mlir 426:11]
    node _T_19 = mux(io.out.valid, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 432:16]
    node _T_20 = cat(crosslineJump, _T_19) @[build/NutShell.fir.opt.mlir 434:16]
    node _T_21 = and(btbHit, c_control.logEnable) @[build/NutShell.fir.opt.mlir 436:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 437:7]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 439:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 441:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 442:9]
        skip @[build/NutShell.fir.opt.mlir 443:11]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 446:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 448:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 449:9]
        skip @[build/NutShell.fir.opt.mlir 450:11]
    regreset phtResetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 453:24]
    regreset phtResetIdx : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 455:22]
    wire phtResetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 456:25]
    connect phtResetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 458:7]
    when phtResetState : @[build/NutShell.fir.opt.mlir 460:7]
      node wrap_wrap = eq(phtResetIdx, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 462:22]
      node _wrap_value_T = add(phtResetIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 464:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 466:28]
      connect phtResetIdx, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 467:9]
      connect phtResetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 468:9]
    when phtResetFinish : @[build/NutShell.fir.opt.mlir 470:7]
      connect phtResetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 472:9]
    mem pht : @[build/NutShell.fir.opt.mlir 474:57]
      data-type => UInt<2>
      depth => 512
      read-latency => 0
      write-latency => 1
      reader => cnt_MPORT
      reader => phtTaken_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate pht.MPORT.addr @[build/NutShell.fir.opt.mlir 476:7]
    connect pht.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 478:7]
    invalidate pht.MPORT.clk @[build/NutShell.fir.opt.mlir 480:7]
    invalidate pht.MPORT.data @[build/NutShell.fir.opt.mlir 482:7]
    invalidate pht.MPORT.mask @[build/NutShell.fir.opt.mlir 484:7]
    invalidate pht.cnt_MPORT.addr @[build/NutShell.fir.opt.mlir 486:7]
    connect pht.cnt_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 488:7]
    invalidate pht.cnt_MPORT.clk @[build/NutShell.fir.opt.mlir 490:7]
    invalidate pht.phtTaken_MPORT.addr @[build/NutShell.fir.opt.mlir 493:7]
    connect pht.phtTaken_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 495:7]
    invalidate pht.phtTaken_MPORT.clk @[build/NutShell.fir.opt.mlir 497:7]
    wire _phtTaken_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 499:25]
    connect _phtTaken_WIRE, io.in.pc.bits @[build/NutShell.fir.opt.mlir 500:7]
    wire _phtTaken_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 501:27]
    wire _phtTaken_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 505:27]
    connect _phtTaken_WIRE_2, _phtTaken_WIRE @[build/NutShell.fir.opt.mlir 506:7]
    node _phtTaken_T = bits(_phtTaken_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 508:22]
    connect _phtTaken_WIRE_1.pad, _phtTaken_T @[build/NutShell.fir.opt.mlir 509:7]
    node _phtTaken_T_1 = bits(_phtTaken_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 511:24]
    connect _phtTaken_WIRE_1.idx, _phtTaken_T_1 @[build/NutShell.fir.opt.mlir 512:7]
    node _phtTaken_T_2 = bits(_phtTaken_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 514:24]
    connect _phtTaken_WIRE_1.tag, _phtTaken_T_2 @[build/NutShell.fir.opt.mlir 515:7]
    connect pht.phtTaken_MPORT.addr, _phtTaken_WIRE_1.idx @[build/NutShell.fir.opt.mlir 516:7]
    connect pht.phtTaken_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 517:7]
    connect pht.phtTaken_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 518:7]
    node _phtTaken_T_3 = mux(phtResetState, UInt<1>(0), pht.phtTaken_MPORT.data) @[build/NutShell.fir.opt.mlir 520:24]
    node _phtTaken_T_4 = bits(_phtTaken_T_3, 1, 1) @[build/NutShell.fir.opt.mlir 522:24]
    reg phtTaken : UInt<1>, clock @[build/NutShell.fir.opt.mlir 523:19]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 524:7]
      connect phtTaken, _phtTaken_T_4 @[build/NutShell.fir.opt.mlir 525:9]
    regreset rasResetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 527:24]
    regreset rasResetIdx : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 529:22]
    wire rasResetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 530:25]
    connect rasResetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 532:7]
    when rasResetState : @[build/NutShell.fir.opt.mlir 534:7]
      node wrap_wrap_1 = eq(rasResetIdx, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 536:24]
      node _wrap_value_T_2 = add(rasResetIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 538:28]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[build/NutShell.fir.opt.mlir 540:28]
      connect rasResetIdx, _wrap_value_T_3 @[build/NutShell.fir.opt.mlir 541:9]
      connect rasResetFinish, wrap_wrap_1 @[build/NutShell.fir.opt.mlir 542:9]
    when rasResetFinish : @[build/NutShell.fir.opt.mlir 544:7]
      connect rasResetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 546:9]
    mem ras : @[build/NutShell.fir.opt.mlir 548:42]
      data-type => UInt<39>
      depth => 16
      read-latency => 0
      write-latency => 1
      reader => rasRead_MPORT
      writer => MPORT_1
      read-under-write => undefined
    invalidate ras.MPORT_1.addr @[build/NutShell.fir.opt.mlir 550:7]
    connect ras.MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 552:7]
    invalidate ras.MPORT_1.clk @[build/NutShell.fir.opt.mlir 554:7]
    invalidate ras.MPORT_1.data @[build/NutShell.fir.opt.mlir 556:7]
    invalidate ras.MPORT_1.mask @[build/NutShell.fir.opt.mlir 558:7]
    invalidate ras.rasRead_MPORT.addr @[build/NutShell.fir.opt.mlir 560:7]
    connect ras.rasRead_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 562:7]
    invalidate ras.rasRead_MPORT.clk @[build/NutShell.fir.opt.mlir 564:7]
    regreset sp_value : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 566:19]
    connect ras.rasRead_MPORT.addr, sp_value @[build/NutShell.fir.opt.mlir 567:7]
    connect ras.rasRead_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 568:7]
    connect ras.rasRead_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 569:7]
    node rasRead = mux(rasResetState, UInt<1>(0), ras.rasRead_MPORT.data) @[build/NutShell.fir.opt.mlir 571:18]
    reg rasTarget : UInt<39>, clock @[build/NutShell.fir.opt.mlir 572:20]
    when io.in.pc.valid : @[build/NutShell.fir.opt.mlir 573:7]
      connect rasTarget, rasRead @[build/NutShell.fir.opt.mlir 574:9]
    wire _req_WIRE : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 576:20]
    connect _req_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 586:7]
    connect _req_WIRE.btbType, UInt<2>(0) @[build/NutShell.fir.opt.mlir 588:7]
    connect _req_WIRE.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 591:7]
    connect _req_WIRE.actualTaken, UInt<1>(0) @[build/NutShell.fir.opt.mlir 593:7]
    connect _req_WIRE.actualTarget, UInt<39>(0) @[build/NutShell.fir.opt.mlir 596:7]
    connect _req_WIRE.isMissPredict, UInt<1>(0) @[build/NutShell.fir.opt.mlir 598:7]
    connect _req_WIRE.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 600:7]
    connect _req_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 602:7]
    wire req : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 603:14]
    connect req, _req_WIRE @[build/NutShell.fir.opt.mlir 611:7]
    wire _btbWrite_WIRE : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 612:25]
    connect _btbWrite_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 619:7]
    connect _btbWrite_WIRE.brIdx, UInt<3>(0) @[build/NutShell.fir.opt.mlir 622:7]
    connect _btbWrite_WIRE.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 624:7]
    connect _btbWrite_WIRE._type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 626:7]
    connect _btbWrite_WIRE.tag, UInt<28>(0) @[build/NutShell.fir.opt.mlir 629:7]
    wire btbWrite : { tag : UInt<28>, _type : UInt<2>, target : UInt<39>, brIdx : UInt<3>, valid : UInt<1> } @[build/NutShell.fir.opt.mlir 630:19]
    connect btbWrite, _btbWrite_WIRE @[build/NutShell.fir.opt.mlir 636:7]
    wire _WIRE_6 : UInt<39> @[build/NutShell.fir.opt.mlir 637:18]
    connect _WIRE_6, req.pc @[build/NutShell.fir.opt.mlir 638:7]
    wire _WIRE_7 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 639:18]
    wire _WIRE_8 : UInt<39> @[build/NutShell.fir.opt.mlir 643:18]
    connect _WIRE_8, _WIRE_6 @[build/NutShell.fir.opt.mlir 644:7]
    node _T_26 = bits(_WIRE_8, 1, 0) @[build/NutShell.fir.opt.mlir 646:16]
    connect _WIRE_7.pad, _T_26 @[build/NutShell.fir.opt.mlir 647:7]
    node _T_27 = bits(_WIRE_8, 10, 2) @[build/NutShell.fir.opt.mlir 649:16]
    connect _WIRE_7.idx, _T_27 @[build/NutShell.fir.opt.mlir 650:7]
    node _T_28 = bits(_WIRE_8, 38, 11) @[build/NutShell.fir.opt.mlir 652:16]
    connect _WIRE_7.tag, _T_28 @[build/NutShell.fir.opt.mlir 653:7]
    wire _WIRE_9 : UInt<39> @[build/NutShell.fir.opt.mlir 654:18]
    connect _WIRE_9, req.pc @[build/NutShell.fir.opt.mlir 655:7]
    wire _WIRE_10 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 656:19]
    wire _WIRE_11 : UInt<39> @[build/NutShell.fir.opt.mlir 660:19]
    connect _WIRE_11, _WIRE_9 @[build/NutShell.fir.opt.mlir 661:7]
    node _T_29 = bits(_WIRE_11, 1, 0) @[build/NutShell.fir.opt.mlir 663:16]
    connect _WIRE_10.pad, _T_29 @[build/NutShell.fir.opt.mlir 664:7]
    node _T_30 = bits(_WIRE_11, 10, 2) @[build/NutShell.fir.opt.mlir 666:16]
    connect _WIRE_10.idx, _T_30 @[build/NutShell.fir.opt.mlir 667:7]
    node _T_31 = bits(_WIRE_11, 38, 11) @[build/NutShell.fir.opt.mlir 669:16]
    connect _WIRE_10.tag, _T_31 @[build/NutShell.fir.opt.mlir 670:7]
    node _T_32 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 672:16]
    node _T_33 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 674:16]
    node _T_34 = not(_T_33) @[build/NutShell.fir.opt.mlir 676:16]
    node _T_35 = cat(_T_32, _T_34) @[build/NutShell.fir.opt.mlir 678:16]
    node _T_36 = and(req.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 680:16]
    when _T_36 : @[build/NutShell.fir.opt.mlir 681:7]
      node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 683:18]
      node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 685:18]
      when _T_38 : @[build/NutShell.fir.opt.mlir 686:9]
        skip @[build/NutShell.fir.opt.mlir 687:11]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 690:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 692:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 693:9]
        skip @[build/NutShell.fir.opt.mlir 694:11]
    wire _btbWrite_tag_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 697:29]
    connect _btbWrite_tag_WIRE, req.pc @[build/NutShell.fir.opt.mlir 698:7]
    wire _btbWrite_tag_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 699:31]
    wire _btbWrite_tag_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 703:31]
    connect _btbWrite_tag_WIRE_2, _btbWrite_tag_WIRE @[build/NutShell.fir.opt.mlir 704:7]
    node _btbWrite_tag_T = bits(_btbWrite_tag_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 706:26]
    connect _btbWrite_tag_WIRE_1.pad, _btbWrite_tag_T @[build/NutShell.fir.opt.mlir 707:7]
    node _btbWrite_tag_T_1 = bits(_btbWrite_tag_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 709:28]
    connect _btbWrite_tag_WIRE_1.idx, _btbWrite_tag_T_1 @[build/NutShell.fir.opt.mlir 710:7]
    node _btbWrite_tag_T_2 = bits(_btbWrite_tag_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 712:28]
    connect _btbWrite_tag_WIRE_1.tag, _btbWrite_tag_T_2 @[build/NutShell.fir.opt.mlir 713:7]
    connect btbWrite.tag, _btbWrite_tag_WIRE_1.tag @[build/NutShell.fir.opt.mlir 714:7]
    connect btbWrite.target, req.actualTarget @[build/NutShell.fir.opt.mlir 715:7]
    connect btbWrite._type, req.btbType @[build/NutShell.fir.opt.mlir 716:7]
    node _btbWrite_brIdx_T = bits(req.pc, 2, 0) @[build/NutShell.fir.opt.mlir 718:28]
    node _btbWrite_brIdx_T_1 = eq(_btbWrite_brIdx_T, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 721:30]
    node _btbWrite_brIdx_T_2 = eq(req.isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 723:30]
    node _btbWrite_brIdx_T_3 = and(_btbWrite_brIdx_T_1, _btbWrite_brIdx_T_2) @[build/NutShell.fir.opt.mlir 725:30]
    node _btbWrite_brIdx_T_4 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 727:30]
    node _btbWrite_brIdx_T_5 = bits(req.pc, 1, 1) @[build/NutShell.fir.opt.mlir 729:30]
    node _btbWrite_brIdx_T_6 = not(_btbWrite_brIdx_T_5) @[build/NutShell.fir.opt.mlir 731:30]
    node btbWrite_brIdx_hi = cat(_btbWrite_brIdx_T_3, _btbWrite_brIdx_T_4) @[build/NutShell.fir.opt.mlir 733:28]
    node _btbWrite_brIdx_T_7 = cat(btbWrite_brIdx_hi, _btbWrite_brIdx_T_6) @[build/NutShell.fir.opt.mlir 735:30]
    connect btbWrite.brIdx, _btbWrite_brIdx_T_7 @[build/NutShell.fir.opt.mlir 736:7]
    connect btbWrite.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 738:7]
    node _btb_io_w_req_valid_T = and(req.isMissPredict, req.valid) @[build/NutShell.fir.opt.mlir 740:32]
    connect btb.io.w.req.valid, _btb_io_w_req_valid_T @[build/NutShell.fir.opt.mlir 741:7]
    wire _btb_io_w_req_bits_setIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 742:41]
    connect _btb_io_w_req_bits_setIdx_WIRE, req.pc @[build/NutShell.fir.opt.mlir 743:7]
    wire _btb_io_w_req_bits_setIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 744:43]
    wire _btb_io_w_req_bits_setIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 748:43]
    connect _btb_io_w_req_bits_setIdx_WIRE_2, _btb_io_w_req_bits_setIdx_WIRE @[build/NutShell.fir.opt.mlir 749:7]
    node _btb_io_w_req_bits_setIdx_T = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 751:38]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.pad, _btb_io_w_req_bits_setIdx_T @[build/NutShell.fir.opt.mlir 752:7]
    node _btb_io_w_req_bits_setIdx_T_1 = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 754:40]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.idx, _btb_io_w_req_bits_setIdx_T_1 @[build/NutShell.fir.opt.mlir 755:7]
    node _btb_io_w_req_bits_setIdx_T_2 = bits(_btb_io_w_req_bits_setIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 757:40]
    connect _btb_io_w_req_bits_setIdx_WIRE_1.tag, _btb_io_w_req_bits_setIdx_T_2 @[build/NutShell.fir.opt.mlir 758:7]
    connect btb.io.w.req.bits.setIdx, _btb_io_w_req_bits_setIdx_WIRE_1.idx @[build/NutShell.fir.opt.mlir 759:7]
    connect btb.io.w.req.bits.data.valid, btbWrite.valid @[build/NutShell.fir.opt.mlir 760:7]
    connect btb.io.w.req.bits.data.brIdx, btbWrite.brIdx @[build/NutShell.fir.opt.mlir 761:7]
    connect btb.io.w.req.bits.data.target, btbWrite.target @[build/NutShell.fir.opt.mlir 762:7]
    connect btb.io.w.req.bits.data._type, btbWrite._type @[build/NutShell.fir.opt.mlir 763:7]
    connect btb.io.w.req.bits.data.tag, btbWrite.tag @[build/NutShell.fir.opt.mlir 764:7]
    wire _cnt_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 765:20]
    connect _cnt_WIRE, req.pc @[build/NutShell.fir.opt.mlir 766:7]
    wire _cnt_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 767:22]
    wire _cnt_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 771:22]
    connect _cnt_WIRE_2, _cnt_WIRE @[build/NutShell.fir.opt.mlir 772:7]
    node _cnt_T = bits(_cnt_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 774:17]
    connect _cnt_WIRE_1.pad, _cnt_T @[build/NutShell.fir.opt.mlir 775:7]
    node _cnt_T_1 = bits(_cnt_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 777:19]
    connect _cnt_WIRE_1.idx, _cnt_T_1 @[build/NutShell.fir.opt.mlir 778:7]
    node _cnt_T_2 = bits(_cnt_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 780:19]
    connect _cnt_WIRE_1.tag, _cnt_T_2 @[build/NutShell.fir.opt.mlir 781:7]
    connect pht.cnt_MPORT.addr, _cnt_WIRE_1.idx @[build/NutShell.fir.opt.mlir 782:7]
    connect pht.cnt_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 783:7]
    connect pht.cnt_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 784:7]
    node _cnt_T_3 = mux(phtResetState, UInt<1>(0), pht.cnt_MPORT.data) @[build/NutShell.fir.opt.mlir 786:19]
    reg cnt : UInt, clock @[build/NutShell.fir.opt.mlir 787:14]
    connect cnt, _cnt_T_3 @[build/NutShell.fir.opt.mlir 788:7]
    reg reqLatch : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 789:19]
    connect reqLatch, req @[build/NutShell.fir.opt.mlir 794:7]
    node _newCnt_T = add(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 796:20]
    node _newCnt_T_1 = tail(_newCnt_T, 1) @[build/NutShell.fir.opt.mlir 798:22]
    node _newCnt_T_2 = sub(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 800:22]
    node _newCnt_T_3 = tail(_newCnt_T_2, 1) @[build/NutShell.fir.opt.mlir 802:22]
    node newCnt = mux(reqLatch.actualTaken, _newCnt_T_1, _newCnt_T_3) @[build/NutShell.fir.opt.mlir 804:17]
    node _phtWen_T = neq(cnt, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 806:20]
    node _phtWen_T_1 = and(reqLatch.actualTaken, _phtWen_T) @[build/NutShell.fir.opt.mlir 808:22]
    node _phtWen_T_2 = eq(reqLatch.actualTaken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 810:22]
    node _phtWen_T_3 = neq(cnt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 812:22]
    node _phtWen_T_4 = and(_phtWen_T_2, _phtWen_T_3) @[build/NutShell.fir.opt.mlir 814:22]
    node phtWen = or(_phtWen_T_1, _phtWen_T_4) @[build/NutShell.fir.opt.mlir 816:17]
    wire _phtIdx_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 817:23]
    connect _phtIdx_WIRE, reqLatch.pc @[build/NutShell.fir.opt.mlir 818:7]
    wire _phtIdx_WIRE_1 : { tag : UInt<28>, idx : UInt<9>, pad : UInt<2> } @[build/NutShell.fir.opt.mlir 819:25]
    wire _phtIdx_WIRE_2 : UInt<39> @[build/NutShell.fir.opt.mlir 823:25]
    connect _phtIdx_WIRE_2, _phtIdx_WIRE @[build/NutShell.fir.opt.mlir 824:7]
    node _phtIdx_T = bits(_phtIdx_WIRE_2, 1, 0) @[build/NutShell.fir.opt.mlir 826:20]
    connect _phtIdx_WIRE_1.pad, _phtIdx_T @[build/NutShell.fir.opt.mlir 827:7]
    node _phtIdx_T_1 = bits(_phtIdx_WIRE_2, 10, 2) @[build/NutShell.fir.opt.mlir 829:22]
    connect _phtIdx_WIRE_1.idx, _phtIdx_T_1 @[build/NutShell.fir.opt.mlir 830:7]
    node _phtIdx_T_2 = bits(_phtIdx_WIRE_2, 38, 11) @[build/NutShell.fir.opt.mlir 832:22]
    connect _phtIdx_WIRE_1.tag, _phtIdx_T_2 @[build/NutShell.fir.opt.mlir 833:7]
    node phtIdx = mux(phtResetState, phtResetIdx, _phtIdx_WIRE_1.idx) @[build/NutShell.fir.opt.mlir 835:17]
    node phtWdata = mux(phtResetState, UInt<1>(0), newCnt) @[build/NutShell.fir.opt.mlir 837:19]
    node _phtRealWen_T = bits(reqLatch.fuOpType, 3, 3) @[build/NutShell.fir.opt.mlir 839:24]
    node _phtRealWen_T_1 = eq(_phtRealWen_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 841:26]
    node _phtRealWen_T_2 = and(reqLatch.valid, _phtRealWen_T_1) @[build/NutShell.fir.opt.mlir 843:26]
    node _phtRealWen_T_3 = and(_phtRealWen_T_2, phtWen) @[build/NutShell.fir.opt.mlir 845:26]
    node phtRealWen = or(phtResetState, _phtRealWen_T_3) @[build/NutShell.fir.opt.mlir 847:21]
    when phtRealWen : @[build/NutShell.fir.opt.mlir 848:7]
      connect pht.MPORT.addr, phtIdx @[build/NutShell.fir.opt.mlir 849:9]
      connect pht.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 850:9]
      connect pht.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 851:9]
      connect pht.MPORT.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 852:9]
      connect pht.MPORT.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 853:9]
      connect pht.MPORT.data, phtWdata @[build/NutShell.fir.opt.mlir 854:9]
    node _rasIdx_T = add(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 857:20]
    node _rasIdx_T_1 = tail(_rasIdx_T, 1) @[build/NutShell.fir.opt.mlir 859:22]
    node rasIdx = mux(rasResetState, rasResetIdx, _rasIdx_T_1) @[build/NutShell.fir.opt.mlir 861:17]
    node _rasWdata_T = mux(req.isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 865:22]
    node _rasWdata_T_1 = add(req.pc, _rasWdata_T) @[build/NutShell.fir.opt.mlir 867:24]
    node _rasWdata_T_2 = tail(_rasWdata_T_1, 1) @[build/NutShell.fir.opt.mlir 869:24]
    node rasWdata = mux(rasResetState, UInt<1>(0), _rasWdata_T_2) @[build/NutShell.fir.opt.mlir 871:19]
    node _rasWen_T = eq(req.fuOpType, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 874:20]
    node _rasWen_T_1 = and(req.valid, _rasWen_T) @[build/NutShell.fir.opt.mlir 876:22]
    node rasWen = or(rasResetState, _rasWen_T_1) @[build/NutShell.fir.opt.mlir 878:17]
    when rasWen : @[build/NutShell.fir.opt.mlir 879:7]
      connect ras.MPORT_1.addr, rasIdx @[build/NutShell.fir.opt.mlir 880:9]
      connect ras.MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 881:9]
      connect ras.MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 882:9]
      connect ras.MPORT_1.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 883:9]
      connect ras.MPORT_1.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 884:9]
      connect ras.MPORT_1.data, rasWdata @[build/NutShell.fir.opt.mlir 885:9]
    when req.valid : @[build/NutShell.fir.opt.mlir 888:7]
      node _T_41 = eq(req.fuOpType, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 890:18]
      when _T_41 : @[build/NutShell.fir.opt.mlir 891:9]
        node _value_T = add(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 893:23]
        node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 895:25]
        connect sp_value, _value_T_1 @[build/NutShell.fir.opt.mlir 896:11]
      else :
        node _T_42 = eq(req.fuOpType, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 899:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 900:11]
          node _value_T_2 = sub(sp_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 902:27]
          node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 904:27]
          connect sp_value, _value_T_3 @[build/NutShell.fir.opt.mlir 905:13]
    node _io_out_target_T = eq(btbRead._type, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 910:27]
    node _io_out_target_T_1 = mux(_io_out_target_T, rasTarget, btbRead.target) @[build/NutShell.fir.opt.mlir 912:29]
    connect io.out.target, _io_out_target_T_1 @[build/NutShell.fir.opt.mlir 913:7]
    node _io_brIdx_T = mux(io.out.valid, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 915:22]
    node io_brIdx_hi = cat(UInt<1>(1), crosslineJump) @[build/NutShell.fir.opt.mlir 917:22]
    node _io_brIdx_T_1 = cat(io_brIdx_hi, _io_brIdx_T) @[build/NutShell.fir.opt.mlir 919:24]
    node _io_brIdx_T_2 = and(btbRead.brIdx, _io_brIdx_T_1) @[build/NutShell.fir.opt.mlir 921:24]
    connect io.brIdx, tail(_io_brIdx_T_2, 1) @[build/NutShell.fir.opt.mlir 923:7]
    node _io_out_valid_T = eq(btbRead._type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 925:26]
    node _io_out_valid_T_1 = neq(rasTarget, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 927:28]
    node _io_out_valid_T_2 = and(UInt<1>(1), _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 929:28]
    node _io_out_valid_T_3 = mux(_io_out_valid_T, phtTaken, _io_out_valid_T_2) @[build/NutShell.fir.opt.mlir 931:28]
    node _io_out_valid_T_4 = and(btbHit, _io_out_valid_T_3) @[build/NutShell.fir.opt.mlir 933:28]
    connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 934:7]
    connect io.out.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 936:7]
    connect req, req__bore @[build/NutShell.fir.opt.mlir 937:7]
    connect flushTLB, flushTLB__bore @[build/NutShell.fir.opt.mlir 938:7]
    connect flushBTB, flushBTB__bore @[build/NutShell.fir.opt.mlir 939:7]

  extmodule LogPerfHelper_1 : @[build/NutShell.fir.opt.mlir 941:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 941:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 941:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 941:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 941:140]
    defname = LogPerfHelper

  module IFU_inorder : @[build/NutShell.fir.opt.mlir 942:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 942:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 942:69]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<82> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<82> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, flip redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flushVec : UInt<4>, bpFlush : UInt<1>, flip ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 942:96]
    input bp1_req__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 942:893]
    output r__bore : UInt<1> @[build/NutShell.fir.opt.mlir 942:1082]
    input bp1_flushTLB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 942:1112]
    input bp1_flushBTB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 942:1153]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 942:1195]

    regreset pc : UInt<39>, clock, reset, UInt<39>(2147483648) @[build/NutShell.fir.opt.mlir 1013:13]
    node _pcUpdate_T = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1015:22]
    node pcUpdate = or(io.redirect.valid, _pcUpdate_T) @[build/NutShell.fir.opt.mlir 1017:19]
    node _snpc_T = bits(pc, 1, 1) @[build/NutShell.fir.opt.mlir 1019:18]
    node _snpc_T_1 = add(pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1022:20]
    node _snpc_T_2 = tail(_snpc_T_1, 1) @[build/NutShell.fir.opt.mlir 1024:20]
    node _snpc_T_3 = add(pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1027:20]
    node _snpc_T_4 = tail(_snpc_T_3, 1) @[build/NutShell.fir.opt.mlir 1029:20]
    node snpc = mux(_snpc_T, _snpc_T_2, _snpc_T_4) @[build/NutShell.fir.opt.mlir 1031:15]
    inst bp1 of BPU_inorder @[build/NutShell.fir.opt.mlir 1032:105]
    connect bp1.clock, clock @[build/NutShell.fir.opt.mlir 1043:7]
    connect bp1.reset, reset @[build/NutShell.fir.opt.mlir 1044:7]
    regreset crosslineJumpLatch : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1046:29]
    node _T = or(pcUpdate, bp1.io.flush) @[build/NutShell.fir.opt.mlir 1048:13]
    when _T : @[build/NutShell.fir.opt.mlir 1049:7]
      node _crosslineJumpLatch_T = eq(crosslineJumpLatch, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1051:34]
      node _crosslineJumpLatch_T_1 = and(bp1.io.crosslineJump, _crosslineJumpLatch_T) @[build/NutShell.fir.opt.mlir 1053:36]
      node _crosslineJumpLatch_T_2 = mux(bp1.io.flush, UInt<1>(0), _crosslineJumpLatch_T_1) @[build/NutShell.fir.opt.mlir 1055:36]
      connect crosslineJumpLatch, _crosslineJumpLatch_T_2 @[build/NutShell.fir.opt.mlir 1056:9]
    reg crosslineJumpTarget : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1058:30]
    when bp1.io.crosslineJump : @[build/NutShell.fir.opt.mlir 1059:7]
      connect crosslineJumpTarget, bp1.io.out.target @[build/NutShell.fir.opt.mlir 1060:9]
    node crosslineJumpForceSeq = and(bp1.io.crosslineJump, bp1.io.out.valid) @[build/NutShell.fir.opt.mlir 1063:32]
    node _crosslineJumpForceTgt_T = eq(bp1.io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1065:35]
    node crosslineJumpForceTgt = and(crosslineJumpLatch, _crosslineJumpForceTgt_T) @[build/NutShell.fir.opt.mlir 1067:32]
    node pnpc = mux(bp1.io.crosslineJump, snpc, bp1.io.out.target) @[build/NutShell.fir.opt.mlir 1069:15]
    node _npc_T = mux(bp1.io.out.valid, pnpc, snpc) @[build/NutShell.fir.opt.mlir 1071:17]
    node _npc_T_1 = mux(crosslineJumpLatch, crosslineJumpTarget, _npc_T) @[build/NutShell.fir.opt.mlir 1073:19]
    node npc = mux(io.redirect.valid, io.redirect.target, _npc_T_1) @[build/NutShell.fir.opt.mlir 1075:14]
    node _npcIsSeq_T = mux(bp1.io.out.valid, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 1078:22]
    node _npcIsSeq_T_1 = mux(bp1.io.crosslineJump, UInt<1>(1), _npcIsSeq_T) @[build/NutShell.fir.opt.mlir 1080:24]
    node _npcIsSeq_T_2 = mux(crosslineJumpLatch, UInt<1>(0), _npcIsSeq_T_1) @[build/NutShell.fir.opt.mlir 1082:24]
    node npcIsSeq = mux(io.redirect.valid, UInt<1>(0), _npcIsSeq_T_2) @[build/NutShell.fir.opt.mlir 1084:19]
    wire brIdx : UInt<4> @[build/NutShell.fir.opt.mlir 1085:16]
    node _brIdx_T = mux(io.redirect.valid, UInt<1>(0), bp1.io.brIdx) @[build/NutShell.fir.opt.mlir 1087:19]
    node _brIdx_T_1 = cat(npcIsSeq, _brIdx_T) @[build/NutShell.fir.opt.mlir 1089:21]
    connect brIdx, _brIdx_T_1 @[build/NutShell.fir.opt.mlir 1090:7]
    node _bp1_io_in_pc_valid_T = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1092:32]
    connect bp1.io.in.pc.valid, _bp1_io_in_pc_valid_T @[build/NutShell.fir.opt.mlir 1093:7]
    connect bp1.io.in.pc.bits, npc @[build/NutShell.fir.opt.mlir 1094:7]
    connect bp1.io.flush, io.redirect.valid @[build/NutShell.fir.opt.mlir 1095:7]
    when pcUpdate : @[build/NutShell.fir.opt.mlir 1096:7]
      connect pc, npc @[build/NutShell.fir.opt.mlir 1097:9]
    inst LogPerfHelper of LogPerfHelper_1 @[build/NutShell.fir.opt.mlir 1099:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 1100:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 1105:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 1106:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 1107:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 1108:7]
    node _T_1 = and(pcUpdate, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1110:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 1111:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1113:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1115:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 1116:9]
        skip @[build/NutShell.fir.opt.mlir 1117:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1120:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1122:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 1123:9]
        skip @[build/NutShell.fir.opt.mlir 1124:11]
    node _io_flushVec_T = mux(io.redirect.valid, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1129:25]
    connect io.flushVec, _io_flushVec_T @[build/NutShell.fir.opt.mlir 1130:7]
    connect io.bpFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1132:7]
    node _x1_T = bits(pc, 38, 1) @[build/NutShell.fir.opt.mlir 1134:16]
    node x1 = cat(_x1_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1136:13]
    node _x6_T = bits(brIdx, 3, 0) @[build/NutShell.fir.opt.mlir 1138:16]
    node _x6_T_1 = bits(npc, 38, 0) @[build/NutShell.fir.opt.mlir 1140:18]
    node _x6_T_2 = bits(pc, 38, 0) @[build/NutShell.fir.opt.mlir 1142:18]
    node x6_hi = cat(_x6_T, _x6_T_1) @[build/NutShell.fir.opt.mlir 1144:16]
    node x6 = cat(x6_hi, _x6_T_2) @[build/NutShell.fir.opt.mlir 1146:13]
    connect io.imem.req.bits.addr, x1 @[build/NutShell.fir.opt.mlir 1147:7]
    connect io.imem.req.bits.cmd, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 1150:7]
    connect io.imem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 1154:7]
    connect io.imem.req.bits.wdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 1157:7]
    connect io.imem.req.bits.wmask, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 1160:7]
    connect io.imem.req.bits.user, x6 @[build/NutShell.fir.opt.mlir 1161:7]
    connect io.imem.req.valid, io.out.ready @[build/NutShell.fir.opt.mlir 1162:7]
    node _io_imem_resp_ready_T = bits(io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 1164:32]
    node _io_imem_resp_ready_T_1 = or(io.out.ready, _io_imem_resp_ready_T) @[build/NutShell.fir.opt.mlir 1166:34]
    connect io.imem.resp.ready, _io_imem_resp_ready_T_1 @[build/NutShell.fir.opt.mlir 1167:7]
    invalidate io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 1169:7]
    invalidate io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 1171:7]
    invalidate io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 1173:7]
    invalidate io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 1175:7]
    invalidate io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 1177:7]
    invalidate io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 1179:7]
    invalidate io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 1181:7]
    invalidate io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 1183:7]
    invalidate io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 1185:7]
    invalidate io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 1187:7]
    invalidate io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 1189:7]
    invalidate io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 1191:7]
    invalidate io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 1193:7]
    invalidate io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 1195:7]
    invalidate io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 1197:7]
    invalidate io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 1199:7]
    invalidate io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 1201:7]
    invalidate io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 1203:7]
    invalidate io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 1205:7]
    invalidate io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 1207:7]
    invalidate io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 1209:7]
    invalidate io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 1211:7]
    invalidate io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 1213:7]
    invalidate io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 1215:7]
    invalidate io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 1217:7]
    invalidate io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 1219:7]
    invalidate io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 1221:7]
    invalidate io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 1223:7]
    invalidate io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 1225:7]
    invalidate io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1227:7]
    invalidate io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 1229:7]
    invalidate io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 1231:7]
    invalidate io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 1233:7]
    invalidate io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 1235:7]
    invalidate io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 1237:7]
    invalidate io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 1239:7]
    invalidate io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 1241:7]
    invalidate io.out.bits.pc @[build/NutShell.fir.opt.mlir 1243:7]
    invalidate io.out.bits.instr @[build/NutShell.fir.opt.mlir 1245:7]
    node _T_6 = and(io.imem.req.ready, io.imem.req.valid) @[build/NutShell.fir.opt.mlir 1247:15]
    node _T_7 = and(_T_6, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1249:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 1250:7]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1252:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1254:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 1255:9]
        skip @[build/NutShell.fir.opt.mlir 1256:11]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1259:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1261:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 1262:9]
        skip @[build/NutShell.fir.opt.mlir 1263:11]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1267:16]
    node _T_13 = and(_T_12, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1269:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 1270:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1272:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1274:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 1275:9]
        skip @[build/NutShell.fir.opt.mlir 1276:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1279:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1281:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 1282:9]
        skip @[build/NutShell.fir.opt.mlir 1283:11]
    connect io.out.bits.instr, io.imem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 1286:7]
    node _io_out_bits_pc_T = bits(io.imem.resp.bits.user, 38, 0) @[build/NutShell.fir.opt.mlir 1288:28]
    connect io.out.bits.pc, _io_out_bits_pc_T @[build/NutShell.fir.opt.mlir 1289:7]
    node _io_out_bits_pnpc_T = bits(io.imem.resp.bits.user, 77, 39) @[build/NutShell.fir.opt.mlir 1291:30]
    connect io.out.bits.pnpc, _io_out_bits_pnpc_T @[build/NutShell.fir.opt.mlir 1292:7]
    node _io_out_bits_brIdx_T = bits(io.imem.resp.bits.user, 81, 78) @[build/NutShell.fir.opt.mlir 1294:31]
    connect io.out.bits.brIdx, _io_out_bits_brIdx_T @[build/NutShell.fir.opt.mlir 1295:7]
    connect io.out.bits.exceptionVec[12], io.ipf @[build/NutShell.fir.opt.mlir 1296:7]
    node _io_out_valid_T = bits(io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 1298:26]
    node _io_out_valid_T_1 = eq(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1300:28]
    node _io_out_valid_T_2 = and(io.imem.resp.valid, _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 1302:28]
    connect io.out.valid, _io_out_valid_T_2 @[build/NutShell.fir.opt.mlir 1303:7]
    node _T_18 = and(io.imem.resp.ready, io.imem.resp.valid) @[build/NutShell.fir.opt.mlir 1305:16]
    regreset r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1306:12]
    when io.imem.req.valid : @[build/NutShell.fir.opt.mlir 1307:7]
      connect r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 1309:9]
    when _T_18 : @[build/NutShell.fir.opt.mlir 1311:7]
      connect r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1313:9]
    node _T_19 = orr(io.flushVec) @[build/NutShell.fir.opt.mlir 1316:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 1317:16]
    connect _WIRE, _T_19 @[build/NutShell.fir.opt.mlir 1318:7]
    connect bp1.req__bore, bp1_req__bore @[build/NutShell.fir.opt.mlir 1319:7]
    connect r__bore, r @[build/NutShell.fir.opt.mlir 1320:7]
    connect bp1.flushTLB__bore, bp1_flushTLB__bore @[build/NutShell.fir.opt.mlir 1321:7]
    connect bp1.flushBTB__bore, bp1_flushBTB__bore @[build/NutShell.fir.opt.mlir 1322:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 1323:7]

  extmodule LogPerfHelper_2 : @[build/NutShell.fir.opt.mlir 1325:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 1325:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 1325:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 1325:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 1325:140]
    defname = LogPerfHelper

  module NaiveRVCAlignBuffer : @[build/NutShell.fir.opt.mlir 1326:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 1326:51]
    input reset : Reset @[build/NutShell.fir.opt.mlir 1326:77]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 1326:104]

    wire instr : UInt<32> @[build/NutShell.fir.opt.mlir 1384:16]
    node _isRVC_T = bits(instr, 1, 0) @[build/NutShell.fir.opt.mlir 1386:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1389:16]
    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1391:16]
    regreset pcOffsetR : UInt<3>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1393:20]
    node _pcOffset_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1395:22]
    node _pcOffset_T_1 = bits(io.in.bits.pc, 2, 0) @[build/NutShell.fir.opt.mlir 1397:24]
    node pcOffset = mux(_pcOffset_T, _pcOffset_T_1, pcOffsetR) @[build/NutShell.fir.opt.mlir 1399:19]
    node instIn = cat(UInt<16>(0), io.in.bits.instr) @[build/NutShell.fir.opt.mlir 1402:17]
    wire canGo : UInt<1> @[build/NutShell.fir.opt.mlir 1403:16]
    connect canGo, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1405:7]
    wire canIn : UInt<1> @[build/NutShell.fir.opt.mlir 1406:16]
    connect canIn, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1408:7]
    node _rvcFinish_T = eq(pcOffset, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1410:23]
    node _rvcFinish_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1412:25]
    node _rvcFinish_T_2 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1414:25]
    node _rvcFinish_T_3 = or(_rvcFinish_T_1, _rvcFinish_T_2) @[build/NutShell.fir.opt.mlir 1416:25]
    node _rvcFinish_T_4 = and(_rvcFinish_T, _rvcFinish_T_3) @[build/NutShell.fir.opt.mlir 1418:25]
    node _rvcFinish_T_5 = eq(pcOffset, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1421:25]
    node _rvcFinish_T_6 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1423:25]
    node _rvcFinish_T_7 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1425:25]
    node _rvcFinish_T_8 = or(_rvcFinish_T_6, _rvcFinish_T_7) @[build/NutShell.fir.opt.mlir 1427:25]
    node _rvcFinish_T_9 = and(_rvcFinish_T_5, _rvcFinish_T_8) @[build/NutShell.fir.opt.mlir 1429:25]
    node _rvcFinish_T_10 = or(_rvcFinish_T_4, _rvcFinish_T_9) @[build/NutShell.fir.opt.mlir 1431:26]
    node _rvcFinish_T_11 = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1434:26]
    node _rvcFinish_T_12 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1436:26]
    node _rvcFinish_T_13 = or(isRVC, _rvcFinish_T_12) @[build/NutShell.fir.opt.mlir 1438:26]
    node _rvcFinish_T_14 = and(_rvcFinish_T_11, _rvcFinish_T_13) @[build/NutShell.fir.opt.mlir 1440:26]
    node _rvcFinish_T_15 = or(_rvcFinish_T_10, _rvcFinish_T_14) @[build/NutShell.fir.opt.mlir 1442:26]
    node _rvcFinish_T_16 = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1445:26]
    node _rvcFinish_T_17 = and(_rvcFinish_T_16, isRVC) @[build/NutShell.fir.opt.mlir 1447:26]
    node rvcFinish = or(_rvcFinish_T_15, _rvcFinish_T_17) @[build/NutShell.fir.opt.mlir 1449:20]
    node _rvcNext_T = eq(pcOffset, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1451:21]
    node _rvcNext_T_1 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1453:23]
    node _rvcNext_T_2 = eq(_rvcNext_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1455:23]
    node _rvcNext_T_3 = and(isRVC, _rvcNext_T_2) @[build/NutShell.fir.opt.mlir 1457:23]
    node _rvcNext_T_4 = and(_rvcNext_T, _rvcNext_T_3) @[build/NutShell.fir.opt.mlir 1459:23]
    node _rvcNext_T_5 = eq(pcOffset, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1461:23]
    node _rvcNext_T_6 = bits(io.in.bits.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 1463:23]
    node _rvcNext_T_7 = eq(_rvcNext_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1465:23]
    node _rvcNext_T_8 = and(isRVC, _rvcNext_T_7) @[build/NutShell.fir.opt.mlir 1467:23]
    node _rvcNext_T_9 = and(_rvcNext_T_5, _rvcNext_T_8) @[build/NutShell.fir.opt.mlir 1469:23]
    node _rvcNext_T_10 = or(_rvcNext_T_4, _rvcNext_T_9) @[build/NutShell.fir.opt.mlir 1471:24]
    node _rvcNext_T_11 = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1473:24]
    node _rvcNext_T_12 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1475:24]
    node _rvcNext_T_13 = and(_rvcNext_T_11, _rvcNext_T_12) @[build/NutShell.fir.opt.mlir 1477:24]
    node _rvcNext_T_14 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1479:24]
    node _rvcNext_T_15 = eq(_rvcNext_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1481:24]
    node _rvcNext_T_16 = and(_rvcNext_T_13, _rvcNext_T_15) @[build/NutShell.fir.opt.mlir 1483:24]
    node rvcNext = or(_rvcNext_T_10, _rvcNext_T_16) @[build/NutShell.fir.opt.mlir 1485:18]
    node _rvcSpecial_T = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1487:24]
    node _rvcSpecial_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1489:26]
    node _rvcSpecial_T_2 = and(_rvcSpecial_T, _rvcSpecial_T_1) @[build/NutShell.fir.opt.mlir 1491:26]
    node _rvcSpecial_T_3 = bits(io.in.bits.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 1493:26]
    node _rvcSpecial_T_4 = eq(_rvcSpecial_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1495:26]
    node rvcSpecial = and(_rvcSpecial_T_2, _rvcSpecial_T_4) @[build/NutShell.fir.opt.mlir 1497:21]
    node _rvcSpecialJump_T = eq(pcOffset, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 1499:28]
    node _rvcSpecialJump_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1501:30]
    node _rvcSpecialJump_T_2 = and(_rvcSpecialJump_T, _rvcSpecialJump_T_1) @[build/NutShell.fir.opt.mlir 1503:30]
    node _rvcSpecialJump_T_3 = bits(io.in.bits.brIdx, 2, 2) @[build/NutShell.fir.opt.mlir 1505:30]
    node rvcSpecialJump = and(_rvcSpecialJump_T_2, _rvcSpecialJump_T_3) @[build/NutShell.fir.opt.mlir 1507:25]
    node pnpcIsSeq = bits(io.in.bits.brIdx, 3, 3) @[build/NutShell.fir.opt.mlir 1509:20]
    node _flushIFU_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1511:22]
    node _flushIFU_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 1514:24]
    node _flushIFU_T_2 = or(_flushIFU_T, _flushIFU_T_1) @[build/NutShell.fir.opt.mlir 1516:24]
    node _flushIFU_T_3 = and(_flushIFU_T_2, rvcSpecial) @[build/NutShell.fir.opt.mlir 1518:24]
    node _flushIFU_T_4 = and(_flushIFU_T_3, io.in.valid) @[build/NutShell.fir.opt.mlir 1520:24]
    node _flushIFU_T_5 = eq(pnpcIsSeq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1522:24]
    node flushIFU = and(_flushIFU_T_4, _flushIFU_T_5) @[build/NutShell.fir.opt.mlir 1524:19]
    inst LogPerfHelper of LogPerfHelper_2 @[build/NutShell.fir.opt.mlir 1525:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 1526:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 1531:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 1532:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 1533:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 1534:7]
    node _T = and(flushIFU, c_control.logEnable) @[build/NutShell.fir.opt.mlir 1536:13]
    when _T : @[build/NutShell.fir.opt.mlir 1537:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1539:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1541:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 1542:9]
        skip @[build/NutShell.fir.opt.mlir 1543:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1546:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1548:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 1549:9]
        skip @[build/NutShell.fir.opt.mlir 1550:11]
    node _T_5 = eq(flushIFU, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1554:15]
    node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 1556:15]
    node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1558:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 1560:7]
      node _T_8 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1562:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 1563:9]
        skip @[build/NutShell.fir.opt.mlir 1564:11]
      assert(clock, _T_5, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 1566:9]
    node _loadNextInstline_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 1569:30]
    node _loadNextInstline_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 1571:32]
    node _loadNextInstline_T_2 = or(_loadNextInstline_T, _loadNextInstline_T_1) @[build/NutShell.fir.opt.mlir 1573:32]
    node _loadNextInstline_T_3 = or(rvcSpecial, rvcSpecialJump) @[build/NutShell.fir.opt.mlir 1575:32]
    node _loadNextInstline_T_4 = and(_loadNextInstline_T_2, _loadNextInstline_T_3) @[build/NutShell.fir.opt.mlir 1577:32]
    node _loadNextInstline_T_5 = and(_loadNextInstline_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 1579:32]
    node loadNextInstline = and(_loadNextInstline_T_5, pnpcIsSeq) @[build/NutShell.fir.opt.mlir 1581:27]
    wire pcOut : UInt<39> @[build/NutShell.fir.opt.mlir 1582:16]
    connect pcOut, UInt<39>(0) @[build/NutShell.fir.opt.mlir 1585:7]
    wire pnpcOut : UInt<39> @[build/NutShell.fir.opt.mlir 1586:18]
    connect pnpcOut, UInt<39>(0) @[build/NutShell.fir.opt.mlir 1588:7]
    reg specialPCR : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1589:21]
    reg specialNPCR : UInt<39>, clock @[build/NutShell.fir.opt.mlir 1590:22]
    reg specialInstR : UInt<16>, clock @[build/NutShell.fir.opt.mlir 1591:23]
    regreset specialIPFR : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1592:22]
    node _redirectPC_T = bits(io.in.bits.pc, 38, 3) @[build/NutShell.fir.opt.mlir 1594:24]
    node _redirectPC_T_1 = cat(_redirectPC_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 1597:26]
    node _redirectPC_T_2 = add(_redirectPC_T_1, UInt<4>(10)) @[build/NutShell.fir.opt.mlir 1600:26]
    node redirectPC = tail(_redirectPC_T_2, 1) @[build/NutShell.fir.opt.mlir 1602:21]
    node _rvcForceLoadNext_T = eq(pcOffset, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1604:30]
    node _rvcForceLoadNext_T_1 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1606:32]
    node _rvcForceLoadNext_T_2 = and(_rvcForceLoadNext_T, _rvcForceLoadNext_T_1) @[build/NutShell.fir.opt.mlir 1608:32]
    node _rvcForceLoadNext_T_3 = bits(io.in.bits.pnpc, 2, 0) @[build/NutShell.fir.opt.mlir 1610:32]
    node _rvcForceLoadNext_T_4 = eq(_rvcForceLoadNext_T_3, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1612:32]
    node _rvcForceLoadNext_T_5 = and(_rvcForceLoadNext_T_2, _rvcForceLoadNext_T_4) @[build/NutShell.fir.opt.mlir 1614:32]
    node _rvcForceLoadNext_T_6 = bits(io.in.bits.brIdx, 1, 1) @[build/NutShell.fir.opt.mlir 1616:32]
    node _rvcForceLoadNext_T_7 = eq(_rvcForceLoadNext_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1618:32]
    node rvcForceLoadNext = and(_rvcForceLoadNext_T_5, _rvcForceLoadNext_T_7) @[build/NutShell.fir.opt.mlir 1620:27]
    node _instr_T = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1622:19]
    node _instr_T_1 = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1624:21]
    node _instr_T_2 = or(_instr_T, _instr_T_1) @[build/NutShell.fir.opt.mlir 1626:21]
    node _instr_T_3 = bits(instIn, 15, 0) @[build/NutShell.fir.opt.mlir 1628:21]
    node _instr_T_4 = cat(_instr_T_3, specialInstR) @[build/NutShell.fir.opt.mlir 1630:21]
    node _instr_T_5 = bits(instIn, 31, 0) @[build/NutShell.fir.opt.mlir 1632:21]
    node _instr_T_6 = bits(instIn, 47, 16) @[build/NutShell.fir.opt.mlir 1634:21]
    node _instr_T_7 = bits(instIn, 63, 32) @[build/NutShell.fir.opt.mlir 1636:21]
    node _instr_T_8 = bits(instIn, 79, 48) @[build/NutShell.fir.opt.mlir 1638:21]
    node _instr_T_9 = eq(UInt<1>(0), pcOffset) @[build/NutShell.fir.opt.mlir 1640:21]
    node _instr_T_10 = eq(UInt<2>(2), pcOffset) @[build/NutShell.fir.opt.mlir 1642:22]
    node _instr_T_11 = eq(UInt<3>(4), pcOffset) @[build/NutShell.fir.opt.mlir 1644:22]
    node _instr_T_12 = eq(UInt<3>(6), pcOffset) @[build/NutShell.fir.opt.mlir 1646:22]
    node _instr_T_13 = mux(_instr_T_9, _instr_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1648:22]
    node _instr_T_14 = mux(_instr_T_10, _instr_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1650:22]
    node _instr_T_15 = mux(_instr_T_11, _instr_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1652:22]
    node _instr_T_16 = mux(_instr_T_12, _instr_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1654:22]
    node _instr_T_17 = or(_instr_T_13, _instr_T_14) @[build/NutShell.fir.opt.mlir 1656:22]
    node _instr_T_18 = or(_instr_T_17, _instr_T_15) @[build/NutShell.fir.opt.mlir 1658:22]
    node _instr_T_19 = or(_instr_T_18, _instr_T_16) @[build/NutShell.fir.opt.mlir 1660:22]
    wire _instr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 1661:22]
    connect _instr_WIRE, _instr_T_19 @[build/NutShell.fir.opt.mlir 1662:7]
    node _instr_T_20 = mux(_instr_T_2, _instr_T_4, _instr_WIRE) @[build/NutShell.fir.opt.mlir 1664:22]
    connect instr, _instr_T_20 @[build/NutShell.fir.opt.mlir 1665:7]
    node _T_9 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1667:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 1668:7]
      node _T_10 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 1670:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 1671:9]
        node _canGo_T = or(rvcFinish, rvcNext) @[build/NutShell.fir.opt.mlir 1673:23]
        connect canGo, _canGo_T @[build/NutShell.fir.opt.mlir 1674:11]
        node _canIn_T = or(rvcFinish, rvcForceLoadNext) @[build/NutShell.fir.opt.mlir 1676:23]
        connect canIn, _canIn_T @[build/NutShell.fir.opt.mlir 1677:11]
        connect pcOut, io.in.bits.pc @[build/NutShell.fir.opt.mlir 1678:11]
        node _pnpcOut_T = add(io.in.bits.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1680:25]
        node _pnpcOut_T_1 = tail(_pnpcOut_T, 1) @[build/NutShell.fir.opt.mlir 1682:27]
        node _pnpcOut_T_2 = add(io.in.bits.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1684:27]
        node _pnpcOut_T_3 = tail(_pnpcOut_T_2, 1) @[build/NutShell.fir.opt.mlir 1686:27]
        node _pnpcOut_T_4 = mux(isRVC, _pnpcOut_T_1, _pnpcOut_T_3) @[build/NutShell.fir.opt.mlir 1688:27]
        node _pnpcOut_T_5 = mux(rvcFinish, io.in.bits.pnpc, _pnpcOut_T_4) @[build/NutShell.fir.opt.mlir 1690:27]
        connect pnpcOut, _pnpcOut_T_5 @[build/NutShell.fir.opt.mlir 1691:11]
        node _T_11 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1693:20]
        node _T_12 = and(_T_11, rvcFinish) @[build/NutShell.fir.opt.mlir 1695:20]
        when _T_12 : @[build/NutShell.fir.opt.mlir 1696:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1698:13]
        node _T_13 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1701:20]
        node _T_14 = and(_T_13, rvcNext) @[build/NutShell.fir.opt.mlir 1703:20]
        when _T_14 : @[build/NutShell.fir.opt.mlir 1704:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1706:13]
          node _pcOffsetR_T = mux(isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1708:29]
          node _pcOffsetR_T_1 = add(pcOffset, _pcOffsetR_T) @[build/NutShell.fir.opt.mlir 1710:31]
          node _pcOffsetR_T_2 = tail(_pcOffsetR_T_1, 1) @[build/NutShell.fir.opt.mlir 1712:31]
          connect pcOffsetR, _pcOffsetR_T_2 @[build/NutShell.fir.opt.mlir 1713:13]
        node _T_15 = and(rvcSpecial, io.in.valid) @[build/NutShell.fir.opt.mlir 1716:20]
        when _T_15 : @[build/NutShell.fir.opt.mlir 1717:11]
          connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 1719:13]
          connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1720:13]
          node _specialInstR_T = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1722:32]
          connect specialInstR, _specialInstR_T @[build/NutShell.fir.opt.mlir 1723:13]
          connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1724:13]
        node _T_16 = and(rvcSpecialJump, io.in.valid) @[build/NutShell.fir.opt.mlir 1727:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 1728:11]
          connect state, UInt<2>(3) @[build/NutShell.fir.opt.mlir 1730:13]
          connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1731:13]
          connect specialNPCR, io.in.bits.pnpc @[build/NutShell.fir.opt.mlir 1732:13]
          node _specialInstR_T_1 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1734:34]
          connect specialInstR, _specialInstR_T_1 @[build/NutShell.fir.opt.mlir 1735:13]
          connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1736:13]
      else :
        node _T_17 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 1740:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 1741:11]
          node _canGo_T_1 = or(rvcFinish, rvcNext) @[build/NutShell.fir.opt.mlir 1743:27]
          connect canGo, _canGo_T_1 @[build/NutShell.fir.opt.mlir 1744:13]
          node _canIn_T_1 = or(rvcFinish, rvcForceLoadNext) @[build/NutShell.fir.opt.mlir 1746:27]
          connect canIn, _canIn_T_1 @[build/NutShell.fir.opt.mlir 1747:13]
          node _pcOut_T = bits(io.in.bits.pc, 38, 3) @[build/NutShell.fir.opt.mlir 1749:25]
          node _pcOut_T_1 = bits(pcOffsetR, 2, 0) @[build/NutShell.fir.opt.mlir 1751:27]
          node _pcOut_T_2 = cat(_pcOut_T, _pcOut_T_1) @[build/NutShell.fir.opt.mlir 1753:27]
          connect pcOut, _pcOut_T_2 @[build/NutShell.fir.opt.mlir 1754:13]
          node _pnpcOut_T_6 = add(pcOut, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1756:29]
          node _pnpcOut_T_7 = tail(_pnpcOut_T_6, 1) @[build/NutShell.fir.opt.mlir 1758:29]
          node _pnpcOut_T_8 = add(pcOut, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1760:29]
          node _pnpcOut_T_9 = tail(_pnpcOut_T_8, 1) @[build/NutShell.fir.opt.mlir 1762:29]
          node _pnpcOut_T_10 = mux(isRVC, _pnpcOut_T_7, _pnpcOut_T_9) @[build/NutShell.fir.opt.mlir 1764:30]
          node _pnpcOut_T_11 = mux(rvcFinish, io.in.bits.pnpc, _pnpcOut_T_10) @[build/NutShell.fir.opt.mlir 1766:30]
          connect pnpcOut, _pnpcOut_T_11 @[build/NutShell.fir.opt.mlir 1767:13]
          node _T_18 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1769:22]
          node _T_19 = and(_T_18, rvcFinish) @[build/NutShell.fir.opt.mlir 1771:22]
          when _T_19 : @[build/NutShell.fir.opt.mlir 1772:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1774:15]
          node _T_20 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1777:22]
          node _T_21 = and(_T_20, rvcNext) @[build/NutShell.fir.opt.mlir 1779:22]
          when _T_21 : @[build/NutShell.fir.opt.mlir 1780:13]
            connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1782:15]
            node _pcOffsetR_T_3 = mux(isRVC, UInt<2>(2), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1784:33]
            node _pcOffsetR_T_4 = add(pcOffset, _pcOffsetR_T_3) @[build/NutShell.fir.opt.mlir 1786:33]
            node _pcOffsetR_T_5 = tail(_pcOffsetR_T_4, 1) @[build/NutShell.fir.opt.mlir 1788:33]
            connect pcOffsetR, _pcOffsetR_T_5 @[build/NutShell.fir.opt.mlir 1789:15]
          node _T_22 = and(rvcSpecial, io.in.valid) @[build/NutShell.fir.opt.mlir 1792:22]
          when _T_22 : @[build/NutShell.fir.opt.mlir 1793:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 1795:15]
            connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1796:15]
            node _specialInstR_T_2 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1798:36]
            connect specialInstR, _specialInstR_T_2 @[build/NutShell.fir.opt.mlir 1799:15]
            connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1800:15]
          node _T_23 = and(rvcSpecialJump, io.in.valid) @[build/NutShell.fir.opt.mlir 1803:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 1804:13]
            connect state, UInt<2>(3) @[build/NutShell.fir.opt.mlir 1806:15]
            connect specialPCR, pcOut @[build/NutShell.fir.opt.mlir 1807:15]
            connect specialNPCR, io.in.bits.pnpc @[build/NutShell.fir.opt.mlir 1808:15]
            node _specialInstR_T_3 = bits(io.in.bits.instr, 63, 48) @[build/NutShell.fir.opt.mlir 1810:36]
            connect specialInstR, _specialInstR_T_3 @[build/NutShell.fir.opt.mlir 1811:15]
            connect specialIPFR, io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1812:15]
        else :
          node _T_24 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 1816:22]
          when _T_24 : @[build/NutShell.fir.opt.mlir 1817:13]
            connect pcOut, specialPCR @[build/NutShell.fir.opt.mlir 1818:15]
            node _pnpcOut_T_12 = add(specialPCR, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1820:32]
            node _pnpcOut_T_13 = tail(_pnpcOut_T_12, 1) @[build/NutShell.fir.opt.mlir 1822:32]
            connect pnpcOut, _pnpcOut_T_13 @[build/NutShell.fir.opt.mlir 1823:15]
            connect canGo, io.in.valid @[build/NutShell.fir.opt.mlir 1824:15]
            connect canIn, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1826:15]
            node _T_25 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1828:24]
            when _T_25 : @[build/NutShell.fir.opt.mlir 1829:15]
              connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 1831:17]
              connect pcOffsetR, pad(UInt<2>(2), 3) @[build/NutShell.fir.opt.mlir 1834:17]
          else :
            node _T_26 = eq(UInt<2>(3), state) @[build/NutShell.fir.opt.mlir 1838:24]
            when _T_26 : @[build/NutShell.fir.opt.mlir 1839:15]
              connect pcOut, specialPCR @[build/NutShell.fir.opt.mlir 1840:17]
              connect pnpcOut, specialNPCR @[build/NutShell.fir.opt.mlir 1841:17]
              connect canGo, io.in.valid @[build/NutShell.fir.opt.mlir 1842:17]
              connect canIn, UInt<1>(1) @[build/NutShell.fir.opt.mlir 1844:17]
              node _T_27 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1846:26]
              when _T_27 : @[build/NutShell.fir.opt.mlir 1847:17]
                connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1849:19]
    else :
      connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 1857:9]
      invalidate canGo @[build/NutShell.fir.opt.mlir 1859:9]
      invalidate canIn @[build/NutShell.fir.opt.mlir 1861:9]
      invalidate pcOut @[build/NutShell.fir.opt.mlir 1863:9]
      invalidate pnpcOut @[build/NutShell.fir.opt.mlir 1865:9]
    invalidate io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 1868:7]
    invalidate io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 1870:7]
    invalidate io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 1872:7]
    invalidate io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 1874:7]
    invalidate io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 1876:7]
    invalidate io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 1878:7]
    invalidate io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 1880:7]
    invalidate io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 1882:7]
    invalidate io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 1884:7]
    invalidate io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 1886:7]
    invalidate io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 1888:7]
    invalidate io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 1890:7]
    invalidate io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 1892:7]
    invalidate io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 1894:7]
    invalidate io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 1896:7]
    invalidate io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 1898:7]
    invalidate io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 1900:7]
    invalidate io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 1902:7]
    invalidate io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 1904:7]
    invalidate io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 1906:7]
    invalidate io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 1908:7]
    invalidate io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 1910:7]
    invalidate io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 1912:7]
    invalidate io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 1914:7]
    invalidate io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 1916:7]
    invalidate io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 1918:7]
    invalidate io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 1920:7]
    invalidate io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 1922:7]
    invalidate io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 1924:7]
    invalidate io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 1926:7]
    invalidate io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 1928:7]
    invalidate io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 1930:7]
    invalidate io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 1932:7]
    invalidate io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 1934:7]
    invalidate io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 1936:7]
    invalidate io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 1938:7]
    invalidate io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 1940:7]
    invalidate io.out.bits.pc @[build/NutShell.fir.opt.mlir 1942:7]
    invalidate io.out.bits.instr @[build/NutShell.fir.opt.mlir 1944:7]
    connect io.out.bits.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 1946:7]
    connect io.out.bits.pc, pcOut @[build/NutShell.fir.opt.mlir 1947:7]
    connect io.out.bits.pnpc, pnpcOut @[build/NutShell.fir.opt.mlir 1948:7]
    connect io.out.bits.instr, pad(instr, 64) @[build/NutShell.fir.opt.mlir 1950:7]
    node _io_out_bits_brIdx_T = add(pcOut, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 1952:31]
    node _io_out_bits_brIdx_T_1 = tail(_io_out_bits_brIdx_T, 1) @[build/NutShell.fir.opt.mlir 1954:33]
    node _io_out_bits_brIdx_T_2 = eq(pnpcOut, _io_out_bits_brIdx_T_1) @[build/NutShell.fir.opt.mlir 1956:33]
    node _io_out_bits_brIdx_T_3 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1958:33]
    node _io_out_bits_brIdx_T_4 = and(_io_out_bits_brIdx_T_2, _io_out_bits_brIdx_T_3) @[build/NutShell.fir.opt.mlir 1960:33]
    node _io_out_bits_brIdx_T_5 = add(pcOut, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1962:33]
    node _io_out_bits_brIdx_T_6 = tail(_io_out_bits_brIdx_T_5, 1) @[build/NutShell.fir.opt.mlir 1964:33]
    node _io_out_bits_brIdx_T_7 = eq(pnpcOut, _io_out_bits_brIdx_T_6) @[build/NutShell.fir.opt.mlir 1966:33]
    node _io_out_bits_brIdx_T_8 = and(_io_out_bits_brIdx_T_7, isRVC) @[build/NutShell.fir.opt.mlir 1968:33]
    node _io_out_bits_brIdx_T_9 = or(_io_out_bits_brIdx_T_4, _io_out_bits_brIdx_T_8) @[build/NutShell.fir.opt.mlir 1970:33]
    node _io_out_bits_brIdx_T_10 = mux(_io_out_bits_brIdx_T_9, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 1972:34]
    connect io.out.bits.brIdx, pad(_io_out_bits_brIdx_T_10, 4) @[build/NutShell.fir.opt.mlir 1974:7]
    node _io_out_valid_T = and(io.in.valid, canGo) @[build/NutShell.fir.opt.mlir 1976:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 1977:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 1979:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 1981:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T_1, canIn) @[build/NutShell.fir.opt.mlir 1983:27]
    node _io_in_ready_T_3 = or(_io_in_ready_T, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 1985:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T_3, loadNextInstline) @[build/NutShell.fir.opt.mlir 1987:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 1988:7]
    connect io.out.bits.exceptionVec, io.in.bits.exceptionVec @[build/NutShell.fir.opt.mlir 1989:7]
    node _io_out_bits_exceptionVec_12_T = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 1991:41]
    node _io_out_bits_exceptionVec_12_T_1 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 1993:43]
    node _io_out_bits_exceptionVec_12_T_2 = or(_io_out_bits_exceptionVec_12_T, _io_out_bits_exceptionVec_12_T_1) @[build/NutShell.fir.opt.mlir 1995:43]
    node _io_out_bits_exceptionVec_12_T_3 = and(specialIPFR, _io_out_bits_exceptionVec_12_T_2) @[build/NutShell.fir.opt.mlir 1997:43]
    node _io_out_bits_exceptionVec_12_T_4 = or(io.in.bits.exceptionVec[12], _io_out_bits_exceptionVec_12_T_3) @[build/NutShell.fir.opt.mlir 1999:43]
    connect io.out.bits.exceptionVec[12], _io_out_bits_exceptionVec_12_T_4 @[build/NutShell.fir.opt.mlir 2000:7]
    node _io_out_bits_crossPageIPFFix_T = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 2002:41]
    node _io_out_bits_crossPageIPFFix_T_1 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 2004:43]
    node _io_out_bits_crossPageIPFFix_T_2 = or(_io_out_bits_crossPageIPFFix_T, _io_out_bits_crossPageIPFFix_T_1) @[build/NutShell.fir.opt.mlir 2006:43]
    node _io_out_bits_crossPageIPFFix_T_3 = and(io.in.bits.exceptionVec[12], _io_out_bits_crossPageIPFFix_T_2) @[build/NutShell.fir.opt.mlir 2008:43]
    node _io_out_bits_crossPageIPFFix_T_4 = eq(specialIPFR, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 2010:43]
    node _io_out_bits_crossPageIPFFix_T_5 = and(_io_out_bits_crossPageIPFFix_T_3, _io_out_bits_crossPageIPFFix_T_4) @[build/NutShell.fir.opt.mlir 2012:43]
    connect io.out.bits.crossPageIPFFix, _io_out_bits_crossPageIPFFix_T_5 @[build/NutShell.fir.opt.mlir 2013:7]

  extmodule LogPerfHelper_3 : @[build/NutShell.fir.opt.mlir 2015:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 2015:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 2015:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 2015:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 2015:140]
    defname = LogPerfHelper

  module Decoder : @[build/NutShell.fir.opt.mlir 2016:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 2016:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 2016:65]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, isWFI : UInt<1>, isBranch : UInt<1> } @[build/NutShell.fir.opt.mlir 2016:92]
    input intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 2016:1206]
    input vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 2016:1243]

    wire hasIntr : UInt<1> @[build/NutShell.fir.opt.mlir 2092:18]
    node _decodeList_T = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2095:24]
    node _decodeList_T_1 = eq(UInt<5>(19), _decodeList_T) @[build/NutShell.fir.opt.mlir 2098:26]
    node _decodeList_T_2 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2101:26]
    node _decodeList_T_3 = eq(UInt<13>(4115), _decodeList_T_2) @[build/NutShell.fir.opt.mlir 2104:26]
    node _decodeList_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2106:26]
    node _decodeList_T_5 = eq(UInt<14>(8211), _decodeList_T_4) @[build/NutShell.fir.opt.mlir 2109:26]
    node _decodeList_T_6 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2111:26]
    node _decodeList_T_7 = eq(UInt<14>(12307), _decodeList_T_6) @[build/NutShell.fir.opt.mlir 2114:26]
    node _decodeList_T_8 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2116:26]
    node _decodeList_T_9 = eq(UInt<15>(16403), _decodeList_T_8) @[build/NutShell.fir.opt.mlir 2119:26]
    node _decodeList_T_10 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2121:27]
    node _decodeList_T_11 = eq(UInt<15>(20499), _decodeList_T_10) @[build/NutShell.fir.opt.mlir 2124:27]
    node _decodeList_T_12 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2126:27]
    node _decodeList_T_13 = eq(UInt<15>(24595), _decodeList_T_12) @[build/NutShell.fir.opt.mlir 2129:27]
    node _decodeList_T_14 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2131:27]
    node _decodeList_T_15 = eq(UInt<15>(28691), _decodeList_T_14) @[build/NutShell.fir.opt.mlir 2134:27]
    node _decodeList_T_16 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 2136:27]
    node _decodeList_T_17 = eq(UInt<31>(1073762323), _decodeList_T_16) @[build/NutShell.fir.opt.mlir 2139:27]
    node _decodeList_T_18 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2142:27]
    node _decodeList_T_19 = eq(UInt<6>(51), _decodeList_T_18) @[build/NutShell.fir.opt.mlir 2145:27]
    node _decodeList_T_20 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2147:27]
    node _decodeList_T_21 = eq(UInt<13>(4147), _decodeList_T_20) @[build/NutShell.fir.opt.mlir 2150:27]
    node _decodeList_T_22 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2152:27]
    node _decodeList_T_23 = eq(UInt<14>(8243), _decodeList_T_22) @[build/NutShell.fir.opt.mlir 2155:27]
    node _decodeList_T_24 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2157:27]
    node _decodeList_T_25 = eq(UInt<14>(12339), _decodeList_T_24) @[build/NutShell.fir.opt.mlir 2160:27]
    node _decodeList_T_26 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2162:27]
    node _decodeList_T_27 = eq(UInt<15>(16435), _decodeList_T_26) @[build/NutShell.fir.opt.mlir 2165:27]
    node _decodeList_T_28 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2167:27]
    node _decodeList_T_29 = eq(UInt<15>(20531), _decodeList_T_28) @[build/NutShell.fir.opt.mlir 2170:27]
    node _decodeList_T_30 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2172:27]
    node _decodeList_T_31 = eq(UInt<15>(24627), _decodeList_T_30) @[build/NutShell.fir.opt.mlir 2175:27]
    node _decodeList_T_32 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2177:27]
    node _decodeList_T_33 = eq(UInt<15>(28723), _decodeList_T_32) @[build/NutShell.fir.opt.mlir 2180:27]
    node _decodeList_T_34 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2182:27]
    node _decodeList_T_35 = eq(UInt<31>(1073741875), _decodeList_T_34) @[build/NutShell.fir.opt.mlir 2185:27]
    node _decodeList_T_36 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2187:27]
    node _decodeList_T_37 = eq(UInt<31>(1073762355), _decodeList_T_36) @[build/NutShell.fir.opt.mlir 2190:27]
    node _decodeList_T_38 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2193:27]
    node _decodeList_T_39 = eq(UInt<5>(23), _decodeList_T_38) @[build/NutShell.fir.opt.mlir 2196:27]
    node _decodeList_T_40 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2198:27]
    node _decodeList_T_41 = eq(UInt<6>(55), _decodeList_T_40) @[build/NutShell.fir.opt.mlir 2201:27]
    node _decodeList_T_42 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 2203:27]
    node _decodeList_T_43 = eq(UInt<7>(111), _decodeList_T_42) @[build/NutShell.fir.opt.mlir 2206:27]
    node _decodeList_T_44 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2208:27]
    node _decodeList_T_45 = eq(UInt<7>(103), _decodeList_T_44) @[build/NutShell.fir.opt.mlir 2211:27]
    node _decodeList_T_46 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2213:27]
    node _decodeList_T_47 = eq(UInt<7>(99), _decodeList_T_46) @[build/NutShell.fir.opt.mlir 2216:27]
    node _decodeList_T_48 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2218:27]
    node _decodeList_T_49 = eq(UInt<13>(4195), _decodeList_T_48) @[build/NutShell.fir.opt.mlir 2221:27]
    node _decodeList_T_50 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2223:27]
    node _decodeList_T_51 = eq(UInt<15>(16483), _decodeList_T_50) @[build/NutShell.fir.opt.mlir 2226:27]
    node _decodeList_T_52 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2228:27]
    node _decodeList_T_53 = eq(UInt<15>(20579), _decodeList_T_52) @[build/NutShell.fir.opt.mlir 2231:27]
    node _decodeList_T_54 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2233:27]
    node _decodeList_T_55 = eq(UInt<15>(24675), _decodeList_T_54) @[build/NutShell.fir.opt.mlir 2236:27]
    node _decodeList_T_56 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2238:27]
    node _decodeList_T_57 = eq(UInt<15>(28771), _decodeList_T_56) @[build/NutShell.fir.opt.mlir 2241:27]
    node _decodeList_T_58 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2243:27]
    node _decodeList_T_59 = eq(UInt<2>(3), _decodeList_T_58) @[build/NutShell.fir.opt.mlir 2246:27]
    node _decodeList_T_60 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2248:27]
    node _decodeList_T_61 = eq(UInt<13>(4099), _decodeList_T_60) @[build/NutShell.fir.opt.mlir 2251:27]
    node _decodeList_T_62 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2253:27]
    node _decodeList_T_63 = eq(UInt<14>(8195), _decodeList_T_62) @[build/NutShell.fir.opt.mlir 2256:27]
    node _decodeList_T_64 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2258:27]
    node _decodeList_T_65 = eq(UInt<15>(16387), _decodeList_T_64) @[build/NutShell.fir.opt.mlir 2261:27]
    node _decodeList_T_66 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2263:27]
    node _decodeList_T_67 = eq(UInt<15>(20483), _decodeList_T_66) @[build/NutShell.fir.opt.mlir 2266:27]
    node _decodeList_T_68 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2268:27]
    node _decodeList_T_69 = eq(UInt<6>(35), _decodeList_T_68) @[build/NutShell.fir.opt.mlir 2271:27]
    node _decodeList_T_70 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2273:27]
    node _decodeList_T_71 = eq(UInt<13>(4131), _decodeList_T_70) @[build/NutShell.fir.opt.mlir 2276:27]
    node _decodeList_T_72 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2278:27]
    node _decodeList_T_73 = eq(UInt<14>(8227), _decodeList_T_72) @[build/NutShell.fir.opt.mlir 2281:27]
    node _decodeList_T_74 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2283:27]
    node _decodeList_T_75 = eq(UInt<5>(27), _decodeList_T_74) @[build/NutShell.fir.opt.mlir 2286:27]
    node _decodeList_T_76 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2288:27]
    node _decodeList_T_77 = eq(UInt<13>(4123), _decodeList_T_76) @[build/NutShell.fir.opt.mlir 2291:27]
    node _decodeList_T_78 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2293:27]
    node _decodeList_T_79 = eq(UInt<15>(20507), _decodeList_T_78) @[build/NutShell.fir.opt.mlir 2296:27]
    node _decodeList_T_80 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2298:27]
    node _decodeList_T_81 = eq(UInt<31>(1073762331), _decodeList_T_80) @[build/NutShell.fir.opt.mlir 2301:27]
    node _decodeList_T_82 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2303:27]
    node _decodeList_T_83 = eq(UInt<13>(4155), _decodeList_T_82) @[build/NutShell.fir.opt.mlir 2306:27]
    node _decodeList_T_84 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2308:27]
    node _decodeList_T_85 = eq(UInt<15>(20539), _decodeList_T_84) @[build/NutShell.fir.opt.mlir 2311:27]
    node _decodeList_T_86 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2313:27]
    node _decodeList_T_87 = eq(UInt<31>(1073762363), _decodeList_T_86) @[build/NutShell.fir.opt.mlir 2316:27]
    node _decodeList_T_88 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2318:27]
    node _decodeList_T_89 = eq(UInt<6>(59), _decodeList_T_88) @[build/NutShell.fir.opt.mlir 2321:27]
    node _decodeList_T_90 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2323:27]
    node _decodeList_T_91 = eq(UInt<31>(1073741883), _decodeList_T_90) @[build/NutShell.fir.opt.mlir 2326:27]
    node _decodeList_T_92 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2328:27]
    node _decodeList_T_93 = eq(UInt<15>(24579), _decodeList_T_92) @[build/NutShell.fir.opt.mlir 2331:27]
    node _decodeList_T_94 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2333:27]
    node _decodeList_T_95 = eq(UInt<14>(12291), _decodeList_T_94) @[build/NutShell.fir.opt.mlir 2336:27]
    node _decodeList_T_96 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2338:27]
    node _decodeList_T_97 = eq(UInt<14>(12323), _decodeList_T_96) @[build/NutShell.fir.opt.mlir 2341:27]
    node _decodeList_T_98 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2343:27]
    node _decodeList_T_99 = eq(UInt<7>(107), _decodeList_T_98) @[build/NutShell.fir.opt.mlir 2346:27]
    node _decodeList_T_100 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2348:28]
    node _decodeList_T_101 = eq(UInt<26>(33554483), _decodeList_T_100) @[build/NutShell.fir.opt.mlir 2351:28]
    node _decodeList_T_102 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2353:28]
    node _decodeList_T_103 = eq(UInt<26>(33558579), _decodeList_T_102) @[build/NutShell.fir.opt.mlir 2356:28]
    node _decodeList_T_104 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2358:28]
    node _decodeList_T_105 = eq(UInt<26>(33562675), _decodeList_T_104) @[build/NutShell.fir.opt.mlir 2361:28]
    node _decodeList_T_106 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2363:28]
    node _decodeList_T_107 = eq(UInt<26>(33566771), _decodeList_T_106) @[build/NutShell.fir.opt.mlir 2366:28]
    node _decodeList_T_108 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2368:28]
    node _decodeList_T_109 = eq(UInt<26>(33570867), _decodeList_T_108) @[build/NutShell.fir.opt.mlir 2371:28]
    node _decodeList_T_110 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2373:28]
    node _decodeList_T_111 = eq(UInt<26>(33574963), _decodeList_T_110) @[build/NutShell.fir.opt.mlir 2376:28]
    node _decodeList_T_112 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2378:28]
    node _decodeList_T_113 = eq(UInt<26>(33579059), _decodeList_T_112) @[build/NutShell.fir.opt.mlir 2381:28]
    node _decodeList_T_114 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2383:28]
    node _decodeList_T_115 = eq(UInt<26>(33583155), _decodeList_T_114) @[build/NutShell.fir.opt.mlir 2386:28]
    node _decodeList_T_116 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2388:28]
    node _decodeList_T_117 = eq(UInt<26>(33554491), _decodeList_T_116) @[build/NutShell.fir.opt.mlir 2391:28]
    node _decodeList_T_118 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2393:28]
    node _decodeList_T_119 = eq(UInt<26>(33570875), _decodeList_T_118) @[build/NutShell.fir.opt.mlir 2396:28]
    node _decodeList_T_120 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2398:28]
    node _decodeList_T_121 = eq(UInt<26>(33574971), _decodeList_T_120) @[build/NutShell.fir.opt.mlir 2401:28]
    node _decodeList_T_122 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2403:28]
    node _decodeList_T_123 = eq(UInt<26>(33579067), _decodeList_T_122) @[build/NutShell.fir.opt.mlir 2406:28]
    node _decodeList_T_124 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 2408:28]
    node _decodeList_T_125 = eq(UInt<26>(33583163), _decodeList_T_124) @[build/NutShell.fir.opt.mlir 2411:28]
    node _decodeList_T_126 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2414:28]
    node _decodeList_T_127 = eq(UInt<1>(0), _decodeList_T_126) @[build/NutShell.fir.opt.mlir 2417:28]
    node _decodeList_T_128 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2420:28]
    node _decodeList_T_129 = eq(UInt<1>(0), _decodeList_T_128) @[build/NutShell.fir.opt.mlir 2422:28]
    node _decodeList_T_130 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2424:28]
    node _decodeList_T_131 = eq(UInt<15>(16384), _decodeList_T_130) @[build/NutShell.fir.opt.mlir 2427:28]
    node _decodeList_T_132 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2429:28]
    node _decodeList_T_133 = eq(UInt<15>(24576), _decodeList_T_132) @[build/NutShell.fir.opt.mlir 2432:28]
    node _decodeList_T_134 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2434:28]
    node _decodeList_T_135 = eq(UInt<16>(49152), _decodeList_T_134) @[build/NutShell.fir.opt.mlir 2437:28]
    node _decodeList_T_136 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2439:28]
    node _decodeList_T_137 = eq(UInt<16>(57344), _decodeList_T_136) @[build/NutShell.fir.opt.mlir 2442:28]
    node _decodeList_T_138 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 2445:28]
    node _decodeList_T_139 = eq(UInt<1>(1), _decodeList_T_138) @[build/NutShell.fir.opt.mlir 2448:28]
    node _decodeList_T_140 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2450:28]
    node _decodeList_T_141 = eq(UInt<1>(1), _decodeList_T_140) @[build/NutShell.fir.opt.mlir 2452:28]
    node _decodeList_T_142 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2454:28]
    node _decodeList_T_143 = eq(UInt<14>(8193), _decodeList_T_142) @[build/NutShell.fir.opt.mlir 2457:28]
    node _decodeList_T_144 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2459:28]
    node _decodeList_T_145 = eq(UInt<15>(16385), _decodeList_T_144) @[build/NutShell.fir.opt.mlir 2462:28]
    node _decodeList_T_146 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 2464:28]
    node _decodeList_T_147 = eq(UInt<15>(24833), _decodeList_T_146) @[build/NutShell.fir.opt.mlir 2467:28]
    node _decodeList_T_148 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2469:28]
    node _decodeList_T_149 = eq(UInt<15>(24577), _decodeList_T_148) @[build/NutShell.fir.opt.mlir 2472:28]
    node _decodeList_T_150 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2475:28]
    node _decodeList_T_151 = eq(UInt<16>(32769), _decodeList_T_150) @[build/NutShell.fir.opt.mlir 2478:28]
    node _decodeList_T_152 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2480:28]
    node _decodeList_T_153 = eq(UInt<16>(33793), _decodeList_T_152) @[build/NutShell.fir.opt.mlir 2483:28]
    node _decodeList_T_154 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 2485:28]
    node _decodeList_T_155 = eq(UInt<16>(34817), _decodeList_T_154) @[build/NutShell.fir.opt.mlir 2488:28]
    node _decodeList_T_156 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2491:28]
    node _decodeList_T_157 = eq(UInt<16>(35841), _decodeList_T_156) @[build/NutShell.fir.opt.mlir 2494:28]
    node _decodeList_T_158 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2496:28]
    node _decodeList_T_159 = eq(UInt<16>(35873), _decodeList_T_158) @[build/NutShell.fir.opt.mlir 2499:28]
    node _decodeList_T_160 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2501:28]
    node _decodeList_T_161 = eq(UInt<16>(35905), _decodeList_T_160) @[build/NutShell.fir.opt.mlir 2504:28]
    node _decodeList_T_162 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2506:28]
    node _decodeList_T_163 = eq(UInt<16>(35937), _decodeList_T_162) @[build/NutShell.fir.opt.mlir 2509:28]
    node _decodeList_T_164 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2511:28]
    node _decodeList_T_165 = eq(UInt<16>(39937), _decodeList_T_164) @[build/NutShell.fir.opt.mlir 2514:28]
    node _decodeList_T_166 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 2516:28]
    node _decodeList_T_167 = eq(UInt<16>(39969), _decodeList_T_166) @[build/NutShell.fir.opt.mlir 2519:28]
    node _decodeList_T_168 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2521:28]
    node _decodeList_T_169 = eq(UInt<16>(40961), _decodeList_T_168) @[build/NutShell.fir.opt.mlir 2524:28]
    node _decodeList_T_170 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2526:28]
    node _decodeList_T_171 = eq(UInt<16>(49153), _decodeList_T_170) @[build/NutShell.fir.opt.mlir 2529:28]
    node _decodeList_T_172 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2531:28]
    node _decodeList_T_173 = eq(UInt<16>(57345), _decodeList_T_172) @[build/NutShell.fir.opt.mlir 2534:28]
    node _decodeList_T_174 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2536:28]
    node _decodeList_T_175 = eq(UInt<2>(2), _decodeList_T_174) @[build/NutShell.fir.opt.mlir 2539:28]
    node _decodeList_T_176 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2541:28]
    node _decodeList_T_177 = eq(UInt<15>(16386), _decodeList_T_176) @[build/NutShell.fir.opt.mlir 2544:28]
    node _decodeList_T_178 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2546:28]
    node _decodeList_T_179 = eq(UInt<15>(24578), _decodeList_T_178) @[build/NutShell.fir.opt.mlir 2549:28]
    node _decodeList_T_180 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 2552:28]
    node _decodeList_T_181 = eq(UInt<16>(32770), _decodeList_T_180) @[build/NutShell.fir.opt.mlir 2555:28]
    node _decodeList_T_182 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 2558:28]
    node _decodeList_T_183 = eq(UInt<16>(32770), _decodeList_T_182) @[build/NutShell.fir.opt.mlir 2560:28]
    node _decodeList_T_184 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 2563:28]
    node _decodeList_T_185 = eq(UInt<16>(36866), _decodeList_T_184) @[build/NutShell.fir.opt.mlir 2566:28]
    node _decodeList_T_186 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 2568:28]
    node _decodeList_T_187 = eq(UInt<16>(36866), _decodeList_T_186) @[build/NutShell.fir.opt.mlir 2570:28]
    node _decodeList_T_188 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 2572:28]
    node _decodeList_T_189 = eq(UInt<16>(36866), _decodeList_T_188) @[build/NutShell.fir.opt.mlir 2574:28]
    node _decodeList_T_190 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2576:28]
    node _decodeList_T_191 = eq(UInt<16>(49154), _decodeList_T_190) @[build/NutShell.fir.opt.mlir 2579:28]
    node _decodeList_T_192 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 2581:28]
    node _decodeList_T_193 = eq(UInt<16>(57346), _decodeList_T_192) @[build/NutShell.fir.opt.mlir 2584:28]
    node _decodeList_T_194 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2586:28]
    node _decodeList_T_195 = eq(UInt<7>(115), _decodeList_T_194) @[build/NutShell.fir.opt.mlir 2589:28]
    node _decodeList_T_196 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2591:28]
    node _decodeList_T_197 = eq(UInt<21>(1048691), _decodeList_T_196) @[build/NutShell.fir.opt.mlir 2594:28]
    node _decodeList_T_198 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2596:28]
    node _decodeList_T_199 = eq(UInt<30>(807403635), _decodeList_T_198) @[build/NutShell.fir.opt.mlir 2599:28]
    node _decodeList_T_200 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2601:28]
    node _decodeList_T_201 = eq(UInt<4>(15), _decodeList_T_200) @[build/NutShell.fir.opt.mlir 2604:28]
    node _decodeList_T_202 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2606:28]
    node _decodeList_T_203 = eq(UInt<29>(273678451), _decodeList_T_202) @[build/NutShell.fir.opt.mlir 2609:28]
    node _decodeList_T_204 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2611:28]
    node _decodeList_T_205 = eq(UInt<29>(270532723), _decodeList_T_204) @[build/NutShell.fir.opt.mlir 2614:28]
    node _decodeList_T_206 = and(io.in.bits.instr, UInt<32>(4261445631)) @[build/NutShell.fir.opt.mlir 2617:28]
    node _decodeList_T_207 = eq(UInt<29>(301990003), _decodeList_T_206) @[build/NutShell.fir.opt.mlir 2620:28]
    node _decodeList_T_208 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 2623:28]
    node _decodeList_T_209 = eq(UInt<29>(268447791), _decodeList_T_208) @[build/NutShell.fir.opt.mlir 2626:28]
    node _decodeList_T_210 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 2628:28]
    node _decodeList_T_211 = eq(UInt<29>(268443695), _decodeList_T_210) @[build/NutShell.fir.opt.mlir 2631:28]
    node _decodeList_T_212 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 2634:28]
    node _decodeList_T_213 = eq(UInt<29>(402665519), _decodeList_T_212) @[build/NutShell.fir.opt.mlir 2637:28]
    node _decodeList_T_214 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 2639:28]
    node _decodeList_T_215 = eq(UInt<29>(402661423), _decodeList_T_214) @[build/NutShell.fir.opt.mlir 2642:28]
    node _decodeList_T_216 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2645:28]
    node _decodeList_T_217 = eq(UInt<28>(134225967), _decodeList_T_216) @[build/NutShell.fir.opt.mlir 2648:28]
    node _decodeList_T_218 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2650:28]
    node _decodeList_T_219 = eq(UInt<14>(8239), _decodeList_T_218) @[build/NutShell.fir.opt.mlir 2653:28]
    node _decodeList_T_220 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2655:28]
    node _decodeList_T_221 = eq(UInt<30>(536879151), _decodeList_T_220) @[build/NutShell.fir.opt.mlir 2658:28]
    node _decodeList_T_222 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2660:28]
    node _decodeList_T_223 = eq(UInt<31>(1610620975), _decodeList_T_222) @[build/NutShell.fir.opt.mlir 2663:28]
    node _decodeList_T_224 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2665:28]
    node _decodeList_T_225 = eq(UInt<31>(1073750063), _decodeList_T_224) @[build/NutShell.fir.opt.mlir 2668:28]
    node _decodeList_T_226 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2670:28]
    node _decodeList_T_227 = eq(UInt<32>(2147491887), _decodeList_T_226) @[build/NutShell.fir.opt.mlir 2673:28]
    node _decodeList_T_228 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2675:28]
    node _decodeList_T_229 = eq(UInt<32>(2684362799), _decodeList_T_228) @[build/NutShell.fir.opt.mlir 2678:28]
    node _decodeList_T_230 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2680:28]
    node _decodeList_T_231 = eq(UInt<32>(3221233711), _decodeList_T_230) @[build/NutShell.fir.opt.mlir 2683:28]
    node _decodeList_T_232 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 2685:28]
    node _decodeList_T_233 = eq(UInt<32>(3758104623), _decodeList_T_232) @[build/NutShell.fir.opt.mlir 2688:28]
    node _decodeList_T_234 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2690:28]
    node _decodeList_T_235 = eq(UInt<13>(4211), _decodeList_T_234) @[build/NutShell.fir.opt.mlir 2693:28]
    node _decodeList_T_236 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2695:28]
    node _decodeList_T_237 = eq(UInt<14>(8307), _decodeList_T_236) @[build/NutShell.fir.opt.mlir 2698:28]
    node _decodeList_T_238 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2700:28]
    node _decodeList_T_239 = eq(UInt<14>(12403), _decodeList_T_238) @[build/NutShell.fir.opt.mlir 2703:28]
    node _decodeList_T_240 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2705:28]
    node _decodeList_T_241 = eq(UInt<15>(20595), _decodeList_T_240) @[build/NutShell.fir.opt.mlir 2708:28]
    node _decodeList_T_242 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2710:28]
    node _decodeList_T_243 = eq(UInt<15>(24691), _decodeList_T_242) @[build/NutShell.fir.opt.mlir 2713:28]
    node _decodeList_T_244 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 2715:28]
    node _decodeList_T_245 = eq(UInt<15>(28787), _decodeList_T_244) @[build/NutShell.fir.opt.mlir 2718:28]
    node _decodeList_T_246 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 2720:28]
    node _decodeList_T_247 = eq(UInt<13>(4111), _decodeList_T_246) @[build/NutShell.fir.opt.mlir 2723:28]
    node _decodeList_T_248 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 2725:28]
    node _decodeList_T_249 = mux(_decodeList_T_245, UInt<3>(4), _decodeList_T_248) @[build/NutShell.fir.opt.mlir 2728:28]
    node _decodeList_T_250 = mux(_decodeList_T_243, UInt<3>(4), _decodeList_T_249) @[build/NutShell.fir.opt.mlir 2730:28]
    node _decodeList_T_251 = mux(_decodeList_T_241, UInt<3>(4), _decodeList_T_250) @[build/NutShell.fir.opt.mlir 2732:28]
    node _decodeList_T_252 = mux(_decodeList_T_239, UInt<3>(4), _decodeList_T_251) @[build/NutShell.fir.opt.mlir 2734:28]
    node _decodeList_T_253 = mux(_decodeList_T_237, UInt<3>(4), _decodeList_T_252) @[build/NutShell.fir.opt.mlir 2736:28]
    node _decodeList_T_254 = mux(_decodeList_T_235, UInt<3>(4), _decodeList_T_253) @[build/NutShell.fir.opt.mlir 2738:28]
    node _decodeList_T_255 = mux(_decodeList_T_233, UInt<3>(5), _decodeList_T_254) @[build/NutShell.fir.opt.mlir 2741:28]
    node _decodeList_T_256 = mux(_decodeList_T_231, UInt<3>(5), _decodeList_T_255) @[build/NutShell.fir.opt.mlir 2743:28]
    node _decodeList_T_257 = mux(_decodeList_T_229, UInt<3>(5), _decodeList_T_256) @[build/NutShell.fir.opt.mlir 2745:28]
    node _decodeList_T_258 = mux(_decodeList_T_227, UInt<3>(5), _decodeList_T_257) @[build/NutShell.fir.opt.mlir 2747:28]
    node _decodeList_T_259 = mux(_decodeList_T_225, UInt<3>(5), _decodeList_T_258) @[build/NutShell.fir.opt.mlir 2749:28]
    node _decodeList_T_260 = mux(_decodeList_T_223, UInt<3>(5), _decodeList_T_259) @[build/NutShell.fir.opt.mlir 2751:28]
    node _decodeList_T_261 = mux(_decodeList_T_221, UInt<3>(5), _decodeList_T_260) @[build/NutShell.fir.opt.mlir 2753:28]
    node _decodeList_T_262 = mux(_decodeList_T_219, UInt<3>(5), _decodeList_T_261) @[build/NutShell.fir.opt.mlir 2755:28]
    node _decodeList_T_263 = mux(_decodeList_T_217, UInt<3>(5), _decodeList_T_262) @[build/NutShell.fir.opt.mlir 2757:28]
    node _decodeList_T_264 = mux(_decodeList_T_215, UInt<4>(15), _decodeList_T_263) @[build/NutShell.fir.opt.mlir 2759:28]
    node _decodeList_T_265 = mux(_decodeList_T_213, UInt<4>(15), _decodeList_T_264) @[build/NutShell.fir.opt.mlir 2761:28]
    node _decodeList_T_266 = mux(_decodeList_T_211, UInt<3>(4), _decodeList_T_265) @[build/NutShell.fir.opt.mlir 2763:28]
    node _decodeList_T_267 = mux(_decodeList_T_209, UInt<3>(4), _decodeList_T_266) @[build/NutShell.fir.opt.mlir 2765:28]
    node _decodeList_T_268 = mux(_decodeList_T_207, UInt<3>(5), _decodeList_T_267) @[build/NutShell.fir.opt.mlir 2767:28]
    node _decodeList_T_269 = mux(_decodeList_T_205, UInt<3>(4), _decodeList_T_268) @[build/NutShell.fir.opt.mlir 2769:28]
    node _decodeList_T_270 = mux(_decodeList_T_203, UInt<3>(4), _decodeList_T_269) @[build/NutShell.fir.opt.mlir 2771:28]
    node _decodeList_T_271 = mux(_decodeList_T_201, UInt<2>(2), _decodeList_T_270) @[build/NutShell.fir.opt.mlir 2773:28]
    node _decodeList_T_272 = mux(_decodeList_T_199, UInt<3>(4), _decodeList_T_271) @[build/NutShell.fir.opt.mlir 2775:28]
    node _decodeList_T_273 = mux(_decodeList_T_197, UInt<3>(4), _decodeList_T_272) @[build/NutShell.fir.opt.mlir 2777:28]
    node _decodeList_T_274 = mux(_decodeList_T_195, UInt<3>(4), _decodeList_T_273) @[build/NutShell.fir.opt.mlir 2779:28]
    node _decodeList_T_275 = mux(_decodeList_T_193, UInt<2>(2), _decodeList_T_274) @[build/NutShell.fir.opt.mlir 2781:28]
    node _decodeList_T_276 = mux(_decodeList_T_191, UInt<2>(2), _decodeList_T_275) @[build/NutShell.fir.opt.mlir 2783:28]
    node _decodeList_T_277 = mux(_decodeList_T_189, UInt<3>(5), _decodeList_T_276) @[build/NutShell.fir.opt.mlir 2785:28]
    node _decodeList_T_278 = mux(_decodeList_T_187, UInt<3>(4), _decodeList_T_277) @[build/NutShell.fir.opt.mlir 2787:28]
    node _decodeList_T_279 = mux(_decodeList_T_185, UInt<3>(4), _decodeList_T_278) @[build/NutShell.fir.opt.mlir 2789:28]
    node _decodeList_T_280 = mux(_decodeList_T_183, UInt<3>(5), _decodeList_T_279) @[build/NutShell.fir.opt.mlir 2791:28]
    node _decodeList_T_281 = mux(_decodeList_T_181, UInt<3>(4), _decodeList_T_280) @[build/NutShell.fir.opt.mlir 2793:28]
    node _decodeList_T_282 = mux(_decodeList_T_179, UInt<3>(4), _decodeList_T_281) @[build/NutShell.fir.opt.mlir 2795:28]
    node _decodeList_T_283 = mux(_decodeList_T_177, UInt<3>(4), _decodeList_T_282) @[build/NutShell.fir.opt.mlir 2797:28]
    node _decodeList_T_284 = mux(_decodeList_T_175, UInt<3>(4), _decodeList_T_283) @[build/NutShell.fir.opt.mlir 2799:28]
    node _decodeList_T_285 = mux(_decodeList_T_173, UInt<1>(1), _decodeList_T_284) @[build/NutShell.fir.opt.mlir 2801:28]
    node _decodeList_T_286 = mux(_decodeList_T_171, UInt<1>(1), _decodeList_T_285) @[build/NutShell.fir.opt.mlir 2803:28]
    node _decodeList_T_287 = mux(_decodeList_T_169, UInt<3>(7), _decodeList_T_286) @[build/NutShell.fir.opt.mlir 2806:28]
    node _decodeList_T_288 = mux(_decodeList_T_167, UInt<3>(5), _decodeList_T_287) @[build/NutShell.fir.opt.mlir 2808:28]
    node _decodeList_T_289 = mux(_decodeList_T_165, UInt<3>(5), _decodeList_T_288) @[build/NutShell.fir.opt.mlir 2810:28]
    node _decodeList_T_290 = mux(_decodeList_T_163, UInt<3>(5), _decodeList_T_289) @[build/NutShell.fir.opt.mlir 2812:28]
    node _decodeList_T_291 = mux(_decodeList_T_161, UInt<3>(5), _decodeList_T_290) @[build/NutShell.fir.opt.mlir 2814:28]
    node _decodeList_T_292 = mux(_decodeList_T_159, UInt<3>(5), _decodeList_T_291) @[build/NutShell.fir.opt.mlir 2816:28]
    node _decodeList_T_293 = mux(_decodeList_T_157, UInt<3>(5), _decodeList_T_292) @[build/NutShell.fir.opt.mlir 2818:28]
    node _decodeList_T_294 = mux(_decodeList_T_155, UInt<3>(4), _decodeList_T_293) @[build/NutShell.fir.opt.mlir 2820:28]
    node _decodeList_T_295 = mux(_decodeList_T_153, UInt<3>(4), _decodeList_T_294) @[build/NutShell.fir.opt.mlir 2822:28]
    node _decodeList_T_296 = mux(_decodeList_T_151, UInt<3>(4), _decodeList_T_295) @[build/NutShell.fir.opt.mlir 2824:28]
    node _decodeList_T_297 = mux(_decodeList_T_149, UInt<3>(4), _decodeList_T_296) @[build/NutShell.fir.opt.mlir 2826:28]
    node _decodeList_T_298 = mux(_decodeList_T_147, UInt<3>(4), _decodeList_T_297) @[build/NutShell.fir.opt.mlir 2828:28]
    node _decodeList_T_299 = mux(_decodeList_T_145, UInt<3>(4), _decodeList_T_298) @[build/NutShell.fir.opt.mlir 2830:28]
    node _decodeList_T_300 = mux(_decodeList_T_143, UInt<3>(4), _decodeList_T_299) @[build/NutShell.fir.opt.mlir 2832:28]
    node _decodeList_T_301 = mux(_decodeList_T_141, UInt<3>(4), _decodeList_T_300) @[build/NutShell.fir.opt.mlir 2834:28]
    node _decodeList_T_302 = mux(_decodeList_T_139, UInt<3>(4), _decodeList_T_301) @[build/NutShell.fir.opt.mlir 2836:28]
    node _decodeList_T_303 = mux(_decodeList_T_137, UInt<2>(2), _decodeList_T_302) @[build/NutShell.fir.opt.mlir 2838:28]
    node _decodeList_T_304 = mux(_decodeList_T_135, UInt<2>(2), _decodeList_T_303) @[build/NutShell.fir.opt.mlir 2840:28]
    node _decodeList_T_305 = mux(_decodeList_T_133, UInt<3>(4), _decodeList_T_304) @[build/NutShell.fir.opt.mlir 2842:28]
    node _decodeList_T_306 = mux(_decodeList_T_131, UInt<3>(4), _decodeList_T_305) @[build/NutShell.fir.opt.mlir 2844:28]
    node _decodeList_T_307 = mux(_decodeList_T_129, UInt<3>(4), _decodeList_T_306) @[build/NutShell.fir.opt.mlir 2846:28]
    node _decodeList_T_308 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_307) @[build/NutShell.fir.opt.mlir 2848:28]
    node _decodeList_T_309 = mux(_decodeList_T_125, UInt<3>(5), _decodeList_T_308) @[build/NutShell.fir.opt.mlir 2850:28]
    node _decodeList_T_310 = mux(_decodeList_T_123, UInt<3>(5), _decodeList_T_309) @[build/NutShell.fir.opt.mlir 2852:28]
    node _decodeList_T_311 = mux(_decodeList_T_121, UInt<3>(5), _decodeList_T_310) @[build/NutShell.fir.opt.mlir 2854:28]
    node _decodeList_T_312 = mux(_decodeList_T_119, UInt<3>(5), _decodeList_T_311) @[build/NutShell.fir.opt.mlir 2856:28]
    node _decodeList_T_313 = mux(_decodeList_T_117, UInt<3>(5), _decodeList_T_312) @[build/NutShell.fir.opt.mlir 2858:28]
    node _decodeList_T_314 = mux(_decodeList_T_115, UInt<3>(5), _decodeList_T_313) @[build/NutShell.fir.opt.mlir 2860:28]
    node _decodeList_T_315 = mux(_decodeList_T_113, UInt<3>(5), _decodeList_T_314) @[build/NutShell.fir.opt.mlir 2862:28]
    node _decodeList_T_316 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_315) @[build/NutShell.fir.opt.mlir 2864:28]
    node _decodeList_T_317 = mux(_decodeList_T_109, UInt<3>(5), _decodeList_T_316) @[build/NutShell.fir.opt.mlir 2866:28]
    node _decodeList_T_318 = mux(_decodeList_T_107, UInt<3>(5), _decodeList_T_317) @[build/NutShell.fir.opt.mlir 2868:28]
    node _decodeList_T_319 = mux(_decodeList_T_105, UInt<3>(5), _decodeList_T_318) @[build/NutShell.fir.opt.mlir 2870:28]
    node _decodeList_T_320 = mux(_decodeList_T_103, UInt<3>(5), _decodeList_T_319) @[build/NutShell.fir.opt.mlir 2872:28]
    node _decodeList_T_321 = mux(_decodeList_T_101, UInt<3>(5), _decodeList_T_320) @[build/NutShell.fir.opt.mlir 2874:28]
    node _decodeList_T_322 = mux(_decodeList_T_99, UInt<3>(4), _decodeList_T_321) @[build/NutShell.fir.opt.mlir 2876:28]
    node _decodeList_T_323 = mux(_decodeList_T_97, UInt<2>(2), _decodeList_T_322) @[build/NutShell.fir.opt.mlir 2878:28]
    node _decodeList_T_324 = mux(_decodeList_T_95, UInt<3>(4), _decodeList_T_323) @[build/NutShell.fir.opt.mlir 2880:28]
    node _decodeList_T_325 = mux(_decodeList_T_93, UInt<3>(4), _decodeList_T_324) @[build/NutShell.fir.opt.mlir 2882:28]
    node _decodeList_T_326 = mux(_decodeList_T_91, UInt<3>(5), _decodeList_T_325) @[build/NutShell.fir.opt.mlir 2884:28]
    node _decodeList_T_327 = mux(_decodeList_T_89, UInt<3>(5), _decodeList_T_326) @[build/NutShell.fir.opt.mlir 2886:28]
    node _decodeList_T_328 = mux(_decodeList_T_87, UInt<3>(5), _decodeList_T_327) @[build/NutShell.fir.opt.mlir 2888:28]
    node _decodeList_T_329 = mux(_decodeList_T_85, UInt<3>(5), _decodeList_T_328) @[build/NutShell.fir.opt.mlir 2890:28]
    node _decodeList_T_330 = mux(_decodeList_T_83, UInt<3>(5), _decodeList_T_329) @[build/NutShell.fir.opt.mlir 2892:28]
    node _decodeList_T_331 = mux(_decodeList_T_81, UInt<3>(4), _decodeList_T_330) @[build/NutShell.fir.opt.mlir 2894:28]
    node _decodeList_T_332 = mux(_decodeList_T_79, UInt<3>(4), _decodeList_T_331) @[build/NutShell.fir.opt.mlir 2896:28]
    node _decodeList_T_333 = mux(_decodeList_T_77, UInt<3>(4), _decodeList_T_332) @[build/NutShell.fir.opt.mlir 2898:28]
    node _decodeList_T_334 = mux(_decodeList_T_75, UInt<3>(4), _decodeList_T_333) @[build/NutShell.fir.opt.mlir 2900:28]
    node _decodeList_T_335 = mux(_decodeList_T_73, UInt<2>(2), _decodeList_T_334) @[build/NutShell.fir.opt.mlir 2902:28]
    node _decodeList_T_336 = mux(_decodeList_T_71, UInt<2>(2), _decodeList_T_335) @[build/NutShell.fir.opt.mlir 2904:28]
    node _decodeList_T_337 = mux(_decodeList_T_69, UInt<2>(2), _decodeList_T_336) @[build/NutShell.fir.opt.mlir 2906:28]
    node _decodeList_T_338 = mux(_decodeList_T_67, UInt<3>(4), _decodeList_T_337) @[build/NutShell.fir.opt.mlir 2908:28]
    node _decodeList_T_339 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_338) @[build/NutShell.fir.opt.mlir 2910:28]
    node _decodeList_T_340 = mux(_decodeList_T_63, UInt<3>(4), _decodeList_T_339) @[build/NutShell.fir.opt.mlir 2912:28]
    node _decodeList_T_341 = mux(_decodeList_T_61, UInt<3>(4), _decodeList_T_340) @[build/NutShell.fir.opt.mlir 2914:28]
    node _decodeList_T_342 = mux(_decodeList_T_59, UInt<3>(4), _decodeList_T_341) @[build/NutShell.fir.opt.mlir 2916:28]
    node _decodeList_T_343 = mux(_decodeList_T_57, UInt<1>(1), _decodeList_T_342) @[build/NutShell.fir.opt.mlir 2918:28]
    node _decodeList_T_344 = mux(_decodeList_T_55, UInt<1>(1), _decodeList_T_343) @[build/NutShell.fir.opt.mlir 2920:28]
    node _decodeList_T_345 = mux(_decodeList_T_53, UInt<1>(1), _decodeList_T_344) @[build/NutShell.fir.opt.mlir 2922:28]
    node _decodeList_T_346 = mux(_decodeList_T_51, UInt<1>(1), _decodeList_T_345) @[build/NutShell.fir.opt.mlir 2924:28]
    node _decodeList_T_347 = mux(_decodeList_T_49, UInt<1>(1), _decodeList_T_346) @[build/NutShell.fir.opt.mlir 2926:28]
    node _decodeList_T_348 = mux(_decodeList_T_47, UInt<1>(1), _decodeList_T_347) @[build/NutShell.fir.opt.mlir 2928:28]
    node _decodeList_T_349 = mux(_decodeList_T_45, UInt<3>(4), _decodeList_T_348) @[build/NutShell.fir.opt.mlir 2930:28]
    node _decodeList_T_350 = mux(_decodeList_T_43, UInt<3>(7), _decodeList_T_349) @[build/NutShell.fir.opt.mlir 2932:28]
    node _decodeList_T_351 = mux(_decodeList_T_41, UInt<3>(6), _decodeList_T_350) @[build/NutShell.fir.opt.mlir 2935:28]
    node _decodeList_T_352 = mux(_decodeList_T_39, UInt<3>(6), _decodeList_T_351) @[build/NutShell.fir.opt.mlir 2937:28]
    node _decodeList_T_353 = mux(_decodeList_T_37, UInt<3>(5), _decodeList_T_352) @[build/NutShell.fir.opt.mlir 2939:28]
    node _decodeList_T_354 = mux(_decodeList_T_35, UInt<3>(5), _decodeList_T_353) @[build/NutShell.fir.opt.mlir 2941:28]
    node _decodeList_T_355 = mux(_decodeList_T_33, UInt<3>(5), _decodeList_T_354) @[build/NutShell.fir.opt.mlir 2943:28]
    node _decodeList_T_356 = mux(_decodeList_T_31, UInt<3>(5), _decodeList_T_355) @[build/NutShell.fir.opt.mlir 2945:28]
    node _decodeList_T_357 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_356) @[build/NutShell.fir.opt.mlir 2947:28]
    node _decodeList_T_358 = mux(_decodeList_T_27, UInt<3>(5), _decodeList_T_357) @[build/NutShell.fir.opt.mlir 2949:28]
    node _decodeList_T_359 = mux(_decodeList_T_25, UInt<3>(5), _decodeList_T_358) @[build/NutShell.fir.opt.mlir 2951:28]
    node _decodeList_T_360 = mux(_decodeList_T_23, UInt<3>(5), _decodeList_T_359) @[build/NutShell.fir.opt.mlir 2953:28]
    node _decodeList_T_361 = mux(_decodeList_T_21, UInt<3>(5), _decodeList_T_360) @[build/NutShell.fir.opt.mlir 2955:28]
    node _decodeList_T_362 = mux(_decodeList_T_19, UInt<3>(5), _decodeList_T_361) @[build/NutShell.fir.opt.mlir 2957:28]
    node _decodeList_T_363 = mux(_decodeList_T_17, UInt<3>(4), _decodeList_T_362) @[build/NutShell.fir.opt.mlir 2959:28]
    node _decodeList_T_364 = mux(_decodeList_T_15, UInt<3>(4), _decodeList_T_363) @[build/NutShell.fir.opt.mlir 2961:28]
    node _decodeList_T_365 = mux(_decodeList_T_13, UInt<3>(4), _decodeList_T_364) @[build/NutShell.fir.opt.mlir 2963:28]
    node _decodeList_T_366 = mux(_decodeList_T_11, UInt<3>(4), _decodeList_T_365) @[build/NutShell.fir.opt.mlir 2965:28]
    node _decodeList_T_367 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_366) @[build/NutShell.fir.opt.mlir 2967:28]
    node _decodeList_T_368 = mux(_decodeList_T_7, UInt<3>(4), _decodeList_T_367) @[build/NutShell.fir.opt.mlir 2969:28]
    node _decodeList_T_369 = mux(_decodeList_T_5, UInt<3>(4), _decodeList_T_368) @[build/NutShell.fir.opt.mlir 2971:28]
    node _decodeList_T_370 = mux(_decodeList_T_3, UInt<3>(4), _decodeList_T_369) @[build/NutShell.fir.opt.mlir 2973:28]
    node decodeList_0 = mux(_decodeList_T_1, UInt<3>(4), _decodeList_T_370) @[build/NutShell.fir.opt.mlir 2975:23]
    node _decodeList_T_371 = mux(_decodeList_T_247, UInt<3>(4), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 2977:28]
    node _decodeList_T_372 = mux(_decodeList_T_245, UInt<2>(3), _decodeList_T_371) @[build/NutShell.fir.opt.mlir 2979:28]
    node _decodeList_T_373 = mux(_decodeList_T_243, UInt<2>(3), _decodeList_T_372) @[build/NutShell.fir.opt.mlir 2981:28]
    node _decodeList_T_374 = mux(_decodeList_T_241, UInt<2>(3), _decodeList_T_373) @[build/NutShell.fir.opt.mlir 2983:28]
    node _decodeList_T_375 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_374) @[build/NutShell.fir.opt.mlir 2985:28]
    node _decodeList_T_376 = mux(_decodeList_T_237, UInt<2>(3), _decodeList_T_375) @[build/NutShell.fir.opt.mlir 2987:28]
    node _decodeList_T_377 = mux(_decodeList_T_235, UInt<2>(3), _decodeList_T_376) @[build/NutShell.fir.opt.mlir 2989:28]
    node _decodeList_T_378 = mux(_decodeList_T_233, UInt<1>(1), _decodeList_T_377) @[build/NutShell.fir.opt.mlir 2991:28]
    node _decodeList_T_379 = mux(_decodeList_T_231, UInt<1>(1), _decodeList_T_378) @[build/NutShell.fir.opt.mlir 2993:28]
    node _decodeList_T_380 = mux(_decodeList_T_229, UInt<1>(1), _decodeList_T_379) @[build/NutShell.fir.opt.mlir 2995:28]
    node _decodeList_T_381 = mux(_decodeList_T_227, UInt<1>(1), _decodeList_T_380) @[build/NutShell.fir.opt.mlir 2997:28]
    node _decodeList_T_382 = mux(_decodeList_T_225, UInt<1>(1), _decodeList_T_381) @[build/NutShell.fir.opt.mlir 2999:28]
    node _decodeList_T_383 = mux(_decodeList_T_223, UInt<1>(1), _decodeList_T_382) @[build/NutShell.fir.opt.mlir 3001:28]
    node _decodeList_T_384 = mux(_decodeList_T_221, UInt<1>(1), _decodeList_T_383) @[build/NutShell.fir.opt.mlir 3003:28]
    node _decodeList_T_385 = mux(_decodeList_T_219, UInt<1>(1), _decodeList_T_384) @[build/NutShell.fir.opt.mlir 3005:28]
    node _decodeList_T_386 = mux(_decodeList_T_217, UInt<1>(1), _decodeList_T_385) @[build/NutShell.fir.opt.mlir 3007:28]
    node _decodeList_T_387 = mux(_decodeList_T_215, UInt<1>(1), _decodeList_T_386) @[build/NutShell.fir.opt.mlir 3009:28]
    node _decodeList_T_388 = mux(_decodeList_T_213, UInt<1>(1), _decodeList_T_387) @[build/NutShell.fir.opt.mlir 3011:28]
    node _decodeList_T_389 = mux(_decodeList_T_211, UInt<1>(1), _decodeList_T_388) @[build/NutShell.fir.opt.mlir 3013:28]
    node _decodeList_T_390 = mux(_decodeList_T_209, UInt<1>(1), _decodeList_T_389) @[build/NutShell.fir.opt.mlir 3015:28]
    node _decodeList_T_391 = mux(_decodeList_T_207, UInt<3>(4), _decodeList_T_390) @[build/NutShell.fir.opt.mlir 3017:28]
    node _decodeList_T_392 = mux(_decodeList_T_205, UInt<2>(3), _decodeList_T_391) @[build/NutShell.fir.opt.mlir 3019:28]
    node _decodeList_T_393 = mux(_decodeList_T_203, UInt<1>(0), _decodeList_T_392) @[build/NutShell.fir.opt.mlir 3021:28]
    node _decodeList_T_394 = mux(_decodeList_T_201, UInt<3>(4), _decodeList_T_393) @[build/NutShell.fir.opt.mlir 3023:28]
    node _decodeList_T_395 = mux(_decodeList_T_199, UInt<2>(3), _decodeList_T_394) @[build/NutShell.fir.opt.mlir 3025:28]
    node _decodeList_T_396 = mux(_decodeList_T_197, UInt<2>(3), _decodeList_T_395) @[build/NutShell.fir.opt.mlir 3027:28]
    node _decodeList_T_397 = mux(_decodeList_T_195, UInt<2>(3), _decodeList_T_396) @[build/NutShell.fir.opt.mlir 3029:28]
    node _decodeList_T_398 = mux(_decodeList_T_193, UInt<1>(1), _decodeList_T_397) @[build/NutShell.fir.opt.mlir 3031:28]
    node _decodeList_T_399 = mux(_decodeList_T_191, UInt<1>(1), _decodeList_T_398) @[build/NutShell.fir.opt.mlir 3033:28]
    node _decodeList_T_400 = mux(_decodeList_T_189, UInt<1>(0), _decodeList_T_399) @[build/NutShell.fir.opt.mlir 3035:28]
    node _decodeList_T_401 = mux(_decodeList_T_187, UInt<1>(0), _decodeList_T_400) @[build/NutShell.fir.opt.mlir 3037:28]
    node _decodeList_T_402 = mux(_decodeList_T_185, UInt<2>(3), _decodeList_T_401) @[build/NutShell.fir.opt.mlir 3039:28]
    node _decodeList_T_403 = mux(_decodeList_T_183, UInt<1>(0), _decodeList_T_402) @[build/NutShell.fir.opt.mlir 3041:28]
    node _decodeList_T_404 = mux(_decodeList_T_181, UInt<1>(0), _decodeList_T_403) @[build/NutShell.fir.opt.mlir 3043:28]
    node _decodeList_T_405 = mux(_decodeList_T_179, UInt<1>(1), _decodeList_T_404) @[build/NutShell.fir.opt.mlir 3045:28]
    node _decodeList_T_406 = mux(_decodeList_T_177, UInt<1>(1), _decodeList_T_405) @[build/NutShell.fir.opt.mlir 3047:28]
    node _decodeList_T_407 = mux(_decodeList_T_175, UInt<1>(0), _decodeList_T_406) @[build/NutShell.fir.opt.mlir 3049:28]
    node _decodeList_T_408 = mux(_decodeList_T_173, UInt<1>(0), _decodeList_T_407) @[build/NutShell.fir.opt.mlir 3051:28]
    node _decodeList_T_409 = mux(_decodeList_T_171, UInt<1>(0), _decodeList_T_408) @[build/NutShell.fir.opt.mlir 3053:28]
    node _decodeList_T_410 = mux(_decodeList_T_169, UInt<1>(0), _decodeList_T_409) @[build/NutShell.fir.opt.mlir 3055:28]
    node _decodeList_T_411 = mux(_decodeList_T_167, UInt<1>(0), _decodeList_T_410) @[build/NutShell.fir.opt.mlir 3057:28]
    node _decodeList_T_412 = mux(_decodeList_T_165, UInt<1>(0), _decodeList_T_411) @[build/NutShell.fir.opt.mlir 3059:28]
    node _decodeList_T_413 = mux(_decodeList_T_163, UInt<1>(0), _decodeList_T_412) @[build/NutShell.fir.opt.mlir 3061:28]
    node _decodeList_T_414 = mux(_decodeList_T_161, UInt<1>(0), _decodeList_T_413) @[build/NutShell.fir.opt.mlir 3063:28]
    node _decodeList_T_415 = mux(_decodeList_T_159, UInt<1>(0), _decodeList_T_414) @[build/NutShell.fir.opt.mlir 3065:28]
    node _decodeList_T_416 = mux(_decodeList_T_157, UInt<1>(0), _decodeList_T_415) @[build/NutShell.fir.opt.mlir 3067:28]
    node _decodeList_T_417 = mux(_decodeList_T_155, UInt<1>(0), _decodeList_T_416) @[build/NutShell.fir.opt.mlir 3069:28]
    node _decodeList_T_418 = mux(_decodeList_T_153, UInt<1>(0), _decodeList_T_417) @[build/NutShell.fir.opt.mlir 3071:28]
    node _decodeList_T_419 = mux(_decodeList_T_151, UInt<1>(0), _decodeList_T_418) @[build/NutShell.fir.opt.mlir 3073:28]
    node _decodeList_T_420 = mux(_decodeList_T_149, UInt<1>(0), _decodeList_T_419) @[build/NutShell.fir.opt.mlir 3075:28]
    node _decodeList_T_421 = mux(_decodeList_T_147, UInt<1>(0), _decodeList_T_420) @[build/NutShell.fir.opt.mlir 3077:28]
    node _decodeList_T_422 = mux(_decodeList_T_145, UInt<1>(0), _decodeList_T_421) @[build/NutShell.fir.opt.mlir 3079:28]
    node _decodeList_T_423 = mux(_decodeList_T_143, UInt<1>(0), _decodeList_T_422) @[build/NutShell.fir.opt.mlir 3081:28]
    node _decodeList_T_424 = mux(_decodeList_T_141, UInt<1>(0), _decodeList_T_423) @[build/NutShell.fir.opt.mlir 3083:28]
    node _decodeList_T_425 = mux(_decodeList_T_139, UInt<1>(0), _decodeList_T_424) @[build/NutShell.fir.opt.mlir 3085:28]
    node _decodeList_T_426 = mux(_decodeList_T_137, UInt<1>(1), _decodeList_T_425) @[build/NutShell.fir.opt.mlir 3087:28]
    node _decodeList_T_427 = mux(_decodeList_T_135, UInt<1>(1), _decodeList_T_426) @[build/NutShell.fir.opt.mlir 3089:28]
    node _decodeList_T_428 = mux(_decodeList_T_133, UInt<1>(1), _decodeList_T_427) @[build/NutShell.fir.opt.mlir 3091:28]
    node _decodeList_T_429 = mux(_decodeList_T_131, UInt<1>(1), _decodeList_T_428) @[build/NutShell.fir.opt.mlir 3093:28]
    node _decodeList_T_430 = mux(_decodeList_T_129, UInt<1>(0), _decodeList_T_429) @[build/NutShell.fir.opt.mlir 3095:28]
    node _decodeList_T_431 = mux(_decodeList_T_127, UInt<2>(3), _decodeList_T_430) @[build/NutShell.fir.opt.mlir 3097:28]
    node _decodeList_T_432 = mux(_decodeList_T_125, UInt<2>(2), _decodeList_T_431) @[build/NutShell.fir.opt.mlir 3099:28]
    node _decodeList_T_433 = mux(_decodeList_T_123, UInt<2>(2), _decodeList_T_432) @[build/NutShell.fir.opt.mlir 3101:28]
    node _decodeList_T_434 = mux(_decodeList_T_121, UInt<2>(2), _decodeList_T_433) @[build/NutShell.fir.opt.mlir 3103:28]
    node _decodeList_T_435 = mux(_decodeList_T_119, UInt<2>(2), _decodeList_T_434) @[build/NutShell.fir.opt.mlir 3105:28]
    node _decodeList_T_436 = mux(_decodeList_T_117, UInt<2>(2), _decodeList_T_435) @[build/NutShell.fir.opt.mlir 3107:28]
    node _decodeList_T_437 = mux(_decodeList_T_115, UInt<2>(2), _decodeList_T_436) @[build/NutShell.fir.opt.mlir 3109:28]
    node _decodeList_T_438 = mux(_decodeList_T_113, UInt<2>(2), _decodeList_T_437) @[build/NutShell.fir.opt.mlir 3111:28]
    node _decodeList_T_439 = mux(_decodeList_T_111, UInt<2>(2), _decodeList_T_438) @[build/NutShell.fir.opt.mlir 3113:28]
    node _decodeList_T_440 = mux(_decodeList_T_109, UInt<2>(2), _decodeList_T_439) @[build/NutShell.fir.opt.mlir 3115:28]
    node _decodeList_T_441 = mux(_decodeList_T_107, UInt<2>(2), _decodeList_T_440) @[build/NutShell.fir.opt.mlir 3117:28]
    node _decodeList_T_442 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_441) @[build/NutShell.fir.opt.mlir 3119:28]
    node _decodeList_T_443 = mux(_decodeList_T_103, UInt<2>(2), _decodeList_T_442) @[build/NutShell.fir.opt.mlir 3121:28]
    node _decodeList_T_444 = mux(_decodeList_T_101, UInt<2>(2), _decodeList_T_443) @[build/NutShell.fir.opt.mlir 3123:28]
    node _decodeList_T_445 = mux(_decodeList_T_99, UInt<1>(0), _decodeList_T_444) @[build/NutShell.fir.opt.mlir 3125:28]
    node _decodeList_T_446 = mux(_decodeList_T_97, UInt<1>(1), _decodeList_T_445) @[build/NutShell.fir.opt.mlir 3127:28]
    node _decodeList_T_447 = mux(_decodeList_T_95, UInt<1>(1), _decodeList_T_446) @[build/NutShell.fir.opt.mlir 3129:28]
    node _decodeList_T_448 = mux(_decodeList_T_93, UInt<1>(1), _decodeList_T_447) @[build/NutShell.fir.opt.mlir 3131:28]
    node _decodeList_T_449 = mux(_decodeList_T_91, UInt<1>(0), _decodeList_T_448) @[build/NutShell.fir.opt.mlir 3133:28]
    node _decodeList_T_450 = mux(_decodeList_T_89, UInt<1>(0), _decodeList_T_449) @[build/NutShell.fir.opt.mlir 3135:28]
    node _decodeList_T_451 = mux(_decodeList_T_87, UInt<1>(0), _decodeList_T_450) @[build/NutShell.fir.opt.mlir 3137:28]
    node _decodeList_T_452 = mux(_decodeList_T_85, UInt<1>(0), _decodeList_T_451) @[build/NutShell.fir.opt.mlir 3139:28]
    node _decodeList_T_453 = mux(_decodeList_T_83, UInt<1>(0), _decodeList_T_452) @[build/NutShell.fir.opt.mlir 3141:28]
    node _decodeList_T_454 = mux(_decodeList_T_81, UInt<1>(0), _decodeList_T_453) @[build/NutShell.fir.opt.mlir 3143:28]
    node _decodeList_T_455 = mux(_decodeList_T_79, UInt<1>(0), _decodeList_T_454) @[build/NutShell.fir.opt.mlir 3145:28]
    node _decodeList_T_456 = mux(_decodeList_T_77, UInt<1>(0), _decodeList_T_455) @[build/NutShell.fir.opt.mlir 3147:28]
    node _decodeList_T_457 = mux(_decodeList_T_75, UInt<1>(0), _decodeList_T_456) @[build/NutShell.fir.opt.mlir 3149:28]
    node _decodeList_T_458 = mux(_decodeList_T_73, UInt<1>(1), _decodeList_T_457) @[build/NutShell.fir.opt.mlir 3151:28]
    node _decodeList_T_459 = mux(_decodeList_T_71, UInt<1>(1), _decodeList_T_458) @[build/NutShell.fir.opt.mlir 3153:28]
    node _decodeList_T_460 = mux(_decodeList_T_69, UInt<1>(1), _decodeList_T_459) @[build/NutShell.fir.opt.mlir 3155:28]
    node _decodeList_T_461 = mux(_decodeList_T_67, UInt<1>(1), _decodeList_T_460) @[build/NutShell.fir.opt.mlir 3157:28]
    node _decodeList_T_462 = mux(_decodeList_T_65, UInt<1>(1), _decodeList_T_461) @[build/NutShell.fir.opt.mlir 3159:28]
    node _decodeList_T_463 = mux(_decodeList_T_63, UInt<1>(1), _decodeList_T_462) @[build/NutShell.fir.opt.mlir 3161:28]
    node _decodeList_T_464 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_463) @[build/NutShell.fir.opt.mlir 3163:28]
    node _decodeList_T_465 = mux(_decodeList_T_59, UInt<1>(1), _decodeList_T_464) @[build/NutShell.fir.opt.mlir 3165:28]
    node _decodeList_T_466 = mux(_decodeList_T_57, UInt<1>(0), _decodeList_T_465) @[build/NutShell.fir.opt.mlir 3167:28]
    node _decodeList_T_467 = mux(_decodeList_T_55, UInt<1>(0), _decodeList_T_466) @[build/NutShell.fir.opt.mlir 3169:28]
    node _decodeList_T_468 = mux(_decodeList_T_53, UInt<1>(0), _decodeList_T_467) @[build/NutShell.fir.opt.mlir 3171:28]
    node _decodeList_T_469 = mux(_decodeList_T_51, UInt<1>(0), _decodeList_T_468) @[build/NutShell.fir.opt.mlir 3173:28]
    node _decodeList_T_470 = mux(_decodeList_T_49, UInt<1>(0), _decodeList_T_469) @[build/NutShell.fir.opt.mlir 3175:28]
    node _decodeList_T_471 = mux(_decodeList_T_47, UInt<1>(0), _decodeList_T_470) @[build/NutShell.fir.opt.mlir 3177:28]
    node _decodeList_T_472 = mux(_decodeList_T_45, UInt<1>(0), _decodeList_T_471) @[build/NutShell.fir.opt.mlir 3179:28]
    node _decodeList_T_473 = mux(_decodeList_T_43, UInt<1>(0), _decodeList_T_472) @[build/NutShell.fir.opt.mlir 3181:28]
    node _decodeList_T_474 = mux(_decodeList_T_41, UInt<1>(0), _decodeList_T_473) @[build/NutShell.fir.opt.mlir 3183:28]
    node _decodeList_T_475 = mux(_decodeList_T_39, UInt<1>(0), _decodeList_T_474) @[build/NutShell.fir.opt.mlir 3185:28]
    node _decodeList_T_476 = mux(_decodeList_T_37, UInt<1>(0), _decodeList_T_475) @[build/NutShell.fir.opt.mlir 3187:28]
    node _decodeList_T_477 = mux(_decodeList_T_35, UInt<1>(0), _decodeList_T_476) @[build/NutShell.fir.opt.mlir 3189:28]
    node _decodeList_T_478 = mux(_decodeList_T_33, UInt<1>(0), _decodeList_T_477) @[build/NutShell.fir.opt.mlir 3191:28]
    node _decodeList_T_479 = mux(_decodeList_T_31, UInt<1>(0), _decodeList_T_478) @[build/NutShell.fir.opt.mlir 3193:28]
    node _decodeList_T_480 = mux(_decodeList_T_29, UInt<1>(0), _decodeList_T_479) @[build/NutShell.fir.opt.mlir 3195:28]
    node _decodeList_T_481 = mux(_decodeList_T_27, UInt<1>(0), _decodeList_T_480) @[build/NutShell.fir.opt.mlir 3197:28]
    node _decodeList_T_482 = mux(_decodeList_T_25, UInt<1>(0), _decodeList_T_481) @[build/NutShell.fir.opt.mlir 3199:28]
    node _decodeList_T_483 = mux(_decodeList_T_23, UInt<1>(0), _decodeList_T_482) @[build/NutShell.fir.opt.mlir 3201:28]
    node _decodeList_T_484 = mux(_decodeList_T_21, UInt<1>(0), _decodeList_T_483) @[build/NutShell.fir.opt.mlir 3203:28]
    node _decodeList_T_485 = mux(_decodeList_T_19, UInt<1>(0), _decodeList_T_484) @[build/NutShell.fir.opt.mlir 3205:28]
    node _decodeList_T_486 = mux(_decodeList_T_17, UInt<1>(0), _decodeList_T_485) @[build/NutShell.fir.opt.mlir 3207:28]
    node _decodeList_T_487 = mux(_decodeList_T_15, UInt<1>(0), _decodeList_T_486) @[build/NutShell.fir.opt.mlir 3209:28]
    node _decodeList_T_488 = mux(_decodeList_T_13, UInt<1>(0), _decodeList_T_487) @[build/NutShell.fir.opt.mlir 3211:28]
    node _decodeList_T_489 = mux(_decodeList_T_11, UInt<1>(0), _decodeList_T_488) @[build/NutShell.fir.opt.mlir 3213:28]
    node _decodeList_T_490 = mux(_decodeList_T_9, UInt<1>(0), _decodeList_T_489) @[build/NutShell.fir.opt.mlir 3215:28]
    node _decodeList_T_491 = mux(_decodeList_T_7, UInt<1>(0), _decodeList_T_490) @[build/NutShell.fir.opt.mlir 3217:28]
    node _decodeList_T_492 = mux(_decodeList_T_5, UInt<1>(0), _decodeList_T_491) @[build/NutShell.fir.opt.mlir 3219:28]
    node _decodeList_T_493 = mux(_decodeList_T_3, UInt<1>(0), _decodeList_T_492) @[build/NutShell.fir.opt.mlir 3221:28]
    node decodeList_1 = mux(_decodeList_T_1, UInt<1>(0), _decodeList_T_493) @[build/NutShell.fir.opt.mlir 3223:23]
    node _decodeList_T_494 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3225:28]
    node _decodeList_T_495 = mux(_decodeList_T_245, UInt<3>(7), _decodeList_T_494) @[build/NutShell.fir.opt.mlir 3227:28]
    node _decodeList_T_496 = mux(_decodeList_T_243, UInt<3>(6), _decodeList_T_495) @[build/NutShell.fir.opt.mlir 3229:28]
    node _decodeList_T_497 = mux(_decodeList_T_241, UInt<3>(5), _decodeList_T_496) @[build/NutShell.fir.opt.mlir 3231:28]
    node _decodeList_T_498 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_497) @[build/NutShell.fir.opt.mlir 3233:28]
    node _decodeList_T_499 = mux(_decodeList_T_237, UInt<2>(2), _decodeList_T_498) @[build/NutShell.fir.opt.mlir 3235:28]
    node _decodeList_T_500 = mux(_decodeList_T_235, UInt<1>(1), _decodeList_T_499) @[build/NutShell.fir.opt.mlir 3237:28]
    node _decodeList_T_501 = mux(_decodeList_T_233, UInt<6>(50), _decodeList_T_500) @[build/NutShell.fir.opt.mlir 3240:28]
    node _decodeList_T_502 = mux(_decodeList_T_231, UInt<6>(49), _decodeList_T_501) @[build/NutShell.fir.opt.mlir 3243:28]
    node _decodeList_T_503 = mux(_decodeList_T_229, UInt<6>(48), _decodeList_T_502) @[build/NutShell.fir.opt.mlir 3246:28]
    node _decodeList_T_504 = mux(_decodeList_T_227, UInt<6>(55), _decodeList_T_503) @[build/NutShell.fir.opt.mlir 3248:28]
    node _decodeList_T_505 = mux(_decodeList_T_225, UInt<6>(38), _decodeList_T_504) @[build/NutShell.fir.opt.mlir 3251:28]
    node _decodeList_T_506 = mux(_decodeList_T_223, UInt<6>(37), _decodeList_T_505) @[build/NutShell.fir.opt.mlir 3254:28]
    node _decodeList_T_507 = mux(_decodeList_T_221, UInt<6>(36), _decodeList_T_506) @[build/NutShell.fir.opt.mlir 3257:28]
    node _decodeList_T_508 = mux(_decodeList_T_219, UInt<7>(99), _decodeList_T_507) @[build/NutShell.fir.opt.mlir 3259:28]
    node _decodeList_T_509 = mux(_decodeList_T_217, UInt<6>(34), _decodeList_T_508) @[build/NutShell.fir.opt.mlir 3262:28]
    node _decodeList_T_510 = mux(_decodeList_T_215, UInt<6>(33), _decodeList_T_509) @[build/NutShell.fir.opt.mlir 3265:28]
    node _decodeList_T_511 = mux(_decodeList_T_213, UInt<6>(33), _decodeList_T_510) @[build/NutShell.fir.opt.mlir 3267:28]
    node _decodeList_T_512 = mux(_decodeList_T_211, UInt<6>(32), _decodeList_T_511) @[build/NutShell.fir.opt.mlir 3270:28]
    node _decodeList_T_513 = mux(_decodeList_T_209, UInt<6>(32), _decodeList_T_512) @[build/NutShell.fir.opt.mlir 3272:28]
    node _decodeList_T_514 = mux(_decodeList_T_207, UInt<2>(2), _decodeList_T_513) @[build/NutShell.fir.opt.mlir 3274:28]
    node _decodeList_T_515 = mux(_decodeList_T_205, UInt<1>(0), _decodeList_T_514) @[build/NutShell.fir.opt.mlir 3276:28]
    node _decodeList_T_516 = mux(_decodeList_T_203, UInt<7>(64), _decodeList_T_515) @[build/NutShell.fir.opt.mlir 3279:28]
    node _decodeList_T_517 = mux(_decodeList_T_201, UInt<1>(0), _decodeList_T_516) @[build/NutShell.fir.opt.mlir 3281:28]
    node _decodeList_T_518 = mux(_decodeList_T_199, UInt<1>(0), _decodeList_T_517) @[build/NutShell.fir.opt.mlir 3283:28]
    node _decodeList_T_519 = mux(_decodeList_T_197, UInt<1>(0), _decodeList_T_518) @[build/NutShell.fir.opt.mlir 3285:28]
    node _decodeList_T_520 = mux(_decodeList_T_195, UInt<1>(0), _decodeList_T_519) @[build/NutShell.fir.opt.mlir 3287:28]
    node _decodeList_T_521 = mux(_decodeList_T_193, UInt<4>(11), _decodeList_T_520) @[build/NutShell.fir.opt.mlir 3290:28]
    node _decodeList_T_522 = mux(_decodeList_T_191, UInt<4>(10), _decodeList_T_521) @[build/NutShell.fir.opt.mlir 3293:28]
    node _decodeList_T_523 = mux(_decodeList_T_189, UInt<7>(64), _decodeList_T_522) @[build/NutShell.fir.opt.mlir 3295:28]
    node _decodeList_T_524 = mux(_decodeList_T_187, UInt<7>(90), _decodeList_T_523) @[build/NutShell.fir.opt.mlir 3298:28]
    node _decodeList_T_525 = mux(_decodeList_T_185, UInt<1>(0), _decodeList_T_524) @[build/NutShell.fir.opt.mlir 3300:28]
    node _decodeList_T_526 = mux(_decodeList_T_183, UInt<7>(64), _decodeList_T_525) @[build/NutShell.fir.opt.mlir 3302:28]
    node _decodeList_T_527 = mux(_decodeList_T_181, UInt<7>(90), _decodeList_T_526) @[build/NutShell.fir.opt.mlir 3304:28]
    node _decodeList_T_528 = mux(_decodeList_T_179, UInt<2>(3), _decodeList_T_527) @[build/NutShell.fir.opt.mlir 3306:28]
    node _decodeList_T_529 = mux(_decodeList_T_177, UInt<2>(2), _decodeList_T_528) @[build/NutShell.fir.opt.mlir 3308:28]
    node _decodeList_T_530 = mux(_decodeList_T_175, UInt<1>(1), _decodeList_T_529) @[build/NutShell.fir.opt.mlir 3310:28]
    node _decodeList_T_531 = mux(_decodeList_T_173, UInt<5>(17), _decodeList_T_530) @[build/NutShell.fir.opt.mlir 3313:28]
    node _decodeList_T_532 = mux(_decodeList_T_171, UInt<5>(16), _decodeList_T_531) @[build/NutShell.fir.opt.mlir 3316:28]
    node _decodeList_T_533 = mux(_decodeList_T_169, UInt<7>(88), _decodeList_T_532) @[build/NutShell.fir.opt.mlir 3319:28]
    node _decodeList_T_534 = mux(_decodeList_T_167, UInt<7>(96), _decodeList_T_533) @[build/NutShell.fir.opt.mlir 3322:28]
    node _decodeList_T_535 = mux(_decodeList_T_165, UInt<6>(40), _decodeList_T_534) @[build/NutShell.fir.opt.mlir 3325:28]
    node _decodeList_T_536 = mux(_decodeList_T_163, UInt<3>(7), _decodeList_T_535) @[build/NutShell.fir.opt.mlir 3327:28]
    node _decodeList_T_537 = mux(_decodeList_T_161, UInt<3>(6), _decodeList_T_536) @[build/NutShell.fir.opt.mlir 3329:28]
    node _decodeList_T_538 = mux(_decodeList_T_159, UInt<3>(4), _decodeList_T_537) @[build/NutShell.fir.opt.mlir 3331:28]
    node _decodeList_T_539 = mux(_decodeList_T_157, UInt<4>(8), _decodeList_T_538) @[build/NutShell.fir.opt.mlir 3334:28]
    node _decodeList_T_540 = mux(_decodeList_T_155, UInt<3>(7), _decodeList_T_539) @[build/NutShell.fir.opt.mlir 3336:28]
    node _decodeList_T_541 = mux(_decodeList_T_153, UInt<4>(13), _decodeList_T_540) @[build/NutShell.fir.opt.mlir 3339:28]
    node _decodeList_T_542 = mux(_decodeList_T_151, UInt<3>(5), _decodeList_T_541) @[build/NutShell.fir.opt.mlir 3341:28]
    node _decodeList_T_543 = mux(_decodeList_T_149, UInt<7>(64), _decodeList_T_542) @[build/NutShell.fir.opt.mlir 3343:28]
    node _decodeList_T_544 = mux(_decodeList_T_147, UInt<7>(64), _decodeList_T_543) @[build/NutShell.fir.opt.mlir 3345:28]
    node _decodeList_T_545 = mux(_decodeList_T_145, UInt<7>(64), _decodeList_T_544) @[build/NutShell.fir.opt.mlir 3347:28]
    node _decodeList_T_546 = mux(_decodeList_T_143, UInt<7>(96), _decodeList_T_545) @[build/NutShell.fir.opt.mlir 3349:28]
    node _decodeList_T_547 = mux(_decodeList_T_141, UInt<7>(64), _decodeList_T_546) @[build/NutShell.fir.opt.mlir 3351:28]
    node _decodeList_T_548 = mux(_decodeList_T_139, UInt<7>(64), _decodeList_T_547) @[build/NutShell.fir.opt.mlir 3353:28]
    node _decodeList_T_549 = mux(_decodeList_T_137, UInt<4>(11), _decodeList_T_548) @[build/NutShell.fir.opt.mlir 3355:28]
    node _decodeList_T_550 = mux(_decodeList_T_135, UInt<4>(10), _decodeList_T_549) @[build/NutShell.fir.opt.mlir 3357:28]
    node _decodeList_T_551 = mux(_decodeList_T_133, UInt<2>(3), _decodeList_T_550) @[build/NutShell.fir.opt.mlir 3359:28]
    node _decodeList_T_552 = mux(_decodeList_T_131, UInt<2>(2), _decodeList_T_551) @[build/NutShell.fir.opt.mlir 3361:28]
    node _decodeList_T_553 = mux(_decodeList_T_129, UInt<7>(64), _decodeList_T_552) @[build/NutShell.fir.opt.mlir 3363:28]
    node _decodeList_T_554 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_553) @[build/NutShell.fir.opt.mlir 3365:28]
    node _decodeList_T_555 = mux(_decodeList_T_125, UInt<4>(15), _decodeList_T_554) @[build/NutShell.fir.opt.mlir 3367:28]
    node _decodeList_T_556 = mux(_decodeList_T_123, UInt<4>(14), _decodeList_T_555) @[build/NutShell.fir.opt.mlir 3370:28]
    node _decodeList_T_557 = mux(_decodeList_T_121, UInt<4>(13), _decodeList_T_556) @[build/NutShell.fir.opt.mlir 3372:28]
    node _decodeList_T_558 = mux(_decodeList_T_119, UInt<4>(12), _decodeList_T_557) @[build/NutShell.fir.opt.mlir 3375:28]
    node _decodeList_T_559 = mux(_decodeList_T_117, UInt<4>(8), _decodeList_T_558) @[build/NutShell.fir.opt.mlir 3377:28]
    node _decodeList_T_560 = mux(_decodeList_T_115, UInt<3>(7), _decodeList_T_559) @[build/NutShell.fir.opt.mlir 3379:28]
    node _decodeList_T_561 = mux(_decodeList_T_113, UInt<3>(6), _decodeList_T_560) @[build/NutShell.fir.opt.mlir 3381:28]
    node _decodeList_T_562 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_561) @[build/NutShell.fir.opt.mlir 3383:28]
    node _decodeList_T_563 = mux(_decodeList_T_109, UInt<3>(4), _decodeList_T_562) @[build/NutShell.fir.opt.mlir 3385:28]
    node _decodeList_T_564 = mux(_decodeList_T_107, UInt<2>(3), _decodeList_T_563) @[build/NutShell.fir.opt.mlir 3387:28]
    node _decodeList_T_565 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_564) @[build/NutShell.fir.opt.mlir 3389:28]
    node _decodeList_T_566 = mux(_decodeList_T_103, UInt<1>(1), _decodeList_T_565) @[build/NutShell.fir.opt.mlir 3391:28]
    node _decodeList_T_567 = mux(_decodeList_T_101, UInt<1>(0), _decodeList_T_566) @[build/NutShell.fir.opt.mlir 3393:28]
    node _decodeList_T_568 = mux(_decodeList_T_99, UInt<7>(64), _decodeList_T_567) @[build/NutShell.fir.opt.mlir 3395:28]
    node _decodeList_T_569 = mux(_decodeList_T_97, UInt<4>(11), _decodeList_T_568) @[build/NutShell.fir.opt.mlir 3397:28]
    node _decodeList_T_570 = mux(_decodeList_T_95, UInt<2>(3), _decodeList_T_569) @[build/NutShell.fir.opt.mlir 3399:28]
    node _decodeList_T_571 = mux(_decodeList_T_93, UInt<3>(6), _decodeList_T_570) @[build/NutShell.fir.opt.mlir 3401:28]
    node _decodeList_T_572 = mux(_decodeList_T_91, UInt<6>(40), _decodeList_T_571) @[build/NutShell.fir.opt.mlir 3403:28]
    node _decodeList_T_573 = mux(_decodeList_T_89, UInt<7>(96), _decodeList_T_572) @[build/NutShell.fir.opt.mlir 3405:28]
    node _decodeList_T_574 = mux(_decodeList_T_87, UInt<6>(45), _decodeList_T_573) @[build/NutShell.fir.opt.mlir 3408:28]
    node _decodeList_T_575 = mux(_decodeList_T_85, UInt<6>(37), _decodeList_T_574) @[build/NutShell.fir.opt.mlir 3410:28]
    node _decodeList_T_576 = mux(_decodeList_T_83, UInt<6>(33), _decodeList_T_575) @[build/NutShell.fir.opt.mlir 3412:28]
    node _decodeList_T_577 = mux(_decodeList_T_81, UInt<6>(45), _decodeList_T_576) @[build/NutShell.fir.opt.mlir 3414:28]
    node _decodeList_T_578 = mux(_decodeList_T_79, UInt<6>(37), _decodeList_T_577) @[build/NutShell.fir.opt.mlir 3416:28]
    node _decodeList_T_579 = mux(_decodeList_T_77, UInt<6>(33), _decodeList_T_578) @[build/NutShell.fir.opt.mlir 3418:28]
    node _decodeList_T_580 = mux(_decodeList_T_75, UInt<7>(96), _decodeList_T_579) @[build/NutShell.fir.opt.mlir 3420:28]
    node _decodeList_T_581 = mux(_decodeList_T_73, UInt<4>(10), _decodeList_T_580) @[build/NutShell.fir.opt.mlir 3422:28]
    node _decodeList_T_582 = mux(_decodeList_T_71, UInt<4>(9), _decodeList_T_581) @[build/NutShell.fir.opt.mlir 3425:28]
    node _decodeList_T_583 = mux(_decodeList_T_69, UInt<4>(8), _decodeList_T_582) @[build/NutShell.fir.opt.mlir 3427:28]
    node _decodeList_T_584 = mux(_decodeList_T_67, UInt<3>(5), _decodeList_T_583) @[build/NutShell.fir.opt.mlir 3429:28]
    node _decodeList_T_585 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_584) @[build/NutShell.fir.opt.mlir 3431:28]
    node _decodeList_T_586 = mux(_decodeList_T_63, UInt<2>(2), _decodeList_T_585) @[build/NutShell.fir.opt.mlir 3433:28]
    node _decodeList_T_587 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_586) @[build/NutShell.fir.opt.mlir 3435:28]
    node _decodeList_T_588 = mux(_decodeList_T_59, UInt<1>(0), _decodeList_T_587) @[build/NutShell.fir.opt.mlir 3437:28]
    node _decodeList_T_589 = mux(_decodeList_T_57, UInt<5>(23), _decodeList_T_588) @[build/NutShell.fir.opt.mlir 3439:28]
    node _decodeList_T_590 = mux(_decodeList_T_55, UInt<5>(22), _decodeList_T_589) @[build/NutShell.fir.opt.mlir 3442:28]
    node _decodeList_T_591 = mux(_decodeList_T_53, UInt<5>(21), _decodeList_T_590) @[build/NutShell.fir.opt.mlir 3445:28]
    node _decodeList_T_592 = mux(_decodeList_T_51, UInt<5>(20), _decodeList_T_591) @[build/NutShell.fir.opt.mlir 3448:28]
    node _decodeList_T_593 = mux(_decodeList_T_49, UInt<5>(17), _decodeList_T_592) @[build/NutShell.fir.opt.mlir 3450:28]
    node _decodeList_T_594 = mux(_decodeList_T_47, UInt<5>(16), _decodeList_T_593) @[build/NutShell.fir.opt.mlir 3452:28]
    node _decodeList_T_595 = mux(_decodeList_T_45, UInt<7>(90), _decodeList_T_594) @[build/NutShell.fir.opt.mlir 3454:28]
    node _decodeList_T_596 = mux(_decodeList_T_43, UInt<7>(88), _decodeList_T_595) @[build/NutShell.fir.opt.mlir 3456:28]
    node _decodeList_T_597 = mux(_decodeList_T_41, UInt<7>(64), _decodeList_T_596) @[build/NutShell.fir.opt.mlir 3458:28]
    node _decodeList_T_598 = mux(_decodeList_T_39, UInt<7>(64), _decodeList_T_597) @[build/NutShell.fir.opt.mlir 3460:28]
    node _decodeList_T_599 = mux(_decodeList_T_37, UInt<4>(13), _decodeList_T_598) @[build/NutShell.fir.opt.mlir 3462:28]
    node _decodeList_T_600 = mux(_decodeList_T_35, UInt<4>(8), _decodeList_T_599) @[build/NutShell.fir.opt.mlir 3464:28]
    node _decodeList_T_601 = mux(_decodeList_T_33, UInt<3>(7), _decodeList_T_600) @[build/NutShell.fir.opt.mlir 3466:28]
    node _decodeList_T_602 = mux(_decodeList_T_31, UInt<3>(6), _decodeList_T_601) @[build/NutShell.fir.opt.mlir 3468:28]
    node _decodeList_T_603 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_602) @[build/NutShell.fir.opt.mlir 3470:28]
    node _decodeList_T_604 = mux(_decodeList_T_27, UInt<3>(4), _decodeList_T_603) @[build/NutShell.fir.opt.mlir 3472:28]
    node _decodeList_T_605 = mux(_decodeList_T_25, UInt<2>(3), _decodeList_T_604) @[build/NutShell.fir.opt.mlir 3474:28]
    node _decodeList_T_606 = mux(_decodeList_T_23, UInt<2>(2), _decodeList_T_605) @[build/NutShell.fir.opt.mlir 3476:28]
    node _decodeList_T_607 = mux(_decodeList_T_21, UInt<1>(1), _decodeList_T_606) @[build/NutShell.fir.opt.mlir 3478:28]
    node _decodeList_T_608 = mux(_decodeList_T_19, UInt<7>(64), _decodeList_T_607) @[build/NutShell.fir.opt.mlir 3480:28]
    node _decodeList_T_609 = mux(_decodeList_T_17, UInt<4>(13), _decodeList_T_608) @[build/NutShell.fir.opt.mlir 3482:28]
    node _decodeList_T_610 = mux(_decodeList_T_15, UInt<3>(7), _decodeList_T_609) @[build/NutShell.fir.opt.mlir 3484:28]
    node _decodeList_T_611 = mux(_decodeList_T_13, UInt<3>(6), _decodeList_T_610) @[build/NutShell.fir.opt.mlir 3486:28]
    node _decodeList_T_612 = mux(_decodeList_T_11, UInt<3>(5), _decodeList_T_611) @[build/NutShell.fir.opt.mlir 3488:28]
    node _decodeList_T_613 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_612) @[build/NutShell.fir.opt.mlir 3490:28]
    node _decodeList_T_614 = mux(_decodeList_T_7, UInt<2>(3), _decodeList_T_613) @[build/NutShell.fir.opt.mlir 3492:28]
    node _decodeList_T_615 = mux(_decodeList_T_5, UInt<2>(2), _decodeList_T_614) @[build/NutShell.fir.opt.mlir 3494:28]
    node _decodeList_T_616 = mux(_decodeList_T_3, UInt<1>(1), _decodeList_T_615) @[build/NutShell.fir.opt.mlir 3496:28]
    node decodeList_2 = mux(_decodeList_T_1, UInt<7>(64), _decodeList_T_616) @[build/NutShell.fir.opt.mlir 3498:23]
    node _T = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3500:13]
    node _T_1 = or(_T, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3502:15]
    node instrType = mux(_T_1, UInt<1>(0), decodeList_0) @[build/NutShell.fir.opt.mlir 3504:20]
    node _T_2 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3506:15]
    node _T_3 = or(_T_2, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3508:15]
    node fuType = mux(_T_3, UInt<2>(3), decodeList_1) @[build/NutShell.fir.opt.mlir 3510:17]
    node _T_4 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 3512:15]
    node _T_5 = or(_T_4, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 3514:15]
    node fuOpType = mux(_T_5, UInt<1>(0), decodeList_2) @[build/NutShell.fir.opt.mlir 3516:19]
    node _isRVC_T = bits(io.in.bits.instr, 1, 0) @[build/NutShell.fir.opt.mlir 3518:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 3520:16]
    node _T_6 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3522:15]
    node _T_7 = eq(UInt<1>(0), _T_6) @[build/NutShell.fir.opt.mlir 3524:15]
    node _T_8 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3526:15]
    node _T_9 = eq(UInt<15>(16384), _T_8) @[build/NutShell.fir.opt.mlir 3528:15]
    node _T_10 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3530:16]
    node _T_11 = eq(UInt<15>(24576), _T_10) @[build/NutShell.fir.opt.mlir 3532:16]
    node _T_12 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3534:16]
    node _T_13 = eq(UInt<16>(49152), _T_12) @[build/NutShell.fir.opt.mlir 3536:16]
    node _T_14 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3538:16]
    node _T_15 = eq(UInt<16>(57344), _T_14) @[build/NutShell.fir.opt.mlir 3540:16]
    node _T_16 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 3542:16]
    node _T_17 = eq(UInt<1>(1), _T_16) @[build/NutShell.fir.opt.mlir 3544:16]
    node _T_18 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3546:16]
    node _T_19 = eq(UInt<1>(1), _T_18) @[build/NutShell.fir.opt.mlir 3548:16]
    node _T_20 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3550:16]
    node _T_21 = eq(UInt<14>(8193), _T_20) @[build/NutShell.fir.opt.mlir 3552:16]
    node _T_22 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3554:16]
    node _T_23 = eq(UInt<15>(16385), _T_22) @[build/NutShell.fir.opt.mlir 3556:16]
    node _T_24 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 3558:16]
    node _T_25 = eq(UInt<15>(24833), _T_24) @[build/NutShell.fir.opt.mlir 3560:16]
    node _T_26 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3562:16]
    node _T_27 = eq(UInt<15>(24577), _T_26) @[build/NutShell.fir.opt.mlir 3564:16]
    node _T_28 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3566:16]
    node _T_29 = eq(UInt<16>(32769), _T_28) @[build/NutShell.fir.opt.mlir 3568:16]
    node _T_30 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3570:16]
    node _T_31 = eq(UInt<16>(33793), _T_30) @[build/NutShell.fir.opt.mlir 3572:16]
    node _T_32 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 3574:16]
    node _T_33 = eq(UInt<16>(34817), _T_32) @[build/NutShell.fir.opt.mlir 3576:16]
    node _T_34 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3578:16]
    node _T_35 = eq(UInt<16>(35841), _T_34) @[build/NutShell.fir.opt.mlir 3580:16]
    node _T_36 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3582:16]
    node _T_37 = eq(UInt<16>(35873), _T_36) @[build/NutShell.fir.opt.mlir 3584:16]
    node _T_38 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3586:16]
    node _T_39 = eq(UInt<16>(35905), _T_38) @[build/NutShell.fir.opt.mlir 3588:16]
    node _T_40 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3590:16]
    node _T_41 = eq(UInt<16>(35937), _T_40) @[build/NutShell.fir.opt.mlir 3592:16]
    node _T_42 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3594:16]
    node _T_43 = eq(UInt<16>(39937), _T_42) @[build/NutShell.fir.opt.mlir 3596:16]
    node _T_44 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 3598:16]
    node _T_45 = eq(UInt<16>(39969), _T_44) @[build/NutShell.fir.opt.mlir 3600:16]
    node _T_46 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3602:16]
    node _T_47 = eq(UInt<16>(40961), _T_46) @[build/NutShell.fir.opt.mlir 3604:16]
    node _T_48 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3606:16]
    node _T_49 = eq(UInt<16>(49153), _T_48) @[build/NutShell.fir.opt.mlir 3608:16]
    node _T_50 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3610:16]
    node _T_51 = eq(UInt<16>(57345), _T_50) @[build/NutShell.fir.opt.mlir 3612:16]
    node _T_52 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3614:16]
    node _T_53 = eq(UInt<2>(2), _T_52) @[build/NutShell.fir.opt.mlir 3616:16]
    node _T_54 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3618:16]
    node _T_55 = eq(UInt<15>(16386), _T_54) @[build/NutShell.fir.opt.mlir 3620:16]
    node _T_56 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3622:16]
    node _T_57 = eq(UInt<15>(24578), _T_56) @[build/NutShell.fir.opt.mlir 3624:16]
    node _T_58 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 3626:16]
    node _T_59 = eq(UInt<16>(32770), _T_58) @[build/NutShell.fir.opt.mlir 3628:16]
    node _T_60 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 3630:16]
    node _T_61 = eq(UInt<16>(32770), _T_60) @[build/NutShell.fir.opt.mlir 3632:16]
    node _T_62 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 3634:16]
    node _T_63 = eq(UInt<16>(36866), _T_62) @[build/NutShell.fir.opt.mlir 3636:16]
    node _T_64 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 3638:16]
    node _T_65 = eq(UInt<16>(36866), _T_64) @[build/NutShell.fir.opt.mlir 3640:16]
    node _T_66 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 3642:16]
    node _T_67 = eq(UInt<16>(36866), _T_66) @[build/NutShell.fir.opt.mlir 3644:16]
    node _T_68 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3646:16]
    node _T_69 = eq(UInt<16>(49154), _T_68) @[build/NutShell.fir.opt.mlir 3648:16]
    node _T_70 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 3650:16]
    node _T_71 = eq(UInt<16>(57346), _T_70) @[build/NutShell.fir.opt.mlir 3652:16]
    node _T_72 = mux(_T_71, UInt<2>(3), UInt<5>(16)) @[build/NutShell.fir.opt.mlir 3654:16]
    node _T_73 = mux(_T_69, UInt<2>(2), _T_72) @[build/NutShell.fir.opt.mlir 3656:16]
    node _T_74 = mux(_T_67, UInt<5>(16), _T_73) @[build/NutShell.fir.opt.mlir 3658:16]
    node _T_75 = mux(_T_65, UInt<5>(16), _T_74) @[build/NutShell.fir.opt.mlir 3660:16]
    node _T_76 = mux(_T_63, UInt<4>(15), _T_75) @[build/NutShell.fir.opt.mlir 3662:16]
    node _T_77 = mux(_T_61, UInt<5>(16), _T_76) @[build/NutShell.fir.opt.mlir 3664:16]
    node _T_78 = mux(_T_59, UInt<5>(16), _T_77) @[build/NutShell.fir.opt.mlir 3666:16]
    node _T_79 = mux(_T_57, UInt<1>(1), _T_78) @[build/NutShell.fir.opt.mlir 3668:16]
    node _T_80 = mux(_T_55, UInt<1>(0), _T_79) @[build/NutShell.fir.opt.mlir 3670:16]
    node _T_81 = mux(_T_53, UInt<4>(10), _T_80) @[build/NutShell.fir.opt.mlir 3672:16]
    node _T_82 = mux(_T_51, UInt<4>(9), _T_81) @[build/NutShell.fir.opt.mlir 3674:16]
    node _T_83 = mux(_T_49, UInt<4>(9), _T_82) @[build/NutShell.fir.opt.mlir 3676:16]
    node _T_84 = mux(_T_47, UInt<4>(8), _T_83) @[build/NutShell.fir.opt.mlir 3678:16]
    node _T_85 = mux(_T_45, UInt<5>(16), _T_84) @[build/NutShell.fir.opt.mlir 3680:16]
    node _T_86 = mux(_T_43, UInt<5>(16), _T_85) @[build/NutShell.fir.opt.mlir 3682:16]
    node _T_87 = mux(_T_41, UInt<5>(16), _T_86) @[build/NutShell.fir.opt.mlir 3684:16]
    node _T_88 = mux(_T_39, UInt<5>(16), _T_87) @[build/NutShell.fir.opt.mlir 3686:16]
    node _T_89 = mux(_T_37, UInt<5>(16), _T_88) @[build/NutShell.fir.opt.mlir 3688:16]
    node _T_90 = mux(_T_35, UInt<5>(16), _T_89) @[build/NutShell.fir.opt.mlir 3690:16]
    node _T_91 = mux(_T_33, UInt<4>(10), _T_90) @[build/NutShell.fir.opt.mlir 3692:16]
    node _T_92 = mux(_T_31, UInt<4>(10), _T_91) @[build/NutShell.fir.opt.mlir 3694:16]
    node _T_93 = mux(_T_29, UInt<4>(10), _T_92) @[build/NutShell.fir.opt.mlir 3696:16]
    node _T_94 = mux(_T_27, UInt<4>(11), _T_93) @[build/NutShell.fir.opt.mlir 3698:16]
    node _T_95 = mux(_T_25, UInt<4>(13), _T_94) @[build/NutShell.fir.opt.mlir 3700:16]
    node _T_96 = mux(_T_23, UInt<4>(10), _T_95) @[build/NutShell.fir.opt.mlir 3702:16]
    node _T_97 = mux(_T_21, UInt<4>(12), _T_96) @[build/NutShell.fir.opt.mlir 3704:16]
    node _T_98 = mux(_T_19, UInt<4>(12), _T_97) @[build/NutShell.fir.opt.mlir 3706:16]
    node _T_99 = mux(_T_17, UInt<5>(16), _T_98) @[build/NutShell.fir.opt.mlir 3708:16]
    node _T_100 = mux(_T_15, UInt<3>(5), _T_99) @[build/NutShell.fir.opt.mlir 3710:17]
    node _T_101 = mux(_T_13, UInt<3>(4), _T_100) @[build/NutShell.fir.opt.mlir 3712:17]
    node _T_102 = mux(_T_11, UInt<3>(7), _T_101) @[build/NutShell.fir.opt.mlir 3714:17]
    node _T_103 = mux(_T_9, UInt<3>(6), _T_102) @[build/NutShell.fir.opt.mlir 3716:17]
    node rvcImmType = mux(_T_7, UInt<4>(14), _T_103) @[build/NutShell.fir.opt.mlir 3718:21]
    node _T_104 = mux(_T_71, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3720:17]
    node _T_105 = mux(_T_69, UInt<4>(9), _T_104) @[build/NutShell.fir.opt.mlir 3722:17]
    node _T_106 = mux(_T_67, UInt<2>(2), _T_105) @[build/NutShell.fir.opt.mlir 3724:17]
    node _T_107 = mux(_T_65, UInt<3>(4), _T_106) @[build/NutShell.fir.opt.mlir 3726:17]
    node _T_108 = mux(_T_63, UInt<1>(0), _T_107) @[build/NutShell.fir.opt.mlir 3728:17]
    node _T_109 = mux(_T_61, UInt<3>(5), _T_108) @[build/NutShell.fir.opt.mlir 3730:17]
    node _T_110 = mux(_T_59, UInt<3>(4), _T_109) @[build/NutShell.fir.opt.mlir 3732:17]
    node _T_111 = mux(_T_57, UInt<4>(9), _T_110) @[build/NutShell.fir.opt.mlir 3734:17]
    node _T_112 = mux(_T_55, UInt<4>(9), _T_111) @[build/NutShell.fir.opt.mlir 3736:17]
    node _T_113 = mux(_T_53, UInt<2>(2), _T_112) @[build/NutShell.fir.opt.mlir 3738:17]
    node _T_114 = mux(_T_51, UInt<3>(6), _T_113) @[build/NutShell.fir.opt.mlir 3740:17]
    node _T_115 = mux(_T_49, UInt<3>(6), _T_114) @[build/NutShell.fir.opt.mlir 3742:17]
    node _T_116 = mux(_T_47, UInt<1>(0), _T_115) @[build/NutShell.fir.opt.mlir 3744:17]
    node _T_117 = mux(_T_45, UInt<3>(6), _T_116) @[build/NutShell.fir.opt.mlir 3746:17]
    node _T_118 = mux(_T_43, UInt<3>(6), _T_117) @[build/NutShell.fir.opt.mlir 3748:17]
    node _T_119 = mux(_T_41, UInt<3>(6), _T_118) @[build/NutShell.fir.opt.mlir 3750:17]
    node _T_120 = mux(_T_39, UInt<3>(6), _T_119) @[build/NutShell.fir.opt.mlir 3752:17]
    node _T_121 = mux(_T_37, UInt<3>(6), _T_120) @[build/NutShell.fir.opt.mlir 3754:17]
    node _T_122 = mux(_T_35, UInt<3>(6), _T_121) @[build/NutShell.fir.opt.mlir 3756:17]
    node _T_123 = mux(_T_33, UInt<3>(6), _T_122) @[build/NutShell.fir.opt.mlir 3758:17]
    node _T_124 = mux(_T_31, UInt<3>(6), _T_123) @[build/NutShell.fir.opt.mlir 3760:17]
    node _T_125 = mux(_T_29, UInt<3>(6), _T_124) @[build/NutShell.fir.opt.mlir 3762:17]
    node _T_126 = mux(_T_27, UInt<1>(0), _T_125) @[build/NutShell.fir.opt.mlir 3764:17]
    node _T_127 = mux(_T_25, UInt<4>(9), _T_126) @[build/NutShell.fir.opt.mlir 3766:17]
    node _T_128 = mux(_T_23, UInt<1>(0), _T_127) @[build/NutShell.fir.opt.mlir 3768:17]
    node _T_129 = mux(_T_21, UInt<2>(2), _T_128) @[build/NutShell.fir.opt.mlir 3770:17]
    node _T_130 = mux(_T_19, UInt<2>(2), _T_129) @[build/NutShell.fir.opt.mlir 3772:17]
    node _T_131 = mux(_T_17, UInt<1>(0), _T_130) @[build/NutShell.fir.opt.mlir 3774:17]
    node _T_132 = mux(_T_15, UInt<3>(6), _T_131) @[build/NutShell.fir.opt.mlir 3776:17]
    node _T_133 = mux(_T_13, UInt<3>(6), _T_132) @[build/NutShell.fir.opt.mlir 3778:17]
    node _T_134 = mux(_T_11, UInt<3>(6), _T_133) @[build/NutShell.fir.opt.mlir 3780:17]
    node _T_135 = mux(_T_9, UInt<3>(6), _T_134) @[build/NutShell.fir.opt.mlir 3782:17]
    node rvcSrc1Type = mux(_T_7, UInt<4>(9), _T_135) @[build/NutShell.fir.opt.mlir 3784:22]
    node _T_136 = mux(_T_71, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3786:17]
    node _T_137 = mux(_T_69, UInt<3>(5), _T_136) @[build/NutShell.fir.opt.mlir 3788:17]
    node _T_138 = mux(_T_67, UInt<3>(5), _T_137) @[build/NutShell.fir.opt.mlir 3790:17]
    node _T_139 = mux(_T_65, UInt<1>(0), _T_138) @[build/NutShell.fir.opt.mlir 3792:17]
    node _T_140 = mux(_T_63, UInt<1>(0), _T_139) @[build/NutShell.fir.opt.mlir 3794:17]
    node _T_141 = mux(_T_61, UInt<1>(0), _T_140) @[build/NutShell.fir.opt.mlir 3796:17]
    node _T_142 = mux(_T_59, UInt<1>(0), _T_141) @[build/NutShell.fir.opt.mlir 3798:17]
    node _T_143 = mux(_T_57, UInt<1>(0), _T_142) @[build/NutShell.fir.opt.mlir 3800:17]
    node _T_144 = mux(_T_55, UInt<1>(0), _T_143) @[build/NutShell.fir.opt.mlir 3802:17]
    node _T_145 = mux(_T_53, UInt<1>(0), _T_144) @[build/NutShell.fir.opt.mlir 3804:17]
    node _T_146 = mux(_T_51, UInt<1>(0), _T_145) @[build/NutShell.fir.opt.mlir 3806:17]
    node _T_147 = mux(_T_49, UInt<1>(0), _T_146) @[build/NutShell.fir.opt.mlir 3808:17]
    node _T_148 = mux(_T_47, UInt<1>(0), _T_147) @[build/NutShell.fir.opt.mlir 3810:17]
    node _T_149 = mux(_T_45, UInt<3>(7), _T_148) @[build/NutShell.fir.opt.mlir 3812:17]
    node _T_150 = mux(_T_43, UInt<3>(7), _T_149) @[build/NutShell.fir.opt.mlir 3814:17]
    node _T_151 = mux(_T_41, UInt<3>(7), _T_150) @[build/NutShell.fir.opt.mlir 3816:17]
    node _T_152 = mux(_T_39, UInt<3>(7), _T_151) @[build/NutShell.fir.opt.mlir 3818:17]
    node _T_153 = mux(_T_37, UInt<3>(7), _T_152) @[build/NutShell.fir.opt.mlir 3820:17]
    node _T_154 = mux(_T_35, UInt<3>(7), _T_153) @[build/NutShell.fir.opt.mlir 3822:17]
    node _T_155 = mux(_T_33, UInt<1>(0), _T_154) @[build/NutShell.fir.opt.mlir 3824:17]
    node _T_156 = mux(_T_31, UInt<1>(0), _T_155) @[build/NutShell.fir.opt.mlir 3826:17]
    node _T_157 = mux(_T_29, UInt<1>(0), _T_156) @[build/NutShell.fir.opt.mlir 3828:17]
    node _T_158 = mux(_T_27, UInt<1>(0), _T_157) @[build/NutShell.fir.opt.mlir 3830:17]
    node _T_159 = mux(_T_25, UInt<1>(0), _T_158) @[build/NutShell.fir.opt.mlir 3832:17]
    node _T_160 = mux(_T_23, UInt<1>(0), _T_159) @[build/NutShell.fir.opt.mlir 3834:17]
    node _T_161 = mux(_T_21, UInt<1>(0), _T_160) @[build/NutShell.fir.opt.mlir 3836:17]
    node _T_162 = mux(_T_19, UInt<1>(0), _T_161) @[build/NutShell.fir.opt.mlir 3838:17]
    node _T_163 = mux(_T_17, UInt<1>(0), _T_162) @[build/NutShell.fir.opt.mlir 3840:17]
    node _T_164 = mux(_T_15, UInt<3>(7), _T_163) @[build/NutShell.fir.opt.mlir 3842:17]
    node _T_165 = mux(_T_13, UInt<3>(7), _T_164) @[build/NutShell.fir.opt.mlir 3844:17]
    node _T_166 = mux(_T_11, UInt<1>(0), _T_165) @[build/NutShell.fir.opt.mlir 3846:17]
    node _T_167 = mux(_T_9, UInt<1>(0), _T_166) @[build/NutShell.fir.opt.mlir 3848:17]
    node rvcSrc2Type = mux(_T_7, UInt<1>(0), _T_167) @[build/NutShell.fir.opt.mlir 3850:22]
    node _T_168 = mux(_T_71, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 3852:17]
    node _T_169 = mux(_T_69, UInt<1>(0), _T_168) @[build/NutShell.fir.opt.mlir 3854:17]
    node _T_170 = mux(_T_67, UInt<2>(2), _T_169) @[build/NutShell.fir.opt.mlir 3856:17]
    node _T_171 = mux(_T_65, UInt<4>(8), _T_170) @[build/NutShell.fir.opt.mlir 3858:17]
    node _T_172 = mux(_T_63, UInt<1>(0), _T_171) @[build/NutShell.fir.opt.mlir 3860:17]
    node _T_173 = mux(_T_61, UInt<2>(2), _T_172) @[build/NutShell.fir.opt.mlir 3862:17]
    node _T_174 = mux(_T_59, UInt<1>(0), _T_173) @[build/NutShell.fir.opt.mlir 3864:17]
    node _T_175 = mux(_T_57, UInt<2>(2), _T_174) @[build/NutShell.fir.opt.mlir 3866:17]
    node _T_176 = mux(_T_55, UInt<2>(2), _T_175) @[build/NutShell.fir.opt.mlir 3868:17]
    node _T_177 = mux(_T_53, UInt<2>(2), _T_176) @[build/NutShell.fir.opt.mlir 3870:17]
    node _T_178 = mux(_T_51, UInt<1>(0), _T_177) @[build/NutShell.fir.opt.mlir 3872:17]
    node _T_179 = mux(_T_49, UInt<1>(0), _T_178) @[build/NutShell.fir.opt.mlir 3874:17]
    node _T_180 = mux(_T_47, UInt<1>(0), _T_179) @[build/NutShell.fir.opt.mlir 3876:17]
    node _T_181 = mux(_T_45, UInt<3>(6), _T_180) @[build/NutShell.fir.opt.mlir 3878:17]
    node _T_182 = mux(_T_43, UInt<3>(6), _T_181) @[build/NutShell.fir.opt.mlir 3880:17]
    node _T_183 = mux(_T_41, UInt<3>(6), _T_182) @[build/NutShell.fir.opt.mlir 3882:17]
    node _T_184 = mux(_T_39, UInt<3>(6), _T_183) @[build/NutShell.fir.opt.mlir 3884:17]
    node _T_185 = mux(_T_37, UInt<3>(6), _T_184) @[build/NutShell.fir.opt.mlir 3886:17]
    node _T_186 = mux(_T_35, UInt<3>(6), _T_185) @[build/NutShell.fir.opt.mlir 3888:17]
    node _T_187 = mux(_T_33, UInt<3>(6), _T_186) @[build/NutShell.fir.opt.mlir 3890:17]
    node _T_188 = mux(_T_31, UInt<3>(6), _T_187) @[build/NutShell.fir.opt.mlir 3892:17]
    node _T_189 = mux(_T_29, UInt<3>(6), _T_188) @[build/NutShell.fir.opt.mlir 3894:17]
    node _T_190 = mux(_T_27, UInt<2>(2), _T_189) @[build/NutShell.fir.opt.mlir 3896:17]
    node _T_191 = mux(_T_25, UInt<4>(9), _T_190) @[build/NutShell.fir.opt.mlir 3898:17]
    node _T_192 = mux(_T_23, UInt<2>(2), _T_191) @[build/NutShell.fir.opt.mlir 3900:17]
    node _T_193 = mux(_T_21, UInt<2>(2), _T_192) @[build/NutShell.fir.opt.mlir 3902:17]
    node _T_194 = mux(_T_19, UInt<2>(2), _T_193) @[build/NutShell.fir.opt.mlir 3904:17]
    node _T_195 = mux(_T_17, UInt<1>(0), _T_194) @[build/NutShell.fir.opt.mlir 3906:17]
    node _T_196 = mux(_T_15, UInt<1>(0), _T_195) @[build/NutShell.fir.opt.mlir 3908:17]
    node _T_197 = mux(_T_13, UInt<1>(0), _T_196) @[build/NutShell.fir.opt.mlir 3910:17]
    node _T_198 = mux(_T_11, UInt<3>(7), _T_197) @[build/NutShell.fir.opt.mlir 3912:17]
    node _T_199 = mux(_T_9, UInt<3>(7), _T_198) @[build/NutShell.fir.opt.mlir 3914:17]
    node rvcDestType = mux(_T_7, UInt<3>(7), _T_199) @[build/NutShell.fir.opt.mlir 3916:22]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 3918:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 3920:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 3922:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 3924:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 3926:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 3928:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 3930:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 3932:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 3934:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 3936:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 3938:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 3940:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 3942:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 3944:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 3946:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 3948:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 3950:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 3952:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 3954:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 3956:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 3958:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 3960:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 3962:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 3964:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 3966:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 3968:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 3970:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 3972:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 3974:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 3976:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 3978:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 3980:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 3982:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 3984:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 3986:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 3988:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 3990:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 3992:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 3994:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 3996:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 3998:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 4000:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 4002:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 4004:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 4006:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 4008:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 4010:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 4012:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 4014:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 4016:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 4018:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 4020:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 4022:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 4024:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 4026:7]
    connect io.out.bits.ctrl.fuType, fuType @[build/NutShell.fir.opt.mlir 4027:7]
    connect io.out.bits.ctrl.fuOpType, fuOpType @[build/NutShell.fir.opt.mlir 4028:7]
    node _src1Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4030:22]
    node _src1Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 4032:24]
    node _src1Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4034:24]
    node _src1Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4036:24]
    node _src1Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4038:24]
    node _src1Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4040:24]
    node _src1Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4042:24]
    node _src1Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 4044:24]
    node _src1Type_T_8 = mux(_src1Type_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4046:24]
    node _src1Type_T_9 = mux(_src1Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4048:24]
    node _src1Type_T_10 = mux(_src1Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4050:25]
    node _src1Type_T_11 = mux(_src1Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4052:25]
    node _src1Type_T_12 = mux(_src1Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4054:25]
    node _src1Type_T_13 = mux(_src1Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4056:25]
    node _src1Type_T_14 = mux(_src1Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4058:25]
    node _src1Type_T_15 = mux(_src1Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4060:25]
    node _src1Type_T_16 = or(_src1Type_T_8, _src1Type_T_9) @[build/NutShell.fir.opt.mlir 4062:25]
    node _src1Type_T_17 = or(_src1Type_T_16, _src1Type_T_10) @[build/NutShell.fir.opt.mlir 4064:25]
    node _src1Type_T_18 = or(_src1Type_T_17, _src1Type_T_11) @[build/NutShell.fir.opt.mlir 4066:25]
    node _src1Type_T_19 = or(_src1Type_T_18, _src1Type_T_12) @[build/NutShell.fir.opt.mlir 4068:25]
    node _src1Type_T_20 = or(_src1Type_T_19, _src1Type_T_13) @[build/NutShell.fir.opt.mlir 4070:25]
    node _src1Type_T_21 = or(_src1Type_T_20, _src1Type_T_14) @[build/NutShell.fir.opt.mlir 4072:25]
    node _src1Type_T_22 = or(_src1Type_T_21, _src1Type_T_15) @[build/NutShell.fir.opt.mlir 4074:25]
    wire src1Type : UInt<1> @[build/NutShell.fir.opt.mlir 4075:19]
    connect src1Type, _src1Type_T_22 @[build/NutShell.fir.opt.mlir 4076:7]
    node _src2Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4078:22]
    node _src2Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 4080:24]
    node _src2Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4082:24]
    node _src2Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4084:24]
    node _src2Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4086:24]
    node _src2Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4088:24]
    node _src2Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4090:24]
    node _src2Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 4092:24]
    node _src2Type_T_8 = mux(_src2Type_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4094:24]
    node _src2Type_T_9 = mux(_src2Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4096:24]
    node _src2Type_T_10 = mux(_src2Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4098:25]
    node _src2Type_T_11 = mux(_src2Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4100:25]
    node _src2Type_T_12 = mux(_src2Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4102:25]
    node _src2Type_T_13 = mux(_src2Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4104:25]
    node _src2Type_T_14 = mux(_src2Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4106:25]
    node _src2Type_T_15 = mux(_src2Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4108:25]
    node _src2Type_T_16 = or(_src2Type_T_8, _src2Type_T_9) @[build/NutShell.fir.opt.mlir 4110:25]
    node _src2Type_T_17 = or(_src2Type_T_16, _src2Type_T_10) @[build/NutShell.fir.opt.mlir 4112:25]
    node _src2Type_T_18 = or(_src2Type_T_17, _src2Type_T_11) @[build/NutShell.fir.opt.mlir 4114:25]
    node _src2Type_T_19 = or(_src2Type_T_18, _src2Type_T_12) @[build/NutShell.fir.opt.mlir 4116:25]
    node _src2Type_T_20 = or(_src2Type_T_19, _src2Type_T_13) @[build/NutShell.fir.opt.mlir 4118:25]
    node _src2Type_T_21 = or(_src2Type_T_20, _src2Type_T_14) @[build/NutShell.fir.opt.mlir 4120:25]
    node _src2Type_T_22 = or(_src2Type_T_21, _src2Type_T_15) @[build/NutShell.fir.opt.mlir 4122:25]
    wire src2Type : UInt<1> @[build/NutShell.fir.opt.mlir 4123:19]
    connect src2Type, _src2Type_T_22 @[build/NutShell.fir.opt.mlir 4124:7]
    node rs = bits(io.in.bits.instr, 19, 15) @[build/NutShell.fir.opt.mlir 4126:13]
    node rt = bits(io.in.bits.instr, 24, 20) @[build/NutShell.fir.opt.mlir 4128:13]
    node rd = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4130:13]
    node rs1 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4132:14]
    node rs2 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4134:14]
    node _rs1p_T = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 4136:18]
    node _rs1p_T_1 = eq(UInt<1>(0), _rs1p_T) @[build/NutShell.fir.opt.mlir 4138:20]
    node _rs1p_T_2 = eq(UInt<1>(1), _rs1p_T) @[build/NutShell.fir.opt.mlir 4140:20]
    node _rs1p_T_3 = eq(UInt<2>(2), _rs1p_T) @[build/NutShell.fir.opt.mlir 4142:20]
    node _rs1p_T_4 = eq(UInt<2>(3), _rs1p_T) @[build/NutShell.fir.opt.mlir 4144:20]
    node _rs1p_T_5 = eq(UInt<3>(4), _rs1p_T) @[build/NutShell.fir.opt.mlir 4146:20]
    node _rs1p_T_6 = eq(UInt<3>(5), _rs1p_T) @[build/NutShell.fir.opt.mlir 4148:20]
    node _rs1p_T_7 = eq(UInt<3>(6), _rs1p_T) @[build/NutShell.fir.opt.mlir 4150:20]
    node _rs1p_T_8 = eq(UInt<3>(7), _rs1p_T) @[build/NutShell.fir.opt.mlir 4152:20]
    node _rs1p_T_9 = mux(_rs1p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4154:20]
    node _rs1p_T_10 = mux(_rs1p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4156:21]
    node _rs1p_T_11 = mux(_rs1p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4158:21]
    node _rs1p_T_12 = mux(_rs1p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4160:21]
    node _rs1p_T_13 = mux(_rs1p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4162:21]
    node _rs1p_T_14 = mux(_rs1p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4164:21]
    node _rs1p_T_15 = mux(_rs1p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4166:21]
    node _rs1p_T_16 = mux(_rs1p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4168:21]
    node _rs1p_T_17 = or(_rs1p_T_9, _rs1p_T_10) @[build/NutShell.fir.opt.mlir 4170:21]
    node _rs1p_T_18 = or(_rs1p_T_17, _rs1p_T_11) @[build/NutShell.fir.opt.mlir 4172:21]
    node _rs1p_T_19 = or(_rs1p_T_18, _rs1p_T_12) @[build/NutShell.fir.opt.mlir 4174:21]
    node _rs1p_T_20 = or(_rs1p_T_19, _rs1p_T_13) @[build/NutShell.fir.opt.mlir 4176:21]
    node _rs1p_T_21 = or(_rs1p_T_20, _rs1p_T_14) @[build/NutShell.fir.opt.mlir 4178:21]
    node _rs1p_T_22 = or(_rs1p_T_21, _rs1p_T_15) @[build/NutShell.fir.opt.mlir 4180:21]
    node _rs1p_T_23 = or(_rs1p_T_22, _rs1p_T_16) @[build/NutShell.fir.opt.mlir 4182:21]
    wire rs1p : UInt<4> @[build/NutShell.fir.opt.mlir 4183:15]
    connect rs1p, _rs1p_T_23 @[build/NutShell.fir.opt.mlir 4184:7]
    node _rs2p_T = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 4186:18]
    node _rs2p_T_1 = eq(UInt<1>(0), _rs2p_T) @[build/NutShell.fir.opt.mlir 4188:20]
    node _rs2p_T_2 = eq(UInt<1>(1), _rs2p_T) @[build/NutShell.fir.opt.mlir 4190:20]
    node _rs2p_T_3 = eq(UInt<2>(2), _rs2p_T) @[build/NutShell.fir.opt.mlir 4192:20]
    node _rs2p_T_4 = eq(UInt<2>(3), _rs2p_T) @[build/NutShell.fir.opt.mlir 4194:20]
    node _rs2p_T_5 = eq(UInt<3>(4), _rs2p_T) @[build/NutShell.fir.opt.mlir 4196:20]
    node _rs2p_T_6 = eq(UInt<3>(5), _rs2p_T) @[build/NutShell.fir.opt.mlir 4198:20]
    node _rs2p_T_7 = eq(UInt<3>(6), _rs2p_T) @[build/NutShell.fir.opt.mlir 4200:20]
    node _rs2p_T_8 = eq(UInt<3>(7), _rs2p_T) @[build/NutShell.fir.opt.mlir 4202:20]
    node _rs2p_T_9 = mux(_rs2p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4204:20]
    node _rs2p_T_10 = mux(_rs2p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4206:21]
    node _rs2p_T_11 = mux(_rs2p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4208:21]
    node _rs2p_T_12 = mux(_rs2p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4210:21]
    node _rs2p_T_13 = mux(_rs2p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4212:21]
    node _rs2p_T_14 = mux(_rs2p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4214:21]
    node _rs2p_T_15 = mux(_rs2p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4216:21]
    node _rs2p_T_16 = mux(_rs2p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4218:21]
    node _rs2p_T_17 = or(_rs2p_T_9, _rs2p_T_10) @[build/NutShell.fir.opt.mlir 4220:21]
    node _rs2p_T_18 = or(_rs2p_T_17, _rs2p_T_11) @[build/NutShell.fir.opt.mlir 4222:21]
    node _rs2p_T_19 = or(_rs2p_T_18, _rs2p_T_12) @[build/NutShell.fir.opt.mlir 4224:21]
    node _rs2p_T_20 = or(_rs2p_T_19, _rs2p_T_13) @[build/NutShell.fir.opt.mlir 4226:21]
    node _rs2p_T_21 = or(_rs2p_T_20, _rs2p_T_14) @[build/NutShell.fir.opt.mlir 4228:21]
    node _rs2p_T_22 = or(_rs2p_T_21, _rs2p_T_15) @[build/NutShell.fir.opt.mlir 4230:21]
    node _rs2p_T_23 = or(_rs2p_T_22, _rs2p_T_16) @[build/NutShell.fir.opt.mlir 4232:21]
    wire rs2p : UInt<4> @[build/NutShell.fir.opt.mlir 4233:15]
    connect rs2p, _rs2p_T_23 @[build/NutShell.fir.opt.mlir 4234:7]
    node _rvc_shamt_T = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4236:23]
    node _rvc_shamt_T_1 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4238:25]
    node rvc_shamt = cat(_rvc_shamt_T, _rvc_shamt_T_1) @[build/NutShell.fir.opt.mlir 4240:20]
    node _rvc_src1_T = eq(UInt<1>(0), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4242:22]
    node _rvc_src1_T_1 = eq(UInt<2>(3), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4244:24]
    node _rvc_src1_T_2 = eq(UInt<1>(1), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4246:24]
    node _rvc_src1_T_3 = eq(UInt<2>(2), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4248:24]
    node _rvc_src1_T_4 = eq(UInt<3>(4), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4250:24]
    node _rvc_src1_T_5 = eq(UInt<3>(5), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4252:24]
    node _rvc_src1_T_6 = eq(UInt<3>(6), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4254:24]
    node _rvc_src1_T_7 = eq(UInt<3>(7), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4256:24]
    node _rvc_src1_T_8 = eq(UInt<4>(8), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4258:24]
    node _rvc_src1_T_9 = eq(UInt<4>(9), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 4260:24]
    node _rvc_src1_T_10 = mux(_rvc_src1_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4262:25]
    node _rvc_src1_T_11 = mux(_rvc_src1_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4264:25]
    node _rvc_src1_T_12 = mux(_rvc_src1_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4266:25]
    node _rvc_src1_T_13 = mux(_rvc_src1_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4268:25]
    node _rvc_src1_T_14 = mux(_rvc_src1_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4270:25]
    node _rvc_src1_T_15 = mux(_rvc_src1_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4272:25]
    node _rvc_src1_T_16 = mux(_rvc_src1_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4274:25]
    node _rvc_src1_T_17 = mux(_rvc_src1_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4276:25]
    node _rvc_src1_T_18 = mux(_rvc_src1_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4278:25]
    node _rvc_src1_T_19 = mux(_rvc_src1_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4280:25]
    node _rvc_src1_T_20 = or(_rvc_src1_T_10, _rvc_src1_T_11) @[build/NutShell.fir.opt.mlir 4282:25]
    node _rvc_src1_T_21 = or(_rvc_src1_T_20, _rvc_src1_T_12) @[build/NutShell.fir.opt.mlir 4284:25]
    node _rvc_src1_T_22 = or(_rvc_src1_T_21, _rvc_src1_T_13) @[build/NutShell.fir.opt.mlir 4286:25]
    node _rvc_src1_T_23 = or(_rvc_src1_T_22, _rvc_src1_T_14) @[build/NutShell.fir.opt.mlir 4288:25]
    node _rvc_src1_T_24 = or(_rvc_src1_T_23, _rvc_src1_T_15) @[build/NutShell.fir.opt.mlir 4290:25]
    node _rvc_src1_T_25 = or(_rvc_src1_T_24, _rvc_src1_T_16) @[build/NutShell.fir.opt.mlir 4292:25]
    node _rvc_src1_T_26 = or(_rvc_src1_T_25, _rvc_src1_T_17) @[build/NutShell.fir.opt.mlir 4294:25]
    node _rvc_src1_T_27 = or(_rvc_src1_T_26, _rvc_src1_T_18) @[build/NutShell.fir.opt.mlir 4296:25]
    node _rvc_src1_T_28 = or(_rvc_src1_T_27, _rvc_src1_T_19) @[build/NutShell.fir.opt.mlir 4298:25]
    wire rvc_src1 : UInt<5> @[build/NutShell.fir.opt.mlir 4299:19]
    connect rvc_src1, _rvc_src1_T_28 @[build/NutShell.fir.opt.mlir 4300:7]
    node _rvc_src2_T = eq(UInt<1>(0), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4302:22]
    node _rvc_src2_T_1 = eq(UInt<2>(3), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4304:24]
    node _rvc_src2_T_2 = eq(UInt<1>(1), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4306:24]
    node _rvc_src2_T_3 = eq(UInt<2>(2), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4308:24]
    node _rvc_src2_T_4 = eq(UInt<3>(4), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4310:24]
    node _rvc_src2_T_5 = eq(UInt<3>(5), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4312:24]
    node _rvc_src2_T_6 = eq(UInt<3>(6), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4314:24]
    node _rvc_src2_T_7 = eq(UInt<3>(7), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4316:24]
    node _rvc_src2_T_8 = eq(UInt<4>(8), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4318:24]
    node _rvc_src2_T_9 = eq(UInt<4>(9), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 4320:24]
    node _rvc_src2_T_10 = mux(_rvc_src2_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4322:25]
    node _rvc_src2_T_11 = mux(_rvc_src2_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4324:25]
    node _rvc_src2_T_12 = mux(_rvc_src2_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4326:25]
    node _rvc_src2_T_13 = mux(_rvc_src2_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4328:25]
    node _rvc_src2_T_14 = mux(_rvc_src2_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4330:25]
    node _rvc_src2_T_15 = mux(_rvc_src2_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4332:25]
    node _rvc_src2_T_16 = mux(_rvc_src2_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4334:25]
    node _rvc_src2_T_17 = mux(_rvc_src2_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4336:25]
    node _rvc_src2_T_18 = mux(_rvc_src2_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4338:25]
    node _rvc_src2_T_19 = mux(_rvc_src2_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4340:25]
    node _rvc_src2_T_20 = or(_rvc_src2_T_10, _rvc_src2_T_11) @[build/NutShell.fir.opt.mlir 4342:25]
    node _rvc_src2_T_21 = or(_rvc_src2_T_20, _rvc_src2_T_12) @[build/NutShell.fir.opt.mlir 4344:25]
    node _rvc_src2_T_22 = or(_rvc_src2_T_21, _rvc_src2_T_13) @[build/NutShell.fir.opt.mlir 4346:25]
    node _rvc_src2_T_23 = or(_rvc_src2_T_22, _rvc_src2_T_14) @[build/NutShell.fir.opt.mlir 4348:25]
    node _rvc_src2_T_24 = or(_rvc_src2_T_23, _rvc_src2_T_15) @[build/NutShell.fir.opt.mlir 4350:25]
    node _rvc_src2_T_25 = or(_rvc_src2_T_24, _rvc_src2_T_16) @[build/NutShell.fir.opt.mlir 4352:25]
    node _rvc_src2_T_26 = or(_rvc_src2_T_25, _rvc_src2_T_17) @[build/NutShell.fir.opt.mlir 4354:25]
    node _rvc_src2_T_27 = or(_rvc_src2_T_26, _rvc_src2_T_18) @[build/NutShell.fir.opt.mlir 4356:25]
    node _rvc_src2_T_28 = or(_rvc_src2_T_27, _rvc_src2_T_19) @[build/NutShell.fir.opt.mlir 4358:25]
    wire rvc_src2 : UInt<5> @[build/NutShell.fir.opt.mlir 4359:19]
    connect rvc_src2, _rvc_src2_T_28 @[build/NutShell.fir.opt.mlir 4360:7]
    node _rvc_dest_T = eq(UInt<1>(0), rvcDestType) @[build/NutShell.fir.opt.mlir 4362:22]
    node _rvc_dest_T_1 = eq(UInt<2>(3), rvcDestType) @[build/NutShell.fir.opt.mlir 4364:24]
    node _rvc_dest_T_2 = eq(UInt<1>(1), rvcDestType) @[build/NutShell.fir.opt.mlir 4366:24]
    node _rvc_dest_T_3 = eq(UInt<2>(2), rvcDestType) @[build/NutShell.fir.opt.mlir 4368:24]
    node _rvc_dest_T_4 = eq(UInt<3>(4), rvcDestType) @[build/NutShell.fir.opt.mlir 4370:24]
    node _rvc_dest_T_5 = eq(UInt<3>(5), rvcDestType) @[build/NutShell.fir.opt.mlir 4372:24]
    node _rvc_dest_T_6 = eq(UInt<3>(6), rvcDestType) @[build/NutShell.fir.opt.mlir 4374:24]
    node _rvc_dest_T_7 = eq(UInt<3>(7), rvcDestType) @[build/NutShell.fir.opt.mlir 4376:24]
    node _rvc_dest_T_8 = eq(UInt<4>(8), rvcDestType) @[build/NutShell.fir.opt.mlir 4378:24]
    node _rvc_dest_T_9 = eq(UInt<4>(9), rvcDestType) @[build/NutShell.fir.opt.mlir 4380:24]
    node _rvc_dest_T_10 = mux(_rvc_dest_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4382:25]
    node _rvc_dest_T_11 = mux(_rvc_dest_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4384:25]
    node _rvc_dest_T_12 = mux(_rvc_dest_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4386:25]
    node _rvc_dest_T_13 = mux(_rvc_dest_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4388:25]
    node _rvc_dest_T_14 = mux(_rvc_dest_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4390:25]
    node _rvc_dest_T_15 = mux(_rvc_dest_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4392:25]
    node _rvc_dest_T_16 = mux(_rvc_dest_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4394:25]
    node _rvc_dest_T_17 = mux(_rvc_dest_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4396:25]
    node _rvc_dest_T_18 = mux(_rvc_dest_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4398:25]
    node _rvc_dest_T_19 = mux(_rvc_dest_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4400:25]
    node _rvc_dest_T_20 = or(_rvc_dest_T_10, _rvc_dest_T_11) @[build/NutShell.fir.opt.mlir 4402:25]
    node _rvc_dest_T_21 = or(_rvc_dest_T_20, _rvc_dest_T_12) @[build/NutShell.fir.opt.mlir 4404:25]
    node _rvc_dest_T_22 = or(_rvc_dest_T_21, _rvc_dest_T_13) @[build/NutShell.fir.opt.mlir 4406:25]
    node _rvc_dest_T_23 = or(_rvc_dest_T_22, _rvc_dest_T_14) @[build/NutShell.fir.opt.mlir 4408:25]
    node _rvc_dest_T_24 = or(_rvc_dest_T_23, _rvc_dest_T_15) @[build/NutShell.fir.opt.mlir 4410:25]
    node _rvc_dest_T_25 = or(_rvc_dest_T_24, _rvc_dest_T_16) @[build/NutShell.fir.opt.mlir 4412:25]
    node _rvc_dest_T_26 = or(_rvc_dest_T_25, _rvc_dest_T_17) @[build/NutShell.fir.opt.mlir 4414:25]
    node _rvc_dest_T_27 = or(_rvc_dest_T_26, _rvc_dest_T_18) @[build/NutShell.fir.opt.mlir 4416:25]
    node _rvc_dest_T_28 = or(_rvc_dest_T_27, _rvc_dest_T_19) @[build/NutShell.fir.opt.mlir 4418:25]
    wire rvc_dest : UInt<5> @[build/NutShell.fir.opt.mlir 4419:19]
    connect rvc_dest, _rvc_dest_T_28 @[build/NutShell.fir.opt.mlir 4420:7]
    node rfSrc1 = mux(isRVC, rvc_src1, rs) @[build/NutShell.fir.opt.mlir 4422:17]
    node rfSrc2 = mux(isRVC, rvc_src2, rt) @[build/NutShell.fir.opt.mlir 4424:17]
    node rfDest = mux(isRVC, rvc_dest, rd) @[build/NutShell.fir.opt.mlir 4426:17]
    node _io_out_bits_ctrl_rfSrc1_T = eq(src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4428:37]
    node _io_out_bits_ctrl_rfSrc1_T_1 = mux(_io_out_bits_ctrl_rfSrc1_T, UInt<1>(0), rfSrc1) @[build/NutShell.fir.opt.mlir 4430:39]
    connect io.out.bits.ctrl.rfSrc1, _io_out_bits_ctrl_rfSrc1_T_1 @[build/NutShell.fir.opt.mlir 4431:7]
    node _io_out_bits_ctrl_rfSrc2_T = eq(src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4433:37]
    node _io_out_bits_ctrl_rfSrc2_T_1 = mux(_io_out_bits_ctrl_rfSrc2_T, rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4435:39]
    connect io.out.bits.ctrl.rfSrc2, _io_out_bits_ctrl_rfSrc2_T_1 @[build/NutShell.fir.opt.mlir 4436:7]
    node _io_out_bits_ctrl_rfWen_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 4438:36]
    connect io.out.bits.ctrl.rfWen, _io_out_bits_ctrl_rfWen_T @[build/NutShell.fir.opt.mlir 4439:7]
    node _io_out_bits_ctrl_rfDest_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 4441:37]
    node _io_out_bits_ctrl_rfDest_T_1 = mux(_io_out_bits_ctrl_rfDest_T, rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4443:39]
    connect io.out.bits.ctrl.rfDest, _io_out_bits_ctrl_rfDest_T_1 @[build/NutShell.fir.opt.mlir 4444:7]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 4446:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 4448:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 4450:7]
    node _imm_T = bits(io.in.bits.instr, 31, 20) @[build/NutShell.fir.opt.mlir 4452:17]
    node imm_signBit = bits(_imm_T, 11, 11) @[build/NutShell.fir.opt.mlir 4454:22]
    node _imm_T_1 = mux(imm_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4458:19]
    node _imm_T_2 = cat(_imm_T_1, _imm_T) @[build/NutShell.fir.opt.mlir 4460:19]
    node _imm_T_3 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 4462:19]
    node _imm_T_4 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4464:19]
    node _imm_T_5 = cat(_imm_T_3, _imm_T_4) @[build/NutShell.fir.opt.mlir 4466:19]
    node imm_signBit_1 = bits(_imm_T_5, 11, 11) @[build/NutShell.fir.opt.mlir 4468:24]
    node _imm_T_6 = mux(imm_signBit_1, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4470:19]
    node _imm_T_7 = cat(_imm_T_6, _imm_T_5) @[build/NutShell.fir.opt.mlir 4472:19]
    node _imm_T_8 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 4474:19]
    node _imm_T_9 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 4476:19]
    node _imm_T_10 = cat(_imm_T_8, _imm_T_9) @[build/NutShell.fir.opt.mlir 4478:20]
    node imm_signBit_2 = bits(_imm_T_10, 11, 11) @[build/NutShell.fir.opt.mlir 4480:24]
    node _imm_T_11 = mux(imm_signBit_2, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4482:20]
    node _imm_T_12 = cat(_imm_T_11, _imm_T_10) @[build/NutShell.fir.opt.mlir 4484:20]
    node _imm_T_13 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 4486:20]
    node _imm_T_14 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 4488:20]
    node _imm_T_15 = bits(io.in.bits.instr, 30, 25) @[build/NutShell.fir.opt.mlir 4490:20]
    node _imm_T_16 = bits(io.in.bits.instr, 11, 8) @[build/NutShell.fir.opt.mlir 4492:20]
    node imm_lo = cat(_imm_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4494:17]
    node imm_hi_hi = cat(_imm_T_13, _imm_T_14) @[build/NutShell.fir.opt.mlir 4496:20]
    node imm_hi = cat(imm_hi_hi, _imm_T_15) @[build/NutShell.fir.opt.mlir 4498:17]
    node _imm_T_17 = cat(imm_hi, imm_lo) @[build/NutShell.fir.opt.mlir 4500:20]
    node imm_signBit_3 = bits(_imm_T_17, 12, 12) @[build/NutShell.fir.opt.mlir 4502:24]
    node _imm_T_18 = mux(imm_signBit_3, UInt<51>(2251799813685247), UInt<51>(0)) @[build/NutShell.fir.opt.mlir 4506:20]
    node _imm_T_19 = cat(_imm_T_18, _imm_T_17) @[build/NutShell.fir.opt.mlir 4508:20]
    node _imm_T_20 = bits(io.in.bits.instr, 31, 12) @[build/NutShell.fir.opt.mlir 4510:20]
    node _imm_T_21 = cat(_imm_T_20, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 4513:20]
    node imm_signBit_4 = bits(_imm_T_21, 31, 31) @[build/NutShell.fir.opt.mlir 4515:24]
    node _imm_T_22 = mux(imm_signBit_4, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 4518:20]
    node _imm_T_23 = cat(_imm_T_22, _imm_T_21) @[build/NutShell.fir.opt.mlir 4520:20]
    node _imm_T_24 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 4522:20]
    node _imm_T_25 = bits(io.in.bits.instr, 19, 12) @[build/NutShell.fir.opt.mlir 4524:20]
    node _imm_T_26 = bits(io.in.bits.instr, 20, 20) @[build/NutShell.fir.opt.mlir 4526:20]
    node _imm_T_27 = bits(io.in.bits.instr, 30, 21) @[build/NutShell.fir.opt.mlir 4528:20]
    node imm_lo_1 = cat(_imm_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4530:19]
    node imm_hi_hi_1 = cat(_imm_T_24, _imm_T_25) @[build/NutShell.fir.opt.mlir 4532:22]
    node imm_hi_1 = cat(imm_hi_hi_1, _imm_T_26) @[build/NutShell.fir.opt.mlir 4534:19]
    node _imm_T_28 = cat(imm_hi_1, imm_lo_1) @[build/NutShell.fir.opt.mlir 4536:20]
    node imm_signBit_5 = bits(_imm_T_28, 20, 20) @[build/NutShell.fir.opt.mlir 4538:24]
    node _imm_T_29 = mux(imm_signBit_5, UInt<43>(8796093022207), UInt<43>(0)) @[build/NutShell.fir.opt.mlir 4542:20]
    node _imm_T_30 = cat(_imm_T_29, _imm_T_28) @[build/NutShell.fir.opt.mlir 4544:20]
    node _imm_T_31 = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 4546:20]
    node _imm_T_32 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 4548:20]
    node _imm_T_33 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 4550:20]
    node _imm_T_34 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 4552:20]
    node _imm_T_35 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 4554:20]
    node _imm_T_36 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 4556:20]
    node _imm_T_37 = mux(_imm_T_31, _imm_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4558:20]
    node _imm_T_38 = mux(_imm_T_32, _imm_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4560:20]
    node _imm_T_39 = mux(_imm_T_33, _imm_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4562:20]
    node _imm_T_40 = mux(_imm_T_34, _imm_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4564:20]
    node _imm_T_41 = mux(_imm_T_35, _imm_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4566:20]
    node _imm_T_42 = mux(_imm_T_36, _imm_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4568:20]
    node _imm_T_43 = or(_imm_T_37, _imm_T_38) @[build/NutShell.fir.opt.mlir 4570:20]
    node _imm_T_44 = or(_imm_T_43, _imm_T_39) @[build/NutShell.fir.opt.mlir 4572:20]
    node _imm_T_45 = or(_imm_T_44, _imm_T_40) @[build/NutShell.fir.opt.mlir 4574:20]
    node _imm_T_46 = or(_imm_T_45, _imm_T_41) @[build/NutShell.fir.opt.mlir 4576:20]
    node _imm_T_47 = or(_imm_T_46, _imm_T_42) @[build/NutShell.fir.opt.mlir 4578:20]
    wire imm : UInt<64> @[build/NutShell.fir.opt.mlir 4579:14]
    connect imm, _imm_T_47 @[build/NutShell.fir.opt.mlir 4580:7]
    node _immrvc_T = bits(io.in.bits.instr, 3, 2) @[build/NutShell.fir.opt.mlir 4582:20]
    node _immrvc_T_1 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4584:22]
    node _immrvc_T_2 = bits(io.in.bits.instr, 6, 4) @[build/NutShell.fir.opt.mlir 4586:22]
    node immrvc_lo = cat(_immrvc_T_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4589:20]
    node immrvc_hi = cat(_immrvc_T, _immrvc_T_1) @[build/NutShell.fir.opt.mlir 4591:20]
    node _immrvc_T_3 = cat(immrvc_hi, immrvc_lo) @[build/NutShell.fir.opt.mlir 4593:22]
    node _immrvc_T_4 = cat(UInt<56>(0), _immrvc_T_3) @[build/NutShell.fir.opt.mlir 4596:22]
    node _immrvc_T_5 = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 4598:22]
    node _immrvc_T_6 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4600:22]
    node _immrvc_T_7 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4602:22]
    node immrvc_lo_1 = cat(_immrvc_T_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4605:22]
    node immrvc_hi_1 = cat(_immrvc_T_5, _immrvc_T_6) @[build/NutShell.fir.opt.mlir 4607:22]
    node _immrvc_T_8 = cat(immrvc_hi_1, immrvc_lo_1) @[build/NutShell.fir.opt.mlir 4609:22]
    node _immrvc_T_9 = cat(UInt<55>(0), _immrvc_T_8) @[build/NutShell.fir.opt.mlir 4612:22]
    node _immrvc_T_10 = bits(io.in.bits.instr, 8, 7) @[build/NutShell.fir.opt.mlir 4614:23]
    node _immrvc_T_11 = bits(io.in.bits.instr, 12, 9) @[build/NutShell.fir.opt.mlir 4616:23]
    node immrvc_hi_2 = cat(_immrvc_T_10, _immrvc_T_11) @[build/NutShell.fir.opt.mlir 4618:22]
    node _immrvc_T_12 = cat(immrvc_hi_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4620:23]
    node _immrvc_T_13 = cat(UInt<56>(0), _immrvc_T_12) @[build/NutShell.fir.opt.mlir 4622:23]
    node _immrvc_T_14 = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 4624:23]
    node _immrvc_T_15 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4626:23]
    node immrvc_hi_3 = cat(_immrvc_T_14, _immrvc_T_15) @[build/NutShell.fir.opt.mlir 4628:22]
    node _immrvc_T_16 = cat(immrvc_hi_3, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4630:23]
    node _immrvc_T_17 = cat(UInt<55>(0), _immrvc_T_16) @[build/NutShell.fir.opt.mlir 4632:23]
    node _immrvc_T_18 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4634:23]
    node _immrvc_T_19 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4636:23]
    node _immrvc_T_20 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4638:23]
    node immrvc_lo_2 = cat(_immrvc_T_20, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4640:22]
    node immrvc_hi_4 = cat(_immrvc_T_18, _immrvc_T_19) @[build/NutShell.fir.opt.mlir 4642:22]
    node _immrvc_T_21 = cat(immrvc_hi_4, immrvc_lo_2) @[build/NutShell.fir.opt.mlir 4644:23]
    node _immrvc_T_22 = cat(UInt<57>(0), _immrvc_T_21) @[build/NutShell.fir.opt.mlir 4647:23]
    node _immrvc_T_23 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4649:23]
    node _immrvc_T_24 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4651:23]
    node immrvc_hi_5 = cat(_immrvc_T_23, _immrvc_T_24) @[build/NutShell.fir.opt.mlir 4653:22]
    node _immrvc_T_25 = cat(immrvc_hi_5, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4655:23]
    node _immrvc_T_26 = cat(UInt<56>(0), _immrvc_T_25) @[build/NutShell.fir.opt.mlir 4657:23]
    node _immrvc_T_27 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4659:23]
    node _immrvc_T_28 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4661:23]
    node _immrvc_T_29 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4663:23]
    node immrvc_lo_3 = cat(_immrvc_T_29, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4665:22]
    node immrvc_hi_6 = cat(_immrvc_T_27, _immrvc_T_28) @[build/NutShell.fir.opt.mlir 4667:22]
    node _immrvc_T_30 = cat(immrvc_hi_6, immrvc_lo_3) @[build/NutShell.fir.opt.mlir 4669:23]
    node _immrvc_T_31 = cat(UInt<57>(0), _immrvc_T_30) @[build/NutShell.fir.opt.mlir 4671:23]
    node _immrvc_T_32 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4673:23]
    node _immrvc_T_33 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 4675:23]
    node immrvc_hi_7 = cat(_immrvc_T_32, _immrvc_T_33) @[build/NutShell.fir.opt.mlir 4677:22]
    node _immrvc_T_34 = cat(immrvc_hi_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 4679:23]
    node _immrvc_T_35 = cat(UInt<56>(0), _immrvc_T_34) @[build/NutShell.fir.opt.mlir 4681:23]
    node _immrvc_T_36 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4683:23]
    node _immrvc_T_37 = bits(io.in.bits.instr, 8, 8) @[build/NutShell.fir.opt.mlir 4685:23]
    node _immrvc_T_38 = bits(io.in.bits.instr, 10, 9) @[build/NutShell.fir.opt.mlir 4687:23]
    node _immrvc_T_39 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4689:23]
    node _immrvc_T_40 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 4691:23]
    node _immrvc_T_41 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4693:23]
    node _immrvc_T_42 = bits(io.in.bits.instr, 11, 11) @[build/NutShell.fir.opt.mlir 4695:23]
    node _immrvc_T_43 = bits(io.in.bits.instr, 5, 3) @[build/NutShell.fir.opt.mlir 4697:23]
    node immrvc_lo_lo = cat(_immrvc_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4699:23]
    node immrvc_lo_hi = cat(_immrvc_T_41, _immrvc_T_42) @[build/NutShell.fir.opt.mlir 4701:23]
    node immrvc_lo_4 = cat(immrvc_lo_hi, immrvc_lo_lo) @[build/NutShell.fir.opt.mlir 4703:22]
    node immrvc_hi_lo = cat(_immrvc_T_39, _immrvc_T_40) @[build/NutShell.fir.opt.mlir 4705:23]
    node immrvc_hi_hi_hi = cat(_immrvc_T_36, _immrvc_T_37) @[build/NutShell.fir.opt.mlir 4707:26]
    node immrvc_hi_hi = cat(immrvc_hi_hi_hi, _immrvc_T_38) @[build/NutShell.fir.opt.mlir 4709:23]
    node immrvc_hi_8 = cat(immrvc_hi_hi, immrvc_hi_lo) @[build/NutShell.fir.opt.mlir 4711:22]
    node _immrvc_T_44 = cat(immrvc_hi_8, immrvc_lo_4) @[build/NutShell.fir.opt.mlir 4713:23]
    node immrvc_signBit = bits(_immrvc_T_44, 11, 11) @[build/NutShell.fir.opt.mlir 4715:25]
    node _immrvc_T_45 = mux(immrvc_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 4717:23]
    node _immrvc_T_46 = cat(_immrvc_T_45, _immrvc_T_44) @[build/NutShell.fir.opt.mlir 4719:23]
    node _immrvc_T_47 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4721:23]
    node _immrvc_T_48 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 4723:23]
    node _immrvc_T_49 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4725:23]
    node _immrvc_T_50 = bits(io.in.bits.instr, 11, 10) @[build/NutShell.fir.opt.mlir 4727:23]
    node _immrvc_T_51 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 4729:23]
    node immrvc_lo_hi_1 = cat(_immrvc_T_50, _immrvc_T_51) @[build/NutShell.fir.opt.mlir 4731:25]
    node immrvc_lo_5 = cat(immrvc_lo_hi_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4733:22]
    node immrvc_hi_hi_1 = cat(_immrvc_T_47, _immrvc_T_48) @[build/NutShell.fir.opt.mlir 4735:25]
    node immrvc_hi_9 = cat(immrvc_hi_hi_1, _immrvc_T_49) @[build/NutShell.fir.opt.mlir 4737:22]
    node _immrvc_T_52 = cat(immrvc_hi_9, immrvc_lo_5) @[build/NutShell.fir.opt.mlir 4739:23]
    node immrvc_signBit_1 = bits(_immrvc_T_52, 8, 8) @[build/NutShell.fir.opt.mlir 4741:27]
    node _immrvc_T_53 = mux(immrvc_signBit_1, UInt<55>(36028797018963967), UInt<55>(0)) @[build/NutShell.fir.opt.mlir 4744:23]
    node _immrvc_T_54 = cat(_immrvc_T_53, _immrvc_T_52) @[build/NutShell.fir.opt.mlir 4746:23]
    node _immrvc_T_55 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4748:23]
    node _immrvc_T_56 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4750:23]
    node _immrvc_T_57 = cat(_immrvc_T_55, _immrvc_T_56) @[build/NutShell.fir.opt.mlir 4752:23]
    node immrvc_signBit_2 = bits(_immrvc_T_57, 5, 5) @[build/NutShell.fir.opt.mlir 4754:27]
    node _immrvc_T_58 = mux(immrvc_signBit_2, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 4758:23]
    node _immrvc_T_59 = cat(_immrvc_T_58, _immrvc_T_57) @[build/NutShell.fir.opt.mlir 4760:23]
    node _immrvc_T_60 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4762:23]
    node _immrvc_T_61 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4764:23]
    node immrvc_hi_10 = cat(_immrvc_T_60, _immrvc_T_61) @[build/NutShell.fir.opt.mlir 4766:23]
    node _immrvc_T_62 = cat(immrvc_hi_10, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 4768:23]
    node immrvc_signBit_3 = bits(_immrvc_T_62, 17, 17) @[build/NutShell.fir.opt.mlir 4770:27]
    node _immrvc_T_63 = mux(immrvc_signBit_3, UInt<46>(70368744177663), UInt<46>(0)) @[build/NutShell.fir.opt.mlir 4774:23]
    node _immrvc_T_64 = cat(_immrvc_T_63, _immrvc_T_62) @[build/NutShell.fir.opt.mlir 4776:23]
    node _immrvc_T_65 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4778:23]
    node _immrvc_T_66 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 4780:23]
    node _immrvc_T_67 = cat(_immrvc_T_65, _immrvc_T_66) @[build/NutShell.fir.opt.mlir 4782:23]
    node immrvc_signBit_4 = bits(_immrvc_T_67, 5, 5) @[build/NutShell.fir.opt.mlir 4784:27]
    node _immrvc_T_68 = mux(immrvc_signBit_4, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 4786:23]
    node _immrvc_T_69 = cat(_immrvc_T_68, _immrvc_T_67) @[build/NutShell.fir.opt.mlir 4788:23]
    node _immrvc_T_70 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 4790:23]
    node _immrvc_T_71 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 4792:23]
    node _immrvc_T_72 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4794:23]
    node _immrvc_T_73 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 4796:23]
    node _immrvc_T_74 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4798:23]
    node immrvc_lo_hi_2 = cat(_immrvc_T_73, _immrvc_T_74) @[build/NutShell.fir.opt.mlir 4800:25]
    node immrvc_lo_6 = cat(immrvc_lo_hi_2, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 4803:22]
    node immrvc_hi_hi_2 = cat(_immrvc_T_70, _immrvc_T_71) @[build/NutShell.fir.opt.mlir 4805:25]
    node immrvc_hi_11 = cat(immrvc_hi_hi_2, _immrvc_T_72) @[build/NutShell.fir.opt.mlir 4807:23]
    node _immrvc_T_75 = cat(immrvc_hi_11, immrvc_lo_6) @[build/NutShell.fir.opt.mlir 4809:23]
    node immrvc_signBit_5 = bits(_immrvc_T_75, 9, 9) @[build/NutShell.fir.opt.mlir 4811:27]
    node _immrvc_T_76 = mux(immrvc_signBit_5, UInt<54>(18014398509481983), UInt<54>(0)) @[build/NutShell.fir.opt.mlir 4815:23]
    node _immrvc_T_77 = cat(_immrvc_T_76, _immrvc_T_75) @[build/NutShell.fir.opt.mlir 4817:23]
    node _immrvc_T_78 = bits(io.in.bits.instr, 10, 7) @[build/NutShell.fir.opt.mlir 4819:23]
    node _immrvc_T_79 = bits(io.in.bits.instr, 12, 11) @[build/NutShell.fir.opt.mlir 4821:23]
    node _immrvc_T_80 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 4823:23]
    node _immrvc_T_81 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 4825:23]
    node immrvc_lo_7 = cat(_immrvc_T_81, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 4827:22]
    node immrvc_hi_hi_3 = cat(_immrvc_T_78, _immrvc_T_79) @[build/NutShell.fir.opt.mlir 4829:25]
    node immrvc_hi_12 = cat(immrvc_hi_hi_3, _immrvc_T_80) @[build/NutShell.fir.opt.mlir 4831:23]
    node _immrvc_T_82 = cat(immrvc_hi_12, immrvc_lo_7) @[build/NutShell.fir.opt.mlir 4833:23]
    node _immrvc_T_83 = cat(UInt<54>(0), _immrvc_T_82) @[build/NutShell.fir.opt.mlir 4835:23]
    node _immrvc_T_84 = eq(UInt<5>(16), rvcImmType) @[build/NutShell.fir.opt.mlir 4837:23]
    node _immrvc_T_85 = eq(UInt<1>(0), rvcImmType) @[build/NutShell.fir.opt.mlir 4839:23]
    node _immrvc_T_86 = eq(UInt<1>(1), rvcImmType) @[build/NutShell.fir.opt.mlir 4841:23]
    node _immrvc_T_87 = eq(UInt<2>(2), rvcImmType) @[build/NutShell.fir.opt.mlir 4843:23]
    node _immrvc_T_88 = eq(UInt<2>(3), rvcImmType) @[build/NutShell.fir.opt.mlir 4845:23]
    node _immrvc_T_89 = eq(UInt<3>(4), rvcImmType) @[build/NutShell.fir.opt.mlir 4847:23]
    node _immrvc_T_90 = eq(UInt<3>(5), rvcImmType) @[build/NutShell.fir.opt.mlir 4849:23]
    node _immrvc_T_91 = eq(UInt<3>(6), rvcImmType) @[build/NutShell.fir.opt.mlir 4851:23]
    node _immrvc_T_92 = eq(UInt<3>(7), rvcImmType) @[build/NutShell.fir.opt.mlir 4853:23]
    node _immrvc_T_93 = eq(UInt<4>(8), rvcImmType) @[build/NutShell.fir.opt.mlir 4855:23]
    node _immrvc_T_94 = eq(UInt<4>(9), rvcImmType) @[build/NutShell.fir.opt.mlir 4857:23]
    node _immrvc_T_95 = eq(UInt<4>(10), rvcImmType) @[build/NutShell.fir.opt.mlir 4859:23]
    node _immrvc_T_96 = eq(UInt<4>(11), rvcImmType) @[build/NutShell.fir.opt.mlir 4861:23]
    node _immrvc_T_97 = eq(UInt<4>(12), rvcImmType) @[build/NutShell.fir.opt.mlir 4863:23]
    node _immrvc_T_98 = eq(UInt<4>(13), rvcImmType) @[build/NutShell.fir.opt.mlir 4865:23]
    node _immrvc_T_99 = eq(UInt<4>(14), rvcImmType) @[build/NutShell.fir.opt.mlir 4867:23]
    node _immrvc_T_100 = eq(UInt<4>(15), rvcImmType) @[build/NutShell.fir.opt.mlir 4869:24]
    node _immrvc_T_101 = mux(_immrvc_T_84, UInt<64>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4872:24]
    node _immrvc_T_102 = mux(_immrvc_T_85, _immrvc_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4874:24]
    node _immrvc_T_103 = mux(_immrvc_T_86, _immrvc_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4876:24]
    node _immrvc_T_104 = mux(_immrvc_T_87, _immrvc_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4878:24]
    node _immrvc_T_105 = mux(_immrvc_T_88, _immrvc_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4880:24]
    node _immrvc_T_106 = mux(_immrvc_T_89, _immrvc_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4882:24]
    node _immrvc_T_107 = mux(_immrvc_T_90, _immrvc_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4884:24]
    node _immrvc_T_108 = mux(_immrvc_T_91, _immrvc_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4886:24]
    node _immrvc_T_109 = mux(_immrvc_T_92, _immrvc_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4888:24]
    node _immrvc_T_110 = mux(_immrvc_T_93, _immrvc_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4890:24]
    node _immrvc_T_111 = mux(_immrvc_T_94, _immrvc_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4892:24]
    node _immrvc_T_112 = mux(_immrvc_T_95, _immrvc_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4894:24]
    node _immrvc_T_113 = mux(_immrvc_T_96, _immrvc_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4896:24]
    node _immrvc_T_114 = mux(_immrvc_T_97, _immrvc_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4898:24]
    node _immrvc_T_115 = mux(_immrvc_T_98, _immrvc_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4900:24]
    node _immrvc_T_116 = mux(_immrvc_T_99, _immrvc_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4902:24]
    node _immrvc_T_117 = mux(_immrvc_T_100, UInt<64>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4905:24]
    node _immrvc_T_118 = or(_immrvc_T_101, _immrvc_T_102) @[build/NutShell.fir.opt.mlir 4907:24]
    node _immrvc_T_119 = or(_immrvc_T_118, _immrvc_T_103) @[build/NutShell.fir.opt.mlir 4909:24]
    node _immrvc_T_120 = or(_immrvc_T_119, _immrvc_T_104) @[build/NutShell.fir.opt.mlir 4911:24]
    node _immrvc_T_121 = or(_immrvc_T_120, _immrvc_T_105) @[build/NutShell.fir.opt.mlir 4913:24]
    node _immrvc_T_122 = or(_immrvc_T_121, _immrvc_T_106) @[build/NutShell.fir.opt.mlir 4915:24]
    node _immrvc_T_123 = or(_immrvc_T_122, _immrvc_T_107) @[build/NutShell.fir.opt.mlir 4917:24]
    node _immrvc_T_124 = or(_immrvc_T_123, _immrvc_T_108) @[build/NutShell.fir.opt.mlir 4919:24]
    node _immrvc_T_125 = or(_immrvc_T_124, _immrvc_T_109) @[build/NutShell.fir.opt.mlir 4921:24]
    node _immrvc_T_126 = or(_immrvc_T_125, _immrvc_T_110) @[build/NutShell.fir.opt.mlir 4923:24]
    node _immrvc_T_127 = or(_immrvc_T_126, _immrvc_T_111) @[build/NutShell.fir.opt.mlir 4925:24]
    node _immrvc_T_128 = or(_immrvc_T_127, _immrvc_T_112) @[build/NutShell.fir.opt.mlir 4927:24]
    node _immrvc_T_129 = or(_immrvc_T_128, _immrvc_T_113) @[build/NutShell.fir.opt.mlir 4929:24]
    node _immrvc_T_130 = or(_immrvc_T_129, _immrvc_T_114) @[build/NutShell.fir.opt.mlir 4931:24]
    node _immrvc_T_131 = or(_immrvc_T_130, _immrvc_T_115) @[build/NutShell.fir.opt.mlir 4933:24]
    node _immrvc_T_132 = or(_immrvc_T_131, _immrvc_T_116) @[build/NutShell.fir.opt.mlir 4935:24]
    node _immrvc_T_133 = or(_immrvc_T_132, _immrvc_T_117) @[build/NutShell.fir.opt.mlir 4937:24]
    wire immrvc : UInt<64> @[build/NutShell.fir.opt.mlir 4938:17]
    connect immrvc, _immrvc_T_133 @[build/NutShell.fir.opt.mlir 4939:7]
    node _io_out_bits_data_imm_T = mux(isRVC, immrvc, imm) @[build/NutShell.fir.opt.mlir 4941:34]
    connect io.out.bits.data.imm, _io_out_bits_data_imm_T @[build/NutShell.fir.opt.mlir 4942:7]
    node _T_200 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 4944:17]
    when _T_200 : @[build/NutShell.fir.opt.mlir 4947:7]
      node _T_201 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4949:19]
      node _T_202 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4951:19]
      node _T_203 = or(_T_201, _T_202) @[build/NutShell.fir.opt.mlir 4953:19]
      node _T_204 = eq(fuOpType, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 4955:19]
      node _T_205 = and(_T_203, _T_204) @[build/NutShell.fir.opt.mlir 4957:19]
      when _T_205 : @[build/NutShell.fir.opt.mlir 4958:9]
        connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 4960:11]
      node _T_206 = eq(fuOpType, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 4963:19]
      when _T_206 : @[build/NutShell.fir.opt.mlir 4964:9]
        node _T_207 = eq(rfSrc1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4966:21]
        node _T_208 = eq(rfSrc1, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4968:21]
        node _T_209 = or(_T_207, _T_208) @[build/NutShell.fir.opt.mlir 4970:21]
        when _T_209 : @[build/NutShell.fir.opt.mlir 4971:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(94) @[build/NutShell.fir.opt.mlir 4973:13]
        node _T_210 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 4976:21]
        node _T_211 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 4978:21]
        node _T_212 = or(_T_210, _T_211) @[build/NutShell.fir.opt.mlir 4980:21]
        when _T_212 : @[build/NutShell.fir.opt.mlir 4981:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 4983:13]
    node _io_out_bits_ctrl_src1Type_T = bits(io.in.bits.instr, 6, 0) @[build/NutShell.fir.opt.mlir 4988:39]
    node _io_out_bits_ctrl_src1Type_T_1 = eq(_io_out_bits_ctrl_src1Type_T, UInt<6>(55)) @[build/NutShell.fir.opt.mlir 4990:41]
    node _io_out_bits_ctrl_src1Type_T_2 = mux(_io_out_bits_ctrl_src1Type_T_1, UInt<1>(0), src1Type) @[build/NutShell.fir.opt.mlir 4992:41]
    connect io.out.bits.ctrl.src1Type, _io_out_bits_ctrl_src1Type_T_2 @[build/NutShell.fir.opt.mlir 4993:7]
    connect io.out.bits.ctrl.src2Type, src2Type @[build/NutShell.fir.opt.mlir 4994:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T = bits(io.in.bits.instr, 31, 0) @[build/NutShell.fir.opt.mlir 4996:44]
    node _io_out_bits_ctrl_isNutCoreTrap_T_1 = and(_io_out_bits_ctrl_isNutCoreTrap_T, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 4998:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_2 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_1) @[build/NutShell.fir.opt.mlir 5000:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_3 = and(_io_out_bits_ctrl_isNutCoreTrap_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 5002:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_3 @[build/NutShell.fir.opt.mlir 5003:7]
    node _io_out_bits_ctrl_noSpecExec_T = eq(io.out.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 5005:41]
    connect io.out.bits.ctrl.noSpecExec, _io_out_bits_ctrl_noSpecExec_T @[build/NutShell.fir.opt.mlir 5006:7]
    node _io_out_bits_ctrl_isBlocked_T = eq(io.out.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 5008:40]
    node _io_out_bits_ctrl_isBlocked_T_1 = bits(io.out.bits.ctrl.fuOpType, 5, 5) @[build/NutShell.fir.opt.mlir 5010:42]
    node _io_out_bits_ctrl_isBlocked_T_2 = and(_io_out_bits_ctrl_isBlocked_T, _io_out_bits_ctrl_isBlocked_T_1) @[build/NutShell.fir.opt.mlir 5012:42]
    node _io_out_bits_ctrl_isBlocked_T_3 = eq(io.out.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 5014:42]
    node _io_out_bits_ctrl_isBlocked_T_4 = or(_io_out_bits_ctrl_isBlocked_T_2, _io_out_bits_ctrl_isBlocked_T_3) @[build/NutShell.fir.opt.mlir 5016:42]
    connect io.out.bits.ctrl.isBlocked, _io_out_bits_ctrl_isBlocked_T_4 @[build/NutShell.fir.opt.mlir 5017:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 5018:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5020:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 5022:27]
    node _io_in_ready_T_2 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5024:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 5026:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T, _io_in_ready_T_3) @[build/NutShell.fir.opt.mlir 5028:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 5029:7]
    connect io.out.bits.cf, io.in.bits @[build/NutShell.fir.opt.mlir 5030:7]
    node _T_213 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 5032:17]
    inst LogPerfHelper of LogPerfHelper_3 @[build/NutShell.fir.opt.mlir 5033:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 5034:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 5039:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 5040:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 5041:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 5042:7]
    node _T_214 = and(_T_213, c_control.logEnable) @[build/NutShell.fir.opt.mlir 5044:17]
    when _T_214 : @[build/NutShell.fir.opt.mlir 5045:7]
      node _T_215 = asUInt(reset) @[build/NutShell.fir.opt.mlir 5047:19]
      node _T_216 = eq(_T_215, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5049:19]
      when _T_216 : @[build/NutShell.fir.opt.mlir 5050:9]
        skip @[build/NutShell.fir.opt.mlir 5051:11]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 5054:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5056:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 5057:9]
        skip @[build/NutShell.fir.opt.mlir 5058:11]
    wire intrVec : UInt<12> @[build/NutShell.fir.opt.mlir 5061:18]
    connect intrVec, UInt<12>(0) @[build/NutShell.fir.opt.mlir 5063:7]
    node _T_219 = bits(intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 5065:17]
    node _T_220 = bits(intrVec, 1, 1) @[build/NutShell.fir.opt.mlir 5067:17]
    node _T_221 = bits(intrVec, 2, 2) @[build/NutShell.fir.opt.mlir 5069:17]
    node _T_222 = bits(intrVec, 3, 3) @[build/NutShell.fir.opt.mlir 5071:17]
    node _T_223 = bits(intrVec, 4, 4) @[build/NutShell.fir.opt.mlir 5073:17]
    node _T_224 = bits(intrVec, 5, 5) @[build/NutShell.fir.opt.mlir 5075:17]
    node _T_225 = bits(intrVec, 6, 6) @[build/NutShell.fir.opt.mlir 5077:17]
    node _T_226 = bits(intrVec, 7, 7) @[build/NutShell.fir.opt.mlir 5079:17]
    node _T_227 = bits(intrVec, 8, 8) @[build/NutShell.fir.opt.mlir 5081:17]
    node _T_228 = bits(intrVec, 9, 9) @[build/NutShell.fir.opt.mlir 5083:17]
    node _T_229 = bits(intrVec, 10, 10) @[build/NutShell.fir.opt.mlir 5085:17]
    node _T_230 = bits(intrVec, 11, 11) @[build/NutShell.fir.opt.mlir 5087:17]
    connect io.out.bits.cf.intrVec[0], _T_219 @[build/NutShell.fir.opt.mlir 5088:7]
    connect io.out.bits.cf.intrVec[1], _T_220 @[build/NutShell.fir.opt.mlir 5089:7]
    connect io.out.bits.cf.intrVec[2], _T_221 @[build/NutShell.fir.opt.mlir 5090:7]
    connect io.out.bits.cf.intrVec[3], _T_222 @[build/NutShell.fir.opt.mlir 5091:7]
    connect io.out.bits.cf.intrVec[4], _T_223 @[build/NutShell.fir.opt.mlir 5092:7]
    connect io.out.bits.cf.intrVec[5], _T_224 @[build/NutShell.fir.opt.mlir 5093:7]
    connect io.out.bits.cf.intrVec[6], _T_225 @[build/NutShell.fir.opt.mlir 5094:7]
    connect io.out.bits.cf.intrVec[7], _T_226 @[build/NutShell.fir.opt.mlir 5095:7]
    connect io.out.bits.cf.intrVec[8], _T_227 @[build/NutShell.fir.opt.mlir 5096:7]
    connect io.out.bits.cf.intrVec[9], _T_228 @[build/NutShell.fir.opt.mlir 5097:7]
    connect io.out.bits.cf.intrVec[10], _T_229 @[build/NutShell.fir.opt.mlir 5098:7]
    connect io.out.bits.cf.intrVec[11], _T_230 @[build/NutShell.fir.opt.mlir 5099:7]
    node _hasIntr_T = orr(intrVec) @[build/NutShell.fir.opt.mlir 5101:21]
    connect hasIntr, _hasIntr_T @[build/NutShell.fir.opt.mlir 5102:7]
    wire vmEnable : UInt<1> @[build/NutShell.fir.opt.mlir 5103:19]
    connect vmEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 5105:7]
    connect io.out.bits.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5107:7]
    connect io.out.bits.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5109:7]
    connect io.out.bits.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5111:7]
    connect io.out.bits.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5113:7]
    connect io.out.bits.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5115:7]
    connect io.out.bits.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5117:7]
    connect io.out.bits.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5119:7]
    connect io.out.bits.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5121:7]
    connect io.out.bits.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5123:7]
    connect io.out.bits.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5125:7]
    connect io.out.bits.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5127:7]
    connect io.out.bits.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5129:7]
    connect io.out.bits.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5131:7]
    connect io.out.bits.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5133:7]
    connect io.out.bits.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5135:7]
    connect io.out.bits.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 5137:7]
    node _io_out_bits_cf_exceptionVec_2_T = eq(instrType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5139:43]
    node _io_out_bits_cf_exceptionVec_2_T_1 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5141:45]
    node _io_out_bits_cf_exceptionVec_2_T_2 = and(_io_out_bits_cf_exceptionVec_2_T, _io_out_bits_cf_exceptionVec_2_T_1) @[build/NutShell.fir.opt.mlir 5143:45]
    node _io_out_bits_cf_exceptionVec_2_T_3 = and(_io_out_bits_cf_exceptionVec_2_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 5145:45]
    connect io.out.bits.cf.exceptionVec[2], _io_out_bits_cf_exceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 5146:7]
    connect io.out.bits.cf.exceptionVec[12], io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 5147:7]
    node _io_out_bits_cf_exceptionVec_1_T = bits(io.in.bits.pc, 38, 32) @[build/NutShell.fir.opt.mlir 5149:43]
    node _io_out_bits_cf_exceptionVec_1_T_1 = orr(_io_out_bits_cf_exceptionVec_1_T) @[build/NutShell.fir.opt.mlir 5151:45]
    node _io_out_bits_cf_exceptionVec_1_T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5153:45]
    node _io_out_bits_cf_exceptionVec_1_T_3 = and(_io_out_bits_cf_exceptionVec_1_T_1, _io_out_bits_cf_exceptionVec_1_T_2) @[build/NutShell.fir.opt.mlir 5155:45]
    connect io.out.bits.cf.exceptionVec[1], _io_out_bits_cf_exceptionVec_1_T_3 @[build/NutShell.fir.opt.mlir 5156:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5158:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_5 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_4) @[build/NutShell.fir.opt.mlir 5160:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_6 = and(_io_out_bits_ctrl_isNutCoreTrap_T_5, io.in.valid) @[build/NutShell.fir.opt.mlir 5162:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_6 @[build/NutShell.fir.opt.mlir 5163:7]
    node _io_isWFI_T = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5165:22]
    node _io_isWFI_T_1 = eq(UInt<29>(273678451), _io_isWFI_T) @[build/NutShell.fir.opt.mlir 5167:24]
    node _io_isWFI_T_2 = and(_io_isWFI_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 5169:24]
    connect io.isWFI, _io_isWFI_T_2 @[build/NutShell.fir.opt.mlir 5170:7]
    node _io_isBranch_T = eq(UInt<7>(88), fuOpType) @[build/NutShell.fir.opt.mlir 5172:25]
    node _io_isBranch_T_1 = eq(UInt<7>(90), fuOpType) @[build/NutShell.fir.opt.mlir 5174:27]
    node _io_isBranch_T_2 = eq(UInt<5>(16), fuOpType) @[build/NutShell.fir.opt.mlir 5176:27]
    node _io_isBranch_T_3 = eq(UInt<5>(17), fuOpType) @[build/NutShell.fir.opt.mlir 5178:27]
    node _io_isBranch_T_4 = eq(UInt<5>(20), fuOpType) @[build/NutShell.fir.opt.mlir 5180:27]
    node _io_isBranch_T_5 = eq(UInt<5>(21), fuOpType) @[build/NutShell.fir.opt.mlir 5182:27]
    node _io_isBranch_T_6 = eq(UInt<5>(22), fuOpType) @[build/NutShell.fir.opt.mlir 5184:27]
    node _io_isBranch_T_7 = eq(UInt<5>(23), fuOpType) @[build/NutShell.fir.opt.mlir 5186:27]
    wire _io_isBranch_WIRE : UInt<1>[8] @[build/NutShell.fir.opt.mlir 5187:28]
    connect _io_isBranch_WIRE[0], _io_isBranch_T @[build/NutShell.fir.opt.mlir 5196:7]
    connect _io_isBranch_WIRE[1], _io_isBranch_T_1 @[build/NutShell.fir.opt.mlir 5197:7]
    connect _io_isBranch_WIRE[2], _io_isBranch_T_2 @[build/NutShell.fir.opt.mlir 5198:7]
    connect _io_isBranch_WIRE[3], _io_isBranch_T_3 @[build/NutShell.fir.opt.mlir 5199:7]
    connect _io_isBranch_WIRE[4], _io_isBranch_T_4 @[build/NutShell.fir.opt.mlir 5200:7]
    connect _io_isBranch_WIRE[5], _io_isBranch_T_5 @[build/NutShell.fir.opt.mlir 5201:7]
    connect _io_isBranch_WIRE[6], _io_isBranch_T_6 @[build/NutShell.fir.opt.mlir 5202:7]
    connect _io_isBranch_WIRE[7], _io_isBranch_T_7 @[build/NutShell.fir.opt.mlir 5203:7]
    node io_isBranch_lo_lo = cat(_io_isBranch_WIRE[1], _io_isBranch_WIRE[0]) @[build/NutShell.fir.opt.mlir 5205:28]
    node io_isBranch_lo_hi = cat(_io_isBranch_WIRE[3], _io_isBranch_WIRE[2]) @[build/NutShell.fir.opt.mlir 5207:28]
    node io_isBranch_lo = cat(io_isBranch_lo_hi, io_isBranch_lo_lo) @[build/NutShell.fir.opt.mlir 5209:25]
    node io_isBranch_hi_lo = cat(_io_isBranch_WIRE[5], _io_isBranch_WIRE[4]) @[build/NutShell.fir.opt.mlir 5211:28]
    node io_isBranch_hi_hi = cat(_io_isBranch_WIRE[7], _io_isBranch_WIRE[6]) @[build/NutShell.fir.opt.mlir 5213:28]
    node io_isBranch_hi = cat(io_isBranch_hi_hi, io_isBranch_hi_lo) @[build/NutShell.fir.opt.mlir 5215:25]
    node _io_isBranch_T_8 = cat(io_isBranch_hi, io_isBranch_lo) @[build/NutShell.fir.opt.mlir 5217:27]
    node _io_isBranch_T_9 = orr(_io_isBranch_T_8) @[build/NutShell.fir.opt.mlir 5219:27]
    node _io_isBranch_T_10 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5221:28]
    node _io_isBranch_T_11 = and(_io_isBranch_T_9, _io_isBranch_T_10) @[build/NutShell.fir.opt.mlir 5223:28]
    connect io.isBranch, _io_isBranch_T_11 @[build/NutShell.fir.opt.mlir 5224:7]
    connect intrVec, intrVec__bore @[build/NutShell.fir.opt.mlir 5225:7]
    connect vmEnable, vmEnable__bore @[build/NutShell.fir.opt.mlir 5226:7]

  extmodule LogPerfHelper_4 : @[build/NutShell.fir.opt.mlir 5228:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 5228:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 5228:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 5228:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 5228:140]
    defname = LogPerfHelper

  module Decoder_1 : @[build/NutShell.fir.opt.mlir 5229:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 5229:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 5229:67]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, isWFI : UInt<1>, isBranch : UInt<1> } @[build/NutShell.fir.opt.mlir 5229:94]
    input intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 5229:1208]
    input vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 5229:1245]

    wire hasIntr : UInt<1> @[build/NutShell.fir.opt.mlir 5305:18]
    node _decodeList_T = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5308:24]
    node _decodeList_T_1 = eq(UInt<5>(19), _decodeList_T) @[build/NutShell.fir.opt.mlir 5311:26]
    node _decodeList_T_2 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5314:26]
    node _decodeList_T_3 = eq(UInt<13>(4115), _decodeList_T_2) @[build/NutShell.fir.opt.mlir 5317:26]
    node _decodeList_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5319:26]
    node _decodeList_T_5 = eq(UInt<14>(8211), _decodeList_T_4) @[build/NutShell.fir.opt.mlir 5322:26]
    node _decodeList_T_6 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5324:26]
    node _decodeList_T_7 = eq(UInt<14>(12307), _decodeList_T_6) @[build/NutShell.fir.opt.mlir 5327:26]
    node _decodeList_T_8 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5329:26]
    node _decodeList_T_9 = eq(UInt<15>(16403), _decodeList_T_8) @[build/NutShell.fir.opt.mlir 5332:26]
    node _decodeList_T_10 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5334:27]
    node _decodeList_T_11 = eq(UInt<15>(20499), _decodeList_T_10) @[build/NutShell.fir.opt.mlir 5337:27]
    node _decodeList_T_12 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5339:27]
    node _decodeList_T_13 = eq(UInt<15>(24595), _decodeList_T_12) @[build/NutShell.fir.opt.mlir 5342:27]
    node _decodeList_T_14 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5344:27]
    node _decodeList_T_15 = eq(UInt<15>(28691), _decodeList_T_14) @[build/NutShell.fir.opt.mlir 5347:27]
    node _decodeList_T_16 = and(io.in.bits.instr, UInt<32>(4227887231)) @[build/NutShell.fir.opt.mlir 5349:27]
    node _decodeList_T_17 = eq(UInt<31>(1073762323), _decodeList_T_16) @[build/NutShell.fir.opt.mlir 5352:27]
    node _decodeList_T_18 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5355:27]
    node _decodeList_T_19 = eq(UInt<6>(51), _decodeList_T_18) @[build/NutShell.fir.opt.mlir 5358:27]
    node _decodeList_T_20 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5360:27]
    node _decodeList_T_21 = eq(UInt<13>(4147), _decodeList_T_20) @[build/NutShell.fir.opt.mlir 5363:27]
    node _decodeList_T_22 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5365:27]
    node _decodeList_T_23 = eq(UInt<14>(8243), _decodeList_T_22) @[build/NutShell.fir.opt.mlir 5368:27]
    node _decodeList_T_24 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5370:27]
    node _decodeList_T_25 = eq(UInt<14>(12339), _decodeList_T_24) @[build/NutShell.fir.opt.mlir 5373:27]
    node _decodeList_T_26 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5375:27]
    node _decodeList_T_27 = eq(UInt<15>(16435), _decodeList_T_26) @[build/NutShell.fir.opt.mlir 5378:27]
    node _decodeList_T_28 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5380:27]
    node _decodeList_T_29 = eq(UInt<15>(20531), _decodeList_T_28) @[build/NutShell.fir.opt.mlir 5383:27]
    node _decodeList_T_30 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5385:27]
    node _decodeList_T_31 = eq(UInt<15>(24627), _decodeList_T_30) @[build/NutShell.fir.opt.mlir 5388:27]
    node _decodeList_T_32 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5390:27]
    node _decodeList_T_33 = eq(UInt<15>(28723), _decodeList_T_32) @[build/NutShell.fir.opt.mlir 5393:27]
    node _decodeList_T_34 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5395:27]
    node _decodeList_T_35 = eq(UInt<31>(1073741875), _decodeList_T_34) @[build/NutShell.fir.opt.mlir 5398:27]
    node _decodeList_T_36 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5400:27]
    node _decodeList_T_37 = eq(UInt<31>(1073762355), _decodeList_T_36) @[build/NutShell.fir.opt.mlir 5403:27]
    node _decodeList_T_38 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5406:27]
    node _decodeList_T_39 = eq(UInt<5>(23), _decodeList_T_38) @[build/NutShell.fir.opt.mlir 5409:27]
    node _decodeList_T_40 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5411:27]
    node _decodeList_T_41 = eq(UInt<6>(55), _decodeList_T_40) @[build/NutShell.fir.opt.mlir 5414:27]
    node _decodeList_T_42 = and(io.in.bits.instr, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 5416:27]
    node _decodeList_T_43 = eq(UInt<7>(111), _decodeList_T_42) @[build/NutShell.fir.opt.mlir 5419:27]
    node _decodeList_T_44 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5421:27]
    node _decodeList_T_45 = eq(UInt<7>(103), _decodeList_T_44) @[build/NutShell.fir.opt.mlir 5424:27]
    node _decodeList_T_46 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5426:27]
    node _decodeList_T_47 = eq(UInt<7>(99), _decodeList_T_46) @[build/NutShell.fir.opt.mlir 5429:27]
    node _decodeList_T_48 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5431:27]
    node _decodeList_T_49 = eq(UInt<13>(4195), _decodeList_T_48) @[build/NutShell.fir.opt.mlir 5434:27]
    node _decodeList_T_50 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5436:27]
    node _decodeList_T_51 = eq(UInt<15>(16483), _decodeList_T_50) @[build/NutShell.fir.opt.mlir 5439:27]
    node _decodeList_T_52 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5441:27]
    node _decodeList_T_53 = eq(UInt<15>(20579), _decodeList_T_52) @[build/NutShell.fir.opt.mlir 5444:27]
    node _decodeList_T_54 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5446:27]
    node _decodeList_T_55 = eq(UInt<15>(24675), _decodeList_T_54) @[build/NutShell.fir.opt.mlir 5449:27]
    node _decodeList_T_56 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5451:27]
    node _decodeList_T_57 = eq(UInt<15>(28771), _decodeList_T_56) @[build/NutShell.fir.opt.mlir 5454:27]
    node _decodeList_T_58 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5456:27]
    node _decodeList_T_59 = eq(UInt<2>(3), _decodeList_T_58) @[build/NutShell.fir.opt.mlir 5459:27]
    node _decodeList_T_60 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5461:27]
    node _decodeList_T_61 = eq(UInt<13>(4099), _decodeList_T_60) @[build/NutShell.fir.opt.mlir 5464:27]
    node _decodeList_T_62 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5466:27]
    node _decodeList_T_63 = eq(UInt<14>(8195), _decodeList_T_62) @[build/NutShell.fir.opt.mlir 5469:27]
    node _decodeList_T_64 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5471:27]
    node _decodeList_T_65 = eq(UInt<15>(16387), _decodeList_T_64) @[build/NutShell.fir.opt.mlir 5474:27]
    node _decodeList_T_66 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5476:27]
    node _decodeList_T_67 = eq(UInt<15>(20483), _decodeList_T_66) @[build/NutShell.fir.opt.mlir 5479:27]
    node _decodeList_T_68 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5481:27]
    node _decodeList_T_69 = eq(UInt<6>(35), _decodeList_T_68) @[build/NutShell.fir.opt.mlir 5484:27]
    node _decodeList_T_70 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5486:27]
    node _decodeList_T_71 = eq(UInt<13>(4131), _decodeList_T_70) @[build/NutShell.fir.opt.mlir 5489:27]
    node _decodeList_T_72 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5491:27]
    node _decodeList_T_73 = eq(UInt<14>(8227), _decodeList_T_72) @[build/NutShell.fir.opt.mlir 5494:27]
    node _decodeList_T_74 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5496:27]
    node _decodeList_T_75 = eq(UInt<5>(27), _decodeList_T_74) @[build/NutShell.fir.opt.mlir 5499:27]
    node _decodeList_T_76 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5501:27]
    node _decodeList_T_77 = eq(UInt<13>(4123), _decodeList_T_76) @[build/NutShell.fir.opt.mlir 5504:27]
    node _decodeList_T_78 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5506:27]
    node _decodeList_T_79 = eq(UInt<15>(20507), _decodeList_T_78) @[build/NutShell.fir.opt.mlir 5509:27]
    node _decodeList_T_80 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5511:27]
    node _decodeList_T_81 = eq(UInt<31>(1073762331), _decodeList_T_80) @[build/NutShell.fir.opt.mlir 5514:27]
    node _decodeList_T_82 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5516:27]
    node _decodeList_T_83 = eq(UInt<13>(4155), _decodeList_T_82) @[build/NutShell.fir.opt.mlir 5519:27]
    node _decodeList_T_84 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5521:27]
    node _decodeList_T_85 = eq(UInt<15>(20539), _decodeList_T_84) @[build/NutShell.fir.opt.mlir 5524:27]
    node _decodeList_T_86 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5526:27]
    node _decodeList_T_87 = eq(UInt<31>(1073762363), _decodeList_T_86) @[build/NutShell.fir.opt.mlir 5529:27]
    node _decodeList_T_88 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5531:27]
    node _decodeList_T_89 = eq(UInt<6>(59), _decodeList_T_88) @[build/NutShell.fir.opt.mlir 5534:27]
    node _decodeList_T_90 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5536:27]
    node _decodeList_T_91 = eq(UInt<31>(1073741883), _decodeList_T_90) @[build/NutShell.fir.opt.mlir 5539:27]
    node _decodeList_T_92 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5541:27]
    node _decodeList_T_93 = eq(UInt<15>(24579), _decodeList_T_92) @[build/NutShell.fir.opt.mlir 5544:27]
    node _decodeList_T_94 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5546:27]
    node _decodeList_T_95 = eq(UInt<14>(12291), _decodeList_T_94) @[build/NutShell.fir.opt.mlir 5549:27]
    node _decodeList_T_96 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5551:27]
    node _decodeList_T_97 = eq(UInt<14>(12323), _decodeList_T_96) @[build/NutShell.fir.opt.mlir 5554:27]
    node _decodeList_T_98 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5556:27]
    node _decodeList_T_99 = eq(UInt<7>(107), _decodeList_T_98) @[build/NutShell.fir.opt.mlir 5559:27]
    node _decodeList_T_100 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5561:28]
    node _decodeList_T_101 = eq(UInt<26>(33554483), _decodeList_T_100) @[build/NutShell.fir.opt.mlir 5564:28]
    node _decodeList_T_102 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5566:28]
    node _decodeList_T_103 = eq(UInt<26>(33558579), _decodeList_T_102) @[build/NutShell.fir.opt.mlir 5569:28]
    node _decodeList_T_104 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5571:28]
    node _decodeList_T_105 = eq(UInt<26>(33562675), _decodeList_T_104) @[build/NutShell.fir.opt.mlir 5574:28]
    node _decodeList_T_106 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5576:28]
    node _decodeList_T_107 = eq(UInt<26>(33566771), _decodeList_T_106) @[build/NutShell.fir.opt.mlir 5579:28]
    node _decodeList_T_108 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5581:28]
    node _decodeList_T_109 = eq(UInt<26>(33570867), _decodeList_T_108) @[build/NutShell.fir.opt.mlir 5584:28]
    node _decodeList_T_110 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5586:28]
    node _decodeList_T_111 = eq(UInt<26>(33574963), _decodeList_T_110) @[build/NutShell.fir.opt.mlir 5589:28]
    node _decodeList_T_112 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5591:28]
    node _decodeList_T_113 = eq(UInt<26>(33579059), _decodeList_T_112) @[build/NutShell.fir.opt.mlir 5594:28]
    node _decodeList_T_114 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5596:28]
    node _decodeList_T_115 = eq(UInt<26>(33583155), _decodeList_T_114) @[build/NutShell.fir.opt.mlir 5599:28]
    node _decodeList_T_116 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5601:28]
    node _decodeList_T_117 = eq(UInt<26>(33554491), _decodeList_T_116) @[build/NutShell.fir.opt.mlir 5604:28]
    node _decodeList_T_118 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5606:28]
    node _decodeList_T_119 = eq(UInt<26>(33570875), _decodeList_T_118) @[build/NutShell.fir.opt.mlir 5609:28]
    node _decodeList_T_120 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5611:28]
    node _decodeList_T_121 = eq(UInt<26>(33574971), _decodeList_T_120) @[build/NutShell.fir.opt.mlir 5614:28]
    node _decodeList_T_122 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5616:28]
    node _decodeList_T_123 = eq(UInt<26>(33579067), _decodeList_T_122) @[build/NutShell.fir.opt.mlir 5619:28]
    node _decodeList_T_124 = and(io.in.bits.instr, UInt<32>(4261441663)) @[build/NutShell.fir.opt.mlir 5621:28]
    node _decodeList_T_125 = eq(UInt<26>(33583163), _decodeList_T_124) @[build/NutShell.fir.opt.mlir 5624:28]
    node _decodeList_T_126 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5627:28]
    node _decodeList_T_127 = eq(UInt<1>(0), _decodeList_T_126) @[build/NutShell.fir.opt.mlir 5630:28]
    node _decodeList_T_128 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5633:28]
    node _decodeList_T_129 = eq(UInt<1>(0), _decodeList_T_128) @[build/NutShell.fir.opt.mlir 5635:28]
    node _decodeList_T_130 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5637:28]
    node _decodeList_T_131 = eq(UInt<15>(16384), _decodeList_T_130) @[build/NutShell.fir.opt.mlir 5640:28]
    node _decodeList_T_132 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5642:28]
    node _decodeList_T_133 = eq(UInt<15>(24576), _decodeList_T_132) @[build/NutShell.fir.opt.mlir 5645:28]
    node _decodeList_T_134 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5647:28]
    node _decodeList_T_135 = eq(UInt<16>(49152), _decodeList_T_134) @[build/NutShell.fir.opt.mlir 5650:28]
    node _decodeList_T_136 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5652:28]
    node _decodeList_T_137 = eq(UInt<16>(57344), _decodeList_T_136) @[build/NutShell.fir.opt.mlir 5655:28]
    node _decodeList_T_138 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 5658:28]
    node _decodeList_T_139 = eq(UInt<1>(1), _decodeList_T_138) @[build/NutShell.fir.opt.mlir 5661:28]
    node _decodeList_T_140 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5663:28]
    node _decodeList_T_141 = eq(UInt<1>(1), _decodeList_T_140) @[build/NutShell.fir.opt.mlir 5665:28]
    node _decodeList_T_142 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5667:28]
    node _decodeList_T_143 = eq(UInt<14>(8193), _decodeList_T_142) @[build/NutShell.fir.opt.mlir 5670:28]
    node _decodeList_T_144 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5672:28]
    node _decodeList_T_145 = eq(UInt<15>(16385), _decodeList_T_144) @[build/NutShell.fir.opt.mlir 5675:28]
    node _decodeList_T_146 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 5677:28]
    node _decodeList_T_147 = eq(UInt<15>(24833), _decodeList_T_146) @[build/NutShell.fir.opt.mlir 5680:28]
    node _decodeList_T_148 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5682:28]
    node _decodeList_T_149 = eq(UInt<15>(24577), _decodeList_T_148) @[build/NutShell.fir.opt.mlir 5685:28]
    node _decodeList_T_150 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5688:28]
    node _decodeList_T_151 = eq(UInt<16>(32769), _decodeList_T_150) @[build/NutShell.fir.opt.mlir 5691:28]
    node _decodeList_T_152 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5693:28]
    node _decodeList_T_153 = eq(UInt<16>(33793), _decodeList_T_152) @[build/NutShell.fir.opt.mlir 5696:28]
    node _decodeList_T_154 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 5698:28]
    node _decodeList_T_155 = eq(UInt<16>(34817), _decodeList_T_154) @[build/NutShell.fir.opt.mlir 5701:28]
    node _decodeList_T_156 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5704:28]
    node _decodeList_T_157 = eq(UInt<16>(35841), _decodeList_T_156) @[build/NutShell.fir.opt.mlir 5707:28]
    node _decodeList_T_158 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5709:28]
    node _decodeList_T_159 = eq(UInt<16>(35873), _decodeList_T_158) @[build/NutShell.fir.opt.mlir 5712:28]
    node _decodeList_T_160 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5714:28]
    node _decodeList_T_161 = eq(UInt<16>(35905), _decodeList_T_160) @[build/NutShell.fir.opt.mlir 5717:28]
    node _decodeList_T_162 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5719:28]
    node _decodeList_T_163 = eq(UInt<16>(35937), _decodeList_T_162) @[build/NutShell.fir.opt.mlir 5722:28]
    node _decodeList_T_164 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5724:28]
    node _decodeList_T_165 = eq(UInt<16>(39937), _decodeList_T_164) @[build/NutShell.fir.opt.mlir 5727:28]
    node _decodeList_T_166 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 5729:28]
    node _decodeList_T_167 = eq(UInt<16>(39969), _decodeList_T_166) @[build/NutShell.fir.opt.mlir 5732:28]
    node _decodeList_T_168 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5734:28]
    node _decodeList_T_169 = eq(UInt<16>(40961), _decodeList_T_168) @[build/NutShell.fir.opt.mlir 5737:28]
    node _decodeList_T_170 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5739:28]
    node _decodeList_T_171 = eq(UInt<16>(49153), _decodeList_T_170) @[build/NutShell.fir.opt.mlir 5742:28]
    node _decodeList_T_172 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5744:28]
    node _decodeList_T_173 = eq(UInt<16>(57345), _decodeList_T_172) @[build/NutShell.fir.opt.mlir 5747:28]
    node _decodeList_T_174 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5749:28]
    node _decodeList_T_175 = eq(UInt<2>(2), _decodeList_T_174) @[build/NutShell.fir.opt.mlir 5752:28]
    node _decodeList_T_176 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5754:28]
    node _decodeList_T_177 = eq(UInt<15>(16386), _decodeList_T_176) @[build/NutShell.fir.opt.mlir 5757:28]
    node _decodeList_T_178 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5759:28]
    node _decodeList_T_179 = eq(UInt<15>(24578), _decodeList_T_178) @[build/NutShell.fir.opt.mlir 5762:28]
    node _decodeList_T_180 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 5765:28]
    node _decodeList_T_181 = eq(UInt<16>(32770), _decodeList_T_180) @[build/NutShell.fir.opt.mlir 5768:28]
    node _decodeList_T_182 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 5771:28]
    node _decodeList_T_183 = eq(UInt<16>(32770), _decodeList_T_182) @[build/NutShell.fir.opt.mlir 5773:28]
    node _decodeList_T_184 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 5776:28]
    node _decodeList_T_185 = eq(UInt<16>(36866), _decodeList_T_184) @[build/NutShell.fir.opt.mlir 5779:28]
    node _decodeList_T_186 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 5781:28]
    node _decodeList_T_187 = eq(UInt<16>(36866), _decodeList_T_186) @[build/NutShell.fir.opt.mlir 5783:28]
    node _decodeList_T_188 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 5785:28]
    node _decodeList_T_189 = eq(UInt<16>(36866), _decodeList_T_188) @[build/NutShell.fir.opt.mlir 5787:28]
    node _decodeList_T_190 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5789:28]
    node _decodeList_T_191 = eq(UInt<16>(49154), _decodeList_T_190) @[build/NutShell.fir.opt.mlir 5792:28]
    node _decodeList_T_192 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 5794:28]
    node _decodeList_T_193 = eq(UInt<16>(57346), _decodeList_T_192) @[build/NutShell.fir.opt.mlir 5797:28]
    node _decodeList_T_194 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5799:28]
    node _decodeList_T_195 = eq(UInt<7>(115), _decodeList_T_194) @[build/NutShell.fir.opt.mlir 5802:28]
    node _decodeList_T_196 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5804:28]
    node _decodeList_T_197 = eq(UInt<21>(1048691), _decodeList_T_196) @[build/NutShell.fir.opt.mlir 5807:28]
    node _decodeList_T_198 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5809:28]
    node _decodeList_T_199 = eq(UInt<30>(807403635), _decodeList_T_198) @[build/NutShell.fir.opt.mlir 5812:28]
    node _decodeList_T_200 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5814:28]
    node _decodeList_T_201 = eq(UInt<4>(15), _decodeList_T_200) @[build/NutShell.fir.opt.mlir 5817:28]
    node _decodeList_T_202 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5819:28]
    node _decodeList_T_203 = eq(UInt<29>(273678451), _decodeList_T_202) @[build/NutShell.fir.opt.mlir 5822:28]
    node _decodeList_T_204 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5824:28]
    node _decodeList_T_205 = eq(UInt<29>(270532723), _decodeList_T_204) @[build/NutShell.fir.opt.mlir 5827:28]
    node _decodeList_T_206 = and(io.in.bits.instr, UInt<32>(4261445631)) @[build/NutShell.fir.opt.mlir 5830:28]
    node _decodeList_T_207 = eq(UInt<29>(301990003), _decodeList_T_206) @[build/NutShell.fir.opt.mlir 5833:28]
    node _decodeList_T_208 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 5836:28]
    node _decodeList_T_209 = eq(UInt<29>(268447791), _decodeList_T_208) @[build/NutShell.fir.opt.mlir 5839:28]
    node _decodeList_T_210 = and(io.in.bits.instr, UInt<32>(4193284223)) @[build/NutShell.fir.opt.mlir 5841:28]
    node _decodeList_T_211 = eq(UInt<29>(268443695), _decodeList_T_210) @[build/NutShell.fir.opt.mlir 5844:28]
    node _decodeList_T_212 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 5847:28]
    node _decodeList_T_213 = eq(UInt<29>(402665519), _decodeList_T_212) @[build/NutShell.fir.opt.mlir 5850:28]
    node _decodeList_T_214 = and(io.in.bits.instr, UInt<32>(4160778367)) @[build/NutShell.fir.opt.mlir 5852:28]
    node _decodeList_T_215 = eq(UInt<29>(402661423), _decodeList_T_214) @[build/NutShell.fir.opt.mlir 5855:28]
    node _decodeList_T_216 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5858:28]
    node _decodeList_T_217 = eq(UInt<28>(134225967), _decodeList_T_216) @[build/NutShell.fir.opt.mlir 5861:28]
    node _decodeList_T_218 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5863:28]
    node _decodeList_T_219 = eq(UInt<14>(8239), _decodeList_T_218) @[build/NutShell.fir.opt.mlir 5866:28]
    node _decodeList_T_220 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5868:28]
    node _decodeList_T_221 = eq(UInt<30>(536879151), _decodeList_T_220) @[build/NutShell.fir.opt.mlir 5871:28]
    node _decodeList_T_222 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5873:28]
    node _decodeList_T_223 = eq(UInt<31>(1610620975), _decodeList_T_222) @[build/NutShell.fir.opt.mlir 5876:28]
    node _decodeList_T_224 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5878:28]
    node _decodeList_T_225 = eq(UInt<31>(1073750063), _decodeList_T_224) @[build/NutShell.fir.opt.mlir 5881:28]
    node _decodeList_T_226 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5883:28]
    node _decodeList_T_227 = eq(UInt<32>(2147491887), _decodeList_T_226) @[build/NutShell.fir.opt.mlir 5886:28]
    node _decodeList_T_228 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5888:28]
    node _decodeList_T_229 = eq(UInt<32>(2684362799), _decodeList_T_228) @[build/NutShell.fir.opt.mlir 5891:28]
    node _decodeList_T_230 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5893:28]
    node _decodeList_T_231 = eq(UInt<32>(3221233711), _decodeList_T_230) @[build/NutShell.fir.opt.mlir 5896:28]
    node _decodeList_T_232 = and(io.in.bits.instr, UInt<32>(4160774271)) @[build/NutShell.fir.opt.mlir 5898:28]
    node _decodeList_T_233 = eq(UInt<32>(3758104623), _decodeList_T_232) @[build/NutShell.fir.opt.mlir 5901:28]
    node _decodeList_T_234 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5903:28]
    node _decodeList_T_235 = eq(UInt<13>(4211), _decodeList_T_234) @[build/NutShell.fir.opt.mlir 5906:28]
    node _decodeList_T_236 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5908:28]
    node _decodeList_T_237 = eq(UInt<14>(8307), _decodeList_T_236) @[build/NutShell.fir.opt.mlir 5911:28]
    node _decodeList_T_238 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5913:28]
    node _decodeList_T_239 = eq(UInt<14>(12403), _decodeList_T_238) @[build/NutShell.fir.opt.mlir 5916:28]
    node _decodeList_T_240 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5918:28]
    node _decodeList_T_241 = eq(UInt<15>(20595), _decodeList_T_240) @[build/NutShell.fir.opt.mlir 5921:28]
    node _decodeList_T_242 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5923:28]
    node _decodeList_T_243 = eq(UInt<15>(24691), _decodeList_T_242) @[build/NutShell.fir.opt.mlir 5926:28]
    node _decodeList_T_244 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 5928:28]
    node _decodeList_T_245 = eq(UInt<15>(28787), _decodeList_T_244) @[build/NutShell.fir.opt.mlir 5931:28]
    node _decodeList_T_246 = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 5933:28]
    node _decodeList_T_247 = eq(UInt<13>(4111), _decodeList_T_246) @[build/NutShell.fir.opt.mlir 5936:28]
    node _decodeList_T_248 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 5938:28]
    node _decodeList_T_249 = mux(_decodeList_T_245, UInt<3>(4), _decodeList_T_248) @[build/NutShell.fir.opt.mlir 5941:28]
    node _decodeList_T_250 = mux(_decodeList_T_243, UInt<3>(4), _decodeList_T_249) @[build/NutShell.fir.opt.mlir 5943:28]
    node _decodeList_T_251 = mux(_decodeList_T_241, UInt<3>(4), _decodeList_T_250) @[build/NutShell.fir.opt.mlir 5945:28]
    node _decodeList_T_252 = mux(_decodeList_T_239, UInt<3>(4), _decodeList_T_251) @[build/NutShell.fir.opt.mlir 5947:28]
    node _decodeList_T_253 = mux(_decodeList_T_237, UInt<3>(4), _decodeList_T_252) @[build/NutShell.fir.opt.mlir 5949:28]
    node _decodeList_T_254 = mux(_decodeList_T_235, UInt<3>(4), _decodeList_T_253) @[build/NutShell.fir.opt.mlir 5951:28]
    node _decodeList_T_255 = mux(_decodeList_T_233, UInt<3>(5), _decodeList_T_254) @[build/NutShell.fir.opt.mlir 5954:28]
    node _decodeList_T_256 = mux(_decodeList_T_231, UInt<3>(5), _decodeList_T_255) @[build/NutShell.fir.opt.mlir 5956:28]
    node _decodeList_T_257 = mux(_decodeList_T_229, UInt<3>(5), _decodeList_T_256) @[build/NutShell.fir.opt.mlir 5958:28]
    node _decodeList_T_258 = mux(_decodeList_T_227, UInt<3>(5), _decodeList_T_257) @[build/NutShell.fir.opt.mlir 5960:28]
    node _decodeList_T_259 = mux(_decodeList_T_225, UInt<3>(5), _decodeList_T_258) @[build/NutShell.fir.opt.mlir 5962:28]
    node _decodeList_T_260 = mux(_decodeList_T_223, UInt<3>(5), _decodeList_T_259) @[build/NutShell.fir.opt.mlir 5964:28]
    node _decodeList_T_261 = mux(_decodeList_T_221, UInt<3>(5), _decodeList_T_260) @[build/NutShell.fir.opt.mlir 5966:28]
    node _decodeList_T_262 = mux(_decodeList_T_219, UInt<3>(5), _decodeList_T_261) @[build/NutShell.fir.opt.mlir 5968:28]
    node _decodeList_T_263 = mux(_decodeList_T_217, UInt<3>(5), _decodeList_T_262) @[build/NutShell.fir.opt.mlir 5970:28]
    node _decodeList_T_264 = mux(_decodeList_T_215, UInt<4>(15), _decodeList_T_263) @[build/NutShell.fir.opt.mlir 5972:28]
    node _decodeList_T_265 = mux(_decodeList_T_213, UInt<4>(15), _decodeList_T_264) @[build/NutShell.fir.opt.mlir 5974:28]
    node _decodeList_T_266 = mux(_decodeList_T_211, UInt<3>(4), _decodeList_T_265) @[build/NutShell.fir.opt.mlir 5976:28]
    node _decodeList_T_267 = mux(_decodeList_T_209, UInt<3>(4), _decodeList_T_266) @[build/NutShell.fir.opt.mlir 5978:28]
    node _decodeList_T_268 = mux(_decodeList_T_207, UInt<3>(5), _decodeList_T_267) @[build/NutShell.fir.opt.mlir 5980:28]
    node _decodeList_T_269 = mux(_decodeList_T_205, UInt<3>(4), _decodeList_T_268) @[build/NutShell.fir.opt.mlir 5982:28]
    node _decodeList_T_270 = mux(_decodeList_T_203, UInt<3>(4), _decodeList_T_269) @[build/NutShell.fir.opt.mlir 5984:28]
    node _decodeList_T_271 = mux(_decodeList_T_201, UInt<2>(2), _decodeList_T_270) @[build/NutShell.fir.opt.mlir 5986:28]
    node _decodeList_T_272 = mux(_decodeList_T_199, UInt<3>(4), _decodeList_T_271) @[build/NutShell.fir.opt.mlir 5988:28]
    node _decodeList_T_273 = mux(_decodeList_T_197, UInt<3>(4), _decodeList_T_272) @[build/NutShell.fir.opt.mlir 5990:28]
    node _decodeList_T_274 = mux(_decodeList_T_195, UInt<3>(4), _decodeList_T_273) @[build/NutShell.fir.opt.mlir 5992:28]
    node _decodeList_T_275 = mux(_decodeList_T_193, UInt<2>(2), _decodeList_T_274) @[build/NutShell.fir.opt.mlir 5994:28]
    node _decodeList_T_276 = mux(_decodeList_T_191, UInt<2>(2), _decodeList_T_275) @[build/NutShell.fir.opt.mlir 5996:28]
    node _decodeList_T_277 = mux(_decodeList_T_189, UInt<3>(5), _decodeList_T_276) @[build/NutShell.fir.opt.mlir 5998:28]
    node _decodeList_T_278 = mux(_decodeList_T_187, UInt<3>(4), _decodeList_T_277) @[build/NutShell.fir.opt.mlir 6000:28]
    node _decodeList_T_279 = mux(_decodeList_T_185, UInt<3>(4), _decodeList_T_278) @[build/NutShell.fir.opt.mlir 6002:28]
    node _decodeList_T_280 = mux(_decodeList_T_183, UInt<3>(5), _decodeList_T_279) @[build/NutShell.fir.opt.mlir 6004:28]
    node _decodeList_T_281 = mux(_decodeList_T_181, UInt<3>(4), _decodeList_T_280) @[build/NutShell.fir.opt.mlir 6006:28]
    node _decodeList_T_282 = mux(_decodeList_T_179, UInt<3>(4), _decodeList_T_281) @[build/NutShell.fir.opt.mlir 6008:28]
    node _decodeList_T_283 = mux(_decodeList_T_177, UInt<3>(4), _decodeList_T_282) @[build/NutShell.fir.opt.mlir 6010:28]
    node _decodeList_T_284 = mux(_decodeList_T_175, UInt<3>(4), _decodeList_T_283) @[build/NutShell.fir.opt.mlir 6012:28]
    node _decodeList_T_285 = mux(_decodeList_T_173, UInt<1>(1), _decodeList_T_284) @[build/NutShell.fir.opt.mlir 6014:28]
    node _decodeList_T_286 = mux(_decodeList_T_171, UInt<1>(1), _decodeList_T_285) @[build/NutShell.fir.opt.mlir 6016:28]
    node _decodeList_T_287 = mux(_decodeList_T_169, UInt<3>(7), _decodeList_T_286) @[build/NutShell.fir.opt.mlir 6019:28]
    node _decodeList_T_288 = mux(_decodeList_T_167, UInt<3>(5), _decodeList_T_287) @[build/NutShell.fir.opt.mlir 6021:28]
    node _decodeList_T_289 = mux(_decodeList_T_165, UInt<3>(5), _decodeList_T_288) @[build/NutShell.fir.opt.mlir 6023:28]
    node _decodeList_T_290 = mux(_decodeList_T_163, UInt<3>(5), _decodeList_T_289) @[build/NutShell.fir.opt.mlir 6025:28]
    node _decodeList_T_291 = mux(_decodeList_T_161, UInt<3>(5), _decodeList_T_290) @[build/NutShell.fir.opt.mlir 6027:28]
    node _decodeList_T_292 = mux(_decodeList_T_159, UInt<3>(5), _decodeList_T_291) @[build/NutShell.fir.opt.mlir 6029:28]
    node _decodeList_T_293 = mux(_decodeList_T_157, UInt<3>(5), _decodeList_T_292) @[build/NutShell.fir.opt.mlir 6031:28]
    node _decodeList_T_294 = mux(_decodeList_T_155, UInt<3>(4), _decodeList_T_293) @[build/NutShell.fir.opt.mlir 6033:28]
    node _decodeList_T_295 = mux(_decodeList_T_153, UInt<3>(4), _decodeList_T_294) @[build/NutShell.fir.opt.mlir 6035:28]
    node _decodeList_T_296 = mux(_decodeList_T_151, UInt<3>(4), _decodeList_T_295) @[build/NutShell.fir.opt.mlir 6037:28]
    node _decodeList_T_297 = mux(_decodeList_T_149, UInt<3>(4), _decodeList_T_296) @[build/NutShell.fir.opt.mlir 6039:28]
    node _decodeList_T_298 = mux(_decodeList_T_147, UInt<3>(4), _decodeList_T_297) @[build/NutShell.fir.opt.mlir 6041:28]
    node _decodeList_T_299 = mux(_decodeList_T_145, UInt<3>(4), _decodeList_T_298) @[build/NutShell.fir.opt.mlir 6043:28]
    node _decodeList_T_300 = mux(_decodeList_T_143, UInt<3>(4), _decodeList_T_299) @[build/NutShell.fir.opt.mlir 6045:28]
    node _decodeList_T_301 = mux(_decodeList_T_141, UInt<3>(4), _decodeList_T_300) @[build/NutShell.fir.opt.mlir 6047:28]
    node _decodeList_T_302 = mux(_decodeList_T_139, UInt<3>(4), _decodeList_T_301) @[build/NutShell.fir.opt.mlir 6049:28]
    node _decodeList_T_303 = mux(_decodeList_T_137, UInt<2>(2), _decodeList_T_302) @[build/NutShell.fir.opt.mlir 6051:28]
    node _decodeList_T_304 = mux(_decodeList_T_135, UInt<2>(2), _decodeList_T_303) @[build/NutShell.fir.opt.mlir 6053:28]
    node _decodeList_T_305 = mux(_decodeList_T_133, UInt<3>(4), _decodeList_T_304) @[build/NutShell.fir.opt.mlir 6055:28]
    node _decodeList_T_306 = mux(_decodeList_T_131, UInt<3>(4), _decodeList_T_305) @[build/NutShell.fir.opt.mlir 6057:28]
    node _decodeList_T_307 = mux(_decodeList_T_129, UInt<3>(4), _decodeList_T_306) @[build/NutShell.fir.opt.mlir 6059:28]
    node _decodeList_T_308 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_307) @[build/NutShell.fir.opt.mlir 6061:28]
    node _decodeList_T_309 = mux(_decodeList_T_125, UInt<3>(5), _decodeList_T_308) @[build/NutShell.fir.opt.mlir 6063:28]
    node _decodeList_T_310 = mux(_decodeList_T_123, UInt<3>(5), _decodeList_T_309) @[build/NutShell.fir.opt.mlir 6065:28]
    node _decodeList_T_311 = mux(_decodeList_T_121, UInt<3>(5), _decodeList_T_310) @[build/NutShell.fir.opt.mlir 6067:28]
    node _decodeList_T_312 = mux(_decodeList_T_119, UInt<3>(5), _decodeList_T_311) @[build/NutShell.fir.opt.mlir 6069:28]
    node _decodeList_T_313 = mux(_decodeList_T_117, UInt<3>(5), _decodeList_T_312) @[build/NutShell.fir.opt.mlir 6071:28]
    node _decodeList_T_314 = mux(_decodeList_T_115, UInt<3>(5), _decodeList_T_313) @[build/NutShell.fir.opt.mlir 6073:28]
    node _decodeList_T_315 = mux(_decodeList_T_113, UInt<3>(5), _decodeList_T_314) @[build/NutShell.fir.opt.mlir 6075:28]
    node _decodeList_T_316 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_315) @[build/NutShell.fir.opt.mlir 6077:28]
    node _decodeList_T_317 = mux(_decodeList_T_109, UInt<3>(5), _decodeList_T_316) @[build/NutShell.fir.opt.mlir 6079:28]
    node _decodeList_T_318 = mux(_decodeList_T_107, UInt<3>(5), _decodeList_T_317) @[build/NutShell.fir.opt.mlir 6081:28]
    node _decodeList_T_319 = mux(_decodeList_T_105, UInt<3>(5), _decodeList_T_318) @[build/NutShell.fir.opt.mlir 6083:28]
    node _decodeList_T_320 = mux(_decodeList_T_103, UInt<3>(5), _decodeList_T_319) @[build/NutShell.fir.opt.mlir 6085:28]
    node _decodeList_T_321 = mux(_decodeList_T_101, UInt<3>(5), _decodeList_T_320) @[build/NutShell.fir.opt.mlir 6087:28]
    node _decodeList_T_322 = mux(_decodeList_T_99, UInt<3>(4), _decodeList_T_321) @[build/NutShell.fir.opt.mlir 6089:28]
    node _decodeList_T_323 = mux(_decodeList_T_97, UInt<2>(2), _decodeList_T_322) @[build/NutShell.fir.opt.mlir 6091:28]
    node _decodeList_T_324 = mux(_decodeList_T_95, UInt<3>(4), _decodeList_T_323) @[build/NutShell.fir.opt.mlir 6093:28]
    node _decodeList_T_325 = mux(_decodeList_T_93, UInt<3>(4), _decodeList_T_324) @[build/NutShell.fir.opt.mlir 6095:28]
    node _decodeList_T_326 = mux(_decodeList_T_91, UInt<3>(5), _decodeList_T_325) @[build/NutShell.fir.opt.mlir 6097:28]
    node _decodeList_T_327 = mux(_decodeList_T_89, UInt<3>(5), _decodeList_T_326) @[build/NutShell.fir.opt.mlir 6099:28]
    node _decodeList_T_328 = mux(_decodeList_T_87, UInt<3>(5), _decodeList_T_327) @[build/NutShell.fir.opt.mlir 6101:28]
    node _decodeList_T_329 = mux(_decodeList_T_85, UInt<3>(5), _decodeList_T_328) @[build/NutShell.fir.opt.mlir 6103:28]
    node _decodeList_T_330 = mux(_decodeList_T_83, UInt<3>(5), _decodeList_T_329) @[build/NutShell.fir.opt.mlir 6105:28]
    node _decodeList_T_331 = mux(_decodeList_T_81, UInt<3>(4), _decodeList_T_330) @[build/NutShell.fir.opt.mlir 6107:28]
    node _decodeList_T_332 = mux(_decodeList_T_79, UInt<3>(4), _decodeList_T_331) @[build/NutShell.fir.opt.mlir 6109:28]
    node _decodeList_T_333 = mux(_decodeList_T_77, UInt<3>(4), _decodeList_T_332) @[build/NutShell.fir.opt.mlir 6111:28]
    node _decodeList_T_334 = mux(_decodeList_T_75, UInt<3>(4), _decodeList_T_333) @[build/NutShell.fir.opt.mlir 6113:28]
    node _decodeList_T_335 = mux(_decodeList_T_73, UInt<2>(2), _decodeList_T_334) @[build/NutShell.fir.opt.mlir 6115:28]
    node _decodeList_T_336 = mux(_decodeList_T_71, UInt<2>(2), _decodeList_T_335) @[build/NutShell.fir.opt.mlir 6117:28]
    node _decodeList_T_337 = mux(_decodeList_T_69, UInt<2>(2), _decodeList_T_336) @[build/NutShell.fir.opt.mlir 6119:28]
    node _decodeList_T_338 = mux(_decodeList_T_67, UInt<3>(4), _decodeList_T_337) @[build/NutShell.fir.opt.mlir 6121:28]
    node _decodeList_T_339 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_338) @[build/NutShell.fir.opt.mlir 6123:28]
    node _decodeList_T_340 = mux(_decodeList_T_63, UInt<3>(4), _decodeList_T_339) @[build/NutShell.fir.opt.mlir 6125:28]
    node _decodeList_T_341 = mux(_decodeList_T_61, UInt<3>(4), _decodeList_T_340) @[build/NutShell.fir.opt.mlir 6127:28]
    node _decodeList_T_342 = mux(_decodeList_T_59, UInt<3>(4), _decodeList_T_341) @[build/NutShell.fir.opt.mlir 6129:28]
    node _decodeList_T_343 = mux(_decodeList_T_57, UInt<1>(1), _decodeList_T_342) @[build/NutShell.fir.opt.mlir 6131:28]
    node _decodeList_T_344 = mux(_decodeList_T_55, UInt<1>(1), _decodeList_T_343) @[build/NutShell.fir.opt.mlir 6133:28]
    node _decodeList_T_345 = mux(_decodeList_T_53, UInt<1>(1), _decodeList_T_344) @[build/NutShell.fir.opt.mlir 6135:28]
    node _decodeList_T_346 = mux(_decodeList_T_51, UInt<1>(1), _decodeList_T_345) @[build/NutShell.fir.opt.mlir 6137:28]
    node _decodeList_T_347 = mux(_decodeList_T_49, UInt<1>(1), _decodeList_T_346) @[build/NutShell.fir.opt.mlir 6139:28]
    node _decodeList_T_348 = mux(_decodeList_T_47, UInt<1>(1), _decodeList_T_347) @[build/NutShell.fir.opt.mlir 6141:28]
    node _decodeList_T_349 = mux(_decodeList_T_45, UInt<3>(4), _decodeList_T_348) @[build/NutShell.fir.opt.mlir 6143:28]
    node _decodeList_T_350 = mux(_decodeList_T_43, UInt<3>(7), _decodeList_T_349) @[build/NutShell.fir.opt.mlir 6145:28]
    node _decodeList_T_351 = mux(_decodeList_T_41, UInt<3>(6), _decodeList_T_350) @[build/NutShell.fir.opt.mlir 6148:28]
    node _decodeList_T_352 = mux(_decodeList_T_39, UInt<3>(6), _decodeList_T_351) @[build/NutShell.fir.opt.mlir 6150:28]
    node _decodeList_T_353 = mux(_decodeList_T_37, UInt<3>(5), _decodeList_T_352) @[build/NutShell.fir.opt.mlir 6152:28]
    node _decodeList_T_354 = mux(_decodeList_T_35, UInt<3>(5), _decodeList_T_353) @[build/NutShell.fir.opt.mlir 6154:28]
    node _decodeList_T_355 = mux(_decodeList_T_33, UInt<3>(5), _decodeList_T_354) @[build/NutShell.fir.opt.mlir 6156:28]
    node _decodeList_T_356 = mux(_decodeList_T_31, UInt<3>(5), _decodeList_T_355) @[build/NutShell.fir.opt.mlir 6158:28]
    node _decodeList_T_357 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_356) @[build/NutShell.fir.opt.mlir 6160:28]
    node _decodeList_T_358 = mux(_decodeList_T_27, UInt<3>(5), _decodeList_T_357) @[build/NutShell.fir.opt.mlir 6162:28]
    node _decodeList_T_359 = mux(_decodeList_T_25, UInt<3>(5), _decodeList_T_358) @[build/NutShell.fir.opt.mlir 6164:28]
    node _decodeList_T_360 = mux(_decodeList_T_23, UInt<3>(5), _decodeList_T_359) @[build/NutShell.fir.opt.mlir 6166:28]
    node _decodeList_T_361 = mux(_decodeList_T_21, UInt<3>(5), _decodeList_T_360) @[build/NutShell.fir.opt.mlir 6168:28]
    node _decodeList_T_362 = mux(_decodeList_T_19, UInt<3>(5), _decodeList_T_361) @[build/NutShell.fir.opt.mlir 6170:28]
    node _decodeList_T_363 = mux(_decodeList_T_17, UInt<3>(4), _decodeList_T_362) @[build/NutShell.fir.opt.mlir 6172:28]
    node _decodeList_T_364 = mux(_decodeList_T_15, UInt<3>(4), _decodeList_T_363) @[build/NutShell.fir.opt.mlir 6174:28]
    node _decodeList_T_365 = mux(_decodeList_T_13, UInt<3>(4), _decodeList_T_364) @[build/NutShell.fir.opt.mlir 6176:28]
    node _decodeList_T_366 = mux(_decodeList_T_11, UInt<3>(4), _decodeList_T_365) @[build/NutShell.fir.opt.mlir 6178:28]
    node _decodeList_T_367 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_366) @[build/NutShell.fir.opt.mlir 6180:28]
    node _decodeList_T_368 = mux(_decodeList_T_7, UInt<3>(4), _decodeList_T_367) @[build/NutShell.fir.opt.mlir 6182:28]
    node _decodeList_T_369 = mux(_decodeList_T_5, UInt<3>(4), _decodeList_T_368) @[build/NutShell.fir.opt.mlir 6184:28]
    node _decodeList_T_370 = mux(_decodeList_T_3, UInt<3>(4), _decodeList_T_369) @[build/NutShell.fir.opt.mlir 6186:28]
    node decodeList_0 = mux(_decodeList_T_1, UInt<3>(4), _decodeList_T_370) @[build/NutShell.fir.opt.mlir 6188:23]
    node _decodeList_T_371 = mux(_decodeList_T_247, UInt<3>(4), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 6190:28]
    node _decodeList_T_372 = mux(_decodeList_T_245, UInt<2>(3), _decodeList_T_371) @[build/NutShell.fir.opt.mlir 6192:28]
    node _decodeList_T_373 = mux(_decodeList_T_243, UInt<2>(3), _decodeList_T_372) @[build/NutShell.fir.opt.mlir 6194:28]
    node _decodeList_T_374 = mux(_decodeList_T_241, UInt<2>(3), _decodeList_T_373) @[build/NutShell.fir.opt.mlir 6196:28]
    node _decodeList_T_375 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_374) @[build/NutShell.fir.opt.mlir 6198:28]
    node _decodeList_T_376 = mux(_decodeList_T_237, UInt<2>(3), _decodeList_T_375) @[build/NutShell.fir.opt.mlir 6200:28]
    node _decodeList_T_377 = mux(_decodeList_T_235, UInt<2>(3), _decodeList_T_376) @[build/NutShell.fir.opt.mlir 6202:28]
    node _decodeList_T_378 = mux(_decodeList_T_233, UInt<1>(1), _decodeList_T_377) @[build/NutShell.fir.opt.mlir 6204:28]
    node _decodeList_T_379 = mux(_decodeList_T_231, UInt<1>(1), _decodeList_T_378) @[build/NutShell.fir.opt.mlir 6206:28]
    node _decodeList_T_380 = mux(_decodeList_T_229, UInt<1>(1), _decodeList_T_379) @[build/NutShell.fir.opt.mlir 6208:28]
    node _decodeList_T_381 = mux(_decodeList_T_227, UInt<1>(1), _decodeList_T_380) @[build/NutShell.fir.opt.mlir 6210:28]
    node _decodeList_T_382 = mux(_decodeList_T_225, UInt<1>(1), _decodeList_T_381) @[build/NutShell.fir.opt.mlir 6212:28]
    node _decodeList_T_383 = mux(_decodeList_T_223, UInt<1>(1), _decodeList_T_382) @[build/NutShell.fir.opt.mlir 6214:28]
    node _decodeList_T_384 = mux(_decodeList_T_221, UInt<1>(1), _decodeList_T_383) @[build/NutShell.fir.opt.mlir 6216:28]
    node _decodeList_T_385 = mux(_decodeList_T_219, UInt<1>(1), _decodeList_T_384) @[build/NutShell.fir.opt.mlir 6218:28]
    node _decodeList_T_386 = mux(_decodeList_T_217, UInt<1>(1), _decodeList_T_385) @[build/NutShell.fir.opt.mlir 6220:28]
    node _decodeList_T_387 = mux(_decodeList_T_215, UInt<1>(1), _decodeList_T_386) @[build/NutShell.fir.opt.mlir 6222:28]
    node _decodeList_T_388 = mux(_decodeList_T_213, UInt<1>(1), _decodeList_T_387) @[build/NutShell.fir.opt.mlir 6224:28]
    node _decodeList_T_389 = mux(_decodeList_T_211, UInt<1>(1), _decodeList_T_388) @[build/NutShell.fir.opt.mlir 6226:28]
    node _decodeList_T_390 = mux(_decodeList_T_209, UInt<1>(1), _decodeList_T_389) @[build/NutShell.fir.opt.mlir 6228:28]
    node _decodeList_T_391 = mux(_decodeList_T_207, UInt<3>(4), _decodeList_T_390) @[build/NutShell.fir.opt.mlir 6230:28]
    node _decodeList_T_392 = mux(_decodeList_T_205, UInt<2>(3), _decodeList_T_391) @[build/NutShell.fir.opt.mlir 6232:28]
    node _decodeList_T_393 = mux(_decodeList_T_203, UInt<1>(0), _decodeList_T_392) @[build/NutShell.fir.opt.mlir 6234:28]
    node _decodeList_T_394 = mux(_decodeList_T_201, UInt<3>(4), _decodeList_T_393) @[build/NutShell.fir.opt.mlir 6236:28]
    node _decodeList_T_395 = mux(_decodeList_T_199, UInt<2>(3), _decodeList_T_394) @[build/NutShell.fir.opt.mlir 6238:28]
    node _decodeList_T_396 = mux(_decodeList_T_197, UInt<2>(3), _decodeList_T_395) @[build/NutShell.fir.opt.mlir 6240:28]
    node _decodeList_T_397 = mux(_decodeList_T_195, UInt<2>(3), _decodeList_T_396) @[build/NutShell.fir.opt.mlir 6242:28]
    node _decodeList_T_398 = mux(_decodeList_T_193, UInt<1>(1), _decodeList_T_397) @[build/NutShell.fir.opt.mlir 6244:28]
    node _decodeList_T_399 = mux(_decodeList_T_191, UInt<1>(1), _decodeList_T_398) @[build/NutShell.fir.opt.mlir 6246:28]
    node _decodeList_T_400 = mux(_decodeList_T_189, UInt<1>(0), _decodeList_T_399) @[build/NutShell.fir.opt.mlir 6248:28]
    node _decodeList_T_401 = mux(_decodeList_T_187, UInt<1>(0), _decodeList_T_400) @[build/NutShell.fir.opt.mlir 6250:28]
    node _decodeList_T_402 = mux(_decodeList_T_185, UInt<2>(3), _decodeList_T_401) @[build/NutShell.fir.opt.mlir 6252:28]
    node _decodeList_T_403 = mux(_decodeList_T_183, UInt<1>(0), _decodeList_T_402) @[build/NutShell.fir.opt.mlir 6254:28]
    node _decodeList_T_404 = mux(_decodeList_T_181, UInt<1>(0), _decodeList_T_403) @[build/NutShell.fir.opt.mlir 6256:28]
    node _decodeList_T_405 = mux(_decodeList_T_179, UInt<1>(1), _decodeList_T_404) @[build/NutShell.fir.opt.mlir 6258:28]
    node _decodeList_T_406 = mux(_decodeList_T_177, UInt<1>(1), _decodeList_T_405) @[build/NutShell.fir.opt.mlir 6260:28]
    node _decodeList_T_407 = mux(_decodeList_T_175, UInt<1>(0), _decodeList_T_406) @[build/NutShell.fir.opt.mlir 6262:28]
    node _decodeList_T_408 = mux(_decodeList_T_173, UInt<1>(0), _decodeList_T_407) @[build/NutShell.fir.opt.mlir 6264:28]
    node _decodeList_T_409 = mux(_decodeList_T_171, UInt<1>(0), _decodeList_T_408) @[build/NutShell.fir.opt.mlir 6266:28]
    node _decodeList_T_410 = mux(_decodeList_T_169, UInt<1>(0), _decodeList_T_409) @[build/NutShell.fir.opt.mlir 6268:28]
    node _decodeList_T_411 = mux(_decodeList_T_167, UInt<1>(0), _decodeList_T_410) @[build/NutShell.fir.opt.mlir 6270:28]
    node _decodeList_T_412 = mux(_decodeList_T_165, UInt<1>(0), _decodeList_T_411) @[build/NutShell.fir.opt.mlir 6272:28]
    node _decodeList_T_413 = mux(_decodeList_T_163, UInt<1>(0), _decodeList_T_412) @[build/NutShell.fir.opt.mlir 6274:28]
    node _decodeList_T_414 = mux(_decodeList_T_161, UInt<1>(0), _decodeList_T_413) @[build/NutShell.fir.opt.mlir 6276:28]
    node _decodeList_T_415 = mux(_decodeList_T_159, UInt<1>(0), _decodeList_T_414) @[build/NutShell.fir.opt.mlir 6278:28]
    node _decodeList_T_416 = mux(_decodeList_T_157, UInt<1>(0), _decodeList_T_415) @[build/NutShell.fir.opt.mlir 6280:28]
    node _decodeList_T_417 = mux(_decodeList_T_155, UInt<1>(0), _decodeList_T_416) @[build/NutShell.fir.opt.mlir 6282:28]
    node _decodeList_T_418 = mux(_decodeList_T_153, UInt<1>(0), _decodeList_T_417) @[build/NutShell.fir.opt.mlir 6284:28]
    node _decodeList_T_419 = mux(_decodeList_T_151, UInt<1>(0), _decodeList_T_418) @[build/NutShell.fir.opt.mlir 6286:28]
    node _decodeList_T_420 = mux(_decodeList_T_149, UInt<1>(0), _decodeList_T_419) @[build/NutShell.fir.opt.mlir 6288:28]
    node _decodeList_T_421 = mux(_decodeList_T_147, UInt<1>(0), _decodeList_T_420) @[build/NutShell.fir.opt.mlir 6290:28]
    node _decodeList_T_422 = mux(_decodeList_T_145, UInt<1>(0), _decodeList_T_421) @[build/NutShell.fir.opt.mlir 6292:28]
    node _decodeList_T_423 = mux(_decodeList_T_143, UInt<1>(0), _decodeList_T_422) @[build/NutShell.fir.opt.mlir 6294:28]
    node _decodeList_T_424 = mux(_decodeList_T_141, UInt<1>(0), _decodeList_T_423) @[build/NutShell.fir.opt.mlir 6296:28]
    node _decodeList_T_425 = mux(_decodeList_T_139, UInt<1>(0), _decodeList_T_424) @[build/NutShell.fir.opt.mlir 6298:28]
    node _decodeList_T_426 = mux(_decodeList_T_137, UInt<1>(1), _decodeList_T_425) @[build/NutShell.fir.opt.mlir 6300:28]
    node _decodeList_T_427 = mux(_decodeList_T_135, UInt<1>(1), _decodeList_T_426) @[build/NutShell.fir.opt.mlir 6302:28]
    node _decodeList_T_428 = mux(_decodeList_T_133, UInt<1>(1), _decodeList_T_427) @[build/NutShell.fir.opt.mlir 6304:28]
    node _decodeList_T_429 = mux(_decodeList_T_131, UInt<1>(1), _decodeList_T_428) @[build/NutShell.fir.opt.mlir 6306:28]
    node _decodeList_T_430 = mux(_decodeList_T_129, UInt<1>(0), _decodeList_T_429) @[build/NutShell.fir.opt.mlir 6308:28]
    node _decodeList_T_431 = mux(_decodeList_T_127, UInt<2>(3), _decodeList_T_430) @[build/NutShell.fir.opt.mlir 6310:28]
    node _decodeList_T_432 = mux(_decodeList_T_125, UInt<2>(2), _decodeList_T_431) @[build/NutShell.fir.opt.mlir 6312:28]
    node _decodeList_T_433 = mux(_decodeList_T_123, UInt<2>(2), _decodeList_T_432) @[build/NutShell.fir.opt.mlir 6314:28]
    node _decodeList_T_434 = mux(_decodeList_T_121, UInt<2>(2), _decodeList_T_433) @[build/NutShell.fir.opt.mlir 6316:28]
    node _decodeList_T_435 = mux(_decodeList_T_119, UInt<2>(2), _decodeList_T_434) @[build/NutShell.fir.opt.mlir 6318:28]
    node _decodeList_T_436 = mux(_decodeList_T_117, UInt<2>(2), _decodeList_T_435) @[build/NutShell.fir.opt.mlir 6320:28]
    node _decodeList_T_437 = mux(_decodeList_T_115, UInt<2>(2), _decodeList_T_436) @[build/NutShell.fir.opt.mlir 6322:28]
    node _decodeList_T_438 = mux(_decodeList_T_113, UInt<2>(2), _decodeList_T_437) @[build/NutShell.fir.opt.mlir 6324:28]
    node _decodeList_T_439 = mux(_decodeList_T_111, UInt<2>(2), _decodeList_T_438) @[build/NutShell.fir.opt.mlir 6326:28]
    node _decodeList_T_440 = mux(_decodeList_T_109, UInt<2>(2), _decodeList_T_439) @[build/NutShell.fir.opt.mlir 6328:28]
    node _decodeList_T_441 = mux(_decodeList_T_107, UInt<2>(2), _decodeList_T_440) @[build/NutShell.fir.opt.mlir 6330:28]
    node _decodeList_T_442 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_441) @[build/NutShell.fir.opt.mlir 6332:28]
    node _decodeList_T_443 = mux(_decodeList_T_103, UInt<2>(2), _decodeList_T_442) @[build/NutShell.fir.opt.mlir 6334:28]
    node _decodeList_T_444 = mux(_decodeList_T_101, UInt<2>(2), _decodeList_T_443) @[build/NutShell.fir.opt.mlir 6336:28]
    node _decodeList_T_445 = mux(_decodeList_T_99, UInt<1>(0), _decodeList_T_444) @[build/NutShell.fir.opt.mlir 6338:28]
    node _decodeList_T_446 = mux(_decodeList_T_97, UInt<1>(1), _decodeList_T_445) @[build/NutShell.fir.opt.mlir 6340:28]
    node _decodeList_T_447 = mux(_decodeList_T_95, UInt<1>(1), _decodeList_T_446) @[build/NutShell.fir.opt.mlir 6342:28]
    node _decodeList_T_448 = mux(_decodeList_T_93, UInt<1>(1), _decodeList_T_447) @[build/NutShell.fir.opt.mlir 6344:28]
    node _decodeList_T_449 = mux(_decodeList_T_91, UInt<1>(0), _decodeList_T_448) @[build/NutShell.fir.opt.mlir 6346:28]
    node _decodeList_T_450 = mux(_decodeList_T_89, UInt<1>(0), _decodeList_T_449) @[build/NutShell.fir.opt.mlir 6348:28]
    node _decodeList_T_451 = mux(_decodeList_T_87, UInt<1>(0), _decodeList_T_450) @[build/NutShell.fir.opt.mlir 6350:28]
    node _decodeList_T_452 = mux(_decodeList_T_85, UInt<1>(0), _decodeList_T_451) @[build/NutShell.fir.opt.mlir 6352:28]
    node _decodeList_T_453 = mux(_decodeList_T_83, UInt<1>(0), _decodeList_T_452) @[build/NutShell.fir.opt.mlir 6354:28]
    node _decodeList_T_454 = mux(_decodeList_T_81, UInt<1>(0), _decodeList_T_453) @[build/NutShell.fir.opt.mlir 6356:28]
    node _decodeList_T_455 = mux(_decodeList_T_79, UInt<1>(0), _decodeList_T_454) @[build/NutShell.fir.opt.mlir 6358:28]
    node _decodeList_T_456 = mux(_decodeList_T_77, UInt<1>(0), _decodeList_T_455) @[build/NutShell.fir.opt.mlir 6360:28]
    node _decodeList_T_457 = mux(_decodeList_T_75, UInt<1>(0), _decodeList_T_456) @[build/NutShell.fir.opt.mlir 6362:28]
    node _decodeList_T_458 = mux(_decodeList_T_73, UInt<1>(1), _decodeList_T_457) @[build/NutShell.fir.opt.mlir 6364:28]
    node _decodeList_T_459 = mux(_decodeList_T_71, UInt<1>(1), _decodeList_T_458) @[build/NutShell.fir.opt.mlir 6366:28]
    node _decodeList_T_460 = mux(_decodeList_T_69, UInt<1>(1), _decodeList_T_459) @[build/NutShell.fir.opt.mlir 6368:28]
    node _decodeList_T_461 = mux(_decodeList_T_67, UInt<1>(1), _decodeList_T_460) @[build/NutShell.fir.opt.mlir 6370:28]
    node _decodeList_T_462 = mux(_decodeList_T_65, UInt<1>(1), _decodeList_T_461) @[build/NutShell.fir.opt.mlir 6372:28]
    node _decodeList_T_463 = mux(_decodeList_T_63, UInt<1>(1), _decodeList_T_462) @[build/NutShell.fir.opt.mlir 6374:28]
    node _decodeList_T_464 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_463) @[build/NutShell.fir.opt.mlir 6376:28]
    node _decodeList_T_465 = mux(_decodeList_T_59, UInt<1>(1), _decodeList_T_464) @[build/NutShell.fir.opt.mlir 6378:28]
    node _decodeList_T_466 = mux(_decodeList_T_57, UInt<1>(0), _decodeList_T_465) @[build/NutShell.fir.opt.mlir 6380:28]
    node _decodeList_T_467 = mux(_decodeList_T_55, UInt<1>(0), _decodeList_T_466) @[build/NutShell.fir.opt.mlir 6382:28]
    node _decodeList_T_468 = mux(_decodeList_T_53, UInt<1>(0), _decodeList_T_467) @[build/NutShell.fir.opt.mlir 6384:28]
    node _decodeList_T_469 = mux(_decodeList_T_51, UInt<1>(0), _decodeList_T_468) @[build/NutShell.fir.opt.mlir 6386:28]
    node _decodeList_T_470 = mux(_decodeList_T_49, UInt<1>(0), _decodeList_T_469) @[build/NutShell.fir.opt.mlir 6388:28]
    node _decodeList_T_471 = mux(_decodeList_T_47, UInt<1>(0), _decodeList_T_470) @[build/NutShell.fir.opt.mlir 6390:28]
    node _decodeList_T_472 = mux(_decodeList_T_45, UInt<1>(0), _decodeList_T_471) @[build/NutShell.fir.opt.mlir 6392:28]
    node _decodeList_T_473 = mux(_decodeList_T_43, UInt<1>(0), _decodeList_T_472) @[build/NutShell.fir.opt.mlir 6394:28]
    node _decodeList_T_474 = mux(_decodeList_T_41, UInt<1>(0), _decodeList_T_473) @[build/NutShell.fir.opt.mlir 6396:28]
    node _decodeList_T_475 = mux(_decodeList_T_39, UInt<1>(0), _decodeList_T_474) @[build/NutShell.fir.opt.mlir 6398:28]
    node _decodeList_T_476 = mux(_decodeList_T_37, UInt<1>(0), _decodeList_T_475) @[build/NutShell.fir.opt.mlir 6400:28]
    node _decodeList_T_477 = mux(_decodeList_T_35, UInt<1>(0), _decodeList_T_476) @[build/NutShell.fir.opt.mlir 6402:28]
    node _decodeList_T_478 = mux(_decodeList_T_33, UInt<1>(0), _decodeList_T_477) @[build/NutShell.fir.opt.mlir 6404:28]
    node _decodeList_T_479 = mux(_decodeList_T_31, UInt<1>(0), _decodeList_T_478) @[build/NutShell.fir.opt.mlir 6406:28]
    node _decodeList_T_480 = mux(_decodeList_T_29, UInt<1>(0), _decodeList_T_479) @[build/NutShell.fir.opt.mlir 6408:28]
    node _decodeList_T_481 = mux(_decodeList_T_27, UInt<1>(0), _decodeList_T_480) @[build/NutShell.fir.opt.mlir 6410:28]
    node _decodeList_T_482 = mux(_decodeList_T_25, UInt<1>(0), _decodeList_T_481) @[build/NutShell.fir.opt.mlir 6412:28]
    node _decodeList_T_483 = mux(_decodeList_T_23, UInt<1>(0), _decodeList_T_482) @[build/NutShell.fir.opt.mlir 6414:28]
    node _decodeList_T_484 = mux(_decodeList_T_21, UInt<1>(0), _decodeList_T_483) @[build/NutShell.fir.opt.mlir 6416:28]
    node _decodeList_T_485 = mux(_decodeList_T_19, UInt<1>(0), _decodeList_T_484) @[build/NutShell.fir.opt.mlir 6418:28]
    node _decodeList_T_486 = mux(_decodeList_T_17, UInt<1>(0), _decodeList_T_485) @[build/NutShell.fir.opt.mlir 6420:28]
    node _decodeList_T_487 = mux(_decodeList_T_15, UInt<1>(0), _decodeList_T_486) @[build/NutShell.fir.opt.mlir 6422:28]
    node _decodeList_T_488 = mux(_decodeList_T_13, UInt<1>(0), _decodeList_T_487) @[build/NutShell.fir.opt.mlir 6424:28]
    node _decodeList_T_489 = mux(_decodeList_T_11, UInt<1>(0), _decodeList_T_488) @[build/NutShell.fir.opt.mlir 6426:28]
    node _decodeList_T_490 = mux(_decodeList_T_9, UInt<1>(0), _decodeList_T_489) @[build/NutShell.fir.opt.mlir 6428:28]
    node _decodeList_T_491 = mux(_decodeList_T_7, UInt<1>(0), _decodeList_T_490) @[build/NutShell.fir.opt.mlir 6430:28]
    node _decodeList_T_492 = mux(_decodeList_T_5, UInt<1>(0), _decodeList_T_491) @[build/NutShell.fir.opt.mlir 6432:28]
    node _decodeList_T_493 = mux(_decodeList_T_3, UInt<1>(0), _decodeList_T_492) @[build/NutShell.fir.opt.mlir 6434:28]
    node decodeList_1 = mux(_decodeList_T_1, UInt<1>(0), _decodeList_T_493) @[build/NutShell.fir.opt.mlir 6436:23]
    node _decodeList_T_494 = mux(_decodeList_T_247, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6438:28]
    node _decodeList_T_495 = mux(_decodeList_T_245, UInt<3>(7), _decodeList_T_494) @[build/NutShell.fir.opt.mlir 6440:28]
    node _decodeList_T_496 = mux(_decodeList_T_243, UInt<3>(6), _decodeList_T_495) @[build/NutShell.fir.opt.mlir 6442:28]
    node _decodeList_T_497 = mux(_decodeList_T_241, UInt<3>(5), _decodeList_T_496) @[build/NutShell.fir.opt.mlir 6444:28]
    node _decodeList_T_498 = mux(_decodeList_T_239, UInt<2>(3), _decodeList_T_497) @[build/NutShell.fir.opt.mlir 6446:28]
    node _decodeList_T_499 = mux(_decodeList_T_237, UInt<2>(2), _decodeList_T_498) @[build/NutShell.fir.opt.mlir 6448:28]
    node _decodeList_T_500 = mux(_decodeList_T_235, UInt<1>(1), _decodeList_T_499) @[build/NutShell.fir.opt.mlir 6450:28]
    node _decodeList_T_501 = mux(_decodeList_T_233, UInt<6>(50), _decodeList_T_500) @[build/NutShell.fir.opt.mlir 6453:28]
    node _decodeList_T_502 = mux(_decodeList_T_231, UInt<6>(49), _decodeList_T_501) @[build/NutShell.fir.opt.mlir 6456:28]
    node _decodeList_T_503 = mux(_decodeList_T_229, UInt<6>(48), _decodeList_T_502) @[build/NutShell.fir.opt.mlir 6459:28]
    node _decodeList_T_504 = mux(_decodeList_T_227, UInt<6>(55), _decodeList_T_503) @[build/NutShell.fir.opt.mlir 6461:28]
    node _decodeList_T_505 = mux(_decodeList_T_225, UInt<6>(38), _decodeList_T_504) @[build/NutShell.fir.opt.mlir 6464:28]
    node _decodeList_T_506 = mux(_decodeList_T_223, UInt<6>(37), _decodeList_T_505) @[build/NutShell.fir.opt.mlir 6467:28]
    node _decodeList_T_507 = mux(_decodeList_T_221, UInt<6>(36), _decodeList_T_506) @[build/NutShell.fir.opt.mlir 6470:28]
    node _decodeList_T_508 = mux(_decodeList_T_219, UInt<7>(99), _decodeList_T_507) @[build/NutShell.fir.opt.mlir 6472:28]
    node _decodeList_T_509 = mux(_decodeList_T_217, UInt<6>(34), _decodeList_T_508) @[build/NutShell.fir.opt.mlir 6475:28]
    node _decodeList_T_510 = mux(_decodeList_T_215, UInt<6>(33), _decodeList_T_509) @[build/NutShell.fir.opt.mlir 6478:28]
    node _decodeList_T_511 = mux(_decodeList_T_213, UInt<6>(33), _decodeList_T_510) @[build/NutShell.fir.opt.mlir 6480:28]
    node _decodeList_T_512 = mux(_decodeList_T_211, UInt<6>(32), _decodeList_T_511) @[build/NutShell.fir.opt.mlir 6483:28]
    node _decodeList_T_513 = mux(_decodeList_T_209, UInt<6>(32), _decodeList_T_512) @[build/NutShell.fir.opt.mlir 6485:28]
    node _decodeList_T_514 = mux(_decodeList_T_207, UInt<2>(2), _decodeList_T_513) @[build/NutShell.fir.opt.mlir 6487:28]
    node _decodeList_T_515 = mux(_decodeList_T_205, UInt<1>(0), _decodeList_T_514) @[build/NutShell.fir.opt.mlir 6489:28]
    node _decodeList_T_516 = mux(_decodeList_T_203, UInt<7>(64), _decodeList_T_515) @[build/NutShell.fir.opt.mlir 6492:28]
    node _decodeList_T_517 = mux(_decodeList_T_201, UInt<1>(0), _decodeList_T_516) @[build/NutShell.fir.opt.mlir 6494:28]
    node _decodeList_T_518 = mux(_decodeList_T_199, UInt<1>(0), _decodeList_T_517) @[build/NutShell.fir.opt.mlir 6496:28]
    node _decodeList_T_519 = mux(_decodeList_T_197, UInt<1>(0), _decodeList_T_518) @[build/NutShell.fir.opt.mlir 6498:28]
    node _decodeList_T_520 = mux(_decodeList_T_195, UInt<1>(0), _decodeList_T_519) @[build/NutShell.fir.opt.mlir 6500:28]
    node _decodeList_T_521 = mux(_decodeList_T_193, UInt<4>(11), _decodeList_T_520) @[build/NutShell.fir.opt.mlir 6503:28]
    node _decodeList_T_522 = mux(_decodeList_T_191, UInt<4>(10), _decodeList_T_521) @[build/NutShell.fir.opt.mlir 6506:28]
    node _decodeList_T_523 = mux(_decodeList_T_189, UInt<7>(64), _decodeList_T_522) @[build/NutShell.fir.opt.mlir 6508:28]
    node _decodeList_T_524 = mux(_decodeList_T_187, UInt<7>(90), _decodeList_T_523) @[build/NutShell.fir.opt.mlir 6511:28]
    node _decodeList_T_525 = mux(_decodeList_T_185, UInt<1>(0), _decodeList_T_524) @[build/NutShell.fir.opt.mlir 6513:28]
    node _decodeList_T_526 = mux(_decodeList_T_183, UInt<7>(64), _decodeList_T_525) @[build/NutShell.fir.opt.mlir 6515:28]
    node _decodeList_T_527 = mux(_decodeList_T_181, UInt<7>(90), _decodeList_T_526) @[build/NutShell.fir.opt.mlir 6517:28]
    node _decodeList_T_528 = mux(_decodeList_T_179, UInt<2>(3), _decodeList_T_527) @[build/NutShell.fir.opt.mlir 6519:28]
    node _decodeList_T_529 = mux(_decodeList_T_177, UInt<2>(2), _decodeList_T_528) @[build/NutShell.fir.opt.mlir 6521:28]
    node _decodeList_T_530 = mux(_decodeList_T_175, UInt<1>(1), _decodeList_T_529) @[build/NutShell.fir.opt.mlir 6523:28]
    node _decodeList_T_531 = mux(_decodeList_T_173, UInt<5>(17), _decodeList_T_530) @[build/NutShell.fir.opt.mlir 6526:28]
    node _decodeList_T_532 = mux(_decodeList_T_171, UInt<5>(16), _decodeList_T_531) @[build/NutShell.fir.opt.mlir 6529:28]
    node _decodeList_T_533 = mux(_decodeList_T_169, UInt<7>(88), _decodeList_T_532) @[build/NutShell.fir.opt.mlir 6532:28]
    node _decodeList_T_534 = mux(_decodeList_T_167, UInt<7>(96), _decodeList_T_533) @[build/NutShell.fir.opt.mlir 6535:28]
    node _decodeList_T_535 = mux(_decodeList_T_165, UInt<6>(40), _decodeList_T_534) @[build/NutShell.fir.opt.mlir 6538:28]
    node _decodeList_T_536 = mux(_decodeList_T_163, UInt<3>(7), _decodeList_T_535) @[build/NutShell.fir.opt.mlir 6540:28]
    node _decodeList_T_537 = mux(_decodeList_T_161, UInt<3>(6), _decodeList_T_536) @[build/NutShell.fir.opt.mlir 6542:28]
    node _decodeList_T_538 = mux(_decodeList_T_159, UInt<3>(4), _decodeList_T_537) @[build/NutShell.fir.opt.mlir 6544:28]
    node _decodeList_T_539 = mux(_decodeList_T_157, UInt<4>(8), _decodeList_T_538) @[build/NutShell.fir.opt.mlir 6547:28]
    node _decodeList_T_540 = mux(_decodeList_T_155, UInt<3>(7), _decodeList_T_539) @[build/NutShell.fir.opt.mlir 6549:28]
    node _decodeList_T_541 = mux(_decodeList_T_153, UInt<4>(13), _decodeList_T_540) @[build/NutShell.fir.opt.mlir 6552:28]
    node _decodeList_T_542 = mux(_decodeList_T_151, UInt<3>(5), _decodeList_T_541) @[build/NutShell.fir.opt.mlir 6554:28]
    node _decodeList_T_543 = mux(_decodeList_T_149, UInt<7>(64), _decodeList_T_542) @[build/NutShell.fir.opt.mlir 6556:28]
    node _decodeList_T_544 = mux(_decodeList_T_147, UInt<7>(64), _decodeList_T_543) @[build/NutShell.fir.opt.mlir 6558:28]
    node _decodeList_T_545 = mux(_decodeList_T_145, UInt<7>(64), _decodeList_T_544) @[build/NutShell.fir.opt.mlir 6560:28]
    node _decodeList_T_546 = mux(_decodeList_T_143, UInt<7>(96), _decodeList_T_545) @[build/NutShell.fir.opt.mlir 6562:28]
    node _decodeList_T_547 = mux(_decodeList_T_141, UInt<7>(64), _decodeList_T_546) @[build/NutShell.fir.opt.mlir 6564:28]
    node _decodeList_T_548 = mux(_decodeList_T_139, UInt<7>(64), _decodeList_T_547) @[build/NutShell.fir.opt.mlir 6566:28]
    node _decodeList_T_549 = mux(_decodeList_T_137, UInt<4>(11), _decodeList_T_548) @[build/NutShell.fir.opt.mlir 6568:28]
    node _decodeList_T_550 = mux(_decodeList_T_135, UInt<4>(10), _decodeList_T_549) @[build/NutShell.fir.opt.mlir 6570:28]
    node _decodeList_T_551 = mux(_decodeList_T_133, UInt<2>(3), _decodeList_T_550) @[build/NutShell.fir.opt.mlir 6572:28]
    node _decodeList_T_552 = mux(_decodeList_T_131, UInt<2>(2), _decodeList_T_551) @[build/NutShell.fir.opt.mlir 6574:28]
    node _decodeList_T_553 = mux(_decodeList_T_129, UInt<7>(64), _decodeList_T_552) @[build/NutShell.fir.opt.mlir 6576:28]
    node _decodeList_T_554 = mux(_decodeList_T_127, UInt<1>(0), _decodeList_T_553) @[build/NutShell.fir.opt.mlir 6578:28]
    node _decodeList_T_555 = mux(_decodeList_T_125, UInt<4>(15), _decodeList_T_554) @[build/NutShell.fir.opt.mlir 6580:28]
    node _decodeList_T_556 = mux(_decodeList_T_123, UInt<4>(14), _decodeList_T_555) @[build/NutShell.fir.opt.mlir 6583:28]
    node _decodeList_T_557 = mux(_decodeList_T_121, UInt<4>(13), _decodeList_T_556) @[build/NutShell.fir.opt.mlir 6585:28]
    node _decodeList_T_558 = mux(_decodeList_T_119, UInt<4>(12), _decodeList_T_557) @[build/NutShell.fir.opt.mlir 6588:28]
    node _decodeList_T_559 = mux(_decodeList_T_117, UInt<4>(8), _decodeList_T_558) @[build/NutShell.fir.opt.mlir 6590:28]
    node _decodeList_T_560 = mux(_decodeList_T_115, UInt<3>(7), _decodeList_T_559) @[build/NutShell.fir.opt.mlir 6592:28]
    node _decodeList_T_561 = mux(_decodeList_T_113, UInt<3>(6), _decodeList_T_560) @[build/NutShell.fir.opt.mlir 6594:28]
    node _decodeList_T_562 = mux(_decodeList_T_111, UInt<3>(5), _decodeList_T_561) @[build/NutShell.fir.opt.mlir 6596:28]
    node _decodeList_T_563 = mux(_decodeList_T_109, UInt<3>(4), _decodeList_T_562) @[build/NutShell.fir.opt.mlir 6598:28]
    node _decodeList_T_564 = mux(_decodeList_T_107, UInt<2>(3), _decodeList_T_563) @[build/NutShell.fir.opt.mlir 6600:28]
    node _decodeList_T_565 = mux(_decodeList_T_105, UInt<2>(2), _decodeList_T_564) @[build/NutShell.fir.opt.mlir 6602:28]
    node _decodeList_T_566 = mux(_decodeList_T_103, UInt<1>(1), _decodeList_T_565) @[build/NutShell.fir.opt.mlir 6604:28]
    node _decodeList_T_567 = mux(_decodeList_T_101, UInt<1>(0), _decodeList_T_566) @[build/NutShell.fir.opt.mlir 6606:28]
    node _decodeList_T_568 = mux(_decodeList_T_99, UInt<7>(64), _decodeList_T_567) @[build/NutShell.fir.opt.mlir 6608:28]
    node _decodeList_T_569 = mux(_decodeList_T_97, UInt<4>(11), _decodeList_T_568) @[build/NutShell.fir.opt.mlir 6610:28]
    node _decodeList_T_570 = mux(_decodeList_T_95, UInt<2>(3), _decodeList_T_569) @[build/NutShell.fir.opt.mlir 6612:28]
    node _decodeList_T_571 = mux(_decodeList_T_93, UInt<3>(6), _decodeList_T_570) @[build/NutShell.fir.opt.mlir 6614:28]
    node _decodeList_T_572 = mux(_decodeList_T_91, UInt<6>(40), _decodeList_T_571) @[build/NutShell.fir.opt.mlir 6616:28]
    node _decodeList_T_573 = mux(_decodeList_T_89, UInt<7>(96), _decodeList_T_572) @[build/NutShell.fir.opt.mlir 6618:28]
    node _decodeList_T_574 = mux(_decodeList_T_87, UInt<6>(45), _decodeList_T_573) @[build/NutShell.fir.opt.mlir 6621:28]
    node _decodeList_T_575 = mux(_decodeList_T_85, UInt<6>(37), _decodeList_T_574) @[build/NutShell.fir.opt.mlir 6623:28]
    node _decodeList_T_576 = mux(_decodeList_T_83, UInt<6>(33), _decodeList_T_575) @[build/NutShell.fir.opt.mlir 6625:28]
    node _decodeList_T_577 = mux(_decodeList_T_81, UInt<6>(45), _decodeList_T_576) @[build/NutShell.fir.opt.mlir 6627:28]
    node _decodeList_T_578 = mux(_decodeList_T_79, UInt<6>(37), _decodeList_T_577) @[build/NutShell.fir.opt.mlir 6629:28]
    node _decodeList_T_579 = mux(_decodeList_T_77, UInt<6>(33), _decodeList_T_578) @[build/NutShell.fir.opt.mlir 6631:28]
    node _decodeList_T_580 = mux(_decodeList_T_75, UInt<7>(96), _decodeList_T_579) @[build/NutShell.fir.opt.mlir 6633:28]
    node _decodeList_T_581 = mux(_decodeList_T_73, UInt<4>(10), _decodeList_T_580) @[build/NutShell.fir.opt.mlir 6635:28]
    node _decodeList_T_582 = mux(_decodeList_T_71, UInt<4>(9), _decodeList_T_581) @[build/NutShell.fir.opt.mlir 6638:28]
    node _decodeList_T_583 = mux(_decodeList_T_69, UInt<4>(8), _decodeList_T_582) @[build/NutShell.fir.opt.mlir 6640:28]
    node _decodeList_T_584 = mux(_decodeList_T_67, UInt<3>(5), _decodeList_T_583) @[build/NutShell.fir.opt.mlir 6642:28]
    node _decodeList_T_585 = mux(_decodeList_T_65, UInt<3>(4), _decodeList_T_584) @[build/NutShell.fir.opt.mlir 6644:28]
    node _decodeList_T_586 = mux(_decodeList_T_63, UInt<2>(2), _decodeList_T_585) @[build/NutShell.fir.opt.mlir 6646:28]
    node _decodeList_T_587 = mux(_decodeList_T_61, UInt<1>(1), _decodeList_T_586) @[build/NutShell.fir.opt.mlir 6648:28]
    node _decodeList_T_588 = mux(_decodeList_T_59, UInt<1>(0), _decodeList_T_587) @[build/NutShell.fir.opt.mlir 6650:28]
    node _decodeList_T_589 = mux(_decodeList_T_57, UInt<5>(23), _decodeList_T_588) @[build/NutShell.fir.opt.mlir 6652:28]
    node _decodeList_T_590 = mux(_decodeList_T_55, UInt<5>(22), _decodeList_T_589) @[build/NutShell.fir.opt.mlir 6655:28]
    node _decodeList_T_591 = mux(_decodeList_T_53, UInt<5>(21), _decodeList_T_590) @[build/NutShell.fir.opt.mlir 6658:28]
    node _decodeList_T_592 = mux(_decodeList_T_51, UInt<5>(20), _decodeList_T_591) @[build/NutShell.fir.opt.mlir 6661:28]
    node _decodeList_T_593 = mux(_decodeList_T_49, UInt<5>(17), _decodeList_T_592) @[build/NutShell.fir.opt.mlir 6663:28]
    node _decodeList_T_594 = mux(_decodeList_T_47, UInt<5>(16), _decodeList_T_593) @[build/NutShell.fir.opt.mlir 6665:28]
    node _decodeList_T_595 = mux(_decodeList_T_45, UInt<7>(90), _decodeList_T_594) @[build/NutShell.fir.opt.mlir 6667:28]
    node _decodeList_T_596 = mux(_decodeList_T_43, UInt<7>(88), _decodeList_T_595) @[build/NutShell.fir.opt.mlir 6669:28]
    node _decodeList_T_597 = mux(_decodeList_T_41, UInt<7>(64), _decodeList_T_596) @[build/NutShell.fir.opt.mlir 6671:28]
    node _decodeList_T_598 = mux(_decodeList_T_39, UInt<7>(64), _decodeList_T_597) @[build/NutShell.fir.opt.mlir 6673:28]
    node _decodeList_T_599 = mux(_decodeList_T_37, UInt<4>(13), _decodeList_T_598) @[build/NutShell.fir.opt.mlir 6675:28]
    node _decodeList_T_600 = mux(_decodeList_T_35, UInt<4>(8), _decodeList_T_599) @[build/NutShell.fir.opt.mlir 6677:28]
    node _decodeList_T_601 = mux(_decodeList_T_33, UInt<3>(7), _decodeList_T_600) @[build/NutShell.fir.opt.mlir 6679:28]
    node _decodeList_T_602 = mux(_decodeList_T_31, UInt<3>(6), _decodeList_T_601) @[build/NutShell.fir.opt.mlir 6681:28]
    node _decodeList_T_603 = mux(_decodeList_T_29, UInt<3>(5), _decodeList_T_602) @[build/NutShell.fir.opt.mlir 6683:28]
    node _decodeList_T_604 = mux(_decodeList_T_27, UInt<3>(4), _decodeList_T_603) @[build/NutShell.fir.opt.mlir 6685:28]
    node _decodeList_T_605 = mux(_decodeList_T_25, UInt<2>(3), _decodeList_T_604) @[build/NutShell.fir.opt.mlir 6687:28]
    node _decodeList_T_606 = mux(_decodeList_T_23, UInt<2>(2), _decodeList_T_605) @[build/NutShell.fir.opt.mlir 6689:28]
    node _decodeList_T_607 = mux(_decodeList_T_21, UInt<1>(1), _decodeList_T_606) @[build/NutShell.fir.opt.mlir 6691:28]
    node _decodeList_T_608 = mux(_decodeList_T_19, UInt<7>(64), _decodeList_T_607) @[build/NutShell.fir.opt.mlir 6693:28]
    node _decodeList_T_609 = mux(_decodeList_T_17, UInt<4>(13), _decodeList_T_608) @[build/NutShell.fir.opt.mlir 6695:28]
    node _decodeList_T_610 = mux(_decodeList_T_15, UInt<3>(7), _decodeList_T_609) @[build/NutShell.fir.opt.mlir 6697:28]
    node _decodeList_T_611 = mux(_decodeList_T_13, UInt<3>(6), _decodeList_T_610) @[build/NutShell.fir.opt.mlir 6699:28]
    node _decodeList_T_612 = mux(_decodeList_T_11, UInt<3>(5), _decodeList_T_611) @[build/NutShell.fir.opt.mlir 6701:28]
    node _decodeList_T_613 = mux(_decodeList_T_9, UInt<3>(4), _decodeList_T_612) @[build/NutShell.fir.opt.mlir 6703:28]
    node _decodeList_T_614 = mux(_decodeList_T_7, UInt<2>(3), _decodeList_T_613) @[build/NutShell.fir.opt.mlir 6705:28]
    node _decodeList_T_615 = mux(_decodeList_T_5, UInt<2>(2), _decodeList_T_614) @[build/NutShell.fir.opt.mlir 6707:28]
    node _decodeList_T_616 = mux(_decodeList_T_3, UInt<1>(1), _decodeList_T_615) @[build/NutShell.fir.opt.mlir 6709:28]
    node decodeList_2 = mux(_decodeList_T_1, UInt<7>(64), _decodeList_T_616) @[build/NutShell.fir.opt.mlir 6711:23]
    node _T = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6713:13]
    node _T_1 = or(_T, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6715:15]
    node instrType = mux(_T_1, UInt<1>(0), decodeList_0) @[build/NutShell.fir.opt.mlir 6717:20]
    node _T_2 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6719:15]
    node _T_3 = or(_T_2, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6721:15]
    node fuType = mux(_T_3, UInt<2>(3), decodeList_1) @[build/NutShell.fir.opt.mlir 6723:17]
    node _T_4 = or(hasIntr, io.in.bits.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 6725:15]
    node _T_5 = or(_T_4, io.out.bits.cf.exceptionVec[1]) @[build/NutShell.fir.opt.mlir 6727:15]
    node fuOpType = mux(_T_5, UInt<1>(0), decodeList_2) @[build/NutShell.fir.opt.mlir 6729:19]
    node _isRVC_T = bits(io.in.bits.instr, 1, 0) @[build/NutShell.fir.opt.mlir 6731:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 6733:16]
    node _T_6 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6735:15]
    node _T_7 = eq(UInt<1>(0), _T_6) @[build/NutShell.fir.opt.mlir 6737:15]
    node _T_8 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6739:15]
    node _T_9 = eq(UInt<15>(16384), _T_8) @[build/NutShell.fir.opt.mlir 6741:15]
    node _T_10 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6743:16]
    node _T_11 = eq(UInt<15>(24576), _T_10) @[build/NutShell.fir.opt.mlir 6745:16]
    node _T_12 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6747:16]
    node _T_13 = eq(UInt<16>(49152), _T_12) @[build/NutShell.fir.opt.mlir 6749:16]
    node _T_14 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6751:16]
    node _T_15 = eq(UInt<16>(57344), _T_14) @[build/NutShell.fir.opt.mlir 6753:16]
    node _T_16 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 6755:16]
    node _T_17 = eq(UInt<1>(1), _T_16) @[build/NutShell.fir.opt.mlir 6757:16]
    node _T_18 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6759:16]
    node _T_19 = eq(UInt<1>(1), _T_18) @[build/NutShell.fir.opt.mlir 6761:16]
    node _T_20 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6763:16]
    node _T_21 = eq(UInt<14>(8193), _T_20) @[build/NutShell.fir.opt.mlir 6765:16]
    node _T_22 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6767:16]
    node _T_23 = eq(UInt<15>(16385), _T_22) @[build/NutShell.fir.opt.mlir 6769:16]
    node _T_24 = and(io.in.bits.instr, UInt<16>(61315)) @[build/NutShell.fir.opt.mlir 6771:16]
    node _T_25 = eq(UInt<15>(24833), _T_24) @[build/NutShell.fir.opt.mlir 6773:16]
    node _T_26 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6775:16]
    node _T_27 = eq(UInt<15>(24577), _T_26) @[build/NutShell.fir.opt.mlir 6777:16]
    node _T_28 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6779:16]
    node _T_29 = eq(UInt<16>(32769), _T_28) @[build/NutShell.fir.opt.mlir 6781:16]
    node _T_30 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6783:16]
    node _T_31 = eq(UInt<16>(33793), _T_30) @[build/NutShell.fir.opt.mlir 6785:16]
    node _T_32 = and(io.in.bits.instr, UInt<16>(60419)) @[build/NutShell.fir.opt.mlir 6787:16]
    node _T_33 = eq(UInt<16>(34817), _T_32) @[build/NutShell.fir.opt.mlir 6789:16]
    node _T_34 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6791:16]
    node _T_35 = eq(UInt<16>(35841), _T_34) @[build/NutShell.fir.opt.mlir 6793:16]
    node _T_36 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6795:16]
    node _T_37 = eq(UInt<16>(35873), _T_36) @[build/NutShell.fir.opt.mlir 6797:16]
    node _T_38 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6799:16]
    node _T_39 = eq(UInt<16>(35905), _T_38) @[build/NutShell.fir.opt.mlir 6801:16]
    node _T_40 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6803:16]
    node _T_41 = eq(UInt<16>(35937), _T_40) @[build/NutShell.fir.opt.mlir 6805:16]
    node _T_42 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6807:16]
    node _T_43 = eq(UInt<16>(39937), _T_42) @[build/NutShell.fir.opt.mlir 6809:16]
    node _T_44 = and(io.in.bits.instr, UInt<16>(64611)) @[build/NutShell.fir.opt.mlir 6811:16]
    node _T_45 = eq(UInt<16>(39969), _T_44) @[build/NutShell.fir.opt.mlir 6813:16]
    node _T_46 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6815:16]
    node _T_47 = eq(UInt<16>(40961), _T_46) @[build/NutShell.fir.opt.mlir 6817:16]
    node _T_48 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6819:16]
    node _T_49 = eq(UInt<16>(49153), _T_48) @[build/NutShell.fir.opt.mlir 6821:16]
    node _T_50 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6823:16]
    node _T_51 = eq(UInt<16>(57345), _T_50) @[build/NutShell.fir.opt.mlir 6825:16]
    node _T_52 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6827:16]
    node _T_53 = eq(UInt<2>(2), _T_52) @[build/NutShell.fir.opt.mlir 6829:16]
    node _T_54 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6831:16]
    node _T_55 = eq(UInt<15>(16386), _T_54) @[build/NutShell.fir.opt.mlir 6833:16]
    node _T_56 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6835:16]
    node _T_57 = eq(UInt<15>(24578), _T_56) @[build/NutShell.fir.opt.mlir 6837:16]
    node _T_58 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 6839:16]
    node _T_59 = eq(UInt<16>(32770), _T_58) @[build/NutShell.fir.opt.mlir 6841:16]
    node _T_60 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 6843:16]
    node _T_61 = eq(UInt<16>(32770), _T_60) @[build/NutShell.fir.opt.mlir 6845:16]
    node _T_62 = and(io.in.bits.instr, UInt<16>(65535)) @[build/NutShell.fir.opt.mlir 6847:16]
    node _T_63 = eq(UInt<16>(36866), _T_62) @[build/NutShell.fir.opt.mlir 6849:16]
    node _T_64 = and(io.in.bits.instr, UInt<16>(61567)) @[build/NutShell.fir.opt.mlir 6851:16]
    node _T_65 = eq(UInt<16>(36866), _T_64) @[build/NutShell.fir.opt.mlir 6853:16]
    node _T_66 = and(io.in.bits.instr, UInt<16>(61443)) @[build/NutShell.fir.opt.mlir 6855:16]
    node _T_67 = eq(UInt<16>(36866), _T_66) @[build/NutShell.fir.opt.mlir 6857:16]
    node _T_68 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6859:16]
    node _T_69 = eq(UInt<16>(49154), _T_68) @[build/NutShell.fir.opt.mlir 6861:16]
    node _T_70 = and(io.in.bits.instr, UInt<16>(57347)) @[build/NutShell.fir.opt.mlir 6863:16]
    node _T_71 = eq(UInt<16>(57346), _T_70) @[build/NutShell.fir.opt.mlir 6865:16]
    node _T_72 = mux(_T_71, UInt<2>(3), UInt<5>(16)) @[build/NutShell.fir.opt.mlir 6867:16]
    node _T_73 = mux(_T_69, UInt<2>(2), _T_72) @[build/NutShell.fir.opt.mlir 6869:16]
    node _T_74 = mux(_T_67, UInt<5>(16), _T_73) @[build/NutShell.fir.opt.mlir 6871:16]
    node _T_75 = mux(_T_65, UInt<5>(16), _T_74) @[build/NutShell.fir.opt.mlir 6873:16]
    node _T_76 = mux(_T_63, UInt<4>(15), _T_75) @[build/NutShell.fir.opt.mlir 6875:16]
    node _T_77 = mux(_T_61, UInt<5>(16), _T_76) @[build/NutShell.fir.opt.mlir 6877:16]
    node _T_78 = mux(_T_59, UInt<5>(16), _T_77) @[build/NutShell.fir.opt.mlir 6879:16]
    node _T_79 = mux(_T_57, UInt<1>(1), _T_78) @[build/NutShell.fir.opt.mlir 6881:16]
    node _T_80 = mux(_T_55, UInt<1>(0), _T_79) @[build/NutShell.fir.opt.mlir 6883:16]
    node _T_81 = mux(_T_53, UInt<4>(10), _T_80) @[build/NutShell.fir.opt.mlir 6885:16]
    node _T_82 = mux(_T_51, UInt<4>(9), _T_81) @[build/NutShell.fir.opt.mlir 6887:16]
    node _T_83 = mux(_T_49, UInt<4>(9), _T_82) @[build/NutShell.fir.opt.mlir 6889:16]
    node _T_84 = mux(_T_47, UInt<4>(8), _T_83) @[build/NutShell.fir.opt.mlir 6891:16]
    node _T_85 = mux(_T_45, UInt<5>(16), _T_84) @[build/NutShell.fir.opt.mlir 6893:16]
    node _T_86 = mux(_T_43, UInt<5>(16), _T_85) @[build/NutShell.fir.opt.mlir 6895:16]
    node _T_87 = mux(_T_41, UInt<5>(16), _T_86) @[build/NutShell.fir.opt.mlir 6897:16]
    node _T_88 = mux(_T_39, UInt<5>(16), _T_87) @[build/NutShell.fir.opt.mlir 6899:16]
    node _T_89 = mux(_T_37, UInt<5>(16), _T_88) @[build/NutShell.fir.opt.mlir 6901:16]
    node _T_90 = mux(_T_35, UInt<5>(16), _T_89) @[build/NutShell.fir.opt.mlir 6903:16]
    node _T_91 = mux(_T_33, UInt<4>(10), _T_90) @[build/NutShell.fir.opt.mlir 6905:16]
    node _T_92 = mux(_T_31, UInt<4>(10), _T_91) @[build/NutShell.fir.opt.mlir 6907:16]
    node _T_93 = mux(_T_29, UInt<4>(10), _T_92) @[build/NutShell.fir.opt.mlir 6909:16]
    node _T_94 = mux(_T_27, UInt<4>(11), _T_93) @[build/NutShell.fir.opt.mlir 6911:16]
    node _T_95 = mux(_T_25, UInt<4>(13), _T_94) @[build/NutShell.fir.opt.mlir 6913:16]
    node _T_96 = mux(_T_23, UInt<4>(10), _T_95) @[build/NutShell.fir.opt.mlir 6915:16]
    node _T_97 = mux(_T_21, UInt<4>(12), _T_96) @[build/NutShell.fir.opt.mlir 6917:16]
    node _T_98 = mux(_T_19, UInt<4>(12), _T_97) @[build/NutShell.fir.opt.mlir 6919:16]
    node _T_99 = mux(_T_17, UInt<5>(16), _T_98) @[build/NutShell.fir.opt.mlir 6921:16]
    node _T_100 = mux(_T_15, UInt<3>(5), _T_99) @[build/NutShell.fir.opt.mlir 6923:17]
    node _T_101 = mux(_T_13, UInt<3>(4), _T_100) @[build/NutShell.fir.opt.mlir 6925:17]
    node _T_102 = mux(_T_11, UInt<3>(7), _T_101) @[build/NutShell.fir.opt.mlir 6927:17]
    node _T_103 = mux(_T_9, UInt<3>(6), _T_102) @[build/NutShell.fir.opt.mlir 6929:17]
    node rvcImmType = mux(_T_7, UInt<4>(14), _T_103) @[build/NutShell.fir.opt.mlir 6931:21]
    node _T_104 = mux(_T_71, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6933:17]
    node _T_105 = mux(_T_69, UInt<4>(9), _T_104) @[build/NutShell.fir.opt.mlir 6935:17]
    node _T_106 = mux(_T_67, UInt<2>(2), _T_105) @[build/NutShell.fir.opt.mlir 6937:17]
    node _T_107 = mux(_T_65, UInt<3>(4), _T_106) @[build/NutShell.fir.opt.mlir 6939:17]
    node _T_108 = mux(_T_63, UInt<1>(0), _T_107) @[build/NutShell.fir.opt.mlir 6941:17]
    node _T_109 = mux(_T_61, UInt<3>(5), _T_108) @[build/NutShell.fir.opt.mlir 6943:17]
    node _T_110 = mux(_T_59, UInt<3>(4), _T_109) @[build/NutShell.fir.opt.mlir 6945:17]
    node _T_111 = mux(_T_57, UInt<4>(9), _T_110) @[build/NutShell.fir.opt.mlir 6947:17]
    node _T_112 = mux(_T_55, UInt<4>(9), _T_111) @[build/NutShell.fir.opt.mlir 6949:17]
    node _T_113 = mux(_T_53, UInt<2>(2), _T_112) @[build/NutShell.fir.opt.mlir 6951:17]
    node _T_114 = mux(_T_51, UInt<3>(6), _T_113) @[build/NutShell.fir.opt.mlir 6953:17]
    node _T_115 = mux(_T_49, UInt<3>(6), _T_114) @[build/NutShell.fir.opt.mlir 6955:17]
    node _T_116 = mux(_T_47, UInt<1>(0), _T_115) @[build/NutShell.fir.opt.mlir 6957:17]
    node _T_117 = mux(_T_45, UInt<3>(6), _T_116) @[build/NutShell.fir.opt.mlir 6959:17]
    node _T_118 = mux(_T_43, UInt<3>(6), _T_117) @[build/NutShell.fir.opt.mlir 6961:17]
    node _T_119 = mux(_T_41, UInt<3>(6), _T_118) @[build/NutShell.fir.opt.mlir 6963:17]
    node _T_120 = mux(_T_39, UInt<3>(6), _T_119) @[build/NutShell.fir.opt.mlir 6965:17]
    node _T_121 = mux(_T_37, UInt<3>(6), _T_120) @[build/NutShell.fir.opt.mlir 6967:17]
    node _T_122 = mux(_T_35, UInt<3>(6), _T_121) @[build/NutShell.fir.opt.mlir 6969:17]
    node _T_123 = mux(_T_33, UInt<3>(6), _T_122) @[build/NutShell.fir.opt.mlir 6971:17]
    node _T_124 = mux(_T_31, UInt<3>(6), _T_123) @[build/NutShell.fir.opt.mlir 6973:17]
    node _T_125 = mux(_T_29, UInt<3>(6), _T_124) @[build/NutShell.fir.opt.mlir 6975:17]
    node _T_126 = mux(_T_27, UInt<1>(0), _T_125) @[build/NutShell.fir.opt.mlir 6977:17]
    node _T_127 = mux(_T_25, UInt<4>(9), _T_126) @[build/NutShell.fir.opt.mlir 6979:17]
    node _T_128 = mux(_T_23, UInt<1>(0), _T_127) @[build/NutShell.fir.opt.mlir 6981:17]
    node _T_129 = mux(_T_21, UInt<2>(2), _T_128) @[build/NutShell.fir.opt.mlir 6983:17]
    node _T_130 = mux(_T_19, UInt<2>(2), _T_129) @[build/NutShell.fir.opt.mlir 6985:17]
    node _T_131 = mux(_T_17, UInt<1>(0), _T_130) @[build/NutShell.fir.opt.mlir 6987:17]
    node _T_132 = mux(_T_15, UInt<3>(6), _T_131) @[build/NutShell.fir.opt.mlir 6989:17]
    node _T_133 = mux(_T_13, UInt<3>(6), _T_132) @[build/NutShell.fir.opt.mlir 6991:17]
    node _T_134 = mux(_T_11, UInt<3>(6), _T_133) @[build/NutShell.fir.opt.mlir 6993:17]
    node _T_135 = mux(_T_9, UInt<3>(6), _T_134) @[build/NutShell.fir.opt.mlir 6995:17]
    node rvcSrc1Type = mux(_T_7, UInt<4>(9), _T_135) @[build/NutShell.fir.opt.mlir 6997:22]
    node _T_136 = mux(_T_71, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 6999:17]
    node _T_137 = mux(_T_69, UInt<3>(5), _T_136) @[build/NutShell.fir.opt.mlir 7001:17]
    node _T_138 = mux(_T_67, UInt<3>(5), _T_137) @[build/NutShell.fir.opt.mlir 7003:17]
    node _T_139 = mux(_T_65, UInt<1>(0), _T_138) @[build/NutShell.fir.opt.mlir 7005:17]
    node _T_140 = mux(_T_63, UInt<1>(0), _T_139) @[build/NutShell.fir.opt.mlir 7007:17]
    node _T_141 = mux(_T_61, UInt<1>(0), _T_140) @[build/NutShell.fir.opt.mlir 7009:17]
    node _T_142 = mux(_T_59, UInt<1>(0), _T_141) @[build/NutShell.fir.opt.mlir 7011:17]
    node _T_143 = mux(_T_57, UInt<1>(0), _T_142) @[build/NutShell.fir.opt.mlir 7013:17]
    node _T_144 = mux(_T_55, UInt<1>(0), _T_143) @[build/NutShell.fir.opt.mlir 7015:17]
    node _T_145 = mux(_T_53, UInt<1>(0), _T_144) @[build/NutShell.fir.opt.mlir 7017:17]
    node _T_146 = mux(_T_51, UInt<1>(0), _T_145) @[build/NutShell.fir.opt.mlir 7019:17]
    node _T_147 = mux(_T_49, UInt<1>(0), _T_146) @[build/NutShell.fir.opt.mlir 7021:17]
    node _T_148 = mux(_T_47, UInt<1>(0), _T_147) @[build/NutShell.fir.opt.mlir 7023:17]
    node _T_149 = mux(_T_45, UInt<3>(7), _T_148) @[build/NutShell.fir.opt.mlir 7025:17]
    node _T_150 = mux(_T_43, UInt<3>(7), _T_149) @[build/NutShell.fir.opt.mlir 7027:17]
    node _T_151 = mux(_T_41, UInt<3>(7), _T_150) @[build/NutShell.fir.opt.mlir 7029:17]
    node _T_152 = mux(_T_39, UInt<3>(7), _T_151) @[build/NutShell.fir.opt.mlir 7031:17]
    node _T_153 = mux(_T_37, UInt<3>(7), _T_152) @[build/NutShell.fir.opt.mlir 7033:17]
    node _T_154 = mux(_T_35, UInt<3>(7), _T_153) @[build/NutShell.fir.opt.mlir 7035:17]
    node _T_155 = mux(_T_33, UInt<1>(0), _T_154) @[build/NutShell.fir.opt.mlir 7037:17]
    node _T_156 = mux(_T_31, UInt<1>(0), _T_155) @[build/NutShell.fir.opt.mlir 7039:17]
    node _T_157 = mux(_T_29, UInt<1>(0), _T_156) @[build/NutShell.fir.opt.mlir 7041:17]
    node _T_158 = mux(_T_27, UInt<1>(0), _T_157) @[build/NutShell.fir.opt.mlir 7043:17]
    node _T_159 = mux(_T_25, UInt<1>(0), _T_158) @[build/NutShell.fir.opt.mlir 7045:17]
    node _T_160 = mux(_T_23, UInt<1>(0), _T_159) @[build/NutShell.fir.opt.mlir 7047:17]
    node _T_161 = mux(_T_21, UInt<1>(0), _T_160) @[build/NutShell.fir.opt.mlir 7049:17]
    node _T_162 = mux(_T_19, UInt<1>(0), _T_161) @[build/NutShell.fir.opt.mlir 7051:17]
    node _T_163 = mux(_T_17, UInt<1>(0), _T_162) @[build/NutShell.fir.opt.mlir 7053:17]
    node _T_164 = mux(_T_15, UInt<3>(7), _T_163) @[build/NutShell.fir.opt.mlir 7055:17]
    node _T_165 = mux(_T_13, UInt<3>(7), _T_164) @[build/NutShell.fir.opt.mlir 7057:17]
    node _T_166 = mux(_T_11, UInt<1>(0), _T_165) @[build/NutShell.fir.opt.mlir 7059:17]
    node _T_167 = mux(_T_9, UInt<1>(0), _T_166) @[build/NutShell.fir.opt.mlir 7061:17]
    node rvcSrc2Type = mux(_T_7, UInt<1>(0), _T_167) @[build/NutShell.fir.opt.mlir 7063:22]
    node _T_168 = mux(_T_71, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7065:17]
    node _T_169 = mux(_T_69, UInt<1>(0), _T_168) @[build/NutShell.fir.opt.mlir 7067:17]
    node _T_170 = mux(_T_67, UInt<2>(2), _T_169) @[build/NutShell.fir.opt.mlir 7069:17]
    node _T_171 = mux(_T_65, UInt<4>(8), _T_170) @[build/NutShell.fir.opt.mlir 7071:17]
    node _T_172 = mux(_T_63, UInt<1>(0), _T_171) @[build/NutShell.fir.opt.mlir 7073:17]
    node _T_173 = mux(_T_61, UInt<2>(2), _T_172) @[build/NutShell.fir.opt.mlir 7075:17]
    node _T_174 = mux(_T_59, UInt<1>(0), _T_173) @[build/NutShell.fir.opt.mlir 7077:17]
    node _T_175 = mux(_T_57, UInt<2>(2), _T_174) @[build/NutShell.fir.opt.mlir 7079:17]
    node _T_176 = mux(_T_55, UInt<2>(2), _T_175) @[build/NutShell.fir.opt.mlir 7081:17]
    node _T_177 = mux(_T_53, UInt<2>(2), _T_176) @[build/NutShell.fir.opt.mlir 7083:17]
    node _T_178 = mux(_T_51, UInt<1>(0), _T_177) @[build/NutShell.fir.opt.mlir 7085:17]
    node _T_179 = mux(_T_49, UInt<1>(0), _T_178) @[build/NutShell.fir.opt.mlir 7087:17]
    node _T_180 = mux(_T_47, UInt<1>(0), _T_179) @[build/NutShell.fir.opt.mlir 7089:17]
    node _T_181 = mux(_T_45, UInt<3>(6), _T_180) @[build/NutShell.fir.opt.mlir 7091:17]
    node _T_182 = mux(_T_43, UInt<3>(6), _T_181) @[build/NutShell.fir.opt.mlir 7093:17]
    node _T_183 = mux(_T_41, UInt<3>(6), _T_182) @[build/NutShell.fir.opt.mlir 7095:17]
    node _T_184 = mux(_T_39, UInt<3>(6), _T_183) @[build/NutShell.fir.opt.mlir 7097:17]
    node _T_185 = mux(_T_37, UInt<3>(6), _T_184) @[build/NutShell.fir.opt.mlir 7099:17]
    node _T_186 = mux(_T_35, UInt<3>(6), _T_185) @[build/NutShell.fir.opt.mlir 7101:17]
    node _T_187 = mux(_T_33, UInt<3>(6), _T_186) @[build/NutShell.fir.opt.mlir 7103:17]
    node _T_188 = mux(_T_31, UInt<3>(6), _T_187) @[build/NutShell.fir.opt.mlir 7105:17]
    node _T_189 = mux(_T_29, UInt<3>(6), _T_188) @[build/NutShell.fir.opt.mlir 7107:17]
    node _T_190 = mux(_T_27, UInt<2>(2), _T_189) @[build/NutShell.fir.opt.mlir 7109:17]
    node _T_191 = mux(_T_25, UInt<4>(9), _T_190) @[build/NutShell.fir.opt.mlir 7111:17]
    node _T_192 = mux(_T_23, UInt<2>(2), _T_191) @[build/NutShell.fir.opt.mlir 7113:17]
    node _T_193 = mux(_T_21, UInt<2>(2), _T_192) @[build/NutShell.fir.opt.mlir 7115:17]
    node _T_194 = mux(_T_19, UInt<2>(2), _T_193) @[build/NutShell.fir.opt.mlir 7117:17]
    node _T_195 = mux(_T_17, UInt<1>(0), _T_194) @[build/NutShell.fir.opt.mlir 7119:17]
    node _T_196 = mux(_T_15, UInt<1>(0), _T_195) @[build/NutShell.fir.opt.mlir 7121:17]
    node _T_197 = mux(_T_13, UInt<1>(0), _T_196) @[build/NutShell.fir.opt.mlir 7123:17]
    node _T_198 = mux(_T_11, UInt<3>(7), _T_197) @[build/NutShell.fir.opt.mlir 7125:17]
    node _T_199 = mux(_T_9, UInt<3>(7), _T_198) @[build/NutShell.fir.opt.mlir 7127:17]
    node rvcDestType = mux(_T_7, UInt<3>(7), _T_199) @[build/NutShell.fir.opt.mlir 7129:22]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 7131:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 7133:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 7135:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 7137:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 7139:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 7141:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 7143:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 7145:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 7147:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 7149:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 7151:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 7153:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 7155:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 7157:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 7159:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 7161:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 7163:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 7165:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 7167:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 7169:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 7171:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 7173:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 7175:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 7177:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 7179:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 7181:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 7183:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 7185:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 7187:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 7189:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 7191:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 7193:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 7195:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 7197:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 7199:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 7201:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 7203:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 7205:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 7207:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 7209:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 7211:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 7213:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 7215:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 7217:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 7219:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 7221:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 7223:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 7225:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 7227:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 7229:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 7231:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 7233:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 7235:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 7237:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 7239:7]
    connect io.out.bits.ctrl.fuType, fuType @[build/NutShell.fir.opt.mlir 7240:7]
    connect io.out.bits.ctrl.fuOpType, fuOpType @[build/NutShell.fir.opt.mlir 7241:7]
    node _src1Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7243:22]
    node _src1Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 7245:24]
    node _src1Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7247:24]
    node _src1Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7249:24]
    node _src1Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7251:24]
    node _src1Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7253:24]
    node _src1Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7255:24]
    node _src1Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 7257:24]
    node _src1Type_T_8 = mux(_src1Type_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7259:24]
    node _src1Type_T_9 = mux(_src1Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7261:24]
    node _src1Type_T_10 = mux(_src1Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7263:25]
    node _src1Type_T_11 = mux(_src1Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7265:25]
    node _src1Type_T_12 = mux(_src1Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7267:25]
    node _src1Type_T_13 = mux(_src1Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7269:25]
    node _src1Type_T_14 = mux(_src1Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7271:25]
    node _src1Type_T_15 = mux(_src1Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7273:25]
    node _src1Type_T_16 = or(_src1Type_T_8, _src1Type_T_9) @[build/NutShell.fir.opt.mlir 7275:25]
    node _src1Type_T_17 = or(_src1Type_T_16, _src1Type_T_10) @[build/NutShell.fir.opt.mlir 7277:25]
    node _src1Type_T_18 = or(_src1Type_T_17, _src1Type_T_11) @[build/NutShell.fir.opt.mlir 7279:25]
    node _src1Type_T_19 = or(_src1Type_T_18, _src1Type_T_12) @[build/NutShell.fir.opt.mlir 7281:25]
    node _src1Type_T_20 = or(_src1Type_T_19, _src1Type_T_13) @[build/NutShell.fir.opt.mlir 7283:25]
    node _src1Type_T_21 = or(_src1Type_T_20, _src1Type_T_14) @[build/NutShell.fir.opt.mlir 7285:25]
    node _src1Type_T_22 = or(_src1Type_T_21, _src1Type_T_15) @[build/NutShell.fir.opt.mlir 7287:25]
    wire src1Type : UInt<1> @[build/NutShell.fir.opt.mlir 7288:19]
    connect src1Type, _src1Type_T_22 @[build/NutShell.fir.opt.mlir 7289:7]
    node _src2Type_T = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7291:22]
    node _src2Type_T_1 = eq(UInt<3>(5), instrType) @[build/NutShell.fir.opt.mlir 7293:24]
    node _src2Type_T_2 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7295:24]
    node _src2Type_T_3 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7297:24]
    node _src2Type_T_4 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7299:24]
    node _src2Type_T_5 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7301:24]
    node _src2Type_T_6 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7303:24]
    node _src2Type_T_7 = eq(UInt<1>(0), instrType) @[build/NutShell.fir.opt.mlir 7305:24]
    node _src2Type_T_8 = mux(_src2Type_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7307:24]
    node _src2Type_T_9 = mux(_src2Type_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7309:24]
    node _src2Type_T_10 = mux(_src2Type_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7311:25]
    node _src2Type_T_11 = mux(_src2Type_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7313:25]
    node _src2Type_T_12 = mux(_src2Type_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7315:25]
    node _src2Type_T_13 = mux(_src2Type_T_5, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7317:25]
    node _src2Type_T_14 = mux(_src2Type_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7319:25]
    node _src2Type_T_15 = mux(_src2Type_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7321:25]
    node _src2Type_T_16 = or(_src2Type_T_8, _src2Type_T_9) @[build/NutShell.fir.opt.mlir 7323:25]
    node _src2Type_T_17 = or(_src2Type_T_16, _src2Type_T_10) @[build/NutShell.fir.opt.mlir 7325:25]
    node _src2Type_T_18 = or(_src2Type_T_17, _src2Type_T_11) @[build/NutShell.fir.opt.mlir 7327:25]
    node _src2Type_T_19 = or(_src2Type_T_18, _src2Type_T_12) @[build/NutShell.fir.opt.mlir 7329:25]
    node _src2Type_T_20 = or(_src2Type_T_19, _src2Type_T_13) @[build/NutShell.fir.opt.mlir 7331:25]
    node _src2Type_T_21 = or(_src2Type_T_20, _src2Type_T_14) @[build/NutShell.fir.opt.mlir 7333:25]
    node _src2Type_T_22 = or(_src2Type_T_21, _src2Type_T_15) @[build/NutShell.fir.opt.mlir 7335:25]
    wire src2Type : UInt<1> @[build/NutShell.fir.opt.mlir 7336:19]
    connect src2Type, _src2Type_T_22 @[build/NutShell.fir.opt.mlir 7337:7]
    node rs = bits(io.in.bits.instr, 19, 15) @[build/NutShell.fir.opt.mlir 7339:13]
    node rt = bits(io.in.bits.instr, 24, 20) @[build/NutShell.fir.opt.mlir 7341:13]
    node rd = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7343:13]
    node rs1 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7345:14]
    node rs2 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7347:14]
    node _rs1p_T = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 7349:18]
    node _rs1p_T_1 = eq(UInt<1>(0), _rs1p_T) @[build/NutShell.fir.opt.mlir 7351:20]
    node _rs1p_T_2 = eq(UInt<1>(1), _rs1p_T) @[build/NutShell.fir.opt.mlir 7353:20]
    node _rs1p_T_3 = eq(UInt<2>(2), _rs1p_T) @[build/NutShell.fir.opt.mlir 7355:20]
    node _rs1p_T_4 = eq(UInt<2>(3), _rs1p_T) @[build/NutShell.fir.opt.mlir 7357:20]
    node _rs1p_T_5 = eq(UInt<3>(4), _rs1p_T) @[build/NutShell.fir.opt.mlir 7359:20]
    node _rs1p_T_6 = eq(UInt<3>(5), _rs1p_T) @[build/NutShell.fir.opt.mlir 7361:20]
    node _rs1p_T_7 = eq(UInt<3>(6), _rs1p_T) @[build/NutShell.fir.opt.mlir 7363:20]
    node _rs1p_T_8 = eq(UInt<3>(7), _rs1p_T) @[build/NutShell.fir.opt.mlir 7365:20]
    node _rs1p_T_9 = mux(_rs1p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7367:20]
    node _rs1p_T_10 = mux(_rs1p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7369:21]
    node _rs1p_T_11 = mux(_rs1p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7371:21]
    node _rs1p_T_12 = mux(_rs1p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7373:21]
    node _rs1p_T_13 = mux(_rs1p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7375:21]
    node _rs1p_T_14 = mux(_rs1p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7377:21]
    node _rs1p_T_15 = mux(_rs1p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7379:21]
    node _rs1p_T_16 = mux(_rs1p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7381:21]
    node _rs1p_T_17 = or(_rs1p_T_9, _rs1p_T_10) @[build/NutShell.fir.opt.mlir 7383:21]
    node _rs1p_T_18 = or(_rs1p_T_17, _rs1p_T_11) @[build/NutShell.fir.opt.mlir 7385:21]
    node _rs1p_T_19 = or(_rs1p_T_18, _rs1p_T_12) @[build/NutShell.fir.opt.mlir 7387:21]
    node _rs1p_T_20 = or(_rs1p_T_19, _rs1p_T_13) @[build/NutShell.fir.opt.mlir 7389:21]
    node _rs1p_T_21 = or(_rs1p_T_20, _rs1p_T_14) @[build/NutShell.fir.opt.mlir 7391:21]
    node _rs1p_T_22 = or(_rs1p_T_21, _rs1p_T_15) @[build/NutShell.fir.opt.mlir 7393:21]
    node _rs1p_T_23 = or(_rs1p_T_22, _rs1p_T_16) @[build/NutShell.fir.opt.mlir 7395:21]
    wire rs1p : UInt<4> @[build/NutShell.fir.opt.mlir 7396:15]
    connect rs1p, _rs1p_T_23 @[build/NutShell.fir.opt.mlir 7397:7]
    node _rs2p_T = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 7399:18]
    node _rs2p_T_1 = eq(UInt<1>(0), _rs2p_T) @[build/NutShell.fir.opt.mlir 7401:20]
    node _rs2p_T_2 = eq(UInt<1>(1), _rs2p_T) @[build/NutShell.fir.opt.mlir 7403:20]
    node _rs2p_T_3 = eq(UInt<2>(2), _rs2p_T) @[build/NutShell.fir.opt.mlir 7405:20]
    node _rs2p_T_4 = eq(UInt<2>(3), _rs2p_T) @[build/NutShell.fir.opt.mlir 7407:20]
    node _rs2p_T_5 = eq(UInt<3>(4), _rs2p_T) @[build/NutShell.fir.opt.mlir 7409:20]
    node _rs2p_T_6 = eq(UInt<3>(5), _rs2p_T) @[build/NutShell.fir.opt.mlir 7411:20]
    node _rs2p_T_7 = eq(UInt<3>(6), _rs2p_T) @[build/NutShell.fir.opt.mlir 7413:20]
    node _rs2p_T_8 = eq(UInt<3>(7), _rs2p_T) @[build/NutShell.fir.opt.mlir 7415:20]
    node _rs2p_T_9 = mux(_rs2p_T_1, UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7417:20]
    node _rs2p_T_10 = mux(_rs2p_T_2, UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7419:21]
    node _rs2p_T_11 = mux(_rs2p_T_3, UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7421:21]
    node _rs2p_T_12 = mux(_rs2p_T_4, UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7423:21]
    node _rs2p_T_13 = mux(_rs2p_T_5, UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7425:21]
    node _rs2p_T_14 = mux(_rs2p_T_6, UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7427:21]
    node _rs2p_T_15 = mux(_rs2p_T_7, UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7429:21]
    node _rs2p_T_16 = mux(_rs2p_T_8, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7431:21]
    node _rs2p_T_17 = or(_rs2p_T_9, _rs2p_T_10) @[build/NutShell.fir.opt.mlir 7433:21]
    node _rs2p_T_18 = or(_rs2p_T_17, _rs2p_T_11) @[build/NutShell.fir.opt.mlir 7435:21]
    node _rs2p_T_19 = or(_rs2p_T_18, _rs2p_T_12) @[build/NutShell.fir.opt.mlir 7437:21]
    node _rs2p_T_20 = or(_rs2p_T_19, _rs2p_T_13) @[build/NutShell.fir.opt.mlir 7439:21]
    node _rs2p_T_21 = or(_rs2p_T_20, _rs2p_T_14) @[build/NutShell.fir.opt.mlir 7441:21]
    node _rs2p_T_22 = or(_rs2p_T_21, _rs2p_T_15) @[build/NutShell.fir.opt.mlir 7443:21]
    node _rs2p_T_23 = or(_rs2p_T_22, _rs2p_T_16) @[build/NutShell.fir.opt.mlir 7445:21]
    wire rs2p : UInt<4> @[build/NutShell.fir.opt.mlir 7446:15]
    connect rs2p, _rs2p_T_23 @[build/NutShell.fir.opt.mlir 7447:7]
    node _rvc_shamt_T = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7449:23]
    node _rvc_shamt_T_1 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7451:25]
    node rvc_shamt = cat(_rvc_shamt_T, _rvc_shamt_T_1) @[build/NutShell.fir.opt.mlir 7453:20]
    node _rvc_src1_T = eq(UInt<1>(0), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7455:22]
    node _rvc_src1_T_1 = eq(UInt<2>(3), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7457:24]
    node _rvc_src1_T_2 = eq(UInt<1>(1), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7459:24]
    node _rvc_src1_T_3 = eq(UInt<2>(2), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7461:24]
    node _rvc_src1_T_4 = eq(UInt<3>(4), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7463:24]
    node _rvc_src1_T_5 = eq(UInt<3>(5), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7465:24]
    node _rvc_src1_T_6 = eq(UInt<3>(6), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7467:24]
    node _rvc_src1_T_7 = eq(UInt<3>(7), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7469:24]
    node _rvc_src1_T_8 = eq(UInt<4>(8), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7471:24]
    node _rvc_src1_T_9 = eq(UInt<4>(9), rvcSrc1Type) @[build/NutShell.fir.opt.mlir 7473:24]
    node _rvc_src1_T_10 = mux(_rvc_src1_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7475:25]
    node _rvc_src1_T_11 = mux(_rvc_src1_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7477:25]
    node _rvc_src1_T_12 = mux(_rvc_src1_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7479:25]
    node _rvc_src1_T_13 = mux(_rvc_src1_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7481:25]
    node _rvc_src1_T_14 = mux(_rvc_src1_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7483:25]
    node _rvc_src1_T_15 = mux(_rvc_src1_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7485:25]
    node _rvc_src1_T_16 = mux(_rvc_src1_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7487:25]
    node _rvc_src1_T_17 = mux(_rvc_src1_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7489:25]
    node _rvc_src1_T_18 = mux(_rvc_src1_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7491:25]
    node _rvc_src1_T_19 = mux(_rvc_src1_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7493:25]
    node _rvc_src1_T_20 = or(_rvc_src1_T_10, _rvc_src1_T_11) @[build/NutShell.fir.opt.mlir 7495:25]
    node _rvc_src1_T_21 = or(_rvc_src1_T_20, _rvc_src1_T_12) @[build/NutShell.fir.opt.mlir 7497:25]
    node _rvc_src1_T_22 = or(_rvc_src1_T_21, _rvc_src1_T_13) @[build/NutShell.fir.opt.mlir 7499:25]
    node _rvc_src1_T_23 = or(_rvc_src1_T_22, _rvc_src1_T_14) @[build/NutShell.fir.opt.mlir 7501:25]
    node _rvc_src1_T_24 = or(_rvc_src1_T_23, _rvc_src1_T_15) @[build/NutShell.fir.opt.mlir 7503:25]
    node _rvc_src1_T_25 = or(_rvc_src1_T_24, _rvc_src1_T_16) @[build/NutShell.fir.opt.mlir 7505:25]
    node _rvc_src1_T_26 = or(_rvc_src1_T_25, _rvc_src1_T_17) @[build/NutShell.fir.opt.mlir 7507:25]
    node _rvc_src1_T_27 = or(_rvc_src1_T_26, _rvc_src1_T_18) @[build/NutShell.fir.opt.mlir 7509:25]
    node _rvc_src1_T_28 = or(_rvc_src1_T_27, _rvc_src1_T_19) @[build/NutShell.fir.opt.mlir 7511:25]
    wire rvc_src1 : UInt<5> @[build/NutShell.fir.opt.mlir 7512:19]
    connect rvc_src1, _rvc_src1_T_28 @[build/NutShell.fir.opt.mlir 7513:7]
    node _rvc_src2_T = eq(UInt<1>(0), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7515:22]
    node _rvc_src2_T_1 = eq(UInt<2>(3), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7517:24]
    node _rvc_src2_T_2 = eq(UInt<1>(1), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7519:24]
    node _rvc_src2_T_3 = eq(UInt<2>(2), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7521:24]
    node _rvc_src2_T_4 = eq(UInt<3>(4), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7523:24]
    node _rvc_src2_T_5 = eq(UInt<3>(5), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7525:24]
    node _rvc_src2_T_6 = eq(UInt<3>(6), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7527:24]
    node _rvc_src2_T_7 = eq(UInt<3>(7), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7529:24]
    node _rvc_src2_T_8 = eq(UInt<4>(8), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7531:24]
    node _rvc_src2_T_9 = eq(UInt<4>(9), rvcSrc2Type) @[build/NutShell.fir.opt.mlir 7533:24]
    node _rvc_src2_T_10 = mux(_rvc_src2_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7535:25]
    node _rvc_src2_T_11 = mux(_rvc_src2_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7537:25]
    node _rvc_src2_T_12 = mux(_rvc_src2_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7539:25]
    node _rvc_src2_T_13 = mux(_rvc_src2_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7541:25]
    node _rvc_src2_T_14 = mux(_rvc_src2_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7543:25]
    node _rvc_src2_T_15 = mux(_rvc_src2_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7545:25]
    node _rvc_src2_T_16 = mux(_rvc_src2_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7547:25]
    node _rvc_src2_T_17 = mux(_rvc_src2_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7549:25]
    node _rvc_src2_T_18 = mux(_rvc_src2_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7551:25]
    node _rvc_src2_T_19 = mux(_rvc_src2_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7553:25]
    node _rvc_src2_T_20 = or(_rvc_src2_T_10, _rvc_src2_T_11) @[build/NutShell.fir.opt.mlir 7555:25]
    node _rvc_src2_T_21 = or(_rvc_src2_T_20, _rvc_src2_T_12) @[build/NutShell.fir.opt.mlir 7557:25]
    node _rvc_src2_T_22 = or(_rvc_src2_T_21, _rvc_src2_T_13) @[build/NutShell.fir.opt.mlir 7559:25]
    node _rvc_src2_T_23 = or(_rvc_src2_T_22, _rvc_src2_T_14) @[build/NutShell.fir.opt.mlir 7561:25]
    node _rvc_src2_T_24 = or(_rvc_src2_T_23, _rvc_src2_T_15) @[build/NutShell.fir.opt.mlir 7563:25]
    node _rvc_src2_T_25 = or(_rvc_src2_T_24, _rvc_src2_T_16) @[build/NutShell.fir.opt.mlir 7565:25]
    node _rvc_src2_T_26 = or(_rvc_src2_T_25, _rvc_src2_T_17) @[build/NutShell.fir.opt.mlir 7567:25]
    node _rvc_src2_T_27 = or(_rvc_src2_T_26, _rvc_src2_T_18) @[build/NutShell.fir.opt.mlir 7569:25]
    node _rvc_src2_T_28 = or(_rvc_src2_T_27, _rvc_src2_T_19) @[build/NutShell.fir.opt.mlir 7571:25]
    wire rvc_src2 : UInt<5> @[build/NutShell.fir.opt.mlir 7572:19]
    connect rvc_src2, _rvc_src2_T_28 @[build/NutShell.fir.opt.mlir 7573:7]
    node _rvc_dest_T = eq(UInt<1>(0), rvcDestType) @[build/NutShell.fir.opt.mlir 7575:22]
    node _rvc_dest_T_1 = eq(UInt<2>(3), rvcDestType) @[build/NutShell.fir.opt.mlir 7577:24]
    node _rvc_dest_T_2 = eq(UInt<1>(1), rvcDestType) @[build/NutShell.fir.opt.mlir 7579:24]
    node _rvc_dest_T_3 = eq(UInt<2>(2), rvcDestType) @[build/NutShell.fir.opt.mlir 7581:24]
    node _rvc_dest_T_4 = eq(UInt<3>(4), rvcDestType) @[build/NutShell.fir.opt.mlir 7583:24]
    node _rvc_dest_T_5 = eq(UInt<3>(5), rvcDestType) @[build/NutShell.fir.opt.mlir 7585:24]
    node _rvc_dest_T_6 = eq(UInt<3>(6), rvcDestType) @[build/NutShell.fir.opt.mlir 7587:24]
    node _rvc_dest_T_7 = eq(UInt<3>(7), rvcDestType) @[build/NutShell.fir.opt.mlir 7589:24]
    node _rvc_dest_T_8 = eq(UInt<4>(8), rvcDestType) @[build/NutShell.fir.opt.mlir 7591:24]
    node _rvc_dest_T_9 = eq(UInt<4>(9), rvcDestType) @[build/NutShell.fir.opt.mlir 7593:24]
    node _rvc_dest_T_10 = mux(_rvc_dest_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7595:25]
    node _rvc_dest_T_11 = mux(_rvc_dest_T_1, rs, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7597:25]
    node _rvc_dest_T_12 = mux(_rvc_dest_T_2, rt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7599:25]
    node _rvc_dest_T_13 = mux(_rvc_dest_T_3, rd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7601:25]
    node _rvc_dest_T_14 = mux(_rvc_dest_T_4, rs1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7603:25]
    node _rvc_dest_T_15 = mux(_rvc_dest_T_5, rs2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7605:25]
    node _rvc_dest_T_16 = mux(_rvc_dest_T_6, rs1p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7607:25]
    node _rvc_dest_T_17 = mux(_rvc_dest_T_7, rs2p, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7609:25]
    node _rvc_dest_T_18 = mux(_rvc_dest_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7611:25]
    node _rvc_dest_T_19 = mux(_rvc_dest_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7613:25]
    node _rvc_dest_T_20 = or(_rvc_dest_T_10, _rvc_dest_T_11) @[build/NutShell.fir.opt.mlir 7615:25]
    node _rvc_dest_T_21 = or(_rvc_dest_T_20, _rvc_dest_T_12) @[build/NutShell.fir.opt.mlir 7617:25]
    node _rvc_dest_T_22 = or(_rvc_dest_T_21, _rvc_dest_T_13) @[build/NutShell.fir.opt.mlir 7619:25]
    node _rvc_dest_T_23 = or(_rvc_dest_T_22, _rvc_dest_T_14) @[build/NutShell.fir.opt.mlir 7621:25]
    node _rvc_dest_T_24 = or(_rvc_dest_T_23, _rvc_dest_T_15) @[build/NutShell.fir.opt.mlir 7623:25]
    node _rvc_dest_T_25 = or(_rvc_dest_T_24, _rvc_dest_T_16) @[build/NutShell.fir.opt.mlir 7625:25]
    node _rvc_dest_T_26 = or(_rvc_dest_T_25, _rvc_dest_T_17) @[build/NutShell.fir.opt.mlir 7627:25]
    node _rvc_dest_T_27 = or(_rvc_dest_T_26, _rvc_dest_T_18) @[build/NutShell.fir.opt.mlir 7629:25]
    node _rvc_dest_T_28 = or(_rvc_dest_T_27, _rvc_dest_T_19) @[build/NutShell.fir.opt.mlir 7631:25]
    wire rvc_dest : UInt<5> @[build/NutShell.fir.opt.mlir 7632:19]
    connect rvc_dest, _rvc_dest_T_28 @[build/NutShell.fir.opt.mlir 7633:7]
    node rfSrc1 = mux(isRVC, rvc_src1, rs) @[build/NutShell.fir.opt.mlir 7635:17]
    node rfSrc2 = mux(isRVC, rvc_src2, rt) @[build/NutShell.fir.opt.mlir 7637:17]
    node rfDest = mux(isRVC, rvc_dest, rd) @[build/NutShell.fir.opt.mlir 7639:17]
    node _io_out_bits_ctrl_rfSrc1_T = eq(src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 7641:37]
    node _io_out_bits_ctrl_rfSrc1_T_1 = mux(_io_out_bits_ctrl_rfSrc1_T, UInt<1>(0), rfSrc1) @[build/NutShell.fir.opt.mlir 7643:39]
    connect io.out.bits.ctrl.rfSrc1, _io_out_bits_ctrl_rfSrc1_T_1 @[build/NutShell.fir.opt.mlir 7644:7]
    node _io_out_bits_ctrl_rfSrc2_T = eq(src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7646:37]
    node _io_out_bits_ctrl_rfSrc2_T_1 = mux(_io_out_bits_ctrl_rfSrc2_T, rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7648:39]
    connect io.out.bits.ctrl.rfSrc2, _io_out_bits_ctrl_rfSrc2_T_1 @[build/NutShell.fir.opt.mlir 7649:7]
    node _io_out_bits_ctrl_rfWen_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 7651:36]
    connect io.out.bits.ctrl.rfWen, _io_out_bits_ctrl_rfWen_T @[build/NutShell.fir.opt.mlir 7652:7]
    node _io_out_bits_ctrl_rfDest_T = bits(instrType, 2, 2) @[build/NutShell.fir.opt.mlir 7654:37]
    node _io_out_bits_ctrl_rfDest_T_1 = mux(_io_out_bits_ctrl_rfDest_T, rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7656:39]
    connect io.out.bits.ctrl.rfDest, _io_out_bits_ctrl_rfDest_T_1 @[build/NutShell.fir.opt.mlir 7657:7]
    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 7659:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 7661:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 7663:7]
    node _imm_T = bits(io.in.bits.instr, 31, 20) @[build/NutShell.fir.opt.mlir 7665:17]
    node imm_signBit = bits(_imm_T, 11, 11) @[build/NutShell.fir.opt.mlir 7667:22]
    node _imm_T_1 = mux(imm_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7671:19]
    node _imm_T_2 = cat(_imm_T_1, _imm_T) @[build/NutShell.fir.opt.mlir 7673:19]
    node _imm_T_3 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 7675:19]
    node _imm_T_4 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7677:19]
    node _imm_T_5 = cat(_imm_T_3, _imm_T_4) @[build/NutShell.fir.opt.mlir 7679:19]
    node imm_signBit_1 = bits(_imm_T_5, 11, 11) @[build/NutShell.fir.opt.mlir 7681:24]
    node _imm_T_6 = mux(imm_signBit_1, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7683:19]
    node _imm_T_7 = cat(_imm_T_6, _imm_T_5) @[build/NutShell.fir.opt.mlir 7685:19]
    node _imm_T_8 = bits(io.in.bits.instr, 31, 25) @[build/NutShell.fir.opt.mlir 7687:19]
    node _imm_T_9 = bits(io.in.bits.instr, 11, 7) @[build/NutShell.fir.opt.mlir 7689:19]
    node _imm_T_10 = cat(_imm_T_8, _imm_T_9) @[build/NutShell.fir.opt.mlir 7691:20]
    node imm_signBit_2 = bits(_imm_T_10, 11, 11) @[build/NutShell.fir.opt.mlir 7693:24]
    node _imm_T_11 = mux(imm_signBit_2, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7695:20]
    node _imm_T_12 = cat(_imm_T_11, _imm_T_10) @[build/NutShell.fir.opt.mlir 7697:20]
    node _imm_T_13 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 7699:20]
    node _imm_T_14 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 7701:20]
    node _imm_T_15 = bits(io.in.bits.instr, 30, 25) @[build/NutShell.fir.opt.mlir 7703:20]
    node _imm_T_16 = bits(io.in.bits.instr, 11, 8) @[build/NutShell.fir.opt.mlir 7705:20]
    node imm_lo = cat(_imm_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7707:17]
    node imm_hi_hi = cat(_imm_T_13, _imm_T_14) @[build/NutShell.fir.opt.mlir 7709:20]
    node imm_hi = cat(imm_hi_hi, _imm_T_15) @[build/NutShell.fir.opt.mlir 7711:17]
    node _imm_T_17 = cat(imm_hi, imm_lo) @[build/NutShell.fir.opt.mlir 7713:20]
    node imm_signBit_3 = bits(_imm_T_17, 12, 12) @[build/NutShell.fir.opt.mlir 7715:24]
    node _imm_T_18 = mux(imm_signBit_3, UInt<51>(2251799813685247), UInt<51>(0)) @[build/NutShell.fir.opt.mlir 7719:20]
    node _imm_T_19 = cat(_imm_T_18, _imm_T_17) @[build/NutShell.fir.opt.mlir 7721:20]
    node _imm_T_20 = bits(io.in.bits.instr, 31, 12) @[build/NutShell.fir.opt.mlir 7723:20]
    node _imm_T_21 = cat(_imm_T_20, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 7726:20]
    node imm_signBit_4 = bits(_imm_T_21, 31, 31) @[build/NutShell.fir.opt.mlir 7728:24]
    node _imm_T_22 = mux(imm_signBit_4, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 7731:20]
    node _imm_T_23 = cat(_imm_T_22, _imm_T_21) @[build/NutShell.fir.opt.mlir 7733:20]
    node _imm_T_24 = bits(io.in.bits.instr, 31, 31) @[build/NutShell.fir.opt.mlir 7735:20]
    node _imm_T_25 = bits(io.in.bits.instr, 19, 12) @[build/NutShell.fir.opt.mlir 7737:20]
    node _imm_T_26 = bits(io.in.bits.instr, 20, 20) @[build/NutShell.fir.opt.mlir 7739:20]
    node _imm_T_27 = bits(io.in.bits.instr, 30, 21) @[build/NutShell.fir.opt.mlir 7741:20]
    node imm_lo_1 = cat(_imm_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7743:19]
    node imm_hi_hi_1 = cat(_imm_T_24, _imm_T_25) @[build/NutShell.fir.opt.mlir 7745:22]
    node imm_hi_1 = cat(imm_hi_hi_1, _imm_T_26) @[build/NutShell.fir.opt.mlir 7747:19]
    node _imm_T_28 = cat(imm_hi_1, imm_lo_1) @[build/NutShell.fir.opt.mlir 7749:20]
    node imm_signBit_5 = bits(_imm_T_28, 20, 20) @[build/NutShell.fir.opt.mlir 7751:24]
    node _imm_T_29 = mux(imm_signBit_5, UInt<43>(8796093022207), UInt<43>(0)) @[build/NutShell.fir.opt.mlir 7755:20]
    node _imm_T_30 = cat(_imm_T_29, _imm_T_28) @[build/NutShell.fir.opt.mlir 7757:20]
    node _imm_T_31 = eq(UInt<3>(4), instrType) @[build/NutShell.fir.opt.mlir 7759:20]
    node _imm_T_32 = eq(UInt<2>(2), instrType) @[build/NutShell.fir.opt.mlir 7761:20]
    node _imm_T_33 = eq(UInt<4>(15), instrType) @[build/NutShell.fir.opt.mlir 7763:20]
    node _imm_T_34 = eq(UInt<1>(1), instrType) @[build/NutShell.fir.opt.mlir 7765:20]
    node _imm_T_35 = eq(UInt<3>(6), instrType) @[build/NutShell.fir.opt.mlir 7767:20]
    node _imm_T_36 = eq(UInt<3>(7), instrType) @[build/NutShell.fir.opt.mlir 7769:20]
    node _imm_T_37 = mux(_imm_T_31, _imm_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7771:20]
    node _imm_T_38 = mux(_imm_T_32, _imm_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7773:20]
    node _imm_T_39 = mux(_imm_T_33, _imm_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7775:20]
    node _imm_T_40 = mux(_imm_T_34, _imm_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7777:20]
    node _imm_T_41 = mux(_imm_T_35, _imm_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7779:20]
    node _imm_T_42 = mux(_imm_T_36, _imm_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7781:20]
    node _imm_T_43 = or(_imm_T_37, _imm_T_38) @[build/NutShell.fir.opt.mlir 7783:20]
    node _imm_T_44 = or(_imm_T_43, _imm_T_39) @[build/NutShell.fir.opt.mlir 7785:20]
    node _imm_T_45 = or(_imm_T_44, _imm_T_40) @[build/NutShell.fir.opt.mlir 7787:20]
    node _imm_T_46 = or(_imm_T_45, _imm_T_41) @[build/NutShell.fir.opt.mlir 7789:20]
    node _imm_T_47 = or(_imm_T_46, _imm_T_42) @[build/NutShell.fir.opt.mlir 7791:20]
    wire imm : UInt<64> @[build/NutShell.fir.opt.mlir 7792:14]
    connect imm, _imm_T_47 @[build/NutShell.fir.opt.mlir 7793:7]
    node _immrvc_T = bits(io.in.bits.instr, 3, 2) @[build/NutShell.fir.opt.mlir 7795:20]
    node _immrvc_T_1 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7797:22]
    node _immrvc_T_2 = bits(io.in.bits.instr, 6, 4) @[build/NutShell.fir.opt.mlir 7799:22]
    node immrvc_lo = cat(_immrvc_T_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7802:20]
    node immrvc_hi = cat(_immrvc_T, _immrvc_T_1) @[build/NutShell.fir.opt.mlir 7804:20]
    node _immrvc_T_3 = cat(immrvc_hi, immrvc_lo) @[build/NutShell.fir.opt.mlir 7806:22]
    node _immrvc_T_4 = cat(UInt<56>(0), _immrvc_T_3) @[build/NutShell.fir.opt.mlir 7809:22]
    node _immrvc_T_5 = bits(io.in.bits.instr, 4, 2) @[build/NutShell.fir.opt.mlir 7811:22]
    node _immrvc_T_6 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7813:22]
    node _immrvc_T_7 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7815:22]
    node immrvc_lo_1 = cat(_immrvc_T_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7818:22]
    node immrvc_hi_1 = cat(_immrvc_T_5, _immrvc_T_6) @[build/NutShell.fir.opt.mlir 7820:22]
    node _immrvc_T_8 = cat(immrvc_hi_1, immrvc_lo_1) @[build/NutShell.fir.opt.mlir 7822:22]
    node _immrvc_T_9 = cat(UInt<55>(0), _immrvc_T_8) @[build/NutShell.fir.opt.mlir 7825:22]
    node _immrvc_T_10 = bits(io.in.bits.instr, 8, 7) @[build/NutShell.fir.opt.mlir 7827:23]
    node _immrvc_T_11 = bits(io.in.bits.instr, 12, 9) @[build/NutShell.fir.opt.mlir 7829:23]
    node immrvc_hi_2 = cat(_immrvc_T_10, _immrvc_T_11) @[build/NutShell.fir.opt.mlir 7831:22]
    node _immrvc_T_12 = cat(immrvc_hi_2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7833:23]
    node _immrvc_T_13 = cat(UInt<56>(0), _immrvc_T_12) @[build/NutShell.fir.opt.mlir 7835:23]
    node _immrvc_T_14 = bits(io.in.bits.instr, 9, 7) @[build/NutShell.fir.opt.mlir 7837:23]
    node _immrvc_T_15 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7839:23]
    node immrvc_hi_3 = cat(_immrvc_T_14, _immrvc_T_15) @[build/NutShell.fir.opt.mlir 7841:22]
    node _immrvc_T_16 = cat(immrvc_hi_3, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7843:23]
    node _immrvc_T_17 = cat(UInt<55>(0), _immrvc_T_16) @[build/NutShell.fir.opt.mlir 7845:23]
    node _immrvc_T_18 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 7847:23]
    node _immrvc_T_19 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7849:23]
    node _immrvc_T_20 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7851:23]
    node immrvc_lo_2 = cat(_immrvc_T_20, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7853:22]
    node immrvc_hi_4 = cat(_immrvc_T_18, _immrvc_T_19) @[build/NutShell.fir.opt.mlir 7855:22]
    node _immrvc_T_21 = cat(immrvc_hi_4, immrvc_lo_2) @[build/NutShell.fir.opt.mlir 7857:23]
    node _immrvc_T_22 = cat(UInt<57>(0), _immrvc_T_21) @[build/NutShell.fir.opt.mlir 7860:23]
    node _immrvc_T_23 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7862:23]
    node _immrvc_T_24 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7864:23]
    node immrvc_hi_5 = cat(_immrvc_T_23, _immrvc_T_24) @[build/NutShell.fir.opt.mlir 7866:22]
    node _immrvc_T_25 = cat(immrvc_hi_5, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7868:23]
    node _immrvc_T_26 = cat(UInt<56>(0), _immrvc_T_25) @[build/NutShell.fir.opt.mlir 7870:23]
    node _immrvc_T_27 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 7872:23]
    node _immrvc_T_28 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7874:23]
    node _immrvc_T_29 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7876:23]
    node immrvc_lo_3 = cat(_immrvc_T_29, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 7878:22]
    node immrvc_hi_6 = cat(_immrvc_T_27, _immrvc_T_28) @[build/NutShell.fir.opt.mlir 7880:22]
    node _immrvc_T_30 = cat(immrvc_hi_6, immrvc_lo_3) @[build/NutShell.fir.opt.mlir 7882:23]
    node _immrvc_T_31 = cat(UInt<57>(0), _immrvc_T_30) @[build/NutShell.fir.opt.mlir 7884:23]
    node _immrvc_T_32 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7886:23]
    node _immrvc_T_33 = bits(io.in.bits.instr, 12, 10) @[build/NutShell.fir.opt.mlir 7888:23]
    node immrvc_hi_7 = cat(_immrvc_T_32, _immrvc_T_33) @[build/NutShell.fir.opt.mlir 7890:22]
    node _immrvc_T_34 = cat(immrvc_hi_7, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 7892:23]
    node _immrvc_T_35 = cat(UInt<56>(0), _immrvc_T_34) @[build/NutShell.fir.opt.mlir 7894:23]
    node _immrvc_T_36 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7896:23]
    node _immrvc_T_37 = bits(io.in.bits.instr, 8, 8) @[build/NutShell.fir.opt.mlir 7898:23]
    node _immrvc_T_38 = bits(io.in.bits.instr, 10, 9) @[build/NutShell.fir.opt.mlir 7900:23]
    node _immrvc_T_39 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 7902:23]
    node _immrvc_T_40 = bits(io.in.bits.instr, 7, 7) @[build/NutShell.fir.opt.mlir 7904:23]
    node _immrvc_T_41 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 7906:23]
    node _immrvc_T_42 = bits(io.in.bits.instr, 11, 11) @[build/NutShell.fir.opt.mlir 7908:23]
    node _immrvc_T_43 = bits(io.in.bits.instr, 5, 3) @[build/NutShell.fir.opt.mlir 7910:23]
    node immrvc_lo_lo = cat(_immrvc_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7912:23]
    node immrvc_lo_hi = cat(_immrvc_T_41, _immrvc_T_42) @[build/NutShell.fir.opt.mlir 7914:23]
    node immrvc_lo_4 = cat(immrvc_lo_hi, immrvc_lo_lo) @[build/NutShell.fir.opt.mlir 7916:22]
    node immrvc_hi_lo = cat(_immrvc_T_39, _immrvc_T_40) @[build/NutShell.fir.opt.mlir 7918:23]
    node immrvc_hi_hi_hi = cat(_immrvc_T_36, _immrvc_T_37) @[build/NutShell.fir.opt.mlir 7920:26]
    node immrvc_hi_hi = cat(immrvc_hi_hi_hi, _immrvc_T_38) @[build/NutShell.fir.opt.mlir 7922:23]
    node immrvc_hi_8 = cat(immrvc_hi_hi, immrvc_hi_lo) @[build/NutShell.fir.opt.mlir 7924:22]
    node _immrvc_T_44 = cat(immrvc_hi_8, immrvc_lo_4) @[build/NutShell.fir.opt.mlir 7926:23]
    node immrvc_signBit = bits(_immrvc_T_44, 11, 11) @[build/NutShell.fir.opt.mlir 7928:25]
    node _immrvc_T_45 = mux(immrvc_signBit, UInt<52>(4503599627370495), UInt<52>(0)) @[build/NutShell.fir.opt.mlir 7930:23]
    node _immrvc_T_46 = cat(_immrvc_T_45, _immrvc_T_44) @[build/NutShell.fir.opt.mlir 7932:23]
    node _immrvc_T_47 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7934:23]
    node _immrvc_T_48 = bits(io.in.bits.instr, 6, 5) @[build/NutShell.fir.opt.mlir 7936:23]
    node _immrvc_T_49 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 7938:23]
    node _immrvc_T_50 = bits(io.in.bits.instr, 11, 10) @[build/NutShell.fir.opt.mlir 7940:23]
    node _immrvc_T_51 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 7942:23]
    node immrvc_lo_hi_1 = cat(_immrvc_T_50, _immrvc_T_51) @[build/NutShell.fir.opt.mlir 7944:25]
    node immrvc_lo_5 = cat(immrvc_lo_hi_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 7946:22]
    node immrvc_hi_hi_1 = cat(_immrvc_T_47, _immrvc_T_48) @[build/NutShell.fir.opt.mlir 7948:25]
    node immrvc_hi_9 = cat(immrvc_hi_hi_1, _immrvc_T_49) @[build/NutShell.fir.opt.mlir 7950:22]
    node _immrvc_T_52 = cat(immrvc_hi_9, immrvc_lo_5) @[build/NutShell.fir.opt.mlir 7952:23]
    node immrvc_signBit_1 = bits(_immrvc_T_52, 8, 8) @[build/NutShell.fir.opt.mlir 7954:27]
    node _immrvc_T_53 = mux(immrvc_signBit_1, UInt<55>(36028797018963967), UInt<55>(0)) @[build/NutShell.fir.opt.mlir 7957:23]
    node _immrvc_T_54 = cat(_immrvc_T_53, _immrvc_T_52) @[build/NutShell.fir.opt.mlir 7959:23]
    node _immrvc_T_55 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7961:23]
    node _immrvc_T_56 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7963:23]
    node _immrvc_T_57 = cat(_immrvc_T_55, _immrvc_T_56) @[build/NutShell.fir.opt.mlir 7965:23]
    node immrvc_signBit_2 = bits(_immrvc_T_57, 5, 5) @[build/NutShell.fir.opt.mlir 7967:27]
    node _immrvc_T_58 = mux(immrvc_signBit_2, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 7971:23]
    node _immrvc_T_59 = cat(_immrvc_T_58, _immrvc_T_57) @[build/NutShell.fir.opt.mlir 7973:23]
    node _immrvc_T_60 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7975:23]
    node _immrvc_T_61 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7977:23]
    node immrvc_hi_10 = cat(_immrvc_T_60, _immrvc_T_61) @[build/NutShell.fir.opt.mlir 7979:23]
    node _immrvc_T_62 = cat(immrvc_hi_10, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 7981:23]
    node immrvc_signBit_3 = bits(_immrvc_T_62, 17, 17) @[build/NutShell.fir.opt.mlir 7983:27]
    node _immrvc_T_63 = mux(immrvc_signBit_3, UInt<46>(70368744177663), UInt<46>(0)) @[build/NutShell.fir.opt.mlir 7987:23]
    node _immrvc_T_64 = cat(_immrvc_T_63, _immrvc_T_62) @[build/NutShell.fir.opt.mlir 7989:23]
    node _immrvc_T_65 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 7991:23]
    node _immrvc_T_66 = bits(io.in.bits.instr, 6, 2) @[build/NutShell.fir.opt.mlir 7993:23]
    node _immrvc_T_67 = cat(_immrvc_T_65, _immrvc_T_66) @[build/NutShell.fir.opt.mlir 7995:23]
    node immrvc_signBit_4 = bits(_immrvc_T_67, 5, 5) @[build/NutShell.fir.opt.mlir 7997:27]
    node _immrvc_T_68 = mux(immrvc_signBit_4, UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 7999:23]
    node _immrvc_T_69 = cat(_immrvc_T_68, _immrvc_T_67) @[build/NutShell.fir.opt.mlir 8001:23]
    node _immrvc_T_70 = bits(io.in.bits.instr, 12, 12) @[build/NutShell.fir.opt.mlir 8003:23]
    node _immrvc_T_71 = bits(io.in.bits.instr, 4, 3) @[build/NutShell.fir.opt.mlir 8005:23]
    node _immrvc_T_72 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 8007:23]
    node _immrvc_T_73 = bits(io.in.bits.instr, 2, 2) @[build/NutShell.fir.opt.mlir 8009:23]
    node _immrvc_T_74 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 8011:23]
    node immrvc_lo_hi_2 = cat(_immrvc_T_73, _immrvc_T_74) @[build/NutShell.fir.opt.mlir 8013:25]
    node immrvc_lo_6 = cat(immrvc_lo_hi_2, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 8016:22]
    node immrvc_hi_hi_2 = cat(_immrvc_T_70, _immrvc_T_71) @[build/NutShell.fir.opt.mlir 8018:25]
    node immrvc_hi_11 = cat(immrvc_hi_hi_2, _immrvc_T_72) @[build/NutShell.fir.opt.mlir 8020:23]
    node _immrvc_T_75 = cat(immrvc_hi_11, immrvc_lo_6) @[build/NutShell.fir.opt.mlir 8022:23]
    node immrvc_signBit_5 = bits(_immrvc_T_75, 9, 9) @[build/NutShell.fir.opt.mlir 8024:27]
    node _immrvc_T_76 = mux(immrvc_signBit_5, UInt<54>(18014398509481983), UInt<54>(0)) @[build/NutShell.fir.opt.mlir 8028:23]
    node _immrvc_T_77 = cat(_immrvc_T_76, _immrvc_T_75) @[build/NutShell.fir.opt.mlir 8030:23]
    node _immrvc_T_78 = bits(io.in.bits.instr, 10, 7) @[build/NutShell.fir.opt.mlir 8032:23]
    node _immrvc_T_79 = bits(io.in.bits.instr, 12, 11) @[build/NutShell.fir.opt.mlir 8034:23]
    node _immrvc_T_80 = bits(io.in.bits.instr, 5, 5) @[build/NutShell.fir.opt.mlir 8036:23]
    node _immrvc_T_81 = bits(io.in.bits.instr, 6, 6) @[build/NutShell.fir.opt.mlir 8038:23]
    node immrvc_lo_7 = cat(_immrvc_T_81, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 8040:22]
    node immrvc_hi_hi_3 = cat(_immrvc_T_78, _immrvc_T_79) @[build/NutShell.fir.opt.mlir 8042:25]
    node immrvc_hi_12 = cat(immrvc_hi_hi_3, _immrvc_T_80) @[build/NutShell.fir.opt.mlir 8044:23]
    node _immrvc_T_82 = cat(immrvc_hi_12, immrvc_lo_7) @[build/NutShell.fir.opt.mlir 8046:23]
    node _immrvc_T_83 = cat(UInt<54>(0), _immrvc_T_82) @[build/NutShell.fir.opt.mlir 8048:23]
    node _immrvc_T_84 = eq(UInt<5>(16), rvcImmType) @[build/NutShell.fir.opt.mlir 8050:23]
    node _immrvc_T_85 = eq(UInt<1>(0), rvcImmType) @[build/NutShell.fir.opt.mlir 8052:23]
    node _immrvc_T_86 = eq(UInt<1>(1), rvcImmType) @[build/NutShell.fir.opt.mlir 8054:23]
    node _immrvc_T_87 = eq(UInt<2>(2), rvcImmType) @[build/NutShell.fir.opt.mlir 8056:23]
    node _immrvc_T_88 = eq(UInt<2>(3), rvcImmType) @[build/NutShell.fir.opt.mlir 8058:23]
    node _immrvc_T_89 = eq(UInt<3>(4), rvcImmType) @[build/NutShell.fir.opt.mlir 8060:23]
    node _immrvc_T_90 = eq(UInt<3>(5), rvcImmType) @[build/NutShell.fir.opt.mlir 8062:23]
    node _immrvc_T_91 = eq(UInt<3>(6), rvcImmType) @[build/NutShell.fir.opt.mlir 8064:23]
    node _immrvc_T_92 = eq(UInt<3>(7), rvcImmType) @[build/NutShell.fir.opt.mlir 8066:23]
    node _immrvc_T_93 = eq(UInt<4>(8), rvcImmType) @[build/NutShell.fir.opt.mlir 8068:23]
    node _immrvc_T_94 = eq(UInt<4>(9), rvcImmType) @[build/NutShell.fir.opt.mlir 8070:23]
    node _immrvc_T_95 = eq(UInt<4>(10), rvcImmType) @[build/NutShell.fir.opt.mlir 8072:23]
    node _immrvc_T_96 = eq(UInt<4>(11), rvcImmType) @[build/NutShell.fir.opt.mlir 8074:23]
    node _immrvc_T_97 = eq(UInt<4>(12), rvcImmType) @[build/NutShell.fir.opt.mlir 8076:23]
    node _immrvc_T_98 = eq(UInt<4>(13), rvcImmType) @[build/NutShell.fir.opt.mlir 8078:23]
    node _immrvc_T_99 = eq(UInt<4>(14), rvcImmType) @[build/NutShell.fir.opt.mlir 8080:23]
    node _immrvc_T_100 = eq(UInt<4>(15), rvcImmType) @[build/NutShell.fir.opt.mlir 8082:24]
    node _immrvc_T_101 = mux(_immrvc_T_84, UInt<64>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8085:24]
    node _immrvc_T_102 = mux(_immrvc_T_85, _immrvc_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8087:24]
    node _immrvc_T_103 = mux(_immrvc_T_86, _immrvc_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8089:24]
    node _immrvc_T_104 = mux(_immrvc_T_87, _immrvc_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8091:24]
    node _immrvc_T_105 = mux(_immrvc_T_88, _immrvc_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8093:24]
    node _immrvc_T_106 = mux(_immrvc_T_89, _immrvc_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8095:24]
    node _immrvc_T_107 = mux(_immrvc_T_90, _immrvc_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8097:24]
    node _immrvc_T_108 = mux(_immrvc_T_91, _immrvc_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8099:24]
    node _immrvc_T_109 = mux(_immrvc_T_92, _immrvc_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8101:24]
    node _immrvc_T_110 = mux(_immrvc_T_93, _immrvc_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8103:24]
    node _immrvc_T_111 = mux(_immrvc_T_94, _immrvc_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8105:24]
    node _immrvc_T_112 = mux(_immrvc_T_95, _immrvc_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8107:24]
    node _immrvc_T_113 = mux(_immrvc_T_96, _immrvc_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8109:24]
    node _immrvc_T_114 = mux(_immrvc_T_97, _immrvc_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8111:24]
    node _immrvc_T_115 = mux(_immrvc_T_98, _immrvc_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8113:24]
    node _immrvc_T_116 = mux(_immrvc_T_99, _immrvc_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8115:24]
    node _immrvc_T_117 = mux(_immrvc_T_100, UInt<64>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8118:24]
    node _immrvc_T_118 = or(_immrvc_T_101, _immrvc_T_102) @[build/NutShell.fir.opt.mlir 8120:24]
    node _immrvc_T_119 = or(_immrvc_T_118, _immrvc_T_103) @[build/NutShell.fir.opt.mlir 8122:24]
    node _immrvc_T_120 = or(_immrvc_T_119, _immrvc_T_104) @[build/NutShell.fir.opt.mlir 8124:24]
    node _immrvc_T_121 = or(_immrvc_T_120, _immrvc_T_105) @[build/NutShell.fir.opt.mlir 8126:24]
    node _immrvc_T_122 = or(_immrvc_T_121, _immrvc_T_106) @[build/NutShell.fir.opt.mlir 8128:24]
    node _immrvc_T_123 = or(_immrvc_T_122, _immrvc_T_107) @[build/NutShell.fir.opt.mlir 8130:24]
    node _immrvc_T_124 = or(_immrvc_T_123, _immrvc_T_108) @[build/NutShell.fir.opt.mlir 8132:24]
    node _immrvc_T_125 = or(_immrvc_T_124, _immrvc_T_109) @[build/NutShell.fir.opt.mlir 8134:24]
    node _immrvc_T_126 = or(_immrvc_T_125, _immrvc_T_110) @[build/NutShell.fir.opt.mlir 8136:24]
    node _immrvc_T_127 = or(_immrvc_T_126, _immrvc_T_111) @[build/NutShell.fir.opt.mlir 8138:24]
    node _immrvc_T_128 = or(_immrvc_T_127, _immrvc_T_112) @[build/NutShell.fir.opt.mlir 8140:24]
    node _immrvc_T_129 = or(_immrvc_T_128, _immrvc_T_113) @[build/NutShell.fir.opt.mlir 8142:24]
    node _immrvc_T_130 = or(_immrvc_T_129, _immrvc_T_114) @[build/NutShell.fir.opt.mlir 8144:24]
    node _immrvc_T_131 = or(_immrvc_T_130, _immrvc_T_115) @[build/NutShell.fir.opt.mlir 8146:24]
    node _immrvc_T_132 = or(_immrvc_T_131, _immrvc_T_116) @[build/NutShell.fir.opt.mlir 8148:24]
    node _immrvc_T_133 = or(_immrvc_T_132, _immrvc_T_117) @[build/NutShell.fir.opt.mlir 8150:24]
    wire immrvc : UInt<64> @[build/NutShell.fir.opt.mlir 8151:17]
    connect immrvc, _immrvc_T_133 @[build/NutShell.fir.opt.mlir 8152:7]
    node _io_out_bits_data_imm_T = mux(isRVC, immrvc, imm) @[build/NutShell.fir.opt.mlir 8154:34]
    connect io.out.bits.data.imm, _io_out_bits_data_imm_T @[build/NutShell.fir.opt.mlir 8155:7]
    node _T_200 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8157:17]
    when _T_200 : @[build/NutShell.fir.opt.mlir 8160:7]
      node _T_201 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8162:19]
      node _T_202 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8164:19]
      node _T_203 = or(_T_201, _T_202) @[build/NutShell.fir.opt.mlir 8166:19]
      node _T_204 = eq(fuOpType, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 8168:19]
      node _T_205 = and(_T_203, _T_204) @[build/NutShell.fir.opt.mlir 8170:19]
      when _T_205 : @[build/NutShell.fir.opt.mlir 8171:9]
        connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 8173:11]
      node _T_206 = eq(fuOpType, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 8176:19]
      when _T_206 : @[build/NutShell.fir.opt.mlir 8177:9]
        node _T_207 = eq(rfSrc1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8179:21]
        node _T_208 = eq(rfSrc1, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8181:21]
        node _T_209 = or(_T_207, _T_208) @[build/NutShell.fir.opt.mlir 8183:21]
        when _T_209 : @[build/NutShell.fir.opt.mlir 8184:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(94) @[build/NutShell.fir.opt.mlir 8186:13]
        node _T_210 = eq(rfDest, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8189:21]
        node _T_211 = eq(rfDest, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 8191:21]
        node _T_212 = or(_T_210, _T_211) @[build/NutShell.fir.opt.mlir 8193:21]
        when _T_212 : @[build/NutShell.fir.opt.mlir 8194:11]
          connect io.out.bits.ctrl.fuOpType, UInt<7>(92) @[build/NutShell.fir.opt.mlir 8196:13]
    node _io_out_bits_ctrl_src1Type_T = bits(io.in.bits.instr, 6, 0) @[build/NutShell.fir.opt.mlir 8201:39]
    node _io_out_bits_ctrl_src1Type_T_1 = eq(_io_out_bits_ctrl_src1Type_T, UInt<6>(55)) @[build/NutShell.fir.opt.mlir 8203:41]
    node _io_out_bits_ctrl_src1Type_T_2 = mux(_io_out_bits_ctrl_src1Type_T_1, UInt<1>(0), src1Type) @[build/NutShell.fir.opt.mlir 8205:41]
    connect io.out.bits.ctrl.src1Type, _io_out_bits_ctrl_src1Type_T_2 @[build/NutShell.fir.opt.mlir 8206:7]
    connect io.out.bits.ctrl.src2Type, src2Type @[build/NutShell.fir.opt.mlir 8207:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T = bits(io.in.bits.instr, 31, 0) @[build/NutShell.fir.opt.mlir 8209:44]
    node _io_out_bits_ctrl_isNutCoreTrap_T_1 = and(_io_out_bits_ctrl_isNutCoreTrap_T, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 8211:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_2 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_1) @[build/NutShell.fir.opt.mlir 8213:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_3 = and(_io_out_bits_ctrl_isNutCoreTrap_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 8215:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_3 @[build/NutShell.fir.opt.mlir 8216:7]
    node _io_out_bits_ctrl_noSpecExec_T = eq(io.out.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8218:41]
    connect io.out.bits.ctrl.noSpecExec, _io_out_bits_ctrl_noSpecExec_T @[build/NutShell.fir.opt.mlir 8219:7]
    node _io_out_bits_ctrl_isBlocked_T = eq(io.out.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8221:40]
    node _io_out_bits_ctrl_isBlocked_T_1 = bits(io.out.bits.ctrl.fuOpType, 5, 5) @[build/NutShell.fir.opt.mlir 8223:42]
    node _io_out_bits_ctrl_isBlocked_T_2 = and(_io_out_bits_ctrl_isBlocked_T, _io_out_bits_ctrl_isBlocked_T_1) @[build/NutShell.fir.opt.mlir 8225:42]
    node _io_out_bits_ctrl_isBlocked_T_3 = eq(io.out.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 8227:42]
    node _io_out_bits_ctrl_isBlocked_T_4 = or(_io_out_bits_ctrl_isBlocked_T_2, _io_out_bits_ctrl_isBlocked_T_3) @[build/NutShell.fir.opt.mlir 8229:42]
    connect io.out.bits.ctrl.isBlocked, _io_out_bits_ctrl_isBlocked_T_4 @[build/NutShell.fir.opt.mlir 8230:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 8231:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8233:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 8235:27]
    node _io_in_ready_T_2 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8237:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 8239:27]
    node _io_in_ready_T_4 = or(_io_in_ready_T, _io_in_ready_T_3) @[build/NutShell.fir.opt.mlir 8241:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 8242:7]
    connect io.out.bits.cf, io.in.bits @[build/NutShell.fir.opt.mlir 8243:7]
    node _T_213 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 8245:17]
    inst LogPerfHelper of LogPerfHelper_4 @[build/NutShell.fir.opt.mlir 8246:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 8247:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 8252:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 8253:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 8254:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 8255:7]
    node _T_214 = and(_T_213, c_control.logEnable) @[build/NutShell.fir.opt.mlir 8257:17]
    when _T_214 : @[build/NutShell.fir.opt.mlir 8258:7]
      node _T_215 = asUInt(reset) @[build/NutShell.fir.opt.mlir 8260:19]
      node _T_216 = eq(_T_215, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8262:19]
      when _T_216 : @[build/NutShell.fir.opt.mlir 8263:9]
        skip @[build/NutShell.fir.opt.mlir 8264:11]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 8267:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8269:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 8270:9]
        skip @[build/NutShell.fir.opt.mlir 8271:11]
    wire intrVec : UInt<12> @[build/NutShell.fir.opt.mlir 8274:18]
    connect intrVec, UInt<12>(0) @[build/NutShell.fir.opt.mlir 8276:7]
    node _T_219 = bits(intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 8278:17]
    node _T_220 = bits(intrVec, 1, 1) @[build/NutShell.fir.opt.mlir 8280:17]
    node _T_221 = bits(intrVec, 2, 2) @[build/NutShell.fir.opt.mlir 8282:17]
    node _T_222 = bits(intrVec, 3, 3) @[build/NutShell.fir.opt.mlir 8284:17]
    node _T_223 = bits(intrVec, 4, 4) @[build/NutShell.fir.opt.mlir 8286:17]
    node _T_224 = bits(intrVec, 5, 5) @[build/NutShell.fir.opt.mlir 8288:17]
    node _T_225 = bits(intrVec, 6, 6) @[build/NutShell.fir.opt.mlir 8290:17]
    node _T_226 = bits(intrVec, 7, 7) @[build/NutShell.fir.opt.mlir 8292:17]
    node _T_227 = bits(intrVec, 8, 8) @[build/NutShell.fir.opt.mlir 8294:17]
    node _T_228 = bits(intrVec, 9, 9) @[build/NutShell.fir.opt.mlir 8296:17]
    node _T_229 = bits(intrVec, 10, 10) @[build/NutShell.fir.opt.mlir 8298:17]
    node _T_230 = bits(intrVec, 11, 11) @[build/NutShell.fir.opt.mlir 8300:17]
    connect io.out.bits.cf.intrVec[0], _T_219 @[build/NutShell.fir.opt.mlir 8301:7]
    connect io.out.bits.cf.intrVec[1], _T_220 @[build/NutShell.fir.opt.mlir 8302:7]
    connect io.out.bits.cf.intrVec[2], _T_221 @[build/NutShell.fir.opt.mlir 8303:7]
    connect io.out.bits.cf.intrVec[3], _T_222 @[build/NutShell.fir.opt.mlir 8304:7]
    connect io.out.bits.cf.intrVec[4], _T_223 @[build/NutShell.fir.opt.mlir 8305:7]
    connect io.out.bits.cf.intrVec[5], _T_224 @[build/NutShell.fir.opt.mlir 8306:7]
    connect io.out.bits.cf.intrVec[6], _T_225 @[build/NutShell.fir.opt.mlir 8307:7]
    connect io.out.bits.cf.intrVec[7], _T_226 @[build/NutShell.fir.opt.mlir 8308:7]
    connect io.out.bits.cf.intrVec[8], _T_227 @[build/NutShell.fir.opt.mlir 8309:7]
    connect io.out.bits.cf.intrVec[9], _T_228 @[build/NutShell.fir.opt.mlir 8310:7]
    connect io.out.bits.cf.intrVec[10], _T_229 @[build/NutShell.fir.opt.mlir 8311:7]
    connect io.out.bits.cf.intrVec[11], _T_230 @[build/NutShell.fir.opt.mlir 8312:7]
    node _hasIntr_T = orr(intrVec) @[build/NutShell.fir.opt.mlir 8314:21]
    connect hasIntr, _hasIntr_T @[build/NutShell.fir.opt.mlir 8315:7]
    wire vmEnable : UInt<1> @[build/NutShell.fir.opt.mlir 8316:19]
    connect vmEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8318:7]
    connect io.out.bits.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8320:7]
    connect io.out.bits.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8322:7]
    connect io.out.bits.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8324:7]
    connect io.out.bits.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8326:7]
    connect io.out.bits.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8328:7]
    connect io.out.bits.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8330:7]
    connect io.out.bits.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8332:7]
    connect io.out.bits.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8334:7]
    connect io.out.bits.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8336:7]
    connect io.out.bits.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8338:7]
    connect io.out.bits.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8340:7]
    connect io.out.bits.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8342:7]
    connect io.out.bits.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8344:7]
    connect io.out.bits.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8346:7]
    connect io.out.bits.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8348:7]
    connect io.out.bits.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8350:7]
    node _io_out_bits_cf_exceptionVec_2_T = eq(instrType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8352:43]
    node _io_out_bits_cf_exceptionVec_2_T_1 = eq(hasIntr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8354:45]
    node _io_out_bits_cf_exceptionVec_2_T_2 = and(_io_out_bits_cf_exceptionVec_2_T, _io_out_bits_cf_exceptionVec_2_T_1) @[build/NutShell.fir.opt.mlir 8356:45]
    node _io_out_bits_cf_exceptionVec_2_T_3 = and(_io_out_bits_cf_exceptionVec_2_T_2, io.in.valid) @[build/NutShell.fir.opt.mlir 8358:45]
    connect io.out.bits.cf.exceptionVec[2], _io_out_bits_cf_exceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 8359:7]
    connect io.out.bits.cf.exceptionVec[12], io.in.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 8360:7]
    node _io_out_bits_cf_exceptionVec_1_T = bits(io.in.bits.pc, 38, 32) @[build/NutShell.fir.opt.mlir 8362:43]
    node _io_out_bits_cf_exceptionVec_1_T_1 = orr(_io_out_bits_cf_exceptionVec_1_T) @[build/NutShell.fir.opt.mlir 8364:45]
    node _io_out_bits_cf_exceptionVec_1_T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8366:45]
    node _io_out_bits_cf_exceptionVec_1_T_3 = and(_io_out_bits_cf_exceptionVec_1_T_1, _io_out_bits_cf_exceptionVec_1_T_2) @[build/NutShell.fir.opt.mlir 8368:45]
    connect io.out.bits.cf.exceptionVec[1], _io_out_bits_cf_exceptionVec_1_T_3 @[build/NutShell.fir.opt.mlir 8369:7]
    node _io_out_bits_ctrl_isNutCoreTrap_T_4 = and(io.in.bits.instr, UInt<15>(28799)) @[build/NutShell.fir.opt.mlir 8371:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_5 = eq(UInt<7>(107), _io_out_bits_ctrl_isNutCoreTrap_T_4) @[build/NutShell.fir.opt.mlir 8373:46]
    node _io_out_bits_ctrl_isNutCoreTrap_T_6 = and(_io_out_bits_ctrl_isNutCoreTrap_T_5, io.in.valid) @[build/NutShell.fir.opt.mlir 8375:46]
    connect io.out.bits.ctrl.isNutCoreTrap, _io_out_bits_ctrl_isNutCoreTrap_T_6 @[build/NutShell.fir.opt.mlir 8376:7]
    node _io_isWFI_T = and(io.in.bits.instr, UInt<32>(4294967295)) @[build/NutShell.fir.opt.mlir 8378:22]
    node _io_isWFI_T_1 = eq(UInt<29>(273678451), _io_isWFI_T) @[build/NutShell.fir.opt.mlir 8380:24]
    node _io_isWFI_T_2 = and(_io_isWFI_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 8382:24]
    connect io.isWFI, _io_isWFI_T_2 @[build/NutShell.fir.opt.mlir 8383:7]
    node _io_isBranch_T = eq(UInt<7>(88), fuOpType) @[build/NutShell.fir.opt.mlir 8385:25]
    node _io_isBranch_T_1 = eq(UInt<7>(90), fuOpType) @[build/NutShell.fir.opt.mlir 8387:27]
    node _io_isBranch_T_2 = eq(UInt<5>(16), fuOpType) @[build/NutShell.fir.opt.mlir 8389:27]
    node _io_isBranch_T_3 = eq(UInt<5>(17), fuOpType) @[build/NutShell.fir.opt.mlir 8391:27]
    node _io_isBranch_T_4 = eq(UInt<5>(20), fuOpType) @[build/NutShell.fir.opt.mlir 8393:27]
    node _io_isBranch_T_5 = eq(UInt<5>(21), fuOpType) @[build/NutShell.fir.opt.mlir 8395:27]
    node _io_isBranch_T_6 = eq(UInt<5>(22), fuOpType) @[build/NutShell.fir.opt.mlir 8397:27]
    node _io_isBranch_T_7 = eq(UInt<5>(23), fuOpType) @[build/NutShell.fir.opt.mlir 8399:27]
    wire _io_isBranch_WIRE : UInt<1>[8] @[build/NutShell.fir.opt.mlir 8400:28]
    connect _io_isBranch_WIRE[0], _io_isBranch_T @[build/NutShell.fir.opt.mlir 8409:7]
    connect _io_isBranch_WIRE[1], _io_isBranch_T_1 @[build/NutShell.fir.opt.mlir 8410:7]
    connect _io_isBranch_WIRE[2], _io_isBranch_T_2 @[build/NutShell.fir.opt.mlir 8411:7]
    connect _io_isBranch_WIRE[3], _io_isBranch_T_3 @[build/NutShell.fir.opt.mlir 8412:7]
    connect _io_isBranch_WIRE[4], _io_isBranch_T_4 @[build/NutShell.fir.opt.mlir 8413:7]
    connect _io_isBranch_WIRE[5], _io_isBranch_T_5 @[build/NutShell.fir.opt.mlir 8414:7]
    connect _io_isBranch_WIRE[6], _io_isBranch_T_6 @[build/NutShell.fir.opt.mlir 8415:7]
    connect _io_isBranch_WIRE[7], _io_isBranch_T_7 @[build/NutShell.fir.opt.mlir 8416:7]
    node io_isBranch_lo_lo = cat(_io_isBranch_WIRE[1], _io_isBranch_WIRE[0]) @[build/NutShell.fir.opt.mlir 8418:28]
    node io_isBranch_lo_hi = cat(_io_isBranch_WIRE[3], _io_isBranch_WIRE[2]) @[build/NutShell.fir.opt.mlir 8420:28]
    node io_isBranch_lo = cat(io_isBranch_lo_hi, io_isBranch_lo_lo) @[build/NutShell.fir.opt.mlir 8422:25]
    node io_isBranch_hi_lo = cat(_io_isBranch_WIRE[5], _io_isBranch_WIRE[4]) @[build/NutShell.fir.opt.mlir 8424:28]
    node io_isBranch_hi_hi = cat(_io_isBranch_WIRE[7], _io_isBranch_WIRE[6]) @[build/NutShell.fir.opt.mlir 8426:28]
    node io_isBranch_hi = cat(io_isBranch_hi_hi, io_isBranch_hi_lo) @[build/NutShell.fir.opt.mlir 8428:25]
    node _io_isBranch_T_8 = cat(io_isBranch_hi, io_isBranch_lo) @[build/NutShell.fir.opt.mlir 8430:27]
    node _io_isBranch_T_9 = orr(_io_isBranch_T_8) @[build/NutShell.fir.opt.mlir 8432:27]
    node _io_isBranch_T_10 = eq(fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8434:28]
    node _io_isBranch_T_11 = and(_io_isBranch_T_9, _io_isBranch_T_10) @[build/NutShell.fir.opt.mlir 8436:28]
    connect io.isBranch, _io_isBranch_T_11 @[build/NutShell.fir.opt.mlir 8437:7]
    connect intrVec, intrVec__bore @[build/NutShell.fir.opt.mlir 8438:7]
    connect vmEnable, vmEnable__bore @[build/NutShell.fir.opt.mlir 8439:7]

  module IDU : @[build/NutShell.fir.opt.mlir 8441:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8441:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8441:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2] } @[build/NutShell.fir.opt.mlir 8441:88]
    input decoder1_intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 8441:1189]
    input decoder2_intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 8441:1235]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8441:1282]
    input decoder1_vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8441:1316]
    input decoder2_vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8441:1362]

    inst decoder1 of Decoder @[build/NutShell.fir.opt.mlir 8463:111]
    connect decoder1.clock, clock @[build/NutShell.fir.opt.mlir 8474:7]
    connect decoder1.reset, reset @[build/NutShell.fir.opt.mlir 8475:7]
    inst decoder2 of Decoder_1 @[build/NutShell.fir.opt.mlir 8476:111]
    connect decoder2.clock, clock @[build/NutShell.fir.opt.mlir 8486:7]
    connect decoder2.reset, reset @[build/NutShell.fir.opt.mlir 8487:7]
    connect io.in[0].ready, decoder1.io.in.ready @[build/NutShell.fir.opt.mlir 8488:7]
    connect decoder1.io.in.valid, io.in[0].valid @[build/NutShell.fir.opt.mlir 8489:7]
    connect decoder1.io.in.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 8490:7]
    connect io.in[1].ready, decoder2.io.in.ready @[build/NutShell.fir.opt.mlir 8491:7]
    connect decoder2.io.in.valid, io.in[1].valid @[build/NutShell.fir.opt.mlir 8492:7]
    connect decoder2.io.in.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 8493:7]
    connect io.out[0].bits, decoder1.io.out.bits @[build/NutShell.fir.opt.mlir 8494:7]
    connect io.out[0].valid, decoder1.io.out.valid @[build/NutShell.fir.opt.mlir 8495:7]
    connect decoder1.io.out.ready, io.out[0].ready @[build/NutShell.fir.opt.mlir 8496:7]
    connect io.out[1].bits, decoder2.io.out.bits @[build/NutShell.fir.opt.mlir 8497:7]
    connect io.out[1].valid, decoder2.io.out.valid @[build/NutShell.fir.opt.mlir 8498:7]
    connect decoder2.io.out.ready, io.out[1].ready @[build/NutShell.fir.opt.mlir 8499:7]
    connect io.in[1].ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8502:7]
    connect decoder2.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8504:7]
    regreset checkpoint_id : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 8506:24]
    connect io.out[0].bits.cf.isBranch, decoder1.io.isBranch @[build/NutShell.fir.opt.mlir 8507:7]
    connect io.out[0].bits.cf.runahead_checkpoint_id, checkpoint_id @[build/NutShell.fir.opt.mlir 8508:7]
    node _T = or(decoder1.io.isWFI, decoder2.io.isWFI) @[build/NutShell.fir.opt.mlir 8510:13]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 8511:16]
    connect _WIRE, _T @[build/NutShell.fir.opt.mlir 8512:7]
    connect decoder1.intrVec__bore, decoder1_intrVec__bore @[build/NutShell.fir.opt.mlir 8513:7]
    connect decoder2.intrVec__bore, decoder2_intrVec__bore @[build/NutShell.fir.opt.mlir 8514:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 8515:7]
    connect decoder1.vmEnable__bore, decoder1_vmEnable__bore @[build/NutShell.fir.opt.mlir 8516:7]
    connect decoder2.vmEnable__bore, decoder2_vmEnable__bore @[build/NutShell.fir.opt.mlir 8517:7]

  module FlushableQueue : @[build/NutShell.fir.opt.mlir 8519:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8519:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8519:72]
    output io : { flip enq : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, deq : { flip ready : UInt<1>, valid : UInt<1>, bits : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> } }, count : UInt<3>, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 8519:99]

    mem ram : @[build/NutShell.fir.opt.mlir 8536:44]
      data-type => { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }
      depth => 4
      read-latency => 0
      write-latency => 1
      reader => io_deq_bits_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate ram.MPORT.addr @[build/NutShell.fir.opt.mlir 8538:7]
    connect ram.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8540:7]
    invalidate ram.MPORT.clk @[build/NutShell.fir.opt.mlir 8542:7]
    invalidate ram.MPORT.data @[build/NutShell.fir.opt.mlir 8544:7]
    invalidate ram.MPORT.mask @[build/NutShell.fir.opt.mlir 8546:7]
    invalidate ram.io_deq_bits_MPORT.addr @[build/NutShell.fir.opt.mlir 8548:7]
    connect ram.io_deq_bits_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8550:7]
    invalidate ram.io_deq_bits_MPORT.clk @[build/NutShell.fir.opt.mlir 8552:7]
    regreset enq_ptr_value : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 8555:24]
    regreset deq_ptr_value : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 8556:24]
    regreset maybe_full : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8558:21]
    node ptr_match = eq(enq_ptr_value, deq_ptr_value) @[build/NutShell.fir.opt.mlir 8560:20]
    node _empty_T = eq(maybe_full, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8562:19]
    node empty = and(ptr_match, _empty_T) @[build/NutShell.fir.opt.mlir 8564:16]
    node full = and(ptr_match, maybe_full) @[build/NutShell.fir.opt.mlir 8566:15]
    node _do_enq_T = and(io.enq.ready, io.enq.valid) @[build/NutShell.fir.opt.mlir 8568:20]
    wire do_enq : UInt<1> @[build/NutShell.fir.opt.mlir 8569:17]
    connect do_enq, _do_enq_T @[build/NutShell.fir.opt.mlir 8570:7]
    node _do_deq_T = and(io.deq.ready, io.deq.valid) @[build/NutShell.fir.opt.mlir 8572:20]
    wire do_deq : UInt<1> @[build/NutShell.fir.opt.mlir 8573:17]
    connect do_deq, _do_deq_T @[build/NutShell.fir.opt.mlir 8574:7]
    when do_enq : @[build/NutShell.fir.opt.mlir 8577:7]
      connect ram.MPORT.addr, enq_ptr_value @[build/NutShell.fir.opt.mlir 8578:9]
      connect ram.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8579:9]
      connect ram.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 8580:9]
      connect ram.MPORT.mask.instr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8582:9]
      connect ram.MPORT.mask.pc, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8584:9]
      connect ram.MPORT.mask.pnpc, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8586:9]
      connect ram.MPORT.mask.redirect.target, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8589:9]
      connect ram.MPORT.mask.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8591:9]
      connect ram.MPORT.mask.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8593:9]
      connect ram.MPORT.mask.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8596:9]
      connect ram.MPORT.mask.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8598:9]
      connect ram.MPORT.mask.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8600:9]
      connect ram.MPORT.mask.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8602:9]
      connect ram.MPORT.mask.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8604:9]
      connect ram.MPORT.mask.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8606:9]
      connect ram.MPORT.mask.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8608:9]
      connect ram.MPORT.mask.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8610:9]
      connect ram.MPORT.mask.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8612:9]
      connect ram.MPORT.mask.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8614:9]
      connect ram.MPORT.mask.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8616:9]
      connect ram.MPORT.mask.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8618:9]
      connect ram.MPORT.mask.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8620:9]
      connect ram.MPORT.mask.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8622:9]
      connect ram.MPORT.mask.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8624:9]
      connect ram.MPORT.mask.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8626:9]
      connect ram.MPORT.mask.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8629:9]
      connect ram.MPORT.mask.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8631:9]
      connect ram.MPORT.mask.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8633:9]
      connect ram.MPORT.mask.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8635:9]
      connect ram.MPORT.mask.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8637:9]
      connect ram.MPORT.mask.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8639:9]
      connect ram.MPORT.mask.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8641:9]
      connect ram.MPORT.mask.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8643:9]
      connect ram.MPORT.mask.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8645:9]
      connect ram.MPORT.mask.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8647:9]
      connect ram.MPORT.mask.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8649:9]
      connect ram.MPORT.mask.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 8651:9]
      connect ram.MPORT.mask.brIdx, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8653:9]
      connect ram.MPORT.mask.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8655:9]
      connect ram.MPORT.mask.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8657:9]
      connect ram.MPORT.mask.runahead_checkpoint_id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8659:9]
      connect ram.MPORT.mask.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8661:9]
      connect ram.MPORT.mask.instr, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8663:9]
      connect ram.MPORT.mask.pc, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8665:9]
      connect ram.MPORT.mask.pnpc, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8667:9]
      connect ram.MPORT.mask.redirect.target, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8670:9]
      connect ram.MPORT.mask.redirect.rtype, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8672:9]
      connect ram.MPORT.mask.redirect.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8674:9]
      connect ram.MPORT.mask.exceptionVec[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8677:9]
      connect ram.MPORT.mask.exceptionVec[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8679:9]
      connect ram.MPORT.mask.exceptionVec[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8681:9]
      connect ram.MPORT.mask.exceptionVec[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8683:9]
      connect ram.MPORT.mask.exceptionVec[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8685:9]
      connect ram.MPORT.mask.exceptionVec[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8687:9]
      connect ram.MPORT.mask.exceptionVec[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8689:9]
      connect ram.MPORT.mask.exceptionVec[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8691:9]
      connect ram.MPORT.mask.exceptionVec[8], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8693:9]
      connect ram.MPORT.mask.exceptionVec[9], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8695:9]
      connect ram.MPORT.mask.exceptionVec[10], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8697:9]
      connect ram.MPORT.mask.exceptionVec[11], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8699:9]
      connect ram.MPORT.mask.exceptionVec[12], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8701:9]
      connect ram.MPORT.mask.exceptionVec[13], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8703:9]
      connect ram.MPORT.mask.exceptionVec[14], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8705:9]
      connect ram.MPORT.mask.exceptionVec[15], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8707:9]
      connect ram.MPORT.mask.intrVec[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8710:9]
      connect ram.MPORT.mask.intrVec[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8712:9]
      connect ram.MPORT.mask.intrVec[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8714:9]
      connect ram.MPORT.mask.intrVec[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8716:9]
      connect ram.MPORT.mask.intrVec[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8718:9]
      connect ram.MPORT.mask.intrVec[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8720:9]
      connect ram.MPORT.mask.intrVec[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8722:9]
      connect ram.MPORT.mask.intrVec[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8724:9]
      connect ram.MPORT.mask.intrVec[8], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8726:9]
      connect ram.MPORT.mask.intrVec[9], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8728:9]
      connect ram.MPORT.mask.intrVec[10], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8730:9]
      connect ram.MPORT.mask.intrVec[11], UInt<1>(1) @[build/NutShell.fir.opt.mlir 8732:9]
      connect ram.MPORT.mask.brIdx, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8734:9]
      connect ram.MPORT.mask.isRVC, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8736:9]
      connect ram.MPORT.mask.crossPageIPFFix, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8738:9]
      connect ram.MPORT.mask.runahead_checkpoint_id, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8740:9]
      connect ram.MPORT.mask.isBranch, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8742:9]
      connect ram.MPORT.data, io.enq.bits @[build/NutShell.fir.opt.mlir 8743:9]
      node wrap = eq(enq_ptr_value, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8745:17]
      node _value_T = add(enq_ptr_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8747:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 8749:23]
      connect enq_ptr_value, _value_T_1 @[build/NutShell.fir.opt.mlir 8750:9]
    when do_deq : @[build/NutShell.fir.opt.mlir 8752:7]
      node wrap_1 = eq(deq_ptr_value, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 8754:19]
      node _value_T_2 = add(deq_ptr_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 8756:23]
      node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 8758:23]
      connect deq_ptr_value, _value_T_3 @[build/NutShell.fir.opt.mlir 8759:9]
    node _T = neq(do_enq, do_deq) @[build/NutShell.fir.opt.mlir 8762:13]
    when _T : @[build/NutShell.fir.opt.mlir 8763:7]
      connect maybe_full, do_enq @[build/NutShell.fir.opt.mlir 8764:9]
    node _io_deq_valid_T = eq(empty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8767:26]
    connect io.deq.valid, _io_deq_valid_T @[build/NutShell.fir.opt.mlir 8768:7]
    node _io_enq_ready_T = eq(full, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 8770:26]
    connect io.enq.ready, _io_enq_ready_T @[build/NutShell.fir.opt.mlir 8771:7]
    connect ram.io_deq_bits_MPORT.addr, deq_ptr_value @[build/NutShell.fir.opt.mlir 8772:7]
    connect ram.io_deq_bits_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 8773:7]
    connect ram.io_deq_bits_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 8774:7]
    connect io.deq.bits, ram.io_deq_bits_MPORT.data @[build/NutShell.fir.opt.mlir 8775:7]
    when io.flush : @[build/NutShell.fir.opt.mlir 8776:7]
      connect enq_ptr_value, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 8779:9]
      connect deq_ptr_value, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 8782:9]
      connect maybe_full, UInt<1>(0) @[build/NutShell.fir.opt.mlir 8784:9]
    node _ptr_diff_T = sub(enq_ptr_value, deq_ptr_value) @[build/NutShell.fir.opt.mlir 8787:22]
    node ptr_diff = tail(_ptr_diff_T, 1) @[build/NutShell.fir.opt.mlir 8789:19]
    node _io_count_T = and(maybe_full, ptr_match) @[build/NutShell.fir.opt.mlir 8791:22]
    node _io_count_T_1 = cat(_io_count_T, ptr_diff) @[build/NutShell.fir.opt.mlir 8793:24]
    connect io.count, _io_count_T_1 @[build/NutShell.fir.opt.mlir 8794:7]

  extmodule LogPerfHelper_5 : @[build/NutShell.fir.opt.mlir 8796:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 8796:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 8796:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 8796:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 8796:140]
    defname = LogPerfHelper

  module Frontend_inorder : @[build/NutShell.fir.opt.mlir 8797:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 8797:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 8797:74]
    output io : { imem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], flushVec : UInt<4>, flip redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, bpFlush : UInt<1>, flip ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 8797:101]
    input idu_decoder1_intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 8797:1250]
    input idu_decoder2_intrVec__bore : UInt<12> @[build/NutShell.fir.opt.mlir 8797:1300]
    input ifu_bp1_req__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 8797:1350]
    output idu__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1543]
    input idu_decoder1_vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1581]
    input idu_decoder2_vmEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1631]
    output ifu_r__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1682]
    input ifu_bp1_flushTLB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1716]
    input ifu_bp1_flushBTB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1761]
    output ifu__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 8797:1807]

    inst ifu of IFU_inorder @[build/NutShell.fir.opt.mlir 8829:153]
    connect ifu.clock, clock @[build/NutShell.fir.opt.mlir 8898:7]
    connect ifu.reset, reset @[build/NutShell.fir.opt.mlir 8899:7]
    inst ibf of NaiveRVCAlignBuffer @[build/NutShell.fir.opt.mlir 8900:41]
    connect ibf.clock, clock @[build/NutShell.fir.opt.mlir 8910:7]
    connect ibf.reset, reset @[build/NutShell.fir.opt.mlir 8911:7]
    inst idu of IDU @[build/NutShell.fir.opt.mlir 8912:187]
    connect idu.clock, clock @[build/NutShell.fir.opt.mlir 9014:7]
    connect idu.reset, reset @[build/NutShell.fir.opt.mlir 9015:7]
    node _T = bits(ifu.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 9017:13]
    inst ibf_io_in_q of FlushableQueue @[build/NutShell.fir.opt.mlir 9018:65]
    connect ibf_io_in_q.clock, clock @[build/NutShell.fir.opt.mlir 9070:7]
    connect ibf_io_in_q.reset, reset @[build/NutShell.fir.opt.mlir 9071:7]
    connect ibf_io_in_q.io.enq.valid, ifu.io.out.valid @[build/NutShell.fir.opt.mlir 9072:7]
    connect ibf_io_in_q.io.enq.bits.isBranch, ifu.io.out.bits.isBranch @[build/NutShell.fir.opt.mlir 9073:7]
    connect ibf_io_in_q.io.enq.bits.runahead_checkpoint_id, ifu.io.out.bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9074:7]
    connect ibf_io_in_q.io.enq.bits.crossPageIPFFix, ifu.io.out.bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9075:7]
    connect ibf_io_in_q.io.enq.bits.isRVC, ifu.io.out.bits.isRVC @[build/NutShell.fir.opt.mlir 9076:7]
    connect ibf_io_in_q.io.enq.bits.brIdx, ifu.io.out.bits.brIdx @[build/NutShell.fir.opt.mlir 9077:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[0], ifu.io.out.bits.intrVec[0] @[build/NutShell.fir.opt.mlir 9078:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[1], ifu.io.out.bits.intrVec[1] @[build/NutShell.fir.opt.mlir 9079:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[2], ifu.io.out.bits.intrVec[2] @[build/NutShell.fir.opt.mlir 9080:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[3], ifu.io.out.bits.intrVec[3] @[build/NutShell.fir.opt.mlir 9081:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[4], ifu.io.out.bits.intrVec[4] @[build/NutShell.fir.opt.mlir 9082:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[5], ifu.io.out.bits.intrVec[5] @[build/NutShell.fir.opt.mlir 9083:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[6], ifu.io.out.bits.intrVec[6] @[build/NutShell.fir.opt.mlir 9084:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[7], ifu.io.out.bits.intrVec[7] @[build/NutShell.fir.opt.mlir 9085:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[8], ifu.io.out.bits.intrVec[8] @[build/NutShell.fir.opt.mlir 9086:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[9], ifu.io.out.bits.intrVec[9] @[build/NutShell.fir.opt.mlir 9087:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[10], ifu.io.out.bits.intrVec[10] @[build/NutShell.fir.opt.mlir 9088:7]
    connect ibf_io_in_q.io.enq.bits.intrVec[11], ifu.io.out.bits.intrVec[11] @[build/NutShell.fir.opt.mlir 9089:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[0], ifu.io.out.bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9090:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[1], ifu.io.out.bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9091:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[2], ifu.io.out.bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9092:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[3], ifu.io.out.bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9093:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[4], ifu.io.out.bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9094:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[5], ifu.io.out.bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9095:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[6], ifu.io.out.bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9096:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[7], ifu.io.out.bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9097:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[8], ifu.io.out.bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9098:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[9], ifu.io.out.bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9099:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[10], ifu.io.out.bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9100:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[11], ifu.io.out.bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9101:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[12], ifu.io.out.bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9102:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[13], ifu.io.out.bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9103:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[14], ifu.io.out.bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9104:7]
    connect ibf_io_in_q.io.enq.bits.exceptionVec[15], ifu.io.out.bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9105:7]
    connect ibf_io_in_q.io.enq.bits.redirect.valid, ifu.io.out.bits.redirect.valid @[build/NutShell.fir.opt.mlir 9106:7]
    connect ibf_io_in_q.io.enq.bits.redirect.rtype, ifu.io.out.bits.redirect.rtype @[build/NutShell.fir.opt.mlir 9107:7]
    connect ibf_io_in_q.io.enq.bits.redirect.target, ifu.io.out.bits.redirect.target @[build/NutShell.fir.opt.mlir 9108:7]
    connect ibf_io_in_q.io.enq.bits.pnpc, ifu.io.out.bits.pnpc @[build/NutShell.fir.opt.mlir 9109:7]
    connect ibf_io_in_q.io.enq.bits.pc, ifu.io.out.bits.pc @[build/NutShell.fir.opt.mlir 9110:7]
    connect ibf_io_in_q.io.enq.bits.instr, ifu.io.out.bits.instr @[build/NutShell.fir.opt.mlir 9111:7]
    connect ibf_io_in_q.io.flush, _T @[build/NutShell.fir.opt.mlir 9112:7]
    connect ifu.io.out.ready, ibf_io_in_q.io.enq.ready @[build/NutShell.fir.opt.mlir 9113:7]
    connect ibf_io_in_q.io.deq.ready, ibf.io.in.ready @[build/NutShell.fir.opt.mlir 9114:7]
    connect ibf.io.in.valid, ibf_io_in_q.io.deq.valid @[build/NutShell.fir.opt.mlir 9115:7]
    connect ibf.io.in.bits, ibf_io_in_q.io.deq.bits @[build/NutShell.fir.opt.mlir 9116:7]
    node _T_1 = and(idu.io.out[0].ready, idu.io.out[0].valid) @[build/NutShell.fir.opt.mlir 9118:15]
    node _T_2 = bits(ifu.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 9120:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9122:16]
    when _T_1 : @[build/NutShell.fir.opt.mlir 9123:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9125:9]
    node _T_3 = and(ibf.io.out.valid, idu.io.in[0].ready) @[build/NutShell.fir.opt.mlir 9128:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 9130:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 9132:9]
    when _T_2 : @[build/NutShell.fir.opt.mlir 9134:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9136:9]
    connect ibf.io.out.ready, idu.io.in[0].ready @[build/NutShell.fir.opt.mlir 9138:7]
    node _idu_io_in_0_bits_T = and(ibf.io.out.valid, idu.io.in[0].ready) @[build/NutShell.fir.opt.mlir 9140:30]
    reg idu_io_in_0_bits_r : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 9141:29]
    when _idu_io_in_0_bits_T : @[build/NutShell.fir.opt.mlir 9184:7]
      connect idu_io_in_0_bits_r, ibf.io.out.bits @[build/NutShell.fir.opt.mlir 9185:9]
    connect idu.io.in[0].bits.isBranch, idu_io_in_0_bits_r.isBranch @[build/NutShell.fir.opt.mlir 9187:7]
    connect idu.io.in[0].bits.runahead_checkpoint_id, idu_io_in_0_bits_r.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9188:7]
    connect idu.io.in[0].bits.crossPageIPFFix, idu_io_in_0_bits_r.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9189:7]
    connect idu.io.in[0].bits.isRVC, idu_io_in_0_bits_r.isRVC @[build/NutShell.fir.opt.mlir 9190:7]
    connect idu.io.in[0].bits.brIdx, idu_io_in_0_bits_r.brIdx @[build/NutShell.fir.opt.mlir 9191:7]
    connect idu.io.in[0].bits.intrVec[0], idu_io_in_0_bits_r.intrVec[0] @[build/NutShell.fir.opt.mlir 9192:7]
    connect idu.io.in[0].bits.intrVec[1], idu_io_in_0_bits_r.intrVec[1] @[build/NutShell.fir.opt.mlir 9193:7]
    connect idu.io.in[0].bits.intrVec[2], idu_io_in_0_bits_r.intrVec[2] @[build/NutShell.fir.opt.mlir 9194:7]
    connect idu.io.in[0].bits.intrVec[3], idu_io_in_0_bits_r.intrVec[3] @[build/NutShell.fir.opt.mlir 9195:7]
    connect idu.io.in[0].bits.intrVec[4], idu_io_in_0_bits_r.intrVec[4] @[build/NutShell.fir.opt.mlir 9196:7]
    connect idu.io.in[0].bits.intrVec[5], idu_io_in_0_bits_r.intrVec[5] @[build/NutShell.fir.opt.mlir 9197:7]
    connect idu.io.in[0].bits.intrVec[6], idu_io_in_0_bits_r.intrVec[6] @[build/NutShell.fir.opt.mlir 9198:7]
    connect idu.io.in[0].bits.intrVec[7], idu_io_in_0_bits_r.intrVec[7] @[build/NutShell.fir.opt.mlir 9199:7]
    connect idu.io.in[0].bits.intrVec[8], idu_io_in_0_bits_r.intrVec[8] @[build/NutShell.fir.opt.mlir 9200:7]
    connect idu.io.in[0].bits.intrVec[9], idu_io_in_0_bits_r.intrVec[9] @[build/NutShell.fir.opt.mlir 9201:7]
    connect idu.io.in[0].bits.intrVec[10], idu_io_in_0_bits_r.intrVec[10] @[build/NutShell.fir.opt.mlir 9202:7]
    connect idu.io.in[0].bits.intrVec[11], idu_io_in_0_bits_r.intrVec[11] @[build/NutShell.fir.opt.mlir 9203:7]
    connect idu.io.in[0].bits.exceptionVec[0], idu_io_in_0_bits_r.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9204:7]
    connect idu.io.in[0].bits.exceptionVec[1], idu_io_in_0_bits_r.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9205:7]
    connect idu.io.in[0].bits.exceptionVec[2], idu_io_in_0_bits_r.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9206:7]
    connect idu.io.in[0].bits.exceptionVec[3], idu_io_in_0_bits_r.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9207:7]
    connect idu.io.in[0].bits.exceptionVec[4], idu_io_in_0_bits_r.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9208:7]
    connect idu.io.in[0].bits.exceptionVec[5], idu_io_in_0_bits_r.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9209:7]
    connect idu.io.in[0].bits.exceptionVec[6], idu_io_in_0_bits_r.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9210:7]
    connect idu.io.in[0].bits.exceptionVec[7], idu_io_in_0_bits_r.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9211:7]
    connect idu.io.in[0].bits.exceptionVec[8], idu_io_in_0_bits_r.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9212:7]
    connect idu.io.in[0].bits.exceptionVec[9], idu_io_in_0_bits_r.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9213:7]
    connect idu.io.in[0].bits.exceptionVec[10], idu_io_in_0_bits_r.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9214:7]
    connect idu.io.in[0].bits.exceptionVec[11], idu_io_in_0_bits_r.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9215:7]
    connect idu.io.in[0].bits.exceptionVec[12], idu_io_in_0_bits_r.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9216:7]
    connect idu.io.in[0].bits.exceptionVec[13], idu_io_in_0_bits_r.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9217:7]
    connect idu.io.in[0].bits.exceptionVec[14], idu_io_in_0_bits_r.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9218:7]
    connect idu.io.in[0].bits.exceptionVec[15], idu_io_in_0_bits_r.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9219:7]
    connect idu.io.in[0].bits.redirect.valid, idu_io_in_0_bits_r.redirect.valid @[build/NutShell.fir.opt.mlir 9220:7]
    connect idu.io.in[0].bits.redirect.rtype, idu_io_in_0_bits_r.redirect.rtype @[build/NutShell.fir.opt.mlir 9221:7]
    connect idu.io.in[0].bits.redirect.target, idu_io_in_0_bits_r.redirect.target @[build/NutShell.fir.opt.mlir 9222:7]
    connect idu.io.in[0].bits.pnpc, idu_io_in_0_bits_r.pnpc @[build/NutShell.fir.opt.mlir 9223:7]
    connect idu.io.in[0].bits.pc, idu_io_in_0_bits_r.pc @[build/NutShell.fir.opt.mlir 9224:7]
    connect idu.io.in[0].bits.instr, idu_io_in_0_bits_r.instr @[build/NutShell.fir.opt.mlir 9225:7]
    connect idu.io.in[0].valid, valid @[build/NutShell.fir.opt.mlir 9226:7]
    invalidate idu.io.in[1].bits.isBranch @[build/NutShell.fir.opt.mlir 9228:7]
    invalidate idu.io.in[1].bits.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9230:7]
    invalidate idu.io.in[1].bits.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9232:7]
    invalidate idu.io.in[1].bits.isRVC @[build/NutShell.fir.opt.mlir 9234:7]
    invalidate idu.io.in[1].bits.brIdx @[build/NutShell.fir.opt.mlir 9236:7]
    invalidate idu.io.in[1].bits.intrVec[0] @[build/NutShell.fir.opt.mlir 9238:7]
    invalidate idu.io.in[1].bits.intrVec[1] @[build/NutShell.fir.opt.mlir 9240:7]
    invalidate idu.io.in[1].bits.intrVec[2] @[build/NutShell.fir.opt.mlir 9242:7]
    invalidate idu.io.in[1].bits.intrVec[3] @[build/NutShell.fir.opt.mlir 9244:7]
    invalidate idu.io.in[1].bits.intrVec[4] @[build/NutShell.fir.opt.mlir 9246:7]
    invalidate idu.io.in[1].bits.intrVec[5] @[build/NutShell.fir.opt.mlir 9248:7]
    invalidate idu.io.in[1].bits.intrVec[6] @[build/NutShell.fir.opt.mlir 9250:7]
    invalidate idu.io.in[1].bits.intrVec[7] @[build/NutShell.fir.opt.mlir 9252:7]
    invalidate idu.io.in[1].bits.intrVec[8] @[build/NutShell.fir.opt.mlir 9254:7]
    invalidate idu.io.in[1].bits.intrVec[9] @[build/NutShell.fir.opt.mlir 9256:7]
    invalidate idu.io.in[1].bits.intrVec[10] @[build/NutShell.fir.opt.mlir 9258:7]
    invalidate idu.io.in[1].bits.intrVec[11] @[build/NutShell.fir.opt.mlir 9260:7]
    invalidate idu.io.in[1].bits.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9262:7]
    invalidate idu.io.in[1].bits.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9264:7]
    invalidate idu.io.in[1].bits.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9266:7]
    invalidate idu.io.in[1].bits.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9268:7]
    invalidate idu.io.in[1].bits.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9270:7]
    invalidate idu.io.in[1].bits.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9272:7]
    invalidate idu.io.in[1].bits.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9274:7]
    invalidate idu.io.in[1].bits.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9276:7]
    invalidate idu.io.in[1].bits.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9278:7]
    invalidate idu.io.in[1].bits.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9280:7]
    invalidate idu.io.in[1].bits.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9282:7]
    invalidate idu.io.in[1].bits.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9284:7]
    invalidate idu.io.in[1].bits.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9286:7]
    invalidate idu.io.in[1].bits.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9288:7]
    invalidate idu.io.in[1].bits.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9290:7]
    invalidate idu.io.in[1].bits.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9292:7]
    invalidate idu.io.in[1].bits.redirect.valid @[build/NutShell.fir.opt.mlir 9294:7]
    invalidate idu.io.in[1].bits.redirect.rtype @[build/NutShell.fir.opt.mlir 9296:7]
    invalidate idu.io.in[1].bits.redirect.target @[build/NutShell.fir.opt.mlir 9298:7]
    invalidate idu.io.in[1].bits.pnpc @[build/NutShell.fir.opt.mlir 9300:7]
    invalidate idu.io.in[1].bits.pc @[build/NutShell.fir.opt.mlir 9302:7]
    invalidate idu.io.in[1].bits.instr @[build/NutShell.fir.opt.mlir 9304:7]
    invalidate idu.io.in[1].valid @[build/NutShell.fir.opt.mlir 9306:7]
    node _ibf_io_flush_T = bits(ifu.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 9308:26]
    connect ibf.io.flush, _ibf_io_flush_T @[build/NutShell.fir.opt.mlir 9309:7]
    connect io.out[0].bits, idu.io.out[0].bits @[build/NutShell.fir.opt.mlir 9310:7]
    connect io.out[0].valid, idu.io.out[0].valid @[build/NutShell.fir.opt.mlir 9311:7]
    connect idu.io.out[0].ready, io.out[0].ready @[build/NutShell.fir.opt.mlir 9312:7]
    connect io.out[1].bits, idu.io.out[1].bits @[build/NutShell.fir.opt.mlir 9313:7]
    connect io.out[1].valid, idu.io.out[1].valid @[build/NutShell.fir.opt.mlir 9314:7]
    connect idu.io.out[1].ready, io.out[1].ready @[build/NutShell.fir.opt.mlir 9315:7]
    connect ifu.io.redirect, io.redirect @[build/NutShell.fir.opt.mlir 9316:7]
    connect io.flushVec, ifu.io.flushVec @[build/NutShell.fir.opt.mlir 9317:7]
    connect io.bpFlush, ifu.io.bpFlush @[build/NutShell.fir.opt.mlir 9318:7]
    connect ifu.io.ipf, io.ipf @[build/NutShell.fir.opt.mlir 9319:7]
    connect io.imem.resp.ready, ifu.io.imem.resp.ready @[build/NutShell.fir.opt.mlir 9320:7]
    connect ifu.io.imem.resp.valid, io.imem.resp.valid @[build/NutShell.fir.opt.mlir 9321:7]
    connect ifu.io.imem.resp.bits.cmd, io.imem.resp.bits.cmd @[build/NutShell.fir.opt.mlir 9322:7]
    connect ifu.io.imem.resp.bits.rdata, io.imem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 9323:7]
    connect ifu.io.imem.resp.bits.user, tail(io.imem.resp.bits.user, 5) @[build/NutShell.fir.opt.mlir 9325:7]
    connect io.imem.req.bits.addr, ifu.io.imem.req.bits.addr @[build/NutShell.fir.opt.mlir 9326:7]
    connect io.imem.req.bits.size, ifu.io.imem.req.bits.size @[build/NutShell.fir.opt.mlir 9327:7]
    connect io.imem.req.bits.cmd, ifu.io.imem.req.bits.cmd @[build/NutShell.fir.opt.mlir 9328:7]
    connect io.imem.req.bits.wmask, ifu.io.imem.req.bits.wmask @[build/NutShell.fir.opt.mlir 9329:7]
    connect io.imem.req.bits.wdata, ifu.io.imem.req.bits.wdata @[build/NutShell.fir.opt.mlir 9330:7]
    connect io.imem.req.bits.user, pad(ifu.io.imem.req.bits.user, 87) @[build/NutShell.fir.opt.mlir 9332:7]
    connect io.imem.req.valid, ifu.io.imem.req.valid @[build/NutShell.fir.opt.mlir 9333:7]
    connect ifu.io.imem.req.ready, io.imem.req.ready @[build/NutShell.fir.opt.mlir 9334:7]
    inst LogPerfHelper of LogPerfHelper_5 @[build/NutShell.fir.opt.mlir 9335:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 9336:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 9341:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 9342:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 9343:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 9344:7]
    node _T_4 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 9346:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 9347:7]
      node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9349:17]
      node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9351:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 9352:9]
        skip @[build/NutShell.fir.opt.mlir 9353:11]
      node _T_7 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9356:17]
      node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9358:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 9359:9]
        skip @[build/NutShell.fir.opt.mlir 9360:11]
    node _T_9 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 9364:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 9365:7]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9367:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9369:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 9370:9]
        skip @[build/NutShell.fir.opt.mlir 9371:11]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9374:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9376:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 9377:9]
        skip @[build/NutShell.fir.opt.mlir 9378:11]
    node _T_14 = and(ifu.io.out.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 9382:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 9383:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9385:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9387:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 9388:9]
        skip @[build/NutShell.fir.opt.mlir 9389:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9392:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9394:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 9395:9]
        skip @[build/NutShell.fir.opt.mlir 9396:11]
    node _T_19 = and(idu.io.in[0].valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 9400:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 9401:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9403:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9405:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 9406:9]
        skip @[build/NutShell.fir.opt.mlir 9407:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 9410:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9412:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 9413:9]
        skip @[build/NutShell.fir.opt.mlir 9414:11]
    connect idu.decoder1_intrVec__bore, idu_decoder1_intrVec__bore @[build/NutShell.fir.opt.mlir 9417:7]
    connect idu.decoder2_intrVec__bore, idu_decoder2_intrVec__bore @[build/NutShell.fir.opt.mlir 9418:7]
    connect ifu.bp1_req__bore, ifu_bp1_req__bore @[build/NutShell.fir.opt.mlir 9419:7]
    connect idu__WIRE__bore, idu._WIRE__bore @[build/NutShell.fir.opt.mlir 9420:7]
    connect idu.decoder1_vmEnable__bore, idu_decoder1_vmEnable__bore @[build/NutShell.fir.opt.mlir 9421:7]
    connect idu.decoder2_vmEnable__bore, idu_decoder2_vmEnable__bore @[build/NutShell.fir.opt.mlir 9422:7]
    connect ifu_r__bore, ifu.r__bore @[build/NutShell.fir.opt.mlir 9423:7]
    connect ifu.bp1_flushTLB__bore, ifu_bp1_flushTLB__bore @[build/NutShell.fir.opt.mlir 9424:7]
    connect ifu.bp1_flushBTB__bore, ifu_bp1_flushBTB__bore @[build/NutShell.fir.opt.mlir 9425:7]
    connect ifu__WIRE__bore, ifu._WIRE__bore @[build/NutShell.fir.opt.mlir 9426:7]

  extmodule LogPerfHelper_6 : @[build/NutShell.fir.opt.mlir 9428:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 9428:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 9428:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 9428:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 9428:140]
    defname = LogPerfHelper

  extmodule DifftestArchIntRegState : @[build/NutShell.fir.opt.mlir 9429:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9429:58]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 9429:83]
    input io : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 9429:111]
    defname = DifftestArchIntRegState

  module DummyDPICWrapper : @[build/NutShell.fir.opt.mlir 9430:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9430:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 9430:74]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 9430:100]
    input io : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 9430:146]

    inst dpic of DifftestArchIntRegState @[build/NutShell.fir.opt.mlir 9466:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 9501:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 9504:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 9505:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 9506:7]
    connect dpic.io.value[0], io.value[0] @[build/NutShell.fir.opt.mlir 9507:7]
    connect dpic.io.value[1], io.value[1] @[build/NutShell.fir.opt.mlir 9508:7]
    connect dpic.io.value[2], io.value[2] @[build/NutShell.fir.opt.mlir 9509:7]
    connect dpic.io.value[3], io.value[3] @[build/NutShell.fir.opt.mlir 9510:7]
    connect dpic.io.value[4], io.value[4] @[build/NutShell.fir.opt.mlir 9511:7]
    connect dpic.io.value[5], io.value[5] @[build/NutShell.fir.opt.mlir 9512:7]
    connect dpic.io.value[6], io.value[6] @[build/NutShell.fir.opt.mlir 9513:7]
    connect dpic.io.value[7], io.value[7] @[build/NutShell.fir.opt.mlir 9514:7]
    connect dpic.io.value[8], io.value[8] @[build/NutShell.fir.opt.mlir 9515:7]
    connect dpic.io.value[9], io.value[9] @[build/NutShell.fir.opt.mlir 9516:7]
    connect dpic.io.value[10], io.value[10] @[build/NutShell.fir.opt.mlir 9517:7]
    connect dpic.io.value[11], io.value[11] @[build/NutShell.fir.opt.mlir 9518:7]
    connect dpic.io.value[12], io.value[12] @[build/NutShell.fir.opt.mlir 9519:7]
    connect dpic.io.value[13], io.value[13] @[build/NutShell.fir.opt.mlir 9520:7]
    connect dpic.io.value[14], io.value[14] @[build/NutShell.fir.opt.mlir 9521:7]
    connect dpic.io.value[15], io.value[15] @[build/NutShell.fir.opt.mlir 9522:7]
    connect dpic.io.value[16], io.value[16] @[build/NutShell.fir.opt.mlir 9523:7]
    connect dpic.io.value[17], io.value[17] @[build/NutShell.fir.opt.mlir 9524:7]
    connect dpic.io.value[18], io.value[18] @[build/NutShell.fir.opt.mlir 9525:7]
    connect dpic.io.value[19], io.value[19] @[build/NutShell.fir.opt.mlir 9526:7]
    connect dpic.io.value[20], io.value[20] @[build/NutShell.fir.opt.mlir 9527:7]
    connect dpic.io.value[21], io.value[21] @[build/NutShell.fir.opt.mlir 9528:7]
    connect dpic.io.value[22], io.value[22] @[build/NutShell.fir.opt.mlir 9529:7]
    connect dpic.io.value[23], io.value[23] @[build/NutShell.fir.opt.mlir 9530:7]
    connect dpic.io.value[24], io.value[24] @[build/NutShell.fir.opt.mlir 9531:7]
    connect dpic.io.value[25], io.value[25] @[build/NutShell.fir.opt.mlir 9532:7]
    connect dpic.io.value[26], io.value[26] @[build/NutShell.fir.opt.mlir 9533:7]
    connect dpic.io.value[27], io.value[27] @[build/NutShell.fir.opt.mlir 9534:7]
    connect dpic.io.value[28], io.value[28] @[build/NutShell.fir.opt.mlir 9535:7]
    connect dpic.io.value[29], io.value[29] @[build/NutShell.fir.opt.mlir 9536:7]
    connect dpic.io.value[30], io.value[30] @[build/NutShell.fir.opt.mlir 9537:7]
    connect dpic.io.value[31], io.value[31] @[build/NutShell.fir.opt.mlir 9538:7]

  module ISU : @[build/NutShell.fir.opt.mlir 9540:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 9540:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 9540:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, flip wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, flip forward : { valid : UInt<1>, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, fuType : UInt<3> }, flip flush : UInt<1> } @[build/NutShell.fir.opt.mlir 9540:88]
    output _WIRE_2__bore : UInt<1> @[build/NutShell.fir.opt.mlir 9540:1727]
    output _WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 9540:1764]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 9540:1801]

    invalidate io.out.bits.data.imm @[build/NutShell.fir.opt.mlir 9642:7]
    invalidate io.out.bits.data.src2 @[build/NutShell.fir.opt.mlir 9644:7]
    invalidate io.out.bits.data.src1 @[build/NutShell.fir.opt.mlir 9646:7]
    invalidate io.out.bits.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 9648:7]
    invalidate io.out.bits.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 9650:7]
    invalidate io.out.bits.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 9652:7]
    invalidate io.out.bits.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 9654:7]
    invalidate io.out.bits.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 9656:7]
    invalidate io.out.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 9658:7]
    invalidate io.out.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 9660:7]
    invalidate io.out.bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 9662:7]
    invalidate io.out.bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 9664:7]
    invalidate io.out.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 9666:7]
    invalidate io.out.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 9668:7]
    invalidate io.out.bits.ctrl.src2Type @[build/NutShell.fir.opt.mlir 9670:7]
    invalidate io.out.bits.ctrl.src1Type @[build/NutShell.fir.opt.mlir 9672:7]
    invalidate io.out.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 9674:7]
    invalidate io.out.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 9676:7]
    invalidate io.out.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 9678:7]
    invalidate io.out.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 9680:7]
    invalidate io.out.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 9682:7]
    invalidate io.out.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 9684:7]
    invalidate io.out.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 9686:7]
    invalidate io.out.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 9688:7]
    invalidate io.out.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 9690:7]
    invalidate io.out.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 9692:7]
    invalidate io.out.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 9694:7]
    invalidate io.out.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 9696:7]
    invalidate io.out.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 9698:7]
    invalidate io.out.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 9700:7]
    invalidate io.out.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 9702:7]
    invalidate io.out.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 9704:7]
    invalidate io.out.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 9706:7]
    invalidate io.out.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 9708:7]
    invalidate io.out.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 9710:7]
    invalidate io.out.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 9712:7]
    invalidate io.out.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 9714:7]
    invalidate io.out.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 9716:7]
    invalidate io.out.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 9718:7]
    invalidate io.out.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 9720:7]
    invalidate io.out.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 9722:7]
    invalidate io.out.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 9724:7]
    invalidate io.out.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 9726:7]
    invalidate io.out.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 9728:7]
    invalidate io.out.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 9730:7]
    invalidate io.out.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 9732:7]
    invalidate io.out.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 9734:7]
    invalidate io.out.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 9736:7]
    invalidate io.out.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 9738:7]
    invalidate io.out.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 9740:7]
    invalidate io.out.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 9742:7]
    invalidate io.out.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 9744:7]
    invalidate io.out.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 9746:7]
    invalidate io.out.bits.cf.pc @[build/NutShell.fir.opt.mlir 9748:7]
    invalidate io.out.bits.cf.instr @[build/NutShell.fir.opt.mlir 9750:7]
    node forwardRfWen = and(io.forward.wb.rfWen, io.forward.valid) @[build/NutShell.fir.opt.mlir 9752:23]
    node _dontForward1_T = neq(io.forward.fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9755:26]
    node _dontForward1_T_1 = neq(io.forward.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9758:28]
    node dontForward1 = and(_dontForward1_T, _dontForward1_T_1) @[build/NutShell.fir.opt.mlir 9760:23]
    node _src1DependEX_T = neq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9762:26]
    node _src1DependEX_T_1 = eq(io.in[0].bits.ctrl.rfSrc1, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 9764:28]
    node _src1DependEX_T_2 = and(_src1DependEX_T, _src1DependEX_T_1) @[build/NutShell.fir.opt.mlir 9766:28]
    node src1DependEX = and(_src1DependEX_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 9768:23]
    node _src2DependEX_T = neq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9770:26]
    node _src2DependEX_T_1 = eq(io.in[0].bits.ctrl.rfSrc2, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 9772:28]
    node _src2DependEX_T_2 = and(_src2DependEX_T, _src2DependEX_T_1) @[build/NutShell.fir.opt.mlir 9774:28]
    node src2DependEX = and(_src2DependEX_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 9776:23]
    node _src1DependWB_T = neq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9778:26]
    node _src1DependWB_T_1 = eq(io.in[0].bits.ctrl.rfSrc1, io.wb.rfDest) @[build/NutShell.fir.opt.mlir 9780:28]
    node _src1DependWB_T_2 = and(_src1DependWB_T, _src1DependWB_T_1) @[build/NutShell.fir.opt.mlir 9782:28]
    node src1DependWB = and(_src1DependWB_T_2, io.wb.rfWen) @[build/NutShell.fir.opt.mlir 9784:23]
    node _src2DependWB_T = neq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9786:26]
    node _src2DependWB_T_1 = eq(io.in[0].bits.ctrl.rfSrc2, io.wb.rfDest) @[build/NutShell.fir.opt.mlir 9788:28]
    node _src2DependWB_T_2 = and(_src2DependWB_T, _src2DependWB_T_1) @[build/NutShell.fir.opt.mlir 9790:28]
    node src2DependWB = and(_src2DependWB_T_2, io.wb.rfWen) @[build/NutShell.fir.opt.mlir 9792:23]
    node _src1ForwardNextCycle_T = eq(dontForward1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9794:34]
    node src1ForwardNextCycle = and(src1DependEX, _src1ForwardNextCycle_T) @[build/NutShell.fir.opt.mlir 9796:31]
    node _src2ForwardNextCycle_T = eq(dontForward1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9798:34]
    node src2ForwardNextCycle = and(src2DependEX, _src2ForwardNextCycle_T) @[build/NutShell.fir.opt.mlir 9800:31]
    node _src1Forward_T = eq(src1DependEX, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9802:25]
    node _src1Forward_T_1 = mux(dontForward1, _src1Forward_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9804:27]
    node src1Forward = and(src1DependWB, _src1Forward_T_1) @[build/NutShell.fir.opt.mlir 9806:22]
    node _src2Forward_T = eq(src2DependEX, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9808:25]
    node _src2Forward_T_1 = mux(dontForward1, _src2Forward_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 9810:27]
    node src2Forward = and(src2DependWB, _src2Forward_T_1) @[build/NutShell.fir.opt.mlir 9812:22]
    regreset busy : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 9814:15]
    node _src1Ready_T = dshr(busy, io.in[0].bits.ctrl.rfSrc1) @[build/NutShell.fir.opt.mlir 9816:23]
    node _src1Ready_T_1 = bits(_src1Ready_T, 0, 0) @[build/NutShell.fir.opt.mlir 9818:25]
    node _src1Ready_T_2 = eq(_src1Ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9820:25]
    node _src1Ready_T_3 = or(_src1Ready_T_2, src1ForwardNextCycle) @[build/NutShell.fir.opt.mlir 9822:25]
    node src1Ready = or(_src1Ready_T_3, src1Forward) @[build/NutShell.fir.opt.mlir 9824:20]
    node _src2Ready_T = dshr(busy, io.in[0].bits.ctrl.rfSrc2) @[build/NutShell.fir.opt.mlir 9826:23]
    node _src2Ready_T_1 = bits(_src2Ready_T, 0, 0) @[build/NutShell.fir.opt.mlir 9828:25]
    node _src2Ready_T_2 = eq(_src2Ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 9830:25]
    node _src2Ready_T_3 = or(_src2Ready_T_2, src2ForwardNextCycle) @[build/NutShell.fir.opt.mlir 9832:25]
    node src2Ready = or(_src2Ready_T_3, src2Forward) @[build/NutShell.fir.opt.mlir 9834:20]
    node _io_out_valid_T = and(io.in[0].valid, src1Ready) @[build/NutShell.fir.opt.mlir 9836:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, src2Ready) @[build/NutShell.fir.opt.mlir 9838:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 9839:7]
    mem rf : @[build/NutShell.fir.opt.mlir 9840:524]
      data-type => UInt<64>
      depth => 32
      read-latency => 0
      write-latency => 1
      reader => MPORT_1
      reader => MPORT_10
      reader => MPORT_11
      reader => MPORT_12
      reader => MPORT_13
      reader => MPORT_14
      reader => MPORT_15
      reader => MPORT_16
      reader => MPORT_17
      reader => MPORT_18
      reader => MPORT_19
      reader => MPORT_2
      reader => MPORT_20
      reader => MPORT_21
      reader => MPORT_22
      reader => MPORT_23
      reader => MPORT_24
      reader => MPORT_25
      reader => MPORT_26
      reader => MPORT_27
      reader => MPORT_28
      reader => MPORT_29
      reader => MPORT_3
      reader => MPORT_30
      reader => MPORT_31
      reader => MPORT_32
      reader => MPORT_4
      reader => MPORT_5
      reader => MPORT_6
      reader => MPORT_7
      reader => MPORT_8
      reader => MPORT_9
      reader => io_out_bits_data_src1_MPORT
      reader => io_out_bits_data_src2_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate rf.MPORT.addr @[build/NutShell.fir.opt.mlir 9842:7]
    connect rf.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9844:7]
    invalidate rf.MPORT.clk @[build/NutShell.fir.opt.mlir 9846:7]
    invalidate rf.MPORT.data @[build/NutShell.fir.opt.mlir 9848:7]
    invalidate rf.MPORT.mask @[build/NutShell.fir.opt.mlir 9850:7]
    invalidate rf.MPORT_1.addr @[build/NutShell.fir.opt.mlir 9852:7]
    connect rf.MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9854:7]
    invalidate rf.MPORT_1.clk @[build/NutShell.fir.opt.mlir 9856:7]
    invalidate rf.MPORT_10.addr @[build/NutShell.fir.opt.mlir 9859:7]
    connect rf.MPORT_10.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9861:7]
    invalidate rf.MPORT_10.clk @[build/NutShell.fir.opt.mlir 9863:7]
    invalidate rf.MPORT_11.addr @[build/NutShell.fir.opt.mlir 9866:7]
    connect rf.MPORT_11.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9868:7]
    invalidate rf.MPORT_11.clk @[build/NutShell.fir.opt.mlir 9870:7]
    invalidate rf.MPORT_12.addr @[build/NutShell.fir.opt.mlir 9873:7]
    connect rf.MPORT_12.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9875:7]
    invalidate rf.MPORT_12.clk @[build/NutShell.fir.opt.mlir 9877:7]
    invalidate rf.MPORT_13.addr @[build/NutShell.fir.opt.mlir 9880:7]
    connect rf.MPORT_13.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9882:7]
    invalidate rf.MPORT_13.clk @[build/NutShell.fir.opt.mlir 9884:7]
    invalidate rf.MPORT_14.addr @[build/NutShell.fir.opt.mlir 9887:7]
    connect rf.MPORT_14.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9889:7]
    invalidate rf.MPORT_14.clk @[build/NutShell.fir.opt.mlir 9891:7]
    invalidate rf.MPORT_15.addr @[build/NutShell.fir.opt.mlir 9894:7]
    connect rf.MPORT_15.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9896:7]
    invalidate rf.MPORT_15.clk @[build/NutShell.fir.opt.mlir 9898:7]
    invalidate rf.MPORT_16.addr @[build/NutShell.fir.opt.mlir 9901:7]
    connect rf.MPORT_16.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9903:7]
    invalidate rf.MPORT_16.clk @[build/NutShell.fir.opt.mlir 9905:7]
    invalidate rf.MPORT_17.addr @[build/NutShell.fir.opt.mlir 9908:7]
    connect rf.MPORT_17.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9910:7]
    invalidate rf.MPORT_17.clk @[build/NutShell.fir.opt.mlir 9912:7]
    invalidate rf.MPORT_18.addr @[build/NutShell.fir.opt.mlir 9915:7]
    connect rf.MPORT_18.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9917:7]
    invalidate rf.MPORT_18.clk @[build/NutShell.fir.opt.mlir 9919:7]
    invalidate rf.MPORT_19.addr @[build/NutShell.fir.opt.mlir 9922:7]
    connect rf.MPORT_19.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9924:7]
    invalidate rf.MPORT_19.clk @[build/NutShell.fir.opt.mlir 9926:7]
    invalidate rf.MPORT_2.addr @[build/NutShell.fir.opt.mlir 9929:7]
    connect rf.MPORT_2.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9931:7]
    invalidate rf.MPORT_2.clk @[build/NutShell.fir.opt.mlir 9933:7]
    invalidate rf.MPORT_20.addr @[build/NutShell.fir.opt.mlir 9936:7]
    connect rf.MPORT_20.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9938:7]
    invalidate rf.MPORT_20.clk @[build/NutShell.fir.opt.mlir 9940:7]
    invalidate rf.MPORT_21.addr @[build/NutShell.fir.opt.mlir 9943:7]
    connect rf.MPORT_21.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9945:7]
    invalidate rf.MPORT_21.clk @[build/NutShell.fir.opt.mlir 9947:7]
    invalidate rf.MPORT_22.addr @[build/NutShell.fir.opt.mlir 9950:7]
    connect rf.MPORT_22.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9952:7]
    invalidate rf.MPORT_22.clk @[build/NutShell.fir.opt.mlir 9954:7]
    invalidate rf.MPORT_23.addr @[build/NutShell.fir.opt.mlir 9957:7]
    connect rf.MPORT_23.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9959:7]
    invalidate rf.MPORT_23.clk @[build/NutShell.fir.opt.mlir 9961:7]
    invalidate rf.MPORT_24.addr @[build/NutShell.fir.opt.mlir 9964:7]
    connect rf.MPORT_24.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9966:7]
    invalidate rf.MPORT_24.clk @[build/NutShell.fir.opt.mlir 9968:7]
    invalidate rf.MPORT_25.addr @[build/NutShell.fir.opt.mlir 9971:7]
    connect rf.MPORT_25.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9973:7]
    invalidate rf.MPORT_25.clk @[build/NutShell.fir.opt.mlir 9975:7]
    invalidate rf.MPORT_26.addr @[build/NutShell.fir.opt.mlir 9978:7]
    connect rf.MPORT_26.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9980:7]
    invalidate rf.MPORT_26.clk @[build/NutShell.fir.opt.mlir 9982:7]
    invalidate rf.MPORT_27.addr @[build/NutShell.fir.opt.mlir 9985:7]
    connect rf.MPORT_27.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9987:7]
    invalidate rf.MPORT_27.clk @[build/NutShell.fir.opt.mlir 9989:7]
    invalidate rf.MPORT_28.addr @[build/NutShell.fir.opt.mlir 9992:7]
    connect rf.MPORT_28.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 9994:7]
    invalidate rf.MPORT_28.clk @[build/NutShell.fir.opt.mlir 9996:7]
    invalidate rf.MPORT_29.addr @[build/NutShell.fir.opt.mlir 9999:7]
    connect rf.MPORT_29.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10001:7]
    invalidate rf.MPORT_29.clk @[build/NutShell.fir.opt.mlir 10003:7]
    invalidate rf.MPORT_3.addr @[build/NutShell.fir.opt.mlir 10006:7]
    connect rf.MPORT_3.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10008:7]
    invalidate rf.MPORT_3.clk @[build/NutShell.fir.opt.mlir 10010:7]
    invalidate rf.MPORT_30.addr @[build/NutShell.fir.opt.mlir 10013:7]
    connect rf.MPORT_30.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10015:7]
    invalidate rf.MPORT_30.clk @[build/NutShell.fir.opt.mlir 10017:7]
    invalidate rf.MPORT_31.addr @[build/NutShell.fir.opt.mlir 10020:7]
    connect rf.MPORT_31.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10022:7]
    invalidate rf.MPORT_31.clk @[build/NutShell.fir.opt.mlir 10024:7]
    invalidate rf.MPORT_32.addr @[build/NutShell.fir.opt.mlir 10027:7]
    connect rf.MPORT_32.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10029:7]
    invalidate rf.MPORT_32.clk @[build/NutShell.fir.opt.mlir 10031:7]
    invalidate rf.MPORT_4.addr @[build/NutShell.fir.opt.mlir 10034:7]
    connect rf.MPORT_4.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10036:7]
    invalidate rf.MPORT_4.clk @[build/NutShell.fir.opt.mlir 10038:7]
    invalidate rf.MPORT_5.addr @[build/NutShell.fir.opt.mlir 10041:7]
    connect rf.MPORT_5.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10043:7]
    invalidate rf.MPORT_5.clk @[build/NutShell.fir.opt.mlir 10045:7]
    invalidate rf.MPORT_6.addr @[build/NutShell.fir.opt.mlir 10048:7]
    connect rf.MPORT_6.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10050:7]
    invalidate rf.MPORT_6.clk @[build/NutShell.fir.opt.mlir 10052:7]
    invalidate rf.MPORT_7.addr @[build/NutShell.fir.opt.mlir 10055:7]
    connect rf.MPORT_7.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10057:7]
    invalidate rf.MPORT_7.clk @[build/NutShell.fir.opt.mlir 10059:7]
    invalidate rf.MPORT_8.addr @[build/NutShell.fir.opt.mlir 10062:7]
    connect rf.MPORT_8.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10064:7]
    invalidate rf.MPORT_8.clk @[build/NutShell.fir.opt.mlir 10066:7]
    invalidate rf.MPORT_9.addr @[build/NutShell.fir.opt.mlir 10069:7]
    connect rf.MPORT_9.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10071:7]
    invalidate rf.MPORT_9.clk @[build/NutShell.fir.opt.mlir 10073:7]
    invalidate rf.io_out_bits_data_src1_MPORT.addr @[build/NutShell.fir.opt.mlir 10076:7]
    connect rf.io_out_bits_data_src1_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10078:7]
    invalidate rf.io_out_bits_data_src1_MPORT.clk @[build/NutShell.fir.opt.mlir 10080:7]
    invalidate rf.io_out_bits_data_src2_MPORT.addr @[build/NutShell.fir.opt.mlir 10083:7]
    connect rf.io_out_bits_data_src2_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10085:7]
    invalidate rf.io_out_bits_data_src2_MPORT.clk @[build/NutShell.fir.opt.mlir 10087:7]
    node _io_out_bits_data_src1_T = eq(io.in[0].bits.ctrl.src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 10090:35]
    node io_out_bits_data_src1_signBit = bits(io.in[0].bits.cf.pc, 38, 38) @[build/NutShell.fir.opt.mlir 10092:40]
    node _io_out_bits_data_src1_T_1 = mux(io_out_bits_data_src1_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 10096:37]
    node _io_out_bits_data_src1_T_2 = cat(_io_out_bits_data_src1_T_1, io.in[0].bits.cf.pc) @[build/NutShell.fir.opt.mlir 10098:37]
    node _io_out_bits_data_src1_T_3 = eq(src1ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10100:37]
    node _io_out_bits_data_src1_T_4 = and(src1Forward, _io_out_bits_data_src1_T_3) @[build/NutShell.fir.opt.mlir 10102:37]
    node _io_out_bits_data_src1_T_5 = neq(io.in[0].bits.ctrl.src1Type, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 10104:37]
    node _io_out_bits_data_src1_T_6 = eq(src1ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10106:37]
    node _io_out_bits_data_src1_T_7 = and(_io_out_bits_data_src1_T_5, _io_out_bits_data_src1_T_6) @[build/NutShell.fir.opt.mlir 10108:37]
    node _io_out_bits_data_src1_T_8 = eq(src1Forward, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10110:37]
    node _io_out_bits_data_src1_T_9 = and(_io_out_bits_data_src1_T_7, _io_out_bits_data_src1_T_8) @[build/NutShell.fir.opt.mlir 10112:37]
    node _io_out_bits_data_src1_T_10 = eq(io.in[0].bits.ctrl.rfSrc1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10114:38]
    connect rf.io_out_bits_data_src1_MPORT.addr, io.in[0].bits.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 10115:7]
    connect rf.io_out_bits_data_src1_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10116:7]
    connect rf.io_out_bits_data_src1_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10117:7]
    node _io_out_bits_data_src1_T_11 = mux(_io_out_bits_data_src1_T_10, UInt<1>(0), rf.io_out_bits_data_src1_MPORT.data) @[build/NutShell.fir.opt.mlir 10119:38]
    node _io_out_bits_data_src1_T_12 = mux(_io_out_bits_data_src1_T, _io_out_bits_data_src1_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10121:38]
    node _io_out_bits_data_src1_T_13 = mux(src1ForwardNextCycle, io.forward.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10123:38]
    node _io_out_bits_data_src1_T_14 = mux(_io_out_bits_data_src1_T_4, io.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10125:38]
    node _io_out_bits_data_src1_T_15 = mux(_io_out_bits_data_src1_T_9, _io_out_bits_data_src1_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10127:38]
    node _io_out_bits_data_src1_T_16 = or(_io_out_bits_data_src1_T_12, _io_out_bits_data_src1_T_13) @[build/NutShell.fir.opt.mlir 10129:38]
    node _io_out_bits_data_src1_T_17 = or(_io_out_bits_data_src1_T_16, _io_out_bits_data_src1_T_14) @[build/NutShell.fir.opt.mlir 10131:38]
    node _io_out_bits_data_src1_T_18 = or(_io_out_bits_data_src1_T_17, _io_out_bits_data_src1_T_15) @[build/NutShell.fir.opt.mlir 10133:38]
    wire _io_out_bits_data_src1_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 10134:38]
    connect _io_out_bits_data_src1_WIRE, _io_out_bits_data_src1_T_18 @[build/NutShell.fir.opt.mlir 10135:7]
    connect io.out.bits.data.src1, _io_out_bits_data_src1_WIRE @[build/NutShell.fir.opt.mlir 10136:7]
    node _io_out_bits_data_src2_T = neq(io.in[0].bits.ctrl.src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10138:35]
    node _io_out_bits_data_src2_T_1 = eq(src2ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10140:37]
    node _io_out_bits_data_src2_T_2 = and(src2Forward, _io_out_bits_data_src2_T_1) @[build/NutShell.fir.opt.mlir 10142:37]
    node _io_out_bits_data_src2_T_3 = eq(io.in[0].bits.ctrl.src2Type, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10144:37]
    node _io_out_bits_data_src2_T_4 = eq(src2ForwardNextCycle, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10146:37]
    node _io_out_bits_data_src2_T_5 = and(_io_out_bits_data_src2_T_3, _io_out_bits_data_src2_T_4) @[build/NutShell.fir.opt.mlir 10148:37]
    node _io_out_bits_data_src2_T_6 = eq(src2Forward, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10150:37]
    node _io_out_bits_data_src2_T_7 = and(_io_out_bits_data_src2_T_5, _io_out_bits_data_src2_T_6) @[build/NutShell.fir.opt.mlir 10152:37]
    node _io_out_bits_data_src2_T_8 = eq(io.in[0].bits.ctrl.rfSrc2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10154:37]
    connect rf.io_out_bits_data_src2_MPORT.addr, io.in[0].bits.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 10155:7]
    connect rf.io_out_bits_data_src2_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10156:7]
    connect rf.io_out_bits_data_src2_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10157:7]
    node _io_out_bits_data_src2_T_9 = mux(_io_out_bits_data_src2_T_8, UInt<1>(0), rf.io_out_bits_data_src2_MPORT.data) @[build/NutShell.fir.opt.mlir 10159:37]
    node _io_out_bits_data_src2_T_10 = mux(_io_out_bits_data_src2_T, io.in[0].bits.data.imm, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10161:38]
    node _io_out_bits_data_src2_T_11 = mux(src2ForwardNextCycle, io.forward.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10163:38]
    node _io_out_bits_data_src2_T_12 = mux(_io_out_bits_data_src2_T_2, io.wb.rfData, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10165:38]
    node _io_out_bits_data_src2_T_13 = mux(_io_out_bits_data_src2_T_7, _io_out_bits_data_src2_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10167:38]
    node _io_out_bits_data_src2_T_14 = or(_io_out_bits_data_src2_T_10, _io_out_bits_data_src2_T_11) @[build/NutShell.fir.opt.mlir 10169:38]
    node _io_out_bits_data_src2_T_15 = or(_io_out_bits_data_src2_T_14, _io_out_bits_data_src2_T_12) @[build/NutShell.fir.opt.mlir 10171:38]
    node _io_out_bits_data_src2_T_16 = or(_io_out_bits_data_src2_T_15, _io_out_bits_data_src2_T_13) @[build/NutShell.fir.opt.mlir 10173:38]
    wire _io_out_bits_data_src2_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 10174:38]
    connect _io_out_bits_data_src2_WIRE, _io_out_bits_data_src2_T_16 @[build/NutShell.fir.opt.mlir 10175:7]
    connect io.out.bits.data.src2, _io_out_bits_data_src2_WIRE @[build/NutShell.fir.opt.mlir 10176:7]
    connect io.out.bits.data.imm, io.in[0].bits.data.imm @[build/NutShell.fir.opt.mlir 10177:7]
    connect io.out.bits.cf, io.in[0].bits.cf @[build/NutShell.fir.opt.mlir 10178:7]
    connect io.out.bits.ctrl, io.in[0].bits.ctrl @[build/NutShell.fir.opt.mlir 10179:7]
    connect io.out.bits.ctrl.isSrc1Forward, src1ForwardNextCycle @[build/NutShell.fir.opt.mlir 10180:7]
    connect io.out.bits.ctrl.isSrc2Forward, src2ForwardNextCycle @[build/NutShell.fir.opt.mlir 10181:7]
    when io.wb.rfWen : @[build/NutShell.fir.opt.mlir 10182:7]
      connect rf.MPORT.addr, io.wb.rfDest @[build/NutShell.fir.opt.mlir 10183:9]
      connect rf.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10184:9]
      connect rf.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 10185:9]
      connect rf.MPORT.mask, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10186:9]
      node _T = bits(io.wb.rfData, 63, 0) @[build/NutShell.fir.opt.mlir 10188:15]
      connect rf.MPORT.mask, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10189:9]
      connect rf.MPORT.data, _T @[build/NutShell.fir.opt.mlir 10190:9]
    node _wbClearMask_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10193:25]
    node _wbClearMask_T_1 = eq(io.wb.rfDest, io.forward.wb.rfDest) @[build/NutShell.fir.opt.mlir 10195:27]
    node _wbClearMask_T_2 = and(_wbClearMask_T, _wbClearMask_T_1) @[build/NutShell.fir.opt.mlir 10197:27]
    node _wbClearMask_T_3 = and(_wbClearMask_T_2, forwardRfWen) @[build/NutShell.fir.opt.mlir 10199:27]
    node _wbClearMask_T_4 = eq(_wbClearMask_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10201:27]
    node _wbClearMask_T_5 = and(io.wb.rfWen, _wbClearMask_T_4) @[build/NutShell.fir.opt.mlir 10203:27]
    node _wbClearMask_T_6 = dshl(UInt<32>(1), io.wb.rfDest) @[build/NutShell.fir.opt.mlir 10206:27]
    node _wbClearMask_T_7 = bits(_wbClearMask_T_6, 31, 0) @[build/NutShell.fir.opt.mlir 10208:27]
    node wbClearMask = mux(_wbClearMask_T_5, _wbClearMask_T_7, UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10210:22]
    node _isuFireSetMask_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10212:28]
    node _isuFireSetMask_T_1 = dshl(UInt<32>(1), io.in[0].bits.ctrl.rfDest) @[build/NutShell.fir.opt.mlir 10214:30]
    node _isuFireSetMask_T_2 = bits(_isuFireSetMask_T_1, 31, 0) @[build/NutShell.fir.opt.mlir 10216:30]
    node isuFireSetMask = mux(_isuFireSetMask_T, _isuFireSetMask_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10218:25]
    when io.flush : @[build/NutShell.fir.opt.mlir 10220:7]
      node _T_1 = mux(UInt<1>(1), UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10222:17]
      node _busy_T = not(_T_1) @[build/NutShell.fir.opt.mlir 10224:20]
      node _busy_T_1 = and(busy, _busy_T) @[build/NutShell.fir.opt.mlir 10226:22]
      node _busy_T_2 = or(_busy_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10228:22]
      node _busy_T_3 = bits(_busy_T_2, 31, 1) @[build/NutShell.fir.opt.mlir 10230:22]
      node _busy_T_4 = cat(_busy_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10232:22]
      connect busy, _busy_T_4 @[build/NutShell.fir.opt.mlir 10233:9]
    else :
      node _busy_T_5 = not(wbClearMask) @[build/NutShell.fir.opt.mlir 10236:22]
      node _busy_T_6 = and(busy, _busy_T_5) @[build/NutShell.fir.opt.mlir 10238:22]
      node _busy_T_7 = or(_busy_T_6, isuFireSetMask) @[build/NutShell.fir.opt.mlir 10240:22]
      node _busy_T_8 = bits(_busy_T_7, 31, 1) @[build/NutShell.fir.opt.mlir 10242:22]
      node _busy_T_9 = cat(_busy_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10244:22]
      connect busy, _busy_T_9 @[build/NutShell.fir.opt.mlir 10245:9]
    node _io_in_0_ready_T = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10248:27]
    node _io_in_0_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10250:29]
    node _io_in_0_ready_T_2 = or(_io_in_0_ready_T, _io_in_0_ready_T_1) @[build/NutShell.fir.opt.mlir 10252:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 10253:7]
    connect io.in[1].ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10255:7]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10257:15]
    inst LogPerfHelper of LogPerfHelper_6 @[build/NutShell.fir.opt.mlir 10258:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 10259:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 10264:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 10265:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 10266:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 10267:7]
    node _T_3 = and(_T_2, c_control.logEnable) @[build/NutShell.fir.opt.mlir 10269:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 10270:7]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 10272:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10274:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 10275:9]
        skip @[build/NutShell.fir.opt.mlir 10276:11]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 10279:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10281:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 10282:9]
        skip @[build/NutShell.fir.opt.mlir 10283:11]
    node _T_8 = eq(io.out.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10287:15]
    node _T_9 = and(io.in[0].valid, _T_8) @[build/NutShell.fir.opt.mlir 10289:15]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 10290:16]
    connect _WIRE, _T_9 @[build/NutShell.fir.opt.mlir 10291:7]
    node _T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10293:16]
    node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10295:16]
    node _T_12 = and(io.out.valid, _T_11) @[build/NutShell.fir.opt.mlir 10297:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 10298:18]
    connect _WIRE_1, _T_12 @[build/NutShell.fir.opt.mlir 10299:7]
    node _T_13 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 10301:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 10302:18]
    connect _WIRE_2, _T_13 @[build/NutShell.fir.opt.mlir 10303:7]
    wire difftest : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10304:19]
    wire _difftest_sink_bundle_WIRE : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10307:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 10344:7]
    connect _difftest_sink_bundle_WIRE.value[0], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10347:7]
    connect _difftest_sink_bundle_WIRE.value[1], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10349:7]
    connect _difftest_sink_bundle_WIRE.value[2], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10351:7]
    connect _difftest_sink_bundle_WIRE.value[3], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10353:7]
    connect _difftest_sink_bundle_WIRE.value[4], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10355:7]
    connect _difftest_sink_bundle_WIRE.value[5], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10357:7]
    connect _difftest_sink_bundle_WIRE.value[6], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10359:7]
    connect _difftest_sink_bundle_WIRE.value[7], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10361:7]
    connect _difftest_sink_bundle_WIRE.value[8], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10363:7]
    connect _difftest_sink_bundle_WIRE.value[9], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10365:7]
    connect _difftest_sink_bundle_WIRE.value[10], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10367:7]
    connect _difftest_sink_bundle_WIRE.value[11], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10369:7]
    connect _difftest_sink_bundle_WIRE.value[12], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10371:7]
    connect _difftest_sink_bundle_WIRE.value[13], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10373:7]
    connect _difftest_sink_bundle_WIRE.value[14], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10375:7]
    connect _difftest_sink_bundle_WIRE.value[15], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10377:7]
    connect _difftest_sink_bundle_WIRE.value[16], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10379:7]
    connect _difftest_sink_bundle_WIRE.value[17], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10381:7]
    connect _difftest_sink_bundle_WIRE.value[18], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10383:7]
    connect _difftest_sink_bundle_WIRE.value[19], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10385:7]
    connect _difftest_sink_bundle_WIRE.value[20], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10387:7]
    connect _difftest_sink_bundle_WIRE.value[21], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10389:7]
    connect _difftest_sink_bundle_WIRE.value[22], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10391:7]
    connect _difftest_sink_bundle_WIRE.value[23], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10393:7]
    connect _difftest_sink_bundle_WIRE.value[24], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10395:7]
    connect _difftest_sink_bundle_WIRE.value[25], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10397:7]
    connect _difftest_sink_bundle_WIRE.value[26], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10399:7]
    connect _difftest_sink_bundle_WIRE.value[27], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10401:7]
    connect _difftest_sink_bundle_WIRE.value[28], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10403:7]
    connect _difftest_sink_bundle_WIRE.value[29], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10405:7]
    connect _difftest_sink_bundle_WIRE.value[30], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10407:7]
    connect _difftest_sink_bundle_WIRE.value[31], UInt<64>(0) @[build/NutShell.fir.opt.mlir 10409:7]
    wire difftest_sink : { value : UInt<64>[32], coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 10410:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 10445:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 10446:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 10449:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 10450:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 10452:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10454:7]
    inst difftest_sink_module of DummyDPICWrapper @[build/NutShell.fir.opt.mlir 10455:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 10491:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 10492:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 10493:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 10494:7]
    connect difftest_sink_module.io.value[0], difftest_sink.value[0] @[build/NutShell.fir.opt.mlir 10495:7]
    connect difftest_sink_module.io.value[1], difftest_sink.value[1] @[build/NutShell.fir.opt.mlir 10496:7]
    connect difftest_sink_module.io.value[2], difftest_sink.value[2] @[build/NutShell.fir.opt.mlir 10497:7]
    connect difftest_sink_module.io.value[3], difftest_sink.value[3] @[build/NutShell.fir.opt.mlir 10498:7]
    connect difftest_sink_module.io.value[4], difftest_sink.value[4] @[build/NutShell.fir.opt.mlir 10499:7]
    connect difftest_sink_module.io.value[5], difftest_sink.value[5] @[build/NutShell.fir.opt.mlir 10500:7]
    connect difftest_sink_module.io.value[6], difftest_sink.value[6] @[build/NutShell.fir.opt.mlir 10501:7]
    connect difftest_sink_module.io.value[7], difftest_sink.value[7] @[build/NutShell.fir.opt.mlir 10502:7]
    connect difftest_sink_module.io.value[8], difftest_sink.value[8] @[build/NutShell.fir.opt.mlir 10503:7]
    connect difftest_sink_module.io.value[9], difftest_sink.value[9] @[build/NutShell.fir.opt.mlir 10504:7]
    connect difftest_sink_module.io.value[10], difftest_sink.value[10] @[build/NutShell.fir.opt.mlir 10505:7]
    connect difftest_sink_module.io.value[11], difftest_sink.value[11] @[build/NutShell.fir.opt.mlir 10506:7]
    connect difftest_sink_module.io.value[12], difftest_sink.value[12] @[build/NutShell.fir.opt.mlir 10507:7]
    connect difftest_sink_module.io.value[13], difftest_sink.value[13] @[build/NutShell.fir.opt.mlir 10508:7]
    connect difftest_sink_module.io.value[14], difftest_sink.value[14] @[build/NutShell.fir.opt.mlir 10509:7]
    connect difftest_sink_module.io.value[15], difftest_sink.value[15] @[build/NutShell.fir.opt.mlir 10510:7]
    connect difftest_sink_module.io.value[16], difftest_sink.value[16] @[build/NutShell.fir.opt.mlir 10511:7]
    connect difftest_sink_module.io.value[17], difftest_sink.value[17] @[build/NutShell.fir.opt.mlir 10512:7]
    connect difftest_sink_module.io.value[18], difftest_sink.value[18] @[build/NutShell.fir.opt.mlir 10513:7]
    connect difftest_sink_module.io.value[19], difftest_sink.value[19] @[build/NutShell.fir.opt.mlir 10514:7]
    connect difftest_sink_module.io.value[20], difftest_sink.value[20] @[build/NutShell.fir.opt.mlir 10515:7]
    connect difftest_sink_module.io.value[21], difftest_sink.value[21] @[build/NutShell.fir.opt.mlir 10516:7]
    connect difftest_sink_module.io.value[22], difftest_sink.value[22] @[build/NutShell.fir.opt.mlir 10517:7]
    connect difftest_sink_module.io.value[23], difftest_sink.value[23] @[build/NutShell.fir.opt.mlir 10518:7]
    connect difftest_sink_module.io.value[24], difftest_sink.value[24] @[build/NutShell.fir.opt.mlir 10519:7]
    connect difftest_sink_module.io.value[25], difftest_sink.value[25] @[build/NutShell.fir.opt.mlir 10520:7]
    connect difftest_sink_module.io.value[26], difftest_sink.value[26] @[build/NutShell.fir.opt.mlir 10521:7]
    connect difftest_sink_module.io.value[27], difftest_sink.value[27] @[build/NutShell.fir.opt.mlir 10522:7]
    connect difftest_sink_module.io.value[28], difftest_sink.value[28] @[build/NutShell.fir.opt.mlir 10523:7]
    connect difftest_sink_module.io.value[29], difftest_sink.value[29] @[build/NutShell.fir.opt.mlir 10524:7]
    connect difftest_sink_module.io.value[30], difftest_sink.value[30] @[build/NutShell.fir.opt.mlir 10525:7]
    connect difftest_sink_module.io.value[31], difftest_sink.value[31] @[build/NutShell.fir.opt.mlir 10526:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 10527:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 10528:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 10531:7]
    node _T_14 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10533:16]
    connect rf.MPORT_1.addr, pad(UInt<1>(0), 5) @[build/NutShell.fir.opt.mlir 10536:7]
    connect rf.MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10537:7]
    connect rf.MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 10538:7]
    node _T_15 = mux(_T_14, UInt<1>(0), rf.MPORT_1.data) @[build/NutShell.fir.opt.mlir 10540:16]
    node _T_16 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10542:16]
    connect rf.MPORT_2.addr, pad(UInt<1>(1), 5) @[build/NutShell.fir.opt.mlir 10545:7]
    connect rf.MPORT_2.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10546:7]
    connect rf.MPORT_2.clk, clock @[build/NutShell.fir.opt.mlir 10547:7]
    node _T_17 = mux(_T_16, UInt<1>(0), rf.MPORT_2.data) @[build/NutShell.fir.opt.mlir 10549:16]
    node _T_18 = eq(UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10552:16]
    connect rf.MPORT_3.addr, pad(UInt<2>(2), 5) @[build/NutShell.fir.opt.mlir 10555:7]
    connect rf.MPORT_3.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10556:7]
    connect rf.MPORT_3.clk, clock @[build/NutShell.fir.opt.mlir 10557:7]
    node _T_19 = mux(_T_18, UInt<1>(0), rf.MPORT_3.data) @[build/NutShell.fir.opt.mlir 10559:16]
    node _T_20 = eq(UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10562:16]
    connect rf.MPORT_4.addr, pad(UInt<2>(3), 5) @[build/NutShell.fir.opt.mlir 10565:7]
    connect rf.MPORT_4.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10566:7]
    connect rf.MPORT_4.clk, clock @[build/NutShell.fir.opt.mlir 10567:7]
    node _T_21 = mux(_T_20, UInt<1>(0), rf.MPORT_4.data) @[build/NutShell.fir.opt.mlir 10569:16]
    node _T_22 = eq(UInt<3>(4), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10572:16]
    connect rf.MPORT_5.addr, pad(UInt<3>(4), 5) @[build/NutShell.fir.opt.mlir 10575:7]
    connect rf.MPORT_5.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10576:7]
    connect rf.MPORT_5.clk, clock @[build/NutShell.fir.opt.mlir 10577:7]
    node _T_23 = mux(_T_22, UInt<1>(0), rf.MPORT_5.data) @[build/NutShell.fir.opt.mlir 10579:16]
    node _T_24 = eq(UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10582:16]
    connect rf.MPORT_6.addr, pad(UInt<3>(5), 5) @[build/NutShell.fir.opt.mlir 10585:7]
    connect rf.MPORT_6.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10586:7]
    connect rf.MPORT_6.clk, clock @[build/NutShell.fir.opt.mlir 10587:7]
    node _T_25 = mux(_T_24, UInt<1>(0), rf.MPORT_6.data) @[build/NutShell.fir.opt.mlir 10589:16]
    node _T_26 = eq(UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10592:16]
    connect rf.MPORT_7.addr, pad(UInt<3>(6), 5) @[build/NutShell.fir.opt.mlir 10595:7]
    connect rf.MPORT_7.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10596:7]
    connect rf.MPORT_7.clk, clock @[build/NutShell.fir.opt.mlir 10597:7]
    node _T_27 = mux(_T_26, UInt<1>(0), rf.MPORT_7.data) @[build/NutShell.fir.opt.mlir 10599:16]
    node _T_28 = eq(UInt<3>(7), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10602:16]
    connect rf.MPORT_8.addr, pad(UInt<3>(7), 5) @[build/NutShell.fir.opt.mlir 10605:7]
    connect rf.MPORT_8.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10606:7]
    connect rf.MPORT_8.clk, clock @[build/NutShell.fir.opt.mlir 10607:7]
    node _T_29 = mux(_T_28, UInt<1>(0), rf.MPORT_8.data) @[build/NutShell.fir.opt.mlir 10609:16]
    node _T_30 = eq(UInt<4>(8), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10612:16]
    connect rf.MPORT_9.addr, pad(UInt<4>(8), 5) @[build/NutShell.fir.opt.mlir 10615:7]
    connect rf.MPORT_9.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10616:7]
    connect rf.MPORT_9.clk, clock @[build/NutShell.fir.opt.mlir 10617:7]
    node _T_31 = mux(_T_30, UInt<1>(0), rf.MPORT_9.data) @[build/NutShell.fir.opt.mlir 10619:16]
    node _T_32 = eq(UInt<4>(9), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10622:16]
    connect rf.MPORT_10.addr, pad(UInt<4>(9), 5) @[build/NutShell.fir.opt.mlir 10625:7]
    connect rf.MPORT_10.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10626:7]
    connect rf.MPORT_10.clk, clock @[build/NutShell.fir.opt.mlir 10627:7]
    node _T_33 = mux(_T_32, UInt<1>(0), rf.MPORT_10.data) @[build/NutShell.fir.opt.mlir 10629:16]
    node _T_34 = eq(UInt<4>(10), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10632:16]
    connect rf.MPORT_11.addr, pad(UInt<4>(10), 5) @[build/NutShell.fir.opt.mlir 10635:7]
    connect rf.MPORT_11.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10636:7]
    connect rf.MPORT_11.clk, clock @[build/NutShell.fir.opt.mlir 10637:7]
    node _T_35 = mux(_T_34, UInt<1>(0), rf.MPORT_11.data) @[build/NutShell.fir.opt.mlir 10639:16]
    node _T_36 = eq(UInt<4>(11), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10642:16]
    connect rf.MPORT_12.addr, pad(UInt<4>(11), 5) @[build/NutShell.fir.opt.mlir 10645:7]
    connect rf.MPORT_12.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10646:7]
    connect rf.MPORT_12.clk, clock @[build/NutShell.fir.opt.mlir 10647:7]
    node _T_37 = mux(_T_36, UInt<1>(0), rf.MPORT_12.data) @[build/NutShell.fir.opt.mlir 10649:16]
    node _T_38 = eq(UInt<4>(12), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10652:16]
    connect rf.MPORT_13.addr, pad(UInt<4>(12), 5) @[build/NutShell.fir.opt.mlir 10655:7]
    connect rf.MPORT_13.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10656:7]
    connect rf.MPORT_13.clk, clock @[build/NutShell.fir.opt.mlir 10657:7]
    node _T_39 = mux(_T_38, UInt<1>(0), rf.MPORT_13.data) @[build/NutShell.fir.opt.mlir 10659:16]
    node _T_40 = eq(UInt<4>(13), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10662:16]
    connect rf.MPORT_14.addr, pad(UInt<4>(13), 5) @[build/NutShell.fir.opt.mlir 10665:7]
    connect rf.MPORT_14.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10666:7]
    connect rf.MPORT_14.clk, clock @[build/NutShell.fir.opt.mlir 10667:7]
    node _T_41 = mux(_T_40, UInt<1>(0), rf.MPORT_14.data) @[build/NutShell.fir.opt.mlir 10669:16]
    node _T_42 = eq(UInt<4>(14), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10672:16]
    connect rf.MPORT_15.addr, pad(UInt<4>(14), 5) @[build/NutShell.fir.opt.mlir 10675:7]
    connect rf.MPORT_15.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10676:7]
    connect rf.MPORT_15.clk, clock @[build/NutShell.fir.opt.mlir 10677:7]
    node _T_43 = mux(_T_42, UInt<1>(0), rf.MPORT_15.data) @[build/NutShell.fir.opt.mlir 10679:16]
    node _T_44 = eq(UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10682:16]
    connect rf.MPORT_16.addr, pad(UInt<4>(15), 5) @[build/NutShell.fir.opt.mlir 10685:7]
    connect rf.MPORT_16.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10686:7]
    connect rf.MPORT_16.clk, clock @[build/NutShell.fir.opt.mlir 10687:7]
    node _T_45 = mux(_T_44, UInt<1>(0), rf.MPORT_16.data) @[build/NutShell.fir.opt.mlir 10689:16]
    node _T_46 = eq(UInt<5>(16), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10692:16]
    connect rf.MPORT_17.addr, UInt<5>(16) @[build/NutShell.fir.opt.mlir 10694:7]
    connect rf.MPORT_17.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10695:7]
    connect rf.MPORT_17.clk, clock @[build/NutShell.fir.opt.mlir 10696:7]
    node _T_47 = mux(_T_46, UInt<1>(0), rf.MPORT_17.data) @[build/NutShell.fir.opt.mlir 10698:16]
    node _T_48 = eq(UInt<5>(17), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10701:16]
    connect rf.MPORT_18.addr, UInt<5>(17) @[build/NutShell.fir.opt.mlir 10703:7]
    connect rf.MPORT_18.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10704:7]
    connect rf.MPORT_18.clk, clock @[build/NutShell.fir.opt.mlir 10705:7]
    node _T_49 = mux(_T_48, UInt<1>(0), rf.MPORT_18.data) @[build/NutShell.fir.opt.mlir 10707:16]
    node _T_50 = eq(UInt<5>(18), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10710:16]
    connect rf.MPORT_19.addr, UInt<5>(18) @[build/NutShell.fir.opt.mlir 10712:7]
    connect rf.MPORT_19.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10713:7]
    connect rf.MPORT_19.clk, clock @[build/NutShell.fir.opt.mlir 10714:7]
    node _T_51 = mux(_T_50, UInt<1>(0), rf.MPORT_19.data) @[build/NutShell.fir.opt.mlir 10716:16]
    node _T_52 = eq(UInt<5>(19), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10719:16]
    connect rf.MPORT_20.addr, UInt<5>(19) @[build/NutShell.fir.opt.mlir 10721:7]
    connect rf.MPORT_20.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10722:7]
    connect rf.MPORT_20.clk, clock @[build/NutShell.fir.opt.mlir 10723:7]
    node _T_53 = mux(_T_52, UInt<1>(0), rf.MPORT_20.data) @[build/NutShell.fir.opt.mlir 10725:16]
    node _T_54 = eq(UInt<5>(20), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10728:16]
    connect rf.MPORT_21.addr, UInt<5>(20) @[build/NutShell.fir.opt.mlir 10730:7]
    connect rf.MPORT_21.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10731:7]
    connect rf.MPORT_21.clk, clock @[build/NutShell.fir.opt.mlir 10732:7]
    node _T_55 = mux(_T_54, UInt<1>(0), rf.MPORT_21.data) @[build/NutShell.fir.opt.mlir 10734:16]
    node _T_56 = eq(UInt<5>(21), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10737:16]
    connect rf.MPORT_22.addr, UInt<5>(21) @[build/NutShell.fir.opt.mlir 10739:7]
    connect rf.MPORT_22.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10740:7]
    connect rf.MPORT_22.clk, clock @[build/NutShell.fir.opt.mlir 10741:7]
    node _T_57 = mux(_T_56, UInt<1>(0), rf.MPORT_22.data) @[build/NutShell.fir.opt.mlir 10743:16]
    node _T_58 = eq(UInt<5>(22), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10746:16]
    connect rf.MPORT_23.addr, UInt<5>(22) @[build/NutShell.fir.opt.mlir 10748:7]
    connect rf.MPORT_23.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10749:7]
    connect rf.MPORT_23.clk, clock @[build/NutShell.fir.opt.mlir 10750:7]
    node _T_59 = mux(_T_58, UInt<1>(0), rf.MPORT_23.data) @[build/NutShell.fir.opt.mlir 10752:16]
    node _T_60 = eq(UInt<5>(23), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10755:16]
    connect rf.MPORT_24.addr, UInt<5>(23) @[build/NutShell.fir.opt.mlir 10757:7]
    connect rf.MPORT_24.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10758:7]
    connect rf.MPORT_24.clk, clock @[build/NutShell.fir.opt.mlir 10759:7]
    node _T_61 = mux(_T_60, UInt<1>(0), rf.MPORT_24.data) @[build/NutShell.fir.opt.mlir 10761:16]
    node _T_62 = eq(UInt<5>(24), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10764:16]
    connect rf.MPORT_25.addr, UInt<5>(24) @[build/NutShell.fir.opt.mlir 10766:7]
    connect rf.MPORT_25.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10767:7]
    connect rf.MPORT_25.clk, clock @[build/NutShell.fir.opt.mlir 10768:7]
    node _T_63 = mux(_T_62, UInt<1>(0), rf.MPORT_25.data) @[build/NutShell.fir.opt.mlir 10770:16]
    node _T_64 = eq(UInt<5>(25), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10773:16]
    connect rf.MPORT_26.addr, UInt<5>(25) @[build/NutShell.fir.opt.mlir 10775:7]
    connect rf.MPORT_26.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10776:7]
    connect rf.MPORT_26.clk, clock @[build/NutShell.fir.opt.mlir 10777:7]
    node _T_65 = mux(_T_64, UInt<1>(0), rf.MPORT_26.data) @[build/NutShell.fir.opt.mlir 10779:16]
    node _T_66 = eq(UInt<5>(26), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10782:16]
    connect rf.MPORT_27.addr, UInt<5>(26) @[build/NutShell.fir.opt.mlir 10784:7]
    connect rf.MPORT_27.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10785:7]
    connect rf.MPORT_27.clk, clock @[build/NutShell.fir.opt.mlir 10786:7]
    node _T_67 = mux(_T_66, UInt<1>(0), rf.MPORT_27.data) @[build/NutShell.fir.opt.mlir 10788:16]
    node _T_68 = eq(UInt<5>(27), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10791:16]
    connect rf.MPORT_28.addr, UInt<5>(27) @[build/NutShell.fir.opt.mlir 10793:7]
    connect rf.MPORT_28.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10794:7]
    connect rf.MPORT_28.clk, clock @[build/NutShell.fir.opt.mlir 10795:7]
    node _T_69 = mux(_T_68, UInt<1>(0), rf.MPORT_28.data) @[build/NutShell.fir.opt.mlir 10797:16]
    node _T_70 = eq(UInt<5>(28), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10800:16]
    connect rf.MPORT_29.addr, UInt<5>(28) @[build/NutShell.fir.opt.mlir 10802:7]
    connect rf.MPORT_29.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10803:7]
    connect rf.MPORT_29.clk, clock @[build/NutShell.fir.opt.mlir 10804:7]
    node _T_71 = mux(_T_70, UInt<1>(0), rf.MPORT_29.data) @[build/NutShell.fir.opt.mlir 10806:16]
    node _T_72 = eq(UInt<5>(29), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10809:16]
    connect rf.MPORT_30.addr, UInt<5>(29) @[build/NutShell.fir.opt.mlir 10811:7]
    connect rf.MPORT_30.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10812:7]
    connect rf.MPORT_30.clk, clock @[build/NutShell.fir.opt.mlir 10813:7]
    node _T_73 = mux(_T_72, UInt<1>(0), rf.MPORT_30.data) @[build/NutShell.fir.opt.mlir 10815:16]
    node _T_74 = eq(UInt<5>(30), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10818:16]
    connect rf.MPORT_31.addr, UInt<5>(30) @[build/NutShell.fir.opt.mlir 10820:7]
    connect rf.MPORT_31.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10821:7]
    connect rf.MPORT_31.clk, clock @[build/NutShell.fir.opt.mlir 10822:7]
    node _T_75 = mux(_T_74, UInt<1>(0), rf.MPORT_31.data) @[build/NutShell.fir.opt.mlir 10824:16]
    node _T_76 = eq(UInt<5>(31), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10827:16]
    connect rf.MPORT_32.addr, UInt<5>(31) @[build/NutShell.fir.opt.mlir 10829:7]
    connect rf.MPORT_32.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 10830:7]
    connect rf.MPORT_32.clk, clock @[build/NutShell.fir.opt.mlir 10831:7]
    node _T_77 = mux(_T_76, UInt<1>(0), rf.MPORT_32.data) @[build/NutShell.fir.opt.mlir 10833:16]
    wire _WIRE_3 : UInt<64>[32] @[build/NutShell.fir.opt.mlir 10834:18]
    connect _WIRE_3[0], _T_15 @[build/NutShell.fir.opt.mlir 10867:7]
    connect _WIRE_3[1], _T_17 @[build/NutShell.fir.opt.mlir 10868:7]
    connect _WIRE_3[2], _T_19 @[build/NutShell.fir.opt.mlir 10869:7]
    connect _WIRE_3[3], _T_21 @[build/NutShell.fir.opt.mlir 10870:7]
    connect _WIRE_3[4], _T_23 @[build/NutShell.fir.opt.mlir 10871:7]
    connect _WIRE_3[5], _T_25 @[build/NutShell.fir.opt.mlir 10872:7]
    connect _WIRE_3[6], _T_27 @[build/NutShell.fir.opt.mlir 10873:7]
    connect _WIRE_3[7], _T_29 @[build/NutShell.fir.opt.mlir 10874:7]
    connect _WIRE_3[8], _T_31 @[build/NutShell.fir.opt.mlir 10875:7]
    connect _WIRE_3[9], _T_33 @[build/NutShell.fir.opt.mlir 10876:7]
    connect _WIRE_3[10], _T_35 @[build/NutShell.fir.opt.mlir 10877:7]
    connect _WIRE_3[11], _T_37 @[build/NutShell.fir.opt.mlir 10878:7]
    connect _WIRE_3[12], _T_39 @[build/NutShell.fir.opt.mlir 10879:7]
    connect _WIRE_3[13], _T_41 @[build/NutShell.fir.opt.mlir 10880:7]
    connect _WIRE_3[14], _T_43 @[build/NutShell.fir.opt.mlir 10881:7]
    connect _WIRE_3[15], _T_45 @[build/NutShell.fir.opt.mlir 10882:7]
    connect _WIRE_3[16], _T_47 @[build/NutShell.fir.opt.mlir 10883:7]
    connect _WIRE_3[17], _T_49 @[build/NutShell.fir.opt.mlir 10884:7]
    connect _WIRE_3[18], _T_51 @[build/NutShell.fir.opt.mlir 10885:7]
    connect _WIRE_3[19], _T_53 @[build/NutShell.fir.opt.mlir 10886:7]
    connect _WIRE_3[20], _T_55 @[build/NutShell.fir.opt.mlir 10887:7]
    connect _WIRE_3[21], _T_57 @[build/NutShell.fir.opt.mlir 10888:7]
    connect _WIRE_3[22], _T_59 @[build/NutShell.fir.opt.mlir 10889:7]
    connect _WIRE_3[23], _T_61 @[build/NutShell.fir.opt.mlir 10890:7]
    connect _WIRE_3[24], _T_63 @[build/NutShell.fir.opt.mlir 10891:7]
    connect _WIRE_3[25], _T_65 @[build/NutShell.fir.opt.mlir 10892:7]
    connect _WIRE_3[26], _T_67 @[build/NutShell.fir.opt.mlir 10893:7]
    connect _WIRE_3[27], _T_69 @[build/NutShell.fir.opt.mlir 10894:7]
    connect _WIRE_3[28], _T_71 @[build/NutShell.fir.opt.mlir 10895:7]
    connect _WIRE_3[29], _T_73 @[build/NutShell.fir.opt.mlir 10896:7]
    connect _WIRE_3[30], _T_75 @[build/NutShell.fir.opt.mlir 10897:7]
    connect _WIRE_3[31], _T_77 @[build/NutShell.fir.opt.mlir 10898:7]
    connect difftest.value, _WIRE_3 @[build/NutShell.fir.opt.mlir 10899:7]
    connect _WIRE_2__bore, _WIRE_2 @[build/NutShell.fir.opt.mlir 10900:7]
    connect _WIRE_1__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 10901:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 10902:7]

  extmodule LogPerfHelper_7 : @[build/NutShell.fir.opt.mlir 10904:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 10904:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 10904:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 10904:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 10904:140]
    defname = LogPerfHelper

  module ALU : @[build/NutShell.fir.opt.mlir 10905:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 10905:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 10905:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip offset : UInt<64> } @[build/NutShell.fir.opt.mlir 10905:88]
    output _WIRE_13__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:695]
    output _WIRE_7__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:733]
    output _WIRE_6__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:770]
    output _WIRE_5__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:807]
    output _WIRE_12__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:844]
    output REG__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 10905:882]
    output _WIRE_4__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1067]
    output _WIRE_11__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1104]
    output _WIRE_2__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1142]
    output _WIRE_10__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1179]
    output _WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1217]
    output _WIRE_9__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1254]
    output _WIRE_16__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1291]
    output _WIRE_3__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1329]
    output _WIRE_15__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1366]
    output _WIRE_8__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1404]
    output _WIRE_14__bore : UInt<1> @[build/NutShell.fir.opt.mlir 10905:1441]

    node _isAdderSub_T = bits(io.in.bits.func, 6, 6) @[build/NutShell.fir.opt.mlir 10928:24]
    node isAdderSub = eq(_isAdderSub_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10931:21]
    node _adderRes_T = mux(isAdderSub, UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 10935:22]
    node _adderRes_T_1 = xor(io.in.bits.src2, _adderRes_T) @[build/NutShell.fir.opt.mlir 10937:24]
    node _adderRes_T_2 = add(io.in.bits.src1, _adderRes_T_1) @[build/NutShell.fir.opt.mlir 10939:24]
    node _adderRes_T_3 = add(_adderRes_T_2, isAdderSub) @[build/NutShell.fir.opt.mlir 10941:24]
    node adderRes = tail(_adderRes_T_3, 1) @[build/NutShell.fir.opt.mlir 10943:19]
    node xorRes = xor(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 10945:17]
    node _sltu_T = bits(adderRes, 64, 64) @[build/NutShell.fir.opt.mlir 10947:18]
    node sltu = eq(_sltu_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 10949:15]
    node _slt_T = bits(xorRes, 63, 63) @[build/NutShell.fir.opt.mlir 10951:17]
    node slt = xor(_slt_T, sltu) @[build/NutShell.fir.opt.mlir 10953:14]
    node _shsrc1_T = bits(io.in.bits.src1, 63, 0) @[build/NutShell.fir.opt.mlir 10955:20]
    node _shsrc1_T_1 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 10957:22]
    node _shsrc1_T_2 = cat(UInt<32>(0), _shsrc1_T_1) @[build/NutShell.fir.opt.mlir 10960:22]
    node _shsrc1_T_3 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 10962:22]
    node shsrc1_signBit = bits(_shsrc1_T_3, 31, 31) @[build/NutShell.fir.opt.mlir 10964:25]
    node _shsrc1_T_4 = mux(shsrc1_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 10967:22]
    node _shsrc1_T_5 = cat(_shsrc1_T_4, _shsrc1_T_3) @[build/NutShell.fir.opt.mlir 10969:22]
    node _shsrc1_T_6 = eq(UInt<6>(37), io.in.bits.func) @[build/NutShell.fir.opt.mlir 10972:22]
    node _shsrc1_T_7 = mux(_shsrc1_T_6, _shsrc1_T_2, _shsrc1_T) @[build/NutShell.fir.opt.mlir 10974:22]
    node _shsrc1_T_8 = eq(UInt<6>(45), io.in.bits.func) @[build/NutShell.fir.opt.mlir 10977:22]
    node shsrc1 = mux(_shsrc1_T_8, _shsrc1_T_5, _shsrc1_T_7) @[build/NutShell.fir.opt.mlir 10979:17]
    node _shamt_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 10981:19]
    node _shamt_T_1 = bits(io.in.bits.src2, 4, 0) @[build/NutShell.fir.opt.mlir 10983:21]
    node _shamt_T_2 = bits(io.in.bits.src2, 5, 0) @[build/NutShell.fir.opt.mlir 10985:21]
    node shamt = mux(_shamt_T, _shamt_T_1, _shamt_T_2) @[build/NutShell.fir.opt.mlir 10987:16]
    node _res_T = bits(io.in.bits.func, 3, 0) @[build/NutShell.fir.opt.mlir 10989:17]
    node _res_T_1 = dshl(shsrc1, shamt) @[build/NutShell.fir.opt.mlir 10991:19]
    node _res_T_2 = bits(_res_T_1, 63, 0) @[build/NutShell.fir.opt.mlir 10993:19]
    node _res_T_3 = cat(UInt<63>(0), slt) @[build/NutShell.fir.opt.mlir 10996:19]
    node _res_T_4 = cat(UInt<63>(0), sltu) @[build/NutShell.fir.opt.mlir 10998:19]
    node _res_T_5 = dshr(shsrc1, shamt) @[build/NutShell.fir.opt.mlir 11000:19]
    node _res_T_6 = or(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 11002:19]
    node _res_T_7 = and(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 11004:19]
    node _res_T_8 = asSInt(shsrc1) @[build/NutShell.fir.opt.mlir 11006:19]
    node _res_T_9 = dshr(_res_T_8, shamt) @[build/NutShell.fir.opt.mlir 11008:19]
    node _res_T_10 = asUInt(_res_T_9) @[build/NutShell.fir.opt.mlir 11010:20]
    node _res_T_11 = eq(UInt<1>(1), _res_T) @[build/NutShell.fir.opt.mlir 11013:20]
    node _res_T_12 = mux(_res_T_11, _res_T_2, adderRes) @[build/NutShell.fir.opt.mlir 11015:20]
    node _res_T_13 = eq(UInt<2>(2), _res_T) @[build/NutShell.fir.opt.mlir 11018:20]
    node _res_T_14 = mux(_res_T_13, _res_T_3, _res_T_12) @[build/NutShell.fir.opt.mlir 11020:20]
    node _res_T_15 = eq(UInt<2>(3), _res_T) @[build/NutShell.fir.opt.mlir 11023:20]
    node _res_T_16 = mux(_res_T_15, _res_T_4, _res_T_14) @[build/NutShell.fir.opt.mlir 11025:20]
    node _res_T_17 = eq(UInt<3>(4), _res_T) @[build/NutShell.fir.opt.mlir 11028:20]
    node _res_T_18 = mux(_res_T_17, xorRes, _res_T_16) @[build/NutShell.fir.opt.mlir 11030:20]
    node _res_T_19 = eq(UInt<3>(5), _res_T) @[build/NutShell.fir.opt.mlir 11033:20]
    node _res_T_20 = mux(_res_T_19, _res_T_5, _res_T_18) @[build/NutShell.fir.opt.mlir 11035:20]
    node _res_T_21 = eq(UInt<3>(6), _res_T) @[build/NutShell.fir.opt.mlir 11038:20]
    node _res_T_22 = mux(_res_T_21, _res_T_6, _res_T_20) @[build/NutShell.fir.opt.mlir 11040:20]
    node _res_T_23 = eq(UInt<3>(7), _res_T) @[build/NutShell.fir.opt.mlir 11043:20]
    node _res_T_24 = mux(_res_T_23, _res_T_7, _res_T_22) @[build/NutShell.fir.opt.mlir 11045:20]
    node _res_T_25 = eq(UInt<4>(13), _res_T) @[build/NutShell.fir.opt.mlir 11048:20]
    node res = mux(_res_T_25, _res_T_10, _res_T_24) @[build/NutShell.fir.opt.mlir 11050:14]
    node _aluRes_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 11052:20]
    node _aluRes_T_1 = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 11054:22]
    node aluRes_signBit = bits(_aluRes_T_1, 31, 31) @[build/NutShell.fir.opt.mlir 11056:25]
    node _aluRes_T_2 = mux(aluRes_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 11058:22]
    node _aluRes_T_3 = cat(_aluRes_T_2, _aluRes_T_1) @[build/NutShell.fir.opt.mlir 11060:22]
    node aluRes = mux(_aluRes_T, _aluRes_T_3, res) @[build/NutShell.fir.opt.mlir 11062:17]
    node _branchOpTable_T = orr(xorRes) @[build/NutShell.fir.opt.mlir 11064:27]
    node branchOpTable_0_2 = eq(_branchOpTable_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11066:28]
    node _isBranch_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 11068:22]
    node isBranch = eq(_isBranch_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11070:19]
    node isBru = bits(io.in.bits.func, 4, 4) @[build/NutShell.fir.opt.mlir 11072:16]
    node _taken_T = bits(io.in.bits.func, 2, 1) @[build/NutShell.fir.opt.mlir 11074:19]
    node _taken_T_1 = eq(UInt<2>(0), _taken_T) @[build/NutShell.fir.opt.mlir 11077:21]
    node _taken_T_2 = eq(UInt<2>(2), _taken_T) @[build/NutShell.fir.opt.mlir 11079:21]
    node _taken_T_3 = eq(UInt<2>(3), _taken_T) @[build/NutShell.fir.opt.mlir 11081:21]
    node _taken_T_4 = mux(_taken_T_1, branchOpTable_0_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11083:21]
    node _taken_T_5 = mux(_taken_T_2, slt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11085:21]
    node _taken_T_6 = mux(_taken_T_3, sltu, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11087:21]
    node _taken_T_7 = or(_taken_T_4, _taken_T_5) @[build/NutShell.fir.opt.mlir 11089:21]
    node _taken_T_8 = or(_taken_T_7, _taken_T_6) @[build/NutShell.fir.opt.mlir 11091:21]
    wire _taken_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 11092:22]
    connect _taken_WIRE, _taken_T_8 @[build/NutShell.fir.opt.mlir 11093:7]
    node _taken_T_9 = bits(io.in.bits.func, 0, 0) @[build/NutShell.fir.opt.mlir 11095:21]
    node taken = xor(_taken_WIRE, _taken_T_9) @[build/NutShell.fir.opt.mlir 11097:16]
    node _target_T = add(io.cfIn.pc, io.offset) @[build/NutShell.fir.opt.mlir 11099:20]
    node _target_T_1 = tail(_target_T, 1) @[build/NutShell.fir.opt.mlir 11101:22]
    node _target_T_2 = bits(adderRes, 63, 1) @[build/NutShell.fir.opt.mlir 11103:22]
    node _target_T_3 = cat(_target_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11105:22]
    node _target_T_4 = mux(isBranch, _target_T_1, _target_T_3) @[build/NutShell.fir.opt.mlir 11107:22]
    node target = bits(_target_T_4, 38, 0) @[build/NutShell.fir.opt.mlir 11109:17]
    node _predictWrong_T = eq(taken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11111:26]
    node _predictWrong_T_1 = and(_predictWrong_T, isBranch) @[build/NutShell.fir.opt.mlir 11113:28]
    node _predictWrong_T_2 = bits(io.cfIn.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 11115:28]
    node _predictWrong_T_3 = bits(io.cfIn.brIdx, 0, 0) @[build/NutShell.fir.opt.mlir 11117:28]
    node _predictWrong_T_4 = eq(_predictWrong_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11119:28]
    node _predictWrong_T_5 = neq(io.redirect.target, io.cfIn.pnpc) @[build/NutShell.fir.opt.mlir 11121:28]
    node _predictWrong_T_6 = or(_predictWrong_T_4, _predictWrong_T_5) @[build/NutShell.fir.opt.mlir 11123:28]
    node predictWrong = mux(_predictWrong_T_1, _predictWrong_T_2, _predictWrong_T_6) @[build/NutShell.fir.opt.mlir 11125:23]
    node _isRVC_T = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11127:19]
    node isRVC = neq(_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11129:16]
    node _T = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11131:13]
    node _T_1 = eq(_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11133:15]
    node _T_2 = or(_T_1, isRVC) @[build/NutShell.fir.opt.mlir 11135:15]
    node _T_3 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11137:15]
    node _T_4 = or(_T_2, _T_3) @[build/NutShell.fir.opt.mlir 11139:15]
    node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11141:15]
    node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11143:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 11144:7]
      node _T_7 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11146:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 11147:9]
        skip @[build/NutShell.fir.opt.mlir 11148:11]
      assert(clock, _T_4, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 11150:9]
    node _T_8 = bits(io.cfIn.instr, 1, 0) @[build/NutShell.fir.opt.mlir 11153:15]
    node _T_9 = eq(_T_8, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11155:15]
    node _T_10 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11157:16]
    node _T_11 = neq(_T_9, _T_10) @[build/NutShell.fir.opt.mlir 11159:16]
    node _T_12 = and(io.in.valid, _T_11) @[build/NutShell.fir.opt.mlir 11161:16]
    inst LogPerfHelper of LogPerfHelper_7 @[build/NutShell.fir.opt.mlir 11162:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 11163:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 11168:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 11169:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 11170:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 11171:7]
    node _T_13 = and(_T_12, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11173:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 11174:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11176:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11178:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 11179:9]
        skip @[build/NutShell.fir.opt.mlir 11180:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11183:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11185:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 11186:9]
        skip @[build/NutShell.fir.opt.mlir 11187:11]
    node _io_redirect_target_T = eq(taken, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11191:32]
    node _io_redirect_target_T_1 = and(_io_redirect_target_T, isBranch) @[build/NutShell.fir.opt.mlir 11193:34]
    node _io_redirect_target_T_2 = add(io.cfIn.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11195:34]
    node _io_redirect_target_T_3 = tail(_io_redirect_target_T_2, 1) @[build/NutShell.fir.opt.mlir 11197:34]
    node _io_redirect_target_T_4 = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11199:34]
    node _io_redirect_target_T_5 = tail(_io_redirect_target_T_4, 1) @[build/NutShell.fir.opt.mlir 11201:34]
    node _io_redirect_target_T_6 = mux(isRVC, _io_redirect_target_T_3, _io_redirect_target_T_5) @[build/NutShell.fir.opt.mlir 11203:34]
    node _io_redirect_target_T_7 = mux(_io_redirect_target_T_1, _io_redirect_target_T_6, target) @[build/NutShell.fir.opt.mlir 11205:34]
    connect io.redirect.target, _io_redirect_target_T_7 @[build/NutShell.fir.opt.mlir 11206:7]
    node _io_redirect_valid_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11208:31]
    node _io_redirect_valid_T_1 = and(_io_redirect_valid_T, predictWrong) @[build/NutShell.fir.opt.mlir 11210:33]
    connect io.redirect.valid, _io_redirect_valid_T_1 @[build/NutShell.fir.opt.mlir 11211:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11213:7]
    node _io_out_bits_T = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11215:25]
    node io_out_bits_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 11217:30]
    node _io_out_bits_T_1 = mux(io_out_bits_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 11221:27]
    node _io_out_bits_T_2 = cat(_io_out_bits_T_1, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 11223:27]
    node _io_out_bits_T_3 = add(_io_out_bits_T_2, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11225:27]
    node _io_out_bits_T_4 = tail(_io_out_bits_T_3, 1) @[build/NutShell.fir.opt.mlir 11227:27]
    node io_out_bits_signBit_1 = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 11229:32]
    node _io_out_bits_T_5 = mux(io_out_bits_signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 11231:27]
    node _io_out_bits_T_6 = cat(_io_out_bits_T_5, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 11233:27]
    node _io_out_bits_T_7 = add(_io_out_bits_T_6, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11235:27]
    node _io_out_bits_T_8 = tail(_io_out_bits_T_7, 1) @[build/NutShell.fir.opt.mlir 11237:27]
    node _io_out_bits_T_9 = mux(_io_out_bits_T, _io_out_bits_T_4, _io_out_bits_T_8) @[build/NutShell.fir.opt.mlir 11239:27]
    node _io_out_bits_T_10 = mux(isBru, _io_out_bits_T_9, aluRes) @[build/NutShell.fir.opt.mlir 11241:28]
    connect io.out.bits, tail(_io_out_bits_T_10, 1) @[build/NutShell.fir.opt.mlir 11243:7]
    node _T_18 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11245:16]
    node _T_19 = and(_T_18, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11247:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 11248:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11250:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11252:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 11253:9]
        skip @[build/NutShell.fir.opt.mlir 11254:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11257:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11259:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 11260:9]
        skip @[build/NutShell.fir.opt.mlir 11261:11]
    node _T_24 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11265:16]
    node _T_25 = and(_T_24, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11267:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 11268:7]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11270:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11272:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 11273:9]
        skip @[build/NutShell.fir.opt.mlir 11274:11]
      node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11277:18]
      node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11279:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 11280:9]
        skip @[build/NutShell.fir.opt.mlir 11281:11]
    node _T_30 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11285:16]
    node _T_31 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11288:16]
    node _T_32 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11291:16]
    node _T_33 = or(_T_31, _T_32) @[build/NutShell.fir.opt.mlir 11293:16]
    node _T_34 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11296:16]
    node _T_35 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11299:16]
    node _T_36 = and(_T_30, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11301:16]
    when _T_36 : @[build/NutShell.fir.opt.mlir 11302:7]
      node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11304:18]
      node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11306:18]
      when _T_38 : @[build/NutShell.fir.opt.mlir 11307:9]
        skip @[build/NutShell.fir.opt.mlir 11308:11]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11311:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11313:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 11314:9]
        skip @[build/NutShell.fir.opt.mlir 11315:11]
    node _T_41 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 11319:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 11320:7]
      node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11322:18]
      node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11324:18]
      when _T_43 : @[build/NutShell.fir.opt.mlir 11325:9]
        skip @[build/NutShell.fir.opt.mlir 11326:11]
      node _T_44 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11329:18]
      node _T_45 = eq(_T_44, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11331:18]
      when _T_45 : @[build/NutShell.fir.opt.mlir 11332:9]
        skip @[build/NutShell.fir.opt.mlir 11333:11]
    node _T_46 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11337:16]
    node _T_47 = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11339:16]
    node _T_48 = eq(UInt<5>(16), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11342:16]
    node _T_49 = eq(UInt<5>(17), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11345:16]
    node _T_50 = eq(UInt<5>(20), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11348:16]
    node _T_51 = eq(UInt<5>(21), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11351:16]
    node _T_52 = eq(UInt<5>(22), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11354:16]
    node _T_53 = eq(UInt<5>(23), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11357:16]
    node _T_54 = eq(UInt<7>(92), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11359:16]
    node _T_55 = eq(UInt<7>(94), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11361:16]
    node _T_56 = eq(UInt<7>(88), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11363:16]
    node _T_57 = eq(UInt<7>(90), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11365:16]
    node _T_58 = mux(_T_48, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11367:16]
    node _T_59 = mux(_T_49, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11369:16]
    node _T_60 = mux(_T_50, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11371:16]
    node _T_61 = mux(_T_51, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11373:16]
    node _T_62 = mux(_T_52, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11375:16]
    node _T_63 = mux(_T_53, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11377:16]
    node _T_64 = mux(_T_54, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11379:16]
    node _T_65 = mux(_T_55, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11381:16]
    node _T_66 = mux(_T_56, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11383:16]
    node _T_67 = mux(_T_57, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11385:16]
    node _T_68 = or(_T_58, _T_59) @[build/NutShell.fir.opt.mlir 11387:16]
    node _T_69 = or(_T_68, _T_60) @[build/NutShell.fir.opt.mlir 11389:16]
    node _T_70 = or(_T_69, _T_61) @[build/NutShell.fir.opt.mlir 11391:16]
    node _T_71 = or(_T_70, _T_62) @[build/NutShell.fir.opt.mlir 11393:16]
    node _T_72 = or(_T_71, _T_63) @[build/NutShell.fir.opt.mlir 11395:16]
    node _T_73 = or(_T_72, _T_64) @[build/NutShell.fir.opt.mlir 11397:16]
    node _T_74 = or(_T_73, _T_65) @[build/NutShell.fir.opt.mlir 11399:16]
    node _T_75 = or(_T_74, _T_66) @[build/NutShell.fir.opt.mlir 11401:16]
    node _T_76 = or(_T_75, _T_67) @[build/NutShell.fir.opt.mlir 11403:16]
    wire _WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 11404:16]
    connect _WIRE, _T_76 @[build/NutShell.fir.opt.mlir 11405:7]
    node _T_77 = and(_T_46, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11407:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 11408:7]
      node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11410:18]
      node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11412:18]
      when _T_79 : @[build/NutShell.fir.opt.mlir 11413:9]
        skip @[build/NutShell.fir.opt.mlir 11414:11]
      node _T_80 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11417:18]
      node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11419:18]
      when _T_81 : @[build/NutShell.fir.opt.mlir 11420:9]
        skip @[build/NutShell.fir.opt.mlir 11421:11]
    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 11424:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 11425:7]
    wire _bpuUpdateReq_WIRE : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 11426:29]
    connect _bpuUpdateReq_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11436:7]
    connect _bpuUpdateReq_WIRE.btbType, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11438:7]
    connect _bpuUpdateReq_WIRE.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 11441:7]
    connect _bpuUpdateReq_WIRE.actualTaken, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11443:7]
    connect _bpuUpdateReq_WIRE.actualTarget, UInt<39>(0) @[build/NutShell.fir.opt.mlir 11446:7]
    connect _bpuUpdateReq_WIRE.isMissPredict, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11448:7]
    connect _bpuUpdateReq_WIRE.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 11450:7]
    connect _bpuUpdateReq_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11452:7]
    wire bpuUpdateReq : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 11453:23]
    connect bpuUpdateReq, _bpuUpdateReq_WIRE @[build/NutShell.fir.opt.mlir 11462:7]
    node _bpuUpdateReq_valid_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11464:32]
    connect bpuUpdateReq.valid, _bpuUpdateReq_valid_T @[build/NutShell.fir.opt.mlir 11465:7]
    connect bpuUpdateReq.pc, io.cfIn.pc @[build/NutShell.fir.opt.mlir 11466:7]
    connect bpuUpdateReq.isMissPredict, predictWrong @[build/NutShell.fir.opt.mlir 11467:7]
    connect bpuUpdateReq.actualTarget, target @[build/NutShell.fir.opt.mlir 11468:7]
    connect bpuUpdateReq.actualTaken, taken @[build/NutShell.fir.opt.mlir 11469:7]
    connect bpuUpdateReq.fuOpType, io.in.bits.func @[build/NutShell.fir.opt.mlir 11470:7]
    node _bpuUpdateReq_btbType_T = eq(UInt<5>(16), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11472:34]
    node _bpuUpdateReq_btbType_T_1 = eq(UInt<5>(17), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11474:36]
    node _bpuUpdateReq_btbType_T_2 = eq(UInt<5>(20), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11476:36]
    node _bpuUpdateReq_btbType_T_3 = eq(UInt<5>(21), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11478:36]
    node _bpuUpdateReq_btbType_T_4 = eq(UInt<5>(22), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11480:36]
    node _bpuUpdateReq_btbType_T_5 = eq(UInt<5>(23), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11482:36]
    node _bpuUpdateReq_btbType_T_6 = eq(UInt<7>(92), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11484:36]
    node _bpuUpdateReq_btbType_T_7 = eq(UInt<7>(94), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11486:36]
    node _bpuUpdateReq_btbType_T_8 = eq(UInt<7>(88), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11488:36]
    node _bpuUpdateReq_btbType_T_9 = eq(UInt<7>(90), io.in.bits.func) @[build/NutShell.fir.opt.mlir 11490:36]
    node _bpuUpdateReq_btbType_T_10 = mux(_bpuUpdateReq_btbType_T, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11492:37]
    node _bpuUpdateReq_btbType_T_11 = mux(_bpuUpdateReq_btbType_T_1, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11494:37]
    node _bpuUpdateReq_btbType_T_12 = mux(_bpuUpdateReq_btbType_T_2, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11496:37]
    node _bpuUpdateReq_btbType_T_13 = mux(_bpuUpdateReq_btbType_T_3, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11498:37]
    node _bpuUpdateReq_btbType_T_14 = mux(_bpuUpdateReq_btbType_T_4, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11500:37]
    node _bpuUpdateReq_btbType_T_15 = mux(_bpuUpdateReq_btbType_T_5, UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11502:37]
    node _bpuUpdateReq_btbType_T_16 = mux(_bpuUpdateReq_btbType_T_6, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11504:37]
    node _bpuUpdateReq_btbType_T_17 = mux(_bpuUpdateReq_btbType_T_7, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11506:37]
    node _bpuUpdateReq_btbType_T_18 = mux(_bpuUpdateReq_btbType_T_8, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11508:37]
    node _bpuUpdateReq_btbType_T_19 = mux(_bpuUpdateReq_btbType_T_9, UInt<2>(2), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11510:37]
    node _bpuUpdateReq_btbType_T_20 = or(_bpuUpdateReq_btbType_T_10, _bpuUpdateReq_btbType_T_11) @[build/NutShell.fir.opt.mlir 11512:37]
    node _bpuUpdateReq_btbType_T_21 = or(_bpuUpdateReq_btbType_T_20, _bpuUpdateReq_btbType_T_12) @[build/NutShell.fir.opt.mlir 11514:37]
    node _bpuUpdateReq_btbType_T_22 = or(_bpuUpdateReq_btbType_T_21, _bpuUpdateReq_btbType_T_13) @[build/NutShell.fir.opt.mlir 11516:37]
    node _bpuUpdateReq_btbType_T_23 = or(_bpuUpdateReq_btbType_T_22, _bpuUpdateReq_btbType_T_14) @[build/NutShell.fir.opt.mlir 11518:37]
    node _bpuUpdateReq_btbType_T_24 = or(_bpuUpdateReq_btbType_T_23, _bpuUpdateReq_btbType_T_15) @[build/NutShell.fir.opt.mlir 11520:37]
    node _bpuUpdateReq_btbType_T_25 = or(_bpuUpdateReq_btbType_T_24, _bpuUpdateReq_btbType_T_16) @[build/NutShell.fir.opt.mlir 11522:37]
    node _bpuUpdateReq_btbType_T_26 = or(_bpuUpdateReq_btbType_T_25, _bpuUpdateReq_btbType_T_17) @[build/NutShell.fir.opt.mlir 11524:37]
    node _bpuUpdateReq_btbType_T_27 = or(_bpuUpdateReq_btbType_T_26, _bpuUpdateReq_btbType_T_18) @[build/NutShell.fir.opt.mlir 11526:37]
    node _bpuUpdateReq_btbType_T_28 = or(_bpuUpdateReq_btbType_T_27, _bpuUpdateReq_btbType_T_19) @[build/NutShell.fir.opt.mlir 11528:37]
    wire _bpuUpdateReq_btbType_WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 11529:37]
    connect _bpuUpdateReq_btbType_WIRE, _bpuUpdateReq_btbType_T_28 @[build/NutShell.fir.opt.mlir 11530:7]
    connect bpuUpdateReq.btbType, _bpuUpdateReq_btbType_WIRE @[build/NutShell.fir.opt.mlir 11531:7]
    connect bpuUpdateReq.isRVC, isRVC @[build/NutShell.fir.opt.mlir 11532:7]
    reg REG : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> }, clock @[build/NutShell.fir.opt.mlir 11533:14]
    connect REG, bpuUpdateReq @[build/NutShell.fir.opt.mlir 11534:7]
    node _right_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11536:19]
    node _right_T_1 = eq(predictWrong, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11538:21]
    node right = and(_right_T, _right_T_1) @[build/NutShell.fir.opt.mlir 11540:16]
    node _wrong_T = and(io.in.valid, isBru) @[build/NutShell.fir.opt.mlir 11542:19]
    node wrong = and(_wrong_T, predictWrong) @[build/NutShell.fir.opt.mlir 11544:16]
    node _T_82 = and(right, isBranch) @[build/NutShell.fir.opt.mlir 11546:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 11547:18]
    connect _WIRE_1, _T_82 @[build/NutShell.fir.opt.mlir 11548:7]
    node _T_83 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11550:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 11551:18]
    connect _WIRE_2, _T_83 @[build/NutShell.fir.opt.mlir 11552:7]
    node _T_84 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11554:16]
    node _T_85 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11556:16]
    node _T_86 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11558:16]
    node _T_87 = and(_T_84, _T_86) @[build/NutShell.fir.opt.mlir 11560:16]
    node _T_88 = and(_T_87, isRVC) @[build/NutShell.fir.opt.mlir 11562:16]
    wire _WIRE_3 : UInt<1> @[build/NutShell.fir.opt.mlir 11563:18]
    connect _WIRE_3, _T_88 @[build/NutShell.fir.opt.mlir 11564:7]
    node _T_89 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11566:16]
    node _T_90 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11568:16]
    node _T_91 = eq(_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11570:16]
    node _T_92 = and(_T_89, _T_91) @[build/NutShell.fir.opt.mlir 11572:16]
    node _T_93 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11574:16]
    node _T_94 = and(_T_92, _T_93) @[build/NutShell.fir.opt.mlir 11576:16]
    wire _WIRE_4 : UInt<1> @[build/NutShell.fir.opt.mlir 11577:18]
    connect _WIRE_4, _T_94 @[build/NutShell.fir.opt.mlir 11578:7]
    node _T_95 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11580:16]
    node _T_96 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11582:16]
    node _T_97 = eq(_T_96, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11584:16]
    node _T_98 = and(_T_95, _T_97) @[build/NutShell.fir.opt.mlir 11586:16]
    node _T_99 = and(_T_98, isRVC) @[build/NutShell.fir.opt.mlir 11588:16]
    wire _WIRE_5 : UInt<1> @[build/NutShell.fir.opt.mlir 11589:18]
    connect _WIRE_5, _T_99 @[build/NutShell.fir.opt.mlir 11590:7]
    node _T_100 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11592:17]
    node _T_101 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11594:17]
    node _T_102 = eq(_T_101, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 11596:17]
    node _T_103 = and(_T_100, _T_102) @[build/NutShell.fir.opt.mlir 11598:17]
    node _T_104 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11600:17]
    node _T_105 = and(_T_103, _T_104) @[build/NutShell.fir.opt.mlir 11602:17]
    wire _WIRE_6 : UInt<1> @[build/NutShell.fir.opt.mlir 11603:18]
    connect _WIRE_6, _T_105 @[build/NutShell.fir.opt.mlir 11604:7]
    node _T_106 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11606:17]
    node _T_107 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11608:17]
    node _T_108 = eq(_T_107, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11610:17]
    node _T_109 = and(_T_106, _T_108) @[build/NutShell.fir.opt.mlir 11612:17]
    node _T_110 = and(_T_109, isRVC) @[build/NutShell.fir.opt.mlir 11614:17]
    wire _WIRE_7 : UInt<1> @[build/NutShell.fir.opt.mlir 11615:18]
    connect _WIRE_7, _T_110 @[build/NutShell.fir.opt.mlir 11616:7]
    node _T_111 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11618:17]
    node _T_112 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11620:17]
    node _T_113 = eq(_T_112, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 11622:17]
    node _T_114 = and(_T_111, _T_113) @[build/NutShell.fir.opt.mlir 11624:17]
    node _T_115 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11626:17]
    node _T_116 = and(_T_114, _T_115) @[build/NutShell.fir.opt.mlir 11628:17]
    wire _WIRE_8 : UInt<1> @[build/NutShell.fir.opt.mlir 11629:18]
    connect _WIRE_8, _T_116 @[build/NutShell.fir.opt.mlir 11630:7]
    node _T_117 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11632:17]
    node _T_118 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11634:17]
    node _T_119 = eq(_T_118, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 11636:17]
    node _T_120 = and(_T_117, _T_119) @[build/NutShell.fir.opt.mlir 11638:17]
    node _T_121 = and(_T_120, isRVC) @[build/NutShell.fir.opt.mlir 11640:17]
    wire _WIRE_9 : UInt<1> @[build/NutShell.fir.opt.mlir 11641:18]
    connect _WIRE_9, _T_121 @[build/NutShell.fir.opt.mlir 11642:7]
    node _T_122 = and(wrong, isBranch) @[build/NutShell.fir.opt.mlir 11644:17]
    node _T_123 = bits(io.cfIn.pc, 2, 0) @[build/NutShell.fir.opt.mlir 11646:17]
    node _T_124 = eq(_T_123, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 11648:17]
    node _T_125 = and(_T_122, _T_124) @[build/NutShell.fir.opt.mlir 11650:17]
    node _T_126 = eq(isRVC, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11652:17]
    node _T_127 = and(_T_125, _T_126) @[build/NutShell.fir.opt.mlir 11654:17]
    wire _WIRE_10 : UInt<1> @[build/NutShell.fir.opt.mlir 11655:19]
    connect _WIRE_10, _T_127 @[build/NutShell.fir.opt.mlir 11656:7]
    node _T_128 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11658:17]
    node _T_129 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11660:17]
    node _T_130 = or(_T_128, _T_129) @[build/NutShell.fir.opt.mlir 11662:17]
    node _T_131 = and(right, _T_130) @[build/NutShell.fir.opt.mlir 11664:17]
    wire _WIRE_11 : UInt<1> @[build/NutShell.fir.opt.mlir 11665:19]
    connect _WIRE_11, _T_131 @[build/NutShell.fir.opt.mlir 11666:7]
    node _T_132 = eq(io.in.bits.func, UInt<7>(88)) @[build/NutShell.fir.opt.mlir 11668:17]
    node _T_133 = eq(io.in.bits.func, UInt<7>(92)) @[build/NutShell.fir.opt.mlir 11670:17]
    node _T_134 = or(_T_132, _T_133) @[build/NutShell.fir.opt.mlir 11672:17]
    node _T_135 = and(wrong, _T_134) @[build/NutShell.fir.opt.mlir 11674:17]
    wire _WIRE_12 : UInt<1> @[build/NutShell.fir.opt.mlir 11675:19]
    connect _WIRE_12, _T_135 @[build/NutShell.fir.opt.mlir 11676:7]
    node _T_136 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11678:17]
    node _T_137 = and(right, _T_136) @[build/NutShell.fir.opt.mlir 11680:17]
    wire _WIRE_13 : UInt<1> @[build/NutShell.fir.opt.mlir 11681:19]
    connect _WIRE_13, _T_137 @[build/NutShell.fir.opt.mlir 11682:7]
    node _T_138 = eq(io.in.bits.func, UInt<7>(90)) @[build/NutShell.fir.opt.mlir 11684:17]
    node _T_139 = and(wrong, _T_138) @[build/NutShell.fir.opt.mlir 11686:17]
    wire _WIRE_14 : UInt<1> @[build/NutShell.fir.opt.mlir 11687:19]
    connect _WIRE_14, _T_139 @[build/NutShell.fir.opt.mlir 11688:7]
    node _T_140 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11690:17]
    node _T_141 = and(right, _T_140) @[build/NutShell.fir.opt.mlir 11692:17]
    wire _WIRE_15 : UInt<1> @[build/NutShell.fir.opt.mlir 11693:19]
    connect _WIRE_15, _T_141 @[build/NutShell.fir.opt.mlir 11694:7]
    node _T_142 = eq(io.in.bits.func, UInt<7>(94)) @[build/NutShell.fir.opt.mlir 11696:17]
    node _T_143 = and(wrong, _T_142) @[build/NutShell.fir.opt.mlir 11698:17]
    wire _WIRE_16 : UInt<1> @[build/NutShell.fir.opt.mlir 11699:19]
    connect _WIRE_16, _T_143 @[build/NutShell.fir.opt.mlir 11700:7]
    connect _WIRE_13__bore, _WIRE_13 @[build/NutShell.fir.opt.mlir 11701:7]
    connect _WIRE_7__bore, _WIRE_7 @[build/NutShell.fir.opt.mlir 11702:7]
    connect _WIRE_6__bore, _WIRE_6 @[build/NutShell.fir.opt.mlir 11703:7]
    connect _WIRE_5__bore, _WIRE_5 @[build/NutShell.fir.opt.mlir 11704:7]
    connect _WIRE_12__bore, _WIRE_12 @[build/NutShell.fir.opt.mlir 11705:7]
    connect REG__bore, REG @[build/NutShell.fir.opt.mlir 11706:7]
    connect _WIRE_4__bore, _WIRE_4 @[build/NutShell.fir.opt.mlir 11707:7]
    connect _WIRE_11__bore, _WIRE_11 @[build/NutShell.fir.opt.mlir 11708:7]
    connect _WIRE_2__bore, _WIRE_2 @[build/NutShell.fir.opt.mlir 11709:7]
    connect _WIRE_10__bore, _WIRE_10 @[build/NutShell.fir.opt.mlir 11710:7]
    connect _WIRE_1__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 11711:7]
    connect _WIRE_9__bore, _WIRE_9 @[build/NutShell.fir.opt.mlir 11712:7]
    connect _WIRE_16__bore, _WIRE_16 @[build/NutShell.fir.opt.mlir 11713:7]
    connect _WIRE_3__bore, _WIRE_3 @[build/NutShell.fir.opt.mlir 11714:7]
    connect _WIRE_15__bore, _WIRE_15 @[build/NutShell.fir.opt.mlir 11715:7]
    connect _WIRE_8__bore, _WIRE_8 @[build/NutShell.fir.opt.mlir 11716:7]
    connect _WIRE_14__bore, _WIRE_14 @[build/NutShell.fir.opt.mlir 11717:7]

  extmodule LogPerfHelper_8 : @[build/NutShell.fir.opt.mlir 11719:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 11719:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 11719:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 11719:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 11719:140]
    defname = LogPerfHelper

  module LSExecUnit : @[build/NutShell.fir.opt.mlir 11720:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 11720:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 11720:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip wdata : UInt<64>, flip instr : UInt<32>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, isMMIO : UInt<1>, dtlbPF : UInt<1>, loadAddrMisaligned : UInt<1>, storeAddrMisaligned : UInt<1> } @[build/NutShell.fir.opt.mlir 11720:95]
    input isAMO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:694]
    output io_in_bits_src1__bore : UInt<64> @[build/NutShell.fir.opt.mlir 11720:729]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:775]
    input dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:809]
    output r__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:849]
    input dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:879]
    output r_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:919]
    output io_isMMIO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:952]
    input dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 11720:990]

    reg addrLatch : UInt, clock @[build/NutShell.fir.opt.mlir 11751:20]
    connect addrLatch, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 11752:7]
    node _isStore_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 11754:21]
    node isStore = and(io.in.valid, _isStore_T) @[build/NutShell.fir.opt.mlir 11756:18]
    node _partialLoad_T = eq(isStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11759:25]
    node _partialLoad_T_1 = neq(io.in.bits.func, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 11762:27]
    node partialLoad = and(_partialLoad_T, _partialLoad_T_1) @[build/NutShell.fir.opt.mlir 11764:22]
    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11766:16]
    wire dtlbFinish : UInt<1> @[build/NutShell.fir.opt.mlir 11767:21]
    connect dtlbFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11769:7]
    wire dtlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 11770:17]
    connect dtlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11772:7]
    wire dtlbEnable : UInt<1> @[build/NutShell.fir.opt.mlir 11773:21]
    connect dtlbEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 11775:7]
    connect io.dtlbPF, dtlbPF @[build/NutShell.fir.opt.mlir 11776:7]
    node _T = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 11778:13]
    when _T : @[build/NutShell.fir.opt.mlir 11781:7]
      node _T_1 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11783:17]
      node _T_2 = and(_T_1, dtlbEnable) @[build/NutShell.fir.opt.mlir 11785:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 11786:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 11788:11]
      node _T_3 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11791:17]
      node _T_4 = eq(dtlbEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11793:17]
      node _T_5 = and(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 11795:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 11796:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 11798:11]
    else :
      node _T_6 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 11802:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 11803:9]
        node _T_7 = and(dtlbFinish, dtlbPF) @[build/NutShell.fir.opt.mlir 11805:19]
        when _T_7 : @[build/NutShell.fir.opt.mlir 11806:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11808:13]
        node _T_8 = eq(dtlbPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11811:19]
        node _T_9 = and(dtlbFinish, _T_8) @[build/NutShell.fir.opt.mlir 11813:19]
        when _T_9 : @[build/NutShell.fir.opt.mlir 11814:11]
          connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 11816:13]
      else :
        node _T_10 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 11820:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 11821:11]
          node _T_11 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11823:22]
          when _T_11 : @[build/NutShell.fir.opt.mlir 11824:13]
            node _state_T = mux(partialLoad, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 11826:27]
            connect state, _state_T @[build/NutShell.fir.opt.mlir 11827:15]
        else :
          node _T_12 = eq(UInt<2>(3), state) @[build/NutShell.fir.opt.mlir 11831:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 11832:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 11834:15]
    node _T_13 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11840:16]
    node _T_14 = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 11842:16]
    inst LogPerfHelper of LogPerfHelper_8 @[build/NutShell.fir.opt.mlir 11843:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 11844:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 11849:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 11850:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 11851:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 11852:7]
    node _T_15 = and(_T_13, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11854:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 11855:7]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11857:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11859:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 11860:9]
        skip @[build/NutShell.fir.opt.mlir 11861:11]
      node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11864:18]
      node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11866:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 11867:9]
        skip @[build/NutShell.fir.opt.mlir 11868:11]
    node _T_20 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11872:16]
    node _T_21 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11874:16]
    node _T_22 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11876:16]
    node _T_23 = and(_T_20, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11878:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 11879:7]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11881:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11883:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 11884:9]
        skip @[build/NutShell.fir.opt.mlir 11885:11]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11888:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11890:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 11891:9]
        skip @[build/NutShell.fir.opt.mlir 11892:11]
    node _T_28 = and(dtlbFinish, dtlbEnable) @[build/NutShell.fir.opt.mlir 11896:16]
    node _T_29 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 11898:16]
    node _T_30 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 11900:16]
    node _T_31 = and(_T_28, c_control.logEnable) @[build/NutShell.fir.opt.mlir 11902:16]
    when _T_31 : @[build/NutShell.fir.opt.mlir 11903:7]
      node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11905:18]
      node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11907:18]
      when _T_33 : @[build/NutShell.fir.opt.mlir 11908:9]
        skip @[build/NutShell.fir.opt.mlir 11909:11]
      node _T_34 = asUInt(reset) @[build/NutShell.fir.opt.mlir 11912:18]
      node _T_35 = eq(_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11914:18]
      when _T_35 : @[build/NutShell.fir.opt.mlir 11915:9]
        skip @[build/NutShell.fir.opt.mlir 11916:11]
    node size = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 11920:15]
    node reqAddr = bits(io.in.bits.src1, 38, 0) @[build/NutShell.fir.opt.mlir 11922:18]
    node _reqWdata_T = bits(io.wdata, 7, 0) @[build/NutShell.fir.opt.mlir 11924:22]
    node _reqWdata_T_1 = cat(_reqWdata_T, _reqWdata_T) @[build/NutShell.fir.opt.mlir 11926:24]
    node _reqWdata_T_2 = cat(_reqWdata_T_1, _reqWdata_T_1) @[build/NutShell.fir.opt.mlir 11928:24]
    node _reqWdata_T_3 = cat(_reqWdata_T_2, _reqWdata_T_2) @[build/NutShell.fir.opt.mlir 11930:24]
    node _reqWdata_T_4 = bits(io.wdata, 15, 0) @[build/NutShell.fir.opt.mlir 11932:24]
    node _reqWdata_T_5 = cat(_reqWdata_T_4, _reqWdata_T_4) @[build/NutShell.fir.opt.mlir 11934:24]
    node _reqWdata_T_6 = cat(_reqWdata_T_5, _reqWdata_T_5) @[build/NutShell.fir.opt.mlir 11936:24]
    node _reqWdata_T_7 = bits(io.wdata, 31, 0) @[build/NutShell.fir.opt.mlir 11938:24]
    node _reqWdata_T_8 = cat(_reqWdata_T_7, _reqWdata_T_7) @[build/NutShell.fir.opt.mlir 11940:24]
    node _reqWdata_T_9 = eq(UInt<1>(0), size) @[build/NutShell.fir.opt.mlir 11942:24]
    node _reqWdata_T_10 = eq(UInt<1>(1), size) @[build/NutShell.fir.opt.mlir 11945:25]
    node _reqWdata_T_11 = eq(UInt<2>(2), size) @[build/NutShell.fir.opt.mlir 11947:25]
    node _reqWdata_T_12 = eq(UInt<2>(3), size) @[build/NutShell.fir.opt.mlir 11949:25]
    node _reqWdata_T_13 = mux(_reqWdata_T_9, _reqWdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11951:25]
    node _reqWdata_T_14 = mux(_reqWdata_T_10, _reqWdata_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11953:25]
    node _reqWdata_T_15 = mux(_reqWdata_T_11, _reqWdata_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11955:25]
    node _reqWdata_T_16 = mux(_reqWdata_T_12, io.wdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11957:25]
    node _reqWdata_T_17 = or(_reqWdata_T_13, _reqWdata_T_14) @[build/NutShell.fir.opt.mlir 11959:25]
    node _reqWdata_T_18 = or(_reqWdata_T_17, _reqWdata_T_15) @[build/NutShell.fir.opt.mlir 11961:25]
    node _reqWdata_T_19 = or(_reqWdata_T_18, _reqWdata_T_16) @[build/NutShell.fir.opt.mlir 11963:25]
    wire reqWdata : UInt<64> @[build/NutShell.fir.opt.mlir 11964:19]
    connect reqWdata, _reqWdata_T_19 @[build/NutShell.fir.opt.mlir 11965:7]
    node _reqWmask_T = eq(UInt<1>(0), size) @[build/NutShell.fir.opt.mlir 11967:22]
    node _reqWmask_T_1 = eq(UInt<1>(1), size) @[build/NutShell.fir.opt.mlir 11969:24]
    node _reqWmask_T_2 = eq(UInt<2>(2), size) @[build/NutShell.fir.opt.mlir 11971:24]
    node _reqWmask_T_3 = eq(UInt<2>(3), size) @[build/NutShell.fir.opt.mlir 11973:24]
    node _reqWmask_T_4 = mux(_reqWmask_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11975:24]
    node _reqWmask_T_5 = mux(_reqWmask_T_1, UInt<2>(3), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11977:24]
    node _reqWmask_T_6 = mux(_reqWmask_T_2, UInt<4>(15), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11980:24]
    node _reqWmask_T_7 = mux(_reqWmask_T_3, UInt<8>(255), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11983:24]
    node _reqWmask_T_8 = or(_reqWmask_T_4, _reqWmask_T_5) @[build/NutShell.fir.opt.mlir 11985:24]
    node _reqWmask_T_9 = or(_reqWmask_T_8, _reqWmask_T_6) @[build/NutShell.fir.opt.mlir 11987:24]
    node _reqWmask_T_10 = or(_reqWmask_T_9, _reqWmask_T_7) @[build/NutShell.fir.opt.mlir 11989:25]
    wire _reqWmask_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 11990:25]
    connect _reqWmask_WIRE, _reqWmask_T_10 @[build/NutShell.fir.opt.mlir 11991:7]
    node _reqWmask_T_11 = bits(io.in.bits.src1, 2, 0) @[build/NutShell.fir.opt.mlir 11993:25]
    node reqWmask = dshl(_reqWmask_WIRE, _reqWmask_T_11) @[build/NutShell.fir.opt.mlir 11995:19]
    node x5 = mux(isStore, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 11997:13]
    connect io.dmem.req.bits.addr, reqAddr @[build/NutShell.fir.opt.mlir 11998:7]
    connect io.dmem.req.bits.cmd, pad(x5, 4) @[build/NutShell.fir.opt.mlir 12000:7]
    connect io.dmem.req.bits.size, pad(size, 3) @[build/NutShell.fir.opt.mlir 12002:7]
    connect io.dmem.req.bits.wdata, reqWdata @[build/NutShell.fir.opt.mlir 12003:7]
    connect io.dmem.req.bits.wmask, tail(reqWmask, 7) @[build/NutShell.fir.opt.mlir 12005:7]
    node _io_dmem_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 12007:31]
    node _io_dmem_req_valid_T_1 = and(io.in.valid, _io_dmem_req_valid_T) @[build/NutShell.fir.opt.mlir 12009:33]
    node _io_dmem_req_valid_T_2 = eq(io.loadAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12011:33]
    node _io_dmem_req_valid_T_3 = and(_io_dmem_req_valid_T_1, _io_dmem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 12013:33]
    node _io_dmem_req_valid_T_4 = eq(io.storeAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12015:33]
    node _io_dmem_req_valid_T_5 = and(_io_dmem_req_valid_T_3, _io_dmem_req_valid_T_4) @[build/NutShell.fir.opt.mlir 12017:33]
    connect io.dmem.req.valid, _io_dmem_req_valid_T_5 @[build/NutShell.fir.opt.mlir 12018:7]
    connect io.dmem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12020:7]
    node _io_out_valid_T = neq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 12022:26]
    node _io_out_valid_T_1 = and(dtlbPF, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 12024:28]
    node _io_out_valid_T_2 = or(_io_out_valid_T_1, io.loadAddrMisaligned) @[build/NutShell.fir.opt.mlir 12026:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 12028:28]
    node _io_out_valid_T_4 = eq(state, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 12030:28]
    node _io_out_valid_T_5 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12032:28]
    node _io_out_valid_T_6 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 12034:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 12036:28]
    node _io_out_valid_T_8 = mux(partialLoad, _io_out_valid_T_4, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 12038:28]
    node _io_out_valid_T_9 = mux(_io_out_valid_T_3, UInt<1>(1), _io_out_valid_T_8) @[build/NutShell.fir.opt.mlir 12040:28]
    connect io.out.valid, _io_out_valid_T_9 @[build/NutShell.fir.opt.mlir 12041:7]
    node _io_in_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 12043:25]
    node _io_in_ready_T_1 = or(_io_in_ready_T, dtlbPF) @[build/NutShell.fir.opt.mlir 12045:27]
    connect io.in.ready, _io_in_ready_T_1 @[build/NutShell.fir.opt.mlir 12046:7]
    node _T_36 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 12048:16]
    node _T_37 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12050:16]
    node _T_38 = and(_T_36, c_control.logEnable) @[build/NutShell.fir.opt.mlir 12052:16]
    when _T_38 : @[build/NutShell.fir.opt.mlir 12053:7]
      node _T_39 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12055:18]
      node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12057:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 12058:9]
        skip @[build/NutShell.fir.opt.mlir 12059:11]
      node _T_41 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12062:18]
      node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12064:18]
      when _T_42 : @[build/NutShell.fir.opt.mlir 12065:9]
        skip @[build/NutShell.fir.opt.mlir 12066:11]
    reg rdataLatch : UInt, clock @[build/NutShell.fir.opt.mlir 12069:21]
    connect rdataLatch, io.dmem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 12070:7]
    node _rdataSel64_T = bits(addrLatch, 2, 0) @[build/NutShell.fir.opt.mlir 12072:24]
    node _rdataSel64_T_1 = bits(rdataLatch, 63, 0) @[build/NutShell.fir.opt.mlir 12074:26]
    node _rdataSel64_T_2 = bits(rdataLatch, 63, 8) @[build/NutShell.fir.opt.mlir 12076:26]
    node _rdataSel64_T_3 = bits(rdataLatch, 63, 16) @[build/NutShell.fir.opt.mlir 12078:26]
    node _rdataSel64_T_4 = bits(rdataLatch, 63, 24) @[build/NutShell.fir.opt.mlir 12080:26]
    node _rdataSel64_T_5 = bits(rdataLatch, 63, 32) @[build/NutShell.fir.opt.mlir 12082:26]
    node _rdataSel64_T_6 = bits(rdataLatch, 63, 40) @[build/NutShell.fir.opt.mlir 12084:26]
    node _rdataSel64_T_7 = bits(rdataLatch, 63, 48) @[build/NutShell.fir.opt.mlir 12086:26]
    node _rdataSel64_T_8 = bits(rdataLatch, 63, 56) @[build/NutShell.fir.opt.mlir 12088:26]
    node _rdataSel64_T_9 = eq(UInt<1>(0), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12090:26]
    node _rdataSel64_T_10 = eq(UInt<1>(1), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12092:27]
    node _rdataSel64_T_11 = eq(UInt<2>(2), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12094:27]
    node _rdataSel64_T_12 = eq(UInt<2>(3), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12096:27]
    node _rdataSel64_T_13 = eq(UInt<3>(4), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12099:27]
    node _rdataSel64_T_14 = eq(UInt<3>(5), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12102:27]
    node _rdataSel64_T_15 = eq(UInt<3>(6), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12105:27]
    node _rdataSel64_T_16 = eq(UInt<3>(7), _rdataSel64_T) @[build/NutShell.fir.opt.mlir 12108:27]
    node _rdataSel64_T_17 = mux(_rdataSel64_T_9, _rdataSel64_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12110:27]
    node _rdataSel64_T_18 = mux(_rdataSel64_T_10, _rdataSel64_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12112:27]
    node _rdataSel64_T_19 = mux(_rdataSel64_T_11, _rdataSel64_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12114:27]
    node _rdataSel64_T_20 = mux(_rdataSel64_T_12, _rdataSel64_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12116:27]
    node _rdataSel64_T_21 = mux(_rdataSel64_T_13, _rdataSel64_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12118:27]
    node _rdataSel64_T_22 = mux(_rdataSel64_T_14, _rdataSel64_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12120:27]
    node _rdataSel64_T_23 = mux(_rdataSel64_T_15, _rdataSel64_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12122:27]
    node _rdataSel64_T_24 = mux(_rdataSel64_T_16, _rdataSel64_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12124:27]
    node _rdataSel64_T_25 = or(_rdataSel64_T_17, _rdataSel64_T_18) @[build/NutShell.fir.opt.mlir 12126:27]
    node _rdataSel64_T_26 = or(_rdataSel64_T_25, _rdataSel64_T_19) @[build/NutShell.fir.opt.mlir 12128:27]
    node _rdataSel64_T_27 = or(_rdataSel64_T_26, _rdataSel64_T_20) @[build/NutShell.fir.opt.mlir 12130:27]
    node _rdataSel64_T_28 = or(_rdataSel64_T_27, _rdataSel64_T_21) @[build/NutShell.fir.opt.mlir 12132:27]
    node _rdataSel64_T_29 = or(_rdataSel64_T_28, _rdataSel64_T_22) @[build/NutShell.fir.opt.mlir 12134:27]
    node _rdataSel64_T_30 = or(_rdataSel64_T_29, _rdataSel64_T_23) @[build/NutShell.fir.opt.mlir 12136:27]
    node _rdataSel64_T_31 = or(_rdataSel64_T_30, _rdataSel64_T_24) @[build/NutShell.fir.opt.mlir 12138:27]
    wire rdataSel64 : UInt<64> @[build/NutShell.fir.opt.mlir 12139:21]
    connect rdataSel64, _rdataSel64_T_31 @[build/NutShell.fir.opt.mlir 12140:7]
    node _rdataSel32_T = bits(addrLatch, 1, 0) @[build/NutShell.fir.opt.mlir 12142:24]
    node _rdataSel32_T_1 = bits(rdataLatch, 31, 0) @[build/NutShell.fir.opt.mlir 12144:26]
    node _rdataSel32_T_2 = bits(rdataLatch, 31, 8) @[build/NutShell.fir.opt.mlir 12146:26]
    node _rdataSel32_T_3 = bits(rdataLatch, 31, 16) @[build/NutShell.fir.opt.mlir 12148:26]
    node _rdataSel32_T_4 = bits(rdataLatch, 31, 24) @[build/NutShell.fir.opt.mlir 12150:26]
    node _rdataSel32_T_5 = eq(UInt<1>(0), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12152:26]
    node _rdataSel32_T_6 = eq(UInt<1>(1), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12154:26]
    node _rdataSel32_T_7 = eq(UInt<2>(2), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12156:26]
    node _rdataSel32_T_8 = eq(UInt<2>(3), _rdataSel32_T) @[build/NutShell.fir.opt.mlir 12158:26]
    node _rdataSel32_T_9 = mux(_rdataSel32_T_5, _rdataSel32_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12160:26]
    node _rdataSel32_T_10 = mux(_rdataSel32_T_6, _rdataSel32_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12162:27]
    node _rdataSel32_T_11 = mux(_rdataSel32_T_7, _rdataSel32_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12164:27]
    node _rdataSel32_T_12 = mux(_rdataSel32_T_8, _rdataSel32_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12166:27]
    node _rdataSel32_T_13 = or(_rdataSel32_T_9, _rdataSel32_T_10) @[build/NutShell.fir.opt.mlir 12168:27]
    node _rdataSel32_T_14 = or(_rdataSel32_T_13, _rdataSel32_T_11) @[build/NutShell.fir.opt.mlir 12170:27]
    node _rdataSel32_T_15 = or(_rdataSel32_T_14, _rdataSel32_T_12) @[build/NutShell.fir.opt.mlir 12172:27]
    wire rdataSel32 : UInt<32> @[build/NutShell.fir.opt.mlir 12173:21]
    connect rdataSel32, _rdataSel32_T_15 @[build/NutShell.fir.opt.mlir 12174:7]
    node _rdataPartialLoad_T = bits(rdataSel64, 7, 0) @[build/NutShell.fir.opt.mlir 12176:30]
    node rdataPartialLoad_signBit = bits(_rdataPartialLoad_T, 7, 7) @[build/NutShell.fir.opt.mlir 12178:35]
    node _rdataPartialLoad_T_1 = mux(rdataPartialLoad_signBit, UInt<56>(72057594037927935), UInt<56>(0)) @[build/NutShell.fir.opt.mlir 12182:32]
    node _rdataPartialLoad_T_2 = cat(_rdataPartialLoad_T_1, _rdataPartialLoad_T) @[build/NutShell.fir.opt.mlir 12184:32]
    node _rdataPartialLoad_T_3 = bits(rdataSel64, 15, 0) @[build/NutShell.fir.opt.mlir 12186:32]
    node rdataPartialLoad_signBit_1 = bits(_rdataPartialLoad_T_3, 15, 15) @[build/NutShell.fir.opt.mlir 12188:37]
    node _rdataPartialLoad_T_4 = mux(rdataPartialLoad_signBit_1, UInt<48>(281474976710655), UInt<48>(0)) @[build/NutShell.fir.opt.mlir 12192:32]
    node _rdataPartialLoad_T_5 = cat(_rdataPartialLoad_T_4, _rdataPartialLoad_T_3) @[build/NutShell.fir.opt.mlir 12194:32]
    node _rdataPartialLoad_T_6 = bits(rdataSel64, 31, 0) @[build/NutShell.fir.opt.mlir 12196:32]
    node rdataPartialLoad_signBit_2 = bits(_rdataPartialLoad_T_6, 31, 31) @[build/NutShell.fir.opt.mlir 12198:37]
    node _rdataPartialLoad_T_7 = mux(rdataPartialLoad_signBit_2, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 12202:32]
    node _rdataPartialLoad_T_8 = cat(_rdataPartialLoad_T_7, _rdataPartialLoad_T_6) @[build/NutShell.fir.opt.mlir 12204:32]
    node _rdataPartialLoad_T_9 = bits(rdataSel64, 7, 0) @[build/NutShell.fir.opt.mlir 12206:32]
    node _rdataPartialLoad_T_10 = cat(UInt<56>(0), _rdataPartialLoad_T_9) @[build/NutShell.fir.opt.mlir 12208:33]
    node _rdataPartialLoad_T_11 = bits(rdataSel64, 15, 0) @[build/NutShell.fir.opt.mlir 12210:33]
    node _rdataPartialLoad_T_12 = cat(UInt<48>(0), _rdataPartialLoad_T_11) @[build/NutShell.fir.opt.mlir 12212:33]
    node _rdataPartialLoad_T_13 = bits(rdataSel64, 31, 0) @[build/NutShell.fir.opt.mlir 12214:33]
    node _rdataPartialLoad_T_14 = cat(UInt<32>(0), _rdataPartialLoad_T_13) @[build/NutShell.fir.opt.mlir 12216:33]
    node _rdataPartialLoad_T_15 = eq(UInt<1>(0), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12218:33]
    node _rdataPartialLoad_T_16 = eq(UInt<1>(1), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12220:33]
    node _rdataPartialLoad_T_17 = eq(UInt<2>(2), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12222:33]
    node _rdataPartialLoad_T_18 = eq(UInt<3>(4), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12224:33]
    node _rdataPartialLoad_T_19 = eq(UInt<3>(5), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12226:33]
    node _rdataPartialLoad_T_20 = eq(UInt<3>(6), io.in.bits.func) @[build/NutShell.fir.opt.mlir 12228:33]
    node _rdataPartialLoad_T_21 = mux(_rdataPartialLoad_T_15, _rdataPartialLoad_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12230:33]
    node _rdataPartialLoad_T_22 = mux(_rdataPartialLoad_T_16, _rdataPartialLoad_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12232:33]
    node _rdataPartialLoad_T_23 = mux(_rdataPartialLoad_T_17, _rdataPartialLoad_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12234:33]
    node _rdataPartialLoad_T_24 = mux(_rdataPartialLoad_T_18, _rdataPartialLoad_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12236:33]
    node _rdataPartialLoad_T_25 = mux(_rdataPartialLoad_T_19, _rdataPartialLoad_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12238:33]
    node _rdataPartialLoad_T_26 = mux(_rdataPartialLoad_T_20, _rdataPartialLoad_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12240:33]
    node _rdataPartialLoad_T_27 = or(_rdataPartialLoad_T_21, _rdataPartialLoad_T_22) @[build/NutShell.fir.opt.mlir 12242:33]
    node _rdataPartialLoad_T_28 = or(_rdataPartialLoad_T_27, _rdataPartialLoad_T_23) @[build/NutShell.fir.opt.mlir 12244:33]
    node _rdataPartialLoad_T_29 = or(_rdataPartialLoad_T_28, _rdataPartialLoad_T_24) @[build/NutShell.fir.opt.mlir 12246:33]
    node _rdataPartialLoad_T_30 = or(_rdataPartialLoad_T_29, _rdataPartialLoad_T_25) @[build/NutShell.fir.opt.mlir 12248:33]
    node _rdataPartialLoad_T_31 = or(_rdataPartialLoad_T_30, _rdataPartialLoad_T_26) @[build/NutShell.fir.opt.mlir 12250:33]
    wire rdataPartialLoad : UInt<64> @[build/NutShell.fir.opt.mlir 12251:27]
    connect rdataPartialLoad, _rdataPartialLoad_T_31 @[build/NutShell.fir.opt.mlir 12252:7]
    node _addrAligned_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 12254:25]
    node _addrAligned_T_1 = bits(io.in.bits.src1, 0, 0) @[build/NutShell.fir.opt.mlir 12256:27]
    node _addrAligned_T_2 = eq(_addrAligned_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12258:27]
    node _addrAligned_T_3 = bits(io.in.bits.src1, 1, 0) @[build/NutShell.fir.opt.mlir 12260:27]
    node _addrAligned_T_4 = eq(_addrAligned_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12262:27]
    node _addrAligned_T_5 = bits(io.in.bits.src1, 2, 0) @[build/NutShell.fir.opt.mlir 12264:27]
    node _addrAligned_T_6 = eq(_addrAligned_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12266:27]
    node _addrAligned_T_7 = eq(UInt<1>(0), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12268:27]
    node _addrAligned_T_8 = eq(UInt<1>(1), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12270:27]
    node _addrAligned_T_9 = eq(UInt<2>(2), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12272:27]
    node _addrAligned_T_10 = eq(UInt<2>(3), _addrAligned_T) @[build/NutShell.fir.opt.mlir 12274:28]
    node _addrAligned_T_11 = mux(_addrAligned_T_7, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12276:28]
    node _addrAligned_T_12 = mux(_addrAligned_T_8, _addrAligned_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12278:28]
    node _addrAligned_T_13 = mux(_addrAligned_T_9, _addrAligned_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12280:28]
    node _addrAligned_T_14 = mux(_addrAligned_T_10, _addrAligned_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12282:28]
    node _addrAligned_T_15 = or(_addrAligned_T_11, _addrAligned_T_12) @[build/NutShell.fir.opt.mlir 12284:28]
    node _addrAligned_T_16 = or(_addrAligned_T_15, _addrAligned_T_13) @[build/NutShell.fir.opt.mlir 12286:28]
    node _addrAligned_T_17 = or(_addrAligned_T_16, _addrAligned_T_14) @[build/NutShell.fir.opt.mlir 12288:28]
    wire addrAligned : UInt<1> @[build/NutShell.fir.opt.mlir 12289:22]
    connect addrAligned, _addrAligned_T_17 @[build/NutShell.fir.opt.mlir 12290:7]
    node _io_out_bits_T = bits(io.dmem.resp.bits.rdata, 63, 0) @[build/NutShell.fir.opt.mlir 12292:25]
    node _io_out_bits_T_1 = mux(partialLoad, rdataPartialLoad, _io_out_bits_T) @[build/NutShell.fir.opt.mlir 12294:27]
    connect io.out.bits, _io_out_bits_T_1 @[build/NutShell.fir.opt.mlir 12295:7]
    invalidate io.isMMIO @[build/NutShell.fir.opt.mlir 12297:7]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 12298:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12300:7]
    node _io_loadAddrMisaligned_T = eq(isStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12302:35]
    node _io_loadAddrMisaligned_T_1 = and(io.in.valid, _io_loadAddrMisaligned_T) @[build/NutShell.fir.opt.mlir 12304:37]
    node _io_loadAddrMisaligned_T_2 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12306:37]
    node _io_loadAddrMisaligned_T_3 = and(_io_loadAddrMisaligned_T_1, _io_loadAddrMisaligned_T_2) @[build/NutShell.fir.opt.mlir 12308:37]
    node _io_loadAddrMisaligned_T_4 = eq(addrAligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12310:37]
    node _io_loadAddrMisaligned_T_5 = and(_io_loadAddrMisaligned_T_3, _io_loadAddrMisaligned_T_4) @[build/NutShell.fir.opt.mlir 12312:37]
    connect io.loadAddrMisaligned, _io_loadAddrMisaligned_T_5 @[build/NutShell.fir.opt.mlir 12313:7]
    node _io_storeAddrMisaligned_T = or(isStore, isAMO) @[build/NutShell.fir.opt.mlir 12315:36]
    node _io_storeAddrMisaligned_T_1 = and(io.in.valid, _io_storeAddrMisaligned_T) @[build/NutShell.fir.opt.mlir 12317:38]
    node _io_storeAddrMisaligned_T_2 = eq(addrAligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12319:38]
    node _io_storeAddrMisaligned_T_3 = and(_io_storeAddrMisaligned_T_1, _io_storeAddrMisaligned_T_2) @[build/NutShell.fir.opt.mlir 12321:38]
    connect io.storeAddrMisaligned, _io_storeAddrMisaligned_T_3 @[build/NutShell.fir.opt.mlir 12322:7]
    node _T_43 = or(io.loadAddrMisaligned, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 12324:16]
    node _T_44 = and(_T_43, c_control.logEnable) @[build/NutShell.fir.opt.mlir 12326:16]
    when _T_44 : @[build/NutShell.fir.opt.mlir 12327:7]
      node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12329:18]
      node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12331:18]
      when _T_46 : @[build/NutShell.fir.opt.mlir 12332:9]
        skip @[build/NutShell.fir.opt.mlir 12333:11]
      node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12336:18]
      node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12338:18]
      when _T_48 : @[build/NutShell.fir.opt.mlir 12339:9]
        skip @[build/NutShell.fir.opt.mlir 12340:11]
    node _T_49 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12344:16]
    node _T_50 = eq(_T_49, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12346:16]
    node _T_51 = bits(io.dmem.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 12348:16]
    node _T_52 = eq(_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12350:16]
    node _T_53 = and(_T_50, _T_52) @[build/NutShell.fir.opt.mlir 12352:16]
    node _T_54 = and(io.dmem.req.valid, _T_53) @[build/NutShell.fir.opt.mlir 12354:16]
    node _T_55 = and(io.dmem.req.ready, io.dmem.req.valid) @[build/NutShell.fir.opt.mlir 12356:16]
    node _T_56 = and(_T_54, _T_55) @[build/NutShell.fir.opt.mlir 12358:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 12359:16]
    connect _WIRE, _T_56 @[build/NutShell.fir.opt.mlir 12360:7]
    node _T_57 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12362:16]
    node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12364:16]
    node _T_59 = bits(io.dmem.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 12366:16]
    node _T_60 = eq(_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12368:16]
    node _T_61 = and(_T_58, _T_60) @[build/NutShell.fir.opt.mlir 12370:16]
    node _T_62 = and(io.dmem.req.valid, _T_61) @[build/NutShell.fir.opt.mlir 12372:16]
    node _T_63 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12374:16]
    regreset r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12375:12]
    when _T_62 : @[build/NutShell.fir.opt.mlir 12376:7]
      connect r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12378:9]
    when _T_63 : @[build/NutShell.fir.opt.mlir 12380:7]
      connect r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12382:9]
    node _T_64 = bits(io.dmem.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 12385:16]
    node _T_65 = and(io.dmem.req.valid, _T_64) @[build/NutShell.fir.opt.mlir 12387:16]
    node _T_66 = and(io.dmem.resp.ready, io.dmem.resp.valid) @[build/NutShell.fir.opt.mlir 12389:16]
    regreset r_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12390:14]
    when _T_65 : @[build/NutShell.fir.opt.mlir 12391:7]
      connect r_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12393:9]
    when _T_66 : @[build/NutShell.fir.opt.mlir 12395:7]
      connect r_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12397:9]
    connect isAMO, isAMO__bore @[build/NutShell.fir.opt.mlir 12399:7]
    connect io_in_bits_src1__bore, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12400:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 12401:7]
    connect dtlbEnable, dtlbEnable__bore @[build/NutShell.fir.opt.mlir 12402:7]
    connect r__bore, r @[build/NutShell.fir.opt.mlir 12403:7]
    connect dtlbFinish, dtlbFinish__bore @[build/NutShell.fir.opt.mlir 12404:7]
    connect r_1__bore, r_1 @[build/NutShell.fir.opt.mlir 12405:7]
    connect io_isMMIO__bore, io.isMMIO @[build/NutShell.fir.opt.mlir 12406:7]
    connect dtlbPF, dtlbPF__bore @[build/NutShell.fir.opt.mlir 12407:7]

  module AtomALU : @[build/NutShell.fir.opt.mlir 12409:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 12409:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 12409:65]
    output io : { flip src1 : UInt<64>, flip src2 : UInt<64>, flip func : UInt<7>, flip isWordOp : UInt<1>, result : UInt<64> } @[build/NutShell.fir.opt.mlir 12409:92]

    node _isAdderSub_T = bits(io.func, 6, 6) @[build/NutShell.fir.opt.mlir 12416:24]
    node isAdderSub = eq(_isAdderSub_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12419:21]
    node _adderRes_T = mux(isAdderSub, UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 12423:22]
    node _adderRes_T_1 = xor(io.src2, _adderRes_T) @[build/NutShell.fir.opt.mlir 12425:24]
    node _adderRes_T_2 = add(io.src1, _adderRes_T_1) @[build/NutShell.fir.opt.mlir 12427:24]
    node _adderRes_T_3 = add(_adderRes_T_2, isAdderSub) @[build/NutShell.fir.opt.mlir 12429:24]
    node adderRes = tail(_adderRes_T_3, 1) @[build/NutShell.fir.opt.mlir 12431:19]
    node xorRes = xor(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12433:17]
    node _sltu_T = bits(adderRes, 64, 64) @[build/NutShell.fir.opt.mlir 12435:18]
    node sltu = eq(_sltu_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12437:15]
    node _slt_T = bits(xorRes, 63, 63) @[build/NutShell.fir.opt.mlir 12439:17]
    node slt = xor(_slt_T, sltu) @[build/NutShell.fir.opt.mlir 12441:14]
    node _res_T = bits(io.func, 5, 0) @[build/NutShell.fir.opt.mlir 12443:17]
    node _res_T_1 = and(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12445:19]
    node _res_T_2 = or(io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12447:19]
    node _res_T_3 = bits(slt, 0, 0) @[build/NutShell.fir.opt.mlir 12449:19]
    node _res_T_4 = mux(_res_T_3, io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12451:19]
    node _res_T_5 = bits(slt, 0, 0) @[build/NutShell.fir.opt.mlir 12453:19]
    node _res_T_6 = mux(_res_T_5, io.src2, io.src1) @[build/NutShell.fir.opt.mlir 12455:19]
    node _res_T_7 = bits(sltu, 0, 0) @[build/NutShell.fir.opt.mlir 12457:19]
    node _res_T_8 = mux(_res_T_7, io.src1, io.src2) @[build/NutShell.fir.opt.mlir 12459:19]
    node _res_T_9 = bits(sltu, 0, 0) @[build/NutShell.fir.opt.mlir 12461:19]
    node _res_T_10 = mux(_res_T_9, io.src2, io.src1) @[build/NutShell.fir.opt.mlir 12463:20]
    node _res_T_11 = eq(UInt<6>(34), _res_T) @[build/NutShell.fir.opt.mlir 12466:20]
    node _res_T_12 = mux(_res_T_11, io.src2, adderRes) @[build/NutShell.fir.opt.mlir 12468:20]
    node _res_T_13 = eq(UInt<6>(36), _res_T) @[build/NutShell.fir.opt.mlir 12471:20]
    node _res_T_14 = mux(_res_T_13, xorRes, _res_T_12) @[build/NutShell.fir.opt.mlir 12473:20]
    node _res_T_15 = eq(UInt<6>(37), _res_T) @[build/NutShell.fir.opt.mlir 12476:20]
    node _res_T_16 = mux(_res_T_15, _res_T_1, _res_T_14) @[build/NutShell.fir.opt.mlir 12478:20]
    node _res_T_17 = eq(UInt<6>(38), _res_T) @[build/NutShell.fir.opt.mlir 12481:20]
    node _res_T_18 = mux(_res_T_17, _res_T_2, _res_T_16) @[build/NutShell.fir.opt.mlir 12483:20]
    node _res_T_19 = eq(UInt<6>(55), _res_T) @[build/NutShell.fir.opt.mlir 12486:20]
    node _res_T_20 = mux(_res_T_19, _res_T_4, _res_T_18) @[build/NutShell.fir.opt.mlir 12488:20]
    node _res_T_21 = eq(UInt<6>(48), _res_T) @[build/NutShell.fir.opt.mlir 12491:20]
    node _res_T_22 = mux(_res_T_21, _res_T_6, _res_T_20) @[build/NutShell.fir.opt.mlir 12493:20]
    node _res_T_23 = eq(UInt<6>(49), _res_T) @[build/NutShell.fir.opt.mlir 12496:20]
    node _res_T_24 = mux(_res_T_23, _res_T_8, _res_T_22) @[build/NutShell.fir.opt.mlir 12498:20]
    node _res_T_25 = eq(UInt<6>(50), _res_T) @[build/NutShell.fir.opt.mlir 12501:20]
    node res = mux(_res_T_25, _res_T_10, _res_T_24) @[build/NutShell.fir.opt.mlir 12503:14]
    node _io_result_T = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 12505:23]
    node io_result_signBit = bits(_io_result_T, 31, 31) @[build/NutShell.fir.opt.mlir 12507:28]
    node _io_result_T_1 = mux(io_result_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 12511:25]
    node _io_result_T_2 = cat(_io_result_T_1, _io_result_T) @[build/NutShell.fir.opt.mlir 12513:25]
    node _io_result_T_3 = bits(res, 63, 0) @[build/NutShell.fir.opt.mlir 12515:25]
    node _io_result_T_4 = mux(io.isWordOp, _io_result_T_2, _io_result_T_3) @[build/NutShell.fir.opt.mlir 12517:25]
    connect io.result, _io_result_T_4 @[build/NutShell.fir.opt.mlir 12518:7]

  extmodule LogPerfHelper_9 : @[build/NutShell.fir.opt.mlir 12520:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12520:51]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12520:80]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12520:112]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12520:140]
    defname = LogPerfHelper

  extmodule LogPerfHelper_10 : @[build/NutShell.fir.opt.mlir 12521:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12521:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12521:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12521:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12521:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_11 : @[build/NutShell.fir.opt.mlir 12522:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12522:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12522:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12522:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12522:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_12 : @[build/NutShell.fir.opt.mlir 12523:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12523:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12523:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12523:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12523:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_13 : @[build/NutShell.fir.opt.mlir 12524:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12524:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12524:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12524:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12524:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_14 : @[build/NutShell.fir.opt.mlir 12525:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 12525:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12525:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 12525:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 12525:141]
    defname = LogPerfHelper

  module UnpipelinedLSU : @[build/NutShell.fir.opt.mlir 12526:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 12526:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 12526:72]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip wdata : UInt<64>, flip instr : UInt<32>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, isMMIO : UInt<1>, dtlbPF : UInt<1>, loadAddrMisaligned : UInt<1>, storeAddrMisaligned : UInt<1> } @[build/NutShell.fir.opt.mlir 12526:99]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:699]
    output lsExecUnit_io_in_bits_src1__bore : UInt<64> @[build/NutShell.fir.opt.mlir 12526:734]
    input lsuMMIO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:790]
    output setLr__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:827]
    output lsExecUnit__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:862]
    input lsExecUnit_dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:907]
    input dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:957]
    output setLrVal__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:997]
    output lsExecUnit_r__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1035]
    input lsExecUnit_dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1076]
    input dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1126]
    output setLrAddr__bore : UInt<64> @[build/NutShell.fir.opt.mlir 12526:1166]
    output lsExecUnit_r_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1206]
    output lsExecUnit_io_isMMIO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1250]
    input lr__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1299]
    input lsExecUnit_dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1330]
    input dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 12526:1376]
    input lrAddr__bore : UInt<64> @[build/NutShell.fir.opt.mlir 12526:1411]

    inst lsExecUnit of LSExecUnit @[build/NutShell.fir.opt.mlir 12553:322]
    connect lsExecUnit.clock, clock @[build/NutShell.fir.opt.mlir 12578:7]
    connect lsExecUnit.reset, reset @[build/NutShell.fir.opt.mlir 12579:7]
    invalidate lsExecUnit.io.instr @[build/NutShell.fir.opt.mlir 12581:7]
    connect io.dtlbPF, lsExecUnit.io.dtlbPF @[build/NutShell.fir.opt.mlir 12582:7]
    node _storeReq_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 12584:22]
    node storeReq = and(io.in.valid, _storeReq_T) @[build/NutShell.fir.opt.mlir 12586:19]
    node _loadReq_T = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 12588:21]
    node _loadReq_T_1 = eq(_loadReq_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12591:23]
    node _loadReq_T_2 = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12593:23]
    node _loadReq_T_3 = eq(_loadReq_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12595:23]
    node _loadReq_T_4 = and(_loadReq_T_1, _loadReq_T_3) @[build/NutShell.fir.opt.mlir 12597:23]
    node loadReq = and(io.in.valid, _loadReq_T_4) @[build/NutShell.fir.opt.mlir 12599:18]
    node _atomReq_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12601:21]
    node atomReq = and(io.in.valid, _atomReq_T) @[build/NutShell.fir.opt.mlir 12603:18]
    node _amoReq_T = bits(io.in.bits.func, 5, 5) @[build/NutShell.fir.opt.mlir 12605:20]
    node _amoReq_T_1 = eq(io.in.bits.func, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 12608:22]
    node _amoReq_T_2 = eq(_amoReq_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12610:22]
    node _amoReq_T_3 = and(_amoReq_T, _amoReq_T_2) @[build/NutShell.fir.opt.mlir 12612:22]
    node _amoReq_T_4 = eq(io.in.bits.func, UInt<6>(33)) @[build/NutShell.fir.opt.mlir 12615:22]
    node _amoReq_T_5 = eq(_amoReq_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12617:22]
    node _amoReq_T_6 = and(_amoReq_T_3, _amoReq_T_5) @[build/NutShell.fir.opt.mlir 12619:22]
    node amoReq = and(io.in.valid, _amoReq_T_6) @[build/NutShell.fir.opt.mlir 12621:17]
    node _lrReq_T = eq(io.in.bits.func, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 12623:19]
    node lrReq = and(io.in.valid, _lrReq_T) @[build/NutShell.fir.opt.mlir 12625:16]
    node _scReq_T = eq(io.in.bits.func, UInt<6>(33)) @[build/NutShell.fir.opt.mlir 12627:19]
    node scReq = and(io.in.valid, _scReq_T) @[build/NutShell.fir.opt.mlir 12629:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 12630:16]
    connect _WIRE, amoReq @[build/NutShell.fir.opt.mlir 12631:7]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 12632:18]
    connect _WIRE_1, amoReq @[build/NutShell.fir.opt.mlir 12633:7]
    node aq = bits(io.instr, 26, 26) @[build/NutShell.fir.opt.mlir 12635:13]
    node rl = bits(io.instr, 25, 25) @[build/NutShell.fir.opt.mlir 12637:13]
    node funct3 = bits(io.instr, 14, 12) @[build/NutShell.fir.opt.mlir 12639:17]
    node _atomWidthW_T = bits(funct3, 0, 0) @[build/NutShell.fir.opt.mlir 12641:24]
    node atomWidthW = eq(_atomWidthW_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12643:21]
    node atomWidthD = bits(funct3, 0, 0) @[build/NutShell.fir.opt.mlir 12645:21]
    wire setLr : UInt<1> @[build/NutShell.fir.opt.mlir 12646:16]
    wire setLrVal : UInt<1> @[build/NutShell.fir.opt.mlir 12647:19]
    wire setLrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 12648:20]
    wire lr : UInt<1> @[build/NutShell.fir.opt.mlir 12649:13]
    connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12651:7]
    wire lrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 12652:17]
    invalidate lrAddr @[build/NutShell.fir.opt.mlir 12654:7]
    node _scInvalid_T = neq(io.in.bits.src1, lrAddr) @[build/NutShell.fir.opt.mlir 12656:23]
    node _scInvalid_T_1 = eq(lr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12658:25]
    node _scInvalid_T_2 = or(_scInvalid_T, _scInvalid_T_1) @[build/NutShell.fir.opt.mlir 12660:25]
    node scInvalid = and(_scInvalid_T_2, scReq) @[build/NutShell.fir.opt.mlir 12662:20]
    wire dtlbFinish : UInt<1> @[build/NutShell.fir.opt.mlir 12663:21]
    connect dtlbFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12665:7]
    wire dtlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 12666:17]
    connect dtlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12668:7]
    wire dtlbEnable : UInt<1> @[build/NutShell.fir.opt.mlir 12669:21]
    connect dtlbEnable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12671:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12673:16]
    reg atomMemReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 12674:21]
    reg atomRegReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 12675:21]
    inst atomALU of AtomALU @[build/NutShell.fir.opt.mlir 12676:53]
    connect atomALU.clock, clock @[build/NutShell.fir.opt.mlir 12682:7]
    connect atomALU.reset, reset @[build/NutShell.fir.opt.mlir 12683:7]
    connect atomALU.io.src1, atomMemReg @[build/NutShell.fir.opt.mlir 12684:7]
    connect atomALU.io.src2, io.wdata @[build/NutShell.fir.opt.mlir 12685:7]
    connect atomALU.io.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12686:7]
    connect atomALU.io.isWordOp, atomWidthW @[build/NutShell.fir.opt.mlir 12687:7]
    connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12689:7]
    invalidate lsExecUnit.io.out.ready @[build/NutShell.fir.opt.mlir 12691:7]
    invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12693:7]
    invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12695:7]
    invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12697:7]
    invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12699:7]
    connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12701:7]
    connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12703:7]
    node _T = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 12705:13]
    when _T : @[build/NutShell.fir.opt.mlir 12717:7]
      connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12719:9]
      invalidate lsExecUnit.io.out.ready @[build/NutShell.fir.opt.mlir 12721:9]
      invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12723:9]
      invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12725:9]
      invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12727:9]
      invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12729:9]
      node _io_in_ready_T = or(UInt<1>(0), scInvalid) @[build/NutShell.fir.opt.mlir 12731:27]
      connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 12732:9]
      node _io_out_valid_T = or(UInt<1>(0), scInvalid) @[build/NutShell.fir.opt.mlir 12734:28]
      connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 12735:9]
      when io.in.valid : @[build/NutShell.fir.opt.mlir 12736:9]
        connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 12738:11]
      node _lsExecUnit_io_in_valid_T = eq(atomReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12741:38]
      node _lsExecUnit_io_in_valid_T_1 = and(io.in.valid, _lsExecUnit_io_in_valid_T) @[build/NutShell.fir.opt.mlir 12743:40]
      connect lsExecUnit.io.in.valid, _lsExecUnit_io_in_valid_T_1 @[build/NutShell.fir.opt.mlir 12744:9]
      connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12745:9]
      node _lsExecUnit_io_in_bits_src1_T = add(io.in.bits.src1, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 12747:42]
      node _lsExecUnit_io_in_bits_src1_T_1 = tail(_lsExecUnit_io_in_bits_src1_T, 1) @[build/NutShell.fir.opt.mlir 12749:44]
      connect lsExecUnit.io.in.bits.src1, _lsExecUnit_io_in_bits_src1_T_1 @[build/NutShell.fir.opt.mlir 12750:9]
      invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12752:9]
      connect lsExecUnit.io.in.bits.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12753:9]
      connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 12754:9]
      node _io_in_ready_T_1 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12756:29]
      node _io_in_ready_T_2 = or(_io_in_ready_T_1, scInvalid) @[build/NutShell.fir.opt.mlir 12758:29]
      connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 12759:9]
      node _io_out_valid_T_1 = or(lsExecUnit.io.out.valid, scInvalid) @[build/NutShell.fir.opt.mlir 12761:30]
      connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 12762:9]
      connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12764:9]
      when amoReq : @[build/NutShell.fir.opt.mlir 12765:9]
        connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 12767:11]
      when lrReq : @[build/NutShell.fir.opt.mlir 12769:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 12771:11]
      when scReq : @[build/NutShell.fir.opt.mlir 12773:9]
        node _state_T = mux(scInvalid, UInt<3>(0), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 12775:23]
        connect state, _state_T @[build/NutShell.fir.opt.mlir 12776:11]
    else :
      node _T_1 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 12780:17]
      when _T_1 : @[build/NutShell.fir.opt.mlir 12781:9]
        connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12783:11]
        connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12784:11]
        invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12786:11]
        invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12788:11]
        connect lsExecUnit.io.in.bits.func, io.in.bits.func @[build/NutShell.fir.opt.mlir 12789:11]
        connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 12790:11]
        node _io_in_ready_T_3 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12792:31]
        connect io.in.ready, _io_in_ready_T_3 @[build/NutShell.fir.opt.mlir 12793:11]
        connect io.out.valid, lsExecUnit.io.out.valid @[build/NutShell.fir.opt.mlir 12794:11]
        node _T_2 = eq(atomReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12796:19]
        node _T_3 = eq(amoReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12798:19]
        node _T_4 = or(_T_2, _T_3) @[build/NutShell.fir.opt.mlir 12800:19]
        node _T_5 = eq(lrReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12802:19]
        node _T_6 = or(_T_4, _T_5) @[build/NutShell.fir.opt.mlir 12804:19]
        node _T_7 = eq(scReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12806:19]
        node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 12808:19]
        node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12810:19]
        node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12812:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 12813:11]
          node _T_11 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12815:22]
          when _T_11 : @[build/NutShell.fir.opt.mlir 12816:13]
            skip @[build/NutShell.fir.opt.mlir 12817:15]
          assert(clock, _T_8, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 12819:13]
        node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 12822:20]
        when _T_12 : @[build/NutShell.fir.opt.mlir 12823:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12825:13]
      else :
        node _T_13 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 12829:20]
        when _T_13 : @[build/NutShell.fir.opt.mlir 12830:11]
          connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12832:13]
          connect lsExecUnit.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12834:13]
          connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12835:13]
          invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12837:13]
          node _lsExecUnit_io_in_bits_func_T = mux(atomWidthD, UInt<2>(3), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 12839:46]
          connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T, 7) @[build/NutShell.fir.opt.mlir 12841:13]
          invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12843:13]
          connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12845:13]
          connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12847:13]
          node _T_14 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12849:22]
          when _T_14 : @[build/NutShell.fir.opt.mlir 12850:13]
            connect state, UInt<3>(6) @[build/NutShell.fir.opt.mlir 12852:15]
            inst LogPerfHelper of LogPerfHelper_9 @[build/NutShell.fir.opt.mlir 12853:107]
            wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12854:28]
            connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 12859:15]
            connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 12860:15]
            connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 12861:15]
            connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 12862:15]
            node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 12864:24]
            when _T_15 : @[build/NutShell.fir.opt.mlir 12865:15]
              node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12867:26]
              node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12869:26]
              when _T_17 : @[build/NutShell.fir.opt.mlir 12870:17]
                skip @[build/NutShell.fir.opt.mlir 12871:19]
              node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12874:26]
              node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12876:26]
              when _T_19 : @[build/NutShell.fir.opt.mlir 12877:17]
                skip @[build/NutShell.fir.opt.mlir 12878:19]
          connect atomMemReg, lsExecUnit.io.out.bits @[build/NutShell.fir.opt.mlir 12882:13]
          connect atomRegReg, lsExecUnit.io.out.bits @[build/NutShell.fir.opt.mlir 12883:13]
        else :
          node _T_20 = eq(UInt<3>(6), state) @[build/NutShell.fir.opt.mlir 12886:22]
          when _T_20 : @[build/NutShell.fir.opt.mlir 12887:13]
            connect lsExecUnit.io.in.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12889:15]
            connect lsExecUnit.io.out.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12891:15]
            invalidate lsExecUnit.io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12893:15]
            invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12895:15]
            invalidate lsExecUnit.io.in.bits.func @[build/NutShell.fir.opt.mlir 12897:15]
            invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 12899:15]
            connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12901:15]
            connect io.out.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 12903:15]
            connect state, UInt<3>(7) @[build/NutShell.fir.opt.mlir 12905:15]
            connect atomMemReg, atomALU.io.result @[build/NutShell.fir.opt.mlir 12906:15]
            inst LogPerfHelper_1 of LogPerfHelper_10 @[build/NutShell.fir.opt.mlir 12907:115]
            wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12908:30]
            connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 12913:15]
            connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 12914:15]
            connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 12915:15]
            connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 12916:15]
            node _T_21 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 12918:24]
            when _T_21 : @[build/NutShell.fir.opt.mlir 12919:15]
              node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12921:26]
              node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12923:26]
              when _T_23 : @[build/NutShell.fir.opt.mlir 12924:17]
                skip @[build/NutShell.fir.opt.mlir 12925:19]
              node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12928:26]
              node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12930:26]
              when _T_25 : @[build/NutShell.fir.opt.mlir 12931:17]
                skip @[build/NutShell.fir.opt.mlir 12932:19]
          else :
            node _T_26 = eq(UInt<3>(7), state) @[build/NutShell.fir.opt.mlir 12937:24]
            when _T_26 : @[build/NutShell.fir.opt.mlir 12938:15]
              connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12940:17]
              connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12941:17]
              connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12942:17]
              invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12944:17]
              node _lsExecUnit_io_in_bits_func_T_1 = mux(atomWidthD, UInt<4>(11), UInt<4>(10)) @[build/NutShell.fir.opt.mlir 12946:52]
              connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_1, 7) @[build/NutShell.fir.opt.mlir 12948:17]
              connect lsExecUnit.io.wdata, atomMemReg @[build/NutShell.fir.opt.mlir 12949:17]
              node _io_in_ready_T_4 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12951:37]
              connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 12952:17]
              node _io_out_valid_T_2 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12954:38]
              connect io.out.valid, _io_out_valid_T_2 @[build/NutShell.fir.opt.mlir 12955:17]
              node _T_27 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 12957:26]
              when _T_27 : @[build/NutShell.fir.opt.mlir 12958:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 12960:19]
                inst LogPerfHelper_2 of LogPerfHelper_11 @[build/NutShell.fir.opt.mlir 12961:119]
                wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 12962:34]
                connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 12967:19]
                connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 12968:19]
                connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 12969:19]
                connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 12970:19]
                node _T_28 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 12972:28]
                when _T_28 : @[build/NutShell.fir.opt.mlir 12973:19]
                  node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12975:30]
                  node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12977:30]
                  when _T_30 : @[build/NutShell.fir.opt.mlir 12978:21]
                    skip @[build/NutShell.fir.opt.mlir 12979:23]
                  node _T_31 = asUInt(reset) @[build/NutShell.fir.opt.mlir 12982:30]
                  node _T_32 = eq(_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 12984:30]
                  when _T_32 : @[build/NutShell.fir.opt.mlir 12985:21]
                    skip @[build/NutShell.fir.opt.mlir 12986:23]
            else :
              node _T_33 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 12992:26]
              when _T_33 : @[build/NutShell.fir.opt.mlir 12993:17]
                connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 12995:19]
                connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 12996:19]
                connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 12997:19]
                invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 12999:19]
                node _lsExecUnit_io_in_bits_func_T_2 = mux(atomWidthD, UInt<2>(3), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 13001:54]
                connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_2, 7) @[build/NutShell.fir.opt.mlir 13003:19]
                invalidate lsExecUnit.io.wdata @[build/NutShell.fir.opt.mlir 13005:19]
                node _io_in_ready_T_5 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13007:39]
                connect io.in.ready, _io_in_ready_T_5 @[build/NutShell.fir.opt.mlir 13008:19]
                node _io_out_valid_T_3 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13010:40]
                connect io.out.valid, _io_out_valid_T_3 @[build/NutShell.fir.opt.mlir 13011:19]
                node _T_34 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13013:28]
                when _T_34 : @[build/NutShell.fir.opt.mlir 13014:19]
                  connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13016:21]
                  inst LogPerfHelper_3 of LogPerfHelper_12 @[build/NutShell.fir.opt.mlir 13017:121]
                  wire c_control_3 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 13018:36]
                  connect c_control_3.dump, LogPerfHelper_3.dump @[build/NutShell.fir.opt.mlir 13023:21]
                  connect c_control_3.clean, LogPerfHelper_3.clean @[build/NutShell.fir.opt.mlir 13024:21]
                  connect c_control_3.logEnable, LogPerfHelper_3.logEnable @[build/NutShell.fir.opt.mlir 13025:21]
                  connect c_control_3.timer, LogPerfHelper_3.timer @[build/NutShell.fir.opt.mlir 13026:21]
                  node _T_35 = and(UInt<1>(1), c_control_3.logEnable) @[build/NutShell.fir.opt.mlir 13028:30]
                  when _T_35 : @[build/NutShell.fir.opt.mlir 13029:21]
                    node _T_36 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13031:32]
                    node _T_37 = eq(_T_36, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13033:32]
                    when _T_37 : @[build/NutShell.fir.opt.mlir 13034:23]
                      skip @[build/NutShell.fir.opt.mlir 13035:25]
                    node _T_38 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13038:32]
                    node _T_39 = eq(_T_38, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13040:32]
                    when _T_39 : @[build/NutShell.fir.opt.mlir 13041:23]
                      skip @[build/NutShell.fir.opt.mlir 13042:25]
              else :
                node _T_40 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 13048:28]
                when _T_40 : @[build/NutShell.fir.opt.mlir 13049:19]
                  connect lsExecUnit.io.in.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13051:21]
                  connect lsExecUnit.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 13052:21]
                  connect lsExecUnit.io.in.bits.src1, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 13053:21]
                  invalidate lsExecUnit.io.in.bits.src2 @[build/NutShell.fir.opt.mlir 13055:21]
                  node _lsExecUnit_io_in_bits_func_T_3 = mux(atomWidthD, UInt<4>(11), UInt<4>(10)) @[build/NutShell.fir.opt.mlir 13057:56]
                  connect lsExecUnit.io.in.bits.func, pad(_lsExecUnit_io_in_bits_func_T_3, 7) @[build/NutShell.fir.opt.mlir 13059:21]
                  connect lsExecUnit.io.wdata, io.wdata @[build/NutShell.fir.opt.mlir 13060:21]
                  node _io_in_ready_T_6 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13062:41]
                  connect io.in.ready, _io_in_ready_T_6 @[build/NutShell.fir.opt.mlir 13063:21]
                  node _io_out_valid_T_4 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13065:42]
                  connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 13066:21]
                  node _T_41 = and(lsExecUnit.io.out.ready, lsExecUnit.io.out.valid) @[build/NutShell.fir.opt.mlir 13068:30]
                  when _T_41 : @[build/NutShell.fir.opt.mlir 13069:21]
                    connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13071:23]
                    inst LogPerfHelper_4 of LogPerfHelper_13 @[build/NutShell.fir.opt.mlir 13072:123]
                    wire c_control_4 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 13073:38]
                    connect c_control_4.dump, LogPerfHelper_4.dump @[build/NutShell.fir.opt.mlir 13078:23]
                    connect c_control_4.clean, LogPerfHelper_4.clean @[build/NutShell.fir.opt.mlir 13079:23]
                    connect c_control_4.logEnable, LogPerfHelper_4.logEnable @[build/NutShell.fir.opt.mlir 13080:23]
                    connect c_control_4.timer, LogPerfHelper_4.timer @[build/NutShell.fir.opt.mlir 13081:23]
                    node _T_42 = and(UInt<1>(1), c_control_4.logEnable) @[build/NutShell.fir.opt.mlir 13083:32]
                    when _T_42 : @[build/NutShell.fir.opt.mlir 13084:23]
                      node _T_43 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13086:34]
                      node _T_44 = eq(_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13088:34]
                      when _T_44 : @[build/NutShell.fir.opt.mlir 13089:25]
                        skip @[build/NutShell.fir.opt.mlir 13090:27]
                      node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13093:34]
                      node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13095:34]
                      when _T_46 : @[build/NutShell.fir.opt.mlir 13096:25]
                        skip @[build/NutShell.fir.opt.mlir 13097:27]
    node _T_47 = or(dtlbPF, io.loadAddrMisaligned) @[build/NutShell.fir.opt.mlir 13109:16]
    node _T_48 = or(_T_47, io.storeAddrMisaligned) @[build/NutShell.fir.opt.mlir 13111:16]
    when _T_48 : @[build/NutShell.fir.opt.mlir 13112:7]
      connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13114:9]
      connect io.out.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13116:9]
      connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13118:9]
    node _T_49 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 13121:16]
    inst LogPerfHelper_5 of LogPerfHelper_14 @[build/NutShell.fir.opt.mlir 13122:107]
    wire c_control_5 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 13123:22]
    connect c_control_5.dump, LogPerfHelper_5.dump @[build/NutShell.fir.opt.mlir 13128:7]
    connect c_control_5.clean, LogPerfHelper_5.clean @[build/NutShell.fir.opt.mlir 13129:7]
    connect c_control_5.logEnable, LogPerfHelper_5.logEnable @[build/NutShell.fir.opt.mlir 13130:7]
    connect c_control_5.timer, LogPerfHelper_5.timer @[build/NutShell.fir.opt.mlir 13131:7]
    node _T_50 = and(_T_49, c_control_5.logEnable) @[build/NutShell.fir.opt.mlir 13133:16]
    when _T_50 : @[build/NutShell.fir.opt.mlir 13134:7]
      node _T_51 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13136:18]
      node _T_52 = eq(_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13138:18]
      when _T_52 : @[build/NutShell.fir.opt.mlir 13139:9]
        skip @[build/NutShell.fir.opt.mlir 13140:11]
      node _T_53 = asUInt(reset) @[build/NutShell.fir.opt.mlir 13143:18]
      node _T_54 = eq(_T_53, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13145:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 13146:9]
        skip @[build/NutShell.fir.opt.mlir 13147:11]
    node _setLr_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 13151:19]
    node _setLr_T_1 = or(lrReq, scReq) @[build/NutShell.fir.opt.mlir 13153:21]
    node _setLr_T_2 = and(_setLr_T, _setLr_T_1) @[build/NutShell.fir.opt.mlir 13155:21]
    connect setLr, _setLr_T_2 @[build/NutShell.fir.opt.mlir 13156:7]
    connect setLrVal, lrReq @[build/NutShell.fir.opt.mlir 13157:7]
    connect setLrAddr, io.in.bits.src1 @[build/NutShell.fir.opt.mlir 13158:7]
    connect io.dmem.resp.ready, lsExecUnit.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 13159:7]
    connect lsExecUnit.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 13160:7]
    connect lsExecUnit.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 13161:7]
    connect io.dmem.req.bits, lsExecUnit.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 13162:7]
    connect io.dmem.req.valid, lsExecUnit.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 13163:7]
    connect lsExecUnit.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 13164:7]
    node _io_out_bits_T = eq(state, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 13166:25]
    node _io_out_bits_T_1 = mux(_io_out_bits_T, atomRegReg, lsExecUnit.io.out.bits) @[build/NutShell.fir.opt.mlir 13168:27]
    node _io_out_bits_T_2 = mux(scReq, scInvalid, _io_out_bits_T_1) @[build/NutShell.fir.opt.mlir 13170:27]
    connect io.out.bits, _io_out_bits_T_2 @[build/NutShell.fir.opt.mlir 13171:7]
    wire lsuMMIO : UInt<1> @[build/NutShell.fir.opt.mlir 13172:18]
    connect lsuMMIO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13174:7]
    regreset mmioReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13175:18]
    node _T_55 = eq(mmioReg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13177:16]
    when _T_55 : @[build/NutShell.fir.opt.mlir 13178:7]
      connect mmioReg, lsuMMIO @[build/NutShell.fir.opt.mlir 13179:9]
    when io.out.valid : @[build/NutShell.fir.opt.mlir 13181:7]
      connect mmioReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13183:9]
    node _io_isMMIO_T = and(mmioReg, io.out.valid) @[build/NutShell.fir.opt.mlir 13186:23]
    connect io.isMMIO, _io_isMMIO_T @[build/NutShell.fir.opt.mlir 13187:7]
    connect io.loadAddrMisaligned, lsExecUnit.io.loadAddrMisaligned @[build/NutShell.fir.opt.mlir 13188:7]
    connect io.storeAddrMisaligned, lsExecUnit.io.storeAddrMisaligned @[build/NutShell.fir.opt.mlir 13189:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 13190:7]
    connect lsExecUnit_io_in_bits_src1__bore, lsExecUnit.io_in_bits_src1__bore @[build/NutShell.fir.opt.mlir 13191:7]
    connect lsuMMIO, lsuMMIO__bore @[build/NutShell.fir.opt.mlir 13192:7]
    connect setLr__bore, setLr @[build/NutShell.fir.opt.mlir 13193:7]
    connect lsExecUnit__WIRE__bore, lsExecUnit._WIRE__bore @[build/NutShell.fir.opt.mlir 13194:7]
    connect lsExecUnit.dtlbEnable__bore, lsExecUnit_dtlbEnable__bore @[build/NutShell.fir.opt.mlir 13195:7]
    connect dtlbEnable, dtlbEnable__bore @[build/NutShell.fir.opt.mlir 13196:7]
    connect setLrVal__bore, setLrVal @[build/NutShell.fir.opt.mlir 13197:7]
    connect lsExecUnit_r__bore, lsExecUnit.r__bore @[build/NutShell.fir.opt.mlir 13198:7]
    connect lsExecUnit.dtlbFinish__bore, lsExecUnit_dtlbFinish__bore @[build/NutShell.fir.opt.mlir 13199:7]
    connect dtlbFinish, dtlbFinish__bore @[build/NutShell.fir.opt.mlir 13200:7]
    connect setLrAddr__bore, setLrAddr @[build/NutShell.fir.opt.mlir 13201:7]
    connect lsExecUnit_r_1__bore, lsExecUnit.r_1__bore @[build/NutShell.fir.opt.mlir 13202:7]
    connect lsExecUnit_io_isMMIO__bore, lsExecUnit.io_isMMIO__bore @[build/NutShell.fir.opt.mlir 13203:7]
    connect lr, lr__bore @[build/NutShell.fir.opt.mlir 13204:7]
    connect lsExecUnit.dtlbPF__bore, lsExecUnit_dtlbPF__bore @[build/NutShell.fir.opt.mlir 13205:7]
    connect dtlbPF, dtlbPF__bore @[build/NutShell.fir.opt.mlir 13206:7]
    connect lrAddr, lrAddr__bore @[build/NutShell.fir.opt.mlir 13207:7]
    connect lsExecUnit.isAMO__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 13208:7]

  module Multiplier : @[build/NutShell.fir.opt.mlir 13210:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 13210:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 13210:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<65>[2] }, flip sign : UInt<1>, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<130> } } @[build/NutShell.fir.opt.mlir 13210:95]

    reg mulRes_REG : UInt, clock @[build/NutShell.fir.opt.mlir 13220:21]
    connect mulRes_REG, io.in.bits[0] @[build/NutShell.fir.opt.mlir 13221:7]
    node _mulRes_T = asSInt(mulRes_REG) @[build/NutShell.fir.opt.mlir 13223:20]
    reg mulRes_REG_1 : UInt, clock @[build/NutShell.fir.opt.mlir 13224:23]
    connect mulRes_REG_1, io.in.bits[1] @[build/NutShell.fir.opt.mlir 13225:7]
    node _mulRes_T_1 = asSInt(mulRes_REG_1) @[build/NutShell.fir.opt.mlir 13227:22]
    node mulRes = mul(_mulRes_T, _mulRes_T_1) @[build/NutShell.fir.opt.mlir 13229:17]
    reg io_out_bits_REG : SInt, clock @[build/NutShell.fir.opt.mlir 13230:26]
    connect io_out_bits_REG, mulRes @[build/NutShell.fir.opt.mlir 13231:7]
    reg io_out_bits_REG_1 : SInt, clock @[build/NutShell.fir.opt.mlir 13232:28]
    connect io_out_bits_REG_1, io_out_bits_REG @[build/NutShell.fir.opt.mlir 13233:7]
    reg io_out_bits_REG_2 : SInt, clock @[build/NutShell.fir.opt.mlir 13234:28]
    connect io_out_bits_REG_2, io_out_bits_REG_1 @[build/NutShell.fir.opt.mlir 13235:7]
    node _io_out_bits_T = asUInt(io_out_bits_REG_2) @[build/NutShell.fir.opt.mlir 13237:25]
    connect io.out.bits, _io_out_bits_T @[build/NutShell.fir.opt.mlir 13238:7]
    node _io_out_valid_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 13240:26]
    reg io_out_valid_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13241:27]
    connect io_out_valid_REG, _io_out_valid_T @[build/NutShell.fir.opt.mlir 13242:7]
    reg io_out_valid_REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13243:29]
    connect io_out_valid_REG_1, io_out_valid_REG @[build/NutShell.fir.opt.mlir 13244:7]
    reg io_out_valid_REG_2 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13245:29]
    connect io_out_valid_REG_2, io_out_valid_REG_1 @[build/NutShell.fir.opt.mlir 13246:7]
    reg io_out_valid_REG_3 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13247:29]
    connect io_out_valid_REG_3, io_out_valid_REG_2 @[build/NutShell.fir.opt.mlir 13248:7]
    connect io.out.valid, io_out_valid_REG_3 @[build/NutShell.fir.opt.mlir 13249:7]
    regreset busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13251:15]
    node _T = eq(busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13253:13]
    node _T_1 = and(io.in.valid, _T) @[build/NutShell.fir.opt.mlir 13255:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 13257:7]
      connect busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 13259:9]
    when io.out.valid : @[build/NutShell.fir.opt.mlir 13261:7]
      connect busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 13263:9]
    node _io_in_ready_T = eq(busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13266:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 13267:7]

  module Divider : @[build/NutShell.fir.opt.mlir 13269:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 13269:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 13269:65]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64>[2] }, flip sign : UInt<1>, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<128> } } @[build/NutShell.fir.opt.mlir 13269:92]

    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 13281:16]
    node _newReq_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 13283:20]
    node _newReq_T_1 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 13285:22]
    node newReq = and(_newReq_T, _newReq_T_1) @[build/NutShell.fir.opt.mlir 13287:17]
    node divBy0 = eq(io.in.bits[1], UInt<64>(0)) @[build/NutShell.fir.opt.mlir 13290:17]
    reg shiftReg : UInt<129>, clock @[build/NutShell.fir.opt.mlir 13291:19]
    node hi = bits(shiftReg, 128, 64) @[build/NutShell.fir.opt.mlir 13293:13]
    node lo = bits(shiftReg, 63, 0) @[build/NutShell.fir.opt.mlir 13295:13]
    node _s_T = bits(io.in.bits[0], 63, 63) @[build/NutShell.fir.opt.mlir 13297:15]
    node aSign = and(_s_T, io.sign) @[build/NutShell.fir.opt.mlir 13299:16]
    node _T = sub(UInt<1>(0), io.in.bits[0]) @[build/NutShell.fir.opt.mlir 13302:13]
    node _T_1 = tail(_T, 1) @[build/NutShell.fir.opt.mlir 13304:15]
    node aVal = mux(aSign, _T_1, io.in.bits[0]) @[build/NutShell.fir.opt.mlir 13306:15]
    node _s_T_1 = bits(io.in.bits[1], 63, 63) @[build/NutShell.fir.opt.mlir 13308:17]
    node bSign = and(_s_T_1, io.sign) @[build/NutShell.fir.opt.mlir 13310:16]
    node _T_2 = sub(UInt<1>(0), io.in.bits[1]) @[build/NutShell.fir.opt.mlir 13312:15]
    node _T_3 = tail(_T_2, 1) @[build/NutShell.fir.opt.mlir 13314:15]
    node bVal = mux(bSign, _T_3, io.in.bits[1]) @[build/NutShell.fir.opt.mlir 13316:15]
    reg aSignReg : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13317:19]
    when newReq : @[build/NutShell.fir.opt.mlir 13318:7]
      connect aSignReg, aSign @[build/NutShell.fir.opt.mlir 13319:9]
    node _qSignReg_T = xor(aSign, bSign) @[build/NutShell.fir.opt.mlir 13322:22]
    node _qSignReg_T_1 = eq(divBy0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13324:24]
    node _qSignReg_T_2 = and(_qSignReg_T, _qSignReg_T_1) @[build/NutShell.fir.opt.mlir 13326:24]
    reg qSignReg : UInt<1>, clock @[build/NutShell.fir.opt.mlir 13327:19]
    when newReq : @[build/NutShell.fir.opt.mlir 13328:7]
      connect qSignReg, _qSignReg_T_2 @[build/NutShell.fir.opt.mlir 13329:9]
    reg bReg : UInt<64>, clock @[build/NutShell.fir.opt.mlir 13331:15]
    when newReq : @[build/NutShell.fir.opt.mlir 13332:7]
      connect bReg, bVal @[build/NutShell.fir.opt.mlir 13333:9]
    node _aValx2Reg_T = cat(aVal, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 13336:23]
    reg aValx2Reg : UInt<65>, clock @[build/NutShell.fir.opt.mlir 13337:20]
    when newReq : @[build/NutShell.fir.opt.mlir 13338:7]
      connect aValx2Reg, _aValx2Reg_T @[build/NutShell.fir.opt.mlir 13339:9]
    regreset cnt_value : UInt<6>, clock, reset, UInt<6>(0) @[build/NutShell.fir.opt.mlir 13342:20]
    when newReq : @[build/NutShell.fir.opt.mlir 13352:7]
      connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 13354:9]
    else :
      node _T_4 = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 13357:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 13358:9]
        node canSkipShift_hi = bits(bReg, 63, 32) @[build/NutShell.fir.opt.mlir 13360:30]
        node canSkipShift_lo = bits(bReg, 31, 0) @[build/NutShell.fir.opt.mlir 13362:30]
        node canSkipShift_useHi = orr(canSkipShift_hi) @[build/NutShell.fir.opt.mlir 13364:33]
        node canSkipShift_hi_1 = bits(canSkipShift_hi, 31, 16) @[build/NutShell.fir.opt.mlir 13366:32]
        node canSkipShift_lo_1 = bits(canSkipShift_hi, 15, 0) @[build/NutShell.fir.opt.mlir 13368:32]
        node canSkipShift_useHi_1 = orr(canSkipShift_hi_1) @[build/NutShell.fir.opt.mlir 13370:35]
        node canSkipShift_hi_2 = bits(canSkipShift_hi_1, 15, 8) @[build/NutShell.fir.opt.mlir 13372:32]
        node canSkipShift_lo_2 = bits(canSkipShift_hi_1, 7, 0) @[build/NutShell.fir.opt.mlir 13374:32]
        node canSkipShift_useHi_2 = orr(canSkipShift_hi_2) @[build/NutShell.fir.opt.mlir 13376:35]
        node canSkipShift_hi_3 = bits(canSkipShift_hi_2, 7, 4) @[build/NutShell.fir.opt.mlir 13378:32]
        node canSkipShift_lo_3 = bits(canSkipShift_hi_2, 3, 0) @[build/NutShell.fir.opt.mlir 13380:32]
        node canSkipShift_useHi_3 = orr(canSkipShift_hi_3) @[build/NutShell.fir.opt.mlir 13382:35]
        node _canSkipShift_T = bits(canSkipShift_hi_3, 3, 3) @[build/NutShell.fir.opt.mlir 13384:30]
        node _canSkipShift_T_1 = bits(canSkipShift_hi_3, 2, 2) @[build/NutShell.fir.opt.mlir 13386:32]
        node _canSkipShift_T_2 = bits(canSkipShift_hi_3, 1, 1) @[build/NutShell.fir.opt.mlir 13388:32]
        node _canSkipShift_T_3 = mux(_canSkipShift_T_1, UInt<2>(2), _canSkipShift_T_2) @[build/NutShell.fir.opt.mlir 13390:32]
        node _canSkipShift_T_4 = mux(_canSkipShift_T, UInt<2>(3), _canSkipShift_T_3) @[build/NutShell.fir.opt.mlir 13392:32]
        node _canSkipShift_T_5 = bits(canSkipShift_lo_3, 3, 3) @[build/NutShell.fir.opt.mlir 13394:32]
        node _canSkipShift_T_6 = bits(canSkipShift_lo_3, 2, 2) @[build/NutShell.fir.opt.mlir 13396:32]
        node _canSkipShift_T_7 = bits(canSkipShift_lo_3, 1, 1) @[build/NutShell.fir.opt.mlir 13398:32]
        node _canSkipShift_T_8 = mux(_canSkipShift_T_6, UInt<2>(2), _canSkipShift_T_7) @[build/NutShell.fir.opt.mlir 13400:32]
        node _canSkipShift_T_9 = mux(_canSkipShift_T_5, UInt<2>(3), _canSkipShift_T_8) @[build/NutShell.fir.opt.mlir 13402:32]
        node _canSkipShift_T_10 = mux(canSkipShift_useHi_3, _canSkipShift_T_4, _canSkipShift_T_9) @[build/NutShell.fir.opt.mlir 13404:33]
        node _canSkipShift_T_11 = cat(canSkipShift_useHi_3, _canSkipShift_T_10) @[build/NutShell.fir.opt.mlir 13406:33]
        node canSkipShift_hi_4 = bits(canSkipShift_lo_2, 7, 4) @[build/NutShell.fir.opt.mlir 13408:32]
        node canSkipShift_lo_4 = bits(canSkipShift_lo_2, 3, 0) @[build/NutShell.fir.opt.mlir 13410:32]
        node canSkipShift_useHi_4 = orr(canSkipShift_hi_4) @[build/NutShell.fir.opt.mlir 13412:35]
        node _canSkipShift_T_12 = bits(canSkipShift_hi_4, 3, 3) @[build/NutShell.fir.opt.mlir 13414:33]
        node _canSkipShift_T_13 = bits(canSkipShift_hi_4, 2, 2) @[build/NutShell.fir.opt.mlir 13416:33]
        node _canSkipShift_T_14 = bits(canSkipShift_hi_4, 1, 1) @[build/NutShell.fir.opt.mlir 13418:33]
        node _canSkipShift_T_15 = mux(_canSkipShift_T_13, UInt<2>(2), _canSkipShift_T_14) @[build/NutShell.fir.opt.mlir 13420:33]
        node _canSkipShift_T_16 = mux(_canSkipShift_T_12, UInt<2>(3), _canSkipShift_T_15) @[build/NutShell.fir.opt.mlir 13422:33]
        node _canSkipShift_T_17 = bits(canSkipShift_lo_4, 3, 3) @[build/NutShell.fir.opt.mlir 13424:33]
        node _canSkipShift_T_18 = bits(canSkipShift_lo_4, 2, 2) @[build/NutShell.fir.opt.mlir 13426:33]
        node _canSkipShift_T_19 = bits(canSkipShift_lo_4, 1, 1) @[build/NutShell.fir.opt.mlir 13428:33]
        node _canSkipShift_T_20 = mux(_canSkipShift_T_18, UInt<2>(2), _canSkipShift_T_19) @[build/NutShell.fir.opt.mlir 13430:33]
        node _canSkipShift_T_21 = mux(_canSkipShift_T_17, UInt<2>(3), _canSkipShift_T_20) @[build/NutShell.fir.opt.mlir 13432:33]
        node _canSkipShift_T_22 = mux(canSkipShift_useHi_4, _canSkipShift_T_16, _canSkipShift_T_21) @[build/NutShell.fir.opt.mlir 13434:33]
        node _canSkipShift_T_23 = cat(canSkipShift_useHi_4, _canSkipShift_T_22) @[build/NutShell.fir.opt.mlir 13436:33]
        node _canSkipShift_T_24 = mux(canSkipShift_useHi_2, _canSkipShift_T_11, _canSkipShift_T_23) @[build/NutShell.fir.opt.mlir 13438:33]
        node _canSkipShift_T_25 = cat(canSkipShift_useHi_2, _canSkipShift_T_24) @[build/NutShell.fir.opt.mlir 13440:33]
        node canSkipShift_hi_5 = bits(canSkipShift_lo_1, 15, 8) @[build/NutShell.fir.opt.mlir 13442:32]
        node canSkipShift_lo_5 = bits(canSkipShift_lo_1, 7, 0) @[build/NutShell.fir.opt.mlir 13444:32]
        node canSkipShift_useHi_5 = orr(canSkipShift_hi_5) @[build/NutShell.fir.opt.mlir 13446:35]
        node canSkipShift_hi_6 = bits(canSkipShift_hi_5, 7, 4) @[build/NutShell.fir.opt.mlir 13448:32]
        node canSkipShift_lo_6 = bits(canSkipShift_hi_5, 3, 0) @[build/NutShell.fir.opt.mlir 13450:32]
        node canSkipShift_useHi_6 = orr(canSkipShift_hi_6) @[build/NutShell.fir.opt.mlir 13452:35]
        node _canSkipShift_T_26 = bits(canSkipShift_hi_6, 3, 3) @[build/NutShell.fir.opt.mlir 13454:33]
        node _canSkipShift_T_27 = bits(canSkipShift_hi_6, 2, 2) @[build/NutShell.fir.opt.mlir 13456:33]
        node _canSkipShift_T_28 = bits(canSkipShift_hi_6, 1, 1) @[build/NutShell.fir.opt.mlir 13458:33]
        node _canSkipShift_T_29 = mux(_canSkipShift_T_27, UInt<2>(2), _canSkipShift_T_28) @[build/NutShell.fir.opt.mlir 13460:33]
        node _canSkipShift_T_30 = mux(_canSkipShift_T_26, UInt<2>(3), _canSkipShift_T_29) @[build/NutShell.fir.opt.mlir 13462:33]
        node _canSkipShift_T_31 = bits(canSkipShift_lo_6, 3, 3) @[build/NutShell.fir.opt.mlir 13464:33]
        node _canSkipShift_T_32 = bits(canSkipShift_lo_6, 2, 2) @[build/NutShell.fir.opt.mlir 13466:33]
        node _canSkipShift_T_33 = bits(canSkipShift_lo_6, 1, 1) @[build/NutShell.fir.opt.mlir 13468:33]
        node _canSkipShift_T_34 = mux(_canSkipShift_T_32, UInt<2>(2), _canSkipShift_T_33) @[build/NutShell.fir.opt.mlir 13470:33]
        node _canSkipShift_T_35 = mux(_canSkipShift_T_31, UInt<2>(3), _canSkipShift_T_34) @[build/NutShell.fir.opt.mlir 13472:33]
        node _canSkipShift_T_36 = mux(canSkipShift_useHi_6, _canSkipShift_T_30, _canSkipShift_T_35) @[build/NutShell.fir.opt.mlir 13474:33]
        node _canSkipShift_T_37 = cat(canSkipShift_useHi_6, _canSkipShift_T_36) @[build/NutShell.fir.opt.mlir 13476:33]
        node canSkipShift_hi_7 = bits(canSkipShift_lo_5, 7, 4) @[build/NutShell.fir.opt.mlir 13478:32]
        node canSkipShift_lo_7 = bits(canSkipShift_lo_5, 3, 0) @[build/NutShell.fir.opt.mlir 13480:32]
        node canSkipShift_useHi_7 = orr(canSkipShift_hi_7) @[build/NutShell.fir.opt.mlir 13482:35]
        node _canSkipShift_T_38 = bits(canSkipShift_hi_7, 3, 3) @[build/NutShell.fir.opt.mlir 13484:33]
        node _canSkipShift_T_39 = bits(canSkipShift_hi_7, 2, 2) @[build/NutShell.fir.opt.mlir 13486:33]
        node _canSkipShift_T_40 = bits(canSkipShift_hi_7, 1, 1) @[build/NutShell.fir.opt.mlir 13488:33]
        node _canSkipShift_T_41 = mux(_canSkipShift_T_39, UInt<2>(2), _canSkipShift_T_40) @[build/NutShell.fir.opt.mlir 13490:33]
        node _canSkipShift_T_42 = mux(_canSkipShift_T_38, UInt<2>(3), _canSkipShift_T_41) @[build/NutShell.fir.opt.mlir 13492:33]
        node _canSkipShift_T_43 = bits(canSkipShift_lo_7, 3, 3) @[build/NutShell.fir.opt.mlir 13494:33]
        node _canSkipShift_T_44 = bits(canSkipShift_lo_7, 2, 2) @[build/NutShell.fir.opt.mlir 13496:33]
        node _canSkipShift_T_45 = bits(canSkipShift_lo_7, 1, 1) @[build/NutShell.fir.opt.mlir 13498:33]
        node _canSkipShift_T_46 = mux(_canSkipShift_T_44, UInt<2>(2), _canSkipShift_T_45) @[build/NutShell.fir.opt.mlir 13500:33]
        node _canSkipShift_T_47 = mux(_canSkipShift_T_43, UInt<2>(3), _canSkipShift_T_46) @[build/NutShell.fir.opt.mlir 13502:33]
        node _canSkipShift_T_48 = mux(canSkipShift_useHi_7, _canSkipShift_T_42, _canSkipShift_T_47) @[build/NutShell.fir.opt.mlir 13504:33]
        node _canSkipShift_T_49 = cat(canSkipShift_useHi_7, _canSkipShift_T_48) @[build/NutShell.fir.opt.mlir 13506:33]
        node _canSkipShift_T_50 = mux(canSkipShift_useHi_5, _canSkipShift_T_37, _canSkipShift_T_49) @[build/NutShell.fir.opt.mlir 13508:33]
        node _canSkipShift_T_51 = cat(canSkipShift_useHi_5, _canSkipShift_T_50) @[build/NutShell.fir.opt.mlir 13510:33]
        node _canSkipShift_T_52 = mux(canSkipShift_useHi_1, _canSkipShift_T_25, _canSkipShift_T_51) @[build/NutShell.fir.opt.mlir 13512:33]
        node _canSkipShift_T_53 = cat(canSkipShift_useHi_1, _canSkipShift_T_52) @[build/NutShell.fir.opt.mlir 13514:33]
        node canSkipShift_hi_8 = bits(canSkipShift_lo, 31, 16) @[build/NutShell.fir.opt.mlir 13516:32]
        node canSkipShift_lo_8 = bits(canSkipShift_lo, 15, 0) @[build/NutShell.fir.opt.mlir 13518:32]
        node canSkipShift_useHi_8 = orr(canSkipShift_hi_8) @[build/NutShell.fir.opt.mlir 13520:35]
        node canSkipShift_hi_9 = bits(canSkipShift_hi_8, 15, 8) @[build/NutShell.fir.opt.mlir 13522:32]
        node canSkipShift_lo_9 = bits(canSkipShift_hi_8, 7, 0) @[build/NutShell.fir.opt.mlir 13524:32]
        node canSkipShift_useHi_9 = orr(canSkipShift_hi_9) @[build/NutShell.fir.opt.mlir 13526:35]
        node canSkipShift_hi_10 = bits(canSkipShift_hi_9, 7, 4) @[build/NutShell.fir.opt.mlir 13528:33]
        node canSkipShift_lo_10 = bits(canSkipShift_hi_9, 3, 0) @[build/NutShell.fir.opt.mlir 13530:33]
        node canSkipShift_useHi_10 = orr(canSkipShift_hi_10) @[build/NutShell.fir.opt.mlir 13532:36]
        node _canSkipShift_T_54 = bits(canSkipShift_hi_10, 3, 3) @[build/NutShell.fir.opt.mlir 13534:33]
        node _canSkipShift_T_55 = bits(canSkipShift_hi_10, 2, 2) @[build/NutShell.fir.opt.mlir 13536:33]
        node _canSkipShift_T_56 = bits(canSkipShift_hi_10, 1, 1) @[build/NutShell.fir.opt.mlir 13538:33]
        node _canSkipShift_T_57 = mux(_canSkipShift_T_55, UInt<2>(2), _canSkipShift_T_56) @[build/NutShell.fir.opt.mlir 13540:33]
        node _canSkipShift_T_58 = mux(_canSkipShift_T_54, UInt<2>(3), _canSkipShift_T_57) @[build/NutShell.fir.opt.mlir 13542:33]
        node _canSkipShift_T_59 = bits(canSkipShift_lo_10, 3, 3) @[build/NutShell.fir.opt.mlir 13544:33]
        node _canSkipShift_T_60 = bits(canSkipShift_lo_10, 2, 2) @[build/NutShell.fir.opt.mlir 13546:33]
        node _canSkipShift_T_61 = bits(canSkipShift_lo_10, 1, 1) @[build/NutShell.fir.opt.mlir 13548:33]
        node _canSkipShift_T_62 = mux(_canSkipShift_T_60, UInt<2>(2), _canSkipShift_T_61) @[build/NutShell.fir.opt.mlir 13550:33]
        node _canSkipShift_T_63 = mux(_canSkipShift_T_59, UInt<2>(3), _canSkipShift_T_62) @[build/NutShell.fir.opt.mlir 13552:33]
        node _canSkipShift_T_64 = mux(canSkipShift_useHi_10, _canSkipShift_T_58, _canSkipShift_T_63) @[build/NutShell.fir.opt.mlir 13554:33]
        node _canSkipShift_T_65 = cat(canSkipShift_useHi_10, _canSkipShift_T_64) @[build/NutShell.fir.opt.mlir 13556:33]
        node canSkipShift_hi_11 = bits(canSkipShift_lo_9, 7, 4) @[build/NutShell.fir.opt.mlir 13558:33]
        node canSkipShift_lo_11 = bits(canSkipShift_lo_9, 3, 0) @[build/NutShell.fir.opt.mlir 13560:33]
        node canSkipShift_useHi_11 = orr(canSkipShift_hi_11) @[build/NutShell.fir.opt.mlir 13562:36]
        node _canSkipShift_T_66 = bits(canSkipShift_hi_11, 3, 3) @[build/NutShell.fir.opt.mlir 13564:33]
        node _canSkipShift_T_67 = bits(canSkipShift_hi_11, 2, 2) @[build/NutShell.fir.opt.mlir 13566:33]
        node _canSkipShift_T_68 = bits(canSkipShift_hi_11, 1, 1) @[build/NutShell.fir.opt.mlir 13568:33]
        node _canSkipShift_T_69 = mux(_canSkipShift_T_67, UInt<2>(2), _canSkipShift_T_68) @[build/NutShell.fir.opt.mlir 13570:33]
        node _canSkipShift_T_70 = mux(_canSkipShift_T_66, UInt<2>(3), _canSkipShift_T_69) @[build/NutShell.fir.opt.mlir 13572:33]
        node _canSkipShift_T_71 = bits(canSkipShift_lo_11, 3, 3) @[build/NutShell.fir.opt.mlir 13574:33]
        node _canSkipShift_T_72 = bits(canSkipShift_lo_11, 2, 2) @[build/NutShell.fir.opt.mlir 13576:33]
        node _canSkipShift_T_73 = bits(canSkipShift_lo_11, 1, 1) @[build/NutShell.fir.opt.mlir 13578:33]
        node _canSkipShift_T_74 = mux(_canSkipShift_T_72, UInt<2>(2), _canSkipShift_T_73) @[build/NutShell.fir.opt.mlir 13580:33]
        node _canSkipShift_T_75 = mux(_canSkipShift_T_71, UInt<2>(3), _canSkipShift_T_74) @[build/NutShell.fir.opt.mlir 13582:33]
        node _canSkipShift_T_76 = mux(canSkipShift_useHi_11, _canSkipShift_T_70, _canSkipShift_T_75) @[build/NutShell.fir.opt.mlir 13584:33]
        node _canSkipShift_T_77 = cat(canSkipShift_useHi_11, _canSkipShift_T_76) @[build/NutShell.fir.opt.mlir 13586:33]
        node _canSkipShift_T_78 = mux(canSkipShift_useHi_9, _canSkipShift_T_65, _canSkipShift_T_77) @[build/NutShell.fir.opt.mlir 13588:33]
        node _canSkipShift_T_79 = cat(canSkipShift_useHi_9, _canSkipShift_T_78) @[build/NutShell.fir.opt.mlir 13590:33]
        node canSkipShift_hi_12 = bits(canSkipShift_lo_8, 15, 8) @[build/NutShell.fir.opt.mlir 13592:33]
        node canSkipShift_lo_12 = bits(canSkipShift_lo_8, 7, 0) @[build/NutShell.fir.opt.mlir 13594:33]
        node canSkipShift_useHi_12 = orr(canSkipShift_hi_12) @[build/NutShell.fir.opt.mlir 13596:36]
        node canSkipShift_hi_13 = bits(canSkipShift_hi_12, 7, 4) @[build/NutShell.fir.opt.mlir 13598:33]
        node canSkipShift_lo_13 = bits(canSkipShift_hi_12, 3, 0) @[build/NutShell.fir.opt.mlir 13600:33]
        node canSkipShift_useHi_13 = orr(canSkipShift_hi_13) @[build/NutShell.fir.opt.mlir 13602:36]
        node _canSkipShift_T_80 = bits(canSkipShift_hi_13, 3, 3) @[build/NutShell.fir.opt.mlir 13604:33]
        node _canSkipShift_T_81 = bits(canSkipShift_hi_13, 2, 2) @[build/NutShell.fir.opt.mlir 13606:33]
        node _canSkipShift_T_82 = bits(canSkipShift_hi_13, 1, 1) @[build/NutShell.fir.opt.mlir 13608:33]
        node _canSkipShift_T_83 = mux(_canSkipShift_T_81, UInt<2>(2), _canSkipShift_T_82) @[build/NutShell.fir.opt.mlir 13610:33]
        node _canSkipShift_T_84 = mux(_canSkipShift_T_80, UInt<2>(3), _canSkipShift_T_83) @[build/NutShell.fir.opt.mlir 13612:33]
        node _canSkipShift_T_85 = bits(canSkipShift_lo_13, 3, 3) @[build/NutShell.fir.opt.mlir 13614:33]
        node _canSkipShift_T_86 = bits(canSkipShift_lo_13, 2, 2) @[build/NutShell.fir.opt.mlir 13616:33]
        node _canSkipShift_T_87 = bits(canSkipShift_lo_13, 1, 1) @[build/NutShell.fir.opt.mlir 13618:33]
        node _canSkipShift_T_88 = mux(_canSkipShift_T_86, UInt<2>(2), _canSkipShift_T_87) @[build/NutShell.fir.opt.mlir 13620:33]
        node _canSkipShift_T_89 = mux(_canSkipShift_T_85, UInt<2>(3), _canSkipShift_T_88) @[build/NutShell.fir.opt.mlir 13622:33]
        node _canSkipShift_T_90 = mux(canSkipShift_useHi_13, _canSkipShift_T_84, _canSkipShift_T_89) @[build/NutShell.fir.opt.mlir 13624:33]
        node _canSkipShift_T_91 = cat(canSkipShift_useHi_13, _canSkipShift_T_90) @[build/NutShell.fir.opt.mlir 13626:33]
        node canSkipShift_hi_14 = bits(canSkipShift_lo_12, 7, 4) @[build/NutShell.fir.opt.mlir 13628:33]
        node canSkipShift_lo_14 = bits(canSkipShift_lo_12, 3, 0) @[build/NutShell.fir.opt.mlir 13630:33]
        node canSkipShift_useHi_14 = orr(canSkipShift_hi_14) @[build/NutShell.fir.opt.mlir 13632:36]
        node _canSkipShift_T_92 = bits(canSkipShift_hi_14, 3, 3) @[build/NutShell.fir.opt.mlir 13634:33]
        node _canSkipShift_T_93 = bits(canSkipShift_hi_14, 2, 2) @[build/NutShell.fir.opt.mlir 13636:33]
        node _canSkipShift_T_94 = bits(canSkipShift_hi_14, 1, 1) @[build/NutShell.fir.opt.mlir 13638:33]
        node _canSkipShift_T_95 = mux(_canSkipShift_T_93, UInt<2>(2), _canSkipShift_T_94) @[build/NutShell.fir.opt.mlir 13640:33]
        node _canSkipShift_T_96 = mux(_canSkipShift_T_92, UInt<2>(3), _canSkipShift_T_95) @[build/NutShell.fir.opt.mlir 13642:33]
        node _canSkipShift_T_97 = bits(canSkipShift_lo_14, 3, 3) @[build/NutShell.fir.opt.mlir 13644:33]
        node _canSkipShift_T_98 = bits(canSkipShift_lo_14, 2, 2) @[build/NutShell.fir.opt.mlir 13646:33]
        node _canSkipShift_T_99 = bits(canSkipShift_lo_14, 1, 1) @[build/NutShell.fir.opt.mlir 13648:33]
        node _canSkipShift_T_100 = mux(_canSkipShift_T_98, UInt<2>(2), _canSkipShift_T_99) @[build/NutShell.fir.opt.mlir 13650:34]
        node _canSkipShift_T_101 = mux(_canSkipShift_T_97, UInt<2>(3), _canSkipShift_T_100) @[build/NutShell.fir.opt.mlir 13652:34]
        node _canSkipShift_T_102 = mux(canSkipShift_useHi_14, _canSkipShift_T_96, _canSkipShift_T_101) @[build/NutShell.fir.opt.mlir 13654:34]
        node _canSkipShift_T_103 = cat(canSkipShift_useHi_14, _canSkipShift_T_102) @[build/NutShell.fir.opt.mlir 13656:34]
        node _canSkipShift_T_104 = mux(canSkipShift_useHi_12, _canSkipShift_T_91, _canSkipShift_T_103) @[build/NutShell.fir.opt.mlir 13658:34]
        node _canSkipShift_T_105 = cat(canSkipShift_useHi_12, _canSkipShift_T_104) @[build/NutShell.fir.opt.mlir 13660:34]
        node _canSkipShift_T_106 = mux(canSkipShift_useHi_8, _canSkipShift_T_79, _canSkipShift_T_105) @[build/NutShell.fir.opt.mlir 13662:34]
        node _canSkipShift_T_107 = cat(canSkipShift_useHi_8, _canSkipShift_T_106) @[build/NutShell.fir.opt.mlir 13664:34]
        node _canSkipShift_T_108 = mux(canSkipShift_useHi, _canSkipShift_T_53, _canSkipShift_T_107) @[build/NutShell.fir.opt.mlir 13666:34]
        node _canSkipShift_T_109 = cat(canSkipShift_useHi, _canSkipShift_T_108) @[build/NutShell.fir.opt.mlir 13668:34]
        node _canSkipShift_T_110 = or(UInt<7>(64), _canSkipShift_T_109) @[build/NutShell.fir.opt.mlir 13670:34]
        node canSkipShift_hi_15 = bits(aValx2Reg, 64, 64) @[build/NutShell.fir.opt.mlir 13672:33]
        node canSkipShift_lo_15 = bits(aValx2Reg, 63, 0) @[build/NutShell.fir.opt.mlir 13674:33]
        node canSkipShift_useHi_15 = orr(canSkipShift_hi_15) @[build/NutShell.fir.opt.mlir 13676:36]
        node canSkipShift_hi_16 = bits(canSkipShift_lo_15, 63, 32) @[build/NutShell.fir.opt.mlir 13678:33]
        node canSkipShift_lo_16 = bits(canSkipShift_lo_15, 31, 0) @[build/NutShell.fir.opt.mlir 13680:33]
        node canSkipShift_useHi_16 = orr(canSkipShift_hi_16) @[build/NutShell.fir.opt.mlir 13682:36]
        node canSkipShift_hi_17 = bits(canSkipShift_hi_16, 31, 16) @[build/NutShell.fir.opt.mlir 13684:33]
        node canSkipShift_lo_17 = bits(canSkipShift_hi_16, 15, 0) @[build/NutShell.fir.opt.mlir 13686:33]
        node canSkipShift_useHi_17 = orr(canSkipShift_hi_17) @[build/NutShell.fir.opt.mlir 13688:36]
        node canSkipShift_hi_18 = bits(canSkipShift_hi_17, 15, 8) @[build/NutShell.fir.opt.mlir 13690:33]
        node canSkipShift_lo_18 = bits(canSkipShift_hi_17, 7, 0) @[build/NutShell.fir.opt.mlir 13692:33]
        node canSkipShift_useHi_18 = orr(canSkipShift_hi_18) @[build/NutShell.fir.opt.mlir 13694:36]
        node canSkipShift_hi_19 = bits(canSkipShift_hi_18, 7, 4) @[build/NutShell.fir.opt.mlir 13696:33]
        node canSkipShift_lo_19 = bits(canSkipShift_hi_18, 3, 0) @[build/NutShell.fir.opt.mlir 13698:33]
        node canSkipShift_useHi_19 = orr(canSkipShift_hi_19) @[build/NutShell.fir.opt.mlir 13700:36]
        node _canSkipShift_T_111 = bits(canSkipShift_hi_19, 3, 3) @[build/NutShell.fir.opt.mlir 13702:34]
        node _canSkipShift_T_112 = bits(canSkipShift_hi_19, 2, 2) @[build/NutShell.fir.opt.mlir 13704:34]
        node _canSkipShift_T_113 = bits(canSkipShift_hi_19, 1, 1) @[build/NutShell.fir.opt.mlir 13706:34]
        node _canSkipShift_T_114 = mux(_canSkipShift_T_112, UInt<2>(2), _canSkipShift_T_113) @[build/NutShell.fir.opt.mlir 13708:34]
        node _canSkipShift_T_115 = mux(_canSkipShift_T_111, UInt<2>(3), _canSkipShift_T_114) @[build/NutShell.fir.opt.mlir 13710:34]
        node _canSkipShift_T_116 = bits(canSkipShift_lo_19, 3, 3) @[build/NutShell.fir.opt.mlir 13712:34]
        node _canSkipShift_T_117 = bits(canSkipShift_lo_19, 2, 2) @[build/NutShell.fir.opt.mlir 13714:34]
        node _canSkipShift_T_118 = bits(canSkipShift_lo_19, 1, 1) @[build/NutShell.fir.opt.mlir 13716:34]
        node _canSkipShift_T_119 = mux(_canSkipShift_T_117, UInt<2>(2), _canSkipShift_T_118) @[build/NutShell.fir.opt.mlir 13718:34]
        node _canSkipShift_T_120 = mux(_canSkipShift_T_116, UInt<2>(3), _canSkipShift_T_119) @[build/NutShell.fir.opt.mlir 13720:34]
        node _canSkipShift_T_121 = mux(canSkipShift_useHi_19, _canSkipShift_T_115, _canSkipShift_T_120) @[build/NutShell.fir.opt.mlir 13722:34]
        node _canSkipShift_T_122 = cat(canSkipShift_useHi_19, _canSkipShift_T_121) @[build/NutShell.fir.opt.mlir 13724:34]
        node canSkipShift_hi_20 = bits(canSkipShift_lo_18, 7, 4) @[build/NutShell.fir.opt.mlir 13726:33]
        node canSkipShift_lo_20 = bits(canSkipShift_lo_18, 3, 0) @[build/NutShell.fir.opt.mlir 13728:33]
        node canSkipShift_useHi_20 = orr(canSkipShift_hi_20) @[build/NutShell.fir.opt.mlir 13730:36]
        node _canSkipShift_T_123 = bits(canSkipShift_hi_20, 3, 3) @[build/NutShell.fir.opt.mlir 13732:34]
        node _canSkipShift_T_124 = bits(canSkipShift_hi_20, 2, 2) @[build/NutShell.fir.opt.mlir 13734:34]
        node _canSkipShift_T_125 = bits(canSkipShift_hi_20, 1, 1) @[build/NutShell.fir.opt.mlir 13736:34]
        node _canSkipShift_T_126 = mux(_canSkipShift_T_124, UInt<2>(2), _canSkipShift_T_125) @[build/NutShell.fir.opt.mlir 13738:34]
        node _canSkipShift_T_127 = mux(_canSkipShift_T_123, UInt<2>(3), _canSkipShift_T_126) @[build/NutShell.fir.opt.mlir 13740:34]
        node _canSkipShift_T_128 = bits(canSkipShift_lo_20, 3, 3) @[build/NutShell.fir.opt.mlir 13742:34]
        node _canSkipShift_T_129 = bits(canSkipShift_lo_20, 2, 2) @[build/NutShell.fir.opt.mlir 13744:34]
        node _canSkipShift_T_130 = bits(canSkipShift_lo_20, 1, 1) @[build/NutShell.fir.opt.mlir 13746:34]
        node _canSkipShift_T_131 = mux(_canSkipShift_T_129, UInt<2>(2), _canSkipShift_T_130) @[build/NutShell.fir.opt.mlir 13748:34]
        node _canSkipShift_T_132 = mux(_canSkipShift_T_128, UInt<2>(3), _canSkipShift_T_131) @[build/NutShell.fir.opt.mlir 13750:34]
        node _canSkipShift_T_133 = mux(canSkipShift_useHi_20, _canSkipShift_T_127, _canSkipShift_T_132) @[build/NutShell.fir.opt.mlir 13752:34]
        node _canSkipShift_T_134 = cat(canSkipShift_useHi_20, _canSkipShift_T_133) @[build/NutShell.fir.opt.mlir 13754:34]
        node _canSkipShift_T_135 = mux(canSkipShift_useHi_18, _canSkipShift_T_122, _canSkipShift_T_134) @[build/NutShell.fir.opt.mlir 13756:34]
        node _canSkipShift_T_136 = cat(canSkipShift_useHi_18, _canSkipShift_T_135) @[build/NutShell.fir.opt.mlir 13758:34]
        node canSkipShift_hi_21 = bits(canSkipShift_lo_17, 15, 8) @[build/NutShell.fir.opt.mlir 13760:33]
        node canSkipShift_lo_21 = bits(canSkipShift_lo_17, 7, 0) @[build/NutShell.fir.opt.mlir 13762:33]
        node canSkipShift_useHi_21 = orr(canSkipShift_hi_21) @[build/NutShell.fir.opt.mlir 13764:36]
        node canSkipShift_hi_22 = bits(canSkipShift_hi_21, 7, 4) @[build/NutShell.fir.opt.mlir 13766:33]
        node canSkipShift_lo_22 = bits(canSkipShift_hi_21, 3, 0) @[build/NutShell.fir.opt.mlir 13768:33]
        node canSkipShift_useHi_22 = orr(canSkipShift_hi_22) @[build/NutShell.fir.opt.mlir 13770:36]
        node _canSkipShift_T_137 = bits(canSkipShift_hi_22, 3, 3) @[build/NutShell.fir.opt.mlir 13772:34]
        node _canSkipShift_T_138 = bits(canSkipShift_hi_22, 2, 2) @[build/NutShell.fir.opt.mlir 13774:34]
        node _canSkipShift_T_139 = bits(canSkipShift_hi_22, 1, 1) @[build/NutShell.fir.opt.mlir 13776:34]
        node _canSkipShift_T_140 = mux(_canSkipShift_T_138, UInt<2>(2), _canSkipShift_T_139) @[build/NutShell.fir.opt.mlir 13778:34]
        node _canSkipShift_T_141 = mux(_canSkipShift_T_137, UInt<2>(3), _canSkipShift_T_140) @[build/NutShell.fir.opt.mlir 13780:34]
        node _canSkipShift_T_142 = bits(canSkipShift_lo_22, 3, 3) @[build/NutShell.fir.opt.mlir 13782:34]
        node _canSkipShift_T_143 = bits(canSkipShift_lo_22, 2, 2) @[build/NutShell.fir.opt.mlir 13784:34]
        node _canSkipShift_T_144 = bits(canSkipShift_lo_22, 1, 1) @[build/NutShell.fir.opt.mlir 13786:34]
        node _canSkipShift_T_145 = mux(_canSkipShift_T_143, UInt<2>(2), _canSkipShift_T_144) @[build/NutShell.fir.opt.mlir 13788:34]
        node _canSkipShift_T_146 = mux(_canSkipShift_T_142, UInt<2>(3), _canSkipShift_T_145) @[build/NutShell.fir.opt.mlir 13790:34]
        node _canSkipShift_T_147 = mux(canSkipShift_useHi_22, _canSkipShift_T_141, _canSkipShift_T_146) @[build/NutShell.fir.opt.mlir 13792:34]
        node _canSkipShift_T_148 = cat(canSkipShift_useHi_22, _canSkipShift_T_147) @[build/NutShell.fir.opt.mlir 13794:34]
        node canSkipShift_hi_23 = bits(canSkipShift_lo_21, 7, 4) @[build/NutShell.fir.opt.mlir 13796:33]
        node canSkipShift_lo_23 = bits(canSkipShift_lo_21, 3, 0) @[build/NutShell.fir.opt.mlir 13798:33]
        node canSkipShift_useHi_23 = orr(canSkipShift_hi_23) @[build/NutShell.fir.opt.mlir 13800:36]
        node _canSkipShift_T_149 = bits(canSkipShift_hi_23, 3, 3) @[build/NutShell.fir.opt.mlir 13802:34]
        node _canSkipShift_T_150 = bits(canSkipShift_hi_23, 2, 2) @[build/NutShell.fir.opt.mlir 13804:34]
        node _canSkipShift_T_151 = bits(canSkipShift_hi_23, 1, 1) @[build/NutShell.fir.opt.mlir 13806:34]
        node _canSkipShift_T_152 = mux(_canSkipShift_T_150, UInt<2>(2), _canSkipShift_T_151) @[build/NutShell.fir.opt.mlir 13808:34]
        node _canSkipShift_T_153 = mux(_canSkipShift_T_149, UInt<2>(3), _canSkipShift_T_152) @[build/NutShell.fir.opt.mlir 13810:34]
        node _canSkipShift_T_154 = bits(canSkipShift_lo_23, 3, 3) @[build/NutShell.fir.opt.mlir 13812:34]
        node _canSkipShift_T_155 = bits(canSkipShift_lo_23, 2, 2) @[build/NutShell.fir.opt.mlir 13814:34]
        node _canSkipShift_T_156 = bits(canSkipShift_lo_23, 1, 1) @[build/NutShell.fir.opt.mlir 13816:34]
        node _canSkipShift_T_157 = mux(_canSkipShift_T_155, UInt<2>(2), _canSkipShift_T_156) @[build/NutShell.fir.opt.mlir 13818:34]
        node _canSkipShift_T_158 = mux(_canSkipShift_T_154, UInt<2>(3), _canSkipShift_T_157) @[build/NutShell.fir.opt.mlir 13820:34]
        node _canSkipShift_T_159 = mux(canSkipShift_useHi_23, _canSkipShift_T_153, _canSkipShift_T_158) @[build/NutShell.fir.opt.mlir 13822:34]
        node _canSkipShift_T_160 = cat(canSkipShift_useHi_23, _canSkipShift_T_159) @[build/NutShell.fir.opt.mlir 13824:34]
        node _canSkipShift_T_161 = mux(canSkipShift_useHi_21, _canSkipShift_T_148, _canSkipShift_T_160) @[build/NutShell.fir.opt.mlir 13826:34]
        node _canSkipShift_T_162 = cat(canSkipShift_useHi_21, _canSkipShift_T_161) @[build/NutShell.fir.opt.mlir 13828:34]
        node _canSkipShift_T_163 = mux(canSkipShift_useHi_17, _canSkipShift_T_136, _canSkipShift_T_162) @[build/NutShell.fir.opt.mlir 13830:34]
        node _canSkipShift_T_164 = cat(canSkipShift_useHi_17, _canSkipShift_T_163) @[build/NutShell.fir.opt.mlir 13832:34]
        node canSkipShift_hi_24 = bits(canSkipShift_lo_16, 31, 16) @[build/NutShell.fir.opt.mlir 13834:33]
        node canSkipShift_lo_24 = bits(canSkipShift_lo_16, 15, 0) @[build/NutShell.fir.opt.mlir 13836:33]
        node canSkipShift_useHi_24 = orr(canSkipShift_hi_24) @[build/NutShell.fir.opt.mlir 13838:36]
        node canSkipShift_hi_25 = bits(canSkipShift_hi_24, 15, 8) @[build/NutShell.fir.opt.mlir 13840:33]
        node canSkipShift_lo_25 = bits(canSkipShift_hi_24, 7, 0) @[build/NutShell.fir.opt.mlir 13842:33]
        node canSkipShift_useHi_25 = orr(canSkipShift_hi_25) @[build/NutShell.fir.opt.mlir 13844:36]
        node canSkipShift_hi_26 = bits(canSkipShift_hi_25, 7, 4) @[build/NutShell.fir.opt.mlir 13846:33]
        node canSkipShift_lo_26 = bits(canSkipShift_hi_25, 3, 0) @[build/NutShell.fir.opt.mlir 13848:33]
        node canSkipShift_useHi_26 = orr(canSkipShift_hi_26) @[build/NutShell.fir.opt.mlir 13850:36]
        node _canSkipShift_T_165 = bits(canSkipShift_hi_26, 3, 3) @[build/NutShell.fir.opt.mlir 13852:34]
        node _canSkipShift_T_166 = bits(canSkipShift_hi_26, 2, 2) @[build/NutShell.fir.opt.mlir 13854:34]
        node _canSkipShift_T_167 = bits(canSkipShift_hi_26, 1, 1) @[build/NutShell.fir.opt.mlir 13856:34]
        node _canSkipShift_T_168 = mux(_canSkipShift_T_166, UInt<2>(2), _canSkipShift_T_167) @[build/NutShell.fir.opt.mlir 13858:34]
        node _canSkipShift_T_169 = mux(_canSkipShift_T_165, UInt<2>(3), _canSkipShift_T_168) @[build/NutShell.fir.opt.mlir 13860:34]
        node _canSkipShift_T_170 = bits(canSkipShift_lo_26, 3, 3) @[build/NutShell.fir.opt.mlir 13862:34]
        node _canSkipShift_T_171 = bits(canSkipShift_lo_26, 2, 2) @[build/NutShell.fir.opt.mlir 13864:34]
        node _canSkipShift_T_172 = bits(canSkipShift_lo_26, 1, 1) @[build/NutShell.fir.opt.mlir 13866:34]
        node _canSkipShift_T_173 = mux(_canSkipShift_T_171, UInt<2>(2), _canSkipShift_T_172) @[build/NutShell.fir.opt.mlir 13868:34]
        node _canSkipShift_T_174 = mux(_canSkipShift_T_170, UInt<2>(3), _canSkipShift_T_173) @[build/NutShell.fir.opt.mlir 13870:34]
        node _canSkipShift_T_175 = mux(canSkipShift_useHi_26, _canSkipShift_T_169, _canSkipShift_T_174) @[build/NutShell.fir.opt.mlir 13872:34]
        node _canSkipShift_T_176 = cat(canSkipShift_useHi_26, _canSkipShift_T_175) @[build/NutShell.fir.opt.mlir 13874:34]
        node canSkipShift_hi_27 = bits(canSkipShift_lo_25, 7, 4) @[build/NutShell.fir.opt.mlir 13876:33]
        node canSkipShift_lo_27 = bits(canSkipShift_lo_25, 3, 0) @[build/NutShell.fir.opt.mlir 13878:33]
        node canSkipShift_useHi_27 = orr(canSkipShift_hi_27) @[build/NutShell.fir.opt.mlir 13880:36]
        node _canSkipShift_T_177 = bits(canSkipShift_hi_27, 3, 3) @[build/NutShell.fir.opt.mlir 13882:34]
        node _canSkipShift_T_178 = bits(canSkipShift_hi_27, 2, 2) @[build/NutShell.fir.opt.mlir 13884:34]
        node _canSkipShift_T_179 = bits(canSkipShift_hi_27, 1, 1) @[build/NutShell.fir.opt.mlir 13886:34]
        node _canSkipShift_T_180 = mux(_canSkipShift_T_178, UInt<2>(2), _canSkipShift_T_179) @[build/NutShell.fir.opt.mlir 13888:34]
        node _canSkipShift_T_181 = mux(_canSkipShift_T_177, UInt<2>(3), _canSkipShift_T_180) @[build/NutShell.fir.opt.mlir 13890:34]
        node _canSkipShift_T_182 = bits(canSkipShift_lo_27, 3, 3) @[build/NutShell.fir.opt.mlir 13892:34]
        node _canSkipShift_T_183 = bits(canSkipShift_lo_27, 2, 2) @[build/NutShell.fir.opt.mlir 13894:34]
        node _canSkipShift_T_184 = bits(canSkipShift_lo_27, 1, 1) @[build/NutShell.fir.opt.mlir 13896:34]
        node _canSkipShift_T_185 = mux(_canSkipShift_T_183, UInt<2>(2), _canSkipShift_T_184) @[build/NutShell.fir.opt.mlir 13898:34]
        node _canSkipShift_T_186 = mux(_canSkipShift_T_182, UInt<2>(3), _canSkipShift_T_185) @[build/NutShell.fir.opt.mlir 13900:34]
        node _canSkipShift_T_187 = mux(canSkipShift_useHi_27, _canSkipShift_T_181, _canSkipShift_T_186) @[build/NutShell.fir.opt.mlir 13902:34]
        node _canSkipShift_T_188 = cat(canSkipShift_useHi_27, _canSkipShift_T_187) @[build/NutShell.fir.opt.mlir 13904:34]
        node _canSkipShift_T_189 = mux(canSkipShift_useHi_25, _canSkipShift_T_176, _canSkipShift_T_188) @[build/NutShell.fir.opt.mlir 13906:34]
        node _canSkipShift_T_190 = cat(canSkipShift_useHi_25, _canSkipShift_T_189) @[build/NutShell.fir.opt.mlir 13908:34]
        node canSkipShift_hi_28 = bits(canSkipShift_lo_24, 15, 8) @[build/NutShell.fir.opt.mlir 13910:33]
        node canSkipShift_lo_28 = bits(canSkipShift_lo_24, 7, 0) @[build/NutShell.fir.opt.mlir 13912:33]
        node canSkipShift_useHi_28 = orr(canSkipShift_hi_28) @[build/NutShell.fir.opt.mlir 13914:36]
        node canSkipShift_hi_29 = bits(canSkipShift_hi_28, 7, 4) @[build/NutShell.fir.opt.mlir 13916:33]
        node canSkipShift_lo_29 = bits(canSkipShift_hi_28, 3, 0) @[build/NutShell.fir.opt.mlir 13918:33]
        node canSkipShift_useHi_29 = orr(canSkipShift_hi_29) @[build/NutShell.fir.opt.mlir 13920:36]
        node _canSkipShift_T_191 = bits(canSkipShift_hi_29, 3, 3) @[build/NutShell.fir.opt.mlir 13922:34]
        node _canSkipShift_T_192 = bits(canSkipShift_hi_29, 2, 2) @[build/NutShell.fir.opt.mlir 13924:34]
        node _canSkipShift_T_193 = bits(canSkipShift_hi_29, 1, 1) @[build/NutShell.fir.opt.mlir 13926:34]
        node _canSkipShift_T_194 = mux(_canSkipShift_T_192, UInt<2>(2), _canSkipShift_T_193) @[build/NutShell.fir.opt.mlir 13928:34]
        node _canSkipShift_T_195 = mux(_canSkipShift_T_191, UInt<2>(3), _canSkipShift_T_194) @[build/NutShell.fir.opt.mlir 13930:34]
        node _canSkipShift_T_196 = bits(canSkipShift_lo_29, 3, 3) @[build/NutShell.fir.opt.mlir 13932:34]
        node _canSkipShift_T_197 = bits(canSkipShift_lo_29, 2, 2) @[build/NutShell.fir.opt.mlir 13934:34]
        node _canSkipShift_T_198 = bits(canSkipShift_lo_29, 1, 1) @[build/NutShell.fir.opt.mlir 13936:34]
        node _canSkipShift_T_199 = mux(_canSkipShift_T_197, UInt<2>(2), _canSkipShift_T_198) @[build/NutShell.fir.opt.mlir 13938:34]
        node _canSkipShift_T_200 = mux(_canSkipShift_T_196, UInt<2>(3), _canSkipShift_T_199) @[build/NutShell.fir.opt.mlir 13940:34]
        node _canSkipShift_T_201 = mux(canSkipShift_useHi_29, _canSkipShift_T_195, _canSkipShift_T_200) @[build/NutShell.fir.opt.mlir 13942:34]
        node _canSkipShift_T_202 = cat(canSkipShift_useHi_29, _canSkipShift_T_201) @[build/NutShell.fir.opt.mlir 13944:34]
        node canSkipShift_hi_30 = bits(canSkipShift_lo_28, 7, 4) @[build/NutShell.fir.opt.mlir 13946:33]
        node canSkipShift_lo_30 = bits(canSkipShift_lo_28, 3, 0) @[build/NutShell.fir.opt.mlir 13948:33]
        node canSkipShift_useHi_30 = orr(canSkipShift_hi_30) @[build/NutShell.fir.opt.mlir 13950:36]
        node _canSkipShift_T_203 = bits(canSkipShift_hi_30, 3, 3) @[build/NutShell.fir.opt.mlir 13952:34]
        node _canSkipShift_T_204 = bits(canSkipShift_hi_30, 2, 2) @[build/NutShell.fir.opt.mlir 13954:34]
        node _canSkipShift_T_205 = bits(canSkipShift_hi_30, 1, 1) @[build/NutShell.fir.opt.mlir 13956:34]
        node _canSkipShift_T_206 = mux(_canSkipShift_T_204, UInt<2>(2), _canSkipShift_T_205) @[build/NutShell.fir.opt.mlir 13958:34]
        node _canSkipShift_T_207 = mux(_canSkipShift_T_203, UInt<2>(3), _canSkipShift_T_206) @[build/NutShell.fir.opt.mlir 13960:34]
        node _canSkipShift_T_208 = bits(canSkipShift_lo_30, 3, 3) @[build/NutShell.fir.opt.mlir 13962:34]
        node _canSkipShift_T_209 = bits(canSkipShift_lo_30, 2, 2) @[build/NutShell.fir.opt.mlir 13964:34]
        node _canSkipShift_T_210 = bits(canSkipShift_lo_30, 1, 1) @[build/NutShell.fir.opt.mlir 13966:34]
        node _canSkipShift_T_211 = mux(_canSkipShift_T_209, UInt<2>(2), _canSkipShift_T_210) @[build/NutShell.fir.opt.mlir 13968:34]
        node _canSkipShift_T_212 = mux(_canSkipShift_T_208, UInt<2>(3), _canSkipShift_T_211) @[build/NutShell.fir.opt.mlir 13970:34]
        node _canSkipShift_T_213 = mux(canSkipShift_useHi_30, _canSkipShift_T_207, _canSkipShift_T_212) @[build/NutShell.fir.opt.mlir 13972:34]
        node _canSkipShift_T_214 = cat(canSkipShift_useHi_30, _canSkipShift_T_213) @[build/NutShell.fir.opt.mlir 13974:34]
        node _canSkipShift_T_215 = mux(canSkipShift_useHi_28, _canSkipShift_T_202, _canSkipShift_T_214) @[build/NutShell.fir.opt.mlir 13976:34]
        node _canSkipShift_T_216 = cat(canSkipShift_useHi_28, _canSkipShift_T_215) @[build/NutShell.fir.opt.mlir 13978:34]
        node _canSkipShift_T_217 = mux(canSkipShift_useHi_24, _canSkipShift_T_190, _canSkipShift_T_216) @[build/NutShell.fir.opt.mlir 13980:34]
        node _canSkipShift_T_218 = cat(canSkipShift_useHi_24, _canSkipShift_T_217) @[build/NutShell.fir.opt.mlir 13982:34]
        node _canSkipShift_T_219 = mux(canSkipShift_useHi_16, _canSkipShift_T_164, _canSkipShift_T_218) @[build/NutShell.fir.opt.mlir 13984:34]
        node _canSkipShift_T_220 = cat(canSkipShift_useHi_16, _canSkipShift_T_219) @[build/NutShell.fir.opt.mlir 13986:34]
        node _canSkipShift_T_221 = mux(canSkipShift_useHi_15, UInt<1>(0), _canSkipShift_T_220) @[build/NutShell.fir.opt.mlir 13988:34]
        node _canSkipShift_T_222 = cat(canSkipShift_useHi_15, _canSkipShift_T_221) @[build/NutShell.fir.opt.mlir 13990:34]
        node _canSkipShift_T_223 = sub(_canSkipShift_T_110, _canSkipShift_T_222) @[build/NutShell.fir.opt.mlir 13992:34]
        node canSkipShift = tail(_canSkipShift_T_223, 1) @[build/NutShell.fir.opt.mlir 13994:27]
        node _value_T = geq(canSkipShift, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 13996:23]
        node _value_T_1 = mux(_value_T, UInt<6>(63), canSkipShift) @[build/NutShell.fir.opt.mlir 13998:25]
        node _value_T_2 = mux(divBy0, UInt<1>(0), _value_T_1) @[build/NutShell.fir.opt.mlir 14000:25]
        connect cnt_value, tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 14002:11]
        connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 14004:11]
      else :
        node _T_5 = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 14007:19]
        when _T_5 : @[build/NutShell.fir.opt.mlir 14008:11]
          node _shiftReg_T = dshl(aValx2Reg, cnt_value) @[build/NutShell.fir.opt.mlir 14010:28]
          connect shiftReg, pad(_shiftReg_T, 129) @[build/NutShell.fir.opt.mlir 14012:13]
          connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 14014:13]
        else :
          node _T_6 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 14017:21]
          when _T_6 : @[build/NutShell.fir.opt.mlir 14018:13]
            node enough = geq(hi, bReg) @[build/NutShell.fir.opt.mlir 14020:25]
            node _shiftReg_T_1 = sub(hi, bReg) @[build/NutShell.fir.opt.mlir 14022:32]
            node _shiftReg_T_2 = tail(_shiftReg_T_1, 1) @[build/NutShell.fir.opt.mlir 14024:32]
            node _shiftReg_T_3 = mux(enough, _shiftReg_T_2, hi) @[build/NutShell.fir.opt.mlir 14026:32]
            node _shiftReg_T_4 = bits(_shiftReg_T_3, 63, 0) @[build/NutShell.fir.opt.mlir 14028:32]
            node shiftReg_hi = cat(_shiftReg_T_4, lo) @[build/NutShell.fir.opt.mlir 14030:30]
            node _shiftReg_T_5 = cat(shiftReg_hi, enough) @[build/NutShell.fir.opt.mlir 14032:32]
            connect shiftReg, _shiftReg_T_5 @[build/NutShell.fir.opt.mlir 14033:15]
            node wrap = eq(cnt_value, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 14035:23]
            node _value_T_3 = add(cnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 14037:29]
            node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 14039:29]
            connect cnt_value, _value_T_4 @[build/NutShell.fir.opt.mlir 14040:15]
            node _T_7 = eq(cnt_value, UInt<6>(63)) @[build/NutShell.fir.opt.mlir 14042:23]
            when _T_7 : @[build/NutShell.fir.opt.mlir 14043:15]
              connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 14045:17]
          else :
            node _T_8 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 14049:23]
            when _T_8 : @[build/NutShell.fir.opt.mlir 14050:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 14052:17]
    node r = bits(hi, 64, 1) @[build/NutShell.fir.opt.mlir 14059:12]
    node _resQ_T = sub(UInt<1>(0), lo) @[build/NutShell.fir.opt.mlir 14061:18]
    node _resQ_T_1 = tail(_resQ_T, 1) @[build/NutShell.fir.opt.mlir 14063:20]
    node resQ = mux(qSignReg, _resQ_T_1, lo) @[build/NutShell.fir.opt.mlir 14065:15]
    node _resR_T = sub(UInt<1>(0), r) @[build/NutShell.fir.opt.mlir 14067:18]
    node _resR_T_1 = tail(_resR_T, 1) @[build/NutShell.fir.opt.mlir 14069:20]
    node resR = mux(aSignReg, _resR_T_1, r) @[build/NutShell.fir.opt.mlir 14071:15]
    node _io_out_bits_T = cat(resR, resQ) @[build/NutShell.fir.opt.mlir 14073:25]
    connect io.out.bits, _io_out_bits_T @[build/NutShell.fir.opt.mlir 14074:7]
    node _io_out_valid_T = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 14076:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 14077:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 14079:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 14080:7]

  extmodule LogPerfHelper_15 : @[build/NutShell.fir.opt.mlir 14082:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 14082:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 14082:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 14082:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 14082:141]
    defname = LogPerfHelper

  module MDU : @[build/NutShell.fir.opt.mlir 14083:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14083:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14083:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> } } @[build/NutShell.fir.opt.mlir 14083:88]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14083:294]

    node isDiv = bits(io.in.bits.func, 2, 2) @[build/NutShell.fir.opt.mlir 14096:16]
    node _isDivSign_T = bits(io.in.bits.func, 2, 2) @[build/NutShell.fir.opt.mlir 14098:23]
    node _isDivSign_T_1 = bits(io.in.bits.func, 0, 0) @[build/NutShell.fir.opt.mlir 14100:25]
    node _isDivSign_T_2 = eq(_isDivSign_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14103:25]
    node isDivSign = and(_isDivSign_T, _isDivSign_T_2) @[build/NutShell.fir.opt.mlir 14105:20]
    node isW = bits(io.in.bits.func, 3, 3) @[build/NutShell.fir.opt.mlir 14107:14]
    inst mul of Multiplier @[build/NutShell.fir.opt.mlir 14108:41]
    connect mul.clock, clock @[build/NutShell.fir.opt.mlir 14120:7]
    connect mul.reset, reset @[build/NutShell.fir.opt.mlir 14121:7]
    inst div of Divider @[build/NutShell.fir.opt.mlir 14122:41]
    connect div.clock, clock @[build/NutShell.fir.opt.mlir 14134:7]
    connect div.reset, reset @[build/NutShell.fir.opt.mlir 14135:7]
    connect mul.io.sign, isDivSign @[build/NutShell.fir.opt.mlir 14136:7]
    connect mul.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 14137:7]
    connect div.io.sign, isDivSign @[build/NutShell.fir.opt.mlir 14138:7]
    connect div.io.out.ready, io.out.ready @[build/NutShell.fir.opt.mlir 14139:7]
    node _mul_io_in_bits_0_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14141:30]
    node _mul_io_in_bits_0_T_1 = cat(UInt<1>(0), io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14143:32]
    node mul_io_in_bits_0_signBit = bits(io.in.bits.src1, 63, 63) @[build/NutShell.fir.opt.mlir 14145:35]
    node _mul_io_in_bits_0_T_2 = cat(mul_io_in_bits_0_signBit, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14147:32]
    node mul_io_in_bits_0_signBit_1 = bits(io.in.bits.src1, 63, 63) @[build/NutShell.fir.opt.mlir 14149:37]
    node _mul_io_in_bits_0_T_3 = cat(mul_io_in_bits_0_signBit_1, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14151:32]
    node _mul_io_in_bits_0_T_4 = cat(UInt<1>(0), io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14153:32]
    node _mul_io_in_bits_0_T_5 = eq(UInt<2>(0), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14156:32]
    node _mul_io_in_bits_0_T_6 = eq(UInt<2>(1), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14159:32]
    node _mul_io_in_bits_0_T_7 = eq(UInt<2>(2), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14162:32]
    node _mul_io_in_bits_0_T_8 = eq(UInt<2>(3), _mul_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14165:32]
    node _mul_io_in_bits_0_T_9 = mux(_mul_io_in_bits_0_T_5, _mul_io_in_bits_0_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14167:32]
    node _mul_io_in_bits_0_T_10 = mux(_mul_io_in_bits_0_T_6, _mul_io_in_bits_0_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14169:33]
    node _mul_io_in_bits_0_T_11 = mux(_mul_io_in_bits_0_T_7, _mul_io_in_bits_0_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14171:33]
    node _mul_io_in_bits_0_T_12 = mux(_mul_io_in_bits_0_T_8, _mul_io_in_bits_0_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14173:33]
    node _mul_io_in_bits_0_T_13 = or(_mul_io_in_bits_0_T_9, _mul_io_in_bits_0_T_10) @[build/NutShell.fir.opt.mlir 14175:33]
    node _mul_io_in_bits_0_T_14 = or(_mul_io_in_bits_0_T_13, _mul_io_in_bits_0_T_11) @[build/NutShell.fir.opt.mlir 14177:33]
    node _mul_io_in_bits_0_T_15 = or(_mul_io_in_bits_0_T_14, _mul_io_in_bits_0_T_12) @[build/NutShell.fir.opt.mlir 14179:33]
    wire _mul_io_in_bits_0_WIRE : UInt<65> @[build/NutShell.fir.opt.mlir 14180:33]
    connect _mul_io_in_bits_0_WIRE, _mul_io_in_bits_0_T_15 @[build/NutShell.fir.opt.mlir 14181:7]
    connect mul.io.in.bits[0], _mul_io_in_bits_0_WIRE @[build/NutShell.fir.opt.mlir 14182:7]
    node _mul_io_in_bits_1_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14184:30]
    node _mul_io_in_bits_1_T_1 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14186:32]
    node mul_io_in_bits_1_signBit = bits(io.in.bits.src2, 63, 63) @[build/NutShell.fir.opt.mlir 14188:35]
    node _mul_io_in_bits_1_T_2 = cat(mul_io_in_bits_1_signBit, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14190:32]
    node _mul_io_in_bits_1_T_3 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14192:32]
    node _mul_io_in_bits_1_T_4 = cat(UInt<1>(0), io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14194:32]
    node _mul_io_in_bits_1_T_5 = eq(UInt<2>(0), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14196:32]
    node _mul_io_in_bits_1_T_6 = eq(UInt<2>(1), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14198:32]
    node _mul_io_in_bits_1_T_7 = eq(UInt<2>(2), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14200:32]
    node _mul_io_in_bits_1_T_8 = eq(UInt<2>(3), _mul_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14202:32]
    node _mul_io_in_bits_1_T_9 = mux(_mul_io_in_bits_1_T_5, _mul_io_in_bits_1_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14204:32]
    node _mul_io_in_bits_1_T_10 = mux(_mul_io_in_bits_1_T_6, _mul_io_in_bits_1_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14206:33]
    node _mul_io_in_bits_1_T_11 = mux(_mul_io_in_bits_1_T_7, _mul_io_in_bits_1_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14208:33]
    node _mul_io_in_bits_1_T_12 = mux(_mul_io_in_bits_1_T_8, _mul_io_in_bits_1_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14210:33]
    node _mul_io_in_bits_1_T_13 = or(_mul_io_in_bits_1_T_9, _mul_io_in_bits_1_T_10) @[build/NutShell.fir.opt.mlir 14212:33]
    node _mul_io_in_bits_1_T_14 = or(_mul_io_in_bits_1_T_13, _mul_io_in_bits_1_T_11) @[build/NutShell.fir.opt.mlir 14214:33]
    node _mul_io_in_bits_1_T_15 = or(_mul_io_in_bits_1_T_14, _mul_io_in_bits_1_T_12) @[build/NutShell.fir.opt.mlir 14216:33]
    wire _mul_io_in_bits_1_WIRE : UInt<65> @[build/NutShell.fir.opt.mlir 14217:33]
    connect _mul_io_in_bits_1_WIRE, _mul_io_in_bits_1_T_15 @[build/NutShell.fir.opt.mlir 14218:7]
    connect mul.io.in.bits[1], _mul_io_in_bits_1_WIRE @[build/NutShell.fir.opt.mlir 14219:7]
    node _div_io_in_bits_0_T = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 14221:30]
    node div_io_in_bits_0_signBit = bits(_div_io_in_bits_0_T, 31, 31) @[build/NutShell.fir.opt.mlir 14223:35]
    node _div_io_in_bits_0_T_1 = mux(div_io_in_bits_0_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14227:32]
    node _div_io_in_bits_0_T_2 = cat(_div_io_in_bits_0_T_1, _div_io_in_bits_0_T) @[build/NutShell.fir.opt.mlir 14229:32]
    node _div_io_in_bits_0_T_3 = bits(io.in.bits.src1, 31, 0) @[build/NutShell.fir.opt.mlir 14231:32]
    node _div_io_in_bits_0_T_4 = cat(UInt<32>(0), _div_io_in_bits_0_T_3) @[build/NutShell.fir.opt.mlir 14233:32]
    node _div_io_in_bits_0_T_5 = mux(isDivSign, _div_io_in_bits_0_T_2, _div_io_in_bits_0_T_4) @[build/NutShell.fir.opt.mlir 14235:32]
    node _div_io_in_bits_0_T_6 = mux(isW, _div_io_in_bits_0_T_5, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 14237:32]
    connect div.io.in.bits[0], _div_io_in_bits_0_T_6 @[build/NutShell.fir.opt.mlir 14238:7]
    node _div_io_in_bits_1_T = bits(io.in.bits.src2, 31, 0) @[build/NutShell.fir.opt.mlir 14240:30]
    node div_io_in_bits_1_signBit = bits(_div_io_in_bits_1_T, 31, 31) @[build/NutShell.fir.opt.mlir 14242:35]
    node _div_io_in_bits_1_T_1 = mux(div_io_in_bits_1_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14244:32]
    node _div_io_in_bits_1_T_2 = cat(_div_io_in_bits_1_T_1, _div_io_in_bits_1_T) @[build/NutShell.fir.opt.mlir 14246:32]
    node _div_io_in_bits_1_T_3 = bits(io.in.bits.src2, 31, 0) @[build/NutShell.fir.opt.mlir 14248:32]
    node _div_io_in_bits_1_T_4 = cat(UInt<32>(0), _div_io_in_bits_1_T_3) @[build/NutShell.fir.opt.mlir 14250:32]
    node _div_io_in_bits_1_T_5 = mux(isDivSign, _div_io_in_bits_1_T_2, _div_io_in_bits_1_T_4) @[build/NutShell.fir.opt.mlir 14252:32]
    node _div_io_in_bits_1_T_6 = mux(isW, _div_io_in_bits_1_T_5, io.in.bits.src2) @[build/NutShell.fir.opt.mlir 14254:32]
    connect div.io.in.bits[1], _div_io_in_bits_1_T_6 @[build/NutShell.fir.opt.mlir 14255:7]
    node _mul_io_in_valid_T = eq(isDiv, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14257:29]
    node _mul_io_in_valid_T_1 = and(io.in.valid, _mul_io_in_valid_T) @[build/NutShell.fir.opt.mlir 14259:31]
    connect mul.io.in.valid, _mul_io_in_valid_T_1 @[build/NutShell.fir.opt.mlir 14260:7]
    node _div_io_in_valid_T = and(io.in.valid, isDiv) @[build/NutShell.fir.opt.mlir 14262:29]
    connect div.io.in.valid, _div_io_in_valid_T @[build/NutShell.fir.opt.mlir 14263:7]
    node _mulRes_T = bits(io.in.bits.func, 1, 0) @[build/NutShell.fir.opt.mlir 14265:20]
    node _mulRes_T_1 = eq(_mulRes_T, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 14267:22]
    node _mulRes_T_2 = bits(mul.io.out.bits, 63, 0) @[build/NutShell.fir.opt.mlir 14269:22]
    node _mulRes_T_3 = bits(mul.io.out.bits, 127, 64) @[build/NutShell.fir.opt.mlir 14271:22]
    node mulRes = mux(_mulRes_T_1, _mulRes_T_2, _mulRes_T_3) @[build/NutShell.fir.opt.mlir 14273:17]
    node _divRes_T = bits(io.in.bits.func, 1, 1) @[build/NutShell.fir.opt.mlir 14275:20]
    node _divRes_T_1 = bits(div.io.out.bits, 127, 64) @[build/NutShell.fir.opt.mlir 14277:22]
    node _divRes_T_2 = bits(div.io.out.bits, 63, 0) @[build/NutShell.fir.opt.mlir 14279:22]
    node divRes = mux(_divRes_T, _divRes_T_1, _divRes_T_2) @[build/NutShell.fir.opt.mlir 14281:17]
    node res = mux(isDiv, divRes, mulRes) @[build/NutShell.fir.opt.mlir 14283:14]
    node _io_out_bits_T = bits(res, 31, 0) @[build/NutShell.fir.opt.mlir 14285:25]
    node io_out_bits_signBit = bits(_io_out_bits_T, 31, 31) @[build/NutShell.fir.opt.mlir 14287:30]
    node _io_out_bits_T_1 = mux(io_out_bits_signBit, UInt<32>(4294967295), UInt<32>(0)) @[build/NutShell.fir.opt.mlir 14289:27]
    node _io_out_bits_T_2 = cat(_io_out_bits_T_1, _io_out_bits_T) @[build/NutShell.fir.opt.mlir 14291:27]
    node _io_out_bits_T_3 = mux(isW, _io_out_bits_T_2, res) @[build/NutShell.fir.opt.mlir 14293:27]
    connect io.out.bits, _io_out_bits_T_3 @[build/NutShell.fir.opt.mlir 14294:7]
    node _isDivReg_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 14296:22]
    reg isDivReg_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 14297:23]
    connect isDivReg_REG, isDiv @[build/NutShell.fir.opt.mlir 14298:7]
    node isDivReg = mux(_isDivReg_T, isDiv, isDivReg_REG) @[build/NutShell.fir.opt.mlir 14300:19]
    node _io_in_ready_T = mux(isDiv, div.io.in.ready, mul.io.in.ready) @[build/NutShell.fir.opt.mlir 14302:25]
    connect io.in.ready, _io_in_ready_T @[build/NutShell.fir.opt.mlir 14303:7]
    node _io_out_valid_T = mux(isDivReg, div.io.out.valid, mul.io.out.valid) @[build/NutShell.fir.opt.mlir 14305:26]
    connect io.out.valid, _io_out_valid_T @[build/NutShell.fir.opt.mlir 14306:7]
    inst LogPerfHelper of LogPerfHelper_15 @[build/NutShell.fir.opt.mlir 14307:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 14308:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 14313:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 14314:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 14315:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 14316:7]
    node _T = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 14319:13]
    when _T : @[build/NutShell.fir.opt.mlir 14320:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 14322:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14324:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 14325:9]
        skip @[build/NutShell.fir.opt.mlir 14326:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 14329:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 14331:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 14332:9]
        skip @[build/NutShell.fir.opt.mlir 14333:11]
    node _T_5 = and(mul.io.out.ready, mul.io.out.valid) @[build/NutShell.fir.opt.mlir 14337:15]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 14338:16]
    connect _WIRE, _T_5 @[build/NutShell.fir.opt.mlir 14339:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 14340:7]

  extmodule LogPerfHelper_16 : @[build/NutShell.fir.opt.mlir 14342:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 14342:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 14342:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 14342:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 14342:141]
    defname = LogPerfHelper

  extmodule DifftestCSRState : @[build/NutShell.fir.opt.mlir 14343:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14343:51]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 14343:76]
    input io : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14343:104]
    defname = DifftestCSRState

  module DummyDPICWrapper_1 : @[build/NutShell.fir.opt.mlir 14344:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14344:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14344:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14344:102]
    input io : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14344:148]

    inst dpic of DifftestCSRState @[build/NutShell.fir.opt.mlir 14365:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 14385:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 14388:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 14389:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 14390:7]
    connect dpic.io.medeleg, io.medeleg @[build/NutShell.fir.opt.mlir 14391:7]
    connect dpic.io.mideleg, io.mideleg @[build/NutShell.fir.opt.mlir 14392:7]
    connect dpic.io.sscratch, io.sscratch @[build/NutShell.fir.opt.mlir 14393:7]
    connect dpic.io.mscratch, io.mscratch @[build/NutShell.fir.opt.mlir 14394:7]
    connect dpic.io.mie, io.mie @[build/NutShell.fir.opt.mlir 14395:7]
    connect dpic.io.mip, io.mip @[build/NutShell.fir.opt.mlir 14396:7]
    connect dpic.io.satp, io.satp @[build/NutShell.fir.opt.mlir 14397:7]
    connect dpic.io.scause, io.scause @[build/NutShell.fir.opt.mlir 14398:7]
    connect dpic.io.mcause, io.mcause @[build/NutShell.fir.opt.mlir 14399:7]
    connect dpic.io.stvec, io.stvec @[build/NutShell.fir.opt.mlir 14400:7]
    connect dpic.io.mtvec, io.mtvec @[build/NutShell.fir.opt.mlir 14401:7]
    connect dpic.io.stval, io.stval @[build/NutShell.fir.opt.mlir 14402:7]
    connect dpic.io.mtval, io.mtval @[build/NutShell.fir.opt.mlir 14403:7]
    connect dpic.io.sepc, io.sepc @[build/NutShell.fir.opt.mlir 14404:7]
    connect dpic.io.mepc, io.mepc @[build/NutShell.fir.opt.mlir 14405:7]
    connect dpic.io.sstatus, io.sstatus @[build/NutShell.fir.opt.mlir 14406:7]
    connect dpic.io.mstatus, io.mstatus @[build/NutShell.fir.opt.mlir 14407:7]
    connect dpic.io.privilegeMode, io.privilegeMode @[build/NutShell.fir.opt.mlir 14408:7]

  extmodule DifftestArchEvent : @[build/NutShell.fir.opt.mlir 14410:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14410:52]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 14410:77]
    input io : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14410:105]
    defname = DifftestArchEvent

  module DummyDPICWrapper_2 : @[build/NutShell.fir.opt.mlir 14411:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14411:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14411:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14411:102]
    input io : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14411:148]

    inst dpic of DifftestArchEvent @[build/NutShell.fir.opt.mlir 14419:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 14426:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 14428:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 14429:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 14430:7]
    connect dpic.io.exceptionInst, io.exceptionInst @[build/NutShell.fir.opt.mlir 14431:7]
    connect dpic.io.exceptionPC, io.exceptionPC @[build/NutShell.fir.opt.mlir 14432:7]
    connect dpic.io.exception, io.exception @[build/NutShell.fir.opt.mlir 14433:7]
    connect dpic.io.interrupt, io.interrupt @[build/NutShell.fir.opt.mlir 14434:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 14435:7]

  module CSRDiffWrapper : @[build/NutShell.fir.opt.mlir 14437:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14437:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14437:72]
    output io : { flip csrState : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> }, flip archEvent : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } } @[build/NutShell.fir.opt.mlir 14437:99]

    wire difftest : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14465:19]
    wire _difftest_sink_bundle_WIRE : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14467:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 14489:7]
    connect _difftest_sink_bundle_WIRE.medeleg, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14492:7]
    connect _difftest_sink_bundle_WIRE.mideleg, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14494:7]
    connect _difftest_sink_bundle_WIRE.sscratch, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14496:7]
    connect _difftest_sink_bundle_WIRE.mscratch, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14498:7]
    connect _difftest_sink_bundle_WIRE.mie, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14500:7]
    connect _difftest_sink_bundle_WIRE.mip, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14502:7]
    connect _difftest_sink_bundle_WIRE.satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14504:7]
    connect _difftest_sink_bundle_WIRE.scause, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14506:7]
    connect _difftest_sink_bundle_WIRE.mcause, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14508:7]
    connect _difftest_sink_bundle_WIRE.stvec, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14510:7]
    connect _difftest_sink_bundle_WIRE.mtvec, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14512:7]
    connect _difftest_sink_bundle_WIRE.stval, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14514:7]
    connect _difftest_sink_bundle_WIRE.mtval, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14516:7]
    connect _difftest_sink_bundle_WIRE.sepc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14518:7]
    connect _difftest_sink_bundle_WIRE.mepc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14520:7]
    connect _difftest_sink_bundle_WIRE.sstatus, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14522:7]
    connect _difftest_sink_bundle_WIRE.mstatus, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14524:7]
    connect _difftest_sink_bundle_WIRE.privilegeMode, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14526:7]
    wire difftest_sink : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14527:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 14547:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14548:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14552:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14553:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 14555:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 14558:7]
    inst difftest_sink_module of DummyDPICWrapper_1 @[build/NutShell.fir.opt.mlir 14559:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 14580:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 14581:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 14582:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 14583:7]
    connect difftest_sink_module.io.medeleg, difftest_sink.medeleg @[build/NutShell.fir.opt.mlir 14584:7]
    connect difftest_sink_module.io.mideleg, difftest_sink.mideleg @[build/NutShell.fir.opt.mlir 14585:7]
    connect difftest_sink_module.io.sscratch, difftest_sink.sscratch @[build/NutShell.fir.opt.mlir 14586:7]
    connect difftest_sink_module.io.mscratch, difftest_sink.mscratch @[build/NutShell.fir.opt.mlir 14587:7]
    connect difftest_sink_module.io.mie, difftest_sink.mie @[build/NutShell.fir.opt.mlir 14588:7]
    connect difftest_sink_module.io.mip, difftest_sink.mip @[build/NutShell.fir.opt.mlir 14589:7]
    connect difftest_sink_module.io.satp, difftest_sink.satp @[build/NutShell.fir.opt.mlir 14590:7]
    connect difftest_sink_module.io.scause, difftest_sink.scause @[build/NutShell.fir.opt.mlir 14591:7]
    connect difftest_sink_module.io.mcause, difftest_sink.mcause @[build/NutShell.fir.opt.mlir 14592:7]
    connect difftest_sink_module.io.stvec, difftest_sink.stvec @[build/NutShell.fir.opt.mlir 14593:7]
    connect difftest_sink_module.io.mtvec, difftest_sink.mtvec @[build/NutShell.fir.opt.mlir 14594:7]
    connect difftest_sink_module.io.stval, difftest_sink.stval @[build/NutShell.fir.opt.mlir 14595:7]
    connect difftest_sink_module.io.mtval, difftest_sink.mtval @[build/NutShell.fir.opt.mlir 14596:7]
    connect difftest_sink_module.io.sepc, difftest_sink.sepc @[build/NutShell.fir.opt.mlir 14597:7]
    connect difftest_sink_module.io.mepc, difftest_sink.mepc @[build/NutShell.fir.opt.mlir 14598:7]
    connect difftest_sink_module.io.sstatus, difftest_sink.sstatus @[build/NutShell.fir.opt.mlir 14599:7]
    connect difftest_sink_module.io.mstatus, difftest_sink.mstatus @[build/NutShell.fir.opt.mlir 14600:7]
    connect difftest_sink_module.io.privilegeMode, difftest_sink.privilegeMode @[build/NutShell.fir.opt.mlir 14601:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 14602:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 14603:7]
    reg difftest_REG : { privilegeMode : UInt<64>, mstatus : UInt<64>, sstatus : UInt<64>, mepc : UInt<64>, sepc : UInt<64>, mtval : UInt<64>, stval : UInt<64>, mtvec : UInt<64>, stvec : UInt<64>, mcause : UInt<64>, scause : UInt<64>, satp : UInt<64>, mip : UInt<64>, mie : UInt<64>, mscratch : UInt<64>, sscratch : UInt<64>, mideleg : UInt<64>, medeleg : UInt<64>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14604:23]
    connect difftest_REG.coreid, io.csrState.coreid @[build/NutShell.fir.opt.mlir 14624:7]
    connect difftest_REG.medeleg, io.csrState.medeleg @[build/NutShell.fir.opt.mlir 14625:7]
    connect difftest_REG.mideleg, io.csrState.mideleg @[build/NutShell.fir.opt.mlir 14626:7]
    connect difftest_REG.sscratch, io.csrState.sscratch @[build/NutShell.fir.opt.mlir 14627:7]
    connect difftest_REG.mscratch, io.csrState.mscratch @[build/NutShell.fir.opt.mlir 14628:7]
    connect difftest_REG.mie, io.csrState.mie @[build/NutShell.fir.opt.mlir 14629:7]
    connect difftest_REG.mip, io.csrState.mip @[build/NutShell.fir.opt.mlir 14630:7]
    connect difftest_REG.satp, io.csrState.satp @[build/NutShell.fir.opt.mlir 14631:7]
    connect difftest_REG.scause, io.csrState.scause @[build/NutShell.fir.opt.mlir 14632:7]
    connect difftest_REG.mcause, io.csrState.mcause @[build/NutShell.fir.opt.mlir 14633:7]
    connect difftest_REG.stvec, io.csrState.stvec @[build/NutShell.fir.opt.mlir 14634:7]
    connect difftest_REG.mtvec, io.csrState.mtvec @[build/NutShell.fir.opt.mlir 14635:7]
    connect difftest_REG.stval, io.csrState.stval @[build/NutShell.fir.opt.mlir 14636:7]
    connect difftest_REG.mtval, io.csrState.mtval @[build/NutShell.fir.opt.mlir 14637:7]
    connect difftest_REG.sepc, io.csrState.sepc @[build/NutShell.fir.opt.mlir 14638:7]
    connect difftest_REG.mepc, io.csrState.mepc @[build/NutShell.fir.opt.mlir 14639:7]
    connect difftest_REG.sstatus, io.csrState.sstatus @[build/NutShell.fir.opt.mlir 14640:7]
    connect difftest_REG.mstatus, io.csrState.mstatus @[build/NutShell.fir.opt.mlir 14641:7]
    connect difftest_REG.privilegeMode, io.csrState.privilegeMode @[build/NutShell.fir.opt.mlir 14642:7]
    connect difftest, difftest_REG @[build/NutShell.fir.opt.mlir 14643:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 14646:7]
    wire difftestArchEvent : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14647:28]
    wire _difftestArchEvent_sink_bundle_WIRE : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14649:46]
    connect _difftestArchEvent_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 14657:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exceptionInst, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14660:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exceptionPC, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14662:7]
    connect _difftestArchEvent_sink_bundle_WIRE.exception, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14664:7]
    connect _difftestArchEvent_sink_bundle_WIRE.interrupt, UInt<32>(0) @[build/NutShell.fir.opt.mlir 14666:7]
    connect _difftestArchEvent_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14668:7]
    wire difftestArchEvent_sink : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 14669:33]
    connect difftestArchEvent_sink, _difftestArchEvent_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 14676:7]
    wire _difftestArchEvent_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14677:47]
    connect _difftestArchEvent_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14680:7]
    wire difftestArchEvent_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 14681:41]
    connect difftestArchEvent_sink_control, _difftestArchEvent_sink_control_WIRE @[build/NutShell.fir.opt.mlir 14683:7]
    connect difftestArchEvent_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 14685:7]
    inst difftestArchEvent_sink_module of DummyDPICWrapper_2 @[build/NutShell.fir.opt.mlir 14686:159]
    connect difftestArchEvent_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 14694:7]
    connect difftestArchEvent_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 14695:7]
    connect difftestArchEvent_sink_module.control.enable, difftestArchEvent_sink_control.enable @[build/NutShell.fir.opt.mlir 14696:7]
    connect difftestArchEvent_sink_module.io.coreid, difftestArchEvent_sink.coreid @[build/NutShell.fir.opt.mlir 14697:7]
    connect difftestArchEvent_sink_module.io.exceptionInst, difftestArchEvent_sink.exceptionInst @[build/NutShell.fir.opt.mlir 14698:7]
    connect difftestArchEvent_sink_module.io.exceptionPC, difftestArchEvent_sink.exceptionPC @[build/NutShell.fir.opt.mlir 14699:7]
    connect difftestArchEvent_sink_module.io.exception, difftestArchEvent_sink.exception @[build/NutShell.fir.opt.mlir 14700:7]
    connect difftestArchEvent_sink_module.io.interrupt, difftestArchEvent_sink.interrupt @[build/NutShell.fir.opt.mlir 14701:7]
    connect difftestArchEvent_sink_module.io.valid, difftestArchEvent_sink.valid @[build/NutShell.fir.opt.mlir 14702:7]
    connect difftestArchEvent_sink, difftestArchEvent @[build/NutShell.fir.opt.mlir 14703:7]
    connect difftestArchEvent_sink.coreid, difftestArchEvent.coreid @[build/NutShell.fir.opt.mlir 14704:7]
    reg difftestArchEvent_REG : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14705:32]
    connect difftestArchEvent_REG.coreid, io.archEvent.coreid @[build/NutShell.fir.opt.mlir 14712:7]
    connect difftestArchEvent_REG.exceptionInst, io.archEvent.exceptionInst @[build/NutShell.fir.opt.mlir 14713:7]
    connect difftestArchEvent_REG.exceptionPC, io.archEvent.exceptionPC @[build/NutShell.fir.opt.mlir 14714:7]
    connect difftestArchEvent_REG.exception, io.archEvent.exception @[build/NutShell.fir.opt.mlir 14715:7]
    connect difftestArchEvent_REG.interrupt, io.archEvent.interrupt @[build/NutShell.fir.opt.mlir 14716:7]
    connect difftestArchEvent_REG.valid, io.archEvent.valid @[build/NutShell.fir.opt.mlir 14717:7]
    reg difftestArchEvent_REG_1 : { valid : UInt<1>, interrupt : UInt<32>, exception : UInt<32>, exceptionPC : UInt<64>, exceptionInst : UInt<32>, coreid : UInt<8> }, clock @[build/NutShell.fir.opt.mlir 14718:34]
    connect difftestArchEvent_REG_1.coreid, difftestArchEvent_REG.coreid @[build/NutShell.fir.opt.mlir 14725:7]
    connect difftestArchEvent_REG_1.exceptionInst, difftestArchEvent_REG.exceptionInst @[build/NutShell.fir.opt.mlir 14726:7]
    connect difftestArchEvent_REG_1.exceptionPC, difftestArchEvent_REG.exceptionPC @[build/NutShell.fir.opt.mlir 14727:7]
    connect difftestArchEvent_REG_1.exception, difftestArchEvent_REG.exception @[build/NutShell.fir.opt.mlir 14728:7]
    connect difftestArchEvent_REG_1.interrupt, difftestArchEvent_REG.interrupt @[build/NutShell.fir.opt.mlir 14729:7]
    connect difftestArchEvent_REG_1.valid, difftestArchEvent_REG.valid @[build/NutShell.fir.opt.mlir 14730:7]
    connect difftestArchEvent, difftestArchEvent_REG_1 @[build/NutShell.fir.opt.mlir 14731:7]
    connect difftestArchEvent.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 14734:7]

  module CSR : @[build/NutShell.fir.opt.mlir 14736:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 14736:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 14736:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, flip instrValid : UInt<1>, flip isBackendException : UInt<1>, intrNO : UInt<64>, flip imemMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip dmemMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, wenFix : UInt<1> } @[build/NutShell.fir.opt.mlir 14736:88]
    input perfCntCond_6__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1074]
    input meip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1116]
    input perfCntCond_20__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1149]
    input perfCntCond_14__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1192]
    output _WIRE__bore : UInt @[build/NutShell.fir.opt.mlir 14736:1236]
    output _WIRE__bore_0 : UInt @[build/NutShell.fir.opt.mlir 14736:1268]
    input perfCntCond_29__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1301]
    input perfCntCond_7__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1344]
    input mtip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1386]
    input perfCntCond_28__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1419]
    input lsuAddr__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:1462]
    input perfCntCond_53__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1499]
    output perfCnts_2__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:1543]
    input setLr__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1583]
    input perfCntCond_27__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1617]
    input perfCntCond_19__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1660]
    input perfCntCond_10__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1703]
    input perfCntCond_26__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1746]
    input perfCntCond_18__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1789]
    input msip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1832]
    input setLrVal__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1865]
    input perfCntCond_3__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1902]
    input perfCntCond_51__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1944]
    input perfCntCond_17__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:1987]
    input perfCntCond_32__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2030]
    input nutcoretrap__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2073]
    input perfCntCond_4__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2113]
    input setLrAddr__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:2155]
    input perfCntCond_2__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2194]
    input perfCntCond_16__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2236]
    input perfCntCond_31__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2279]
    input perfCntCond_23__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2322]
    input perfCntCond_25__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2365]
    output perfCnts_0__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:2409]
    input perfCntCond_52__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2449]
    input perfCntCond_8__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2492]
    input perfCntCond_22__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2534]
    output satp__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:2578]
    output satp__bore_0 : UInt<64> @[build/NutShell.fir.opt.mlir 14736:2613]
    input perfCntCond_30__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2649]
    input perfCntCond_11__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2692]
    output lr__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2736]
    input perfCntCond_50__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2767]
    input perfCntCond_5__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2810]
    input perfCntCond_9__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2852]
    input perfCntCond_49__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2894]
    output lrAddr__bore : UInt<64> @[build/NutShell.fir.opt.mlir 14736:2938]
    input perfCntCond_15__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:2974]
    input perfCntCond_21__bore : UInt<1> @[build/NutShell.fir.opt.mlir 14736:3017]

    regreset csrNotImplemented : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14801:28]
    regreset mtvec : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14802:16]
    regreset mcounteren : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14803:21]
    regreset mcause : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14804:17]
    regreset mtval : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14805:16]
    regreset mepc : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14806:15]
    regreset mie : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14808:14]
    wire _mipWire_WIRE : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14809:24]
    connect _mipWire_WIRE.s.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14826:7]
    connect _mipWire_WIRE.s.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14828:7]
    connect _mipWire_WIRE.s.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14830:7]
    connect _mipWire_WIRE.s.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14832:7]
    connect _mipWire_WIRE.t.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14834:7]
    connect _mipWire_WIRE.t.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14836:7]
    connect _mipWire_WIRE.t.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14838:7]
    connect _mipWire_WIRE.t.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14840:7]
    connect _mipWire_WIRE.e.u, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14842:7]
    connect _mipWire_WIRE.e.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14844:7]
    connect _mipWire_WIRE.e.h, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14846:7]
    connect _mipWire_WIRE.e.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14848:7]
    wire mipWire : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14849:18]
    connect mipWire, _mipWire_WIRE @[build/NutShell.fir.opt.mlir 14865:7]
    regreset mipReg : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 14866:17]
    node mip_lo = cat(mipWire.s.s, mipWire.s.u) @[build/NutShell.fir.opt.mlir 14868:17]
    node mip_hi = cat(mipWire.s.m, mipWire.s.h) @[build/NutShell.fir.opt.mlir 14870:17]
    node _mip_T = cat(mip_hi, mip_lo) @[build/NutShell.fir.opt.mlir 14872:17]
    node mip_lo_1 = cat(mipWire.t.s, mipWire.t.u) @[build/NutShell.fir.opt.mlir 14874:19]
    node mip_hi_1 = cat(mipWire.t.m, mipWire.t.h) @[build/NutShell.fir.opt.mlir 14876:19]
    node _mip_T_1 = cat(mip_hi_1, mip_lo_1) @[build/NutShell.fir.opt.mlir 14878:19]
    node mip_lo_2 = cat(mipWire.e.s, mipWire.e.u) @[build/NutShell.fir.opt.mlir 14880:19]
    node mip_hi_2 = cat(mipWire.e.m, mipWire.e.h) @[build/NutShell.fir.opt.mlir 14882:19]
    node _mip_T_2 = cat(mip_hi_2, mip_lo_2) @[build/NutShell.fir.opt.mlir 14884:19]
    node mip_hi_3 = cat(_mip_T_2, _mip_T_1) @[build/NutShell.fir.opt.mlir 14886:19]
    node _mip_T_3 = cat(mip_hi_3, _mip_T) @[build/NutShell.fir.opt.mlir 14888:19]
    node _mip_T_4 = or(_mip_T_3, mipReg) @[build/NutShell.fir.opt.mlir 14890:19]
    wire mip : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 14891:14]
    wire _mip_WIRE : UInt<12> @[build/NutShell.fir.opt.mlir 14907:20]
    connect _mip_WIRE, tail(_mip_T_4, 52) @[build/NutShell.fir.opt.mlir 14909:7]
    node _mip_T_5 = bits(_mip_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 14911:19]
    connect mip.s.u, _mip_T_5 @[build/NutShell.fir.opt.mlir 14912:7]
    node _mip_T_6 = bits(_mip_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 14914:19]
    connect mip.s.s, _mip_T_6 @[build/NutShell.fir.opt.mlir 14915:7]
    node _mip_T_7 = bits(_mip_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 14917:19]
    connect mip.s.h, _mip_T_7 @[build/NutShell.fir.opt.mlir 14918:7]
    node _mip_T_8 = bits(_mip_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 14920:19]
    connect mip.s.m, _mip_T_8 @[build/NutShell.fir.opt.mlir 14921:7]
    node _mip_T_9 = bits(_mip_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 14923:19]
    connect mip.t.u, _mip_T_9 @[build/NutShell.fir.opt.mlir 14924:7]
    node _mip_T_10 = bits(_mip_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 14926:20]
    connect mip.t.s, _mip_T_10 @[build/NutShell.fir.opt.mlir 14927:7]
    node _mip_T_11 = bits(_mip_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 14929:20]
    connect mip.t.h, _mip_T_11 @[build/NutShell.fir.opt.mlir 14930:7]
    node _mip_T_12 = bits(_mip_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 14932:20]
    connect mip.t.m, _mip_T_12 @[build/NutShell.fir.opt.mlir 14933:7]
    node _mip_T_13 = bits(_mip_WIRE, 8, 8) @[build/NutShell.fir.opt.mlir 14935:20]
    connect mip.e.u, _mip_T_13 @[build/NutShell.fir.opt.mlir 14936:7]
    node _mip_T_14 = bits(_mip_WIRE, 9, 9) @[build/NutShell.fir.opt.mlir 14938:20]
    connect mip.e.s, _mip_T_14 @[build/NutShell.fir.opt.mlir 14939:7]
    node _mip_T_15 = bits(_mip_WIRE, 10, 10) @[build/NutShell.fir.opt.mlir 14941:20]
    connect mip.e.h, _mip_T_15 @[build/NutShell.fir.opt.mlir 14942:7]
    node _mip_T_16 = bits(_mip_WIRE, 11, 11) @[build/NutShell.fir.opt.mlir 14944:20]
    connect mip.e.m, _mip_T_16 @[build/NutShell.fir.opt.mlir 14945:7]
    node _misaInitVal_T = shl(UInt<2>(2), 62) @[build/NutShell.fir.opt.mlir 14948:25]
    node _misaInitVal_T_1 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 14951:27]
    node _misaInitVal_T_2 = or(UInt<1>(0), _misaInitVal_T_1) @[build/NutShell.fir.opt.mlir 14953:27]
    node _misaInitVal_T_3 = shl(UInt<1>(1), 18) @[build/NutShell.fir.opt.mlir 14955:27]
    node _misaInitVal_T_4 = or(_misaInitVal_T_2, _misaInitVal_T_3) @[build/NutShell.fir.opt.mlir 14957:27]
    node _misaInitVal_T_5 = shl(UInt<1>(1), 8) @[build/NutShell.fir.opt.mlir 14959:27]
    node _misaInitVal_T_6 = or(_misaInitVal_T_4, _misaInitVal_T_5) @[build/NutShell.fir.opt.mlir 14961:27]
    node _misaInitVal_T_7 = shl(UInt<1>(1), 20) @[build/NutShell.fir.opt.mlir 14963:27]
    node _misaInitVal_T_8 = or(_misaInitVal_T_6, _misaInitVal_T_7) @[build/NutShell.fir.opt.mlir 14965:27]
    node _misaInitVal_T_9 = shl(UInt<1>(1), 12) @[build/NutShell.fir.opt.mlir 14967:27]
    node _misaInitVal_T_10 = or(_misaInitVal_T_8, _misaInitVal_T_9) @[build/NutShell.fir.opt.mlir 14969:28]
    node _misaInitVal_T_11 = shl(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 14971:28]
    node _misaInitVal_T_12 = or(_misaInitVal_T_10, _misaInitVal_T_11) @[build/NutShell.fir.opt.mlir 14973:28]
    node misaInitVal = or(_misaInitVal_T, _misaInitVal_T_12) @[build/NutShell.fir.opt.mlir 14975:22]
    regreset misa : UInt<64>, clock, reset, misaInitVal @[build/NutShell.fir.opt.mlir 14976:15]
    regreset mvendorid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14977:20]
    regreset marchid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14978:18]
    regreset mimpid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14979:17]
    regreset mhartid : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 14980:18]
    regreset mstatus : UInt<64>, clock, reset, UInt<36>(42949679104) @[build/NutShell.fir.opt.mlir 14982:18]
    node _mstatusWMask_T = shl(UInt<1>(1), 63) @[build/NutShell.fir.opt.mlir 14984:26]
    node _mstatusWMask_T_1 = bits(_mstatusWMask_T, 63, 0) @[build/NutShell.fir.opt.mlir 14986:28]
    node _mstatusWMask_T_2 = mux(UInt<1>(1), UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 14990:28]
    node _mstatusWMask_T_3 = shl(_mstatusWMask_T_2, 38) @[build/NutShell.fir.opt.mlir 14992:28]
    node _mstatusWMask_T_4 = cat(UInt<1>(0), _mstatusWMask_T_3) @[build/NutShell.fir.opt.mlir 14994:28]
    node _mstatusWMask_T_5 = or(_mstatusWMask_T_1, _mstatusWMask_T_4) @[build/NutShell.fir.opt.mlir 14996:28]
    node _mstatusWMask_T_6 = shl(UInt<1>(1), 37) @[build/NutShell.fir.opt.mlir 14998:28]
    node _mstatusWMask_T_7 = cat(UInt<26>(0), _mstatusWMask_T_6) @[build/NutShell.fir.opt.mlir 15001:28]
    node _mstatusWMask_T_8 = or(_mstatusWMask_T_5, _mstatusWMask_T_7) @[build/NutShell.fir.opt.mlir 15003:28]
    node _mstatusWMask_T_9 = shl(UInt<1>(1), 36) @[build/NutShell.fir.opt.mlir 15005:28]
    node _mstatusWMask_T_10 = cat(UInt<27>(0), _mstatusWMask_T_9) @[build/NutShell.fir.opt.mlir 15008:29]
    node _mstatusWMask_T_11 = or(_mstatusWMask_T_8, _mstatusWMask_T_10) @[build/NutShell.fir.opt.mlir 15010:29]
    node _mstatusWMask_T_12 = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 15014:29]
    node _mstatusWMask_T_13 = shl(_mstatusWMask_T_12, 32) @[build/NutShell.fir.opt.mlir 15016:29]
    node _mstatusWMask_T_14 = cat(UInt<28>(0), _mstatusWMask_T_13) @[build/NutShell.fir.opt.mlir 15019:29]
    node _mstatusWMask_T_15 = or(_mstatusWMask_T_11, _mstatusWMask_T_14) @[build/NutShell.fir.opt.mlir 15021:29]
    node _mstatusWMask_T_16 = mux(UInt<1>(1), UInt<9>(511), UInt<9>(0)) @[build/NutShell.fir.opt.mlir 15025:29]
    node _mstatusWMask_T_17 = shl(_mstatusWMask_T_16, 23) @[build/NutShell.fir.opt.mlir 15027:29]
    node _mstatusWMask_T_18 = cat(UInt<32>(0), _mstatusWMask_T_17) @[build/NutShell.fir.opt.mlir 15030:29]
    node _mstatusWMask_T_19 = or(_mstatusWMask_T_15, _mstatusWMask_T_18) @[build/NutShell.fir.opt.mlir 15032:29]
    node _mstatusWMask_T_20 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 15036:29]
    node _mstatusWMask_T_21 = shl(_mstatusWMask_T_20, 15) @[build/NutShell.fir.opt.mlir 15038:29]
    node _mstatusWMask_T_22 = cat(UInt<47>(0), _mstatusWMask_T_21) @[build/NutShell.fir.opt.mlir 15041:29]
    node _mstatusWMask_T_23 = or(_mstatusWMask_T_19, _mstatusWMask_T_22) @[build/NutShell.fir.opt.mlir 15043:29]
    node _mstatusWMask_T_24 = shl(UInt<1>(1), 6) @[build/NutShell.fir.opt.mlir 15045:29]
    node _mstatusWMask_T_25 = cat(UInt<57>(0), _mstatusWMask_T_24) @[build/NutShell.fir.opt.mlir 15048:29]
    node _mstatusWMask_T_26 = or(_mstatusWMask_T_23, _mstatusWMask_T_25) @[build/NutShell.fir.opt.mlir 15050:29]
    node _mstatusWMask_T_27 = shl(UInt<1>(1), 4) @[build/NutShell.fir.opt.mlir 15052:29]
    node _mstatusWMask_T_28 = cat(UInt<59>(0), _mstatusWMask_T_27) @[build/NutShell.fir.opt.mlir 15055:29]
    node _mstatusWMask_T_29 = or(_mstatusWMask_T_26, _mstatusWMask_T_28) @[build/NutShell.fir.opt.mlir 15057:29]
    node _mstatusWMask_T_30 = shl(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 15059:29]
    node _mstatusWMask_T_31 = cat(UInt<61>(0), _mstatusWMask_T_30) @[build/NutShell.fir.opt.mlir 15062:29]
    node _mstatusWMask_T_32 = or(_mstatusWMask_T_29, _mstatusWMask_T_31) @[build/NutShell.fir.opt.mlir 15064:29]
    node _mstatusWMask_T_33 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 15066:29]
    node _mstatusWMask_T_34 = cat(UInt<63>(0), _mstatusWMask_T_33) @[build/NutShell.fir.opt.mlir 15069:29]
    node _mstatusWMask_T_35 = or(_mstatusWMask_T_32, _mstatusWMask_T_34) @[build/NutShell.fir.opt.mlir 15071:29]
    node _mstatusWMask_T_36 = bits(_mstatusWMask_T_35, 63, 0) @[build/NutShell.fir.opt.mlir 15073:29]
    node mstatusWMask = not(_mstatusWMask_T_36) @[build/NutShell.fir.opt.mlir 15075:23]
    wire mstatusStruct : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 15076:24]
    wire _mstatusStruct_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 15103:30]
    connect _mstatusStruct_WIRE, mstatus @[build/NutShell.fir.opt.mlir 15104:7]
    node _mstatusStruct_T = bits(_mstatusStruct_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 15106:27]
    connect mstatusStruct.ie.u, _mstatusStruct_T @[build/NutShell.fir.opt.mlir 15107:7]
    node _mstatusStruct_T_1 = bits(_mstatusStruct_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 15109:29]
    connect mstatusStruct.ie.s, _mstatusStruct_T_1 @[build/NutShell.fir.opt.mlir 15110:7]
    node _mstatusStruct_T_2 = bits(_mstatusStruct_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 15112:29]
    connect mstatusStruct.ie.h, _mstatusStruct_T_2 @[build/NutShell.fir.opt.mlir 15113:7]
    node _mstatusStruct_T_3 = bits(_mstatusStruct_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 15115:29]
    connect mstatusStruct.ie.m, _mstatusStruct_T_3 @[build/NutShell.fir.opt.mlir 15116:7]
    node _mstatusStruct_T_4 = bits(_mstatusStruct_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 15118:29]
    connect mstatusStruct.pie.u, _mstatusStruct_T_4 @[build/NutShell.fir.opt.mlir 15119:7]
    node _mstatusStruct_T_5 = bits(_mstatusStruct_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 15121:29]
    connect mstatusStruct.pie.s, _mstatusStruct_T_5 @[build/NutShell.fir.opt.mlir 15122:7]
    node _mstatusStruct_T_6 = bits(_mstatusStruct_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 15124:29]
    connect mstatusStruct.pie.h, _mstatusStruct_T_6 @[build/NutShell.fir.opt.mlir 15125:7]
    node _mstatusStruct_T_7 = bits(_mstatusStruct_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 15127:29]
    connect mstatusStruct.pie.m, _mstatusStruct_T_7 @[build/NutShell.fir.opt.mlir 15128:7]
    node _mstatusStruct_T_8 = bits(_mstatusStruct_WIRE, 8, 8) @[build/NutShell.fir.opt.mlir 15130:29]
    connect mstatusStruct.spp, _mstatusStruct_T_8 @[build/NutShell.fir.opt.mlir 15131:7]
    node _mstatusStruct_T_9 = bits(_mstatusStruct_WIRE, 10, 9) @[build/NutShell.fir.opt.mlir 15133:29]
    connect mstatusStruct.hpp, _mstatusStruct_T_9 @[build/NutShell.fir.opt.mlir 15134:7]
    node _mstatusStruct_T_10 = bits(_mstatusStruct_WIRE, 12, 11) @[build/NutShell.fir.opt.mlir 15136:30]
    connect mstatusStruct.mpp, _mstatusStruct_T_10 @[build/NutShell.fir.opt.mlir 15137:7]
    node _mstatusStruct_T_11 = bits(_mstatusStruct_WIRE, 14, 13) @[build/NutShell.fir.opt.mlir 15139:30]
    connect mstatusStruct.fs, _mstatusStruct_T_11 @[build/NutShell.fir.opt.mlir 15140:7]
    node _mstatusStruct_T_12 = bits(_mstatusStruct_WIRE, 16, 15) @[build/NutShell.fir.opt.mlir 15142:30]
    connect mstatusStruct.xs, _mstatusStruct_T_12 @[build/NutShell.fir.opt.mlir 15143:7]
    node _mstatusStruct_T_13 = bits(_mstatusStruct_WIRE, 17, 17) @[build/NutShell.fir.opt.mlir 15145:30]
    connect mstatusStruct.mprv, _mstatusStruct_T_13 @[build/NutShell.fir.opt.mlir 15146:7]
    node _mstatusStruct_T_14 = bits(_mstatusStruct_WIRE, 18, 18) @[build/NutShell.fir.opt.mlir 15148:30]
    connect mstatusStruct.sum, _mstatusStruct_T_14 @[build/NutShell.fir.opt.mlir 15149:7]
    node _mstatusStruct_T_15 = bits(_mstatusStruct_WIRE, 19, 19) @[build/NutShell.fir.opt.mlir 15151:30]
    connect mstatusStruct.mxr, _mstatusStruct_T_15 @[build/NutShell.fir.opt.mlir 15152:7]
    node _mstatusStruct_T_16 = bits(_mstatusStruct_WIRE, 20, 20) @[build/NutShell.fir.opt.mlir 15154:30]
    connect mstatusStruct.tvm, _mstatusStruct_T_16 @[build/NutShell.fir.opt.mlir 15155:7]
    node _mstatusStruct_T_17 = bits(_mstatusStruct_WIRE, 21, 21) @[build/NutShell.fir.opt.mlir 15157:30]
    connect mstatusStruct.tw, _mstatusStruct_T_17 @[build/NutShell.fir.opt.mlir 15158:7]
    node _mstatusStruct_T_18 = bits(_mstatusStruct_WIRE, 22, 22) @[build/NutShell.fir.opt.mlir 15160:30]
    connect mstatusStruct.tsr, _mstatusStruct_T_18 @[build/NutShell.fir.opt.mlir 15161:7]
    node _mstatusStruct_T_19 = bits(_mstatusStruct_WIRE, 31, 23) @[build/NutShell.fir.opt.mlir 15163:30]
    connect mstatusStruct.pad0, _mstatusStruct_T_19 @[build/NutShell.fir.opt.mlir 15164:7]
    node _mstatusStruct_T_20 = bits(_mstatusStruct_WIRE, 33, 32) @[build/NutShell.fir.opt.mlir 15166:30]
    connect mstatusStruct.uxl, _mstatusStruct_T_20 @[build/NutShell.fir.opt.mlir 15167:7]
    node _mstatusStruct_T_21 = bits(_mstatusStruct_WIRE, 35, 34) @[build/NutShell.fir.opt.mlir 15169:30]
    connect mstatusStruct.sxl, _mstatusStruct_T_21 @[build/NutShell.fir.opt.mlir 15170:7]
    node _mstatusStruct_T_22 = bits(_mstatusStruct_WIRE, 62, 36) @[build/NutShell.fir.opt.mlir 15172:30]
    connect mstatusStruct.pad1, _mstatusStruct_T_22 @[build/NutShell.fir.opt.mlir 15173:7]
    node _mstatusStruct_T_23 = bits(_mstatusStruct_WIRE, 63, 63) @[build/NutShell.fir.opt.mlir 15175:30]
    connect mstatusStruct.sd, _mstatusStruct_T_23 @[build/NutShell.fir.opt.mlir 15176:7]
    regreset medeleg : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15177:18]
    regreset mideleg : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15178:18]
    regreset mscratch : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15179:19]
    regreset pmpcfg0 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15180:18]
    regreset pmpcfg1 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15181:18]
    regreset pmpcfg2 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15182:18]
    regreset pmpcfg3 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15183:18]
    regreset pmpaddr0 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15184:19]
    regreset pmpaddr1 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15185:19]
    regreset pmpaddr2 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15186:19]
    regreset pmpaddr3 : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15187:19]
    node _sstatusWmask_T = mux(UInt<1>(1), UInt<44>(17592186044415), UInt<44>(0)) @[build/NutShell.fir.opt.mlir 15191:26]
    node _sstatusWmask_T_1 = shl(_sstatusWmask_T, 20) @[build/NutShell.fir.opt.mlir 15193:28]
    node _sstatusWmask_T_2 = bits(_sstatusWmask_T_1, 63, 0) @[build/NutShell.fir.opt.mlir 15195:28]
    node _sstatusWmask_T_3 = mux(UInt<1>(1), UInt<3>(7), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 15199:28]
    node _sstatusWmask_T_4 = shl(_sstatusWmask_T_3, 15) @[build/NutShell.fir.opt.mlir 15201:28]
    node _sstatusWmask_T_5 = cat(UInt<46>(0), _sstatusWmask_T_4) @[build/NutShell.fir.opt.mlir 15204:28]
    node _sstatusWmask_T_6 = or(_sstatusWmask_T_2, _sstatusWmask_T_5) @[build/NutShell.fir.opt.mlir 15206:28]
    node _sstatusWmask_T_7 = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 15208:28]
    node _sstatusWmask_T_8 = shl(_sstatusWmask_T_7, 9) @[build/NutShell.fir.opt.mlir 15210:28]
    node _sstatusWmask_T_9 = cat(UInt<51>(0), _sstatusWmask_T_8) @[build/NutShell.fir.opt.mlir 15213:28]
    node _sstatusWmask_T_10 = or(_sstatusWmask_T_6, _sstatusWmask_T_9) @[build/NutShell.fir.opt.mlir 15215:29]
    node _sstatusWmask_T_11 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 15217:29]
    node _sstatusWmask_T_12 = shl(_sstatusWmask_T_11, 6) @[build/NutShell.fir.opt.mlir 15219:29]
    node _sstatusWmask_T_13 = cat(UInt<56>(0), _sstatusWmask_T_12) @[build/NutShell.fir.opt.mlir 15222:29]
    node _sstatusWmask_T_14 = or(_sstatusWmask_T_10, _sstatusWmask_T_13) @[build/NutShell.fir.opt.mlir 15224:29]
    node _sstatusWmask_T_15 = mux(UInt<1>(1), UInt<3>(7), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 15226:29]
    node _sstatusWmask_T_16 = shl(_sstatusWmask_T_15, 2) @[build/NutShell.fir.opt.mlir 15228:29]
    node _sstatusWmask_T_17 = cat(UInt<59>(0), _sstatusWmask_T_16) @[build/NutShell.fir.opt.mlir 15230:29]
    node _sstatusWmask_T_18 = or(_sstatusWmask_T_14, _sstatusWmask_T_17) @[build/NutShell.fir.opt.mlir 15232:29]
    node _sstatusWmask_T_19 = shl(UInt<1>(1), 0) @[build/NutShell.fir.opt.mlir 15234:29]
    node _sstatusWmask_T_20 = cat(UInt<63>(0), _sstatusWmask_T_19) @[build/NutShell.fir.opt.mlir 15236:29]
    node _sstatusWmask_T_21 = or(_sstatusWmask_T_18, _sstatusWmask_T_20) @[build/NutShell.fir.opt.mlir 15238:29]
    node _sstatusWmask_T_22 = bits(_sstatusWmask_T_21, 63, 0) @[build/NutShell.fir.opt.mlir 15240:29]
    node sstatusWmask = not(_sstatusWmask_T_22) @[build/NutShell.fir.opt.mlir 15242:23]
    node sstatusRmask = or(sstatusWmask, UInt<64>(9223372049739776000)) @[build/NutShell.fir.opt.mlir 15245:23]
    regreset stvec : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15246:16]
    node sieMask = and(UInt<64>(546), mideleg) @[build/NutShell.fir.opt.mlir 15249:18]
    node sipMask = and(UInt<64>(546), mideleg) @[build/NutShell.fir.opt.mlir 15251:18]
    regreset satp : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15252:15]
    regreset sepc : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15253:15]
    regreset scause : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15254:17]
    reg stval : UInt<64>, clock @[build/NutShell.fir.opt.mlir 15255:16]
    regreset sscratch : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15256:19]
    regreset scounteren : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15257:21]
    reg uepc : UInt<64>, clock @[build/NutShell.fir.opt.mlir 15258:15]
    wire setLr : UInt<1> @[build/NutShell.fir.opt.mlir 15259:16]
    connect setLr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15261:7]
    wire setLrVal : UInt<1> @[build/NutShell.fir.opt.mlir 15262:19]
    connect setLrVal, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15264:7]
    wire setLrAddr : UInt<64> @[build/NutShell.fir.opt.mlir 15265:20]
    invalidate setLrAddr @[build/NutShell.fir.opt.mlir 15267:7]
    regreset lr : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15268:13]
    regreset lrAddr : UInt<64>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 15269:17]
    when setLr : @[build/NutShell.fir.opt.mlir 15270:7]
      connect lr, setLrVal @[build/NutShell.fir.opt.mlir 15271:9]
      connect lrAddr, setLrAddr @[build/NutShell.fir.opt.mlir 15272:9]
    regreset privilegeMode : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 15274:24]
    regreset perfCnts_0 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15275:21]
    regreset perfCnts_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15276:21]
    regreset perfCnts_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15277:21]
    regreset perfCnts_3 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15278:21]
    regreset perfCnts_4 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15279:21]
    regreset perfCnts_5 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15280:21]
    regreset perfCnts_6 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15281:21]
    regreset perfCnts_7 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15282:21]
    regreset perfCnts_8 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15283:21]
    regreset perfCnts_9 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15284:21]
    regreset perfCnts_10 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15285:22]
    regreset perfCnts_11 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15286:22]
    regreset perfCnts_12 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15287:22]
    regreset perfCnts_13 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15288:22]
    regreset perfCnts_14 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15289:22]
    regreset perfCnts_15 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15290:22]
    regreset perfCnts_16 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15291:22]
    regreset perfCnts_17 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15292:22]
    regreset perfCnts_18 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15293:22]
    regreset perfCnts_19 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15294:22]
    regreset perfCnts_20 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15295:22]
    regreset perfCnts_21 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15296:22]
    regreset perfCnts_22 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15297:22]
    regreset perfCnts_23 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15298:22]
    regreset perfCnts_24 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15299:22]
    regreset perfCnts_25 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15300:22]
    regreset perfCnts_26 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15301:22]
    regreset perfCnts_27 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15302:22]
    regreset perfCnts_28 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15303:22]
    regreset perfCnts_29 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15304:22]
    regreset perfCnts_30 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15305:22]
    regreset perfCnts_31 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15306:22]
    regreset perfCnts_32 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15307:22]
    regreset perfCnts_33 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15308:22]
    regreset perfCnts_34 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15309:22]
    regreset perfCnts_35 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15310:22]
    regreset perfCnts_36 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15311:22]
    regreset perfCnts_37 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15312:22]
    regreset perfCnts_38 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15313:22]
    regreset perfCnts_39 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15314:22]
    regreset perfCnts_40 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15315:22]
    regreset perfCnts_41 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15316:22]
    regreset perfCnts_42 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15317:22]
    regreset perfCnts_43 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15318:22]
    regreset perfCnts_44 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15319:22]
    regreset perfCnts_45 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15320:22]
    regreset perfCnts_46 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15321:22]
    regreset perfCnts_47 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15322:22]
    regreset perfCnts_48 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15323:22]
    regreset perfCnts_49 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15324:22]
    regreset perfCnts_50 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15325:22]
    regreset perfCnts_51 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15326:22]
    regreset perfCnts_52 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15327:22]
    regreset perfCnts_53 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15328:22]
    regreset perfCnts_54 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15329:22]
    regreset perfCnts_55 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15330:22]
    regreset perfCnts_56 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15331:22]
    regreset perfCnts_57 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15332:22]
    regreset perfCnts_58 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15333:22]
    regreset perfCnts_59 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15334:22]
    regreset perfCnts_60 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15335:22]
    regreset perfCnts_61 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15336:22]
    regreset perfCnts_62 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15337:22]
    regreset perfCnts_63 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15338:22]
    regreset perfCnts_64 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15339:22]
    regreset perfCnts_65 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15340:22]
    regreset perfCnts_66 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15341:22]
    regreset perfCnts_67 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15342:22]
    regreset perfCnts_68 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15343:22]
    regreset perfCnts_69 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15344:22]
    regreset perfCnts_70 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15345:22]
    regreset perfCnts_71 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15346:22]
    regreset perfCnts_72 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15347:22]
    regreset perfCnts_73 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15348:22]
    regreset perfCnts_74 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15349:22]
    regreset perfCnts_75 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15350:22]
    regreset perfCnts_76 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15351:22]
    regreset perfCnts_77 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15352:22]
    regreset perfCnts_78 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15353:22]
    regreset perfCnts_79 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15354:22]
    regreset perfCnts_80 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15355:22]
    regreset perfCnts_81 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15356:22]
    regreset perfCnts_82 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15357:22]
    regreset perfCnts_83 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15358:22]
    regreset perfCnts_84 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15359:22]
    regreset perfCnts_85 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15360:22]
    regreset perfCnts_86 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15361:22]
    regreset perfCnts_87 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15362:22]
    regreset perfCnts_88 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15363:22]
    regreset perfCnts_89 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15364:22]
    regreset perfCnts_90 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15365:22]
    regreset perfCnts_91 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15366:22]
    regreset perfCnts_92 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15367:22]
    regreset perfCnts_93 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15368:22]
    regreset perfCnts_94 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15369:22]
    regreset perfCnts_95 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15370:22]
    regreset perfCnts_96 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15371:22]
    regreset perfCnts_97 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15372:22]
    regreset perfCnts_98 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15373:22]
    regreset perfCnts_99 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15374:22]
    regreset perfCnts_100 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15375:23]
    regreset perfCnts_101 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15376:23]
    regreset perfCnts_102 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15377:23]
    regreset perfCnts_103 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15378:23]
    regreset perfCnts_104 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15379:23]
    regreset perfCnts_105 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15380:23]
    regreset perfCnts_106 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15381:23]
    regreset perfCnts_107 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15382:23]
    regreset perfCnts_108 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15383:23]
    regreset perfCnts_109 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15384:23]
    regreset perfCnts_110 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15385:23]
    regreset perfCnts_111 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15386:23]
    regreset perfCnts_112 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15387:23]
    regreset perfCnts_113 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15388:23]
    regreset perfCnts_114 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15389:23]
    regreset perfCnts_115 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15390:23]
    regreset perfCnts_116 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15391:23]
    regreset perfCnts_117 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15392:23]
    regreset perfCnts_118 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15393:23]
    regreset perfCnts_119 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15394:23]
    regreset perfCnts_120 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15395:23]
    regreset perfCnts_121 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15396:23]
    regreset perfCnts_122 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15397:23]
    regreset perfCnts_123 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15398:23]
    regreset perfCnts_124 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15399:23]
    regreset perfCnts_125 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15400:23]
    regreset perfCnts_126 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15401:23]
    regreset perfCnts_127 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 15402:23]
    node perfCntsLoMapping_0_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15405:34]
    node perfCntsLoMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15407:34]
    node perfCntsLoMapping_1_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15409:34]
    node perfCntsLoMapping_1_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15411:34]
    node perfCntsLoMapping_2_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15413:34]
    node perfCntsLoMapping_2_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15415:34]
    node perfCntsLoMapping_3_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15417:34]
    node perfCntsLoMapping_3_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15419:34]
    node perfCntsLoMapping_4_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15421:34]
    node perfCntsLoMapping_4_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15423:34]
    node perfCntsLoMapping_5_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15425:34]
    node perfCntsLoMapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15427:34]
    node perfCntsLoMapping_6_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15429:34]
    node perfCntsLoMapping_6_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15431:34]
    node perfCntsLoMapping_7_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15433:34]
    node perfCntsLoMapping_7_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15435:34]
    node perfCntsLoMapping_8_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15437:34]
    node perfCntsLoMapping_8_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15439:34]
    node perfCntsLoMapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15441:34]
    node perfCntsLoMapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15443:34]
    node perfCntsLoMapping_10_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15445:35]
    node perfCntsLoMapping_10_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15447:35]
    node perfCntsLoMapping_11_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15449:35]
    node perfCntsLoMapping_11_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15451:35]
    node perfCntsLoMapping_12_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15453:35]
    node perfCntsLoMapping_12_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15455:35]
    node perfCntsLoMapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15457:35]
    node perfCntsLoMapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15459:35]
    node perfCntsLoMapping_14_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15461:35]
    node perfCntsLoMapping_14_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15463:35]
    node perfCntsLoMapping_15_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15465:35]
    node perfCntsLoMapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15467:35]
    node perfCntsLoMapping_16_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15469:35]
    node perfCntsLoMapping_16_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15471:35]
    node perfCntsLoMapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15473:35]
    node perfCntsLoMapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15475:35]
    node perfCntsLoMapping_18_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15477:35]
    node perfCntsLoMapping_18_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15479:35]
    node perfCntsLoMapping_19_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15481:35]
    node perfCntsLoMapping_19_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15483:35]
    node perfCntsLoMapping_20_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15485:35]
    node perfCntsLoMapping_20_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15487:35]
    node perfCntsLoMapping_21_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15489:35]
    node perfCntsLoMapping_21_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15491:35]
    node perfCntsLoMapping_22_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15493:35]
    node perfCntsLoMapping_22_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15495:35]
    node perfCntsLoMapping_23_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15497:35]
    node perfCntsLoMapping_23_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15499:35]
    node perfCntsLoMapping_24_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15501:35]
    node perfCntsLoMapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15503:35]
    node perfCntsLoMapping_25_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15505:35]
    node perfCntsLoMapping_25_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15507:35]
    node perfCntsLoMapping_26_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15509:35]
    node perfCntsLoMapping_26_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15511:35]
    node perfCntsLoMapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15513:35]
    node perfCntsLoMapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15515:35]
    node perfCntsLoMapping_28_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15517:35]
    node perfCntsLoMapping_28_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15519:35]
    node perfCntsLoMapping_29_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15521:35]
    node perfCntsLoMapping_29_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15523:35]
    node perfCntsLoMapping_30_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15525:35]
    node perfCntsLoMapping_30_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15527:35]
    node perfCntsLoMapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15529:35]
    node perfCntsLoMapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15531:35]
    node perfCntsLoMapping_32_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15533:35]
    node perfCntsLoMapping_32_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15535:35]
    node perfCntsLoMapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15537:35]
    node perfCntsLoMapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15539:35]
    node perfCntsLoMapping_34_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15541:35]
    node perfCntsLoMapping_34_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15543:35]
    node perfCntsLoMapping_35_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15545:35]
    node perfCntsLoMapping_35_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15547:35]
    node perfCntsLoMapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15549:35]
    node perfCntsLoMapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15551:35]
    node perfCntsLoMapping_37_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15553:35]
    node perfCntsLoMapping_37_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15555:35]
    node perfCntsLoMapping_38_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15557:35]
    node perfCntsLoMapping_38_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15559:35]
    node perfCntsLoMapping_39_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15561:35]
    node perfCntsLoMapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15563:35]
    node perfCntsLoMapping_40_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15565:35]
    node perfCntsLoMapping_40_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15567:35]
    node perfCntsLoMapping_41_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15569:35]
    node perfCntsLoMapping_41_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15571:35]
    node perfCntsLoMapping_42_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15573:35]
    node perfCntsLoMapping_42_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15575:35]
    node perfCntsLoMapping_43_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15577:35]
    node perfCntsLoMapping_43_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15579:35]
    node perfCntsLoMapping_44_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15581:35]
    node perfCntsLoMapping_44_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15583:35]
    node perfCntsLoMapping_45_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15585:35]
    node perfCntsLoMapping_45_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15587:35]
    node perfCntsLoMapping_46_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15589:35]
    node perfCntsLoMapping_46_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15591:35]
    node perfCntsLoMapping_47_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15593:35]
    node perfCntsLoMapping_47_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15595:35]
    node perfCntsLoMapping_48_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15597:35]
    node perfCntsLoMapping_48_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15599:35]
    node perfCntsLoMapping_49_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15601:35]
    node perfCntsLoMapping_49_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15603:35]
    node perfCntsLoMapping_50_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15605:35]
    node perfCntsLoMapping_50_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15607:35]
    node perfCntsLoMapping_51_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15609:35]
    node perfCntsLoMapping_51_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15611:35]
    node perfCntsLoMapping_52_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15613:35]
    node perfCntsLoMapping_52_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15615:35]
    node perfCntsLoMapping_53_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15617:35]
    node perfCntsLoMapping_53_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15619:35]
    node perfCntsLoMapping_54_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15621:35]
    node perfCntsLoMapping_54_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15623:35]
    node perfCntsLoMapping_55_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15625:35]
    node perfCntsLoMapping_55_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15627:35]
    node perfCntsLoMapping_56_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15629:35]
    node perfCntsLoMapping_56_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15631:35]
    node perfCntsLoMapping_57_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15633:35]
    node perfCntsLoMapping_57_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15635:35]
    node perfCntsLoMapping_58_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15637:35]
    node perfCntsLoMapping_58_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15639:35]
    node perfCntsLoMapping_59_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15641:35]
    node perfCntsLoMapping_59_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15643:35]
    node perfCntsLoMapping_60_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15645:35]
    node perfCntsLoMapping_60_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15647:35]
    node perfCntsLoMapping_61_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15649:35]
    node perfCntsLoMapping_61_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15651:35]
    node perfCntsLoMapping_62_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15653:35]
    node perfCntsLoMapping_62_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15655:35]
    node perfCntsLoMapping_63_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15657:35]
    node perfCntsLoMapping_63_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15659:35]
    node perfCntsLoMapping_64_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15661:35]
    node perfCntsLoMapping_64_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15663:35]
    node perfCntsLoMapping_65_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15665:35]
    node perfCntsLoMapping_65_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15667:35]
    node perfCntsLoMapping_66_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15669:35]
    node perfCntsLoMapping_66_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15671:35]
    node perfCntsLoMapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15673:35]
    node perfCntsLoMapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15675:35]
    node perfCntsLoMapping_68_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15677:35]
    node perfCntsLoMapping_68_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15679:35]
    node perfCntsLoMapping_69_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15681:35]
    node perfCntsLoMapping_69_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15683:35]
    node perfCntsLoMapping_70_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15685:35]
    node perfCntsLoMapping_70_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15687:35]
    node perfCntsLoMapping_71_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15689:35]
    node perfCntsLoMapping_71_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15691:35]
    node perfCntsLoMapping_72_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15693:35]
    node perfCntsLoMapping_72_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15695:35]
    node perfCntsLoMapping_73_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15697:35]
    node perfCntsLoMapping_73_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15699:35]
    node perfCntsLoMapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15701:35]
    node perfCntsLoMapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15703:35]
    node perfCntsLoMapping_75_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15705:35]
    node perfCntsLoMapping_75_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15707:35]
    node perfCntsLoMapping_76_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15709:35]
    node perfCntsLoMapping_76_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15711:35]
    node perfCntsLoMapping_77_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15713:35]
    node perfCntsLoMapping_77_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15715:35]
    node perfCntsLoMapping_78_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15717:35]
    node perfCntsLoMapping_78_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15719:35]
    node perfCntsLoMapping_79_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15721:35]
    node perfCntsLoMapping_79_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15723:35]
    node perfCntsLoMapping_80_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15725:35]
    node perfCntsLoMapping_80_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15727:35]
    node perfCntsLoMapping_81_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15729:35]
    node perfCntsLoMapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15731:35]
    node perfCntsLoMapping_82_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15733:35]
    node perfCntsLoMapping_82_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15735:35]
    node perfCntsLoMapping_83_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15737:35]
    node perfCntsLoMapping_83_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15739:35]
    node perfCntsLoMapping_84_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15741:35]
    node perfCntsLoMapping_84_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15743:35]
    node perfCntsLoMapping_85_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15745:35]
    node perfCntsLoMapping_85_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15747:35]
    node perfCntsLoMapping_86_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15749:35]
    node perfCntsLoMapping_86_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15751:35]
    node perfCntsLoMapping_87_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15753:35]
    node perfCntsLoMapping_87_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15755:35]
    node perfCntsLoMapping_88_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15757:35]
    node perfCntsLoMapping_88_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15759:35]
    node perfCntsLoMapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15761:35]
    node perfCntsLoMapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15763:35]
    node perfCntsLoMapping_90_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15765:35]
    node perfCntsLoMapping_90_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15767:35]
    node perfCntsLoMapping_91_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15769:35]
    node perfCntsLoMapping_91_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15771:35]
    node perfCntsLoMapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15773:35]
    node perfCntsLoMapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15775:35]
    node perfCntsLoMapping_93_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15777:35]
    node perfCntsLoMapping_93_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15779:35]
    node perfCntsLoMapping_94_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15781:35]
    node perfCntsLoMapping_94_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15783:35]
    node perfCntsLoMapping_95_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15785:35]
    node perfCntsLoMapping_95_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15787:35]
    node perfCntsLoMapping_96_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15789:35]
    node perfCntsLoMapping_96_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15791:35]
    node perfCntsLoMapping_97_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15793:35]
    node perfCntsLoMapping_97_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15795:35]
    node perfCntsLoMapping_98_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15797:35]
    node perfCntsLoMapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15799:35]
    node perfCntsLoMapping_99_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15801:35]
    node perfCntsLoMapping_99_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15803:35]
    node perfCntsLoMapping_100_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15805:36]
    node perfCntsLoMapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15807:36]
    node perfCntsLoMapping_101_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15809:36]
    node perfCntsLoMapping_101_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15811:36]
    node perfCntsLoMapping_102_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15813:36]
    node perfCntsLoMapping_102_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15815:36]
    node perfCntsLoMapping_103_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15817:36]
    node perfCntsLoMapping_103_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15819:36]
    node perfCntsLoMapping_104_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15821:36]
    node perfCntsLoMapping_104_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15823:36]
    node perfCntsLoMapping_105_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15825:36]
    node perfCntsLoMapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15827:36]
    node perfCntsLoMapping_106_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15829:36]
    node perfCntsLoMapping_106_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15831:36]
    node perfCntsLoMapping_107_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15833:36]
    node perfCntsLoMapping_107_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15835:36]
    node perfCntsLoMapping_108_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15837:36]
    node perfCntsLoMapping_108_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15839:36]
    node perfCntsLoMapping_109_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15841:36]
    node perfCntsLoMapping_109_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15843:36]
    node perfCntsLoMapping_110_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15845:36]
    node perfCntsLoMapping_110_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15847:36]
    node perfCntsLoMapping_111_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15849:36]
    node perfCntsLoMapping_111_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15851:36]
    node perfCntsLoMapping_112_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15853:36]
    node perfCntsLoMapping_112_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15855:36]
    node perfCntsLoMapping_113_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15857:36]
    node perfCntsLoMapping_113_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15859:36]
    node perfCntsLoMapping_114_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15861:36]
    node perfCntsLoMapping_114_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15863:36]
    node perfCntsLoMapping_115_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15865:36]
    node perfCntsLoMapping_115_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15867:36]
    node perfCntsLoMapping_116_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15869:36]
    node perfCntsLoMapping_116_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15871:36]
    node perfCntsLoMapping_117_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15873:36]
    node perfCntsLoMapping_117_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15875:36]
    node perfCntsLoMapping_118_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15877:36]
    node perfCntsLoMapping_118_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15879:36]
    node perfCntsLoMapping_119_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15881:36]
    node perfCntsLoMapping_119_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15883:36]
    node perfCntsLoMapping_120_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15885:36]
    node perfCntsLoMapping_120_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15887:36]
    node perfCntsLoMapping_121_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15889:36]
    node perfCntsLoMapping_121_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15891:36]
    node perfCntsLoMapping_122_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15893:36]
    node perfCntsLoMapping_122_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15895:36]
    node perfCntsLoMapping_123_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15897:36]
    node perfCntsLoMapping_123_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15899:36]
    node perfCntsLoMapping_124_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15901:36]
    node perfCntsLoMapping_124_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15903:36]
    node perfCntsLoMapping_125_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15905:36]
    node perfCntsLoMapping_125_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15907:36]
    node perfCntsLoMapping_126_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15909:36]
    node perfCntsLoMapping_126_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15911:36]
    node perfCntsLoMapping_127_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15913:36]
    node perfCntsLoMapping_127_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15915:36]
    node perfCntsHiMapping_0_2_1 = bits(perfCnts_0, 63, 32) @[build/NutShell.fir.opt.mlir 15917:34]
    node perfCntsHiMapping_0_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15919:34]
    node perfCntsHiMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15921:34]
    node perfCntsHiMapping_1_2_1 = bits(perfCnts_1, 63, 32) @[build/NutShell.fir.opt.mlir 15923:34]
    node perfCntsHiMapping_1_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15925:34]
    node perfCntsHiMapping_1_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15927:34]
    node perfCntsHiMapping_2_2_1 = bits(perfCnts_2, 63, 32) @[build/NutShell.fir.opt.mlir 15929:34]
    node perfCntsHiMapping_2_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15931:34]
    node perfCntsHiMapping_2_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15933:34]
    node perfCntsHiMapping_3_2_1 = bits(perfCnts_3, 63, 32) @[build/NutShell.fir.opt.mlir 15935:34]
    node perfCntsHiMapping_3_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15937:34]
    node perfCntsHiMapping_3_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15939:34]
    node perfCntsHiMapping_4_2_1 = bits(perfCnts_4, 63, 32) @[build/NutShell.fir.opt.mlir 15941:34]
    node perfCntsHiMapping_4_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15943:34]
    node perfCntsHiMapping_4_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15945:34]
    node perfCntsHiMapping_5_2_1 = bits(perfCnts_5, 63, 32) @[build/NutShell.fir.opt.mlir 15947:34]
    node perfCntsHiMapping_5_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15949:34]
    node perfCntsHiMapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15951:34]
    node perfCntsHiMapping_6_2_1 = bits(perfCnts_6, 63, 32) @[build/NutShell.fir.opt.mlir 15953:34]
    node perfCntsHiMapping_6_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15955:34]
    node perfCntsHiMapping_6_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15957:34]
    node perfCntsHiMapping_7_2_1 = bits(perfCnts_7, 63, 32) @[build/NutShell.fir.opt.mlir 15959:34]
    node perfCntsHiMapping_7_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15961:34]
    node perfCntsHiMapping_7_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15963:34]
    node perfCntsHiMapping_8_2_1 = bits(perfCnts_8, 63, 32) @[build/NutShell.fir.opt.mlir 15965:34]
    node perfCntsHiMapping_8_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15967:34]
    node perfCntsHiMapping_8_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15969:34]
    node perfCntsHiMapping_9_2_1 = bits(perfCnts_9, 63, 32) @[build/NutShell.fir.opt.mlir 15971:34]
    node perfCntsHiMapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15973:34]
    node perfCntsHiMapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15975:34]
    node perfCntsHiMapping_10_2_1 = bits(perfCnts_10, 63, 32) @[build/NutShell.fir.opt.mlir 15977:35]
    node perfCntsHiMapping_10_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15979:35]
    node perfCntsHiMapping_10_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15981:35]
    node perfCntsHiMapping_11_2_1 = bits(perfCnts_11, 63, 32) @[build/NutShell.fir.opt.mlir 15983:35]
    node perfCntsHiMapping_11_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15985:35]
    node perfCntsHiMapping_11_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15987:35]
    node perfCntsHiMapping_12_2_1 = bits(perfCnts_12, 63, 32) @[build/NutShell.fir.opt.mlir 15989:35]
    node perfCntsHiMapping_12_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15991:35]
    node perfCntsHiMapping_12_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15993:35]
    node perfCntsHiMapping_13_2_1 = bits(perfCnts_13, 63, 32) @[build/NutShell.fir.opt.mlir 15995:35]
    node perfCntsHiMapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15997:35]
    node perfCntsHiMapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 15999:35]
    node perfCntsHiMapping_14_2_1 = bits(perfCnts_14, 63, 32) @[build/NutShell.fir.opt.mlir 16001:35]
    node perfCntsHiMapping_14_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16003:35]
    node perfCntsHiMapping_14_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16005:35]
    node perfCntsHiMapping_15_2_1 = bits(perfCnts_15, 63, 32) @[build/NutShell.fir.opt.mlir 16007:35]
    node perfCntsHiMapping_15_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16009:35]
    node perfCntsHiMapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16011:35]
    node perfCntsHiMapping_16_2_1 = bits(perfCnts_16, 63, 32) @[build/NutShell.fir.opt.mlir 16013:35]
    node perfCntsHiMapping_16_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16015:35]
    node perfCntsHiMapping_16_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16017:35]
    node perfCntsHiMapping_17_2_1 = bits(perfCnts_17, 63, 32) @[build/NutShell.fir.opt.mlir 16019:35]
    node perfCntsHiMapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16021:35]
    node perfCntsHiMapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16023:35]
    node perfCntsHiMapping_18_2_1 = bits(perfCnts_18, 63, 32) @[build/NutShell.fir.opt.mlir 16025:35]
    node perfCntsHiMapping_18_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16027:35]
    node perfCntsHiMapping_18_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16029:35]
    node perfCntsHiMapping_19_2_1 = bits(perfCnts_19, 63, 32) @[build/NutShell.fir.opt.mlir 16031:35]
    node perfCntsHiMapping_19_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16033:35]
    node perfCntsHiMapping_19_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16035:35]
    node perfCntsHiMapping_20_2_1 = bits(perfCnts_20, 63, 32) @[build/NutShell.fir.opt.mlir 16037:35]
    node perfCntsHiMapping_20_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16039:35]
    node perfCntsHiMapping_20_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16041:35]
    node perfCntsHiMapping_21_2_1 = bits(perfCnts_21, 63, 32) @[build/NutShell.fir.opt.mlir 16043:35]
    node perfCntsHiMapping_21_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16045:35]
    node perfCntsHiMapping_21_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16047:35]
    node perfCntsHiMapping_22_2_1 = bits(perfCnts_22, 63, 32) @[build/NutShell.fir.opt.mlir 16049:35]
    node perfCntsHiMapping_22_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16051:35]
    node perfCntsHiMapping_22_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16053:35]
    node perfCntsHiMapping_23_2_1 = bits(perfCnts_23, 63, 32) @[build/NutShell.fir.opt.mlir 16055:35]
    node perfCntsHiMapping_23_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16057:35]
    node perfCntsHiMapping_23_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16059:35]
    node perfCntsHiMapping_24_2_1 = bits(perfCnts_24, 63, 32) @[build/NutShell.fir.opt.mlir 16061:35]
    node perfCntsHiMapping_24_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16063:35]
    node perfCntsHiMapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16065:35]
    node perfCntsHiMapping_25_2_1 = bits(perfCnts_25, 63, 32) @[build/NutShell.fir.opt.mlir 16067:35]
    node perfCntsHiMapping_25_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16069:35]
    node perfCntsHiMapping_25_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16071:35]
    node perfCntsHiMapping_26_2_1 = bits(perfCnts_26, 63, 32) @[build/NutShell.fir.opt.mlir 16073:35]
    node perfCntsHiMapping_26_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16075:35]
    node perfCntsHiMapping_26_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16077:35]
    node perfCntsHiMapping_27_2_1 = bits(perfCnts_27, 63, 32) @[build/NutShell.fir.opt.mlir 16079:35]
    node perfCntsHiMapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16081:35]
    node perfCntsHiMapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16083:35]
    node perfCntsHiMapping_28_2_1 = bits(perfCnts_28, 63, 32) @[build/NutShell.fir.opt.mlir 16085:35]
    node perfCntsHiMapping_28_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16087:35]
    node perfCntsHiMapping_28_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16089:35]
    node perfCntsHiMapping_29_2_1 = bits(perfCnts_29, 63, 32) @[build/NutShell.fir.opt.mlir 16091:35]
    node perfCntsHiMapping_29_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16093:35]
    node perfCntsHiMapping_29_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16095:35]
    node perfCntsHiMapping_30_2_1 = bits(perfCnts_30, 63, 32) @[build/NutShell.fir.opt.mlir 16097:35]
    node perfCntsHiMapping_30_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16099:35]
    node perfCntsHiMapping_30_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16101:35]
    node perfCntsHiMapping_31_2_1 = bits(perfCnts_31, 63, 32) @[build/NutShell.fir.opt.mlir 16103:35]
    node perfCntsHiMapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16105:35]
    node perfCntsHiMapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16107:35]
    node perfCntsHiMapping_32_2_1 = bits(perfCnts_32, 63, 32) @[build/NutShell.fir.opt.mlir 16109:35]
    node perfCntsHiMapping_32_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16111:35]
    node perfCntsHiMapping_32_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16113:35]
    node perfCntsHiMapping_33_2_1 = bits(perfCnts_33, 63, 32) @[build/NutShell.fir.opt.mlir 16115:35]
    node perfCntsHiMapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16117:35]
    node perfCntsHiMapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16119:35]
    node perfCntsHiMapping_34_2_1 = bits(perfCnts_34, 63, 32) @[build/NutShell.fir.opt.mlir 16121:35]
    node perfCntsHiMapping_34_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16123:35]
    node perfCntsHiMapping_34_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16125:35]
    node perfCntsHiMapping_35_2_1 = bits(perfCnts_35, 63, 32) @[build/NutShell.fir.opt.mlir 16127:35]
    node perfCntsHiMapping_35_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16129:35]
    node perfCntsHiMapping_35_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16131:35]
    node perfCntsHiMapping_36_2_1 = bits(perfCnts_36, 63, 32) @[build/NutShell.fir.opt.mlir 16133:35]
    node perfCntsHiMapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16135:35]
    node perfCntsHiMapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16137:35]
    node perfCntsHiMapping_37_2_1 = bits(perfCnts_37, 63, 32) @[build/NutShell.fir.opt.mlir 16139:35]
    node perfCntsHiMapping_37_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16141:35]
    node perfCntsHiMapping_37_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16143:35]
    node perfCntsHiMapping_38_2_1 = bits(perfCnts_38, 63, 32) @[build/NutShell.fir.opt.mlir 16145:35]
    node perfCntsHiMapping_38_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16147:35]
    node perfCntsHiMapping_38_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16149:35]
    node perfCntsHiMapping_39_2_1 = bits(perfCnts_39, 63, 32) @[build/NutShell.fir.opt.mlir 16151:35]
    node perfCntsHiMapping_39_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16153:35]
    node perfCntsHiMapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16155:35]
    node perfCntsHiMapping_40_2_1 = bits(perfCnts_40, 63, 32) @[build/NutShell.fir.opt.mlir 16157:35]
    node perfCntsHiMapping_40_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16159:35]
    node perfCntsHiMapping_40_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16161:35]
    node perfCntsHiMapping_41_2_1 = bits(perfCnts_41, 63, 32) @[build/NutShell.fir.opt.mlir 16163:35]
    node perfCntsHiMapping_41_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16165:35]
    node perfCntsHiMapping_41_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16167:35]
    node perfCntsHiMapping_42_2_1 = bits(perfCnts_42, 63, 32) @[build/NutShell.fir.opt.mlir 16169:35]
    node perfCntsHiMapping_42_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16171:35]
    node perfCntsHiMapping_42_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16173:35]
    node perfCntsHiMapping_43_2_1 = bits(perfCnts_43, 63, 32) @[build/NutShell.fir.opt.mlir 16175:35]
    node perfCntsHiMapping_43_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16177:35]
    node perfCntsHiMapping_43_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16179:35]
    node perfCntsHiMapping_44_2_1 = bits(perfCnts_44, 63, 32) @[build/NutShell.fir.opt.mlir 16181:35]
    node perfCntsHiMapping_44_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16183:35]
    node perfCntsHiMapping_44_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16185:35]
    node perfCntsHiMapping_45_2_1 = bits(perfCnts_45, 63, 32) @[build/NutShell.fir.opt.mlir 16187:35]
    node perfCntsHiMapping_45_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16189:35]
    node perfCntsHiMapping_45_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16191:35]
    node perfCntsHiMapping_46_2_1 = bits(perfCnts_46, 63, 32) @[build/NutShell.fir.opt.mlir 16193:35]
    node perfCntsHiMapping_46_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16195:35]
    node perfCntsHiMapping_46_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16197:35]
    node perfCntsHiMapping_47_2_1 = bits(perfCnts_47, 63, 32) @[build/NutShell.fir.opt.mlir 16199:35]
    node perfCntsHiMapping_47_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16201:35]
    node perfCntsHiMapping_47_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16203:35]
    node perfCntsHiMapping_48_2_1 = bits(perfCnts_48, 63, 32) @[build/NutShell.fir.opt.mlir 16205:35]
    node perfCntsHiMapping_48_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16207:35]
    node perfCntsHiMapping_48_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16209:35]
    node perfCntsHiMapping_49_2_1 = bits(perfCnts_49, 63, 32) @[build/NutShell.fir.opt.mlir 16211:35]
    node perfCntsHiMapping_49_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16213:35]
    node perfCntsHiMapping_49_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16215:35]
    node perfCntsHiMapping_50_2_1 = bits(perfCnts_50, 63, 32) @[build/NutShell.fir.opt.mlir 16217:35]
    node perfCntsHiMapping_50_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16219:35]
    node perfCntsHiMapping_50_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16221:35]
    node perfCntsHiMapping_51_2_1 = bits(perfCnts_51, 63, 32) @[build/NutShell.fir.opt.mlir 16223:35]
    node perfCntsHiMapping_51_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16225:35]
    node perfCntsHiMapping_51_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16227:35]
    node perfCntsHiMapping_52_2_1 = bits(perfCnts_52, 63, 32) @[build/NutShell.fir.opt.mlir 16229:35]
    node perfCntsHiMapping_52_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16231:35]
    node perfCntsHiMapping_52_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16233:35]
    node perfCntsHiMapping_53_2_1 = bits(perfCnts_53, 63, 32) @[build/NutShell.fir.opt.mlir 16235:35]
    node perfCntsHiMapping_53_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16237:35]
    node perfCntsHiMapping_53_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16239:35]
    node perfCntsHiMapping_54_2_1 = bits(perfCnts_54, 63, 32) @[build/NutShell.fir.opt.mlir 16241:35]
    node perfCntsHiMapping_54_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16243:35]
    node perfCntsHiMapping_54_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16245:35]
    node perfCntsHiMapping_55_2_1 = bits(perfCnts_55, 63, 32) @[build/NutShell.fir.opt.mlir 16247:35]
    node perfCntsHiMapping_55_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16249:35]
    node perfCntsHiMapping_55_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16251:35]
    node perfCntsHiMapping_56_2_1 = bits(perfCnts_56, 63, 32) @[build/NutShell.fir.opt.mlir 16253:35]
    node perfCntsHiMapping_56_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16255:35]
    node perfCntsHiMapping_56_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16257:35]
    node perfCntsHiMapping_57_2_1 = bits(perfCnts_57, 63, 32) @[build/NutShell.fir.opt.mlir 16259:35]
    node perfCntsHiMapping_57_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16261:35]
    node perfCntsHiMapping_57_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16263:35]
    node perfCntsHiMapping_58_2_1 = bits(perfCnts_58, 63, 32) @[build/NutShell.fir.opt.mlir 16265:35]
    node perfCntsHiMapping_58_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16267:35]
    node perfCntsHiMapping_58_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16269:35]
    node perfCntsHiMapping_59_2_1 = bits(perfCnts_59, 63, 32) @[build/NutShell.fir.opt.mlir 16271:35]
    node perfCntsHiMapping_59_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16273:35]
    node perfCntsHiMapping_59_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16275:35]
    node perfCntsHiMapping_60_2_1 = bits(perfCnts_60, 63, 32) @[build/NutShell.fir.opt.mlir 16277:35]
    node perfCntsHiMapping_60_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16279:35]
    node perfCntsHiMapping_60_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16281:35]
    node perfCntsHiMapping_61_2_1 = bits(perfCnts_61, 63, 32) @[build/NutShell.fir.opt.mlir 16283:35]
    node perfCntsHiMapping_61_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16285:35]
    node perfCntsHiMapping_61_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16287:35]
    node perfCntsHiMapping_62_2_1 = bits(perfCnts_62, 63, 32) @[build/NutShell.fir.opt.mlir 16289:35]
    node perfCntsHiMapping_62_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16291:35]
    node perfCntsHiMapping_62_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16293:35]
    node perfCntsHiMapping_63_2_1 = bits(perfCnts_63, 63, 32) @[build/NutShell.fir.opt.mlir 16295:35]
    node perfCntsHiMapping_63_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16297:35]
    node perfCntsHiMapping_63_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16299:35]
    node perfCntsHiMapping_64_2_1 = bits(perfCnts_64, 63, 32) @[build/NutShell.fir.opt.mlir 16301:35]
    node perfCntsHiMapping_64_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16303:35]
    node perfCntsHiMapping_64_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16305:35]
    node perfCntsHiMapping_65_2_1 = bits(perfCnts_65, 63, 32) @[build/NutShell.fir.opt.mlir 16307:35]
    node perfCntsHiMapping_65_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16309:35]
    node perfCntsHiMapping_65_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16311:35]
    node perfCntsHiMapping_66_2_1 = bits(perfCnts_66, 63, 32) @[build/NutShell.fir.opt.mlir 16313:35]
    node perfCntsHiMapping_66_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16315:35]
    node perfCntsHiMapping_66_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16317:35]
    node perfCntsHiMapping_67_2_1 = bits(perfCnts_67, 63, 32) @[build/NutShell.fir.opt.mlir 16319:35]
    node perfCntsHiMapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16321:35]
    node perfCntsHiMapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16323:35]
    node perfCntsHiMapping_68_2_1 = bits(perfCnts_68, 63, 32) @[build/NutShell.fir.opt.mlir 16325:35]
    node perfCntsHiMapping_68_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16327:35]
    node perfCntsHiMapping_68_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16329:35]
    node perfCntsHiMapping_69_2_1 = bits(perfCnts_69, 63, 32) @[build/NutShell.fir.opt.mlir 16331:35]
    node perfCntsHiMapping_69_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16333:35]
    node perfCntsHiMapping_69_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16335:35]
    node perfCntsHiMapping_70_2_1 = bits(perfCnts_70, 63, 32) @[build/NutShell.fir.opt.mlir 16337:35]
    node perfCntsHiMapping_70_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16339:35]
    node perfCntsHiMapping_70_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16341:35]
    node perfCntsHiMapping_71_2_1 = bits(perfCnts_71, 63, 32) @[build/NutShell.fir.opt.mlir 16343:35]
    node perfCntsHiMapping_71_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16345:35]
    node perfCntsHiMapping_71_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16347:35]
    node perfCntsHiMapping_72_2_1 = bits(perfCnts_72, 63, 32) @[build/NutShell.fir.opt.mlir 16349:35]
    node perfCntsHiMapping_72_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16351:35]
    node perfCntsHiMapping_72_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16353:35]
    node perfCntsHiMapping_73_2_1 = bits(perfCnts_73, 63, 32) @[build/NutShell.fir.opt.mlir 16355:35]
    node perfCntsHiMapping_73_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16357:35]
    node perfCntsHiMapping_73_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16359:35]
    node perfCntsHiMapping_74_2_1 = bits(perfCnts_74, 63, 32) @[build/NutShell.fir.opt.mlir 16361:35]
    node perfCntsHiMapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16363:35]
    node perfCntsHiMapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16365:35]
    node perfCntsHiMapping_75_2_1 = bits(perfCnts_75, 63, 32) @[build/NutShell.fir.opt.mlir 16367:35]
    node perfCntsHiMapping_75_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16369:35]
    node perfCntsHiMapping_75_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16371:35]
    node perfCntsHiMapping_76_2_1 = bits(perfCnts_76, 63, 32) @[build/NutShell.fir.opt.mlir 16373:35]
    node perfCntsHiMapping_76_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16375:35]
    node perfCntsHiMapping_76_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16377:35]
    node perfCntsHiMapping_77_2_1 = bits(perfCnts_77, 63, 32) @[build/NutShell.fir.opt.mlir 16379:35]
    node perfCntsHiMapping_77_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16381:35]
    node perfCntsHiMapping_77_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16383:35]
    node perfCntsHiMapping_78_2_1 = bits(perfCnts_78, 63, 32) @[build/NutShell.fir.opt.mlir 16385:35]
    node perfCntsHiMapping_78_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16387:35]
    node perfCntsHiMapping_78_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16389:35]
    node perfCntsHiMapping_79_2_1 = bits(perfCnts_79, 63, 32) @[build/NutShell.fir.opt.mlir 16391:35]
    node perfCntsHiMapping_79_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16393:35]
    node perfCntsHiMapping_79_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16395:35]
    node perfCntsHiMapping_80_2_1 = bits(perfCnts_80, 63, 32) @[build/NutShell.fir.opt.mlir 16397:35]
    node perfCntsHiMapping_80_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16399:35]
    node perfCntsHiMapping_80_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16401:35]
    node perfCntsHiMapping_81_2_1 = bits(perfCnts_81, 63, 32) @[build/NutShell.fir.opt.mlir 16403:35]
    node perfCntsHiMapping_81_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16405:35]
    node perfCntsHiMapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16407:35]
    node perfCntsHiMapping_82_2_1 = bits(perfCnts_82, 63, 32) @[build/NutShell.fir.opt.mlir 16409:35]
    node perfCntsHiMapping_82_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16411:35]
    node perfCntsHiMapping_82_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16413:35]
    node perfCntsHiMapping_83_2_1 = bits(perfCnts_83, 63, 32) @[build/NutShell.fir.opt.mlir 16415:35]
    node perfCntsHiMapping_83_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16417:35]
    node perfCntsHiMapping_83_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16419:35]
    node perfCntsHiMapping_84_2_1 = bits(perfCnts_84, 63, 32) @[build/NutShell.fir.opt.mlir 16421:35]
    node perfCntsHiMapping_84_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16423:35]
    node perfCntsHiMapping_84_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16425:35]
    node perfCntsHiMapping_85_2_1 = bits(perfCnts_85, 63, 32) @[build/NutShell.fir.opt.mlir 16427:35]
    node perfCntsHiMapping_85_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16429:35]
    node perfCntsHiMapping_85_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16431:35]
    node perfCntsHiMapping_86_2_1 = bits(perfCnts_86, 63, 32) @[build/NutShell.fir.opt.mlir 16433:35]
    node perfCntsHiMapping_86_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16435:35]
    node perfCntsHiMapping_86_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16437:35]
    node perfCntsHiMapping_87_2_1 = bits(perfCnts_87, 63, 32) @[build/NutShell.fir.opt.mlir 16439:35]
    node perfCntsHiMapping_87_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16441:35]
    node perfCntsHiMapping_87_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16443:35]
    node perfCntsHiMapping_88_2_1 = bits(perfCnts_88, 63, 32) @[build/NutShell.fir.opt.mlir 16445:35]
    node perfCntsHiMapping_88_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16447:35]
    node perfCntsHiMapping_88_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16449:35]
    node perfCntsHiMapping_89_2_1 = bits(perfCnts_89, 63, 32) @[build/NutShell.fir.opt.mlir 16451:35]
    node perfCntsHiMapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16453:35]
    node perfCntsHiMapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16455:35]
    node perfCntsHiMapping_90_2_1 = bits(perfCnts_90, 63, 32) @[build/NutShell.fir.opt.mlir 16457:35]
    node perfCntsHiMapping_90_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16459:35]
    node perfCntsHiMapping_90_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16461:35]
    node perfCntsHiMapping_91_2_1 = bits(perfCnts_91, 63, 32) @[build/NutShell.fir.opt.mlir 16463:35]
    node perfCntsHiMapping_91_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16465:35]
    node perfCntsHiMapping_91_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16467:35]
    node perfCntsHiMapping_92_2_1 = bits(perfCnts_92, 63, 32) @[build/NutShell.fir.opt.mlir 16469:35]
    node perfCntsHiMapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16471:35]
    node perfCntsHiMapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16473:35]
    node perfCntsHiMapping_93_2_1 = bits(perfCnts_93, 63, 32) @[build/NutShell.fir.opt.mlir 16475:35]
    node perfCntsHiMapping_93_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16477:35]
    node perfCntsHiMapping_93_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16479:35]
    node perfCntsHiMapping_94_2_1 = bits(perfCnts_94, 63, 32) @[build/NutShell.fir.opt.mlir 16481:35]
    node perfCntsHiMapping_94_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16483:35]
    node perfCntsHiMapping_94_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16485:35]
    node perfCntsHiMapping_95_2_1 = bits(perfCnts_95, 63, 32) @[build/NutShell.fir.opt.mlir 16487:35]
    node perfCntsHiMapping_95_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16489:35]
    node perfCntsHiMapping_95_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16491:35]
    node perfCntsHiMapping_96_2_1 = bits(perfCnts_96, 63, 32) @[build/NutShell.fir.opt.mlir 16493:35]
    node perfCntsHiMapping_96_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16495:35]
    node perfCntsHiMapping_96_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16497:35]
    node perfCntsHiMapping_97_2_1 = bits(perfCnts_97, 63, 32) @[build/NutShell.fir.opt.mlir 16499:35]
    node perfCntsHiMapping_97_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16501:35]
    node perfCntsHiMapping_97_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16503:35]
    node perfCntsHiMapping_98_2_1 = bits(perfCnts_98, 63, 32) @[build/NutShell.fir.opt.mlir 16505:35]
    node perfCntsHiMapping_98_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16507:35]
    node perfCntsHiMapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16509:35]
    node perfCntsHiMapping_99_2_1 = bits(perfCnts_99, 63, 32) @[build/NutShell.fir.opt.mlir 16511:35]
    node perfCntsHiMapping_99_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16513:35]
    node perfCntsHiMapping_99_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16515:35]
    node perfCntsHiMapping_100_2_1 = bits(perfCnts_100, 63, 32) @[build/NutShell.fir.opt.mlir 16517:36]
    node perfCntsHiMapping_100_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16519:36]
    node perfCntsHiMapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16521:36]
    node perfCntsHiMapping_101_2_1 = bits(perfCnts_101, 63, 32) @[build/NutShell.fir.opt.mlir 16523:36]
    node perfCntsHiMapping_101_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16525:36]
    node perfCntsHiMapping_101_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16527:36]
    node perfCntsHiMapping_102_2_1 = bits(perfCnts_102, 63, 32) @[build/NutShell.fir.opt.mlir 16529:36]
    node perfCntsHiMapping_102_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16531:36]
    node perfCntsHiMapping_102_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16533:36]
    node perfCntsHiMapping_103_2_1 = bits(perfCnts_103, 63, 32) @[build/NutShell.fir.opt.mlir 16535:36]
    node perfCntsHiMapping_103_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16537:36]
    node perfCntsHiMapping_103_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16539:36]
    node perfCntsHiMapping_104_2_1 = bits(perfCnts_104, 63, 32) @[build/NutShell.fir.opt.mlir 16541:36]
    node perfCntsHiMapping_104_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16543:36]
    node perfCntsHiMapping_104_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16545:36]
    node perfCntsHiMapping_105_2_1 = bits(perfCnts_105, 63, 32) @[build/NutShell.fir.opt.mlir 16547:36]
    node perfCntsHiMapping_105_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16549:36]
    node perfCntsHiMapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16551:36]
    node perfCntsHiMapping_106_2_1 = bits(perfCnts_106, 63, 32) @[build/NutShell.fir.opt.mlir 16553:36]
    node perfCntsHiMapping_106_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16555:36]
    node perfCntsHiMapping_106_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16557:36]
    node perfCntsHiMapping_107_2_1 = bits(perfCnts_107, 63, 32) @[build/NutShell.fir.opt.mlir 16559:36]
    node perfCntsHiMapping_107_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16561:36]
    node perfCntsHiMapping_107_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16563:36]
    node perfCntsHiMapping_108_2_1 = bits(perfCnts_108, 63, 32) @[build/NutShell.fir.opt.mlir 16565:36]
    node perfCntsHiMapping_108_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16567:36]
    node perfCntsHiMapping_108_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16569:36]
    node perfCntsHiMapping_109_2_1 = bits(perfCnts_109, 63, 32) @[build/NutShell.fir.opt.mlir 16571:36]
    node perfCntsHiMapping_109_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16573:36]
    node perfCntsHiMapping_109_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16575:36]
    node perfCntsHiMapping_110_2_1 = bits(perfCnts_110, 63, 32) @[build/NutShell.fir.opt.mlir 16577:36]
    node perfCntsHiMapping_110_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16579:36]
    node perfCntsHiMapping_110_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16581:36]
    node perfCntsHiMapping_111_2_1 = bits(perfCnts_111, 63, 32) @[build/NutShell.fir.opt.mlir 16583:36]
    node perfCntsHiMapping_111_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16585:36]
    node perfCntsHiMapping_111_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16587:36]
    node perfCntsHiMapping_112_2_1 = bits(perfCnts_112, 63, 32) @[build/NutShell.fir.opt.mlir 16589:36]
    node perfCntsHiMapping_112_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16591:36]
    node perfCntsHiMapping_112_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16593:36]
    node perfCntsHiMapping_113_2_1 = bits(perfCnts_113, 63, 32) @[build/NutShell.fir.opt.mlir 16595:36]
    node perfCntsHiMapping_113_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16597:36]
    node perfCntsHiMapping_113_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16599:36]
    node perfCntsHiMapping_114_2_1 = bits(perfCnts_114, 63, 32) @[build/NutShell.fir.opt.mlir 16601:36]
    node perfCntsHiMapping_114_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16603:36]
    node perfCntsHiMapping_114_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16605:36]
    node perfCntsHiMapping_115_2_1 = bits(perfCnts_115, 63, 32) @[build/NutShell.fir.opt.mlir 16607:36]
    node perfCntsHiMapping_115_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16609:36]
    node perfCntsHiMapping_115_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16611:36]
    node perfCntsHiMapping_116_2_1 = bits(perfCnts_116, 63, 32) @[build/NutShell.fir.opt.mlir 16613:36]
    node perfCntsHiMapping_116_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16615:36]
    node perfCntsHiMapping_116_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16617:36]
    node perfCntsHiMapping_117_2_1 = bits(perfCnts_117, 63, 32) @[build/NutShell.fir.opt.mlir 16619:36]
    node perfCntsHiMapping_117_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16621:36]
    node perfCntsHiMapping_117_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16623:36]
    node perfCntsHiMapping_118_2_1 = bits(perfCnts_118, 63, 32) @[build/NutShell.fir.opt.mlir 16625:36]
    node perfCntsHiMapping_118_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16627:36]
    node perfCntsHiMapping_118_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16629:36]
    node perfCntsHiMapping_119_2_1 = bits(perfCnts_119, 63, 32) @[build/NutShell.fir.opt.mlir 16631:36]
    node perfCntsHiMapping_119_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16633:36]
    node perfCntsHiMapping_119_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16635:36]
    node perfCntsHiMapping_120_2_1 = bits(perfCnts_120, 63, 32) @[build/NutShell.fir.opt.mlir 16637:36]
    node perfCntsHiMapping_120_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16639:36]
    node perfCntsHiMapping_120_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16641:36]
    node perfCntsHiMapping_121_2_1 = bits(perfCnts_121, 63, 32) @[build/NutShell.fir.opt.mlir 16643:36]
    node perfCntsHiMapping_121_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16645:36]
    node perfCntsHiMapping_121_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16647:36]
    node perfCntsHiMapping_122_2_1 = bits(perfCnts_122, 63, 32) @[build/NutShell.fir.opt.mlir 16649:36]
    node perfCntsHiMapping_122_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16651:36]
    node perfCntsHiMapping_122_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16653:36]
    node perfCntsHiMapping_123_2_1 = bits(perfCnts_123, 63, 32) @[build/NutShell.fir.opt.mlir 16655:36]
    node perfCntsHiMapping_123_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16657:36]
    node perfCntsHiMapping_123_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16659:36]
    node perfCntsHiMapping_124_2_1 = bits(perfCnts_124, 63, 32) @[build/NutShell.fir.opt.mlir 16661:36]
    node perfCntsHiMapping_124_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16663:36]
    node perfCntsHiMapping_124_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16665:36]
    node perfCntsHiMapping_125_2_1 = bits(perfCnts_125, 63, 32) @[build/NutShell.fir.opt.mlir 16667:36]
    node perfCntsHiMapping_125_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16669:36]
    node perfCntsHiMapping_125_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16671:36]
    node perfCntsHiMapping_126_2_1 = bits(perfCnts_126, 63, 32) @[build/NutShell.fir.opt.mlir 16673:36]
    node perfCntsHiMapping_126_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16675:36]
    node perfCntsHiMapping_126_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16677:36]
    node perfCntsHiMapping_127_2_1 = bits(perfCnts_127, 63, 32) @[build/NutShell.fir.opt.mlir 16679:36]
    node perfCntsHiMapping_127_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16681:36]
    node perfCntsHiMapping_127_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16683:36]
    node mapping_27_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16685:25]
    node mapping_27_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16687:25]
    node mapping_149_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16689:26]
    node mapping_149_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16691:26]
    node mapping_17_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16693:25]
    node mapping_17_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16695:25]
    node mapping_31_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16697:25]
    node mapping_31_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16699:25]
    node mapping_155_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16701:26]
    node mapping_155_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16703:26]
    node mapping_89_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16705:25]
    node mapping_89_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16707:25]
    node mapping_lo = cat(mip.s.s, mip.s.u) @[build/NutShell.fir.opt.mlir 16709:21]
    node mapping_hi = cat(mip.s.m, mip.s.h) @[build/NutShell.fir.opt.mlir 16711:21]
    node _mapping_T = cat(mapping_hi, mapping_lo) @[build/NutShell.fir.opt.mlir 16713:21]
    node mapping_lo_1 = cat(mip.t.s, mip.t.u) @[build/NutShell.fir.opt.mlir 16715:23]
    node mapping_hi_1 = cat(mip.t.m, mip.t.h) @[build/NutShell.fir.opt.mlir 16717:23]
    node _mapping_T_1 = cat(mapping_hi_1, mapping_lo_1) @[build/NutShell.fir.opt.mlir 16719:23]
    node mapping_lo_2 = cat(mip.e.s, mip.e.u) @[build/NutShell.fir.opt.mlir 16721:23]
    node mapping_hi_2 = cat(mip.e.m, mip.e.h) @[build/NutShell.fir.opt.mlir 16723:23]
    node _mapping_T_2 = cat(mapping_hi_2, mapping_lo_2) @[build/NutShell.fir.opt.mlir 16725:23]
    node mapping_hi_3 = cat(_mapping_T_2, _mapping_T_1) @[build/NutShell.fir.opt.mlir 16727:23]
    node mapping_47_2_1 = cat(mapping_hi_3, _mapping_T) @[build/NutShell.fir.opt.mlir 16729:25]
    node mapping_9_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16731:24]
    node mapping_9_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16733:24]
    node mapping_39_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16735:25]
    node mapping_5_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16737:24]
    node mapping_138_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16739:26]
    node mapping_146_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16741:26]
    node mapping_98_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16743:25]
    node mapping_92_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16745:25]
    node mapping_92_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16747:25]
    node mapping_24_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16749:25]
    node mapping_132_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16751:26]
    node mapping_74_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16753:25]
    node mapping_74_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16755:25]
    node mapping_67_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16757:25]
    node mapping_67_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16759:25]
    node mapping_36_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16761:25]
    node mapping_36_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16763:25]
    node mapping_143_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16765:26]
    node mapping_143_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16767:26]
    node mapping_147_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16769:26]
    node mapping_147_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16771:26]
    node mapping_33_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16773:25]
    node mapping_33_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16775:25]
    node mapping_148_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16777:26]
    node mapping_148_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16779:26]
    node mapping_lo_3 = cat(mip.s.s, mip.s.u) @[build/NutShell.fir.opt.mlir 16781:23]
    node mapping_hi_4 = cat(mip.s.m, mip.s.h) @[build/NutShell.fir.opt.mlir 16783:23]
    node _mapping_T_3 = cat(mapping_hi_4, mapping_lo_3) @[build/NutShell.fir.opt.mlir 16785:23]
    node mapping_lo_4 = cat(mip.t.s, mip.t.u) @[build/NutShell.fir.opt.mlir 16787:23]
    node mapping_hi_5 = cat(mip.t.m, mip.t.h) @[build/NutShell.fir.opt.mlir 16789:23]
    node _mapping_T_4 = cat(mapping_hi_5, mapping_lo_4) @[build/NutShell.fir.opt.mlir 16791:23]
    node mapping_lo_5 = cat(mip.e.s, mip.e.u) @[build/NutShell.fir.opt.mlir 16793:23]
    node mapping_hi_6 = cat(mip.e.m, mip.e.h) @[build/NutShell.fir.opt.mlir 16795:23]
    node _mapping_T_5 = cat(mapping_hi_6, mapping_lo_5) @[build/NutShell.fir.opt.mlir 16797:23]
    node mapping_hi_7 = cat(_mapping_T_5, _mapping_T_4) @[build/NutShell.fir.opt.mlir 16799:23]
    node mapping_105_2_1 = cat(mapping_hi_7, _mapping_T_3) @[build/NutShell.fir.opt.mlir 16801:26]
    node mapping_105_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16803:26]
    node mapping_151_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16805:26]
    node mapping_151_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16807:26]
    node mapping_141_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16809:26]
    node mapping_141_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16811:26]
    node mapping_13_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16813:25]
    node mapping_13_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16815:25]
    node mapping_128_2_2 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16817:26]
    node mapping_128_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16819:26]
    node mapping_100_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16821:26]
    node mapping_15_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16823:25]
    node mapping_136_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16825:26]
    node mapping_81_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 16827:25]
    node addr = bits(io.in.bits.src2, 11, 0) @[build/NutShell.fir.opt.mlir 16829:15]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 16830:16]
    node _csri_T = bits(io.cfIn.instr, 19, 15) @[build/NutShell.fir.opt.mlir 16832:18]
    node csri = cat(UInt<59>(0), _csri_T) @[build/NutShell.fir.opt.mlir 16834:15]
    node _wdata_T = or(rdata, io.in.bits.src1) @[build/NutShell.fir.opt.mlir 16836:19]
    node _wdata_T_1 = not(io.in.bits.src1) @[build/NutShell.fir.opt.mlir 16838:21]
    node _wdata_T_2 = and(rdata, _wdata_T_1) @[build/NutShell.fir.opt.mlir 16840:21]
    node _wdata_T_3 = or(rdata, csri) @[build/NutShell.fir.opt.mlir 16842:21]
    node _wdata_T_4 = not(csri) @[build/NutShell.fir.opt.mlir 16844:21]
    node _wdata_T_5 = and(rdata, _wdata_T_4) @[build/NutShell.fir.opt.mlir 16846:21]
    node _wdata_T_6 = eq(UInt<1>(1), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16848:21]
    node _wdata_T_7 = eq(UInt<2>(2), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16850:21]
    node _wdata_T_8 = eq(UInt<2>(3), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16852:21]
    node _wdata_T_9 = eq(UInt<3>(5), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16855:21]
    node _wdata_T_10 = eq(UInt<3>(6), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16858:22]
    node _wdata_T_11 = eq(UInt<3>(7), io.in.bits.func) @[build/NutShell.fir.opt.mlir 16860:22]
    node _wdata_T_12 = mux(_wdata_T_6, io.in.bits.src1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16862:22]
    node _wdata_T_13 = mux(_wdata_T_7, _wdata_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16864:22]
    node _wdata_T_14 = mux(_wdata_T_8, _wdata_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16866:22]
    node _wdata_T_15 = mux(_wdata_T_9, csri, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16868:22]
    node _wdata_T_16 = mux(_wdata_T_10, _wdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16870:22]
    node _wdata_T_17 = mux(_wdata_T_11, _wdata_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16872:22]
    node _wdata_T_18 = or(_wdata_T_12, _wdata_T_13) @[build/NutShell.fir.opt.mlir 16874:22]
    node _wdata_T_19 = or(_wdata_T_18, _wdata_T_14) @[build/NutShell.fir.opt.mlir 16876:22]
    node _wdata_T_20 = or(_wdata_T_19, _wdata_T_15) @[build/NutShell.fir.opt.mlir 16878:22]
    node _wdata_T_21 = or(_wdata_T_20, _wdata_T_16) @[build/NutShell.fir.opt.mlir 16880:22]
    node _wdata_T_22 = or(_wdata_T_21, _wdata_T_17) @[build/NutShell.fir.opt.mlir 16882:22]
    wire wdata : UInt<64> @[build/NutShell.fir.opt.mlir 16883:16]
    connect wdata, _wdata_T_22 @[build/NutShell.fir.opt.mlir 16884:7]
    wire _satpLegalMode_WIRE : { mode : UInt<4>, asid : UInt<16>, ppn : UInt<44> } @[build/NutShell.fir.opt.mlir 16885:30]
    wire _satpLegalMode_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 16889:32]
    connect _satpLegalMode_WIRE_1, wdata @[build/NutShell.fir.opt.mlir 16890:7]
    node _satpLegalMode_T = bits(_satpLegalMode_WIRE_1, 43, 0) @[build/NutShell.fir.opt.mlir 16892:27]
    connect _satpLegalMode_WIRE.ppn, _satpLegalMode_T @[build/NutShell.fir.opt.mlir 16893:7]
    node _satpLegalMode_T_1 = bits(_satpLegalMode_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 16895:29]
    connect _satpLegalMode_WIRE.asid, _satpLegalMode_T_1 @[build/NutShell.fir.opt.mlir 16896:7]
    node _satpLegalMode_T_2 = bits(_satpLegalMode_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 16898:29]
    connect _satpLegalMode_WIRE.mode, _satpLegalMode_T_2 @[build/NutShell.fir.opt.mlir 16899:7]
    node _satpLegalMode_T_3 = eq(_satpLegalMode_WIRE.mode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16901:29]
    wire _satpLegalMode_WIRE_2 : { mode : UInt<4>, asid : UInt<16>, ppn : UInt<44> } @[build/NutShell.fir.opt.mlir 16902:32]
    wire _satpLegalMode_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 16906:32]
    connect _satpLegalMode_WIRE_3, wdata @[build/NutShell.fir.opt.mlir 16907:7]
    node _satpLegalMode_T_4 = bits(_satpLegalMode_WIRE_3, 43, 0) @[build/NutShell.fir.opt.mlir 16909:29]
    connect _satpLegalMode_WIRE_2.ppn, _satpLegalMode_T_4 @[build/NutShell.fir.opt.mlir 16910:7]
    node _satpLegalMode_T_5 = bits(_satpLegalMode_WIRE_3, 59, 44) @[build/NutShell.fir.opt.mlir 16912:29]
    connect _satpLegalMode_WIRE_2.asid, _satpLegalMode_T_5 @[build/NutShell.fir.opt.mlir 16913:7]
    node _satpLegalMode_T_6 = bits(_satpLegalMode_WIRE_3, 63, 60) @[build/NutShell.fir.opt.mlir 16915:29]
    connect _satpLegalMode_WIRE_2.mode, _satpLegalMode_T_6 @[build/NutShell.fir.opt.mlir 16916:7]
    node _satpLegalMode_T_7 = eq(_satpLegalMode_WIRE_2.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 16919:29]
    node satpLegalMode = or(_satpLegalMode_T_3, _satpLegalMode_T_7) @[build/NutShell.fir.opt.mlir 16921:24]
    node _wen_T = neq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16923:17]
    node _wen_T_1 = and(io.in.valid, _wen_T) @[build/NutShell.fir.opt.mlir 16925:19]
    node _wen_T_2 = neq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 16928:19]
    node _wen_T_3 = or(_wen_T_2, satpLegalMode) @[build/NutShell.fir.opt.mlir 16930:19]
    node _wen_T_4 = and(_wen_T_1, _wen_T_3) @[build/NutShell.fir.opt.mlir 16932:19]
    node _wen_T_5 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16934:19]
    node wen = and(_wen_T_4, _wen_T_5) @[build/NutShell.fir.opt.mlir 16936:14]
    node _isIllegalMode_T = bits(addr, 9, 8) @[build/NutShell.fir.opt.mlir 16938:27]
    node isIllegalMode = lt(privilegeMode, _isIllegalMode_T) @[build/NutShell.fir.opt.mlir 16940:24]
    node _justRead_T = eq(io.in.bits.func, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 16942:22]
    node _justRead_T_1 = eq(io.in.bits.func, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 16944:24]
    node _justRead_T_2 = or(_justRead_T, _justRead_T_1) @[build/NutShell.fir.opt.mlir 16946:24]
    node _justRead_T_3 = eq(io.in.bits.src1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16948:24]
    node justRead = and(_justRead_T_2, _justRead_T_3) @[build/NutShell.fir.opt.mlir 16950:19]
    node _isIllegalWrite_T = bits(addr, 11, 10) @[build/NutShell.fir.opt.mlir 16952:28]
    node _isIllegalWrite_T_1 = eq(_isIllegalWrite_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 16954:30]
    node _isIllegalWrite_T_2 = and(wen, _isIllegalWrite_T_1) @[build/NutShell.fir.opt.mlir 16956:30]
    node _isIllegalWrite_T_3 = eq(justRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16958:30]
    node isIllegalWrite = and(_isIllegalWrite_T_2, _isIllegalWrite_T_3) @[build/NutShell.fir.opt.mlir 16960:25]
    node isIllegalAccess = or(isIllegalMode, isIllegalWrite) @[build/NutShell.fir.opt.mlir 16962:26]
    node _T = eq(isIllegalAccess, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 16964:13]
    node _T_1 = and(wen, _T) @[build/NutShell.fir.opt.mlir 16966:15]
    node _rdata_T = and(perfCnts_6, perfCntsLoMapping_6_2_4) @[build/NutShell.fir.opt.mlir 16968:19]
    node _rdata_T_1 = and(perfCnts_73, perfCntsLoMapping_73_2_4) @[build/NutShell.fir.opt.mlir 16970:21]
    node _rdata_T_2 = and(perfCnts_60, perfCntsLoMapping_60_2_4) @[build/NutShell.fir.opt.mlir 16972:21]
    node _rdata_T_3 = and(perfCnts_105, perfCntsLoMapping_105_2_4) @[build/NutShell.fir.opt.mlir 16974:21]
    node _rdata_T_4 = and(perfCnts_124, perfCntsLoMapping_124_2_4) @[build/NutShell.fir.opt.mlir 16976:21]
    node _rdata_T_5 = and(marchid, mapping_5_2_4) @[build/NutShell.fir.opt.mlir 16978:21]
    node _rdata_T_6 = and(perfCnts_92, perfCntsLoMapping_92_2_4) @[build/NutShell.fir.opt.mlir 16980:21]
    node _rdata_T_7 = and(perfCnts_21, perfCntsLoMapping_21_2_4) @[build/NutShell.fir.opt.mlir 16982:21]
    node _rdata_T_8 = and(perfCnts_38, perfCntsLoMapping_38_2_4) @[build/NutShell.fir.opt.mlir 16984:21]
    node _rdata_T_9 = and(satp, mapping_9_2_4) @[build/NutShell.fir.opt.mlir 16986:21]
    node _rdata_T_10 = and(perfCnts_102, perfCntsLoMapping_102_2_4) @[build/NutShell.fir.opt.mlir 16988:22]
    node _rdata_T_11 = and(perfCnts_117, perfCntsLoMapping_117_2_4) @[build/NutShell.fir.opt.mlir 16990:22]
    node _rdata_T_12 = and(perfCnts_28, perfCntsLoMapping_28_2_4) @[build/NutShell.fir.opt.mlir 16992:22]
    node _rdata_T_13 = and(pmpcfg2, mapping_13_2_4) @[build/NutShell.fir.opt.mlir 16994:22]
    node _rdata_T_14 = and(perfCnts_85, perfCntsLoMapping_85_2_4) @[build/NutShell.fir.opt.mlir 16996:22]
    node _rdata_T_15 = and(pmpaddr1, mapping_15_2_4) @[build/NutShell.fir.opt.mlir 16998:22]
    node _rdata_T_16 = and(perfCnts_70, perfCntsLoMapping_70_2_4) @[build/NutShell.fir.opt.mlir 17000:22]
    node _rdata_T_17 = and(sscratch, mapping_17_2_4) @[build/NutShell.fir.opt.mlir 17002:22]
    node _rdata_T_18 = and(perfCnts_9, perfCntsLoMapping_9_2_4) @[build/NutShell.fir.opt.mlir 17004:22]
    node _rdata_T_19 = and(perfCnts_3, perfCntsLoMapping_3_2_4) @[build/NutShell.fir.opt.mlir 17006:22]
    node _rdata_T_20 = and(perfCnts_53, perfCntsLoMapping_53_2_4) @[build/NutShell.fir.opt.mlir 17008:22]
    node _rdata_T_21 = and(perfCnts_100, perfCntsLoMapping_100_2_4) @[build/NutShell.fir.opt.mlir 17010:22]
    node _rdata_T_22 = and(perfCnts_81, perfCntsLoMapping_81_2_4) @[build/NutShell.fir.opt.mlir 17012:22]
    node _rdata_T_23 = and(perfCnts_41, perfCntsLoMapping_41_2_4) @[build/NutShell.fir.opt.mlir 17014:22]
    node _rdata_T_24 = and(medeleg, mapping_24_2_4) @[build/NutShell.fir.opt.mlir 17016:22]
    node _rdata_T_25 = and(perfCnts_113, perfCntsLoMapping_113_2_4) @[build/NutShell.fir.opt.mlir 17018:22]
    node _rdata_T_26 = and(perfCnts_36, perfCntsLoMapping_36_2_4) @[build/NutShell.fir.opt.mlir 17020:22]
    node _rdata_T_27 = and(stvec, mapping_27_2_4) @[build/NutShell.fir.opt.mlir 17022:22]
    node _rdata_T_28 = and(perfCnts_13, perfCntsLoMapping_13_2_4) @[build/NutShell.fir.opt.mlir 17024:22]
    node _rdata_T_29 = and(perfCnts_109, perfCntsLoMapping_109_2_4) @[build/NutShell.fir.opt.mlir 17026:22]
    node _rdata_T_30 = and(perfCnts_77, perfCntsLoMapping_77_2_4) @[build/NutShell.fir.opt.mlir 17028:22]
    node _rdata_T_31 = and(sepc, mapping_31_2_4) @[build/NutShell.fir.opt.mlir 17030:22]
    node _rdata_T_32 = and(perfCnts_64, perfCntsLoMapping_64_2_4) @[build/NutShell.fir.opt.mlir 17032:22]
    node _rdata_T_33 = and(mcause, mapping_33_2_4) @[build/NutShell.fir.opt.mlir 17034:22]
    node _rdata_T_34 = and(perfCnts_17, perfCntsLoMapping_17_2_4) @[build/NutShell.fir.opt.mlir 17036:22]
    node _rdata_T_35 = and(perfCnts_45, perfCntsLoMapping_45_2_4) @[build/NutShell.fir.opt.mlir 17038:22]
    node _rdata_T_36 = and(mcounteren, mapping_36_2_4) @[build/NutShell.fir.opt.mlir 17040:22]
    node _rdata_T_37 = and(perfCnts_68, perfCntsLoMapping_68_2_4) @[build/NutShell.fir.opt.mlir 17042:22]
    node _rdata_T_38 = and(perfCnts_106, perfCntsLoMapping_106_2_4) @[build/NutShell.fir.opt.mlir 17044:22]
    node _rdata_T_39 = and(mvendorid, mapping_39_2_4) @[build/NutShell.fir.opt.mlir 17046:22]
    node _rdata_T_40 = and(perfCnts_94, perfCntsLoMapping_94_2_4) @[build/NutShell.fir.opt.mlir 17048:22]
    node _rdata_T_41 = and(perfCnts_89, perfCntsLoMapping_89_2_4) @[build/NutShell.fir.opt.mlir 17050:22]
    node _rdata_T_42 = and(mie, sieMask) @[build/NutShell.fir.opt.mlir 17052:22]
    node _rdata_T_43 = and(perfCnts_121, perfCntsLoMapping_121_2_4) @[build/NutShell.fir.opt.mlir 17054:22]
    node _rdata_T_44 = and(perfCnts_74, perfCntsLoMapping_74_2_4) @[build/NutShell.fir.opt.mlir 17056:22]
    node _rdata_T_45 = and(perfCnts_57, perfCntsLoMapping_57_2_4) @[build/NutShell.fir.opt.mlir 17058:22]
    node _rdata_T_46 = and(perfCnts_56, perfCntsLoMapping_56_2_4) @[build/NutShell.fir.opt.mlir 17060:22]
    node _rdata_T_47 = and(mapping_47_2_1, sipMask) @[build/NutShell.fir.opt.mlir 17062:22]
    node _rdata_T_48 = and(perfCnts_10, perfCntsLoMapping_10_2_4) @[build/NutShell.fir.opt.mlir 17064:22]
    node _rdata_T_49 = and(perfCnts_4, perfCntsLoMapping_4_2_4) @[build/NutShell.fir.opt.mlir 17066:22]
    node _rdata_T_50 = and(perfCnts_24, perfCntsLoMapping_24_2_4) @[build/NutShell.fir.opt.mlir 17068:22]
    node _rdata_T_51 = and(perfCnts_79, perfCntsLoMapping_79_2_4) @[build/NutShell.fir.opt.mlir 17070:22]
    node _rdata_T_52 = and(perfCnts_25, perfCntsLoMapping_25_2_4) @[build/NutShell.fir.opt.mlir 17072:22]
    node _rdata_T_53 = and(perfCnts_42, perfCntsLoMapping_42_2_4) @[build/NutShell.fir.opt.mlir 17074:22]
    node _rdata_T_54 = and(mstatus, sstatusRmask) @[build/NutShell.fir.opt.mlir 17076:22]
    node _rdata_T_55 = and(perfCnts_61, perfCntsLoMapping_61_2_4) @[build/NutShell.fir.opt.mlir 17078:22]
    node _rdata_T_56 = and(perfCnts_14, perfCntsLoMapping_14_2_4) @[build/NutShell.fir.opt.mlir 17080:22]
    node _rdata_T_57 = and(perfCnts_52, perfCntsLoMapping_52_2_4) @[build/NutShell.fir.opt.mlir 17082:22]
    node _rdata_T_58 = and(perfCnts_116, perfCntsLoMapping_116_2_4) @[build/NutShell.fir.opt.mlir 17084:22]
    node _rdata_T_59 = and(perfCnts_20, perfCntsLoMapping_20_2_4) @[build/NutShell.fir.opt.mlir 17086:22]
    node _rdata_T_60 = and(perfCnts_29, perfCntsLoMapping_29_2_4) @[build/NutShell.fir.opt.mlir 17088:22]
    node _rdata_T_61 = and(perfCnts_84, perfCntsLoMapping_84_2_4) @[build/NutShell.fir.opt.mlir 17090:22]
    node _rdata_T_62 = and(perfCnts_35, perfCntsLoMapping_35_2_4) @[build/NutShell.fir.opt.mlir 17092:22]
    node _rdata_T_63 = and(perfCnts_46, perfCntsLoMapping_46_2_4) @[build/NutShell.fir.opt.mlir 17094:22]
    node _rdata_T_64 = and(perfCnts_110, perfCntsLoMapping_110_2_4) @[build/NutShell.fir.opt.mlir 17096:22]
    node _rdata_T_65 = and(perfCnts_67, perfCntsLoMapping_67_2_4) @[build/NutShell.fir.opt.mlir 17098:22]
    node _rdata_T_66 = and(perfCnts_99, perfCntsLoMapping_99_2_4) @[build/NutShell.fir.opt.mlir 17100:22]
    node _rdata_T_67 = and(mtvec, mapping_67_2_4) @[build/NutShell.fir.opt.mlir 17102:22]
    node _rdata_T_68 = and(perfCnts_93, perfCntsLoMapping_93_2_4) @[build/NutShell.fir.opt.mlir 17104:22]
    node _rdata_T_69 = and(perfCnts_120, perfCntsLoMapping_120_2_4) @[build/NutShell.fir.opt.mlir 17106:22]
    node _rdata_T_70 = and(perfCnts_88, perfCntsLoMapping_88_2_4) @[build/NutShell.fir.opt.mlir 17108:22]
    node _rdata_T_71 = and(perfCnts_125, perfCntsLoMapping_125_2_4) @[build/NutShell.fir.opt.mlir 17110:22]
    node _rdata_T_72 = and(perfCnts_78, perfCntsLoMapping_78_2_4) @[build/NutShell.fir.opt.mlir 17112:22]
    node _rdata_T_73 = and(perfCnts_33, perfCntsLoMapping_33_2_4) @[build/NutShell.fir.opt.mlir 17114:22]
    node _rdata_T_74 = and(mie, mapping_74_2_4) @[build/NutShell.fir.opt.mlir 17116:22]
    node _rdata_T_75 = and(perfCnts_1, perfCntsLoMapping_1_2_4) @[build/NutShell.fir.opt.mlir 17118:22]
    node _rdata_T_76 = and(perfCnts_11, perfCntsLoMapping_11_2_4) @[build/NutShell.fir.opt.mlir 17120:22]
    node _rdata_T_77 = and(perfCnts_43, perfCntsLoMapping_43_2_4) @[build/NutShell.fir.opt.mlir 17122:22]
    node _rdata_T_78 = and(perfCnts_122, perfCntsLoMapping_122_2_4) @[build/NutShell.fir.opt.mlir 17124:22]
    node _rdata_T_79 = and(perfCnts_75, perfCntsLoMapping_75_2_4) @[build/NutShell.fir.opt.mlir 17126:22]
    node _rdata_T_80 = and(perfCnts_119, perfCntsLoMapping_119_2_4) @[build/NutShell.fir.opt.mlir 17128:22]
    node _rdata_T_81 = and(pmpaddr3, mapping_81_2_4) @[build/NutShell.fir.opt.mlir 17130:22]
    node _rdata_T_82 = and(perfCnts_90, perfCntsLoMapping_90_2_4) @[build/NutShell.fir.opt.mlir 17132:22]
    node _rdata_T_83 = and(perfCnts_23, perfCntsLoMapping_23_2_4) @[build/NutShell.fir.opt.mlir 17134:22]
    node _rdata_T_84 = and(perfCnts_127, perfCntsLoMapping_127_2_4) @[build/NutShell.fir.opt.mlir 17136:22]
    node _rdata_T_85 = and(perfCnts_40, perfCntsLoMapping_40_2_4) @[build/NutShell.fir.opt.mlir 17138:22]
    node _rdata_T_86 = and(perfCnts_80, perfCntsLoMapping_80_2_4) @[build/NutShell.fir.opt.mlir 17140:22]
    node _rdata_T_87 = and(perfCnts_55, perfCntsLoMapping_55_2_4) @[build/NutShell.fir.opt.mlir 17142:22]
    node _rdata_T_88 = and(perfCnts_8, perfCntsLoMapping_8_2_4) @[build/NutShell.fir.opt.mlir 17144:22]
    node _rdata_T_89 = and(stval, mapping_89_2_4) @[build/NutShell.fir.opt.mlir 17146:22]
    node _rdata_T_90 = and(perfCnts_107, perfCntsLoMapping_107_2_4) @[build/NutShell.fir.opt.mlir 17148:22]
    node _rdata_T_91 = and(perfCnts_58, perfCntsLoMapping_58_2_4) @[build/NutShell.fir.opt.mlir 17150:22]
    node _rdata_T_92 = and(misa, mapping_92_2_4) @[build/NutShell.fir.opt.mlir 17152:22]
    node _rdata_T_93 = and(perfCnts_112, perfCntsLoMapping_112_2_4) @[build/NutShell.fir.opt.mlir 17154:22]
    node _rdata_T_94 = and(perfCnts_26, perfCntsLoMapping_26_2_4) @[build/NutShell.fir.opt.mlir 17156:22]
    node _rdata_T_95 = and(perfCnts_95, perfCntsLoMapping_95_2_4) @[build/NutShell.fir.opt.mlir 17158:22]
    node _rdata_T_96 = and(perfCnts_115, perfCntsLoMapping_115_2_4) @[build/NutShell.fir.opt.mlir 17160:22]
    node _rdata_T_97 = and(perfCnts_51, perfCntsLoMapping_51_2_4) @[build/NutShell.fir.opt.mlir 17162:22]
    node _rdata_T_98 = and(mstatus, mapping_98_2_4) @[build/NutShell.fir.opt.mlir 17164:22]
    node _rdata_T_99 = and(perfCnts_19, perfCntsLoMapping_19_2_4) @[build/NutShell.fir.opt.mlir 17166:22]
    node _rdata_T_100 = and(pmpaddr0, mapping_100_2_4) @[build/NutShell.fir.opt.mlir 17168:23]
    node _rdata_T_101 = and(perfCnts_62, perfCntsLoMapping_62_2_4) @[build/NutShell.fir.opt.mlir 17170:23]
    node _rdata_T_102 = and(perfCnts_111, perfCntsLoMapping_111_2_4) @[build/NutShell.fir.opt.mlir 17172:23]
    node _rdata_T_103 = and(perfCnts_30, perfCntsLoMapping_30_2_4) @[build/NutShell.fir.opt.mlir 17174:23]
    node _rdata_T_104 = and(perfCnts_83, perfCntsLoMapping_83_2_4) @[build/NutShell.fir.opt.mlir 17176:23]
    node _rdata_T_105 = and(mapping_105_2_1, mapping_105_2_4) @[build/NutShell.fir.opt.mlir 17178:23]
    node _rdata_T_106 = and(perfCnts_98, perfCntsLoMapping_98_2_4) @[build/NutShell.fir.opt.mlir 17180:23]
    node _rdata_T_107 = and(perfCnts_0, perfCntsLoMapping_0_2_4) @[build/NutShell.fir.opt.mlir 17182:23]
    node _rdata_T_108 = and(perfCnts_126, perfCntsLoMapping_126_2_4) @[build/NutShell.fir.opt.mlir 17184:23]
    node _rdata_T_109 = and(perfCnts_47, perfCntsLoMapping_47_2_4) @[build/NutShell.fir.opt.mlir 17186:23]
    node _rdata_T_110 = and(perfCnts_5, perfCntsLoMapping_5_2_4) @[build/NutShell.fir.opt.mlir 17188:23]
    node _rdata_T_111 = and(perfCnts_34, perfCntsLoMapping_34_2_4) @[build/NutShell.fir.opt.mlir 17190:23]
    node _rdata_T_112 = and(perfCnts_72, perfCntsLoMapping_72_2_4) @[build/NutShell.fir.opt.mlir 17192:23]
    node _rdata_T_113 = and(perfCnts_66, perfCntsLoMapping_66_2_4) @[build/NutShell.fir.opt.mlir 17194:23]
    node _rdata_T_114 = and(perfCnts_15, perfCntsLoMapping_15_2_4) @[build/NutShell.fir.opt.mlir 17196:23]
    node _rdata_T_115 = and(perfCnts_104, perfCntsLoMapping_104_2_4) @[build/NutShell.fir.opt.mlir 17198:23]
    node _rdata_T_116 = and(perfCnts_87, perfCntsLoMapping_87_2_4) @[build/NutShell.fir.opt.mlir 17200:23]
    node _rdata_T_117 = and(perfCnts_22, perfCntsLoMapping_22_2_4) @[build/NutShell.fir.opt.mlir 17202:23]
    node _rdata_T_118 = and(perfCnts_27, perfCntsLoMapping_27_2_4) @[build/NutShell.fir.opt.mlir 17204:23]
    node _rdata_T_119 = and(perfCnts_44, perfCntsLoMapping_44_2_4) @[build/NutShell.fir.opt.mlir 17206:23]
    node _rdata_T_120 = and(perfCnts_123, perfCntsLoMapping_123_2_4) @[build/NutShell.fir.opt.mlir 17208:23]
    node _rdata_T_121 = and(perfCnts_76, perfCntsLoMapping_76_2_4) @[build/NutShell.fir.opt.mlir 17210:23]
    node _rdata_T_122 = and(perfCnts_32, perfCntsLoMapping_32_2_4) @[build/NutShell.fir.opt.mlir 17212:23]
    node _rdata_T_123 = and(perfCnts_108, perfCntsLoMapping_108_2_4) @[build/NutShell.fir.opt.mlir 17214:23]
    node _rdata_T_124 = and(perfCnts_2, perfCntsLoMapping_2_2_4) @[build/NutShell.fir.opt.mlir 17216:23]
    node _rdata_T_125 = and(perfCnts_103, perfCntsLoMapping_103_2_4) @[build/NutShell.fir.opt.mlir 17218:23]
    node _rdata_T_126 = and(perfCnts_49, perfCntsLoMapping_49_2_4) @[build/NutShell.fir.opt.mlir 17220:23]
    node _rdata_T_127 = and(perfCnts_59, perfCntsLoMapping_59_2_4) @[build/NutShell.fir.opt.mlir 17222:23]
    node _rdata_T_128 = and(pmpcfg3, mapping_128_2_4) @[build/NutShell.fir.opt.mlir 17224:23]
    node _rdata_T_129 = and(perfCnts_69, perfCntsLoMapping_69_2_4) @[build/NutShell.fir.opt.mlir 17226:23]
    node _rdata_T_130 = and(perfCnts_54, perfCntsLoMapping_54_2_4) @[build/NutShell.fir.opt.mlir 17228:23]
    node _rdata_T_131 = and(perfCnts_12, perfCntsLoMapping_12_2_4) @[build/NutShell.fir.opt.mlir 17230:23]
    node _rdata_T_132 = and(mideleg, mapping_132_2_4) @[build/NutShell.fir.opt.mlir 17232:23]
    node _rdata_T_133 = and(perfCnts_91, perfCntsLoMapping_91_2_4) @[build/NutShell.fir.opt.mlir 17234:23]
    node _rdata_T_134 = and(perfCnts_39, perfCntsLoMapping_39_2_4) @[build/NutShell.fir.opt.mlir 17236:23]
    node _rdata_T_135 = and(perfCnts_37, perfCntsLoMapping_37_2_4) @[build/NutShell.fir.opt.mlir 17238:23]
    node _rdata_T_136 = and(pmpaddr2, mapping_136_2_4) @[build/NutShell.fir.opt.mlir 17240:23]
    node _rdata_T_137 = and(perfCnts_7, perfCntsLoMapping_7_2_4) @[build/NutShell.fir.opt.mlir 17242:23]
    node _rdata_T_138 = and(mimpid, mapping_138_2_4) @[build/NutShell.fir.opt.mlir 17244:23]
    node _rdata_T_139 = and(perfCnts_118, perfCntsLoMapping_118_2_4) @[build/NutShell.fir.opt.mlir 17246:23]
    node _rdata_T_140 = and(perfCnts_96, perfCntsLoMapping_96_2_4) @[build/NutShell.fir.opt.mlir 17248:23]
    node _rdata_T_141 = and(pmpcfg1, mapping_141_2_4) @[build/NutShell.fir.opt.mlir 17250:23]
    node _rdata_T_142 = and(perfCnts_86, perfCntsLoMapping_86_2_4) @[build/NutShell.fir.opt.mlir 17252:23]
    node _rdata_T_143 = and(mscratch, mapping_143_2_4) @[build/NutShell.fir.opt.mlir 17254:23]
    node _rdata_T_144 = and(perfCnts_101, perfCntsLoMapping_101_2_4) @[build/NutShell.fir.opt.mlir 17256:23]
    node _rdata_T_145 = and(perfCnts_114, perfCntsLoMapping_114_2_4) @[build/NutShell.fir.opt.mlir 17258:23]
    node _rdata_T_146 = and(mhartid, mapping_146_2_4) @[build/NutShell.fir.opt.mlir 17260:23]
    node _rdata_T_147 = and(mepc, mapping_147_2_4) @[build/NutShell.fir.opt.mlir 17262:23]
    node _rdata_T_148 = and(mtval, mapping_148_2_4) @[build/NutShell.fir.opt.mlir 17264:23]
    node _rdata_T_149 = and(scounteren, mapping_149_2_4) @[build/NutShell.fir.opt.mlir 17266:23]
    node _rdata_T_150 = and(perfCnts_97, perfCntsLoMapping_97_2_4) @[build/NutShell.fir.opt.mlir 17268:23]
    node _rdata_T_151 = and(pmpcfg0, mapping_151_2_4) @[build/NutShell.fir.opt.mlir 17270:23]
    node _rdata_T_152 = and(perfCnts_31, perfCntsLoMapping_31_2_4) @[build/NutShell.fir.opt.mlir 17272:23]
    node _rdata_T_153 = and(perfCnts_82, perfCntsLoMapping_82_2_4) @[build/NutShell.fir.opt.mlir 17274:23]
    node _rdata_T_154 = and(perfCnts_48, perfCntsLoMapping_48_2_4) @[build/NutShell.fir.opt.mlir 17276:23]
    node _rdata_T_155 = and(scause, mapping_155_2_4) @[build/NutShell.fir.opt.mlir 17278:23]
    node _rdata_T_156 = and(perfCnts_63, perfCntsLoMapping_63_2_4) @[build/NutShell.fir.opt.mlir 17280:23]
    node _rdata_T_157 = and(perfCnts_65, perfCntsLoMapping_65_2_4) @[build/NutShell.fir.opt.mlir 17282:23]
    node _rdata_T_158 = and(perfCnts_71, perfCntsLoMapping_71_2_4) @[build/NutShell.fir.opt.mlir 17284:23]
    node _rdata_T_159 = and(perfCnts_18, perfCntsLoMapping_18_2_4) @[build/NutShell.fir.opt.mlir 17286:23]
    node _rdata_T_160 = and(perfCnts_50, perfCntsLoMapping_50_2_4) @[build/NutShell.fir.opt.mlir 17288:23]
    node _rdata_T_161 = and(perfCnts_16, perfCntsLoMapping_16_2_4) @[build/NutShell.fir.opt.mlir 17290:23]
    node _rdata_T_162 = eq(UInt<12>(2822), addr) @[build/NutShell.fir.opt.mlir 17293:23]
    node _rdata_T_163 = eq(UInt<12>(2889), addr) @[build/NutShell.fir.opt.mlir 17296:23]
    node _rdata_T_164 = eq(UInt<12>(2876), addr) @[build/NutShell.fir.opt.mlir 17299:23]
    node _rdata_T_165 = eq(UInt<12>(2921), addr) @[build/NutShell.fir.opt.mlir 17302:23]
    node _rdata_T_166 = eq(UInt<12>(2940), addr) @[build/NutShell.fir.opt.mlir 17305:23]
    node _rdata_T_167 = eq(UInt<12>(3858), addr) @[build/NutShell.fir.opt.mlir 17308:23]
    node _rdata_T_168 = eq(UInt<12>(2908), addr) @[build/NutShell.fir.opt.mlir 17311:23]
    node _rdata_T_169 = eq(UInt<12>(2837), addr) @[build/NutShell.fir.opt.mlir 17314:23]
    node _rdata_T_170 = eq(UInt<12>(2854), addr) @[build/NutShell.fir.opt.mlir 17317:23]
    node _rdata_T_171 = eq(UInt<9>(384), addr) @[build/NutShell.fir.opt.mlir 17319:23]
    node _rdata_T_172 = eq(UInt<12>(2918), addr) @[build/NutShell.fir.opt.mlir 17322:23]
    node _rdata_T_173 = eq(UInt<12>(2933), addr) @[build/NutShell.fir.opt.mlir 17325:23]
    node _rdata_T_174 = eq(UInt<12>(2844), addr) @[build/NutShell.fir.opt.mlir 17328:23]
    node _rdata_T_175 = eq(UInt<10>(930), addr) @[build/NutShell.fir.opt.mlir 17331:23]
    node _rdata_T_176 = eq(UInt<12>(2901), addr) @[build/NutShell.fir.opt.mlir 17334:23]
    node _rdata_T_177 = eq(UInt<10>(945), addr) @[build/NutShell.fir.opt.mlir 17337:23]
    node _rdata_T_178 = eq(UInt<12>(2886), addr) @[build/NutShell.fir.opt.mlir 17340:23]
    node _rdata_T_179 = eq(UInt<9>(320), addr) @[build/NutShell.fir.opt.mlir 17343:23]
    node _rdata_T_180 = eq(UInt<12>(2825), addr) @[build/NutShell.fir.opt.mlir 17346:23]
    node _rdata_T_181 = eq(UInt<12>(2819), addr) @[build/NutShell.fir.opt.mlir 17349:23]
    node _rdata_T_182 = eq(UInt<12>(2869), addr) @[build/NutShell.fir.opt.mlir 17352:23]
    node _rdata_T_183 = eq(UInt<12>(2916), addr) @[build/NutShell.fir.opt.mlir 17355:23]
    node _rdata_T_184 = eq(UInt<12>(2897), addr) @[build/NutShell.fir.opt.mlir 17358:23]
    node _rdata_T_185 = eq(UInt<12>(2857), addr) @[build/NutShell.fir.opt.mlir 17361:23]
    node _rdata_T_186 = eq(UInt<10>(770), addr) @[build/NutShell.fir.opt.mlir 17364:23]
    node _rdata_T_187 = eq(UInt<12>(2929), addr) @[build/NutShell.fir.opt.mlir 17367:23]
    node _rdata_T_188 = eq(UInt<12>(2852), addr) @[build/NutShell.fir.opt.mlir 17370:23]
    node _rdata_T_189 = eq(UInt<9>(261), addr) @[build/NutShell.fir.opt.mlir 17373:23]
    node _rdata_T_190 = eq(UInt<12>(2829), addr) @[build/NutShell.fir.opt.mlir 17376:23]
    node _rdata_T_191 = eq(UInt<12>(2925), addr) @[build/NutShell.fir.opt.mlir 17379:23]
    node _rdata_T_192 = eq(UInt<12>(2893), addr) @[build/NutShell.fir.opt.mlir 17382:23]
    node _rdata_T_193 = eq(UInt<9>(321), addr) @[build/NutShell.fir.opt.mlir 17385:23]
    node _rdata_T_194 = eq(UInt<12>(2880), addr) @[build/NutShell.fir.opt.mlir 17388:23]
    node _rdata_T_195 = eq(UInt<10>(834), addr) @[build/NutShell.fir.opt.mlir 17391:23]
    node _rdata_T_196 = eq(UInt<12>(2833), addr) @[build/NutShell.fir.opt.mlir 17394:23]
    node _rdata_T_197 = eq(UInt<12>(2861), addr) @[build/NutShell.fir.opt.mlir 17397:23]
    node _rdata_T_198 = eq(UInt<10>(774), addr) @[build/NutShell.fir.opt.mlir 17400:23]
    node _rdata_T_199 = eq(UInt<12>(2884), addr) @[build/NutShell.fir.opt.mlir 17403:23]
    node _rdata_T_200 = eq(UInt<12>(2922), addr) @[build/NutShell.fir.opt.mlir 17406:23]
    node _rdata_T_201 = eq(UInt<12>(3857), addr) @[build/NutShell.fir.opt.mlir 17409:23]
    node _rdata_T_202 = eq(UInt<12>(2910), addr) @[build/NutShell.fir.opt.mlir 17412:23]
    node _rdata_T_203 = eq(UInt<12>(2905), addr) @[build/NutShell.fir.opt.mlir 17415:23]
    node _rdata_T_204 = eq(UInt<9>(260), addr) @[build/NutShell.fir.opt.mlir 17418:23]
    node _rdata_T_205 = eq(UInt<12>(2937), addr) @[build/NutShell.fir.opt.mlir 17421:23]
    node _rdata_T_206 = eq(UInt<12>(2890), addr) @[build/NutShell.fir.opt.mlir 17424:23]
    node _rdata_T_207 = eq(UInt<12>(2873), addr) @[build/NutShell.fir.opt.mlir 17427:23]
    node _rdata_T_208 = eq(UInt<12>(2872), addr) @[build/NutShell.fir.opt.mlir 17430:23]
    node _rdata_T_209 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 17433:23]
    node _rdata_T_210 = eq(UInt<12>(2826), addr) @[build/NutShell.fir.opt.mlir 17436:23]
    node _rdata_T_211 = eq(UInt<12>(2820), addr) @[build/NutShell.fir.opt.mlir 17439:23]
    node _rdata_T_212 = eq(UInt<12>(2840), addr) @[build/NutShell.fir.opt.mlir 17442:23]
    node _rdata_T_213 = eq(UInt<12>(2895), addr) @[build/NutShell.fir.opt.mlir 17445:23]
    node _rdata_T_214 = eq(UInt<12>(2841), addr) @[build/NutShell.fir.opt.mlir 17448:23]
    node _rdata_T_215 = eq(UInt<12>(2858), addr) @[build/NutShell.fir.opt.mlir 17451:23]
    node _rdata_T_216 = eq(UInt<9>(256), addr) @[build/NutShell.fir.opt.mlir 17454:23]
    node _rdata_T_217 = eq(UInt<12>(2877), addr) @[build/NutShell.fir.opt.mlir 17457:23]
    node _rdata_T_218 = eq(UInt<12>(2830), addr) @[build/NutShell.fir.opt.mlir 17460:23]
    node _rdata_T_219 = eq(UInt<12>(2868), addr) @[build/NutShell.fir.opt.mlir 17463:23]
    node _rdata_T_220 = eq(UInt<12>(2932), addr) @[build/NutShell.fir.opt.mlir 17466:23]
    node _rdata_T_221 = eq(UInt<12>(2836), addr) @[build/NutShell.fir.opt.mlir 17469:23]
    node _rdata_T_222 = eq(UInt<12>(2845), addr) @[build/NutShell.fir.opt.mlir 17472:23]
    node _rdata_T_223 = eq(UInt<12>(2900), addr) @[build/NutShell.fir.opt.mlir 17475:23]
    node _rdata_T_224 = eq(UInt<12>(2851), addr) @[build/NutShell.fir.opt.mlir 17478:23]
    node _rdata_T_225 = eq(UInt<12>(2862), addr) @[build/NutShell.fir.opt.mlir 17481:23]
    node _rdata_T_226 = eq(UInt<12>(2926), addr) @[build/NutShell.fir.opt.mlir 17484:23]
    node _rdata_T_227 = eq(UInt<12>(2883), addr) @[build/NutShell.fir.opt.mlir 17487:23]
    node _rdata_T_228 = eq(UInt<12>(2915), addr) @[build/NutShell.fir.opt.mlir 17490:23]
    node _rdata_T_229 = eq(UInt<10>(773), addr) @[build/NutShell.fir.opt.mlir 17493:23]
    node _rdata_T_230 = eq(UInt<12>(2909), addr) @[build/NutShell.fir.opt.mlir 17496:23]
    node _rdata_T_231 = eq(UInt<12>(2936), addr) @[build/NutShell.fir.opt.mlir 17499:23]
    node _rdata_T_232 = eq(UInt<12>(2904), addr) @[build/NutShell.fir.opt.mlir 17502:23]
    node _rdata_T_233 = eq(UInt<12>(2941), addr) @[build/NutShell.fir.opt.mlir 17505:23]
    node _rdata_T_234 = eq(UInt<12>(2894), addr) @[build/NutShell.fir.opt.mlir 17508:23]
    node _rdata_T_235 = eq(UInt<12>(2849), addr) @[build/NutShell.fir.opt.mlir 17511:23]
    node _rdata_T_236 = eq(UInt<10>(772), addr) @[build/NutShell.fir.opt.mlir 17514:23]
    node _rdata_T_237 = eq(UInt<12>(2817), addr) @[build/NutShell.fir.opt.mlir 17517:23]
    node _rdata_T_238 = eq(UInt<12>(2827), addr) @[build/NutShell.fir.opt.mlir 17520:23]
    node _rdata_T_239 = eq(UInt<12>(2859), addr) @[build/NutShell.fir.opt.mlir 17523:23]
    node _rdata_T_240 = eq(UInt<12>(2938), addr) @[build/NutShell.fir.opt.mlir 17526:23]
    node _rdata_T_241 = eq(UInt<12>(2891), addr) @[build/NutShell.fir.opt.mlir 17529:23]
    node _rdata_T_242 = eq(UInt<12>(2935), addr) @[build/NutShell.fir.opt.mlir 17532:23]
    node _rdata_T_243 = eq(UInt<10>(947), addr) @[build/NutShell.fir.opt.mlir 17535:23]
    node _rdata_T_244 = eq(UInt<12>(2906), addr) @[build/NutShell.fir.opt.mlir 17538:23]
    node _rdata_T_245 = eq(UInt<12>(2839), addr) @[build/NutShell.fir.opt.mlir 17541:23]
    node _rdata_T_246 = eq(UInt<12>(2943), addr) @[build/NutShell.fir.opt.mlir 17544:23]
    node _rdata_T_247 = eq(UInt<12>(2856), addr) @[build/NutShell.fir.opt.mlir 17547:23]
    node _rdata_T_248 = eq(UInt<12>(2896), addr) @[build/NutShell.fir.opt.mlir 17550:23]
    node _rdata_T_249 = eq(UInt<12>(2871), addr) @[build/NutShell.fir.opt.mlir 17553:23]
    node _rdata_T_250 = eq(UInt<12>(2824), addr) @[build/NutShell.fir.opt.mlir 17556:23]
    node _rdata_T_251 = eq(UInt<9>(323), addr) @[build/NutShell.fir.opt.mlir 17559:23]
    node _rdata_T_252 = eq(UInt<12>(2923), addr) @[build/NutShell.fir.opt.mlir 17562:23]
    node _rdata_T_253 = eq(UInt<12>(2874), addr) @[build/NutShell.fir.opt.mlir 17565:23]
    node _rdata_T_254 = eq(UInt<10>(769), addr) @[build/NutShell.fir.opt.mlir 17568:23]
    node _rdata_T_255 = eq(UInt<12>(2928), addr) @[build/NutShell.fir.opt.mlir 17571:23]
    node _rdata_T_256 = eq(UInt<12>(2842), addr) @[build/NutShell.fir.opt.mlir 17574:23]
    node _rdata_T_257 = eq(UInt<12>(2911), addr) @[build/NutShell.fir.opt.mlir 17577:23]
    node _rdata_T_258 = eq(UInt<12>(2931), addr) @[build/NutShell.fir.opt.mlir 17580:23]
    node _rdata_T_259 = eq(UInt<12>(2867), addr) @[build/NutShell.fir.opt.mlir 17583:23]
    node _rdata_T_260 = eq(UInt<10>(768), addr) @[build/NutShell.fir.opt.mlir 17586:23]
    node _rdata_T_261 = eq(UInt<12>(2835), addr) @[build/NutShell.fir.opt.mlir 17589:23]
    node _rdata_T_262 = eq(UInt<10>(944), addr) @[build/NutShell.fir.opt.mlir 17592:23]
    node _rdata_T_263 = eq(UInt<12>(2878), addr) @[build/NutShell.fir.opt.mlir 17595:23]
    node _rdata_T_264 = eq(UInt<12>(2927), addr) @[build/NutShell.fir.opt.mlir 17598:23]
    node _rdata_T_265 = eq(UInt<12>(2846), addr) @[build/NutShell.fir.opt.mlir 17601:23]
    node _rdata_T_266 = eq(UInt<12>(2899), addr) @[build/NutShell.fir.opt.mlir 17604:23]
    node _rdata_T_267 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 17607:23]
    node _rdata_T_268 = eq(UInt<12>(2914), addr) @[build/NutShell.fir.opt.mlir 17610:23]
    node _rdata_T_269 = eq(UInt<12>(2816), addr) @[build/NutShell.fir.opt.mlir 17613:23]
    node _rdata_T_270 = eq(UInt<12>(2942), addr) @[build/NutShell.fir.opt.mlir 17616:23]
    node _rdata_T_271 = eq(UInt<12>(2863), addr) @[build/NutShell.fir.opt.mlir 17619:23]
    node _rdata_T_272 = eq(UInt<12>(2821), addr) @[build/NutShell.fir.opt.mlir 17622:23]
    node _rdata_T_273 = eq(UInt<12>(2850), addr) @[build/NutShell.fir.opt.mlir 17625:23]
    node _rdata_T_274 = eq(UInt<12>(2888), addr) @[build/NutShell.fir.opt.mlir 17628:23]
    node _rdata_T_275 = eq(UInt<12>(2882), addr) @[build/NutShell.fir.opt.mlir 17631:23]
    node _rdata_T_276 = eq(UInt<12>(2831), addr) @[build/NutShell.fir.opt.mlir 17634:23]
    node _rdata_T_277 = eq(UInt<12>(2920), addr) @[build/NutShell.fir.opt.mlir 17637:23]
    node _rdata_T_278 = eq(UInt<12>(2903), addr) @[build/NutShell.fir.opt.mlir 17640:23]
    node _rdata_T_279 = eq(UInt<12>(2838), addr) @[build/NutShell.fir.opt.mlir 17643:23]
    node _rdata_T_280 = eq(UInt<12>(2843), addr) @[build/NutShell.fir.opt.mlir 17646:23]
    node _rdata_T_281 = eq(UInt<12>(2860), addr) @[build/NutShell.fir.opt.mlir 17649:23]
    node _rdata_T_282 = eq(UInt<12>(2939), addr) @[build/NutShell.fir.opt.mlir 17652:23]
    node _rdata_T_283 = eq(UInt<12>(2892), addr) @[build/NutShell.fir.opt.mlir 17655:23]
    node _rdata_T_284 = eq(UInt<12>(2848), addr) @[build/NutShell.fir.opt.mlir 17658:23]
    node _rdata_T_285 = eq(UInt<12>(2924), addr) @[build/NutShell.fir.opt.mlir 17661:23]
    node _rdata_T_286 = eq(UInt<12>(2818), addr) @[build/NutShell.fir.opt.mlir 17664:23]
    node _rdata_T_287 = eq(UInt<12>(2919), addr) @[build/NutShell.fir.opt.mlir 17667:23]
    node _rdata_T_288 = eq(UInt<12>(2865), addr) @[build/NutShell.fir.opt.mlir 17670:23]
    node _rdata_T_289 = eq(UInt<12>(2875), addr) @[build/NutShell.fir.opt.mlir 17673:23]
    node _rdata_T_290 = eq(UInt<10>(931), addr) @[build/NutShell.fir.opt.mlir 17676:23]
    node _rdata_T_291 = eq(UInt<12>(2885), addr) @[build/NutShell.fir.opt.mlir 17679:23]
    node _rdata_T_292 = eq(UInt<12>(2870), addr) @[build/NutShell.fir.opt.mlir 17682:23]
    node _rdata_T_293 = eq(UInt<12>(2828), addr) @[build/NutShell.fir.opt.mlir 17685:23]
    node _rdata_T_294 = eq(UInt<10>(771), addr) @[build/NutShell.fir.opt.mlir 17688:23]
    node _rdata_T_295 = eq(UInt<12>(2907), addr) @[build/NutShell.fir.opt.mlir 17691:23]
    node _rdata_T_296 = eq(UInt<12>(2855), addr) @[build/NutShell.fir.opt.mlir 17694:23]
    node _rdata_T_297 = eq(UInt<12>(2853), addr) @[build/NutShell.fir.opt.mlir 17697:23]
    node _rdata_T_298 = eq(UInt<10>(946), addr) @[build/NutShell.fir.opt.mlir 17700:23]
    node _rdata_T_299 = eq(UInt<12>(2823), addr) @[build/NutShell.fir.opt.mlir 17703:23]
    node _rdata_T_300 = eq(UInt<12>(3859), addr) @[build/NutShell.fir.opt.mlir 17706:23]
    node _rdata_T_301 = eq(UInt<12>(2934), addr) @[build/NutShell.fir.opt.mlir 17709:23]
    node _rdata_T_302 = eq(UInt<12>(2912), addr) @[build/NutShell.fir.opt.mlir 17712:23]
    node _rdata_T_303 = eq(UInt<10>(929), addr) @[build/NutShell.fir.opt.mlir 17715:23]
    node _rdata_T_304 = eq(UInt<12>(2902), addr) @[build/NutShell.fir.opt.mlir 17718:23]
    node _rdata_T_305 = eq(UInt<10>(832), addr) @[build/NutShell.fir.opt.mlir 17721:23]
    node _rdata_T_306 = eq(UInt<12>(2917), addr) @[build/NutShell.fir.opt.mlir 17724:23]
    node _rdata_T_307 = eq(UInt<12>(2930), addr) @[build/NutShell.fir.opt.mlir 17727:23]
    node _rdata_T_308 = eq(UInt<12>(3860), addr) @[build/NutShell.fir.opt.mlir 17730:23]
    node _rdata_T_309 = eq(UInt<10>(833), addr) @[build/NutShell.fir.opt.mlir 17733:23]
    node _rdata_T_310 = eq(UInt<10>(835), addr) @[build/NutShell.fir.opt.mlir 17736:23]
    node _rdata_T_311 = eq(UInt<9>(262), addr) @[build/NutShell.fir.opt.mlir 17739:23]
    node _rdata_T_312 = eq(UInt<12>(2913), addr) @[build/NutShell.fir.opt.mlir 17742:23]
    node _rdata_T_313 = eq(UInt<10>(928), addr) @[build/NutShell.fir.opt.mlir 17745:23]
    node _rdata_T_314 = eq(UInt<12>(2847), addr) @[build/NutShell.fir.opt.mlir 17748:23]
    node _rdata_T_315 = eq(UInt<12>(2898), addr) @[build/NutShell.fir.opt.mlir 17751:23]
    node _rdata_T_316 = eq(UInt<12>(2864), addr) @[build/NutShell.fir.opt.mlir 17754:23]
    node _rdata_T_317 = eq(UInt<9>(322), addr) @[build/NutShell.fir.opt.mlir 17757:23]
    node _rdata_T_318 = eq(UInt<12>(2879), addr) @[build/NutShell.fir.opt.mlir 17760:23]
    node _rdata_T_319 = eq(UInt<12>(2881), addr) @[build/NutShell.fir.opt.mlir 17763:23]
    node _rdata_T_320 = eq(UInt<12>(2887), addr) @[build/NutShell.fir.opt.mlir 17766:23]
    node _rdata_T_321 = eq(UInt<12>(2834), addr) @[build/NutShell.fir.opt.mlir 17769:23]
    node _rdata_T_322 = eq(UInt<12>(2866), addr) @[build/NutShell.fir.opt.mlir 17772:23]
    node _rdata_T_323 = eq(UInt<12>(2832), addr) @[build/NutShell.fir.opt.mlir 17775:23]
    node _rdata_T_324 = mux(_rdata_T_162, _rdata_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17777:23]
    node _rdata_T_325 = mux(_rdata_T_163, _rdata_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17779:23]
    node _rdata_T_326 = mux(_rdata_T_164, _rdata_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17781:23]
    node _rdata_T_327 = mux(_rdata_T_165, _rdata_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17783:23]
    node _rdata_T_328 = mux(_rdata_T_166, _rdata_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17785:23]
    node _rdata_T_329 = mux(_rdata_T_167, _rdata_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17787:23]
    node _rdata_T_330 = mux(_rdata_T_168, _rdata_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17789:23]
    node _rdata_T_331 = mux(_rdata_T_169, _rdata_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17791:23]
    node _rdata_T_332 = mux(_rdata_T_170, _rdata_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17793:23]
    node _rdata_T_333 = mux(_rdata_T_171, _rdata_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17795:23]
    node _rdata_T_334 = mux(_rdata_T_172, _rdata_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17797:23]
    node _rdata_T_335 = mux(_rdata_T_173, _rdata_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17799:23]
    node _rdata_T_336 = mux(_rdata_T_174, _rdata_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17801:23]
    node _rdata_T_337 = mux(_rdata_T_175, _rdata_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17803:23]
    node _rdata_T_338 = mux(_rdata_T_176, _rdata_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17805:23]
    node _rdata_T_339 = mux(_rdata_T_177, _rdata_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17807:23]
    node _rdata_T_340 = mux(_rdata_T_178, _rdata_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17809:23]
    node _rdata_T_341 = mux(_rdata_T_179, _rdata_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17811:23]
    node _rdata_T_342 = mux(_rdata_T_180, _rdata_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17813:23]
    node _rdata_T_343 = mux(_rdata_T_181, _rdata_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17815:23]
    node _rdata_T_344 = mux(_rdata_T_182, _rdata_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17817:23]
    node _rdata_T_345 = mux(_rdata_T_183, _rdata_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17819:23]
    node _rdata_T_346 = mux(_rdata_T_184, _rdata_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17821:23]
    node _rdata_T_347 = mux(_rdata_T_185, _rdata_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17823:23]
    node _rdata_T_348 = mux(_rdata_T_186, _rdata_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17825:23]
    node _rdata_T_349 = mux(_rdata_T_187, _rdata_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17827:23]
    node _rdata_T_350 = mux(_rdata_T_188, _rdata_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17829:23]
    node _rdata_T_351 = mux(_rdata_T_189, _rdata_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17831:23]
    node _rdata_T_352 = mux(_rdata_T_190, _rdata_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17833:23]
    node _rdata_T_353 = mux(_rdata_T_191, _rdata_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17835:23]
    node _rdata_T_354 = mux(_rdata_T_192, _rdata_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17837:23]
    node _rdata_T_355 = mux(_rdata_T_193, _rdata_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17839:23]
    node _rdata_T_356 = mux(_rdata_T_194, _rdata_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17841:23]
    node _rdata_T_357 = mux(_rdata_T_195, _rdata_T_33, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17843:23]
    node _rdata_T_358 = mux(_rdata_T_196, _rdata_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17845:23]
    node _rdata_T_359 = mux(_rdata_T_197, _rdata_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17847:23]
    node _rdata_T_360 = mux(_rdata_T_198, _rdata_T_36, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17849:23]
    node _rdata_T_361 = mux(_rdata_T_199, _rdata_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17851:23]
    node _rdata_T_362 = mux(_rdata_T_200, _rdata_T_38, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17853:23]
    node _rdata_T_363 = mux(_rdata_T_201, _rdata_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17855:23]
    node _rdata_T_364 = mux(_rdata_T_202, _rdata_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17857:23]
    node _rdata_T_365 = mux(_rdata_T_203, _rdata_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17859:23]
    node _rdata_T_366 = mux(_rdata_T_204, _rdata_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17861:23]
    node _rdata_T_367 = mux(_rdata_T_205, _rdata_T_43, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17863:23]
    node _rdata_T_368 = mux(_rdata_T_206, _rdata_T_44, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17865:23]
    node _rdata_T_369 = mux(_rdata_T_207, _rdata_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17867:23]
    node _rdata_T_370 = mux(_rdata_T_208, _rdata_T_46, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17869:23]
    node _rdata_T_371 = mux(_rdata_T_209, _rdata_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17871:23]
    node _rdata_T_372 = mux(_rdata_T_210, _rdata_T_48, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17873:23]
    node _rdata_T_373 = mux(_rdata_T_211, _rdata_T_49, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17875:23]
    node _rdata_T_374 = mux(_rdata_T_212, _rdata_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17877:23]
    node _rdata_T_375 = mux(_rdata_T_213, _rdata_T_51, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17879:23]
    node _rdata_T_376 = mux(_rdata_T_214, _rdata_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17881:23]
    node _rdata_T_377 = mux(_rdata_T_215, _rdata_T_53, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17883:23]
    node _rdata_T_378 = mux(_rdata_T_216, _rdata_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17885:23]
    node _rdata_T_379 = mux(_rdata_T_217, _rdata_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17887:23]
    node _rdata_T_380 = mux(_rdata_T_218, _rdata_T_56, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17889:23]
    node _rdata_T_381 = mux(_rdata_T_219, _rdata_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17891:23]
    node _rdata_T_382 = mux(_rdata_T_220, _rdata_T_58, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17893:23]
    node _rdata_T_383 = mux(_rdata_T_221, _rdata_T_59, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17895:23]
    node _rdata_T_384 = mux(_rdata_T_222, _rdata_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17897:23]
    node _rdata_T_385 = mux(_rdata_T_223, _rdata_T_61, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17899:23]
    node _rdata_T_386 = mux(_rdata_T_224, _rdata_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17901:23]
    node _rdata_T_387 = mux(_rdata_T_225, _rdata_T_63, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17903:23]
    node _rdata_T_388 = mux(_rdata_T_226, _rdata_T_64, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17905:23]
    node _rdata_T_389 = mux(_rdata_T_227, _rdata_T_65, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17907:23]
    node _rdata_T_390 = mux(_rdata_T_228, _rdata_T_66, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17909:23]
    node _rdata_T_391 = mux(_rdata_T_229, _rdata_T_67, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17911:23]
    node _rdata_T_392 = mux(_rdata_T_230, _rdata_T_68, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17913:23]
    node _rdata_T_393 = mux(_rdata_T_231, _rdata_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17915:23]
    node _rdata_T_394 = mux(_rdata_T_232, _rdata_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17917:23]
    node _rdata_T_395 = mux(_rdata_T_233, _rdata_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17919:23]
    node _rdata_T_396 = mux(_rdata_T_234, _rdata_T_72, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17921:23]
    node _rdata_T_397 = mux(_rdata_T_235, _rdata_T_73, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17923:23]
    node _rdata_T_398 = mux(_rdata_T_236, _rdata_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17925:23]
    node _rdata_T_399 = mux(_rdata_T_237, _rdata_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17927:23]
    node _rdata_T_400 = mux(_rdata_T_238, _rdata_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17929:23]
    node _rdata_T_401 = mux(_rdata_T_239, _rdata_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17931:23]
    node _rdata_T_402 = mux(_rdata_T_240, _rdata_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17933:23]
    node _rdata_T_403 = mux(_rdata_T_241, _rdata_T_79, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17935:23]
    node _rdata_T_404 = mux(_rdata_T_242, _rdata_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17937:23]
    node _rdata_T_405 = mux(_rdata_T_243, _rdata_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17939:23]
    node _rdata_T_406 = mux(_rdata_T_244, _rdata_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17941:23]
    node _rdata_T_407 = mux(_rdata_T_245, _rdata_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17943:23]
    node _rdata_T_408 = mux(_rdata_T_246, _rdata_T_84, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17945:23]
    node _rdata_T_409 = mux(_rdata_T_247, _rdata_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17947:23]
    node _rdata_T_410 = mux(_rdata_T_248, _rdata_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17949:23]
    node _rdata_T_411 = mux(_rdata_T_249, _rdata_T_87, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17951:23]
    node _rdata_T_412 = mux(_rdata_T_250, _rdata_T_88, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17953:23]
    node _rdata_T_413 = mux(_rdata_T_251, _rdata_T_89, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17955:23]
    node _rdata_T_414 = mux(_rdata_T_252, _rdata_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17957:23]
    node _rdata_T_415 = mux(_rdata_T_253, _rdata_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17959:23]
    node _rdata_T_416 = mux(_rdata_T_254, _rdata_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17961:23]
    node _rdata_T_417 = mux(_rdata_T_255, _rdata_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17963:23]
    node _rdata_T_418 = mux(_rdata_T_256, _rdata_T_94, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17965:23]
    node _rdata_T_419 = mux(_rdata_T_257, _rdata_T_95, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17967:23]
    node _rdata_T_420 = mux(_rdata_T_258, _rdata_T_96, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17969:23]
    node _rdata_T_421 = mux(_rdata_T_259, _rdata_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17971:23]
    node _rdata_T_422 = mux(_rdata_T_260, _rdata_T_98, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17973:23]
    node _rdata_T_423 = mux(_rdata_T_261, _rdata_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17975:23]
    node _rdata_T_424 = mux(_rdata_T_262, _rdata_T_100, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17977:23]
    node _rdata_T_425 = mux(_rdata_T_263, _rdata_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17979:23]
    node _rdata_T_426 = mux(_rdata_T_264, _rdata_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17981:23]
    node _rdata_T_427 = mux(_rdata_T_265, _rdata_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17983:23]
    node _rdata_T_428 = mux(_rdata_T_266, _rdata_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17985:23]
    node _rdata_T_429 = mux(_rdata_T_267, _rdata_T_105, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17987:23]
    node _rdata_T_430 = mux(_rdata_T_268, _rdata_T_106, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17989:23]
    node _rdata_T_431 = mux(_rdata_T_269, _rdata_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17991:23]
    node _rdata_T_432 = mux(_rdata_T_270, _rdata_T_108, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17993:23]
    node _rdata_T_433 = mux(_rdata_T_271, _rdata_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17995:23]
    node _rdata_T_434 = mux(_rdata_T_272, _rdata_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17997:23]
    node _rdata_T_435 = mux(_rdata_T_273, _rdata_T_111, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 17999:23]
    node _rdata_T_436 = mux(_rdata_T_274, _rdata_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18001:23]
    node _rdata_T_437 = mux(_rdata_T_275, _rdata_T_113, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18003:23]
    node _rdata_T_438 = mux(_rdata_T_276, _rdata_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18005:23]
    node _rdata_T_439 = mux(_rdata_T_277, _rdata_T_115, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18007:23]
    node _rdata_T_440 = mux(_rdata_T_278, _rdata_T_116, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18009:23]
    node _rdata_T_441 = mux(_rdata_T_279, _rdata_T_117, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18011:23]
    node _rdata_T_442 = mux(_rdata_T_280, _rdata_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18013:23]
    node _rdata_T_443 = mux(_rdata_T_281, _rdata_T_119, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18015:23]
    node _rdata_T_444 = mux(_rdata_T_282, _rdata_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18017:23]
    node _rdata_T_445 = mux(_rdata_T_283, _rdata_T_121, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18019:23]
    node _rdata_T_446 = mux(_rdata_T_284, _rdata_T_122, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18021:23]
    node _rdata_T_447 = mux(_rdata_T_285, _rdata_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18023:23]
    node _rdata_T_448 = mux(_rdata_T_286, _rdata_T_124, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18025:23]
    node _rdata_T_449 = mux(_rdata_T_287, _rdata_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18027:23]
    node _rdata_T_450 = mux(_rdata_T_288, _rdata_T_126, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18029:23]
    node _rdata_T_451 = mux(_rdata_T_289, _rdata_T_127, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18031:23]
    node _rdata_T_452 = mux(_rdata_T_290, _rdata_T_128, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18033:23]
    node _rdata_T_453 = mux(_rdata_T_291, _rdata_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18035:23]
    node _rdata_T_454 = mux(_rdata_T_292, _rdata_T_130, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18037:23]
    node _rdata_T_455 = mux(_rdata_T_293, _rdata_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18039:23]
    node _rdata_T_456 = mux(_rdata_T_294, _rdata_T_132, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18041:23]
    node _rdata_T_457 = mux(_rdata_T_295, _rdata_T_133, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18043:23]
    node _rdata_T_458 = mux(_rdata_T_296, _rdata_T_134, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18045:23]
    node _rdata_T_459 = mux(_rdata_T_297, _rdata_T_135, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18047:23]
    node _rdata_T_460 = mux(_rdata_T_298, _rdata_T_136, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18049:23]
    node _rdata_T_461 = mux(_rdata_T_299, _rdata_T_137, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18051:23]
    node _rdata_T_462 = mux(_rdata_T_300, _rdata_T_138, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18053:23]
    node _rdata_T_463 = mux(_rdata_T_301, _rdata_T_139, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18055:23]
    node _rdata_T_464 = mux(_rdata_T_302, _rdata_T_140, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18057:23]
    node _rdata_T_465 = mux(_rdata_T_303, _rdata_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18059:23]
    node _rdata_T_466 = mux(_rdata_T_304, _rdata_T_142, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18061:23]
    node _rdata_T_467 = mux(_rdata_T_305, _rdata_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18063:23]
    node _rdata_T_468 = mux(_rdata_T_306, _rdata_T_144, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18065:23]
    node _rdata_T_469 = mux(_rdata_T_307, _rdata_T_145, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18067:23]
    node _rdata_T_470 = mux(_rdata_T_308, _rdata_T_146, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18069:23]
    node _rdata_T_471 = mux(_rdata_T_309, _rdata_T_147, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18071:23]
    node _rdata_T_472 = mux(_rdata_T_310, _rdata_T_148, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18073:23]
    node _rdata_T_473 = mux(_rdata_T_311, _rdata_T_149, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18075:23]
    node _rdata_T_474 = mux(_rdata_T_312, _rdata_T_150, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18077:23]
    node _rdata_T_475 = mux(_rdata_T_313, _rdata_T_151, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18079:23]
    node _rdata_T_476 = mux(_rdata_T_314, _rdata_T_152, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18081:23]
    node _rdata_T_477 = mux(_rdata_T_315, _rdata_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18083:23]
    node _rdata_T_478 = mux(_rdata_T_316, _rdata_T_154, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18085:23]
    node _rdata_T_479 = mux(_rdata_T_317, _rdata_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18087:23]
    node _rdata_T_480 = mux(_rdata_T_318, _rdata_T_156, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18089:23]
    node _rdata_T_481 = mux(_rdata_T_319, _rdata_T_157, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18091:23]
    node _rdata_T_482 = mux(_rdata_T_320, _rdata_T_158, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18093:23]
    node _rdata_T_483 = mux(_rdata_T_321, _rdata_T_159, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18095:23]
    node _rdata_T_484 = mux(_rdata_T_322, _rdata_T_160, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18097:23]
    node _rdata_T_485 = mux(_rdata_T_323, _rdata_T_161, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 18099:23]
    node _rdata_T_486 = or(_rdata_T_324, _rdata_T_325) @[build/NutShell.fir.opt.mlir 18101:23]
    node _rdata_T_487 = or(_rdata_T_486, _rdata_T_326) @[build/NutShell.fir.opt.mlir 18103:23]
    node _rdata_T_488 = or(_rdata_T_487, _rdata_T_327) @[build/NutShell.fir.opt.mlir 18105:23]
    node _rdata_T_489 = or(_rdata_T_488, _rdata_T_328) @[build/NutShell.fir.opt.mlir 18107:23]
    node _rdata_T_490 = or(_rdata_T_489, _rdata_T_329) @[build/NutShell.fir.opt.mlir 18109:23]
    node _rdata_T_491 = or(_rdata_T_490, _rdata_T_330) @[build/NutShell.fir.opt.mlir 18111:23]
    node _rdata_T_492 = or(_rdata_T_491, _rdata_T_331) @[build/NutShell.fir.opt.mlir 18113:23]
    node _rdata_T_493 = or(_rdata_T_492, _rdata_T_332) @[build/NutShell.fir.opt.mlir 18115:23]
    node _rdata_T_494 = or(_rdata_T_493, _rdata_T_333) @[build/NutShell.fir.opt.mlir 18117:23]
    node _rdata_T_495 = or(_rdata_T_494, _rdata_T_334) @[build/NutShell.fir.opt.mlir 18119:23]
    node _rdata_T_496 = or(_rdata_T_495, _rdata_T_335) @[build/NutShell.fir.opt.mlir 18121:23]
    node _rdata_T_497 = or(_rdata_T_496, _rdata_T_336) @[build/NutShell.fir.opt.mlir 18123:23]
    node _rdata_T_498 = or(_rdata_T_497, _rdata_T_337) @[build/NutShell.fir.opt.mlir 18125:23]
    node _rdata_T_499 = or(_rdata_T_498, _rdata_T_338) @[build/NutShell.fir.opt.mlir 18127:23]
    node _rdata_T_500 = or(_rdata_T_499, _rdata_T_339) @[build/NutShell.fir.opt.mlir 18129:23]
    node _rdata_T_501 = or(_rdata_T_500, _rdata_T_340) @[build/NutShell.fir.opt.mlir 18131:23]
    node _rdata_T_502 = or(_rdata_T_501, _rdata_T_341) @[build/NutShell.fir.opt.mlir 18133:23]
    node _rdata_T_503 = or(_rdata_T_502, _rdata_T_342) @[build/NutShell.fir.opt.mlir 18135:23]
    node _rdata_T_504 = or(_rdata_T_503, _rdata_T_343) @[build/NutShell.fir.opt.mlir 18137:23]
    node _rdata_T_505 = or(_rdata_T_504, _rdata_T_344) @[build/NutShell.fir.opt.mlir 18139:23]
    node _rdata_T_506 = or(_rdata_T_505, _rdata_T_345) @[build/NutShell.fir.opt.mlir 18141:23]
    node _rdata_T_507 = or(_rdata_T_506, _rdata_T_346) @[build/NutShell.fir.opt.mlir 18143:23]
    node _rdata_T_508 = or(_rdata_T_507, _rdata_T_347) @[build/NutShell.fir.opt.mlir 18145:23]
    node _rdata_T_509 = or(_rdata_T_508, _rdata_T_348) @[build/NutShell.fir.opt.mlir 18147:23]
    node _rdata_T_510 = or(_rdata_T_509, _rdata_T_349) @[build/NutShell.fir.opt.mlir 18149:23]
    node _rdata_T_511 = or(_rdata_T_510, _rdata_T_350) @[build/NutShell.fir.opt.mlir 18151:23]
    node _rdata_T_512 = or(_rdata_T_511, _rdata_T_351) @[build/NutShell.fir.opt.mlir 18153:23]
    node _rdata_T_513 = or(_rdata_T_512, _rdata_T_352) @[build/NutShell.fir.opt.mlir 18155:23]
    node _rdata_T_514 = or(_rdata_T_513, _rdata_T_353) @[build/NutShell.fir.opt.mlir 18157:23]
    node _rdata_T_515 = or(_rdata_T_514, _rdata_T_354) @[build/NutShell.fir.opt.mlir 18159:23]
    node _rdata_T_516 = or(_rdata_T_515, _rdata_T_355) @[build/NutShell.fir.opt.mlir 18161:23]
    node _rdata_T_517 = or(_rdata_T_516, _rdata_T_356) @[build/NutShell.fir.opt.mlir 18163:23]
    node _rdata_T_518 = or(_rdata_T_517, _rdata_T_357) @[build/NutShell.fir.opt.mlir 18165:23]
    node _rdata_T_519 = or(_rdata_T_518, _rdata_T_358) @[build/NutShell.fir.opt.mlir 18167:23]
    node _rdata_T_520 = or(_rdata_T_519, _rdata_T_359) @[build/NutShell.fir.opt.mlir 18169:23]
    node _rdata_T_521 = or(_rdata_T_520, _rdata_T_360) @[build/NutShell.fir.opt.mlir 18171:23]
    node _rdata_T_522 = or(_rdata_T_521, _rdata_T_361) @[build/NutShell.fir.opt.mlir 18173:23]
    node _rdata_T_523 = or(_rdata_T_522, _rdata_T_362) @[build/NutShell.fir.opt.mlir 18175:23]
    node _rdata_T_524 = or(_rdata_T_523, _rdata_T_363) @[build/NutShell.fir.opt.mlir 18177:23]
    node _rdata_T_525 = or(_rdata_T_524, _rdata_T_364) @[build/NutShell.fir.opt.mlir 18179:23]
    node _rdata_T_526 = or(_rdata_T_525, _rdata_T_365) @[build/NutShell.fir.opt.mlir 18181:23]
    node _rdata_T_527 = or(_rdata_T_526, _rdata_T_366) @[build/NutShell.fir.opt.mlir 18183:23]
    node _rdata_T_528 = or(_rdata_T_527, _rdata_T_367) @[build/NutShell.fir.opt.mlir 18185:23]
    node _rdata_T_529 = or(_rdata_T_528, _rdata_T_368) @[build/NutShell.fir.opt.mlir 18187:23]
    node _rdata_T_530 = or(_rdata_T_529, _rdata_T_369) @[build/NutShell.fir.opt.mlir 18189:23]
    node _rdata_T_531 = or(_rdata_T_530, _rdata_T_370) @[build/NutShell.fir.opt.mlir 18191:23]
    node _rdata_T_532 = or(_rdata_T_531, _rdata_T_371) @[build/NutShell.fir.opt.mlir 18193:23]
    node _rdata_T_533 = or(_rdata_T_532, _rdata_T_372) @[build/NutShell.fir.opt.mlir 18195:23]
    node _rdata_T_534 = or(_rdata_T_533, _rdata_T_373) @[build/NutShell.fir.opt.mlir 18197:23]
    node _rdata_T_535 = or(_rdata_T_534, _rdata_T_374) @[build/NutShell.fir.opt.mlir 18199:23]
    node _rdata_T_536 = or(_rdata_T_535, _rdata_T_375) @[build/NutShell.fir.opt.mlir 18201:23]
    node _rdata_T_537 = or(_rdata_T_536, _rdata_T_376) @[build/NutShell.fir.opt.mlir 18203:23]
    node _rdata_T_538 = or(_rdata_T_537, _rdata_T_377) @[build/NutShell.fir.opt.mlir 18205:23]
    node _rdata_T_539 = or(_rdata_T_538, _rdata_T_378) @[build/NutShell.fir.opt.mlir 18207:23]
    node _rdata_T_540 = or(_rdata_T_539, _rdata_T_379) @[build/NutShell.fir.opt.mlir 18209:23]
    node _rdata_T_541 = or(_rdata_T_540, _rdata_T_380) @[build/NutShell.fir.opt.mlir 18211:23]
    node _rdata_T_542 = or(_rdata_T_541, _rdata_T_381) @[build/NutShell.fir.opt.mlir 18213:23]
    node _rdata_T_543 = or(_rdata_T_542, _rdata_T_382) @[build/NutShell.fir.opt.mlir 18215:23]
    node _rdata_T_544 = or(_rdata_T_543, _rdata_T_383) @[build/NutShell.fir.opt.mlir 18217:23]
    node _rdata_T_545 = or(_rdata_T_544, _rdata_T_384) @[build/NutShell.fir.opt.mlir 18219:23]
    node _rdata_T_546 = or(_rdata_T_545, _rdata_T_385) @[build/NutShell.fir.opt.mlir 18221:23]
    node _rdata_T_547 = or(_rdata_T_546, _rdata_T_386) @[build/NutShell.fir.opt.mlir 18223:23]
    node _rdata_T_548 = or(_rdata_T_547, _rdata_T_387) @[build/NutShell.fir.opt.mlir 18225:23]
    node _rdata_T_549 = or(_rdata_T_548, _rdata_T_388) @[build/NutShell.fir.opt.mlir 18227:23]
    node _rdata_T_550 = or(_rdata_T_549, _rdata_T_389) @[build/NutShell.fir.opt.mlir 18229:23]
    node _rdata_T_551 = or(_rdata_T_550, _rdata_T_390) @[build/NutShell.fir.opt.mlir 18231:23]
    node _rdata_T_552 = or(_rdata_T_551, _rdata_T_391) @[build/NutShell.fir.opt.mlir 18233:23]
    node _rdata_T_553 = or(_rdata_T_552, _rdata_T_392) @[build/NutShell.fir.opt.mlir 18235:23]
    node _rdata_T_554 = or(_rdata_T_553, _rdata_T_393) @[build/NutShell.fir.opt.mlir 18237:23]
    node _rdata_T_555 = or(_rdata_T_554, _rdata_T_394) @[build/NutShell.fir.opt.mlir 18239:23]
    node _rdata_T_556 = or(_rdata_T_555, _rdata_T_395) @[build/NutShell.fir.opt.mlir 18241:23]
    node _rdata_T_557 = or(_rdata_T_556, _rdata_T_396) @[build/NutShell.fir.opt.mlir 18243:23]
    node _rdata_T_558 = or(_rdata_T_557, _rdata_T_397) @[build/NutShell.fir.opt.mlir 18245:23]
    node _rdata_T_559 = or(_rdata_T_558, _rdata_T_398) @[build/NutShell.fir.opt.mlir 18247:23]
    node _rdata_T_560 = or(_rdata_T_559, _rdata_T_399) @[build/NutShell.fir.opt.mlir 18249:23]
    node _rdata_T_561 = or(_rdata_T_560, _rdata_T_400) @[build/NutShell.fir.opt.mlir 18251:23]
    node _rdata_T_562 = or(_rdata_T_561, _rdata_T_401) @[build/NutShell.fir.opt.mlir 18253:23]
    node _rdata_T_563 = or(_rdata_T_562, _rdata_T_402) @[build/NutShell.fir.opt.mlir 18255:23]
    node _rdata_T_564 = or(_rdata_T_563, _rdata_T_403) @[build/NutShell.fir.opt.mlir 18257:23]
    node _rdata_T_565 = or(_rdata_T_564, _rdata_T_404) @[build/NutShell.fir.opt.mlir 18259:23]
    node _rdata_T_566 = or(_rdata_T_565, _rdata_T_405) @[build/NutShell.fir.opt.mlir 18261:23]
    node _rdata_T_567 = or(_rdata_T_566, _rdata_T_406) @[build/NutShell.fir.opt.mlir 18263:23]
    node _rdata_T_568 = or(_rdata_T_567, _rdata_T_407) @[build/NutShell.fir.opt.mlir 18265:23]
    node _rdata_T_569 = or(_rdata_T_568, _rdata_T_408) @[build/NutShell.fir.opt.mlir 18267:23]
    node _rdata_T_570 = or(_rdata_T_569, _rdata_T_409) @[build/NutShell.fir.opt.mlir 18269:23]
    node _rdata_T_571 = or(_rdata_T_570, _rdata_T_410) @[build/NutShell.fir.opt.mlir 18271:23]
    node _rdata_T_572 = or(_rdata_T_571, _rdata_T_411) @[build/NutShell.fir.opt.mlir 18273:23]
    node _rdata_T_573 = or(_rdata_T_572, _rdata_T_412) @[build/NutShell.fir.opt.mlir 18275:23]
    node _rdata_T_574 = or(_rdata_T_573, _rdata_T_413) @[build/NutShell.fir.opt.mlir 18277:23]
    node _rdata_T_575 = or(_rdata_T_574, _rdata_T_414) @[build/NutShell.fir.opt.mlir 18279:23]
    node _rdata_T_576 = or(_rdata_T_575, _rdata_T_415) @[build/NutShell.fir.opt.mlir 18281:23]
    node _rdata_T_577 = or(_rdata_T_576, _rdata_T_416) @[build/NutShell.fir.opt.mlir 18283:23]
    node _rdata_T_578 = or(_rdata_T_577, _rdata_T_417) @[build/NutShell.fir.opt.mlir 18285:23]
    node _rdata_T_579 = or(_rdata_T_578, _rdata_T_418) @[build/NutShell.fir.opt.mlir 18287:23]
    node _rdata_T_580 = or(_rdata_T_579, _rdata_T_419) @[build/NutShell.fir.opt.mlir 18289:23]
    node _rdata_T_581 = or(_rdata_T_580, _rdata_T_420) @[build/NutShell.fir.opt.mlir 18291:23]
    node _rdata_T_582 = or(_rdata_T_581, _rdata_T_421) @[build/NutShell.fir.opt.mlir 18293:23]
    node _rdata_T_583 = or(_rdata_T_582, _rdata_T_422) @[build/NutShell.fir.opt.mlir 18295:23]
    node _rdata_T_584 = or(_rdata_T_583, _rdata_T_423) @[build/NutShell.fir.opt.mlir 18297:23]
    node _rdata_T_585 = or(_rdata_T_584, _rdata_T_424) @[build/NutShell.fir.opt.mlir 18299:23]
    node _rdata_T_586 = or(_rdata_T_585, _rdata_T_425) @[build/NutShell.fir.opt.mlir 18301:23]
    node _rdata_T_587 = or(_rdata_T_586, _rdata_T_426) @[build/NutShell.fir.opt.mlir 18303:23]
    node _rdata_T_588 = or(_rdata_T_587, _rdata_T_427) @[build/NutShell.fir.opt.mlir 18305:23]
    node _rdata_T_589 = or(_rdata_T_588, _rdata_T_428) @[build/NutShell.fir.opt.mlir 18307:23]
    node _rdata_T_590 = or(_rdata_T_589, _rdata_T_429) @[build/NutShell.fir.opt.mlir 18309:23]
    node _rdata_T_591 = or(_rdata_T_590, _rdata_T_430) @[build/NutShell.fir.opt.mlir 18311:23]
    node _rdata_T_592 = or(_rdata_T_591, _rdata_T_431) @[build/NutShell.fir.opt.mlir 18313:23]
    node _rdata_T_593 = or(_rdata_T_592, _rdata_T_432) @[build/NutShell.fir.opt.mlir 18315:23]
    node _rdata_T_594 = or(_rdata_T_593, _rdata_T_433) @[build/NutShell.fir.opt.mlir 18317:23]
    node _rdata_T_595 = or(_rdata_T_594, _rdata_T_434) @[build/NutShell.fir.opt.mlir 18319:23]
    node _rdata_T_596 = or(_rdata_T_595, _rdata_T_435) @[build/NutShell.fir.opt.mlir 18321:23]
    node _rdata_T_597 = or(_rdata_T_596, _rdata_T_436) @[build/NutShell.fir.opt.mlir 18323:23]
    node _rdata_T_598 = or(_rdata_T_597, _rdata_T_437) @[build/NutShell.fir.opt.mlir 18325:23]
    node _rdata_T_599 = or(_rdata_T_598, _rdata_T_438) @[build/NutShell.fir.opt.mlir 18327:23]
    node _rdata_T_600 = or(_rdata_T_599, _rdata_T_439) @[build/NutShell.fir.opt.mlir 18329:23]
    node _rdata_T_601 = or(_rdata_T_600, _rdata_T_440) @[build/NutShell.fir.opt.mlir 18331:23]
    node _rdata_T_602 = or(_rdata_T_601, _rdata_T_441) @[build/NutShell.fir.opt.mlir 18333:23]
    node _rdata_T_603 = or(_rdata_T_602, _rdata_T_442) @[build/NutShell.fir.opt.mlir 18335:23]
    node _rdata_T_604 = or(_rdata_T_603, _rdata_T_443) @[build/NutShell.fir.opt.mlir 18337:23]
    node _rdata_T_605 = or(_rdata_T_604, _rdata_T_444) @[build/NutShell.fir.opt.mlir 18339:23]
    node _rdata_T_606 = or(_rdata_T_605, _rdata_T_445) @[build/NutShell.fir.opt.mlir 18341:23]
    node _rdata_T_607 = or(_rdata_T_606, _rdata_T_446) @[build/NutShell.fir.opt.mlir 18343:23]
    node _rdata_T_608 = or(_rdata_T_607, _rdata_T_447) @[build/NutShell.fir.opt.mlir 18345:23]
    node _rdata_T_609 = or(_rdata_T_608, _rdata_T_448) @[build/NutShell.fir.opt.mlir 18347:23]
    node _rdata_T_610 = or(_rdata_T_609, _rdata_T_449) @[build/NutShell.fir.opt.mlir 18349:23]
    node _rdata_T_611 = or(_rdata_T_610, _rdata_T_450) @[build/NutShell.fir.opt.mlir 18351:23]
    node _rdata_T_612 = or(_rdata_T_611, _rdata_T_451) @[build/NutShell.fir.opt.mlir 18353:23]
    node _rdata_T_613 = or(_rdata_T_612, _rdata_T_452) @[build/NutShell.fir.opt.mlir 18355:23]
    node _rdata_T_614 = or(_rdata_T_613, _rdata_T_453) @[build/NutShell.fir.opt.mlir 18357:23]
    node _rdata_T_615 = or(_rdata_T_614, _rdata_T_454) @[build/NutShell.fir.opt.mlir 18359:23]
    node _rdata_T_616 = or(_rdata_T_615, _rdata_T_455) @[build/NutShell.fir.opt.mlir 18361:23]
    node _rdata_T_617 = or(_rdata_T_616, _rdata_T_456) @[build/NutShell.fir.opt.mlir 18363:23]
    node _rdata_T_618 = or(_rdata_T_617, _rdata_T_457) @[build/NutShell.fir.opt.mlir 18365:23]
    node _rdata_T_619 = or(_rdata_T_618, _rdata_T_458) @[build/NutShell.fir.opt.mlir 18367:23]
    node _rdata_T_620 = or(_rdata_T_619, _rdata_T_459) @[build/NutShell.fir.opt.mlir 18369:23]
    node _rdata_T_621 = or(_rdata_T_620, _rdata_T_460) @[build/NutShell.fir.opt.mlir 18371:23]
    node _rdata_T_622 = or(_rdata_T_621, _rdata_T_461) @[build/NutShell.fir.opt.mlir 18373:23]
    node _rdata_T_623 = or(_rdata_T_622, _rdata_T_462) @[build/NutShell.fir.opt.mlir 18375:23]
    node _rdata_T_624 = or(_rdata_T_623, _rdata_T_463) @[build/NutShell.fir.opt.mlir 18377:23]
    node _rdata_T_625 = or(_rdata_T_624, _rdata_T_464) @[build/NutShell.fir.opt.mlir 18379:23]
    node _rdata_T_626 = or(_rdata_T_625, _rdata_T_465) @[build/NutShell.fir.opt.mlir 18381:23]
    node _rdata_T_627 = or(_rdata_T_626, _rdata_T_466) @[build/NutShell.fir.opt.mlir 18383:23]
    node _rdata_T_628 = or(_rdata_T_627, _rdata_T_467) @[build/NutShell.fir.opt.mlir 18385:23]
    node _rdata_T_629 = or(_rdata_T_628, _rdata_T_468) @[build/NutShell.fir.opt.mlir 18387:23]
    node _rdata_T_630 = or(_rdata_T_629, _rdata_T_469) @[build/NutShell.fir.opt.mlir 18389:23]
    node _rdata_T_631 = or(_rdata_T_630, _rdata_T_470) @[build/NutShell.fir.opt.mlir 18391:23]
    node _rdata_T_632 = or(_rdata_T_631, _rdata_T_471) @[build/NutShell.fir.opt.mlir 18393:23]
    node _rdata_T_633 = or(_rdata_T_632, _rdata_T_472) @[build/NutShell.fir.opt.mlir 18395:23]
    node _rdata_T_634 = or(_rdata_T_633, _rdata_T_473) @[build/NutShell.fir.opt.mlir 18397:23]
    node _rdata_T_635 = or(_rdata_T_634, _rdata_T_474) @[build/NutShell.fir.opt.mlir 18399:23]
    node _rdata_T_636 = or(_rdata_T_635, _rdata_T_475) @[build/NutShell.fir.opt.mlir 18401:23]
    node _rdata_T_637 = or(_rdata_T_636, _rdata_T_476) @[build/NutShell.fir.opt.mlir 18403:23]
    node _rdata_T_638 = or(_rdata_T_637, _rdata_T_477) @[build/NutShell.fir.opt.mlir 18405:23]
    node _rdata_T_639 = or(_rdata_T_638, _rdata_T_478) @[build/NutShell.fir.opt.mlir 18407:23]
    node _rdata_T_640 = or(_rdata_T_639, _rdata_T_479) @[build/NutShell.fir.opt.mlir 18409:23]
    node _rdata_T_641 = or(_rdata_T_640, _rdata_T_480) @[build/NutShell.fir.opt.mlir 18411:23]
    node _rdata_T_642 = or(_rdata_T_641, _rdata_T_481) @[build/NutShell.fir.opt.mlir 18413:23]
    node _rdata_T_643 = or(_rdata_T_642, _rdata_T_482) @[build/NutShell.fir.opt.mlir 18415:23]
    node _rdata_T_644 = or(_rdata_T_643, _rdata_T_483) @[build/NutShell.fir.opt.mlir 18417:23]
    node _rdata_T_645 = or(_rdata_T_644, _rdata_T_484) @[build/NutShell.fir.opt.mlir 18419:23]
    node _rdata_T_646 = or(_rdata_T_645, _rdata_T_485) @[build/NutShell.fir.opt.mlir 18421:23]
    wire _rdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 18422:22]
    connect _rdata_WIRE, _rdata_T_646 @[build/NutShell.fir.opt.mlir 18423:7]
    connect rdata, _rdata_WIRE @[build/NutShell.fir.opt.mlir 18424:7]
    node _T_2 = eq(addr, UInt<12>(2822)) @[build/NutShell.fir.opt.mlir 18426:15]
    node _T_3 = and(_T_1, _T_2) @[build/NutShell.fir.opt.mlir 18428:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 18429:7]
      node _perfCnts_6_T = and(wdata, perfCntsLoMapping_6_2_2) @[build/NutShell.fir.opt.mlir 18431:26]
      node _perfCnts_6_T_1 = not(perfCntsLoMapping_6_2_2) @[build/NutShell.fir.opt.mlir 18433:28]
      node _perfCnts_6_T_2 = and(perfCnts_6, _perfCnts_6_T_1) @[build/NutShell.fir.opt.mlir 18435:28]
      node _perfCnts_6_T_3 = or(_perfCnts_6_T, _perfCnts_6_T_2) @[build/NutShell.fir.opt.mlir 18437:28]
      connect perfCnts_6, _perfCnts_6_T_3 @[build/NutShell.fir.opt.mlir 18438:9]
    node _T_4 = eq(addr, UInt<12>(2889)) @[build/NutShell.fir.opt.mlir 18441:15]
    node _T_5 = and(_T_1, _T_4) @[build/NutShell.fir.opt.mlir 18443:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 18444:7]
      node _perfCnts_73_T = and(wdata, perfCntsLoMapping_73_2_2) @[build/NutShell.fir.opt.mlir 18446:27]
      node _perfCnts_73_T_1 = not(perfCntsLoMapping_73_2_2) @[build/NutShell.fir.opt.mlir 18448:29]
      node _perfCnts_73_T_2 = and(perfCnts_73, _perfCnts_73_T_1) @[build/NutShell.fir.opt.mlir 18450:29]
      node _perfCnts_73_T_3 = or(_perfCnts_73_T, _perfCnts_73_T_2) @[build/NutShell.fir.opt.mlir 18452:29]
      connect perfCnts_73, _perfCnts_73_T_3 @[build/NutShell.fir.opt.mlir 18453:9]
    node _T_6 = eq(addr, UInt<12>(2876)) @[build/NutShell.fir.opt.mlir 18456:15]
    node _T_7 = and(_T_1, _T_6) @[build/NutShell.fir.opt.mlir 18458:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 18459:7]
      node _perfCnts_60_T = and(wdata, perfCntsLoMapping_60_2_2) @[build/NutShell.fir.opt.mlir 18461:27]
      node _perfCnts_60_T_1 = not(perfCntsLoMapping_60_2_2) @[build/NutShell.fir.opt.mlir 18463:29]
      node _perfCnts_60_T_2 = and(perfCnts_60, _perfCnts_60_T_1) @[build/NutShell.fir.opt.mlir 18465:29]
      node _perfCnts_60_T_3 = or(_perfCnts_60_T, _perfCnts_60_T_2) @[build/NutShell.fir.opt.mlir 18467:29]
      connect perfCnts_60, _perfCnts_60_T_3 @[build/NutShell.fir.opt.mlir 18468:9]
    node _T_8 = eq(addr, UInt<12>(2921)) @[build/NutShell.fir.opt.mlir 18471:15]
    node _T_9 = and(_T_1, _T_8) @[build/NutShell.fir.opt.mlir 18473:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 18474:7]
      node _perfCnts_105_T = and(wdata, perfCntsLoMapping_105_2_2) @[build/NutShell.fir.opt.mlir 18476:28]
      node _perfCnts_105_T_1 = not(perfCntsLoMapping_105_2_2) @[build/NutShell.fir.opt.mlir 18478:30]
      node _perfCnts_105_T_2 = and(perfCnts_105, _perfCnts_105_T_1) @[build/NutShell.fir.opt.mlir 18480:30]
      node _perfCnts_105_T_3 = or(_perfCnts_105_T, _perfCnts_105_T_2) @[build/NutShell.fir.opt.mlir 18482:30]
      connect perfCnts_105, _perfCnts_105_T_3 @[build/NutShell.fir.opt.mlir 18483:9]
    node _T_10 = eq(addr, UInt<12>(2940)) @[build/NutShell.fir.opt.mlir 18486:16]
    node _T_11 = and(_T_1, _T_10) @[build/NutShell.fir.opt.mlir 18488:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 18489:7]
      node _perfCnts_124_T = and(wdata, perfCntsLoMapping_124_2_2) @[build/NutShell.fir.opt.mlir 18491:28]
      node _perfCnts_124_T_1 = not(perfCntsLoMapping_124_2_2) @[build/NutShell.fir.opt.mlir 18493:30]
      node _perfCnts_124_T_2 = and(perfCnts_124, _perfCnts_124_T_1) @[build/NutShell.fir.opt.mlir 18495:30]
      node _perfCnts_124_T_3 = or(_perfCnts_124_T, _perfCnts_124_T_2) @[build/NutShell.fir.opt.mlir 18497:30]
      connect perfCnts_124, _perfCnts_124_T_3 @[build/NutShell.fir.opt.mlir 18498:9]
    node _T_12 = eq(addr, UInt<12>(2908)) @[build/NutShell.fir.opt.mlir 18501:16]
    node _T_13 = and(_T_1, _T_12) @[build/NutShell.fir.opt.mlir 18503:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 18504:7]
      node _perfCnts_92_T = and(wdata, perfCntsLoMapping_92_2_2) @[build/NutShell.fir.opt.mlir 18506:27]
      node _perfCnts_92_T_1 = not(perfCntsLoMapping_92_2_2) @[build/NutShell.fir.opt.mlir 18508:29]
      node _perfCnts_92_T_2 = and(perfCnts_92, _perfCnts_92_T_1) @[build/NutShell.fir.opt.mlir 18510:29]
      node _perfCnts_92_T_3 = or(_perfCnts_92_T, _perfCnts_92_T_2) @[build/NutShell.fir.opt.mlir 18512:29]
      connect perfCnts_92, _perfCnts_92_T_3 @[build/NutShell.fir.opt.mlir 18513:9]
    node _T_14 = eq(addr, UInt<12>(2837)) @[build/NutShell.fir.opt.mlir 18516:16]
    node _T_15 = and(_T_1, _T_14) @[build/NutShell.fir.opt.mlir 18518:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 18519:7]
      node _perfCnts_21_T = and(wdata, perfCntsLoMapping_21_2_2) @[build/NutShell.fir.opt.mlir 18521:27]
      node _perfCnts_21_T_1 = not(perfCntsLoMapping_21_2_2) @[build/NutShell.fir.opt.mlir 18523:29]
      node _perfCnts_21_T_2 = and(perfCnts_21, _perfCnts_21_T_1) @[build/NutShell.fir.opt.mlir 18525:29]
      node _perfCnts_21_T_3 = or(_perfCnts_21_T, _perfCnts_21_T_2) @[build/NutShell.fir.opt.mlir 18527:29]
      connect perfCnts_21, _perfCnts_21_T_3 @[build/NutShell.fir.opt.mlir 18528:9]
    node _T_16 = eq(addr, UInt<12>(2854)) @[build/NutShell.fir.opt.mlir 18531:16]
    node _T_17 = and(_T_1, _T_16) @[build/NutShell.fir.opt.mlir 18533:16]
    when _T_17 : @[build/NutShell.fir.opt.mlir 18534:7]
      node _perfCnts_38_T = and(wdata, perfCntsLoMapping_38_2_2) @[build/NutShell.fir.opt.mlir 18536:27]
      node _perfCnts_38_T_1 = not(perfCntsLoMapping_38_2_2) @[build/NutShell.fir.opt.mlir 18538:29]
      node _perfCnts_38_T_2 = and(perfCnts_38, _perfCnts_38_T_1) @[build/NutShell.fir.opt.mlir 18540:29]
      node _perfCnts_38_T_3 = or(_perfCnts_38_T, _perfCnts_38_T_2) @[build/NutShell.fir.opt.mlir 18542:29]
      connect perfCnts_38, _perfCnts_38_T_3 @[build/NutShell.fir.opt.mlir 18543:9]
    node _T_18 = eq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 18546:16]
    node _T_19 = and(_T_1, _T_18) @[build/NutShell.fir.opt.mlir 18548:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 18549:7]
      node _satp_T = and(wdata, mapping_9_2_2) @[build/NutShell.fir.opt.mlir 18551:20]
      node _satp_T_1 = not(mapping_9_2_2) @[build/NutShell.fir.opt.mlir 18553:22]
      node _satp_T_2 = and(satp, _satp_T_1) @[build/NutShell.fir.opt.mlir 18555:22]
      node _satp_T_3 = or(_satp_T, _satp_T_2) @[build/NutShell.fir.opt.mlir 18557:22]
      connect satp, _satp_T_3 @[build/NutShell.fir.opt.mlir 18558:9]
    node _T_20 = eq(addr, UInt<12>(2918)) @[build/NutShell.fir.opt.mlir 18561:16]
    node _T_21 = and(_T_1, _T_20) @[build/NutShell.fir.opt.mlir 18563:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 18564:7]
      node _perfCnts_102_T = and(wdata, perfCntsLoMapping_102_2_2) @[build/NutShell.fir.opt.mlir 18566:28]
      node _perfCnts_102_T_1 = not(perfCntsLoMapping_102_2_2) @[build/NutShell.fir.opt.mlir 18568:30]
      node _perfCnts_102_T_2 = and(perfCnts_102, _perfCnts_102_T_1) @[build/NutShell.fir.opt.mlir 18570:30]
      node _perfCnts_102_T_3 = or(_perfCnts_102_T, _perfCnts_102_T_2) @[build/NutShell.fir.opt.mlir 18572:30]
      connect perfCnts_102, _perfCnts_102_T_3 @[build/NutShell.fir.opt.mlir 18573:9]
    node _T_22 = eq(addr, UInt<12>(2933)) @[build/NutShell.fir.opt.mlir 18576:16]
    node _T_23 = and(_T_1, _T_22) @[build/NutShell.fir.opt.mlir 18578:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 18579:7]
      node _perfCnts_117_T = and(wdata, perfCntsLoMapping_117_2_2) @[build/NutShell.fir.opt.mlir 18581:28]
      node _perfCnts_117_T_1 = not(perfCntsLoMapping_117_2_2) @[build/NutShell.fir.opt.mlir 18583:30]
      node _perfCnts_117_T_2 = and(perfCnts_117, _perfCnts_117_T_1) @[build/NutShell.fir.opt.mlir 18585:30]
      node _perfCnts_117_T_3 = or(_perfCnts_117_T, _perfCnts_117_T_2) @[build/NutShell.fir.opt.mlir 18587:30]
      connect perfCnts_117, _perfCnts_117_T_3 @[build/NutShell.fir.opt.mlir 18588:9]
    node _T_24 = eq(addr, UInt<12>(2844)) @[build/NutShell.fir.opt.mlir 18591:16]
    node _T_25 = and(_T_1, _T_24) @[build/NutShell.fir.opt.mlir 18593:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 18594:7]
      node _perfCnts_28_T = and(wdata, perfCntsLoMapping_28_2_2) @[build/NutShell.fir.opt.mlir 18596:27]
      node _perfCnts_28_T_1 = not(perfCntsLoMapping_28_2_2) @[build/NutShell.fir.opt.mlir 18598:29]
      node _perfCnts_28_T_2 = and(perfCnts_28, _perfCnts_28_T_1) @[build/NutShell.fir.opt.mlir 18600:29]
      node _perfCnts_28_T_3 = or(_perfCnts_28_T, _perfCnts_28_T_2) @[build/NutShell.fir.opt.mlir 18602:29]
      connect perfCnts_28, _perfCnts_28_T_3 @[build/NutShell.fir.opt.mlir 18603:9]
    node _T_26 = eq(addr, UInt<10>(930)) @[build/NutShell.fir.opt.mlir 18606:16]
    node _T_27 = and(_T_1, _T_26) @[build/NutShell.fir.opt.mlir 18608:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 18609:7]
      node _pmpcfg2_T = and(wdata, mapping_13_2_2) @[build/NutShell.fir.opt.mlir 18611:23]
      node _pmpcfg2_T_1 = not(mapping_13_2_2) @[build/NutShell.fir.opt.mlir 18613:25]
      node _pmpcfg2_T_2 = and(pmpcfg2, _pmpcfg2_T_1) @[build/NutShell.fir.opt.mlir 18615:25]
      node _pmpcfg2_T_3 = or(_pmpcfg2_T, _pmpcfg2_T_2) @[build/NutShell.fir.opt.mlir 18617:25]
      connect pmpcfg2, _pmpcfg2_T_3 @[build/NutShell.fir.opt.mlir 18618:9]
    node _T_28 = eq(addr, UInt<12>(2901)) @[build/NutShell.fir.opt.mlir 18621:16]
    node _T_29 = and(_T_1, _T_28) @[build/NutShell.fir.opt.mlir 18623:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 18624:7]
      node _perfCnts_85_T = and(wdata, perfCntsLoMapping_85_2_2) @[build/NutShell.fir.opt.mlir 18626:27]
      node _perfCnts_85_T_1 = not(perfCntsLoMapping_85_2_2) @[build/NutShell.fir.opt.mlir 18628:29]
      node _perfCnts_85_T_2 = and(perfCnts_85, _perfCnts_85_T_1) @[build/NutShell.fir.opt.mlir 18630:29]
      node _perfCnts_85_T_3 = or(_perfCnts_85_T, _perfCnts_85_T_2) @[build/NutShell.fir.opt.mlir 18632:29]
      connect perfCnts_85, _perfCnts_85_T_3 @[build/NutShell.fir.opt.mlir 18633:9]
    node _T_30 = eq(addr, UInt<10>(945)) @[build/NutShell.fir.opt.mlir 18636:16]
    node _T_31 = and(_T_1, _T_30) @[build/NutShell.fir.opt.mlir 18638:16]
    when _T_31 : @[build/NutShell.fir.opt.mlir 18640:7]
      node _pmpaddr1_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 18642:24]
      node _pmpaddr1_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 18644:26]
      node _pmpaddr1_T_2 = and(pmpaddr1, _pmpaddr1_T_1) @[build/NutShell.fir.opt.mlir 18646:26]
      node _pmpaddr1_T_3 = or(_pmpaddr1_T, _pmpaddr1_T_2) @[build/NutShell.fir.opt.mlir 18648:26]
      connect pmpaddr1, _pmpaddr1_T_3 @[build/NutShell.fir.opt.mlir 18649:9]
    node _T_32 = eq(addr, UInt<12>(2886)) @[build/NutShell.fir.opt.mlir 18652:16]
    node _T_33 = and(_T_1, _T_32) @[build/NutShell.fir.opt.mlir 18654:16]
    when _T_33 : @[build/NutShell.fir.opt.mlir 18655:7]
      node _perfCnts_70_T = and(wdata, perfCntsLoMapping_70_2_2) @[build/NutShell.fir.opt.mlir 18657:27]
      node _perfCnts_70_T_1 = not(perfCntsLoMapping_70_2_2) @[build/NutShell.fir.opt.mlir 18659:29]
      node _perfCnts_70_T_2 = and(perfCnts_70, _perfCnts_70_T_1) @[build/NutShell.fir.opt.mlir 18661:29]
      node _perfCnts_70_T_3 = or(_perfCnts_70_T, _perfCnts_70_T_2) @[build/NutShell.fir.opt.mlir 18663:29]
      connect perfCnts_70, _perfCnts_70_T_3 @[build/NutShell.fir.opt.mlir 18664:9]
    node _T_34 = eq(addr, UInt<9>(320)) @[build/NutShell.fir.opt.mlir 18667:16]
    node _T_35 = and(_T_1, _T_34) @[build/NutShell.fir.opt.mlir 18669:16]
    when _T_35 : @[build/NutShell.fir.opt.mlir 18670:7]
      node _sscratch_T = and(wdata, mapping_17_2_2) @[build/NutShell.fir.opt.mlir 18672:24]
      node _sscratch_T_1 = not(mapping_17_2_2) @[build/NutShell.fir.opt.mlir 18674:26]
      node _sscratch_T_2 = and(sscratch, _sscratch_T_1) @[build/NutShell.fir.opt.mlir 18676:26]
      node _sscratch_T_3 = or(_sscratch_T, _sscratch_T_2) @[build/NutShell.fir.opt.mlir 18678:26]
      connect sscratch, _sscratch_T_3 @[build/NutShell.fir.opt.mlir 18679:9]
    node _T_36 = eq(addr, UInt<12>(2825)) @[build/NutShell.fir.opt.mlir 18682:16]
    node _T_37 = and(_T_1, _T_36) @[build/NutShell.fir.opt.mlir 18684:16]
    when _T_37 : @[build/NutShell.fir.opt.mlir 18685:7]
      node _perfCnts_9_T = and(wdata, perfCntsLoMapping_9_2_2) @[build/NutShell.fir.opt.mlir 18687:26]
      node _perfCnts_9_T_1 = not(perfCntsLoMapping_9_2_2) @[build/NutShell.fir.opt.mlir 18689:28]
      node _perfCnts_9_T_2 = and(perfCnts_9, _perfCnts_9_T_1) @[build/NutShell.fir.opt.mlir 18691:28]
      node _perfCnts_9_T_3 = or(_perfCnts_9_T, _perfCnts_9_T_2) @[build/NutShell.fir.opt.mlir 18693:28]
      connect perfCnts_9, _perfCnts_9_T_3 @[build/NutShell.fir.opt.mlir 18694:9]
    node _T_38 = eq(addr, UInt<12>(2819)) @[build/NutShell.fir.opt.mlir 18697:16]
    node _T_39 = and(_T_1, _T_38) @[build/NutShell.fir.opt.mlir 18699:16]
    when _T_39 : @[build/NutShell.fir.opt.mlir 18700:7]
      node _perfCnts_3_T = and(wdata, perfCntsLoMapping_3_2_2) @[build/NutShell.fir.opt.mlir 18702:26]
      node _perfCnts_3_T_1 = not(perfCntsLoMapping_3_2_2) @[build/NutShell.fir.opt.mlir 18704:28]
      node _perfCnts_3_T_2 = and(perfCnts_3, _perfCnts_3_T_1) @[build/NutShell.fir.opt.mlir 18706:28]
      node _perfCnts_3_T_3 = or(_perfCnts_3_T, _perfCnts_3_T_2) @[build/NutShell.fir.opt.mlir 18708:28]
      connect perfCnts_3, _perfCnts_3_T_3 @[build/NutShell.fir.opt.mlir 18709:9]
    node _T_40 = eq(addr, UInt<12>(2869)) @[build/NutShell.fir.opt.mlir 18712:16]
    node _T_41 = and(_T_1, _T_40) @[build/NutShell.fir.opt.mlir 18714:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 18715:7]
      node _perfCnts_53_T = and(wdata, perfCntsLoMapping_53_2_2) @[build/NutShell.fir.opt.mlir 18717:27]
      node _perfCnts_53_T_1 = not(perfCntsLoMapping_53_2_2) @[build/NutShell.fir.opt.mlir 18719:29]
      node _perfCnts_53_T_2 = and(perfCnts_53, _perfCnts_53_T_1) @[build/NutShell.fir.opt.mlir 18721:29]
      node _perfCnts_53_T_3 = or(_perfCnts_53_T, _perfCnts_53_T_2) @[build/NutShell.fir.opt.mlir 18723:29]
      connect perfCnts_53, _perfCnts_53_T_3 @[build/NutShell.fir.opt.mlir 18724:9]
    node _T_42 = eq(addr, UInt<12>(2916)) @[build/NutShell.fir.opt.mlir 18727:16]
    node _T_43 = and(_T_1, _T_42) @[build/NutShell.fir.opt.mlir 18729:16]
    when _T_43 : @[build/NutShell.fir.opt.mlir 18730:7]
      node _perfCnts_100_T = and(wdata, perfCntsLoMapping_100_2_2) @[build/NutShell.fir.opt.mlir 18732:28]
      node _perfCnts_100_T_1 = not(perfCntsLoMapping_100_2_2) @[build/NutShell.fir.opt.mlir 18734:30]
      node _perfCnts_100_T_2 = and(perfCnts_100, _perfCnts_100_T_1) @[build/NutShell.fir.opt.mlir 18736:30]
      node _perfCnts_100_T_3 = or(_perfCnts_100_T, _perfCnts_100_T_2) @[build/NutShell.fir.opt.mlir 18738:30]
      connect perfCnts_100, _perfCnts_100_T_3 @[build/NutShell.fir.opt.mlir 18739:9]
    node _T_44 = eq(addr, UInt<12>(2897)) @[build/NutShell.fir.opt.mlir 18742:16]
    node _T_45 = and(_T_1, _T_44) @[build/NutShell.fir.opt.mlir 18744:16]
    when _T_45 : @[build/NutShell.fir.opt.mlir 18745:7]
      node _perfCnts_81_T = and(wdata, perfCntsLoMapping_81_2_2) @[build/NutShell.fir.opt.mlir 18747:27]
      node _perfCnts_81_T_1 = not(perfCntsLoMapping_81_2_2) @[build/NutShell.fir.opt.mlir 18749:29]
      node _perfCnts_81_T_2 = and(perfCnts_81, _perfCnts_81_T_1) @[build/NutShell.fir.opt.mlir 18751:29]
      node _perfCnts_81_T_3 = or(_perfCnts_81_T, _perfCnts_81_T_2) @[build/NutShell.fir.opt.mlir 18753:29]
      connect perfCnts_81, _perfCnts_81_T_3 @[build/NutShell.fir.opt.mlir 18754:9]
    node _T_46 = eq(addr, UInt<12>(2857)) @[build/NutShell.fir.opt.mlir 18757:16]
    node _T_47 = and(_T_1, _T_46) @[build/NutShell.fir.opt.mlir 18759:16]
    when _T_47 : @[build/NutShell.fir.opt.mlir 18760:7]
      node _perfCnts_41_T = and(wdata, perfCntsLoMapping_41_2_2) @[build/NutShell.fir.opt.mlir 18762:27]
      node _perfCnts_41_T_1 = not(perfCntsLoMapping_41_2_2) @[build/NutShell.fir.opt.mlir 18764:29]
      node _perfCnts_41_T_2 = and(perfCnts_41, _perfCnts_41_T_1) @[build/NutShell.fir.opt.mlir 18766:29]
      node _perfCnts_41_T_3 = or(_perfCnts_41_T, _perfCnts_41_T_2) @[build/NutShell.fir.opt.mlir 18768:29]
      connect perfCnts_41, _perfCnts_41_T_3 @[build/NutShell.fir.opt.mlir 18769:9]
    node _T_48 = eq(addr, UInt<10>(770)) @[build/NutShell.fir.opt.mlir 18772:16]
    node _T_49 = and(_T_1, _T_48) @[build/NutShell.fir.opt.mlir 18774:16]
    when _T_49 : @[build/NutShell.fir.opt.mlir 18776:7]
      node _medeleg_T = and(wdata, UInt<64>(48127)) @[build/NutShell.fir.opt.mlir 18778:23]
      node _medeleg_T_1 = not(UInt<64>(48127)) @[build/NutShell.fir.opt.mlir 18780:25]
      node _medeleg_T_2 = and(medeleg, _medeleg_T_1) @[build/NutShell.fir.opt.mlir 18782:25]
      node _medeleg_T_3 = or(_medeleg_T, _medeleg_T_2) @[build/NutShell.fir.opt.mlir 18784:25]
      connect medeleg, _medeleg_T_3 @[build/NutShell.fir.opt.mlir 18785:9]
    node _T_50 = eq(addr, UInt<12>(2929)) @[build/NutShell.fir.opt.mlir 18788:16]
    node _T_51 = and(_T_1, _T_50) @[build/NutShell.fir.opt.mlir 18790:16]
    when _T_51 : @[build/NutShell.fir.opt.mlir 18791:7]
      node _perfCnts_113_T = and(wdata, perfCntsLoMapping_113_2_2) @[build/NutShell.fir.opt.mlir 18793:28]
      node _perfCnts_113_T_1 = not(perfCntsLoMapping_113_2_2) @[build/NutShell.fir.opt.mlir 18795:30]
      node _perfCnts_113_T_2 = and(perfCnts_113, _perfCnts_113_T_1) @[build/NutShell.fir.opt.mlir 18797:30]
      node _perfCnts_113_T_3 = or(_perfCnts_113_T, _perfCnts_113_T_2) @[build/NutShell.fir.opt.mlir 18799:30]
      connect perfCnts_113, _perfCnts_113_T_3 @[build/NutShell.fir.opt.mlir 18800:9]
    node _T_52 = eq(addr, UInt<12>(2852)) @[build/NutShell.fir.opt.mlir 18803:16]
    node _T_53 = and(_T_1, _T_52) @[build/NutShell.fir.opt.mlir 18805:16]
    when _T_53 : @[build/NutShell.fir.opt.mlir 18806:7]
      node _perfCnts_36_T = and(wdata, perfCntsLoMapping_36_2_2) @[build/NutShell.fir.opt.mlir 18808:27]
      node _perfCnts_36_T_1 = not(perfCntsLoMapping_36_2_2) @[build/NutShell.fir.opt.mlir 18810:29]
      node _perfCnts_36_T_2 = and(perfCnts_36, _perfCnts_36_T_1) @[build/NutShell.fir.opt.mlir 18812:29]
      node _perfCnts_36_T_3 = or(_perfCnts_36_T, _perfCnts_36_T_2) @[build/NutShell.fir.opt.mlir 18814:29]
      connect perfCnts_36, _perfCnts_36_T_3 @[build/NutShell.fir.opt.mlir 18815:9]
    node _T_54 = eq(addr, UInt<9>(261)) @[build/NutShell.fir.opt.mlir 18818:16]
    node _T_55 = and(_T_1, _T_54) @[build/NutShell.fir.opt.mlir 18820:16]
    when _T_55 : @[build/NutShell.fir.opt.mlir 18821:7]
      node _stvec_T = and(wdata, mapping_27_2_2) @[build/NutShell.fir.opt.mlir 18823:21]
      node _stvec_T_1 = not(mapping_27_2_2) @[build/NutShell.fir.opt.mlir 18825:23]
      node _stvec_T_2 = and(stvec, _stvec_T_1) @[build/NutShell.fir.opt.mlir 18827:23]
      node _stvec_T_3 = or(_stvec_T, _stvec_T_2) @[build/NutShell.fir.opt.mlir 18829:23]
      connect stvec, _stvec_T_3 @[build/NutShell.fir.opt.mlir 18830:9]
    node _T_56 = eq(addr, UInt<12>(2829)) @[build/NutShell.fir.opt.mlir 18833:16]
    node _T_57 = and(_T_1, _T_56) @[build/NutShell.fir.opt.mlir 18835:16]
    when _T_57 : @[build/NutShell.fir.opt.mlir 18836:7]
      node _perfCnts_13_T = and(wdata, perfCntsLoMapping_13_2_2) @[build/NutShell.fir.opt.mlir 18838:27]
      node _perfCnts_13_T_1 = not(perfCntsLoMapping_13_2_2) @[build/NutShell.fir.opt.mlir 18840:29]
      node _perfCnts_13_T_2 = and(perfCnts_13, _perfCnts_13_T_1) @[build/NutShell.fir.opt.mlir 18842:29]
      node _perfCnts_13_T_3 = or(_perfCnts_13_T, _perfCnts_13_T_2) @[build/NutShell.fir.opt.mlir 18844:29]
      connect perfCnts_13, _perfCnts_13_T_3 @[build/NutShell.fir.opt.mlir 18845:9]
    node _T_58 = eq(addr, UInt<12>(2925)) @[build/NutShell.fir.opt.mlir 18848:16]
    node _T_59 = and(_T_1, _T_58) @[build/NutShell.fir.opt.mlir 18850:16]
    when _T_59 : @[build/NutShell.fir.opt.mlir 18851:7]
      node _perfCnts_109_T = and(wdata, perfCntsLoMapping_109_2_2) @[build/NutShell.fir.opt.mlir 18853:28]
      node _perfCnts_109_T_1 = not(perfCntsLoMapping_109_2_2) @[build/NutShell.fir.opt.mlir 18855:30]
      node _perfCnts_109_T_2 = and(perfCnts_109, _perfCnts_109_T_1) @[build/NutShell.fir.opt.mlir 18857:30]
      node _perfCnts_109_T_3 = or(_perfCnts_109_T, _perfCnts_109_T_2) @[build/NutShell.fir.opt.mlir 18859:30]
      connect perfCnts_109, _perfCnts_109_T_3 @[build/NutShell.fir.opt.mlir 18860:9]
    node _T_60 = eq(addr, UInt<12>(2893)) @[build/NutShell.fir.opt.mlir 18863:16]
    node _T_61 = and(_T_1, _T_60) @[build/NutShell.fir.opt.mlir 18865:16]
    when _T_61 : @[build/NutShell.fir.opt.mlir 18866:7]
      node _perfCnts_77_T = and(wdata, perfCntsLoMapping_77_2_2) @[build/NutShell.fir.opt.mlir 18868:27]
      node _perfCnts_77_T_1 = not(perfCntsLoMapping_77_2_2) @[build/NutShell.fir.opt.mlir 18870:29]
      node _perfCnts_77_T_2 = and(perfCnts_77, _perfCnts_77_T_1) @[build/NutShell.fir.opt.mlir 18872:29]
      node _perfCnts_77_T_3 = or(_perfCnts_77_T, _perfCnts_77_T_2) @[build/NutShell.fir.opt.mlir 18874:29]
      connect perfCnts_77, _perfCnts_77_T_3 @[build/NutShell.fir.opt.mlir 18875:9]
    node _T_62 = eq(addr, UInt<9>(321)) @[build/NutShell.fir.opt.mlir 18878:16]
    node _T_63 = and(_T_1, _T_62) @[build/NutShell.fir.opt.mlir 18880:16]
    when _T_63 : @[build/NutShell.fir.opt.mlir 18881:7]
      node _sepc_T = and(wdata, mapping_31_2_2) @[build/NutShell.fir.opt.mlir 18883:20]
      node _sepc_T_1 = not(mapping_31_2_2) @[build/NutShell.fir.opt.mlir 18885:22]
      node _sepc_T_2 = and(sepc, _sepc_T_1) @[build/NutShell.fir.opt.mlir 18887:22]
      node _sepc_T_3 = or(_sepc_T, _sepc_T_2) @[build/NutShell.fir.opt.mlir 18889:22]
      connect sepc, _sepc_T_3 @[build/NutShell.fir.opt.mlir 18890:9]
    node _T_64 = eq(addr, UInt<12>(2880)) @[build/NutShell.fir.opt.mlir 18893:16]
    node _T_65 = and(_T_1, _T_64) @[build/NutShell.fir.opt.mlir 18895:16]
    when _T_65 : @[build/NutShell.fir.opt.mlir 18896:7]
      node _perfCnts_64_T = and(wdata, perfCntsLoMapping_64_2_2) @[build/NutShell.fir.opt.mlir 18898:27]
      node _perfCnts_64_T_1 = not(perfCntsLoMapping_64_2_2) @[build/NutShell.fir.opt.mlir 18900:29]
      node _perfCnts_64_T_2 = and(perfCnts_64, _perfCnts_64_T_1) @[build/NutShell.fir.opt.mlir 18902:29]
      node _perfCnts_64_T_3 = or(_perfCnts_64_T, _perfCnts_64_T_2) @[build/NutShell.fir.opt.mlir 18904:29]
      connect perfCnts_64, _perfCnts_64_T_3 @[build/NutShell.fir.opt.mlir 18905:9]
    node _T_66 = eq(addr, UInt<10>(834)) @[build/NutShell.fir.opt.mlir 18908:16]
    node _T_67 = and(_T_1, _T_66) @[build/NutShell.fir.opt.mlir 18910:16]
    when _T_67 : @[build/NutShell.fir.opt.mlir 18911:7]
      node _mcause_T = and(wdata, mapping_33_2_2) @[build/NutShell.fir.opt.mlir 18913:22]
      node _mcause_T_1 = not(mapping_33_2_2) @[build/NutShell.fir.opt.mlir 18915:24]
      node _mcause_T_2 = and(mcause, _mcause_T_1) @[build/NutShell.fir.opt.mlir 18917:24]
      node _mcause_T_3 = or(_mcause_T, _mcause_T_2) @[build/NutShell.fir.opt.mlir 18919:24]
      connect mcause, _mcause_T_3 @[build/NutShell.fir.opt.mlir 18920:9]
    node _T_68 = eq(addr, UInt<12>(2833)) @[build/NutShell.fir.opt.mlir 18923:16]
    node _T_69 = and(_T_1, _T_68) @[build/NutShell.fir.opt.mlir 18925:16]
    when _T_69 : @[build/NutShell.fir.opt.mlir 18926:7]
      node _perfCnts_17_T = and(wdata, perfCntsLoMapping_17_2_2) @[build/NutShell.fir.opt.mlir 18928:27]
      node _perfCnts_17_T_1 = not(perfCntsLoMapping_17_2_2) @[build/NutShell.fir.opt.mlir 18930:29]
      node _perfCnts_17_T_2 = and(perfCnts_17, _perfCnts_17_T_1) @[build/NutShell.fir.opt.mlir 18932:29]
      node _perfCnts_17_T_3 = or(_perfCnts_17_T, _perfCnts_17_T_2) @[build/NutShell.fir.opt.mlir 18934:29]
      connect perfCnts_17, _perfCnts_17_T_3 @[build/NutShell.fir.opt.mlir 18935:9]
    node _T_70 = eq(addr, UInt<12>(2861)) @[build/NutShell.fir.opt.mlir 18938:16]
    node _T_71 = and(_T_1, _T_70) @[build/NutShell.fir.opt.mlir 18940:16]
    when _T_71 : @[build/NutShell.fir.opt.mlir 18941:7]
      node _perfCnts_45_T = and(wdata, perfCntsLoMapping_45_2_2) @[build/NutShell.fir.opt.mlir 18943:27]
      node _perfCnts_45_T_1 = not(perfCntsLoMapping_45_2_2) @[build/NutShell.fir.opt.mlir 18945:29]
      node _perfCnts_45_T_2 = and(perfCnts_45, _perfCnts_45_T_1) @[build/NutShell.fir.opt.mlir 18947:29]
      node _perfCnts_45_T_3 = or(_perfCnts_45_T, _perfCnts_45_T_2) @[build/NutShell.fir.opt.mlir 18949:29]
      connect perfCnts_45, _perfCnts_45_T_3 @[build/NutShell.fir.opt.mlir 18950:9]
    node _T_72 = eq(addr, UInt<10>(774)) @[build/NutShell.fir.opt.mlir 18953:16]
    node _T_73 = and(_T_1, _T_72) @[build/NutShell.fir.opt.mlir 18955:16]
    when _T_73 : @[build/NutShell.fir.opt.mlir 18956:7]
      node _mcounteren_T = and(wdata, mapping_36_2_2) @[build/NutShell.fir.opt.mlir 18958:26]
      node _mcounteren_T_1 = not(mapping_36_2_2) @[build/NutShell.fir.opt.mlir 18960:28]
      node _mcounteren_T_2 = and(mcounteren, _mcounteren_T_1) @[build/NutShell.fir.opt.mlir 18962:28]
      node _mcounteren_T_3 = or(_mcounteren_T, _mcounteren_T_2) @[build/NutShell.fir.opt.mlir 18964:28]
      connect mcounteren, _mcounteren_T_3 @[build/NutShell.fir.opt.mlir 18965:9]
    node _T_74 = eq(addr, UInt<12>(2884)) @[build/NutShell.fir.opt.mlir 18968:16]
    node _T_75 = and(_T_1, _T_74) @[build/NutShell.fir.opt.mlir 18970:16]
    when _T_75 : @[build/NutShell.fir.opt.mlir 18971:7]
      node _perfCnts_68_T = and(wdata, perfCntsLoMapping_68_2_2) @[build/NutShell.fir.opt.mlir 18973:27]
      node _perfCnts_68_T_1 = not(perfCntsLoMapping_68_2_2) @[build/NutShell.fir.opt.mlir 18975:29]
      node _perfCnts_68_T_2 = and(perfCnts_68, _perfCnts_68_T_1) @[build/NutShell.fir.opt.mlir 18977:29]
      node _perfCnts_68_T_3 = or(_perfCnts_68_T, _perfCnts_68_T_2) @[build/NutShell.fir.opt.mlir 18979:29]
      connect perfCnts_68, _perfCnts_68_T_3 @[build/NutShell.fir.opt.mlir 18980:9]
    node _T_76 = eq(addr, UInt<12>(2922)) @[build/NutShell.fir.opt.mlir 18983:16]
    node _T_77 = and(_T_1, _T_76) @[build/NutShell.fir.opt.mlir 18985:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 18986:7]
      node _perfCnts_106_T = and(wdata, perfCntsLoMapping_106_2_2) @[build/NutShell.fir.opt.mlir 18988:28]
      node _perfCnts_106_T_1 = not(perfCntsLoMapping_106_2_2) @[build/NutShell.fir.opt.mlir 18990:30]
      node _perfCnts_106_T_2 = and(perfCnts_106, _perfCnts_106_T_1) @[build/NutShell.fir.opt.mlir 18992:30]
      node _perfCnts_106_T_3 = or(_perfCnts_106_T, _perfCnts_106_T_2) @[build/NutShell.fir.opt.mlir 18994:30]
      connect perfCnts_106, _perfCnts_106_T_3 @[build/NutShell.fir.opt.mlir 18995:9]
    node _T_78 = eq(addr, UInt<12>(2910)) @[build/NutShell.fir.opt.mlir 18998:16]
    node _T_79 = and(_T_1, _T_78) @[build/NutShell.fir.opt.mlir 19000:16]
    when _T_79 : @[build/NutShell.fir.opt.mlir 19001:7]
      node _perfCnts_94_T = and(wdata, perfCntsLoMapping_94_2_2) @[build/NutShell.fir.opt.mlir 19003:27]
      node _perfCnts_94_T_1 = not(perfCntsLoMapping_94_2_2) @[build/NutShell.fir.opt.mlir 19005:29]
      node _perfCnts_94_T_2 = and(perfCnts_94, _perfCnts_94_T_1) @[build/NutShell.fir.opt.mlir 19007:29]
      node _perfCnts_94_T_3 = or(_perfCnts_94_T, _perfCnts_94_T_2) @[build/NutShell.fir.opt.mlir 19009:29]
      connect perfCnts_94, _perfCnts_94_T_3 @[build/NutShell.fir.opt.mlir 19010:9]
    node _T_80 = eq(addr, UInt<12>(2905)) @[build/NutShell.fir.opt.mlir 19013:16]
    node _T_81 = and(_T_1, _T_80) @[build/NutShell.fir.opt.mlir 19015:16]
    when _T_81 : @[build/NutShell.fir.opt.mlir 19016:7]
      node _perfCnts_89_T = and(wdata, perfCntsLoMapping_89_2_2) @[build/NutShell.fir.opt.mlir 19018:27]
      node _perfCnts_89_T_1 = not(perfCntsLoMapping_89_2_2) @[build/NutShell.fir.opt.mlir 19020:29]
      node _perfCnts_89_T_2 = and(perfCnts_89, _perfCnts_89_T_1) @[build/NutShell.fir.opt.mlir 19022:29]
      node _perfCnts_89_T_3 = or(_perfCnts_89_T, _perfCnts_89_T_2) @[build/NutShell.fir.opt.mlir 19024:29]
      connect perfCnts_89, _perfCnts_89_T_3 @[build/NutShell.fir.opt.mlir 19025:9]
    node _T_82 = eq(addr, UInt<9>(260)) @[build/NutShell.fir.opt.mlir 19028:16]
    node _T_83 = and(_T_1, _T_82) @[build/NutShell.fir.opt.mlir 19030:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 19031:7]
      node _mie_T = and(wdata, sieMask) @[build/NutShell.fir.opt.mlir 19033:19]
      node _mie_T_1 = not(sieMask) @[build/NutShell.fir.opt.mlir 19035:21]
      node _mie_T_2 = and(mie, _mie_T_1) @[build/NutShell.fir.opt.mlir 19037:21]
      node _mie_T_3 = or(_mie_T, _mie_T_2) @[build/NutShell.fir.opt.mlir 19039:21]
      connect mie, _mie_T_3 @[build/NutShell.fir.opt.mlir 19040:9]
    node _T_84 = eq(addr, UInt<12>(2937)) @[build/NutShell.fir.opt.mlir 19043:16]
    node _T_85 = and(_T_1, _T_84) @[build/NutShell.fir.opt.mlir 19045:16]
    when _T_85 : @[build/NutShell.fir.opt.mlir 19046:7]
      node _perfCnts_121_T = and(wdata, perfCntsLoMapping_121_2_2) @[build/NutShell.fir.opt.mlir 19048:28]
      node _perfCnts_121_T_1 = not(perfCntsLoMapping_121_2_2) @[build/NutShell.fir.opt.mlir 19050:30]
      node _perfCnts_121_T_2 = and(perfCnts_121, _perfCnts_121_T_1) @[build/NutShell.fir.opt.mlir 19052:30]
      node _perfCnts_121_T_3 = or(_perfCnts_121_T, _perfCnts_121_T_2) @[build/NutShell.fir.opt.mlir 19054:30]
      connect perfCnts_121, _perfCnts_121_T_3 @[build/NutShell.fir.opt.mlir 19055:9]
    node _T_86 = eq(addr, UInt<12>(2890)) @[build/NutShell.fir.opt.mlir 19058:16]
    node _T_87 = and(_T_1, _T_86) @[build/NutShell.fir.opt.mlir 19060:16]
    when _T_87 : @[build/NutShell.fir.opt.mlir 19061:7]
      node _perfCnts_74_T = and(wdata, perfCntsLoMapping_74_2_2) @[build/NutShell.fir.opt.mlir 19063:27]
      node _perfCnts_74_T_1 = not(perfCntsLoMapping_74_2_2) @[build/NutShell.fir.opt.mlir 19065:29]
      node _perfCnts_74_T_2 = and(perfCnts_74, _perfCnts_74_T_1) @[build/NutShell.fir.opt.mlir 19067:29]
      node _perfCnts_74_T_3 = or(_perfCnts_74_T, _perfCnts_74_T_2) @[build/NutShell.fir.opt.mlir 19069:29]
      connect perfCnts_74, _perfCnts_74_T_3 @[build/NutShell.fir.opt.mlir 19070:9]
    node _T_88 = eq(addr, UInt<12>(2873)) @[build/NutShell.fir.opt.mlir 19073:16]
    node _T_89 = and(_T_1, _T_88) @[build/NutShell.fir.opt.mlir 19075:16]
    when _T_89 : @[build/NutShell.fir.opt.mlir 19076:7]
      node _perfCnts_57_T = and(wdata, perfCntsLoMapping_57_2_2) @[build/NutShell.fir.opt.mlir 19078:27]
      node _perfCnts_57_T_1 = not(perfCntsLoMapping_57_2_2) @[build/NutShell.fir.opt.mlir 19080:29]
      node _perfCnts_57_T_2 = and(perfCnts_57, _perfCnts_57_T_1) @[build/NutShell.fir.opt.mlir 19082:29]
      node _perfCnts_57_T_3 = or(_perfCnts_57_T, _perfCnts_57_T_2) @[build/NutShell.fir.opt.mlir 19084:29]
      connect perfCnts_57, _perfCnts_57_T_3 @[build/NutShell.fir.opt.mlir 19085:9]
    node _T_90 = eq(addr, UInt<12>(2872)) @[build/NutShell.fir.opt.mlir 19088:16]
    node _T_91 = and(_T_1, _T_90) @[build/NutShell.fir.opt.mlir 19090:16]
    when _T_91 : @[build/NutShell.fir.opt.mlir 19091:7]
      node _perfCnts_56_T = and(wdata, perfCntsLoMapping_56_2_2) @[build/NutShell.fir.opt.mlir 19093:27]
      node _perfCnts_56_T_1 = not(perfCntsLoMapping_56_2_2) @[build/NutShell.fir.opt.mlir 19095:29]
      node _perfCnts_56_T_2 = and(perfCnts_56, _perfCnts_56_T_1) @[build/NutShell.fir.opt.mlir 19097:29]
      node _perfCnts_56_T_3 = or(_perfCnts_56_T, _perfCnts_56_T_2) @[build/NutShell.fir.opt.mlir 19099:29]
      connect perfCnts_56, _perfCnts_56_T_3 @[build/NutShell.fir.opt.mlir 19100:9]
    node _T_92 = eq(addr, UInt<12>(2826)) @[build/NutShell.fir.opt.mlir 19103:16]
    node _T_93 = and(_T_1, _T_92) @[build/NutShell.fir.opt.mlir 19105:16]
    when _T_93 : @[build/NutShell.fir.opt.mlir 19106:7]
      node _perfCnts_10_T = and(wdata, perfCntsLoMapping_10_2_2) @[build/NutShell.fir.opt.mlir 19108:27]
      node _perfCnts_10_T_1 = not(perfCntsLoMapping_10_2_2) @[build/NutShell.fir.opt.mlir 19110:29]
      node _perfCnts_10_T_2 = and(perfCnts_10, _perfCnts_10_T_1) @[build/NutShell.fir.opt.mlir 19112:29]
      node _perfCnts_10_T_3 = or(_perfCnts_10_T, _perfCnts_10_T_2) @[build/NutShell.fir.opt.mlir 19114:29]
      connect perfCnts_10, _perfCnts_10_T_3 @[build/NutShell.fir.opt.mlir 19115:9]
    node _T_94 = eq(addr, UInt<12>(2820)) @[build/NutShell.fir.opt.mlir 19118:16]
    node _T_95 = and(_T_1, _T_94) @[build/NutShell.fir.opt.mlir 19120:16]
    when _T_95 : @[build/NutShell.fir.opt.mlir 19121:7]
      node _perfCnts_4_T = and(wdata, perfCntsLoMapping_4_2_2) @[build/NutShell.fir.opt.mlir 19123:26]
      node _perfCnts_4_T_1 = not(perfCntsLoMapping_4_2_2) @[build/NutShell.fir.opt.mlir 19125:28]
      node _perfCnts_4_T_2 = and(perfCnts_4, _perfCnts_4_T_1) @[build/NutShell.fir.opt.mlir 19127:28]
      node _perfCnts_4_T_3 = or(_perfCnts_4_T, _perfCnts_4_T_2) @[build/NutShell.fir.opt.mlir 19129:28]
      connect perfCnts_4, _perfCnts_4_T_3 @[build/NutShell.fir.opt.mlir 19130:9]
    node _T_96 = eq(addr, UInt<12>(2840)) @[build/NutShell.fir.opt.mlir 19133:16]
    node _T_97 = and(_T_1, _T_96) @[build/NutShell.fir.opt.mlir 19135:16]
    when _T_97 : @[build/NutShell.fir.opt.mlir 19136:7]
      node _perfCnts_24_T = and(wdata, perfCntsLoMapping_24_2_2) @[build/NutShell.fir.opt.mlir 19138:27]
      node _perfCnts_24_T_1 = not(perfCntsLoMapping_24_2_2) @[build/NutShell.fir.opt.mlir 19140:29]
      node _perfCnts_24_T_2 = and(perfCnts_24, _perfCnts_24_T_1) @[build/NutShell.fir.opt.mlir 19142:29]
      node _perfCnts_24_T_3 = or(_perfCnts_24_T, _perfCnts_24_T_2) @[build/NutShell.fir.opt.mlir 19144:29]
      connect perfCnts_24, _perfCnts_24_T_3 @[build/NutShell.fir.opt.mlir 19145:9]
    node _T_98 = eq(addr, UInt<12>(2895)) @[build/NutShell.fir.opt.mlir 19148:16]
    node _T_99 = and(_T_1, _T_98) @[build/NutShell.fir.opt.mlir 19150:16]
    when _T_99 : @[build/NutShell.fir.opt.mlir 19151:7]
      node _perfCnts_79_T = and(wdata, perfCntsLoMapping_79_2_2) @[build/NutShell.fir.opt.mlir 19153:27]
      node _perfCnts_79_T_1 = not(perfCntsLoMapping_79_2_2) @[build/NutShell.fir.opt.mlir 19155:29]
      node _perfCnts_79_T_2 = and(perfCnts_79, _perfCnts_79_T_1) @[build/NutShell.fir.opt.mlir 19157:29]
      node _perfCnts_79_T_3 = or(_perfCnts_79_T, _perfCnts_79_T_2) @[build/NutShell.fir.opt.mlir 19159:29]
      connect perfCnts_79, _perfCnts_79_T_3 @[build/NutShell.fir.opt.mlir 19160:9]
    node _T_100 = eq(addr, UInt<12>(2841)) @[build/NutShell.fir.opt.mlir 19163:17]
    node _T_101 = and(_T_1, _T_100) @[build/NutShell.fir.opt.mlir 19165:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 19166:7]
      node _perfCnts_25_T = and(wdata, perfCntsLoMapping_25_2_2) @[build/NutShell.fir.opt.mlir 19168:27]
      node _perfCnts_25_T_1 = not(perfCntsLoMapping_25_2_2) @[build/NutShell.fir.opt.mlir 19170:29]
      node _perfCnts_25_T_2 = and(perfCnts_25, _perfCnts_25_T_1) @[build/NutShell.fir.opt.mlir 19172:29]
      node _perfCnts_25_T_3 = or(_perfCnts_25_T, _perfCnts_25_T_2) @[build/NutShell.fir.opt.mlir 19174:29]
      connect perfCnts_25, _perfCnts_25_T_3 @[build/NutShell.fir.opt.mlir 19175:9]
    node _T_102 = eq(addr, UInt<12>(2858)) @[build/NutShell.fir.opt.mlir 19178:17]
    node _T_103 = and(_T_1, _T_102) @[build/NutShell.fir.opt.mlir 19180:17]
    when _T_103 : @[build/NutShell.fir.opt.mlir 19181:7]
      node _perfCnts_42_T = and(wdata, perfCntsLoMapping_42_2_2) @[build/NutShell.fir.opt.mlir 19183:27]
      node _perfCnts_42_T_1 = not(perfCntsLoMapping_42_2_2) @[build/NutShell.fir.opt.mlir 19185:29]
      node _perfCnts_42_T_2 = and(perfCnts_42, _perfCnts_42_T_1) @[build/NutShell.fir.opt.mlir 19187:29]
      node _perfCnts_42_T_3 = or(_perfCnts_42_T, _perfCnts_42_T_2) @[build/NutShell.fir.opt.mlir 19189:29]
      connect perfCnts_42, _perfCnts_42_T_3 @[build/NutShell.fir.opt.mlir 19190:9]
    node _T_104 = eq(addr, UInt<9>(256)) @[build/NutShell.fir.opt.mlir 19193:17]
    node _T_105 = and(_T_1, _T_104) @[build/NutShell.fir.opt.mlir 19195:17]
    when _T_105 : @[build/NutShell.fir.opt.mlir 19196:7]
      node _mstatus_T = and(wdata, sstatusWmask) @[build/NutShell.fir.opt.mlir 19198:23]
      node _mstatus_T_1 = not(sstatusWmask) @[build/NutShell.fir.opt.mlir 19200:25]
      node _mstatus_T_2 = and(mstatus, _mstatus_T_1) @[build/NutShell.fir.opt.mlir 19202:25]
      node _mstatus_T_3 = or(_mstatus_T, _mstatus_T_2) @[build/NutShell.fir.opt.mlir 19204:25]
      wire _mstatus_mstatusOld_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19205:37]
      wire _mstatus_mstatusOld_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 19232:39]
      connect _mstatus_mstatusOld_WIRE_1, _mstatus_T_3 @[build/NutShell.fir.opt.mlir 19233:9]
      node _mstatus_mstatusOld_T = bits(_mstatus_mstatusOld_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 19235:34]
      connect _mstatus_mstatusOld_WIRE.ie.u, _mstatus_mstatusOld_T @[build/NutShell.fir.opt.mlir 19236:9]
      node _mstatus_mstatusOld_T_1 = bits(_mstatus_mstatusOld_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 19238:36]
      connect _mstatus_mstatusOld_WIRE.ie.s, _mstatus_mstatusOld_T_1 @[build/NutShell.fir.opt.mlir 19239:9]
      node _mstatus_mstatusOld_T_2 = bits(_mstatus_mstatusOld_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 19241:36]
      connect _mstatus_mstatusOld_WIRE.ie.h, _mstatus_mstatusOld_T_2 @[build/NutShell.fir.opt.mlir 19242:9]
      node _mstatus_mstatusOld_T_3 = bits(_mstatus_mstatusOld_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 19244:36]
      connect _mstatus_mstatusOld_WIRE.ie.m, _mstatus_mstatusOld_T_3 @[build/NutShell.fir.opt.mlir 19245:9]
      node _mstatus_mstatusOld_T_4 = bits(_mstatus_mstatusOld_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 19247:36]
      connect _mstatus_mstatusOld_WIRE.pie.u, _mstatus_mstatusOld_T_4 @[build/NutShell.fir.opt.mlir 19248:9]
      node _mstatus_mstatusOld_T_5 = bits(_mstatus_mstatusOld_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 19250:36]
      connect _mstatus_mstatusOld_WIRE.pie.s, _mstatus_mstatusOld_T_5 @[build/NutShell.fir.opt.mlir 19251:9]
      node _mstatus_mstatusOld_T_6 = bits(_mstatus_mstatusOld_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 19253:36]
      connect _mstatus_mstatusOld_WIRE.pie.h, _mstatus_mstatusOld_T_6 @[build/NutShell.fir.opt.mlir 19254:9]
      node _mstatus_mstatusOld_T_7 = bits(_mstatus_mstatusOld_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 19256:36]
      connect _mstatus_mstatusOld_WIRE.pie.m, _mstatus_mstatusOld_T_7 @[build/NutShell.fir.opt.mlir 19257:9]
      node _mstatus_mstatusOld_T_8 = bits(_mstatus_mstatusOld_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 19259:36]
      connect _mstatus_mstatusOld_WIRE.spp, _mstatus_mstatusOld_T_8 @[build/NutShell.fir.opt.mlir 19260:9]
      node _mstatus_mstatusOld_T_9 = bits(_mstatus_mstatusOld_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 19262:36]
      connect _mstatus_mstatusOld_WIRE.hpp, _mstatus_mstatusOld_T_9 @[build/NutShell.fir.opt.mlir 19263:9]
      node _mstatus_mstatusOld_T_10 = bits(_mstatus_mstatusOld_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 19265:37]
      connect _mstatus_mstatusOld_WIRE.mpp, _mstatus_mstatusOld_T_10 @[build/NutShell.fir.opt.mlir 19266:9]
      node _mstatus_mstatusOld_T_11 = bits(_mstatus_mstatusOld_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 19268:37]
      connect _mstatus_mstatusOld_WIRE.fs, _mstatus_mstatusOld_T_11 @[build/NutShell.fir.opt.mlir 19269:9]
      node _mstatus_mstatusOld_T_12 = bits(_mstatus_mstatusOld_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 19271:37]
      connect _mstatus_mstatusOld_WIRE.xs, _mstatus_mstatusOld_T_12 @[build/NutShell.fir.opt.mlir 19272:9]
      node _mstatus_mstatusOld_T_13 = bits(_mstatus_mstatusOld_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 19274:37]
      connect _mstatus_mstatusOld_WIRE.mprv, _mstatus_mstatusOld_T_13 @[build/NutShell.fir.opt.mlir 19275:9]
      node _mstatus_mstatusOld_T_14 = bits(_mstatus_mstatusOld_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 19277:37]
      connect _mstatus_mstatusOld_WIRE.sum, _mstatus_mstatusOld_T_14 @[build/NutShell.fir.opt.mlir 19278:9]
      node _mstatus_mstatusOld_T_15 = bits(_mstatus_mstatusOld_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 19280:37]
      connect _mstatus_mstatusOld_WIRE.mxr, _mstatus_mstatusOld_T_15 @[build/NutShell.fir.opt.mlir 19281:9]
      node _mstatus_mstatusOld_T_16 = bits(_mstatus_mstatusOld_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 19283:37]
      connect _mstatus_mstatusOld_WIRE.tvm, _mstatus_mstatusOld_T_16 @[build/NutShell.fir.opt.mlir 19284:9]
      node _mstatus_mstatusOld_T_17 = bits(_mstatus_mstatusOld_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 19286:37]
      connect _mstatus_mstatusOld_WIRE.tw, _mstatus_mstatusOld_T_17 @[build/NutShell.fir.opt.mlir 19287:9]
      node _mstatus_mstatusOld_T_18 = bits(_mstatus_mstatusOld_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 19289:37]
      connect _mstatus_mstatusOld_WIRE.tsr, _mstatus_mstatusOld_T_18 @[build/NutShell.fir.opt.mlir 19290:9]
      node _mstatus_mstatusOld_T_19 = bits(_mstatus_mstatusOld_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 19292:37]
      connect _mstatus_mstatusOld_WIRE.pad0, _mstatus_mstatusOld_T_19 @[build/NutShell.fir.opt.mlir 19293:9]
      node _mstatus_mstatusOld_T_20 = bits(_mstatus_mstatusOld_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 19295:37]
      connect _mstatus_mstatusOld_WIRE.uxl, _mstatus_mstatusOld_T_20 @[build/NutShell.fir.opt.mlir 19296:9]
      node _mstatus_mstatusOld_T_21 = bits(_mstatus_mstatusOld_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 19298:37]
      connect _mstatus_mstatusOld_WIRE.sxl, _mstatus_mstatusOld_T_21 @[build/NutShell.fir.opt.mlir 19299:9]
      node _mstatus_mstatusOld_T_22 = bits(_mstatus_mstatusOld_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 19301:37]
      connect _mstatus_mstatusOld_WIRE.pad1, _mstatus_mstatusOld_T_22 @[build/NutShell.fir.opt.mlir 19302:9]
      node _mstatus_mstatusOld_T_23 = bits(_mstatus_mstatusOld_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 19304:37]
      connect _mstatus_mstatusOld_WIRE.sd, _mstatus_mstatusOld_T_23 @[build/NutShell.fir.opt.mlir 19305:9]
      wire mstatus_mstatusOld : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19306:31]
      connect mstatus_mstatusOld, _mstatus_mstatusOld_WIRE @[build/NutShell.fir.opt.mlir 19308:9]
      node _mstatus_mstatusNew_T = eq(mstatus_mstatusOld.fs, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 19310:34]
      node _mstatus_mstatusNew_T_1 = bits(_mstatus_T_3, 62, 0) @[build/NutShell.fir.opt.mlir 19312:36]
      node mstatus_mstatusNew = cat(_mstatus_mstatusNew_T, _mstatus_mstatusNew_T_1) @[build/NutShell.fir.opt.mlir 19314:31]
      connect mstatus, mstatus_mstatusNew @[build/NutShell.fir.opt.mlir 19315:9]
    node _T_106 = eq(addr, UInt<12>(2877)) @[build/NutShell.fir.opt.mlir 19318:17]
    node _T_107 = and(_T_1, _T_106) @[build/NutShell.fir.opt.mlir 19320:17]
    when _T_107 : @[build/NutShell.fir.opt.mlir 19321:7]
      node _perfCnts_61_T = and(wdata, perfCntsLoMapping_61_2_2) @[build/NutShell.fir.opt.mlir 19323:27]
      node _perfCnts_61_T_1 = not(perfCntsLoMapping_61_2_2) @[build/NutShell.fir.opt.mlir 19325:29]
      node _perfCnts_61_T_2 = and(perfCnts_61, _perfCnts_61_T_1) @[build/NutShell.fir.opt.mlir 19327:29]
      node _perfCnts_61_T_3 = or(_perfCnts_61_T, _perfCnts_61_T_2) @[build/NutShell.fir.opt.mlir 19329:29]
      connect perfCnts_61, _perfCnts_61_T_3 @[build/NutShell.fir.opt.mlir 19330:9]
    node _T_108 = eq(addr, UInt<12>(2830)) @[build/NutShell.fir.opt.mlir 19333:17]
    node _T_109 = and(_T_1, _T_108) @[build/NutShell.fir.opt.mlir 19335:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 19336:7]
      node _perfCnts_14_T = and(wdata, perfCntsLoMapping_14_2_2) @[build/NutShell.fir.opt.mlir 19338:27]
      node _perfCnts_14_T_1 = not(perfCntsLoMapping_14_2_2) @[build/NutShell.fir.opt.mlir 19340:29]
      node _perfCnts_14_T_2 = and(perfCnts_14, _perfCnts_14_T_1) @[build/NutShell.fir.opt.mlir 19342:29]
      node _perfCnts_14_T_3 = or(_perfCnts_14_T, _perfCnts_14_T_2) @[build/NutShell.fir.opt.mlir 19344:29]
      connect perfCnts_14, _perfCnts_14_T_3 @[build/NutShell.fir.opt.mlir 19345:9]
    node _T_110 = eq(addr, UInt<12>(2868)) @[build/NutShell.fir.opt.mlir 19348:17]
    node _T_111 = and(_T_1, _T_110) @[build/NutShell.fir.opt.mlir 19350:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 19351:7]
      node _perfCnts_52_T = and(wdata, perfCntsLoMapping_52_2_2) @[build/NutShell.fir.opt.mlir 19353:27]
      node _perfCnts_52_T_1 = not(perfCntsLoMapping_52_2_2) @[build/NutShell.fir.opt.mlir 19355:29]
      node _perfCnts_52_T_2 = and(perfCnts_52, _perfCnts_52_T_1) @[build/NutShell.fir.opt.mlir 19357:29]
      node _perfCnts_52_T_3 = or(_perfCnts_52_T, _perfCnts_52_T_2) @[build/NutShell.fir.opt.mlir 19359:29]
      connect perfCnts_52, _perfCnts_52_T_3 @[build/NutShell.fir.opt.mlir 19360:9]
    node _T_112 = eq(addr, UInt<12>(2932)) @[build/NutShell.fir.opt.mlir 19363:17]
    node _T_113 = and(_T_1, _T_112) @[build/NutShell.fir.opt.mlir 19365:17]
    when _T_113 : @[build/NutShell.fir.opt.mlir 19366:7]
      node _perfCnts_116_T = and(wdata, perfCntsLoMapping_116_2_2) @[build/NutShell.fir.opt.mlir 19368:28]
      node _perfCnts_116_T_1 = not(perfCntsLoMapping_116_2_2) @[build/NutShell.fir.opt.mlir 19370:30]
      node _perfCnts_116_T_2 = and(perfCnts_116, _perfCnts_116_T_1) @[build/NutShell.fir.opt.mlir 19372:30]
      node _perfCnts_116_T_3 = or(_perfCnts_116_T, _perfCnts_116_T_2) @[build/NutShell.fir.opt.mlir 19374:30]
      connect perfCnts_116, _perfCnts_116_T_3 @[build/NutShell.fir.opt.mlir 19375:9]
    node _T_114 = eq(addr, UInt<12>(2836)) @[build/NutShell.fir.opt.mlir 19378:17]
    node _T_115 = and(_T_1, _T_114) @[build/NutShell.fir.opt.mlir 19380:17]
    when _T_115 : @[build/NutShell.fir.opt.mlir 19381:7]
      node _perfCnts_20_T = and(wdata, perfCntsLoMapping_20_2_2) @[build/NutShell.fir.opt.mlir 19383:27]
      node _perfCnts_20_T_1 = not(perfCntsLoMapping_20_2_2) @[build/NutShell.fir.opt.mlir 19385:29]
      node _perfCnts_20_T_2 = and(perfCnts_20, _perfCnts_20_T_1) @[build/NutShell.fir.opt.mlir 19387:29]
      node _perfCnts_20_T_3 = or(_perfCnts_20_T, _perfCnts_20_T_2) @[build/NutShell.fir.opt.mlir 19389:29]
      connect perfCnts_20, _perfCnts_20_T_3 @[build/NutShell.fir.opt.mlir 19390:9]
    node _T_116 = eq(addr, UInt<12>(2845)) @[build/NutShell.fir.opt.mlir 19393:17]
    node _T_117 = and(_T_1, _T_116) @[build/NutShell.fir.opt.mlir 19395:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 19396:7]
      node _perfCnts_29_T = and(wdata, perfCntsLoMapping_29_2_2) @[build/NutShell.fir.opt.mlir 19398:27]
      node _perfCnts_29_T_1 = not(perfCntsLoMapping_29_2_2) @[build/NutShell.fir.opt.mlir 19400:29]
      node _perfCnts_29_T_2 = and(perfCnts_29, _perfCnts_29_T_1) @[build/NutShell.fir.opt.mlir 19402:29]
      node _perfCnts_29_T_3 = or(_perfCnts_29_T, _perfCnts_29_T_2) @[build/NutShell.fir.opt.mlir 19404:29]
      connect perfCnts_29, _perfCnts_29_T_3 @[build/NutShell.fir.opt.mlir 19405:9]
    node _T_118 = eq(addr, UInt<12>(2900)) @[build/NutShell.fir.opt.mlir 19408:17]
    node _T_119 = and(_T_1, _T_118) @[build/NutShell.fir.opt.mlir 19410:17]
    when _T_119 : @[build/NutShell.fir.opt.mlir 19411:7]
      node _perfCnts_84_T = and(wdata, perfCntsLoMapping_84_2_2) @[build/NutShell.fir.opt.mlir 19413:27]
      node _perfCnts_84_T_1 = not(perfCntsLoMapping_84_2_2) @[build/NutShell.fir.opt.mlir 19415:29]
      node _perfCnts_84_T_2 = and(perfCnts_84, _perfCnts_84_T_1) @[build/NutShell.fir.opt.mlir 19417:29]
      node _perfCnts_84_T_3 = or(_perfCnts_84_T, _perfCnts_84_T_2) @[build/NutShell.fir.opt.mlir 19419:29]
      connect perfCnts_84, _perfCnts_84_T_3 @[build/NutShell.fir.opt.mlir 19420:9]
    node _T_120 = eq(addr, UInt<12>(2851)) @[build/NutShell.fir.opt.mlir 19423:17]
    node _T_121 = and(_T_1, _T_120) @[build/NutShell.fir.opt.mlir 19425:17]
    when _T_121 : @[build/NutShell.fir.opt.mlir 19426:7]
      node _perfCnts_35_T = and(wdata, perfCntsLoMapping_35_2_2) @[build/NutShell.fir.opt.mlir 19428:27]
      node _perfCnts_35_T_1 = not(perfCntsLoMapping_35_2_2) @[build/NutShell.fir.opt.mlir 19430:29]
      node _perfCnts_35_T_2 = and(perfCnts_35, _perfCnts_35_T_1) @[build/NutShell.fir.opt.mlir 19432:29]
      node _perfCnts_35_T_3 = or(_perfCnts_35_T, _perfCnts_35_T_2) @[build/NutShell.fir.opt.mlir 19434:29]
      connect perfCnts_35, _perfCnts_35_T_3 @[build/NutShell.fir.opt.mlir 19435:9]
    node _T_122 = eq(addr, UInt<12>(2862)) @[build/NutShell.fir.opt.mlir 19438:17]
    node _T_123 = and(_T_1, _T_122) @[build/NutShell.fir.opt.mlir 19440:17]
    when _T_123 : @[build/NutShell.fir.opt.mlir 19441:7]
      node _perfCnts_46_T = and(wdata, perfCntsLoMapping_46_2_2) @[build/NutShell.fir.opt.mlir 19443:27]
      node _perfCnts_46_T_1 = not(perfCntsLoMapping_46_2_2) @[build/NutShell.fir.opt.mlir 19445:29]
      node _perfCnts_46_T_2 = and(perfCnts_46, _perfCnts_46_T_1) @[build/NutShell.fir.opt.mlir 19447:29]
      node _perfCnts_46_T_3 = or(_perfCnts_46_T, _perfCnts_46_T_2) @[build/NutShell.fir.opt.mlir 19449:29]
      connect perfCnts_46, _perfCnts_46_T_3 @[build/NutShell.fir.opt.mlir 19450:9]
    node _T_124 = eq(addr, UInt<12>(2926)) @[build/NutShell.fir.opt.mlir 19453:17]
    node _T_125 = and(_T_1, _T_124) @[build/NutShell.fir.opt.mlir 19455:17]
    when _T_125 : @[build/NutShell.fir.opt.mlir 19456:7]
      node _perfCnts_110_T = and(wdata, perfCntsLoMapping_110_2_2) @[build/NutShell.fir.opt.mlir 19458:28]
      node _perfCnts_110_T_1 = not(perfCntsLoMapping_110_2_2) @[build/NutShell.fir.opt.mlir 19460:30]
      node _perfCnts_110_T_2 = and(perfCnts_110, _perfCnts_110_T_1) @[build/NutShell.fir.opt.mlir 19462:30]
      node _perfCnts_110_T_3 = or(_perfCnts_110_T, _perfCnts_110_T_2) @[build/NutShell.fir.opt.mlir 19464:30]
      connect perfCnts_110, _perfCnts_110_T_3 @[build/NutShell.fir.opt.mlir 19465:9]
    node _T_126 = eq(addr, UInt<12>(2883)) @[build/NutShell.fir.opt.mlir 19468:17]
    node _T_127 = and(_T_1, _T_126) @[build/NutShell.fir.opt.mlir 19470:17]
    when _T_127 : @[build/NutShell.fir.opt.mlir 19471:7]
      node _perfCnts_67_T = and(wdata, perfCntsLoMapping_67_2_2) @[build/NutShell.fir.opt.mlir 19473:27]
      node _perfCnts_67_T_1 = not(perfCntsLoMapping_67_2_2) @[build/NutShell.fir.opt.mlir 19475:29]
      node _perfCnts_67_T_2 = and(perfCnts_67, _perfCnts_67_T_1) @[build/NutShell.fir.opt.mlir 19477:29]
      node _perfCnts_67_T_3 = or(_perfCnts_67_T, _perfCnts_67_T_2) @[build/NutShell.fir.opt.mlir 19479:29]
      connect perfCnts_67, _perfCnts_67_T_3 @[build/NutShell.fir.opt.mlir 19480:9]
    node _T_128 = eq(addr, UInt<12>(2915)) @[build/NutShell.fir.opt.mlir 19483:17]
    node _T_129 = and(_T_1, _T_128) @[build/NutShell.fir.opt.mlir 19485:17]
    when _T_129 : @[build/NutShell.fir.opt.mlir 19486:7]
      node _perfCnts_99_T = and(wdata, perfCntsLoMapping_99_2_2) @[build/NutShell.fir.opt.mlir 19488:27]
      node _perfCnts_99_T_1 = not(perfCntsLoMapping_99_2_2) @[build/NutShell.fir.opt.mlir 19490:29]
      node _perfCnts_99_T_2 = and(perfCnts_99, _perfCnts_99_T_1) @[build/NutShell.fir.opt.mlir 19492:29]
      node _perfCnts_99_T_3 = or(_perfCnts_99_T, _perfCnts_99_T_2) @[build/NutShell.fir.opt.mlir 19494:29]
      connect perfCnts_99, _perfCnts_99_T_3 @[build/NutShell.fir.opt.mlir 19495:9]
    node _T_130 = eq(addr, UInt<10>(773)) @[build/NutShell.fir.opt.mlir 19498:17]
    node _T_131 = and(_T_1, _T_130) @[build/NutShell.fir.opt.mlir 19500:17]
    when _T_131 : @[build/NutShell.fir.opt.mlir 19501:7]
      node _mtvec_T = and(wdata, mapping_67_2_2) @[build/NutShell.fir.opt.mlir 19503:21]
      node _mtvec_T_1 = not(mapping_67_2_2) @[build/NutShell.fir.opt.mlir 19505:23]
      node _mtvec_T_2 = and(mtvec, _mtvec_T_1) @[build/NutShell.fir.opt.mlir 19507:23]
      node _mtvec_T_3 = or(_mtvec_T, _mtvec_T_2) @[build/NutShell.fir.opt.mlir 19509:23]
      connect mtvec, _mtvec_T_3 @[build/NutShell.fir.opt.mlir 19510:9]
    node _T_132 = eq(addr, UInt<12>(2909)) @[build/NutShell.fir.opt.mlir 19513:17]
    node _T_133 = and(_T_1, _T_132) @[build/NutShell.fir.opt.mlir 19515:17]
    when _T_133 : @[build/NutShell.fir.opt.mlir 19516:7]
      node _perfCnts_93_T = and(wdata, perfCntsLoMapping_93_2_2) @[build/NutShell.fir.opt.mlir 19518:27]
      node _perfCnts_93_T_1 = not(perfCntsLoMapping_93_2_2) @[build/NutShell.fir.opt.mlir 19520:29]
      node _perfCnts_93_T_2 = and(perfCnts_93, _perfCnts_93_T_1) @[build/NutShell.fir.opt.mlir 19522:29]
      node _perfCnts_93_T_3 = or(_perfCnts_93_T, _perfCnts_93_T_2) @[build/NutShell.fir.opt.mlir 19524:29]
      connect perfCnts_93, _perfCnts_93_T_3 @[build/NutShell.fir.opt.mlir 19525:9]
    node _T_134 = eq(addr, UInt<12>(2936)) @[build/NutShell.fir.opt.mlir 19528:17]
    node _T_135 = and(_T_1, _T_134) @[build/NutShell.fir.opt.mlir 19530:17]
    when _T_135 : @[build/NutShell.fir.opt.mlir 19531:7]
      node _perfCnts_120_T = and(wdata, perfCntsLoMapping_120_2_2) @[build/NutShell.fir.opt.mlir 19533:28]
      node _perfCnts_120_T_1 = not(perfCntsLoMapping_120_2_2) @[build/NutShell.fir.opt.mlir 19535:30]
      node _perfCnts_120_T_2 = and(perfCnts_120, _perfCnts_120_T_1) @[build/NutShell.fir.opt.mlir 19537:30]
      node _perfCnts_120_T_3 = or(_perfCnts_120_T, _perfCnts_120_T_2) @[build/NutShell.fir.opt.mlir 19539:30]
      connect perfCnts_120, _perfCnts_120_T_3 @[build/NutShell.fir.opt.mlir 19540:9]
    node _T_136 = eq(addr, UInt<12>(2904)) @[build/NutShell.fir.opt.mlir 19543:17]
    node _T_137 = and(_T_1, _T_136) @[build/NutShell.fir.opt.mlir 19545:17]
    when _T_137 : @[build/NutShell.fir.opt.mlir 19546:7]
      node _perfCnts_88_T = and(wdata, perfCntsLoMapping_88_2_2) @[build/NutShell.fir.opt.mlir 19548:27]
      node _perfCnts_88_T_1 = not(perfCntsLoMapping_88_2_2) @[build/NutShell.fir.opt.mlir 19550:29]
      node _perfCnts_88_T_2 = and(perfCnts_88, _perfCnts_88_T_1) @[build/NutShell.fir.opt.mlir 19552:29]
      node _perfCnts_88_T_3 = or(_perfCnts_88_T, _perfCnts_88_T_2) @[build/NutShell.fir.opt.mlir 19554:29]
      connect perfCnts_88, _perfCnts_88_T_3 @[build/NutShell.fir.opt.mlir 19555:9]
    node _T_138 = eq(addr, UInt<12>(2941)) @[build/NutShell.fir.opt.mlir 19558:17]
    node _T_139 = and(_T_1, _T_138) @[build/NutShell.fir.opt.mlir 19560:17]
    when _T_139 : @[build/NutShell.fir.opt.mlir 19561:7]
      node _perfCnts_125_T = and(wdata, perfCntsLoMapping_125_2_2) @[build/NutShell.fir.opt.mlir 19563:28]
      node _perfCnts_125_T_1 = not(perfCntsLoMapping_125_2_2) @[build/NutShell.fir.opt.mlir 19565:30]
      node _perfCnts_125_T_2 = and(perfCnts_125, _perfCnts_125_T_1) @[build/NutShell.fir.opt.mlir 19567:30]
      node _perfCnts_125_T_3 = or(_perfCnts_125_T, _perfCnts_125_T_2) @[build/NutShell.fir.opt.mlir 19569:30]
      connect perfCnts_125, _perfCnts_125_T_3 @[build/NutShell.fir.opt.mlir 19570:9]
    node _T_140 = eq(addr, UInt<12>(2894)) @[build/NutShell.fir.opt.mlir 19573:17]
    node _T_141 = and(_T_1, _T_140) @[build/NutShell.fir.opt.mlir 19575:17]
    when _T_141 : @[build/NutShell.fir.opt.mlir 19576:7]
      node _perfCnts_78_T = and(wdata, perfCntsLoMapping_78_2_2) @[build/NutShell.fir.opt.mlir 19578:27]
      node _perfCnts_78_T_1 = not(perfCntsLoMapping_78_2_2) @[build/NutShell.fir.opt.mlir 19580:29]
      node _perfCnts_78_T_2 = and(perfCnts_78, _perfCnts_78_T_1) @[build/NutShell.fir.opt.mlir 19582:29]
      node _perfCnts_78_T_3 = or(_perfCnts_78_T, _perfCnts_78_T_2) @[build/NutShell.fir.opt.mlir 19584:29]
      connect perfCnts_78, _perfCnts_78_T_3 @[build/NutShell.fir.opt.mlir 19585:9]
    node _T_142 = eq(addr, UInt<12>(2849)) @[build/NutShell.fir.opt.mlir 19588:17]
    node _T_143 = and(_T_1, _T_142) @[build/NutShell.fir.opt.mlir 19590:17]
    when _T_143 : @[build/NutShell.fir.opt.mlir 19591:7]
      node _perfCnts_33_T = and(wdata, perfCntsLoMapping_33_2_2) @[build/NutShell.fir.opt.mlir 19593:27]
      node _perfCnts_33_T_1 = not(perfCntsLoMapping_33_2_2) @[build/NutShell.fir.opt.mlir 19595:29]
      node _perfCnts_33_T_2 = and(perfCnts_33, _perfCnts_33_T_1) @[build/NutShell.fir.opt.mlir 19597:29]
      node _perfCnts_33_T_3 = or(_perfCnts_33_T, _perfCnts_33_T_2) @[build/NutShell.fir.opt.mlir 19599:29]
      connect perfCnts_33, _perfCnts_33_T_3 @[build/NutShell.fir.opt.mlir 19600:9]
    node _T_144 = eq(addr, UInt<10>(772)) @[build/NutShell.fir.opt.mlir 19603:17]
    node _T_145 = and(_T_1, _T_144) @[build/NutShell.fir.opt.mlir 19605:17]
    when _T_145 : @[build/NutShell.fir.opt.mlir 19606:7]
      node _mie_T_4 = and(wdata, mapping_74_2_2) @[build/NutShell.fir.opt.mlir 19608:21]
      node _mie_T_5 = not(mapping_74_2_2) @[build/NutShell.fir.opt.mlir 19610:21]
      node _mie_T_6 = and(mie, _mie_T_5) @[build/NutShell.fir.opt.mlir 19612:21]
      node _mie_T_7 = or(_mie_T_4, _mie_T_6) @[build/NutShell.fir.opt.mlir 19614:21]
      connect mie, _mie_T_7 @[build/NutShell.fir.opt.mlir 19615:9]
    node _T_146 = eq(addr, UInt<12>(2817)) @[build/NutShell.fir.opt.mlir 19618:17]
    node _T_147 = and(_T_1, _T_146) @[build/NutShell.fir.opt.mlir 19620:17]
    when _T_147 : @[build/NutShell.fir.opt.mlir 19621:7]
      node _perfCnts_1_T = and(wdata, perfCntsLoMapping_1_2_2) @[build/NutShell.fir.opt.mlir 19623:26]
      node _perfCnts_1_T_1 = not(perfCntsLoMapping_1_2_2) @[build/NutShell.fir.opt.mlir 19625:28]
      node _perfCnts_1_T_2 = and(perfCnts_1, _perfCnts_1_T_1) @[build/NutShell.fir.opt.mlir 19627:28]
      node _perfCnts_1_T_3 = or(_perfCnts_1_T, _perfCnts_1_T_2) @[build/NutShell.fir.opt.mlir 19629:28]
      connect perfCnts_1, _perfCnts_1_T_3 @[build/NutShell.fir.opt.mlir 19630:9]
    node _T_148 = eq(addr, UInt<12>(2827)) @[build/NutShell.fir.opt.mlir 19633:17]
    node _T_149 = and(_T_1, _T_148) @[build/NutShell.fir.opt.mlir 19635:17]
    when _T_149 : @[build/NutShell.fir.opt.mlir 19636:7]
      node _perfCnts_11_T = and(wdata, perfCntsLoMapping_11_2_2) @[build/NutShell.fir.opt.mlir 19638:27]
      node _perfCnts_11_T_1 = not(perfCntsLoMapping_11_2_2) @[build/NutShell.fir.opt.mlir 19640:29]
      node _perfCnts_11_T_2 = and(perfCnts_11, _perfCnts_11_T_1) @[build/NutShell.fir.opt.mlir 19642:29]
      node _perfCnts_11_T_3 = or(_perfCnts_11_T, _perfCnts_11_T_2) @[build/NutShell.fir.opt.mlir 19644:29]
      connect perfCnts_11, _perfCnts_11_T_3 @[build/NutShell.fir.opt.mlir 19645:9]
    node _T_150 = eq(addr, UInt<12>(2859)) @[build/NutShell.fir.opt.mlir 19648:17]
    node _T_151 = and(_T_1, _T_150) @[build/NutShell.fir.opt.mlir 19650:17]
    when _T_151 : @[build/NutShell.fir.opt.mlir 19651:7]
      node _perfCnts_43_T = and(wdata, perfCntsLoMapping_43_2_2) @[build/NutShell.fir.opt.mlir 19653:27]
      node _perfCnts_43_T_1 = not(perfCntsLoMapping_43_2_2) @[build/NutShell.fir.opt.mlir 19655:29]
      node _perfCnts_43_T_2 = and(perfCnts_43, _perfCnts_43_T_1) @[build/NutShell.fir.opt.mlir 19657:29]
      node _perfCnts_43_T_3 = or(_perfCnts_43_T, _perfCnts_43_T_2) @[build/NutShell.fir.opt.mlir 19659:29]
      connect perfCnts_43, _perfCnts_43_T_3 @[build/NutShell.fir.opt.mlir 19660:9]
    node _T_152 = eq(addr, UInt<12>(2938)) @[build/NutShell.fir.opt.mlir 19663:17]
    node _T_153 = and(_T_1, _T_152) @[build/NutShell.fir.opt.mlir 19665:17]
    when _T_153 : @[build/NutShell.fir.opt.mlir 19666:7]
      node _perfCnts_122_T = and(wdata, perfCntsLoMapping_122_2_2) @[build/NutShell.fir.opt.mlir 19668:28]
      node _perfCnts_122_T_1 = not(perfCntsLoMapping_122_2_2) @[build/NutShell.fir.opt.mlir 19670:30]
      node _perfCnts_122_T_2 = and(perfCnts_122, _perfCnts_122_T_1) @[build/NutShell.fir.opt.mlir 19672:30]
      node _perfCnts_122_T_3 = or(_perfCnts_122_T, _perfCnts_122_T_2) @[build/NutShell.fir.opt.mlir 19674:30]
      connect perfCnts_122, _perfCnts_122_T_3 @[build/NutShell.fir.opt.mlir 19675:9]
    node _T_154 = eq(addr, UInt<12>(2891)) @[build/NutShell.fir.opt.mlir 19678:17]
    node _T_155 = and(_T_1, _T_154) @[build/NutShell.fir.opt.mlir 19680:17]
    when _T_155 : @[build/NutShell.fir.opt.mlir 19681:7]
      node _perfCnts_75_T = and(wdata, perfCntsLoMapping_75_2_2) @[build/NutShell.fir.opt.mlir 19683:27]
      node _perfCnts_75_T_1 = not(perfCntsLoMapping_75_2_2) @[build/NutShell.fir.opt.mlir 19685:29]
      node _perfCnts_75_T_2 = and(perfCnts_75, _perfCnts_75_T_1) @[build/NutShell.fir.opt.mlir 19687:29]
      node _perfCnts_75_T_3 = or(_perfCnts_75_T, _perfCnts_75_T_2) @[build/NutShell.fir.opt.mlir 19689:29]
      connect perfCnts_75, _perfCnts_75_T_3 @[build/NutShell.fir.opt.mlir 19690:9]
    node _T_156 = eq(addr, UInt<12>(2935)) @[build/NutShell.fir.opt.mlir 19693:17]
    node _T_157 = and(_T_1, _T_156) @[build/NutShell.fir.opt.mlir 19695:17]
    when _T_157 : @[build/NutShell.fir.opt.mlir 19696:7]
      node _perfCnts_119_T = and(wdata, perfCntsLoMapping_119_2_2) @[build/NutShell.fir.opt.mlir 19698:28]
      node _perfCnts_119_T_1 = not(perfCntsLoMapping_119_2_2) @[build/NutShell.fir.opt.mlir 19700:30]
      node _perfCnts_119_T_2 = and(perfCnts_119, _perfCnts_119_T_1) @[build/NutShell.fir.opt.mlir 19702:30]
      node _perfCnts_119_T_3 = or(_perfCnts_119_T, _perfCnts_119_T_2) @[build/NutShell.fir.opt.mlir 19704:30]
      connect perfCnts_119, _perfCnts_119_T_3 @[build/NutShell.fir.opt.mlir 19705:9]
    node _T_158 = eq(addr, UInt<10>(947)) @[build/NutShell.fir.opt.mlir 19708:17]
    node _T_159 = and(_T_1, _T_158) @[build/NutShell.fir.opt.mlir 19710:17]
    when _T_159 : @[build/NutShell.fir.opt.mlir 19711:7]
      node _pmpaddr3_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 19713:24]
      node _pmpaddr3_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 19715:26]
      node _pmpaddr3_T_2 = and(pmpaddr3, _pmpaddr3_T_1) @[build/NutShell.fir.opt.mlir 19717:26]
      node _pmpaddr3_T_3 = or(_pmpaddr3_T, _pmpaddr3_T_2) @[build/NutShell.fir.opt.mlir 19719:26]
      connect pmpaddr3, _pmpaddr3_T_3 @[build/NutShell.fir.opt.mlir 19720:9]
    node _T_160 = eq(addr, UInt<12>(2906)) @[build/NutShell.fir.opt.mlir 19723:17]
    node _T_161 = and(_T_1, _T_160) @[build/NutShell.fir.opt.mlir 19725:17]
    when _T_161 : @[build/NutShell.fir.opt.mlir 19726:7]
      node _perfCnts_90_T = and(wdata, perfCntsLoMapping_90_2_2) @[build/NutShell.fir.opt.mlir 19728:27]
      node _perfCnts_90_T_1 = not(perfCntsLoMapping_90_2_2) @[build/NutShell.fir.opt.mlir 19730:29]
      node _perfCnts_90_T_2 = and(perfCnts_90, _perfCnts_90_T_1) @[build/NutShell.fir.opt.mlir 19732:29]
      node _perfCnts_90_T_3 = or(_perfCnts_90_T, _perfCnts_90_T_2) @[build/NutShell.fir.opt.mlir 19734:29]
      connect perfCnts_90, _perfCnts_90_T_3 @[build/NutShell.fir.opt.mlir 19735:9]
    node _T_162 = eq(addr, UInt<12>(2839)) @[build/NutShell.fir.opt.mlir 19738:17]
    node _T_163 = and(_T_1, _T_162) @[build/NutShell.fir.opt.mlir 19740:17]
    when _T_163 : @[build/NutShell.fir.opt.mlir 19741:7]
      node _perfCnts_23_T = and(wdata, perfCntsLoMapping_23_2_2) @[build/NutShell.fir.opt.mlir 19743:27]
      node _perfCnts_23_T_1 = not(perfCntsLoMapping_23_2_2) @[build/NutShell.fir.opt.mlir 19745:29]
      node _perfCnts_23_T_2 = and(perfCnts_23, _perfCnts_23_T_1) @[build/NutShell.fir.opt.mlir 19747:29]
      node _perfCnts_23_T_3 = or(_perfCnts_23_T, _perfCnts_23_T_2) @[build/NutShell.fir.opt.mlir 19749:29]
      connect perfCnts_23, _perfCnts_23_T_3 @[build/NutShell.fir.opt.mlir 19750:9]
    node _T_164 = eq(addr, UInt<12>(2943)) @[build/NutShell.fir.opt.mlir 19753:17]
    node _T_165 = and(_T_1, _T_164) @[build/NutShell.fir.opt.mlir 19755:17]
    when _T_165 : @[build/NutShell.fir.opt.mlir 19756:7]
      node _perfCnts_127_T = and(wdata, perfCntsLoMapping_127_2_2) @[build/NutShell.fir.opt.mlir 19758:28]
      node _perfCnts_127_T_1 = not(perfCntsLoMapping_127_2_2) @[build/NutShell.fir.opt.mlir 19760:30]
      node _perfCnts_127_T_2 = and(perfCnts_127, _perfCnts_127_T_1) @[build/NutShell.fir.opt.mlir 19762:30]
      node _perfCnts_127_T_3 = or(_perfCnts_127_T, _perfCnts_127_T_2) @[build/NutShell.fir.opt.mlir 19764:30]
      connect perfCnts_127, _perfCnts_127_T_3 @[build/NutShell.fir.opt.mlir 19765:9]
    node _T_166 = eq(addr, UInt<12>(2856)) @[build/NutShell.fir.opt.mlir 19768:17]
    node _T_167 = and(_T_1, _T_166) @[build/NutShell.fir.opt.mlir 19770:17]
    when _T_167 : @[build/NutShell.fir.opt.mlir 19771:7]
      node _perfCnts_40_T = and(wdata, perfCntsLoMapping_40_2_2) @[build/NutShell.fir.opt.mlir 19773:27]
      node _perfCnts_40_T_1 = not(perfCntsLoMapping_40_2_2) @[build/NutShell.fir.opt.mlir 19775:29]
      node _perfCnts_40_T_2 = and(perfCnts_40, _perfCnts_40_T_1) @[build/NutShell.fir.opt.mlir 19777:29]
      node _perfCnts_40_T_3 = or(_perfCnts_40_T, _perfCnts_40_T_2) @[build/NutShell.fir.opt.mlir 19779:29]
      connect perfCnts_40, _perfCnts_40_T_3 @[build/NutShell.fir.opt.mlir 19780:9]
    node _T_168 = eq(addr, UInt<12>(2896)) @[build/NutShell.fir.opt.mlir 19783:17]
    node _T_169 = and(_T_1, _T_168) @[build/NutShell.fir.opt.mlir 19785:17]
    when _T_169 : @[build/NutShell.fir.opt.mlir 19786:7]
      node _perfCnts_80_T = and(wdata, perfCntsLoMapping_80_2_2) @[build/NutShell.fir.opt.mlir 19788:27]
      node _perfCnts_80_T_1 = not(perfCntsLoMapping_80_2_2) @[build/NutShell.fir.opt.mlir 19790:29]
      node _perfCnts_80_T_2 = and(perfCnts_80, _perfCnts_80_T_1) @[build/NutShell.fir.opt.mlir 19792:29]
      node _perfCnts_80_T_3 = or(_perfCnts_80_T, _perfCnts_80_T_2) @[build/NutShell.fir.opt.mlir 19794:29]
      connect perfCnts_80, _perfCnts_80_T_3 @[build/NutShell.fir.opt.mlir 19795:9]
    node _T_170 = eq(addr, UInt<12>(2871)) @[build/NutShell.fir.opt.mlir 19798:17]
    node _T_171 = and(_T_1, _T_170) @[build/NutShell.fir.opt.mlir 19800:17]
    when _T_171 : @[build/NutShell.fir.opt.mlir 19801:7]
      node _perfCnts_55_T = and(wdata, perfCntsLoMapping_55_2_2) @[build/NutShell.fir.opt.mlir 19803:27]
      node _perfCnts_55_T_1 = not(perfCntsLoMapping_55_2_2) @[build/NutShell.fir.opt.mlir 19805:29]
      node _perfCnts_55_T_2 = and(perfCnts_55, _perfCnts_55_T_1) @[build/NutShell.fir.opt.mlir 19807:29]
      node _perfCnts_55_T_3 = or(_perfCnts_55_T, _perfCnts_55_T_2) @[build/NutShell.fir.opt.mlir 19809:29]
      connect perfCnts_55, _perfCnts_55_T_3 @[build/NutShell.fir.opt.mlir 19810:9]
    node _T_172 = eq(addr, UInt<12>(2824)) @[build/NutShell.fir.opt.mlir 19813:17]
    node _T_173 = and(_T_1, _T_172) @[build/NutShell.fir.opt.mlir 19815:17]
    when _T_173 : @[build/NutShell.fir.opt.mlir 19816:7]
      node _perfCnts_8_T = and(wdata, perfCntsLoMapping_8_2_2) @[build/NutShell.fir.opt.mlir 19818:26]
      node _perfCnts_8_T_1 = not(perfCntsLoMapping_8_2_2) @[build/NutShell.fir.opt.mlir 19820:28]
      node _perfCnts_8_T_2 = and(perfCnts_8, _perfCnts_8_T_1) @[build/NutShell.fir.opt.mlir 19822:28]
      node _perfCnts_8_T_3 = or(_perfCnts_8_T, _perfCnts_8_T_2) @[build/NutShell.fir.opt.mlir 19824:28]
      connect perfCnts_8, _perfCnts_8_T_3 @[build/NutShell.fir.opt.mlir 19825:9]
    node _T_174 = eq(addr, UInt<9>(323)) @[build/NutShell.fir.opt.mlir 19828:17]
    node _T_175 = and(_T_1, _T_174) @[build/NutShell.fir.opt.mlir 19830:17]
    when _T_175 : @[build/NutShell.fir.opt.mlir 19831:7]
      node _stval_T = and(wdata, mapping_89_2_2) @[build/NutShell.fir.opt.mlir 19833:21]
      node _stval_T_1 = not(mapping_89_2_2) @[build/NutShell.fir.opt.mlir 19835:23]
      node _stval_T_2 = and(stval, _stval_T_1) @[build/NutShell.fir.opt.mlir 19837:23]
      node _stval_T_3 = or(_stval_T, _stval_T_2) @[build/NutShell.fir.opt.mlir 19839:23]
      connect stval, _stval_T_3 @[build/NutShell.fir.opt.mlir 19840:9]
    node _T_176 = eq(addr, UInt<12>(2923)) @[build/NutShell.fir.opt.mlir 19843:17]
    node _T_177 = and(_T_1, _T_176) @[build/NutShell.fir.opt.mlir 19845:17]
    when _T_177 : @[build/NutShell.fir.opt.mlir 19846:7]
      node _perfCnts_107_T = and(wdata, perfCntsLoMapping_107_2_2) @[build/NutShell.fir.opt.mlir 19848:28]
      node _perfCnts_107_T_1 = not(perfCntsLoMapping_107_2_2) @[build/NutShell.fir.opt.mlir 19850:30]
      node _perfCnts_107_T_2 = and(perfCnts_107, _perfCnts_107_T_1) @[build/NutShell.fir.opt.mlir 19852:30]
      node _perfCnts_107_T_3 = or(_perfCnts_107_T, _perfCnts_107_T_2) @[build/NutShell.fir.opt.mlir 19854:30]
      connect perfCnts_107, _perfCnts_107_T_3 @[build/NutShell.fir.opt.mlir 19855:9]
    node _T_178 = eq(addr, UInt<12>(2874)) @[build/NutShell.fir.opt.mlir 19858:17]
    node _T_179 = and(_T_1, _T_178) @[build/NutShell.fir.opt.mlir 19860:17]
    when _T_179 : @[build/NutShell.fir.opt.mlir 19861:7]
      node _perfCnts_58_T = and(wdata, perfCntsLoMapping_58_2_2) @[build/NutShell.fir.opt.mlir 19863:27]
      node _perfCnts_58_T_1 = not(perfCntsLoMapping_58_2_2) @[build/NutShell.fir.opt.mlir 19865:29]
      node _perfCnts_58_T_2 = and(perfCnts_58, _perfCnts_58_T_1) @[build/NutShell.fir.opt.mlir 19867:29]
      node _perfCnts_58_T_3 = or(_perfCnts_58_T, _perfCnts_58_T_2) @[build/NutShell.fir.opt.mlir 19869:29]
      connect perfCnts_58, _perfCnts_58_T_3 @[build/NutShell.fir.opt.mlir 19870:9]
    node _T_180 = eq(addr, UInt<10>(769)) @[build/NutShell.fir.opt.mlir 19873:17]
    node _T_181 = and(_T_1, _T_180) @[build/NutShell.fir.opt.mlir 19875:17]
    when _T_181 : @[build/NutShell.fir.opt.mlir 19876:7]
      node _misa_T = and(wdata, mapping_92_2_2) @[build/NutShell.fir.opt.mlir 19878:20]
      node _misa_T_1 = not(mapping_92_2_2) @[build/NutShell.fir.opt.mlir 19880:22]
      node _misa_T_2 = and(misa, _misa_T_1) @[build/NutShell.fir.opt.mlir 19882:22]
      node _misa_T_3 = or(_misa_T, _misa_T_2) @[build/NutShell.fir.opt.mlir 19884:22]
      connect misa, _misa_T_3 @[build/NutShell.fir.opt.mlir 19885:9]
    node _T_182 = eq(addr, UInt<12>(2928)) @[build/NutShell.fir.opt.mlir 19888:17]
    node _T_183 = and(_T_1, _T_182) @[build/NutShell.fir.opt.mlir 19890:17]
    when _T_183 : @[build/NutShell.fir.opt.mlir 19891:7]
      node _perfCnts_112_T = and(wdata, perfCntsLoMapping_112_2_2) @[build/NutShell.fir.opt.mlir 19893:28]
      node _perfCnts_112_T_1 = not(perfCntsLoMapping_112_2_2) @[build/NutShell.fir.opt.mlir 19895:30]
      node _perfCnts_112_T_2 = and(perfCnts_112, _perfCnts_112_T_1) @[build/NutShell.fir.opt.mlir 19897:30]
      node _perfCnts_112_T_3 = or(_perfCnts_112_T, _perfCnts_112_T_2) @[build/NutShell.fir.opt.mlir 19899:30]
      connect perfCnts_112, _perfCnts_112_T_3 @[build/NutShell.fir.opt.mlir 19900:9]
    node _T_184 = eq(addr, UInt<12>(2842)) @[build/NutShell.fir.opt.mlir 19903:17]
    node _T_185 = and(_T_1, _T_184) @[build/NutShell.fir.opt.mlir 19905:17]
    when _T_185 : @[build/NutShell.fir.opt.mlir 19906:7]
      node _perfCnts_26_T = and(wdata, perfCntsLoMapping_26_2_2) @[build/NutShell.fir.opt.mlir 19908:27]
      node _perfCnts_26_T_1 = not(perfCntsLoMapping_26_2_2) @[build/NutShell.fir.opt.mlir 19910:29]
      node _perfCnts_26_T_2 = and(perfCnts_26, _perfCnts_26_T_1) @[build/NutShell.fir.opt.mlir 19912:29]
      node _perfCnts_26_T_3 = or(_perfCnts_26_T, _perfCnts_26_T_2) @[build/NutShell.fir.opt.mlir 19914:29]
      connect perfCnts_26, _perfCnts_26_T_3 @[build/NutShell.fir.opt.mlir 19915:9]
    node _T_186 = eq(addr, UInt<12>(2911)) @[build/NutShell.fir.opt.mlir 19918:17]
    node _T_187 = and(_T_1, _T_186) @[build/NutShell.fir.opt.mlir 19920:17]
    when _T_187 : @[build/NutShell.fir.opt.mlir 19921:7]
      node _perfCnts_95_T = and(wdata, perfCntsLoMapping_95_2_2) @[build/NutShell.fir.opt.mlir 19923:27]
      node _perfCnts_95_T_1 = not(perfCntsLoMapping_95_2_2) @[build/NutShell.fir.opt.mlir 19925:29]
      node _perfCnts_95_T_2 = and(perfCnts_95, _perfCnts_95_T_1) @[build/NutShell.fir.opt.mlir 19927:29]
      node _perfCnts_95_T_3 = or(_perfCnts_95_T, _perfCnts_95_T_2) @[build/NutShell.fir.opt.mlir 19929:29]
      connect perfCnts_95, _perfCnts_95_T_3 @[build/NutShell.fir.opt.mlir 19930:9]
    node _T_188 = eq(addr, UInt<12>(2931)) @[build/NutShell.fir.opt.mlir 19933:17]
    node _T_189 = and(_T_1, _T_188) @[build/NutShell.fir.opt.mlir 19935:17]
    when _T_189 : @[build/NutShell.fir.opt.mlir 19936:7]
      node _perfCnts_115_T = and(wdata, perfCntsLoMapping_115_2_2) @[build/NutShell.fir.opt.mlir 19938:28]
      node _perfCnts_115_T_1 = not(perfCntsLoMapping_115_2_2) @[build/NutShell.fir.opt.mlir 19940:30]
      node _perfCnts_115_T_2 = and(perfCnts_115, _perfCnts_115_T_1) @[build/NutShell.fir.opt.mlir 19942:30]
      node _perfCnts_115_T_3 = or(_perfCnts_115_T, _perfCnts_115_T_2) @[build/NutShell.fir.opt.mlir 19944:30]
      connect perfCnts_115, _perfCnts_115_T_3 @[build/NutShell.fir.opt.mlir 19945:9]
    node _T_190 = eq(addr, UInt<12>(2867)) @[build/NutShell.fir.opt.mlir 19948:17]
    node _T_191 = and(_T_1, _T_190) @[build/NutShell.fir.opt.mlir 19950:17]
    when _T_191 : @[build/NutShell.fir.opt.mlir 19951:7]
      node _perfCnts_51_T = and(wdata, perfCntsLoMapping_51_2_2) @[build/NutShell.fir.opt.mlir 19953:27]
      node _perfCnts_51_T_1 = not(perfCntsLoMapping_51_2_2) @[build/NutShell.fir.opt.mlir 19955:29]
      node _perfCnts_51_T_2 = and(perfCnts_51, _perfCnts_51_T_1) @[build/NutShell.fir.opt.mlir 19957:29]
      node _perfCnts_51_T_3 = or(_perfCnts_51_T, _perfCnts_51_T_2) @[build/NutShell.fir.opt.mlir 19959:29]
      connect perfCnts_51, _perfCnts_51_T_3 @[build/NutShell.fir.opt.mlir 19960:9]
    node _T_192 = eq(addr, UInt<10>(768)) @[build/NutShell.fir.opt.mlir 19963:17]
    node _T_193 = and(_T_1, _T_192) @[build/NutShell.fir.opt.mlir 19965:17]
    when _T_193 : @[build/NutShell.fir.opt.mlir 19966:7]
      node _mstatus_T_4 = and(wdata, mstatusWMask) @[build/NutShell.fir.opt.mlir 19968:25]
      node _mstatus_T_5 = not(mstatusWMask) @[build/NutShell.fir.opt.mlir 19970:25]
      node _mstatus_T_6 = and(mstatus, _mstatus_T_5) @[build/NutShell.fir.opt.mlir 19972:25]
      node _mstatus_T_7 = or(_mstatus_T_4, _mstatus_T_6) @[build/NutShell.fir.opt.mlir 19974:25]
      wire _mstatus_mstatusOld_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 19975:39]
      wire _mstatus_mstatusOld_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 20002:39]
      connect _mstatus_mstatusOld_WIRE_3, _mstatus_T_7 @[build/NutShell.fir.opt.mlir 20003:9]
      node _mstatus_mstatusOld_T_24 = bits(_mstatus_mstatusOld_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 20005:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.u, _mstatus_mstatusOld_T_24 @[build/NutShell.fir.opt.mlir 20006:9]
      node _mstatus_mstatusOld_T_25 = bits(_mstatus_mstatusOld_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 20008:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.s, _mstatus_mstatusOld_T_25 @[build/NutShell.fir.opt.mlir 20009:9]
      node _mstatus_mstatusOld_T_26 = bits(_mstatus_mstatusOld_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 20011:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.h, _mstatus_mstatusOld_T_26 @[build/NutShell.fir.opt.mlir 20012:9]
      node _mstatus_mstatusOld_T_27 = bits(_mstatus_mstatusOld_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 20014:37]
      connect _mstatus_mstatusOld_WIRE_2.ie.m, _mstatus_mstatusOld_T_27 @[build/NutShell.fir.opt.mlir 20015:9]
      node _mstatus_mstatusOld_T_28 = bits(_mstatus_mstatusOld_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 20017:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.u, _mstatus_mstatusOld_T_28 @[build/NutShell.fir.opt.mlir 20018:9]
      node _mstatus_mstatusOld_T_29 = bits(_mstatus_mstatusOld_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 20020:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.s, _mstatus_mstatusOld_T_29 @[build/NutShell.fir.opt.mlir 20021:9]
      node _mstatus_mstatusOld_T_30 = bits(_mstatus_mstatusOld_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 20023:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.h, _mstatus_mstatusOld_T_30 @[build/NutShell.fir.opt.mlir 20024:9]
      node _mstatus_mstatusOld_T_31 = bits(_mstatus_mstatusOld_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 20026:37]
      connect _mstatus_mstatusOld_WIRE_2.pie.m, _mstatus_mstatusOld_T_31 @[build/NutShell.fir.opt.mlir 20027:9]
      node _mstatus_mstatusOld_T_32 = bits(_mstatus_mstatusOld_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 20029:37]
      connect _mstatus_mstatusOld_WIRE_2.spp, _mstatus_mstatusOld_T_32 @[build/NutShell.fir.opt.mlir 20030:9]
      node _mstatus_mstatusOld_T_33 = bits(_mstatus_mstatusOld_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 20032:37]
      connect _mstatus_mstatusOld_WIRE_2.hpp, _mstatus_mstatusOld_T_33 @[build/NutShell.fir.opt.mlir 20033:9]
      node _mstatus_mstatusOld_T_34 = bits(_mstatus_mstatusOld_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 20035:37]
      connect _mstatus_mstatusOld_WIRE_2.mpp, _mstatus_mstatusOld_T_34 @[build/NutShell.fir.opt.mlir 20036:9]
      node _mstatus_mstatusOld_T_35 = bits(_mstatus_mstatusOld_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 20038:37]
      connect _mstatus_mstatusOld_WIRE_2.fs, _mstatus_mstatusOld_T_35 @[build/NutShell.fir.opt.mlir 20039:9]
      node _mstatus_mstatusOld_T_36 = bits(_mstatus_mstatusOld_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 20041:37]
      connect _mstatus_mstatusOld_WIRE_2.xs, _mstatus_mstatusOld_T_36 @[build/NutShell.fir.opt.mlir 20042:9]
      node _mstatus_mstatusOld_T_37 = bits(_mstatus_mstatusOld_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 20044:37]
      connect _mstatus_mstatusOld_WIRE_2.mprv, _mstatus_mstatusOld_T_37 @[build/NutShell.fir.opt.mlir 20045:9]
      node _mstatus_mstatusOld_T_38 = bits(_mstatus_mstatusOld_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 20047:37]
      connect _mstatus_mstatusOld_WIRE_2.sum, _mstatus_mstatusOld_T_38 @[build/NutShell.fir.opt.mlir 20048:9]
      node _mstatus_mstatusOld_T_39 = bits(_mstatus_mstatusOld_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 20050:37]
      connect _mstatus_mstatusOld_WIRE_2.mxr, _mstatus_mstatusOld_T_39 @[build/NutShell.fir.opt.mlir 20051:9]
      node _mstatus_mstatusOld_T_40 = bits(_mstatus_mstatusOld_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 20053:37]
      connect _mstatus_mstatusOld_WIRE_2.tvm, _mstatus_mstatusOld_T_40 @[build/NutShell.fir.opt.mlir 20054:9]
      node _mstatus_mstatusOld_T_41 = bits(_mstatus_mstatusOld_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 20056:37]
      connect _mstatus_mstatusOld_WIRE_2.tw, _mstatus_mstatusOld_T_41 @[build/NutShell.fir.opt.mlir 20057:9]
      node _mstatus_mstatusOld_T_42 = bits(_mstatus_mstatusOld_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 20059:37]
      connect _mstatus_mstatusOld_WIRE_2.tsr, _mstatus_mstatusOld_T_42 @[build/NutShell.fir.opt.mlir 20060:9]
      node _mstatus_mstatusOld_T_43 = bits(_mstatus_mstatusOld_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 20062:37]
      connect _mstatus_mstatusOld_WIRE_2.pad0, _mstatus_mstatusOld_T_43 @[build/NutShell.fir.opt.mlir 20063:9]
      node _mstatus_mstatusOld_T_44 = bits(_mstatus_mstatusOld_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 20065:37]
      connect _mstatus_mstatusOld_WIRE_2.uxl, _mstatus_mstatusOld_T_44 @[build/NutShell.fir.opt.mlir 20066:9]
      node _mstatus_mstatusOld_T_45 = bits(_mstatus_mstatusOld_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 20068:37]
      connect _mstatus_mstatusOld_WIRE_2.sxl, _mstatus_mstatusOld_T_45 @[build/NutShell.fir.opt.mlir 20069:9]
      node _mstatus_mstatusOld_T_46 = bits(_mstatus_mstatusOld_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 20071:37]
      connect _mstatus_mstatusOld_WIRE_2.pad1, _mstatus_mstatusOld_T_46 @[build/NutShell.fir.opt.mlir 20072:9]
      node _mstatus_mstatusOld_T_47 = bits(_mstatus_mstatusOld_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 20074:37]
      connect _mstatus_mstatusOld_WIRE_2.sd, _mstatus_mstatusOld_T_47 @[build/NutShell.fir.opt.mlir 20075:9]
      wire mstatus_mstatusOld_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 20076:33]
      connect mstatus_mstatusOld_1, _mstatus_mstatusOld_WIRE_2 @[build/NutShell.fir.opt.mlir 20078:9]
      node _mstatus_mstatusNew_T_2 = eq(mstatus_mstatusOld_1.fs, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 20080:36]
      node _mstatus_mstatusNew_T_3 = bits(_mstatus_T_7, 62, 0) @[build/NutShell.fir.opt.mlir 20082:36]
      node mstatus_mstatusNew_1 = cat(_mstatus_mstatusNew_T_2, _mstatus_mstatusNew_T_3) @[build/NutShell.fir.opt.mlir 20084:33]
      connect mstatus, mstatus_mstatusNew_1 @[build/NutShell.fir.opt.mlir 20085:9]
    node _T_194 = eq(addr, UInt<12>(2835)) @[build/NutShell.fir.opt.mlir 20088:17]
    node _T_195 = and(_T_1, _T_194) @[build/NutShell.fir.opt.mlir 20090:17]
    when _T_195 : @[build/NutShell.fir.opt.mlir 20091:7]
      node _perfCnts_19_T = and(wdata, perfCntsLoMapping_19_2_2) @[build/NutShell.fir.opt.mlir 20093:27]
      node _perfCnts_19_T_1 = not(perfCntsLoMapping_19_2_2) @[build/NutShell.fir.opt.mlir 20095:29]
      node _perfCnts_19_T_2 = and(perfCnts_19, _perfCnts_19_T_1) @[build/NutShell.fir.opt.mlir 20097:29]
      node _perfCnts_19_T_3 = or(_perfCnts_19_T, _perfCnts_19_T_2) @[build/NutShell.fir.opt.mlir 20099:29]
      connect perfCnts_19, _perfCnts_19_T_3 @[build/NutShell.fir.opt.mlir 20100:9]
    node _T_196 = eq(addr, UInt<10>(944)) @[build/NutShell.fir.opt.mlir 20103:17]
    node _T_197 = and(_T_1, _T_196) @[build/NutShell.fir.opt.mlir 20105:17]
    when _T_197 : @[build/NutShell.fir.opt.mlir 20106:7]
      node _pmpaddr0_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20108:24]
      node _pmpaddr0_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20110:26]
      node _pmpaddr0_T_2 = and(pmpaddr0, _pmpaddr0_T_1) @[build/NutShell.fir.opt.mlir 20112:26]
      node _pmpaddr0_T_3 = or(_pmpaddr0_T, _pmpaddr0_T_2) @[build/NutShell.fir.opt.mlir 20114:26]
      connect pmpaddr0, _pmpaddr0_T_3 @[build/NutShell.fir.opt.mlir 20115:9]
    node _T_198 = eq(addr, UInt<12>(2878)) @[build/NutShell.fir.opt.mlir 20118:17]
    node _T_199 = and(_T_1, _T_198) @[build/NutShell.fir.opt.mlir 20120:17]
    when _T_199 : @[build/NutShell.fir.opt.mlir 20121:7]
      node _perfCnts_62_T = and(wdata, perfCntsLoMapping_62_2_2) @[build/NutShell.fir.opt.mlir 20123:27]
      node _perfCnts_62_T_1 = not(perfCntsLoMapping_62_2_2) @[build/NutShell.fir.opt.mlir 20125:29]
      node _perfCnts_62_T_2 = and(perfCnts_62, _perfCnts_62_T_1) @[build/NutShell.fir.opt.mlir 20127:29]
      node _perfCnts_62_T_3 = or(_perfCnts_62_T, _perfCnts_62_T_2) @[build/NutShell.fir.opt.mlir 20129:29]
      connect perfCnts_62, _perfCnts_62_T_3 @[build/NutShell.fir.opt.mlir 20130:9]
    node _T_200 = eq(addr, UInt<12>(2927)) @[build/NutShell.fir.opt.mlir 20133:17]
    node _T_201 = and(_T_1, _T_200) @[build/NutShell.fir.opt.mlir 20135:17]
    when _T_201 : @[build/NutShell.fir.opt.mlir 20136:7]
      node _perfCnts_111_T = and(wdata, perfCntsLoMapping_111_2_2) @[build/NutShell.fir.opt.mlir 20138:28]
      node _perfCnts_111_T_1 = not(perfCntsLoMapping_111_2_2) @[build/NutShell.fir.opt.mlir 20140:30]
      node _perfCnts_111_T_2 = and(perfCnts_111, _perfCnts_111_T_1) @[build/NutShell.fir.opt.mlir 20142:30]
      node _perfCnts_111_T_3 = or(_perfCnts_111_T, _perfCnts_111_T_2) @[build/NutShell.fir.opt.mlir 20144:30]
      connect perfCnts_111, _perfCnts_111_T_3 @[build/NutShell.fir.opt.mlir 20145:9]
    node _T_202 = eq(addr, UInt<12>(2846)) @[build/NutShell.fir.opt.mlir 20148:17]
    node _T_203 = and(_T_1, _T_202) @[build/NutShell.fir.opt.mlir 20150:17]
    when _T_203 : @[build/NutShell.fir.opt.mlir 20151:7]
      node _perfCnts_30_T = and(wdata, perfCntsLoMapping_30_2_2) @[build/NutShell.fir.opt.mlir 20153:27]
      node _perfCnts_30_T_1 = not(perfCntsLoMapping_30_2_2) @[build/NutShell.fir.opt.mlir 20155:29]
      node _perfCnts_30_T_2 = and(perfCnts_30, _perfCnts_30_T_1) @[build/NutShell.fir.opt.mlir 20157:29]
      node _perfCnts_30_T_3 = or(_perfCnts_30_T, _perfCnts_30_T_2) @[build/NutShell.fir.opt.mlir 20159:29]
      connect perfCnts_30, _perfCnts_30_T_3 @[build/NutShell.fir.opt.mlir 20160:9]
    node _T_204 = eq(addr, UInt<12>(2899)) @[build/NutShell.fir.opt.mlir 20163:17]
    node _T_205 = and(_T_1, _T_204) @[build/NutShell.fir.opt.mlir 20165:17]
    when _T_205 : @[build/NutShell.fir.opt.mlir 20166:7]
      node _perfCnts_83_T = and(wdata, perfCntsLoMapping_83_2_2) @[build/NutShell.fir.opt.mlir 20168:27]
      node _perfCnts_83_T_1 = not(perfCntsLoMapping_83_2_2) @[build/NutShell.fir.opt.mlir 20170:29]
      node _perfCnts_83_T_2 = and(perfCnts_83, _perfCnts_83_T_1) @[build/NutShell.fir.opt.mlir 20172:29]
      node _perfCnts_83_T_3 = or(_perfCnts_83_T, _perfCnts_83_T_2) @[build/NutShell.fir.opt.mlir 20174:29]
      connect perfCnts_83, _perfCnts_83_T_3 @[build/NutShell.fir.opt.mlir 20175:9]
    node _T_206 = eq(addr, UInt<12>(2914)) @[build/NutShell.fir.opt.mlir 20178:17]
    node _T_207 = and(_T_1, _T_206) @[build/NutShell.fir.opt.mlir 20180:17]
    when _T_207 : @[build/NutShell.fir.opt.mlir 20181:7]
      node _perfCnts_98_T = and(wdata, perfCntsLoMapping_98_2_2) @[build/NutShell.fir.opt.mlir 20183:27]
      node _perfCnts_98_T_1 = not(perfCntsLoMapping_98_2_2) @[build/NutShell.fir.opt.mlir 20185:29]
      node _perfCnts_98_T_2 = and(perfCnts_98, _perfCnts_98_T_1) @[build/NutShell.fir.opt.mlir 20187:29]
      node _perfCnts_98_T_3 = or(_perfCnts_98_T, _perfCnts_98_T_2) @[build/NutShell.fir.opt.mlir 20189:29]
      connect perfCnts_98, _perfCnts_98_T_3 @[build/NutShell.fir.opt.mlir 20190:9]
    node _T_208 = eq(addr, UInt<12>(2816)) @[build/NutShell.fir.opt.mlir 20193:17]
    node _T_209 = and(_T_1, _T_208) @[build/NutShell.fir.opt.mlir 20195:17]
    when _T_209 : @[build/NutShell.fir.opt.mlir 20196:7]
      node _perfCnts_0_T = and(wdata, perfCntsLoMapping_0_2_2) @[build/NutShell.fir.opt.mlir 20198:26]
      node _perfCnts_0_T_1 = not(perfCntsLoMapping_0_2_2) @[build/NutShell.fir.opt.mlir 20200:28]
      node _perfCnts_0_T_2 = and(perfCnts_0, _perfCnts_0_T_1) @[build/NutShell.fir.opt.mlir 20202:28]
      node _perfCnts_0_T_3 = or(_perfCnts_0_T, _perfCnts_0_T_2) @[build/NutShell.fir.opt.mlir 20204:28]
      connect perfCnts_0, _perfCnts_0_T_3 @[build/NutShell.fir.opt.mlir 20205:9]
    node _T_210 = eq(addr, UInt<12>(2942)) @[build/NutShell.fir.opt.mlir 20208:17]
    node _T_211 = and(_T_1, _T_210) @[build/NutShell.fir.opt.mlir 20210:17]
    when _T_211 : @[build/NutShell.fir.opt.mlir 20211:7]
      node _perfCnts_126_T = and(wdata, perfCntsLoMapping_126_2_2) @[build/NutShell.fir.opt.mlir 20213:28]
      node _perfCnts_126_T_1 = not(perfCntsLoMapping_126_2_2) @[build/NutShell.fir.opt.mlir 20215:30]
      node _perfCnts_126_T_2 = and(perfCnts_126, _perfCnts_126_T_1) @[build/NutShell.fir.opt.mlir 20217:30]
      node _perfCnts_126_T_3 = or(_perfCnts_126_T, _perfCnts_126_T_2) @[build/NutShell.fir.opt.mlir 20219:30]
      connect perfCnts_126, _perfCnts_126_T_3 @[build/NutShell.fir.opt.mlir 20220:9]
    node _T_212 = eq(addr, UInt<12>(2863)) @[build/NutShell.fir.opt.mlir 20223:17]
    node _T_213 = and(_T_1, _T_212) @[build/NutShell.fir.opt.mlir 20225:17]
    when _T_213 : @[build/NutShell.fir.opt.mlir 20226:7]
      node _perfCnts_47_T = and(wdata, perfCntsLoMapping_47_2_2) @[build/NutShell.fir.opt.mlir 20228:27]
      node _perfCnts_47_T_1 = not(perfCntsLoMapping_47_2_2) @[build/NutShell.fir.opt.mlir 20230:29]
      node _perfCnts_47_T_2 = and(perfCnts_47, _perfCnts_47_T_1) @[build/NutShell.fir.opt.mlir 20232:29]
      node _perfCnts_47_T_3 = or(_perfCnts_47_T, _perfCnts_47_T_2) @[build/NutShell.fir.opt.mlir 20234:29]
      connect perfCnts_47, _perfCnts_47_T_3 @[build/NutShell.fir.opt.mlir 20235:9]
    node _T_214 = eq(addr, UInt<12>(2821)) @[build/NutShell.fir.opt.mlir 20238:17]
    node _T_215 = and(_T_1, _T_214) @[build/NutShell.fir.opt.mlir 20240:17]
    when _T_215 : @[build/NutShell.fir.opt.mlir 20241:7]
      node _perfCnts_5_T = and(wdata, perfCntsLoMapping_5_2_2) @[build/NutShell.fir.opt.mlir 20243:26]
      node _perfCnts_5_T_1 = not(perfCntsLoMapping_5_2_2) @[build/NutShell.fir.opt.mlir 20245:28]
      node _perfCnts_5_T_2 = and(perfCnts_5, _perfCnts_5_T_1) @[build/NutShell.fir.opt.mlir 20247:28]
      node _perfCnts_5_T_3 = or(_perfCnts_5_T, _perfCnts_5_T_2) @[build/NutShell.fir.opt.mlir 20249:28]
      connect perfCnts_5, _perfCnts_5_T_3 @[build/NutShell.fir.opt.mlir 20250:9]
    node _T_216 = eq(addr, UInt<12>(2850)) @[build/NutShell.fir.opt.mlir 20253:17]
    node _T_217 = and(_T_1, _T_216) @[build/NutShell.fir.opt.mlir 20255:17]
    when _T_217 : @[build/NutShell.fir.opt.mlir 20256:7]
      node _perfCnts_34_T = and(wdata, perfCntsLoMapping_34_2_2) @[build/NutShell.fir.opt.mlir 20258:27]
      node _perfCnts_34_T_1 = not(perfCntsLoMapping_34_2_2) @[build/NutShell.fir.opt.mlir 20260:29]
      node _perfCnts_34_T_2 = and(perfCnts_34, _perfCnts_34_T_1) @[build/NutShell.fir.opt.mlir 20262:29]
      node _perfCnts_34_T_3 = or(_perfCnts_34_T, _perfCnts_34_T_2) @[build/NutShell.fir.opt.mlir 20264:29]
      connect perfCnts_34, _perfCnts_34_T_3 @[build/NutShell.fir.opt.mlir 20265:9]
    node _T_218 = eq(addr, UInt<12>(2888)) @[build/NutShell.fir.opt.mlir 20268:17]
    node _T_219 = and(_T_1, _T_218) @[build/NutShell.fir.opt.mlir 20270:17]
    when _T_219 : @[build/NutShell.fir.opt.mlir 20271:7]
      node _perfCnts_72_T = and(wdata, perfCntsLoMapping_72_2_2) @[build/NutShell.fir.opt.mlir 20273:27]
      node _perfCnts_72_T_1 = not(perfCntsLoMapping_72_2_2) @[build/NutShell.fir.opt.mlir 20275:29]
      node _perfCnts_72_T_2 = and(perfCnts_72, _perfCnts_72_T_1) @[build/NutShell.fir.opt.mlir 20277:29]
      node _perfCnts_72_T_3 = or(_perfCnts_72_T, _perfCnts_72_T_2) @[build/NutShell.fir.opt.mlir 20279:29]
      connect perfCnts_72, _perfCnts_72_T_3 @[build/NutShell.fir.opt.mlir 20280:9]
    node _T_220 = eq(addr, UInt<12>(2882)) @[build/NutShell.fir.opt.mlir 20283:17]
    node _T_221 = and(_T_1, _T_220) @[build/NutShell.fir.opt.mlir 20285:17]
    when _T_221 : @[build/NutShell.fir.opt.mlir 20286:7]
      node _perfCnts_66_T = and(wdata, perfCntsLoMapping_66_2_2) @[build/NutShell.fir.opt.mlir 20288:27]
      node _perfCnts_66_T_1 = not(perfCntsLoMapping_66_2_2) @[build/NutShell.fir.opt.mlir 20290:29]
      node _perfCnts_66_T_2 = and(perfCnts_66, _perfCnts_66_T_1) @[build/NutShell.fir.opt.mlir 20292:29]
      node _perfCnts_66_T_3 = or(_perfCnts_66_T, _perfCnts_66_T_2) @[build/NutShell.fir.opt.mlir 20294:29]
      connect perfCnts_66, _perfCnts_66_T_3 @[build/NutShell.fir.opt.mlir 20295:9]
    node _T_222 = eq(addr, UInt<12>(2831)) @[build/NutShell.fir.opt.mlir 20298:17]
    node _T_223 = and(_T_1, _T_222) @[build/NutShell.fir.opt.mlir 20300:17]
    when _T_223 : @[build/NutShell.fir.opt.mlir 20301:7]
      node _perfCnts_15_T = and(wdata, perfCntsLoMapping_15_2_2) @[build/NutShell.fir.opt.mlir 20303:27]
      node _perfCnts_15_T_1 = not(perfCntsLoMapping_15_2_2) @[build/NutShell.fir.opt.mlir 20305:29]
      node _perfCnts_15_T_2 = and(perfCnts_15, _perfCnts_15_T_1) @[build/NutShell.fir.opt.mlir 20307:29]
      node _perfCnts_15_T_3 = or(_perfCnts_15_T, _perfCnts_15_T_2) @[build/NutShell.fir.opt.mlir 20309:29]
      connect perfCnts_15, _perfCnts_15_T_3 @[build/NutShell.fir.opt.mlir 20310:9]
    node _T_224 = eq(addr, UInt<12>(2920)) @[build/NutShell.fir.opt.mlir 20313:17]
    node _T_225 = and(_T_1, _T_224) @[build/NutShell.fir.opt.mlir 20315:17]
    when _T_225 : @[build/NutShell.fir.opt.mlir 20316:7]
      node _perfCnts_104_T = and(wdata, perfCntsLoMapping_104_2_2) @[build/NutShell.fir.opt.mlir 20318:28]
      node _perfCnts_104_T_1 = not(perfCntsLoMapping_104_2_2) @[build/NutShell.fir.opt.mlir 20320:30]
      node _perfCnts_104_T_2 = and(perfCnts_104, _perfCnts_104_T_1) @[build/NutShell.fir.opt.mlir 20322:30]
      node _perfCnts_104_T_3 = or(_perfCnts_104_T, _perfCnts_104_T_2) @[build/NutShell.fir.opt.mlir 20324:30]
      connect perfCnts_104, _perfCnts_104_T_3 @[build/NutShell.fir.opt.mlir 20325:9]
    node _T_226 = eq(addr, UInt<12>(2903)) @[build/NutShell.fir.opt.mlir 20328:17]
    node _T_227 = and(_T_1, _T_226) @[build/NutShell.fir.opt.mlir 20330:17]
    when _T_227 : @[build/NutShell.fir.opt.mlir 20331:7]
      node _perfCnts_87_T = and(wdata, perfCntsLoMapping_87_2_2) @[build/NutShell.fir.opt.mlir 20333:27]
      node _perfCnts_87_T_1 = not(perfCntsLoMapping_87_2_2) @[build/NutShell.fir.opt.mlir 20335:29]
      node _perfCnts_87_T_2 = and(perfCnts_87, _perfCnts_87_T_1) @[build/NutShell.fir.opt.mlir 20337:29]
      node _perfCnts_87_T_3 = or(_perfCnts_87_T, _perfCnts_87_T_2) @[build/NutShell.fir.opt.mlir 20339:29]
      connect perfCnts_87, _perfCnts_87_T_3 @[build/NutShell.fir.opt.mlir 20340:9]
    node _T_228 = eq(addr, UInt<12>(2838)) @[build/NutShell.fir.opt.mlir 20343:17]
    node _T_229 = and(_T_1, _T_228) @[build/NutShell.fir.opt.mlir 20345:17]
    when _T_229 : @[build/NutShell.fir.opt.mlir 20346:7]
      node _perfCnts_22_T = and(wdata, perfCntsLoMapping_22_2_2) @[build/NutShell.fir.opt.mlir 20348:27]
      node _perfCnts_22_T_1 = not(perfCntsLoMapping_22_2_2) @[build/NutShell.fir.opt.mlir 20350:29]
      node _perfCnts_22_T_2 = and(perfCnts_22, _perfCnts_22_T_1) @[build/NutShell.fir.opt.mlir 20352:29]
      node _perfCnts_22_T_3 = or(_perfCnts_22_T, _perfCnts_22_T_2) @[build/NutShell.fir.opt.mlir 20354:29]
      connect perfCnts_22, _perfCnts_22_T_3 @[build/NutShell.fir.opt.mlir 20355:9]
    node _T_230 = eq(addr, UInt<12>(2843)) @[build/NutShell.fir.opt.mlir 20358:17]
    node _T_231 = and(_T_1, _T_230) @[build/NutShell.fir.opt.mlir 20360:17]
    when _T_231 : @[build/NutShell.fir.opt.mlir 20361:7]
      node _perfCnts_27_T = and(wdata, perfCntsLoMapping_27_2_2) @[build/NutShell.fir.opt.mlir 20363:27]
      node _perfCnts_27_T_1 = not(perfCntsLoMapping_27_2_2) @[build/NutShell.fir.opt.mlir 20365:29]
      node _perfCnts_27_T_2 = and(perfCnts_27, _perfCnts_27_T_1) @[build/NutShell.fir.opt.mlir 20367:29]
      node _perfCnts_27_T_3 = or(_perfCnts_27_T, _perfCnts_27_T_2) @[build/NutShell.fir.opt.mlir 20369:29]
      connect perfCnts_27, _perfCnts_27_T_3 @[build/NutShell.fir.opt.mlir 20370:9]
    node _T_232 = eq(addr, UInt<12>(2860)) @[build/NutShell.fir.opt.mlir 20373:17]
    node _T_233 = and(_T_1, _T_232) @[build/NutShell.fir.opt.mlir 20375:17]
    when _T_233 : @[build/NutShell.fir.opt.mlir 20376:7]
      node _perfCnts_44_T = and(wdata, perfCntsLoMapping_44_2_2) @[build/NutShell.fir.opt.mlir 20378:27]
      node _perfCnts_44_T_1 = not(perfCntsLoMapping_44_2_2) @[build/NutShell.fir.opt.mlir 20380:29]
      node _perfCnts_44_T_2 = and(perfCnts_44, _perfCnts_44_T_1) @[build/NutShell.fir.opt.mlir 20382:29]
      node _perfCnts_44_T_3 = or(_perfCnts_44_T, _perfCnts_44_T_2) @[build/NutShell.fir.opt.mlir 20384:29]
      connect perfCnts_44, _perfCnts_44_T_3 @[build/NutShell.fir.opt.mlir 20385:9]
    node _T_234 = eq(addr, UInt<12>(2939)) @[build/NutShell.fir.opt.mlir 20388:17]
    node _T_235 = and(_T_1, _T_234) @[build/NutShell.fir.opt.mlir 20390:17]
    when _T_235 : @[build/NutShell.fir.opt.mlir 20391:7]
      node _perfCnts_123_T = and(wdata, perfCntsLoMapping_123_2_2) @[build/NutShell.fir.opt.mlir 20393:28]
      node _perfCnts_123_T_1 = not(perfCntsLoMapping_123_2_2) @[build/NutShell.fir.opt.mlir 20395:30]
      node _perfCnts_123_T_2 = and(perfCnts_123, _perfCnts_123_T_1) @[build/NutShell.fir.opt.mlir 20397:30]
      node _perfCnts_123_T_3 = or(_perfCnts_123_T, _perfCnts_123_T_2) @[build/NutShell.fir.opt.mlir 20399:30]
      connect perfCnts_123, _perfCnts_123_T_3 @[build/NutShell.fir.opt.mlir 20400:9]
    node _T_236 = eq(addr, UInt<12>(2892)) @[build/NutShell.fir.opt.mlir 20403:17]
    node _T_237 = and(_T_1, _T_236) @[build/NutShell.fir.opt.mlir 20405:17]
    when _T_237 : @[build/NutShell.fir.opt.mlir 20406:7]
      node _perfCnts_76_T = and(wdata, perfCntsLoMapping_76_2_2) @[build/NutShell.fir.opt.mlir 20408:27]
      node _perfCnts_76_T_1 = not(perfCntsLoMapping_76_2_2) @[build/NutShell.fir.opt.mlir 20410:29]
      node _perfCnts_76_T_2 = and(perfCnts_76, _perfCnts_76_T_1) @[build/NutShell.fir.opt.mlir 20412:29]
      node _perfCnts_76_T_3 = or(_perfCnts_76_T, _perfCnts_76_T_2) @[build/NutShell.fir.opt.mlir 20414:29]
      connect perfCnts_76, _perfCnts_76_T_3 @[build/NutShell.fir.opt.mlir 20415:9]
    node _T_238 = eq(addr, UInt<12>(2848)) @[build/NutShell.fir.opt.mlir 20418:17]
    node _T_239 = and(_T_1, _T_238) @[build/NutShell.fir.opt.mlir 20420:17]
    when _T_239 : @[build/NutShell.fir.opt.mlir 20421:7]
      node _perfCnts_32_T = and(wdata, perfCntsLoMapping_32_2_2) @[build/NutShell.fir.opt.mlir 20423:27]
      node _perfCnts_32_T_1 = not(perfCntsLoMapping_32_2_2) @[build/NutShell.fir.opt.mlir 20425:29]
      node _perfCnts_32_T_2 = and(perfCnts_32, _perfCnts_32_T_1) @[build/NutShell.fir.opt.mlir 20427:29]
      node _perfCnts_32_T_3 = or(_perfCnts_32_T, _perfCnts_32_T_2) @[build/NutShell.fir.opt.mlir 20429:29]
      connect perfCnts_32, _perfCnts_32_T_3 @[build/NutShell.fir.opt.mlir 20430:9]
    node _T_240 = eq(addr, UInt<12>(2924)) @[build/NutShell.fir.opt.mlir 20433:17]
    node _T_241 = and(_T_1, _T_240) @[build/NutShell.fir.opt.mlir 20435:17]
    when _T_241 : @[build/NutShell.fir.opt.mlir 20436:7]
      node _perfCnts_108_T = and(wdata, perfCntsLoMapping_108_2_2) @[build/NutShell.fir.opt.mlir 20438:28]
      node _perfCnts_108_T_1 = not(perfCntsLoMapping_108_2_2) @[build/NutShell.fir.opt.mlir 20440:30]
      node _perfCnts_108_T_2 = and(perfCnts_108, _perfCnts_108_T_1) @[build/NutShell.fir.opt.mlir 20442:30]
      node _perfCnts_108_T_3 = or(_perfCnts_108_T, _perfCnts_108_T_2) @[build/NutShell.fir.opt.mlir 20444:30]
      connect perfCnts_108, _perfCnts_108_T_3 @[build/NutShell.fir.opt.mlir 20445:9]
    node _T_242 = eq(addr, UInt<12>(2818)) @[build/NutShell.fir.opt.mlir 20448:17]
    node _T_243 = and(_T_1, _T_242) @[build/NutShell.fir.opt.mlir 20450:17]
    when _T_243 : @[build/NutShell.fir.opt.mlir 20451:7]
      node _perfCnts_2_T = and(wdata, perfCntsLoMapping_2_2_2) @[build/NutShell.fir.opt.mlir 20453:26]
      node _perfCnts_2_T_1 = not(perfCntsLoMapping_2_2_2) @[build/NutShell.fir.opt.mlir 20455:28]
      node _perfCnts_2_T_2 = and(perfCnts_2, _perfCnts_2_T_1) @[build/NutShell.fir.opt.mlir 20457:28]
      node _perfCnts_2_T_3 = or(_perfCnts_2_T, _perfCnts_2_T_2) @[build/NutShell.fir.opt.mlir 20459:28]
      connect perfCnts_2, _perfCnts_2_T_3 @[build/NutShell.fir.opt.mlir 20460:9]
    node _T_244 = eq(addr, UInt<12>(2919)) @[build/NutShell.fir.opt.mlir 20463:17]
    node _T_245 = and(_T_1, _T_244) @[build/NutShell.fir.opt.mlir 20465:17]
    when _T_245 : @[build/NutShell.fir.opt.mlir 20466:7]
      node _perfCnts_103_T = and(wdata, perfCntsLoMapping_103_2_2) @[build/NutShell.fir.opt.mlir 20468:28]
      node _perfCnts_103_T_1 = not(perfCntsLoMapping_103_2_2) @[build/NutShell.fir.opt.mlir 20470:30]
      node _perfCnts_103_T_2 = and(perfCnts_103, _perfCnts_103_T_1) @[build/NutShell.fir.opt.mlir 20472:30]
      node _perfCnts_103_T_3 = or(_perfCnts_103_T, _perfCnts_103_T_2) @[build/NutShell.fir.opt.mlir 20474:30]
      connect perfCnts_103, _perfCnts_103_T_3 @[build/NutShell.fir.opt.mlir 20475:9]
    node _T_246 = eq(addr, UInt<12>(2865)) @[build/NutShell.fir.opt.mlir 20478:17]
    node _T_247 = and(_T_1, _T_246) @[build/NutShell.fir.opt.mlir 20480:17]
    when _T_247 : @[build/NutShell.fir.opt.mlir 20481:7]
      node _perfCnts_49_T = and(wdata, perfCntsLoMapping_49_2_2) @[build/NutShell.fir.opt.mlir 20483:27]
      node _perfCnts_49_T_1 = not(perfCntsLoMapping_49_2_2) @[build/NutShell.fir.opt.mlir 20485:29]
      node _perfCnts_49_T_2 = and(perfCnts_49, _perfCnts_49_T_1) @[build/NutShell.fir.opt.mlir 20487:29]
      node _perfCnts_49_T_3 = or(_perfCnts_49_T, _perfCnts_49_T_2) @[build/NutShell.fir.opt.mlir 20489:29]
      connect perfCnts_49, _perfCnts_49_T_3 @[build/NutShell.fir.opt.mlir 20490:9]
    node _T_248 = eq(addr, UInt<12>(2875)) @[build/NutShell.fir.opt.mlir 20493:17]
    node _T_249 = and(_T_1, _T_248) @[build/NutShell.fir.opt.mlir 20495:17]
    when _T_249 : @[build/NutShell.fir.opt.mlir 20496:7]
      node _perfCnts_59_T = and(wdata, perfCntsLoMapping_59_2_2) @[build/NutShell.fir.opt.mlir 20498:27]
      node _perfCnts_59_T_1 = not(perfCntsLoMapping_59_2_2) @[build/NutShell.fir.opt.mlir 20500:29]
      node _perfCnts_59_T_2 = and(perfCnts_59, _perfCnts_59_T_1) @[build/NutShell.fir.opt.mlir 20502:29]
      node _perfCnts_59_T_3 = or(_perfCnts_59_T, _perfCnts_59_T_2) @[build/NutShell.fir.opt.mlir 20504:29]
      connect perfCnts_59, _perfCnts_59_T_3 @[build/NutShell.fir.opt.mlir 20505:9]
    node _T_250 = eq(addr, UInt<10>(931)) @[build/NutShell.fir.opt.mlir 20508:17]
    node _T_251 = and(_T_1, _T_250) @[build/NutShell.fir.opt.mlir 20510:17]
    when _T_251 : @[build/NutShell.fir.opt.mlir 20511:7]
      node _pmpcfg3_T = and(wdata, mapping_128_2_2) @[build/NutShell.fir.opt.mlir 20513:23]
      node _pmpcfg3_T_1 = not(mapping_128_2_2) @[build/NutShell.fir.opt.mlir 20515:25]
      node _pmpcfg3_T_2 = and(pmpcfg3, _pmpcfg3_T_1) @[build/NutShell.fir.opt.mlir 20517:25]
      node _pmpcfg3_T_3 = or(_pmpcfg3_T, _pmpcfg3_T_2) @[build/NutShell.fir.opt.mlir 20519:25]
      connect pmpcfg3, _pmpcfg3_T_3 @[build/NutShell.fir.opt.mlir 20520:9]
    node _T_252 = eq(addr, UInt<12>(2885)) @[build/NutShell.fir.opt.mlir 20523:17]
    node _T_253 = and(_T_1, _T_252) @[build/NutShell.fir.opt.mlir 20525:17]
    when _T_253 : @[build/NutShell.fir.opt.mlir 20526:7]
      node _perfCnts_69_T = and(wdata, perfCntsLoMapping_69_2_2) @[build/NutShell.fir.opt.mlir 20528:27]
      node _perfCnts_69_T_1 = not(perfCntsLoMapping_69_2_2) @[build/NutShell.fir.opt.mlir 20530:29]
      node _perfCnts_69_T_2 = and(perfCnts_69, _perfCnts_69_T_1) @[build/NutShell.fir.opt.mlir 20532:29]
      node _perfCnts_69_T_3 = or(_perfCnts_69_T, _perfCnts_69_T_2) @[build/NutShell.fir.opt.mlir 20534:29]
      connect perfCnts_69, _perfCnts_69_T_3 @[build/NutShell.fir.opt.mlir 20535:9]
    node _T_254 = eq(addr, UInt<12>(2870)) @[build/NutShell.fir.opt.mlir 20538:17]
    node _T_255 = and(_T_1, _T_254) @[build/NutShell.fir.opt.mlir 20540:17]
    when _T_255 : @[build/NutShell.fir.opt.mlir 20541:7]
      node _perfCnts_54_T = and(wdata, perfCntsLoMapping_54_2_2) @[build/NutShell.fir.opt.mlir 20543:27]
      node _perfCnts_54_T_1 = not(perfCntsLoMapping_54_2_2) @[build/NutShell.fir.opt.mlir 20545:29]
      node _perfCnts_54_T_2 = and(perfCnts_54, _perfCnts_54_T_1) @[build/NutShell.fir.opt.mlir 20547:29]
      node _perfCnts_54_T_3 = or(_perfCnts_54_T, _perfCnts_54_T_2) @[build/NutShell.fir.opt.mlir 20549:29]
      connect perfCnts_54, _perfCnts_54_T_3 @[build/NutShell.fir.opt.mlir 20550:9]
    node _T_256 = eq(addr, UInt<12>(2828)) @[build/NutShell.fir.opt.mlir 20553:17]
    node _T_257 = and(_T_1, _T_256) @[build/NutShell.fir.opt.mlir 20555:17]
    when _T_257 : @[build/NutShell.fir.opt.mlir 20556:7]
      node _perfCnts_12_T = and(wdata, perfCntsLoMapping_12_2_2) @[build/NutShell.fir.opt.mlir 20558:27]
      node _perfCnts_12_T_1 = not(perfCntsLoMapping_12_2_2) @[build/NutShell.fir.opt.mlir 20560:29]
      node _perfCnts_12_T_2 = and(perfCnts_12, _perfCnts_12_T_1) @[build/NutShell.fir.opt.mlir 20562:29]
      node _perfCnts_12_T_3 = or(_perfCnts_12_T, _perfCnts_12_T_2) @[build/NutShell.fir.opt.mlir 20564:29]
      connect perfCnts_12, _perfCnts_12_T_3 @[build/NutShell.fir.opt.mlir 20565:9]
    node _T_258 = eq(addr, UInt<10>(771)) @[build/NutShell.fir.opt.mlir 20568:17]
    node _T_259 = and(_T_1, _T_258) @[build/NutShell.fir.opt.mlir 20570:17]
    when _T_259 : @[build/NutShell.fir.opt.mlir 20571:7]
      node _mideleg_T = and(wdata, UInt<64>(546)) @[build/NutShell.fir.opt.mlir 20573:23]
      node _mideleg_T_1 = not(UInt<64>(546)) @[build/NutShell.fir.opt.mlir 20575:25]
      node _mideleg_T_2 = and(mideleg, _mideleg_T_1) @[build/NutShell.fir.opt.mlir 20577:25]
      node _mideleg_T_3 = or(_mideleg_T, _mideleg_T_2) @[build/NutShell.fir.opt.mlir 20579:25]
      connect mideleg, _mideleg_T_3 @[build/NutShell.fir.opt.mlir 20580:9]
    node _T_260 = eq(addr, UInt<12>(2907)) @[build/NutShell.fir.opt.mlir 20583:17]
    node _T_261 = and(_T_1, _T_260) @[build/NutShell.fir.opt.mlir 20585:17]
    when _T_261 : @[build/NutShell.fir.opt.mlir 20586:7]
      node _perfCnts_91_T = and(wdata, perfCntsLoMapping_91_2_2) @[build/NutShell.fir.opt.mlir 20588:27]
      node _perfCnts_91_T_1 = not(perfCntsLoMapping_91_2_2) @[build/NutShell.fir.opt.mlir 20590:29]
      node _perfCnts_91_T_2 = and(perfCnts_91, _perfCnts_91_T_1) @[build/NutShell.fir.opt.mlir 20592:29]
      node _perfCnts_91_T_3 = or(_perfCnts_91_T, _perfCnts_91_T_2) @[build/NutShell.fir.opt.mlir 20594:29]
      connect perfCnts_91, _perfCnts_91_T_3 @[build/NutShell.fir.opt.mlir 20595:9]
    node _T_262 = eq(addr, UInt<12>(2855)) @[build/NutShell.fir.opt.mlir 20598:17]
    node _T_263 = and(_T_1, _T_262) @[build/NutShell.fir.opt.mlir 20600:17]
    when _T_263 : @[build/NutShell.fir.opt.mlir 20601:7]
      node _perfCnts_39_T = and(wdata, perfCntsLoMapping_39_2_2) @[build/NutShell.fir.opt.mlir 20603:27]
      node _perfCnts_39_T_1 = not(perfCntsLoMapping_39_2_2) @[build/NutShell.fir.opt.mlir 20605:29]
      node _perfCnts_39_T_2 = and(perfCnts_39, _perfCnts_39_T_1) @[build/NutShell.fir.opt.mlir 20607:29]
      node _perfCnts_39_T_3 = or(_perfCnts_39_T, _perfCnts_39_T_2) @[build/NutShell.fir.opt.mlir 20609:29]
      connect perfCnts_39, _perfCnts_39_T_3 @[build/NutShell.fir.opt.mlir 20610:9]
    node _T_264 = eq(addr, UInt<12>(2853)) @[build/NutShell.fir.opt.mlir 20613:17]
    node _T_265 = and(_T_1, _T_264) @[build/NutShell.fir.opt.mlir 20615:17]
    when _T_265 : @[build/NutShell.fir.opt.mlir 20616:7]
      node _perfCnts_37_T = and(wdata, perfCntsLoMapping_37_2_2) @[build/NutShell.fir.opt.mlir 20618:27]
      node _perfCnts_37_T_1 = not(perfCntsLoMapping_37_2_2) @[build/NutShell.fir.opt.mlir 20620:29]
      node _perfCnts_37_T_2 = and(perfCnts_37, _perfCnts_37_T_1) @[build/NutShell.fir.opt.mlir 20622:29]
      node _perfCnts_37_T_3 = or(_perfCnts_37_T, _perfCnts_37_T_2) @[build/NutShell.fir.opt.mlir 20624:29]
      connect perfCnts_37, _perfCnts_37_T_3 @[build/NutShell.fir.opt.mlir 20625:9]
    node _T_266 = eq(addr, UInt<10>(946)) @[build/NutShell.fir.opt.mlir 20628:17]
    node _T_267 = and(_T_1, _T_266) @[build/NutShell.fir.opt.mlir 20630:17]
    when _T_267 : @[build/NutShell.fir.opt.mlir 20631:7]
      node _pmpaddr2_T = and(wdata, UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20633:24]
      node _pmpaddr2_T_1 = not(UInt<64>(1073741823)) @[build/NutShell.fir.opt.mlir 20635:26]
      node _pmpaddr2_T_2 = and(pmpaddr2, _pmpaddr2_T_1) @[build/NutShell.fir.opt.mlir 20637:26]
      node _pmpaddr2_T_3 = or(_pmpaddr2_T, _pmpaddr2_T_2) @[build/NutShell.fir.opt.mlir 20639:26]
      connect pmpaddr2, _pmpaddr2_T_3 @[build/NutShell.fir.opt.mlir 20640:9]
    node _T_268 = eq(addr, UInt<12>(2823)) @[build/NutShell.fir.opt.mlir 20643:17]
    node _T_269 = and(_T_1, _T_268) @[build/NutShell.fir.opt.mlir 20645:17]
    when _T_269 : @[build/NutShell.fir.opt.mlir 20646:7]
      node _perfCnts_7_T = and(wdata, perfCntsLoMapping_7_2_2) @[build/NutShell.fir.opt.mlir 20648:26]
      node _perfCnts_7_T_1 = not(perfCntsLoMapping_7_2_2) @[build/NutShell.fir.opt.mlir 20650:28]
      node _perfCnts_7_T_2 = and(perfCnts_7, _perfCnts_7_T_1) @[build/NutShell.fir.opt.mlir 20652:28]
      node _perfCnts_7_T_3 = or(_perfCnts_7_T, _perfCnts_7_T_2) @[build/NutShell.fir.opt.mlir 20654:28]
      connect perfCnts_7, _perfCnts_7_T_3 @[build/NutShell.fir.opt.mlir 20655:9]
    node _T_270 = eq(addr, UInt<12>(2934)) @[build/NutShell.fir.opt.mlir 20658:17]
    node _T_271 = and(_T_1, _T_270) @[build/NutShell.fir.opt.mlir 20660:17]
    when _T_271 : @[build/NutShell.fir.opt.mlir 20661:7]
      node _perfCnts_118_T = and(wdata, perfCntsLoMapping_118_2_2) @[build/NutShell.fir.opt.mlir 20663:28]
      node _perfCnts_118_T_1 = not(perfCntsLoMapping_118_2_2) @[build/NutShell.fir.opt.mlir 20665:30]
      node _perfCnts_118_T_2 = and(perfCnts_118, _perfCnts_118_T_1) @[build/NutShell.fir.opt.mlir 20667:30]
      node _perfCnts_118_T_3 = or(_perfCnts_118_T, _perfCnts_118_T_2) @[build/NutShell.fir.opt.mlir 20669:30]
      connect perfCnts_118, _perfCnts_118_T_3 @[build/NutShell.fir.opt.mlir 20670:9]
    node _T_272 = eq(addr, UInt<12>(2912)) @[build/NutShell.fir.opt.mlir 20673:17]
    node _T_273 = and(_T_1, _T_272) @[build/NutShell.fir.opt.mlir 20675:17]
    when _T_273 : @[build/NutShell.fir.opt.mlir 20676:7]
      node _perfCnts_96_T = and(wdata, perfCntsLoMapping_96_2_2) @[build/NutShell.fir.opt.mlir 20678:27]
      node _perfCnts_96_T_1 = not(perfCntsLoMapping_96_2_2) @[build/NutShell.fir.opt.mlir 20680:29]
      node _perfCnts_96_T_2 = and(perfCnts_96, _perfCnts_96_T_1) @[build/NutShell.fir.opt.mlir 20682:29]
      node _perfCnts_96_T_3 = or(_perfCnts_96_T, _perfCnts_96_T_2) @[build/NutShell.fir.opt.mlir 20684:29]
      connect perfCnts_96, _perfCnts_96_T_3 @[build/NutShell.fir.opt.mlir 20685:9]
    node _T_274 = eq(addr, UInt<10>(929)) @[build/NutShell.fir.opt.mlir 20688:17]
    node _T_275 = and(_T_1, _T_274) @[build/NutShell.fir.opt.mlir 20690:17]
    when _T_275 : @[build/NutShell.fir.opt.mlir 20691:7]
      node _pmpcfg1_T = and(wdata, mapping_141_2_2) @[build/NutShell.fir.opt.mlir 20693:23]
      node _pmpcfg1_T_1 = not(mapping_141_2_2) @[build/NutShell.fir.opt.mlir 20695:25]
      node _pmpcfg1_T_2 = and(pmpcfg1, _pmpcfg1_T_1) @[build/NutShell.fir.opt.mlir 20697:25]
      node _pmpcfg1_T_3 = or(_pmpcfg1_T, _pmpcfg1_T_2) @[build/NutShell.fir.opt.mlir 20699:25]
      connect pmpcfg1, _pmpcfg1_T_3 @[build/NutShell.fir.opt.mlir 20700:9]
    node _T_276 = eq(addr, UInt<12>(2902)) @[build/NutShell.fir.opt.mlir 20703:17]
    node _T_277 = and(_T_1, _T_276) @[build/NutShell.fir.opt.mlir 20705:17]
    when _T_277 : @[build/NutShell.fir.opt.mlir 20706:7]
      node _perfCnts_86_T = and(wdata, perfCntsLoMapping_86_2_2) @[build/NutShell.fir.opt.mlir 20708:27]
      node _perfCnts_86_T_1 = not(perfCntsLoMapping_86_2_2) @[build/NutShell.fir.opt.mlir 20710:29]
      node _perfCnts_86_T_2 = and(perfCnts_86, _perfCnts_86_T_1) @[build/NutShell.fir.opt.mlir 20712:29]
      node _perfCnts_86_T_3 = or(_perfCnts_86_T, _perfCnts_86_T_2) @[build/NutShell.fir.opt.mlir 20714:29]
      connect perfCnts_86, _perfCnts_86_T_3 @[build/NutShell.fir.opt.mlir 20715:9]
    node _T_278 = eq(addr, UInt<10>(832)) @[build/NutShell.fir.opt.mlir 20718:17]
    node _T_279 = and(_T_1, _T_278) @[build/NutShell.fir.opt.mlir 20720:17]
    when _T_279 : @[build/NutShell.fir.opt.mlir 20721:7]
      node _mscratch_T = and(wdata, mapping_143_2_2) @[build/NutShell.fir.opt.mlir 20723:24]
      node _mscratch_T_1 = not(mapping_143_2_2) @[build/NutShell.fir.opt.mlir 20725:26]
      node _mscratch_T_2 = and(mscratch, _mscratch_T_1) @[build/NutShell.fir.opt.mlir 20727:26]
      node _mscratch_T_3 = or(_mscratch_T, _mscratch_T_2) @[build/NutShell.fir.opt.mlir 20729:26]
      connect mscratch, _mscratch_T_3 @[build/NutShell.fir.opt.mlir 20730:9]
    node _T_280 = eq(addr, UInt<12>(2917)) @[build/NutShell.fir.opt.mlir 20733:17]
    node _T_281 = and(_T_1, _T_280) @[build/NutShell.fir.opt.mlir 20735:17]
    when _T_281 : @[build/NutShell.fir.opt.mlir 20736:7]
      node _perfCnts_101_T = and(wdata, perfCntsLoMapping_101_2_2) @[build/NutShell.fir.opt.mlir 20738:28]
      node _perfCnts_101_T_1 = not(perfCntsLoMapping_101_2_2) @[build/NutShell.fir.opt.mlir 20740:30]
      node _perfCnts_101_T_2 = and(perfCnts_101, _perfCnts_101_T_1) @[build/NutShell.fir.opt.mlir 20742:30]
      node _perfCnts_101_T_3 = or(_perfCnts_101_T, _perfCnts_101_T_2) @[build/NutShell.fir.opt.mlir 20744:30]
      connect perfCnts_101, _perfCnts_101_T_3 @[build/NutShell.fir.opt.mlir 20745:9]
    node _T_282 = eq(addr, UInt<12>(2930)) @[build/NutShell.fir.opt.mlir 20748:17]
    node _T_283 = and(_T_1, _T_282) @[build/NutShell.fir.opt.mlir 20750:17]
    when _T_283 : @[build/NutShell.fir.opt.mlir 20751:7]
      node _perfCnts_114_T = and(wdata, perfCntsLoMapping_114_2_2) @[build/NutShell.fir.opt.mlir 20753:28]
      node _perfCnts_114_T_1 = not(perfCntsLoMapping_114_2_2) @[build/NutShell.fir.opt.mlir 20755:30]
      node _perfCnts_114_T_2 = and(perfCnts_114, _perfCnts_114_T_1) @[build/NutShell.fir.opt.mlir 20757:30]
      node _perfCnts_114_T_3 = or(_perfCnts_114_T, _perfCnts_114_T_2) @[build/NutShell.fir.opt.mlir 20759:30]
      connect perfCnts_114, _perfCnts_114_T_3 @[build/NutShell.fir.opt.mlir 20760:9]
    node _T_284 = eq(addr, UInt<10>(833)) @[build/NutShell.fir.opt.mlir 20763:17]
    node _T_285 = and(_T_1, _T_284) @[build/NutShell.fir.opt.mlir 20765:17]
    when _T_285 : @[build/NutShell.fir.opt.mlir 20766:7]
      node _mepc_T = and(wdata, mapping_147_2_2) @[build/NutShell.fir.opt.mlir 20768:20]
      node _mepc_T_1 = not(mapping_147_2_2) @[build/NutShell.fir.opt.mlir 20770:22]
      node _mepc_T_2 = and(mepc, _mepc_T_1) @[build/NutShell.fir.opt.mlir 20772:22]
      node _mepc_T_3 = or(_mepc_T, _mepc_T_2) @[build/NutShell.fir.opt.mlir 20774:22]
      connect mepc, _mepc_T_3 @[build/NutShell.fir.opt.mlir 20775:9]
    node _T_286 = eq(addr, UInt<10>(835)) @[build/NutShell.fir.opt.mlir 20778:17]
    node _T_287 = and(_T_1, _T_286) @[build/NutShell.fir.opt.mlir 20780:17]
    when _T_287 : @[build/NutShell.fir.opt.mlir 20781:7]
      node _mtval_T = and(wdata, mapping_148_2_2) @[build/NutShell.fir.opt.mlir 20783:21]
      node _mtval_T_1 = not(mapping_148_2_2) @[build/NutShell.fir.opt.mlir 20785:23]
      node _mtval_T_2 = and(mtval, _mtval_T_1) @[build/NutShell.fir.opt.mlir 20787:23]
      node _mtval_T_3 = or(_mtval_T, _mtval_T_2) @[build/NutShell.fir.opt.mlir 20789:23]
      connect mtval, _mtval_T_3 @[build/NutShell.fir.opt.mlir 20790:9]
    node _T_288 = eq(addr, UInt<9>(262)) @[build/NutShell.fir.opt.mlir 20793:17]
    node _T_289 = and(_T_1, _T_288) @[build/NutShell.fir.opt.mlir 20795:17]
    when _T_289 : @[build/NutShell.fir.opt.mlir 20796:7]
      node _scounteren_T = and(wdata, mapping_149_2_2) @[build/NutShell.fir.opt.mlir 20798:26]
      node _scounteren_T_1 = not(mapping_149_2_2) @[build/NutShell.fir.opt.mlir 20800:28]
      node _scounteren_T_2 = and(scounteren, _scounteren_T_1) @[build/NutShell.fir.opt.mlir 20802:28]
      node _scounteren_T_3 = or(_scounteren_T, _scounteren_T_2) @[build/NutShell.fir.opt.mlir 20804:28]
      connect scounteren, _scounteren_T_3 @[build/NutShell.fir.opt.mlir 20805:9]
    node _T_290 = eq(addr, UInt<12>(2913)) @[build/NutShell.fir.opt.mlir 20808:17]
    node _T_291 = and(_T_1, _T_290) @[build/NutShell.fir.opt.mlir 20810:17]
    when _T_291 : @[build/NutShell.fir.opt.mlir 20811:7]
      node _perfCnts_97_T = and(wdata, perfCntsLoMapping_97_2_2) @[build/NutShell.fir.opt.mlir 20813:27]
      node _perfCnts_97_T_1 = not(perfCntsLoMapping_97_2_2) @[build/NutShell.fir.opt.mlir 20815:29]
      node _perfCnts_97_T_2 = and(perfCnts_97, _perfCnts_97_T_1) @[build/NutShell.fir.opt.mlir 20817:29]
      node _perfCnts_97_T_3 = or(_perfCnts_97_T, _perfCnts_97_T_2) @[build/NutShell.fir.opt.mlir 20819:29]
      connect perfCnts_97, _perfCnts_97_T_3 @[build/NutShell.fir.opt.mlir 20820:9]
    node _T_292 = eq(addr, UInt<10>(928)) @[build/NutShell.fir.opt.mlir 20823:17]
    node _T_293 = and(_T_1, _T_292) @[build/NutShell.fir.opt.mlir 20825:17]
    when _T_293 : @[build/NutShell.fir.opt.mlir 20826:7]
      node _pmpcfg0_T = and(wdata, mapping_151_2_2) @[build/NutShell.fir.opt.mlir 20828:23]
      node _pmpcfg0_T_1 = not(mapping_151_2_2) @[build/NutShell.fir.opt.mlir 20830:25]
      node _pmpcfg0_T_2 = and(pmpcfg0, _pmpcfg0_T_1) @[build/NutShell.fir.opt.mlir 20832:25]
      node _pmpcfg0_T_3 = or(_pmpcfg0_T, _pmpcfg0_T_2) @[build/NutShell.fir.opt.mlir 20834:25]
      connect pmpcfg0, _pmpcfg0_T_3 @[build/NutShell.fir.opt.mlir 20835:9]
    node _T_294 = eq(addr, UInt<12>(2847)) @[build/NutShell.fir.opt.mlir 20838:17]
    node _T_295 = and(_T_1, _T_294) @[build/NutShell.fir.opt.mlir 20840:17]
    when _T_295 : @[build/NutShell.fir.opt.mlir 20841:7]
      node _perfCnts_31_T = and(wdata, perfCntsLoMapping_31_2_2) @[build/NutShell.fir.opt.mlir 20843:27]
      node _perfCnts_31_T_1 = not(perfCntsLoMapping_31_2_2) @[build/NutShell.fir.opt.mlir 20845:29]
      node _perfCnts_31_T_2 = and(perfCnts_31, _perfCnts_31_T_1) @[build/NutShell.fir.opt.mlir 20847:29]
      node _perfCnts_31_T_3 = or(_perfCnts_31_T, _perfCnts_31_T_2) @[build/NutShell.fir.opt.mlir 20849:29]
      connect perfCnts_31, _perfCnts_31_T_3 @[build/NutShell.fir.opt.mlir 20850:9]
    node _T_296 = eq(addr, UInt<12>(2898)) @[build/NutShell.fir.opt.mlir 20853:17]
    node _T_297 = and(_T_1, _T_296) @[build/NutShell.fir.opt.mlir 20855:17]
    when _T_297 : @[build/NutShell.fir.opt.mlir 20856:7]
      node _perfCnts_82_T = and(wdata, perfCntsLoMapping_82_2_2) @[build/NutShell.fir.opt.mlir 20858:27]
      node _perfCnts_82_T_1 = not(perfCntsLoMapping_82_2_2) @[build/NutShell.fir.opt.mlir 20860:29]
      node _perfCnts_82_T_2 = and(perfCnts_82, _perfCnts_82_T_1) @[build/NutShell.fir.opt.mlir 20862:29]
      node _perfCnts_82_T_3 = or(_perfCnts_82_T, _perfCnts_82_T_2) @[build/NutShell.fir.opt.mlir 20864:29]
      connect perfCnts_82, _perfCnts_82_T_3 @[build/NutShell.fir.opt.mlir 20865:9]
    node _T_298 = eq(addr, UInt<12>(2864)) @[build/NutShell.fir.opt.mlir 20868:17]
    node _T_299 = and(_T_1, _T_298) @[build/NutShell.fir.opt.mlir 20870:17]
    when _T_299 : @[build/NutShell.fir.opt.mlir 20871:7]
      node _perfCnts_48_T = and(wdata, perfCntsLoMapping_48_2_2) @[build/NutShell.fir.opt.mlir 20873:27]
      node _perfCnts_48_T_1 = not(perfCntsLoMapping_48_2_2) @[build/NutShell.fir.opt.mlir 20875:29]
      node _perfCnts_48_T_2 = and(perfCnts_48, _perfCnts_48_T_1) @[build/NutShell.fir.opt.mlir 20877:29]
      node _perfCnts_48_T_3 = or(_perfCnts_48_T, _perfCnts_48_T_2) @[build/NutShell.fir.opt.mlir 20879:29]
      connect perfCnts_48, _perfCnts_48_T_3 @[build/NutShell.fir.opt.mlir 20880:9]
    node _T_300 = eq(addr, UInt<9>(322)) @[build/NutShell.fir.opt.mlir 20883:17]
    node _T_301 = and(_T_1, _T_300) @[build/NutShell.fir.opt.mlir 20885:17]
    when _T_301 : @[build/NutShell.fir.opt.mlir 20886:7]
      node _scause_T = and(wdata, mapping_155_2_2) @[build/NutShell.fir.opt.mlir 20888:22]
      node _scause_T_1 = not(mapping_155_2_2) @[build/NutShell.fir.opt.mlir 20890:24]
      node _scause_T_2 = and(scause, _scause_T_1) @[build/NutShell.fir.opt.mlir 20892:24]
      node _scause_T_3 = or(_scause_T, _scause_T_2) @[build/NutShell.fir.opt.mlir 20894:24]
      connect scause, _scause_T_3 @[build/NutShell.fir.opt.mlir 20895:9]
    node _T_302 = eq(addr, UInt<12>(2879)) @[build/NutShell.fir.opt.mlir 20898:17]
    node _T_303 = and(_T_1, _T_302) @[build/NutShell.fir.opt.mlir 20900:17]
    when _T_303 : @[build/NutShell.fir.opt.mlir 20901:7]
      node _perfCnts_63_T = and(wdata, perfCntsLoMapping_63_2_2) @[build/NutShell.fir.opt.mlir 20903:27]
      node _perfCnts_63_T_1 = not(perfCntsLoMapping_63_2_2) @[build/NutShell.fir.opt.mlir 20905:29]
      node _perfCnts_63_T_2 = and(perfCnts_63, _perfCnts_63_T_1) @[build/NutShell.fir.opt.mlir 20907:29]
      node _perfCnts_63_T_3 = or(_perfCnts_63_T, _perfCnts_63_T_2) @[build/NutShell.fir.opt.mlir 20909:29]
      connect perfCnts_63, _perfCnts_63_T_3 @[build/NutShell.fir.opt.mlir 20910:9]
    node _T_304 = eq(addr, UInt<12>(2881)) @[build/NutShell.fir.opt.mlir 20913:17]
    node _T_305 = and(_T_1, _T_304) @[build/NutShell.fir.opt.mlir 20915:17]
    when _T_305 : @[build/NutShell.fir.opt.mlir 20916:7]
      node _perfCnts_65_T = and(wdata, perfCntsLoMapping_65_2_2) @[build/NutShell.fir.opt.mlir 20918:27]
      node _perfCnts_65_T_1 = not(perfCntsLoMapping_65_2_2) @[build/NutShell.fir.opt.mlir 20920:29]
      node _perfCnts_65_T_2 = and(perfCnts_65, _perfCnts_65_T_1) @[build/NutShell.fir.opt.mlir 20922:29]
      node _perfCnts_65_T_3 = or(_perfCnts_65_T, _perfCnts_65_T_2) @[build/NutShell.fir.opt.mlir 20924:29]
      connect perfCnts_65, _perfCnts_65_T_3 @[build/NutShell.fir.opt.mlir 20925:9]
    node _T_306 = eq(addr, UInt<12>(2887)) @[build/NutShell.fir.opt.mlir 20928:17]
    node _T_307 = and(_T_1, _T_306) @[build/NutShell.fir.opt.mlir 20930:17]
    when _T_307 : @[build/NutShell.fir.opt.mlir 20931:7]
      node _perfCnts_71_T = and(wdata, perfCntsLoMapping_71_2_2) @[build/NutShell.fir.opt.mlir 20933:27]
      node _perfCnts_71_T_1 = not(perfCntsLoMapping_71_2_2) @[build/NutShell.fir.opt.mlir 20935:29]
      node _perfCnts_71_T_2 = and(perfCnts_71, _perfCnts_71_T_1) @[build/NutShell.fir.opt.mlir 20937:29]
      node _perfCnts_71_T_3 = or(_perfCnts_71_T, _perfCnts_71_T_2) @[build/NutShell.fir.opt.mlir 20939:29]
      connect perfCnts_71, _perfCnts_71_T_3 @[build/NutShell.fir.opt.mlir 20940:9]
    node _T_308 = eq(addr, UInt<12>(2834)) @[build/NutShell.fir.opt.mlir 20943:17]
    node _T_309 = and(_T_1, _T_308) @[build/NutShell.fir.opt.mlir 20945:17]
    when _T_309 : @[build/NutShell.fir.opt.mlir 20946:7]
      node _perfCnts_18_T = and(wdata, perfCntsLoMapping_18_2_2) @[build/NutShell.fir.opt.mlir 20948:27]
      node _perfCnts_18_T_1 = not(perfCntsLoMapping_18_2_2) @[build/NutShell.fir.opt.mlir 20950:29]
      node _perfCnts_18_T_2 = and(perfCnts_18, _perfCnts_18_T_1) @[build/NutShell.fir.opt.mlir 20952:29]
      node _perfCnts_18_T_3 = or(_perfCnts_18_T, _perfCnts_18_T_2) @[build/NutShell.fir.opt.mlir 20954:29]
      connect perfCnts_18, _perfCnts_18_T_3 @[build/NutShell.fir.opt.mlir 20955:9]
    node _T_310 = eq(addr, UInt<12>(2866)) @[build/NutShell.fir.opt.mlir 20958:17]
    node _T_311 = and(_T_1, _T_310) @[build/NutShell.fir.opt.mlir 20960:17]
    when _T_311 : @[build/NutShell.fir.opt.mlir 20961:7]
      node _perfCnts_50_T = and(wdata, perfCntsLoMapping_50_2_2) @[build/NutShell.fir.opt.mlir 20963:27]
      node _perfCnts_50_T_1 = not(perfCntsLoMapping_50_2_2) @[build/NutShell.fir.opt.mlir 20965:29]
      node _perfCnts_50_T_2 = and(perfCnts_50, _perfCnts_50_T_1) @[build/NutShell.fir.opt.mlir 20967:29]
      node _perfCnts_50_T_3 = or(_perfCnts_50_T, _perfCnts_50_T_2) @[build/NutShell.fir.opt.mlir 20969:29]
      connect perfCnts_50, _perfCnts_50_T_3 @[build/NutShell.fir.opt.mlir 20970:9]
    node _T_312 = eq(addr, UInt<12>(2832)) @[build/NutShell.fir.opt.mlir 20973:17]
    node _T_313 = and(_T_1, _T_312) @[build/NutShell.fir.opt.mlir 20975:17]
    when _T_313 : @[build/NutShell.fir.opt.mlir 20976:7]
      node _perfCnts_16_T = and(wdata, perfCntsLoMapping_16_2_2) @[build/NutShell.fir.opt.mlir 20978:27]
      node _perfCnts_16_T_1 = not(perfCntsLoMapping_16_2_2) @[build/NutShell.fir.opt.mlir 20980:29]
      node _perfCnts_16_T_2 = and(perfCnts_16, _perfCnts_16_T_1) @[build/NutShell.fir.opt.mlir 20982:29]
      node _perfCnts_16_T_3 = or(_perfCnts_16_T, _perfCnts_16_T_2) @[build/NutShell.fir.opt.mlir 20984:29]
      connect perfCnts_16, _perfCnts_16_T_3 @[build/NutShell.fir.opt.mlir 20985:9]
    wire isIllegalAddr : UInt<1> @[build/NutShell.fir.opt.mlir 20987:24]
    node _isIllegalAddr_illegalAddr_T = eq(UInt<12>(2822), addr) @[build/NutShell.fir.opt.mlir 20989:39]
    node _isIllegalAddr_illegalAddr_T_1 = mux(_isIllegalAddr_illegalAddr_T, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 20991:41]
    node _isIllegalAddr_illegalAddr_T_2 = eq(UInt<12>(2889), addr) @[build/NutShell.fir.opt.mlir 20993:41]
    node _isIllegalAddr_illegalAddr_T_3 = mux(_isIllegalAddr_illegalAddr_T_2, UInt<1>(0), _isIllegalAddr_illegalAddr_T_1) @[build/NutShell.fir.opt.mlir 20995:41]
    node _isIllegalAddr_illegalAddr_T_4 = eq(UInt<12>(2876), addr) @[build/NutShell.fir.opt.mlir 20997:41]
    node _isIllegalAddr_illegalAddr_T_5 = mux(_isIllegalAddr_illegalAddr_T_4, UInt<1>(0), _isIllegalAddr_illegalAddr_T_3) @[build/NutShell.fir.opt.mlir 20999:41]
    node _isIllegalAddr_illegalAddr_T_6 = eq(UInt<12>(2921), addr) @[build/NutShell.fir.opt.mlir 21001:41]
    node _isIllegalAddr_illegalAddr_T_7 = mux(_isIllegalAddr_illegalAddr_T_6, UInt<1>(0), _isIllegalAddr_illegalAddr_T_5) @[build/NutShell.fir.opt.mlir 21003:41]
    node _isIllegalAddr_illegalAddr_T_8 = eq(UInt<12>(2940), addr) @[build/NutShell.fir.opt.mlir 21005:41]
    node _isIllegalAddr_illegalAddr_T_9 = mux(_isIllegalAddr_illegalAddr_T_8, UInt<1>(0), _isIllegalAddr_illegalAddr_T_7) @[build/NutShell.fir.opt.mlir 21007:41]
    node _isIllegalAddr_illegalAddr_T_10 = eq(UInt<12>(3858), addr) @[build/NutShell.fir.opt.mlir 21009:42]
    node _isIllegalAddr_illegalAddr_T_11 = mux(_isIllegalAddr_illegalAddr_T_10, UInt<1>(0), _isIllegalAddr_illegalAddr_T_9) @[build/NutShell.fir.opt.mlir 21011:42]
    node _isIllegalAddr_illegalAddr_T_12 = eq(UInt<12>(2908), addr) @[build/NutShell.fir.opt.mlir 21013:42]
    node _isIllegalAddr_illegalAddr_T_13 = mux(_isIllegalAddr_illegalAddr_T_12, UInt<1>(0), _isIllegalAddr_illegalAddr_T_11) @[build/NutShell.fir.opt.mlir 21015:42]
    node _isIllegalAddr_illegalAddr_T_14 = eq(UInt<12>(2837), addr) @[build/NutShell.fir.opt.mlir 21017:42]
    node _isIllegalAddr_illegalAddr_T_15 = mux(_isIllegalAddr_illegalAddr_T_14, UInt<1>(0), _isIllegalAddr_illegalAddr_T_13) @[build/NutShell.fir.opt.mlir 21019:42]
    node _isIllegalAddr_illegalAddr_T_16 = eq(UInt<12>(2854), addr) @[build/NutShell.fir.opt.mlir 21021:42]
    node _isIllegalAddr_illegalAddr_T_17 = mux(_isIllegalAddr_illegalAddr_T_16, UInt<1>(0), _isIllegalAddr_illegalAddr_T_15) @[build/NutShell.fir.opt.mlir 21023:42]
    node _isIllegalAddr_illegalAddr_T_18 = eq(UInt<9>(384), addr) @[build/NutShell.fir.opt.mlir 21025:42]
    node _isIllegalAddr_illegalAddr_T_19 = mux(_isIllegalAddr_illegalAddr_T_18, UInt<1>(0), _isIllegalAddr_illegalAddr_T_17) @[build/NutShell.fir.opt.mlir 21027:42]
    node _isIllegalAddr_illegalAddr_T_20 = eq(UInt<12>(2918), addr) @[build/NutShell.fir.opt.mlir 21029:42]
    node _isIllegalAddr_illegalAddr_T_21 = mux(_isIllegalAddr_illegalAddr_T_20, UInt<1>(0), _isIllegalAddr_illegalAddr_T_19) @[build/NutShell.fir.opt.mlir 21031:42]
    node _isIllegalAddr_illegalAddr_T_22 = eq(UInt<12>(2933), addr) @[build/NutShell.fir.opt.mlir 21033:42]
    node _isIllegalAddr_illegalAddr_T_23 = mux(_isIllegalAddr_illegalAddr_T_22, UInt<1>(0), _isIllegalAddr_illegalAddr_T_21) @[build/NutShell.fir.opt.mlir 21035:42]
    node _isIllegalAddr_illegalAddr_T_24 = eq(UInt<12>(2844), addr) @[build/NutShell.fir.opt.mlir 21037:42]
    node _isIllegalAddr_illegalAddr_T_25 = mux(_isIllegalAddr_illegalAddr_T_24, UInt<1>(0), _isIllegalAddr_illegalAddr_T_23) @[build/NutShell.fir.opt.mlir 21039:42]
    node _isIllegalAddr_illegalAddr_T_26 = eq(UInt<10>(930), addr) @[build/NutShell.fir.opt.mlir 21041:42]
    node _isIllegalAddr_illegalAddr_T_27 = mux(_isIllegalAddr_illegalAddr_T_26, UInt<1>(0), _isIllegalAddr_illegalAddr_T_25) @[build/NutShell.fir.opt.mlir 21043:42]
    node _isIllegalAddr_illegalAddr_T_28 = eq(UInt<12>(2901), addr) @[build/NutShell.fir.opt.mlir 21045:42]
    node _isIllegalAddr_illegalAddr_T_29 = mux(_isIllegalAddr_illegalAddr_T_28, UInt<1>(0), _isIllegalAddr_illegalAddr_T_27) @[build/NutShell.fir.opt.mlir 21047:42]
    node _isIllegalAddr_illegalAddr_T_30 = eq(UInt<10>(945), addr) @[build/NutShell.fir.opt.mlir 21049:42]
    node _isIllegalAddr_illegalAddr_T_31 = mux(_isIllegalAddr_illegalAddr_T_30, UInt<1>(0), _isIllegalAddr_illegalAddr_T_29) @[build/NutShell.fir.opt.mlir 21051:42]
    node _isIllegalAddr_illegalAddr_T_32 = eq(UInt<12>(2886), addr) @[build/NutShell.fir.opt.mlir 21053:42]
    node _isIllegalAddr_illegalAddr_T_33 = mux(_isIllegalAddr_illegalAddr_T_32, UInt<1>(0), _isIllegalAddr_illegalAddr_T_31) @[build/NutShell.fir.opt.mlir 21055:42]
    node _isIllegalAddr_illegalAddr_T_34 = eq(UInt<9>(320), addr) @[build/NutShell.fir.opt.mlir 21057:42]
    node _isIllegalAddr_illegalAddr_T_35 = mux(_isIllegalAddr_illegalAddr_T_34, UInt<1>(0), _isIllegalAddr_illegalAddr_T_33) @[build/NutShell.fir.opt.mlir 21059:42]
    node _isIllegalAddr_illegalAddr_T_36 = eq(UInt<12>(2825), addr) @[build/NutShell.fir.opt.mlir 21061:42]
    node _isIllegalAddr_illegalAddr_T_37 = mux(_isIllegalAddr_illegalAddr_T_36, UInt<1>(0), _isIllegalAddr_illegalAddr_T_35) @[build/NutShell.fir.opt.mlir 21063:42]
    node _isIllegalAddr_illegalAddr_T_38 = eq(UInt<12>(2819), addr) @[build/NutShell.fir.opt.mlir 21065:42]
    node _isIllegalAddr_illegalAddr_T_39 = mux(_isIllegalAddr_illegalAddr_T_38, UInt<1>(0), _isIllegalAddr_illegalAddr_T_37) @[build/NutShell.fir.opt.mlir 21067:42]
    node _isIllegalAddr_illegalAddr_T_40 = eq(UInt<12>(2869), addr) @[build/NutShell.fir.opt.mlir 21069:42]
    node _isIllegalAddr_illegalAddr_T_41 = mux(_isIllegalAddr_illegalAddr_T_40, UInt<1>(0), _isIllegalAddr_illegalAddr_T_39) @[build/NutShell.fir.opt.mlir 21071:42]
    node _isIllegalAddr_illegalAddr_T_42 = eq(UInt<12>(2916), addr) @[build/NutShell.fir.opt.mlir 21073:42]
    node _isIllegalAddr_illegalAddr_T_43 = mux(_isIllegalAddr_illegalAddr_T_42, UInt<1>(0), _isIllegalAddr_illegalAddr_T_41) @[build/NutShell.fir.opt.mlir 21075:42]
    node _isIllegalAddr_illegalAddr_T_44 = eq(UInt<12>(2897), addr) @[build/NutShell.fir.opt.mlir 21077:42]
    node _isIllegalAddr_illegalAddr_T_45 = mux(_isIllegalAddr_illegalAddr_T_44, UInt<1>(0), _isIllegalAddr_illegalAddr_T_43) @[build/NutShell.fir.opt.mlir 21079:42]
    node _isIllegalAddr_illegalAddr_T_46 = eq(UInt<12>(2857), addr) @[build/NutShell.fir.opt.mlir 21081:42]
    node _isIllegalAddr_illegalAddr_T_47 = mux(_isIllegalAddr_illegalAddr_T_46, UInt<1>(0), _isIllegalAddr_illegalAddr_T_45) @[build/NutShell.fir.opt.mlir 21083:42]
    node _isIllegalAddr_illegalAddr_T_48 = eq(UInt<10>(770), addr) @[build/NutShell.fir.opt.mlir 21085:42]
    node _isIllegalAddr_illegalAddr_T_49 = mux(_isIllegalAddr_illegalAddr_T_48, UInt<1>(0), _isIllegalAddr_illegalAddr_T_47) @[build/NutShell.fir.opt.mlir 21087:42]
    node _isIllegalAddr_illegalAddr_T_50 = eq(UInt<12>(2929), addr) @[build/NutShell.fir.opt.mlir 21089:42]
    node _isIllegalAddr_illegalAddr_T_51 = mux(_isIllegalAddr_illegalAddr_T_50, UInt<1>(0), _isIllegalAddr_illegalAddr_T_49) @[build/NutShell.fir.opt.mlir 21091:42]
    node _isIllegalAddr_illegalAddr_T_52 = eq(UInt<12>(2852), addr) @[build/NutShell.fir.opt.mlir 21093:42]
    node _isIllegalAddr_illegalAddr_T_53 = mux(_isIllegalAddr_illegalAddr_T_52, UInt<1>(0), _isIllegalAddr_illegalAddr_T_51) @[build/NutShell.fir.opt.mlir 21095:42]
    node _isIllegalAddr_illegalAddr_T_54 = eq(UInt<9>(261), addr) @[build/NutShell.fir.opt.mlir 21097:42]
    node _isIllegalAddr_illegalAddr_T_55 = mux(_isIllegalAddr_illegalAddr_T_54, UInt<1>(0), _isIllegalAddr_illegalAddr_T_53) @[build/NutShell.fir.opt.mlir 21099:42]
    node _isIllegalAddr_illegalAddr_T_56 = eq(UInt<12>(2829), addr) @[build/NutShell.fir.opt.mlir 21101:42]
    node _isIllegalAddr_illegalAddr_T_57 = mux(_isIllegalAddr_illegalAddr_T_56, UInt<1>(0), _isIllegalAddr_illegalAddr_T_55) @[build/NutShell.fir.opt.mlir 21103:42]
    node _isIllegalAddr_illegalAddr_T_58 = eq(UInt<12>(2925), addr) @[build/NutShell.fir.opt.mlir 21105:42]
    node _isIllegalAddr_illegalAddr_T_59 = mux(_isIllegalAddr_illegalAddr_T_58, UInt<1>(0), _isIllegalAddr_illegalAddr_T_57) @[build/NutShell.fir.opt.mlir 21107:42]
    node _isIllegalAddr_illegalAddr_T_60 = eq(UInt<12>(2893), addr) @[build/NutShell.fir.opt.mlir 21109:42]
    node _isIllegalAddr_illegalAddr_T_61 = mux(_isIllegalAddr_illegalAddr_T_60, UInt<1>(0), _isIllegalAddr_illegalAddr_T_59) @[build/NutShell.fir.opt.mlir 21111:42]
    node _isIllegalAddr_illegalAddr_T_62 = eq(UInt<9>(321), addr) @[build/NutShell.fir.opt.mlir 21113:42]
    node _isIllegalAddr_illegalAddr_T_63 = mux(_isIllegalAddr_illegalAddr_T_62, UInt<1>(0), _isIllegalAddr_illegalAddr_T_61) @[build/NutShell.fir.opt.mlir 21115:42]
    node _isIllegalAddr_illegalAddr_T_64 = eq(UInt<12>(2880), addr) @[build/NutShell.fir.opt.mlir 21117:42]
    node _isIllegalAddr_illegalAddr_T_65 = mux(_isIllegalAddr_illegalAddr_T_64, UInt<1>(0), _isIllegalAddr_illegalAddr_T_63) @[build/NutShell.fir.opt.mlir 21119:42]
    node _isIllegalAddr_illegalAddr_T_66 = eq(UInt<10>(834), addr) @[build/NutShell.fir.opt.mlir 21121:42]
    node _isIllegalAddr_illegalAddr_T_67 = mux(_isIllegalAddr_illegalAddr_T_66, UInt<1>(0), _isIllegalAddr_illegalAddr_T_65) @[build/NutShell.fir.opt.mlir 21123:42]
    node _isIllegalAddr_illegalAddr_T_68 = eq(UInt<12>(2833), addr) @[build/NutShell.fir.opt.mlir 21125:42]
    node _isIllegalAddr_illegalAddr_T_69 = mux(_isIllegalAddr_illegalAddr_T_68, UInt<1>(0), _isIllegalAddr_illegalAddr_T_67) @[build/NutShell.fir.opt.mlir 21127:42]
    node _isIllegalAddr_illegalAddr_T_70 = eq(UInt<12>(2861), addr) @[build/NutShell.fir.opt.mlir 21129:42]
    node _isIllegalAddr_illegalAddr_T_71 = mux(_isIllegalAddr_illegalAddr_T_70, UInt<1>(0), _isIllegalAddr_illegalAddr_T_69) @[build/NutShell.fir.opt.mlir 21131:42]
    node _isIllegalAddr_illegalAddr_T_72 = eq(UInt<10>(774), addr) @[build/NutShell.fir.opt.mlir 21133:42]
    node _isIllegalAddr_illegalAddr_T_73 = mux(_isIllegalAddr_illegalAddr_T_72, UInt<1>(0), _isIllegalAddr_illegalAddr_T_71) @[build/NutShell.fir.opt.mlir 21135:42]
    node _isIllegalAddr_illegalAddr_T_74 = eq(UInt<12>(2884), addr) @[build/NutShell.fir.opt.mlir 21137:42]
    node _isIllegalAddr_illegalAddr_T_75 = mux(_isIllegalAddr_illegalAddr_T_74, UInt<1>(0), _isIllegalAddr_illegalAddr_T_73) @[build/NutShell.fir.opt.mlir 21139:42]
    node _isIllegalAddr_illegalAddr_T_76 = eq(UInt<12>(2922), addr) @[build/NutShell.fir.opt.mlir 21141:42]
    node _isIllegalAddr_illegalAddr_T_77 = mux(_isIllegalAddr_illegalAddr_T_76, UInt<1>(0), _isIllegalAddr_illegalAddr_T_75) @[build/NutShell.fir.opt.mlir 21143:42]
    node _isIllegalAddr_illegalAddr_T_78 = eq(UInt<12>(3857), addr) @[build/NutShell.fir.opt.mlir 21145:42]
    node _isIllegalAddr_illegalAddr_T_79 = mux(_isIllegalAddr_illegalAddr_T_78, UInt<1>(0), _isIllegalAddr_illegalAddr_T_77) @[build/NutShell.fir.opt.mlir 21147:42]
    node _isIllegalAddr_illegalAddr_T_80 = eq(UInt<12>(2910), addr) @[build/NutShell.fir.opt.mlir 21149:42]
    node _isIllegalAddr_illegalAddr_T_81 = mux(_isIllegalAddr_illegalAddr_T_80, UInt<1>(0), _isIllegalAddr_illegalAddr_T_79) @[build/NutShell.fir.opt.mlir 21151:42]
    node _isIllegalAddr_illegalAddr_T_82 = eq(UInt<12>(2905), addr) @[build/NutShell.fir.opt.mlir 21153:42]
    node _isIllegalAddr_illegalAddr_T_83 = mux(_isIllegalAddr_illegalAddr_T_82, UInt<1>(0), _isIllegalAddr_illegalAddr_T_81) @[build/NutShell.fir.opt.mlir 21155:42]
    node _isIllegalAddr_illegalAddr_T_84 = eq(UInt<9>(260), addr) @[build/NutShell.fir.opt.mlir 21157:42]
    node _isIllegalAddr_illegalAddr_T_85 = mux(_isIllegalAddr_illegalAddr_T_84, UInt<1>(0), _isIllegalAddr_illegalAddr_T_83) @[build/NutShell.fir.opt.mlir 21159:42]
    node _isIllegalAddr_illegalAddr_T_86 = eq(UInt<12>(2937), addr) @[build/NutShell.fir.opt.mlir 21161:42]
    node _isIllegalAddr_illegalAddr_T_87 = mux(_isIllegalAddr_illegalAddr_T_86, UInt<1>(0), _isIllegalAddr_illegalAddr_T_85) @[build/NutShell.fir.opt.mlir 21163:42]
    node _isIllegalAddr_illegalAddr_T_88 = eq(UInt<12>(2890), addr) @[build/NutShell.fir.opt.mlir 21165:42]
    node _isIllegalAddr_illegalAddr_T_89 = mux(_isIllegalAddr_illegalAddr_T_88, UInt<1>(0), _isIllegalAddr_illegalAddr_T_87) @[build/NutShell.fir.opt.mlir 21167:42]
    node _isIllegalAddr_illegalAddr_T_90 = eq(UInt<12>(2873), addr) @[build/NutShell.fir.opt.mlir 21169:42]
    node _isIllegalAddr_illegalAddr_T_91 = mux(_isIllegalAddr_illegalAddr_T_90, UInt<1>(0), _isIllegalAddr_illegalAddr_T_89) @[build/NutShell.fir.opt.mlir 21171:42]
    node _isIllegalAddr_illegalAddr_T_92 = eq(UInt<12>(2872), addr) @[build/NutShell.fir.opt.mlir 21173:42]
    node _isIllegalAddr_illegalAddr_T_93 = mux(_isIllegalAddr_illegalAddr_T_92, UInt<1>(0), _isIllegalAddr_illegalAddr_T_91) @[build/NutShell.fir.opt.mlir 21175:42]
    node _isIllegalAddr_illegalAddr_T_94 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 21177:42]
    node _isIllegalAddr_illegalAddr_T_95 = mux(_isIllegalAddr_illegalAddr_T_94, UInt<1>(0), _isIllegalAddr_illegalAddr_T_93) @[build/NutShell.fir.opt.mlir 21179:42]
    node _isIllegalAddr_illegalAddr_T_96 = eq(UInt<12>(2826), addr) @[build/NutShell.fir.opt.mlir 21181:42]
    node _isIllegalAddr_illegalAddr_T_97 = mux(_isIllegalAddr_illegalAddr_T_96, UInt<1>(0), _isIllegalAddr_illegalAddr_T_95) @[build/NutShell.fir.opt.mlir 21183:42]
    node _isIllegalAddr_illegalAddr_T_98 = eq(UInt<12>(2820), addr) @[build/NutShell.fir.opt.mlir 21185:42]
    node _isIllegalAddr_illegalAddr_T_99 = mux(_isIllegalAddr_illegalAddr_T_98, UInt<1>(0), _isIllegalAddr_illegalAddr_T_97) @[build/NutShell.fir.opt.mlir 21187:42]
    node _isIllegalAddr_illegalAddr_T_100 = eq(UInt<12>(2840), addr) @[build/NutShell.fir.opt.mlir 21189:43]
    node _isIllegalAddr_illegalAddr_T_101 = mux(_isIllegalAddr_illegalAddr_T_100, UInt<1>(0), _isIllegalAddr_illegalAddr_T_99) @[build/NutShell.fir.opt.mlir 21191:43]
    node _isIllegalAddr_illegalAddr_T_102 = eq(UInt<12>(2895), addr) @[build/NutShell.fir.opt.mlir 21193:43]
    node _isIllegalAddr_illegalAddr_T_103 = mux(_isIllegalAddr_illegalAddr_T_102, UInt<1>(0), _isIllegalAddr_illegalAddr_T_101) @[build/NutShell.fir.opt.mlir 21195:43]
    node _isIllegalAddr_illegalAddr_T_104 = eq(UInt<12>(2841), addr) @[build/NutShell.fir.opt.mlir 21197:43]
    node _isIllegalAddr_illegalAddr_T_105 = mux(_isIllegalAddr_illegalAddr_T_104, UInt<1>(0), _isIllegalAddr_illegalAddr_T_103) @[build/NutShell.fir.opt.mlir 21199:43]
    node _isIllegalAddr_illegalAddr_T_106 = eq(UInt<12>(2858), addr) @[build/NutShell.fir.opt.mlir 21201:43]
    node _isIllegalAddr_illegalAddr_T_107 = mux(_isIllegalAddr_illegalAddr_T_106, UInt<1>(0), _isIllegalAddr_illegalAddr_T_105) @[build/NutShell.fir.opt.mlir 21203:43]
    node _isIllegalAddr_illegalAddr_T_108 = eq(UInt<9>(256), addr) @[build/NutShell.fir.opt.mlir 21205:43]
    node _isIllegalAddr_illegalAddr_T_109 = mux(_isIllegalAddr_illegalAddr_T_108, UInt<1>(0), _isIllegalAddr_illegalAddr_T_107) @[build/NutShell.fir.opt.mlir 21207:43]
    node _isIllegalAddr_illegalAddr_T_110 = eq(UInt<12>(2877), addr) @[build/NutShell.fir.opt.mlir 21209:43]
    node _isIllegalAddr_illegalAddr_T_111 = mux(_isIllegalAddr_illegalAddr_T_110, UInt<1>(0), _isIllegalAddr_illegalAddr_T_109) @[build/NutShell.fir.opt.mlir 21211:43]
    node _isIllegalAddr_illegalAddr_T_112 = eq(UInt<12>(2830), addr) @[build/NutShell.fir.opt.mlir 21213:43]
    node _isIllegalAddr_illegalAddr_T_113 = mux(_isIllegalAddr_illegalAddr_T_112, UInt<1>(0), _isIllegalAddr_illegalAddr_T_111) @[build/NutShell.fir.opt.mlir 21215:43]
    node _isIllegalAddr_illegalAddr_T_114 = eq(UInt<12>(2868), addr) @[build/NutShell.fir.opt.mlir 21217:43]
    node _isIllegalAddr_illegalAddr_T_115 = mux(_isIllegalAddr_illegalAddr_T_114, UInt<1>(0), _isIllegalAddr_illegalAddr_T_113) @[build/NutShell.fir.opt.mlir 21219:43]
    node _isIllegalAddr_illegalAddr_T_116 = eq(UInt<12>(2932), addr) @[build/NutShell.fir.opt.mlir 21221:43]
    node _isIllegalAddr_illegalAddr_T_117 = mux(_isIllegalAddr_illegalAddr_T_116, UInt<1>(0), _isIllegalAddr_illegalAddr_T_115) @[build/NutShell.fir.opt.mlir 21223:43]
    node _isIllegalAddr_illegalAddr_T_118 = eq(UInt<12>(2836), addr) @[build/NutShell.fir.opt.mlir 21225:43]
    node _isIllegalAddr_illegalAddr_T_119 = mux(_isIllegalAddr_illegalAddr_T_118, UInt<1>(0), _isIllegalAddr_illegalAddr_T_117) @[build/NutShell.fir.opt.mlir 21227:43]
    node _isIllegalAddr_illegalAddr_T_120 = eq(UInt<12>(2845), addr) @[build/NutShell.fir.opt.mlir 21229:43]
    node _isIllegalAddr_illegalAddr_T_121 = mux(_isIllegalAddr_illegalAddr_T_120, UInt<1>(0), _isIllegalAddr_illegalAddr_T_119) @[build/NutShell.fir.opt.mlir 21231:43]
    node _isIllegalAddr_illegalAddr_T_122 = eq(UInt<12>(2900), addr) @[build/NutShell.fir.opt.mlir 21233:43]
    node _isIllegalAddr_illegalAddr_T_123 = mux(_isIllegalAddr_illegalAddr_T_122, UInt<1>(0), _isIllegalAddr_illegalAddr_T_121) @[build/NutShell.fir.opt.mlir 21235:43]
    node _isIllegalAddr_illegalAddr_T_124 = eq(UInt<12>(2851), addr) @[build/NutShell.fir.opt.mlir 21237:43]
    node _isIllegalAddr_illegalAddr_T_125 = mux(_isIllegalAddr_illegalAddr_T_124, UInt<1>(0), _isIllegalAddr_illegalAddr_T_123) @[build/NutShell.fir.opt.mlir 21239:43]
    node _isIllegalAddr_illegalAddr_T_126 = eq(UInt<12>(2862), addr) @[build/NutShell.fir.opt.mlir 21241:43]
    node _isIllegalAddr_illegalAddr_T_127 = mux(_isIllegalAddr_illegalAddr_T_126, UInt<1>(0), _isIllegalAddr_illegalAddr_T_125) @[build/NutShell.fir.opt.mlir 21243:43]
    node _isIllegalAddr_illegalAddr_T_128 = eq(UInt<12>(2926), addr) @[build/NutShell.fir.opt.mlir 21245:43]
    node _isIllegalAddr_illegalAddr_T_129 = mux(_isIllegalAddr_illegalAddr_T_128, UInt<1>(0), _isIllegalAddr_illegalAddr_T_127) @[build/NutShell.fir.opt.mlir 21247:43]
    node _isIllegalAddr_illegalAddr_T_130 = eq(UInt<12>(2883), addr) @[build/NutShell.fir.opt.mlir 21249:43]
    node _isIllegalAddr_illegalAddr_T_131 = mux(_isIllegalAddr_illegalAddr_T_130, UInt<1>(0), _isIllegalAddr_illegalAddr_T_129) @[build/NutShell.fir.opt.mlir 21251:43]
    node _isIllegalAddr_illegalAddr_T_132 = eq(UInt<12>(2915), addr) @[build/NutShell.fir.opt.mlir 21253:43]
    node _isIllegalAddr_illegalAddr_T_133 = mux(_isIllegalAddr_illegalAddr_T_132, UInt<1>(0), _isIllegalAddr_illegalAddr_T_131) @[build/NutShell.fir.opt.mlir 21255:43]
    node _isIllegalAddr_illegalAddr_T_134 = eq(UInt<10>(773), addr) @[build/NutShell.fir.opt.mlir 21257:43]
    node _isIllegalAddr_illegalAddr_T_135 = mux(_isIllegalAddr_illegalAddr_T_134, UInt<1>(0), _isIllegalAddr_illegalAddr_T_133) @[build/NutShell.fir.opt.mlir 21259:43]
    node _isIllegalAddr_illegalAddr_T_136 = eq(UInt<12>(2909), addr) @[build/NutShell.fir.opt.mlir 21261:43]
    node _isIllegalAddr_illegalAddr_T_137 = mux(_isIllegalAddr_illegalAddr_T_136, UInt<1>(0), _isIllegalAddr_illegalAddr_T_135) @[build/NutShell.fir.opt.mlir 21263:43]
    node _isIllegalAddr_illegalAddr_T_138 = eq(UInt<12>(2936), addr) @[build/NutShell.fir.opt.mlir 21265:43]
    node _isIllegalAddr_illegalAddr_T_139 = mux(_isIllegalAddr_illegalAddr_T_138, UInt<1>(0), _isIllegalAddr_illegalAddr_T_137) @[build/NutShell.fir.opt.mlir 21267:43]
    node _isIllegalAddr_illegalAddr_T_140 = eq(UInt<12>(2904), addr) @[build/NutShell.fir.opt.mlir 21269:43]
    node _isIllegalAddr_illegalAddr_T_141 = mux(_isIllegalAddr_illegalAddr_T_140, UInt<1>(0), _isIllegalAddr_illegalAddr_T_139) @[build/NutShell.fir.opt.mlir 21271:43]
    node _isIllegalAddr_illegalAddr_T_142 = eq(UInt<12>(2941), addr) @[build/NutShell.fir.opt.mlir 21273:43]
    node _isIllegalAddr_illegalAddr_T_143 = mux(_isIllegalAddr_illegalAddr_T_142, UInt<1>(0), _isIllegalAddr_illegalAddr_T_141) @[build/NutShell.fir.opt.mlir 21275:43]
    node _isIllegalAddr_illegalAddr_T_144 = eq(UInt<12>(2894), addr) @[build/NutShell.fir.opt.mlir 21277:43]
    node _isIllegalAddr_illegalAddr_T_145 = mux(_isIllegalAddr_illegalAddr_T_144, UInt<1>(0), _isIllegalAddr_illegalAddr_T_143) @[build/NutShell.fir.opt.mlir 21279:43]
    node _isIllegalAddr_illegalAddr_T_146 = eq(UInt<12>(2849), addr) @[build/NutShell.fir.opt.mlir 21281:43]
    node _isIllegalAddr_illegalAddr_T_147 = mux(_isIllegalAddr_illegalAddr_T_146, UInt<1>(0), _isIllegalAddr_illegalAddr_T_145) @[build/NutShell.fir.opt.mlir 21283:43]
    node _isIllegalAddr_illegalAddr_T_148 = eq(UInt<10>(772), addr) @[build/NutShell.fir.opt.mlir 21285:43]
    node _isIllegalAddr_illegalAddr_T_149 = mux(_isIllegalAddr_illegalAddr_T_148, UInt<1>(0), _isIllegalAddr_illegalAddr_T_147) @[build/NutShell.fir.opt.mlir 21287:43]
    node _isIllegalAddr_illegalAddr_T_150 = eq(UInt<12>(2817), addr) @[build/NutShell.fir.opt.mlir 21289:43]
    node _isIllegalAddr_illegalAddr_T_151 = mux(_isIllegalAddr_illegalAddr_T_150, UInt<1>(0), _isIllegalAddr_illegalAddr_T_149) @[build/NutShell.fir.opt.mlir 21291:43]
    node _isIllegalAddr_illegalAddr_T_152 = eq(UInt<12>(2827), addr) @[build/NutShell.fir.opt.mlir 21293:43]
    node _isIllegalAddr_illegalAddr_T_153 = mux(_isIllegalAddr_illegalAddr_T_152, UInt<1>(0), _isIllegalAddr_illegalAddr_T_151) @[build/NutShell.fir.opt.mlir 21295:43]
    node _isIllegalAddr_illegalAddr_T_154 = eq(UInt<12>(2859), addr) @[build/NutShell.fir.opt.mlir 21297:43]
    node _isIllegalAddr_illegalAddr_T_155 = mux(_isIllegalAddr_illegalAddr_T_154, UInt<1>(0), _isIllegalAddr_illegalAddr_T_153) @[build/NutShell.fir.opt.mlir 21299:43]
    node _isIllegalAddr_illegalAddr_T_156 = eq(UInt<12>(2938), addr) @[build/NutShell.fir.opt.mlir 21301:43]
    node _isIllegalAddr_illegalAddr_T_157 = mux(_isIllegalAddr_illegalAddr_T_156, UInt<1>(0), _isIllegalAddr_illegalAddr_T_155) @[build/NutShell.fir.opt.mlir 21303:43]
    node _isIllegalAddr_illegalAddr_T_158 = eq(UInt<12>(2891), addr) @[build/NutShell.fir.opt.mlir 21305:43]
    node _isIllegalAddr_illegalAddr_T_159 = mux(_isIllegalAddr_illegalAddr_T_158, UInt<1>(0), _isIllegalAddr_illegalAddr_T_157) @[build/NutShell.fir.opt.mlir 21307:43]
    node _isIllegalAddr_illegalAddr_T_160 = eq(UInt<12>(2935), addr) @[build/NutShell.fir.opt.mlir 21309:43]
    node _isIllegalAddr_illegalAddr_T_161 = mux(_isIllegalAddr_illegalAddr_T_160, UInt<1>(0), _isIllegalAddr_illegalAddr_T_159) @[build/NutShell.fir.opt.mlir 21311:43]
    node _isIllegalAddr_illegalAddr_T_162 = eq(UInt<10>(947), addr) @[build/NutShell.fir.opt.mlir 21313:43]
    node _isIllegalAddr_illegalAddr_T_163 = mux(_isIllegalAddr_illegalAddr_T_162, UInt<1>(0), _isIllegalAddr_illegalAddr_T_161) @[build/NutShell.fir.opt.mlir 21315:43]
    node _isIllegalAddr_illegalAddr_T_164 = eq(UInt<12>(2906), addr) @[build/NutShell.fir.opt.mlir 21317:43]
    node _isIllegalAddr_illegalAddr_T_165 = mux(_isIllegalAddr_illegalAddr_T_164, UInt<1>(0), _isIllegalAddr_illegalAddr_T_163) @[build/NutShell.fir.opt.mlir 21319:43]
    node _isIllegalAddr_illegalAddr_T_166 = eq(UInt<12>(2839), addr) @[build/NutShell.fir.opt.mlir 21321:43]
    node _isIllegalAddr_illegalAddr_T_167 = mux(_isIllegalAddr_illegalAddr_T_166, UInt<1>(0), _isIllegalAddr_illegalAddr_T_165) @[build/NutShell.fir.opt.mlir 21323:43]
    node _isIllegalAddr_illegalAddr_T_168 = eq(UInt<12>(2943), addr) @[build/NutShell.fir.opt.mlir 21325:43]
    node _isIllegalAddr_illegalAddr_T_169 = mux(_isIllegalAddr_illegalAddr_T_168, UInt<1>(0), _isIllegalAddr_illegalAddr_T_167) @[build/NutShell.fir.opt.mlir 21327:43]
    node _isIllegalAddr_illegalAddr_T_170 = eq(UInt<12>(2856), addr) @[build/NutShell.fir.opt.mlir 21329:43]
    node _isIllegalAddr_illegalAddr_T_171 = mux(_isIllegalAddr_illegalAddr_T_170, UInt<1>(0), _isIllegalAddr_illegalAddr_T_169) @[build/NutShell.fir.opt.mlir 21331:43]
    node _isIllegalAddr_illegalAddr_T_172 = eq(UInt<12>(2896), addr) @[build/NutShell.fir.opt.mlir 21333:43]
    node _isIllegalAddr_illegalAddr_T_173 = mux(_isIllegalAddr_illegalAddr_T_172, UInt<1>(0), _isIllegalAddr_illegalAddr_T_171) @[build/NutShell.fir.opt.mlir 21335:43]
    node _isIllegalAddr_illegalAddr_T_174 = eq(UInt<12>(2871), addr) @[build/NutShell.fir.opt.mlir 21337:43]
    node _isIllegalAddr_illegalAddr_T_175 = mux(_isIllegalAddr_illegalAddr_T_174, UInt<1>(0), _isIllegalAddr_illegalAddr_T_173) @[build/NutShell.fir.opt.mlir 21339:43]
    node _isIllegalAddr_illegalAddr_T_176 = eq(UInt<12>(2824), addr) @[build/NutShell.fir.opt.mlir 21341:43]
    node _isIllegalAddr_illegalAddr_T_177 = mux(_isIllegalAddr_illegalAddr_T_176, UInt<1>(0), _isIllegalAddr_illegalAddr_T_175) @[build/NutShell.fir.opt.mlir 21343:43]
    node _isIllegalAddr_illegalAddr_T_178 = eq(UInt<9>(323), addr) @[build/NutShell.fir.opt.mlir 21345:43]
    node _isIllegalAddr_illegalAddr_T_179 = mux(_isIllegalAddr_illegalAddr_T_178, UInt<1>(0), _isIllegalAddr_illegalAddr_T_177) @[build/NutShell.fir.opt.mlir 21347:43]
    node _isIllegalAddr_illegalAddr_T_180 = eq(UInt<12>(2923), addr) @[build/NutShell.fir.opt.mlir 21349:43]
    node _isIllegalAddr_illegalAddr_T_181 = mux(_isIllegalAddr_illegalAddr_T_180, UInt<1>(0), _isIllegalAddr_illegalAddr_T_179) @[build/NutShell.fir.opt.mlir 21351:43]
    node _isIllegalAddr_illegalAddr_T_182 = eq(UInt<12>(2874), addr) @[build/NutShell.fir.opt.mlir 21353:43]
    node _isIllegalAddr_illegalAddr_T_183 = mux(_isIllegalAddr_illegalAddr_T_182, UInt<1>(0), _isIllegalAddr_illegalAddr_T_181) @[build/NutShell.fir.opt.mlir 21355:43]
    node _isIllegalAddr_illegalAddr_T_184 = eq(UInt<10>(769), addr) @[build/NutShell.fir.opt.mlir 21357:43]
    node _isIllegalAddr_illegalAddr_T_185 = mux(_isIllegalAddr_illegalAddr_T_184, UInt<1>(0), _isIllegalAddr_illegalAddr_T_183) @[build/NutShell.fir.opt.mlir 21359:43]
    node _isIllegalAddr_illegalAddr_T_186 = eq(UInt<12>(2928), addr) @[build/NutShell.fir.opt.mlir 21361:43]
    node _isIllegalAddr_illegalAddr_T_187 = mux(_isIllegalAddr_illegalAddr_T_186, UInt<1>(0), _isIllegalAddr_illegalAddr_T_185) @[build/NutShell.fir.opt.mlir 21363:43]
    node _isIllegalAddr_illegalAddr_T_188 = eq(UInt<12>(2842), addr) @[build/NutShell.fir.opt.mlir 21365:43]
    node _isIllegalAddr_illegalAddr_T_189 = mux(_isIllegalAddr_illegalAddr_T_188, UInt<1>(0), _isIllegalAddr_illegalAddr_T_187) @[build/NutShell.fir.opt.mlir 21367:43]
    node _isIllegalAddr_illegalAddr_T_190 = eq(UInt<12>(2911), addr) @[build/NutShell.fir.opt.mlir 21369:43]
    node _isIllegalAddr_illegalAddr_T_191 = mux(_isIllegalAddr_illegalAddr_T_190, UInt<1>(0), _isIllegalAddr_illegalAddr_T_189) @[build/NutShell.fir.opt.mlir 21371:43]
    node _isIllegalAddr_illegalAddr_T_192 = eq(UInt<12>(2931), addr) @[build/NutShell.fir.opt.mlir 21373:43]
    node _isIllegalAddr_illegalAddr_T_193 = mux(_isIllegalAddr_illegalAddr_T_192, UInt<1>(0), _isIllegalAddr_illegalAddr_T_191) @[build/NutShell.fir.opt.mlir 21375:43]
    node _isIllegalAddr_illegalAddr_T_194 = eq(UInt<12>(2867), addr) @[build/NutShell.fir.opt.mlir 21377:43]
    node _isIllegalAddr_illegalAddr_T_195 = mux(_isIllegalAddr_illegalAddr_T_194, UInt<1>(0), _isIllegalAddr_illegalAddr_T_193) @[build/NutShell.fir.opt.mlir 21379:43]
    node _isIllegalAddr_illegalAddr_T_196 = eq(UInt<10>(768), addr) @[build/NutShell.fir.opt.mlir 21381:43]
    node _isIllegalAddr_illegalAddr_T_197 = mux(_isIllegalAddr_illegalAddr_T_196, UInt<1>(0), _isIllegalAddr_illegalAddr_T_195) @[build/NutShell.fir.opt.mlir 21383:43]
    node _isIllegalAddr_illegalAddr_T_198 = eq(UInt<12>(2835), addr) @[build/NutShell.fir.opt.mlir 21385:43]
    node _isIllegalAddr_illegalAddr_T_199 = mux(_isIllegalAddr_illegalAddr_T_198, UInt<1>(0), _isIllegalAddr_illegalAddr_T_197) @[build/NutShell.fir.opt.mlir 21387:43]
    node _isIllegalAddr_illegalAddr_T_200 = eq(UInt<10>(944), addr) @[build/NutShell.fir.opt.mlir 21389:43]
    node _isIllegalAddr_illegalAddr_T_201 = mux(_isIllegalAddr_illegalAddr_T_200, UInt<1>(0), _isIllegalAddr_illegalAddr_T_199) @[build/NutShell.fir.opt.mlir 21391:43]
    node _isIllegalAddr_illegalAddr_T_202 = eq(UInt<12>(2878), addr) @[build/NutShell.fir.opt.mlir 21393:43]
    node _isIllegalAddr_illegalAddr_T_203 = mux(_isIllegalAddr_illegalAddr_T_202, UInt<1>(0), _isIllegalAddr_illegalAddr_T_201) @[build/NutShell.fir.opt.mlir 21395:43]
    node _isIllegalAddr_illegalAddr_T_204 = eq(UInt<12>(2927), addr) @[build/NutShell.fir.opt.mlir 21397:43]
    node _isIllegalAddr_illegalAddr_T_205 = mux(_isIllegalAddr_illegalAddr_T_204, UInt<1>(0), _isIllegalAddr_illegalAddr_T_203) @[build/NutShell.fir.opt.mlir 21399:43]
    node _isIllegalAddr_illegalAddr_T_206 = eq(UInt<12>(2846), addr) @[build/NutShell.fir.opt.mlir 21401:43]
    node _isIllegalAddr_illegalAddr_T_207 = mux(_isIllegalAddr_illegalAddr_T_206, UInt<1>(0), _isIllegalAddr_illegalAddr_T_205) @[build/NutShell.fir.opt.mlir 21403:43]
    node _isIllegalAddr_illegalAddr_T_208 = eq(UInt<12>(2899), addr) @[build/NutShell.fir.opt.mlir 21405:43]
    node _isIllegalAddr_illegalAddr_T_209 = mux(_isIllegalAddr_illegalAddr_T_208, UInt<1>(0), _isIllegalAddr_illegalAddr_T_207) @[build/NutShell.fir.opt.mlir 21407:43]
    node _isIllegalAddr_illegalAddr_T_210 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 21409:43]
    node _isIllegalAddr_illegalAddr_T_211 = mux(_isIllegalAddr_illegalAddr_T_210, UInt<1>(0), _isIllegalAddr_illegalAddr_T_209) @[build/NutShell.fir.opt.mlir 21411:43]
    node _isIllegalAddr_illegalAddr_T_212 = eq(UInt<12>(2914), addr) @[build/NutShell.fir.opt.mlir 21413:43]
    node _isIllegalAddr_illegalAddr_T_213 = mux(_isIllegalAddr_illegalAddr_T_212, UInt<1>(0), _isIllegalAddr_illegalAddr_T_211) @[build/NutShell.fir.opt.mlir 21415:43]
    node _isIllegalAddr_illegalAddr_T_214 = eq(UInt<12>(2816), addr) @[build/NutShell.fir.opt.mlir 21417:43]
    node _isIllegalAddr_illegalAddr_T_215 = mux(_isIllegalAddr_illegalAddr_T_214, UInt<1>(0), _isIllegalAddr_illegalAddr_T_213) @[build/NutShell.fir.opt.mlir 21419:43]
    node _isIllegalAddr_illegalAddr_T_216 = eq(UInt<12>(2942), addr) @[build/NutShell.fir.opt.mlir 21421:43]
    node _isIllegalAddr_illegalAddr_T_217 = mux(_isIllegalAddr_illegalAddr_T_216, UInt<1>(0), _isIllegalAddr_illegalAddr_T_215) @[build/NutShell.fir.opt.mlir 21423:43]
    node _isIllegalAddr_illegalAddr_T_218 = eq(UInt<12>(2863), addr) @[build/NutShell.fir.opt.mlir 21425:43]
    node _isIllegalAddr_illegalAddr_T_219 = mux(_isIllegalAddr_illegalAddr_T_218, UInt<1>(0), _isIllegalAddr_illegalAddr_T_217) @[build/NutShell.fir.opt.mlir 21427:43]
    node _isIllegalAddr_illegalAddr_T_220 = eq(UInt<12>(2821), addr) @[build/NutShell.fir.opt.mlir 21429:43]
    node _isIllegalAddr_illegalAddr_T_221 = mux(_isIllegalAddr_illegalAddr_T_220, UInt<1>(0), _isIllegalAddr_illegalAddr_T_219) @[build/NutShell.fir.opt.mlir 21431:43]
    node _isIllegalAddr_illegalAddr_T_222 = eq(UInt<12>(2850), addr) @[build/NutShell.fir.opt.mlir 21433:43]
    node _isIllegalAddr_illegalAddr_T_223 = mux(_isIllegalAddr_illegalAddr_T_222, UInt<1>(0), _isIllegalAddr_illegalAddr_T_221) @[build/NutShell.fir.opt.mlir 21435:43]
    node _isIllegalAddr_illegalAddr_T_224 = eq(UInt<12>(2888), addr) @[build/NutShell.fir.opt.mlir 21437:43]
    node _isIllegalAddr_illegalAddr_T_225 = mux(_isIllegalAddr_illegalAddr_T_224, UInt<1>(0), _isIllegalAddr_illegalAddr_T_223) @[build/NutShell.fir.opt.mlir 21439:43]
    node _isIllegalAddr_illegalAddr_T_226 = eq(UInt<12>(2882), addr) @[build/NutShell.fir.opt.mlir 21441:43]
    node _isIllegalAddr_illegalAddr_T_227 = mux(_isIllegalAddr_illegalAddr_T_226, UInt<1>(0), _isIllegalAddr_illegalAddr_T_225) @[build/NutShell.fir.opt.mlir 21443:43]
    node _isIllegalAddr_illegalAddr_T_228 = eq(UInt<12>(2831), addr) @[build/NutShell.fir.opt.mlir 21445:43]
    node _isIllegalAddr_illegalAddr_T_229 = mux(_isIllegalAddr_illegalAddr_T_228, UInt<1>(0), _isIllegalAddr_illegalAddr_T_227) @[build/NutShell.fir.opt.mlir 21447:43]
    node _isIllegalAddr_illegalAddr_T_230 = eq(UInt<12>(2920), addr) @[build/NutShell.fir.opt.mlir 21449:43]
    node _isIllegalAddr_illegalAddr_T_231 = mux(_isIllegalAddr_illegalAddr_T_230, UInt<1>(0), _isIllegalAddr_illegalAddr_T_229) @[build/NutShell.fir.opt.mlir 21451:43]
    node _isIllegalAddr_illegalAddr_T_232 = eq(UInt<12>(2903), addr) @[build/NutShell.fir.opt.mlir 21453:43]
    node _isIllegalAddr_illegalAddr_T_233 = mux(_isIllegalAddr_illegalAddr_T_232, UInt<1>(0), _isIllegalAddr_illegalAddr_T_231) @[build/NutShell.fir.opt.mlir 21455:43]
    node _isIllegalAddr_illegalAddr_T_234 = eq(UInt<12>(2838), addr) @[build/NutShell.fir.opt.mlir 21457:43]
    node _isIllegalAddr_illegalAddr_T_235 = mux(_isIllegalAddr_illegalAddr_T_234, UInt<1>(0), _isIllegalAddr_illegalAddr_T_233) @[build/NutShell.fir.opt.mlir 21459:43]
    node _isIllegalAddr_illegalAddr_T_236 = eq(UInt<12>(2843), addr) @[build/NutShell.fir.opt.mlir 21461:43]
    node _isIllegalAddr_illegalAddr_T_237 = mux(_isIllegalAddr_illegalAddr_T_236, UInt<1>(0), _isIllegalAddr_illegalAddr_T_235) @[build/NutShell.fir.opt.mlir 21463:43]
    node _isIllegalAddr_illegalAddr_T_238 = eq(UInt<12>(2860), addr) @[build/NutShell.fir.opt.mlir 21465:43]
    node _isIllegalAddr_illegalAddr_T_239 = mux(_isIllegalAddr_illegalAddr_T_238, UInt<1>(0), _isIllegalAddr_illegalAddr_T_237) @[build/NutShell.fir.opt.mlir 21467:43]
    node _isIllegalAddr_illegalAddr_T_240 = eq(UInt<12>(2939), addr) @[build/NutShell.fir.opt.mlir 21469:43]
    node _isIllegalAddr_illegalAddr_T_241 = mux(_isIllegalAddr_illegalAddr_T_240, UInt<1>(0), _isIllegalAddr_illegalAddr_T_239) @[build/NutShell.fir.opt.mlir 21471:43]
    node _isIllegalAddr_illegalAddr_T_242 = eq(UInt<12>(2892), addr) @[build/NutShell.fir.opt.mlir 21473:43]
    node _isIllegalAddr_illegalAddr_T_243 = mux(_isIllegalAddr_illegalAddr_T_242, UInt<1>(0), _isIllegalAddr_illegalAddr_T_241) @[build/NutShell.fir.opt.mlir 21475:43]
    node _isIllegalAddr_illegalAddr_T_244 = eq(UInt<12>(2848), addr) @[build/NutShell.fir.opt.mlir 21477:43]
    node _isIllegalAddr_illegalAddr_T_245 = mux(_isIllegalAddr_illegalAddr_T_244, UInt<1>(0), _isIllegalAddr_illegalAddr_T_243) @[build/NutShell.fir.opt.mlir 21479:43]
    node _isIllegalAddr_illegalAddr_T_246 = eq(UInt<12>(2924), addr) @[build/NutShell.fir.opt.mlir 21481:43]
    node _isIllegalAddr_illegalAddr_T_247 = mux(_isIllegalAddr_illegalAddr_T_246, UInt<1>(0), _isIllegalAddr_illegalAddr_T_245) @[build/NutShell.fir.opt.mlir 21483:43]
    node _isIllegalAddr_illegalAddr_T_248 = eq(UInt<12>(2818), addr) @[build/NutShell.fir.opt.mlir 21485:43]
    node _isIllegalAddr_illegalAddr_T_249 = mux(_isIllegalAddr_illegalAddr_T_248, UInt<1>(0), _isIllegalAddr_illegalAddr_T_247) @[build/NutShell.fir.opt.mlir 21487:43]
    node _isIllegalAddr_illegalAddr_T_250 = eq(UInt<12>(2919), addr) @[build/NutShell.fir.opt.mlir 21489:43]
    node _isIllegalAddr_illegalAddr_T_251 = mux(_isIllegalAddr_illegalAddr_T_250, UInt<1>(0), _isIllegalAddr_illegalAddr_T_249) @[build/NutShell.fir.opt.mlir 21491:43]
    node _isIllegalAddr_illegalAddr_T_252 = eq(UInt<12>(2865), addr) @[build/NutShell.fir.opt.mlir 21493:43]
    node _isIllegalAddr_illegalAddr_T_253 = mux(_isIllegalAddr_illegalAddr_T_252, UInt<1>(0), _isIllegalAddr_illegalAddr_T_251) @[build/NutShell.fir.opt.mlir 21495:43]
    node _isIllegalAddr_illegalAddr_T_254 = eq(UInt<12>(2875), addr) @[build/NutShell.fir.opt.mlir 21497:43]
    node _isIllegalAddr_illegalAddr_T_255 = mux(_isIllegalAddr_illegalAddr_T_254, UInt<1>(0), _isIllegalAddr_illegalAddr_T_253) @[build/NutShell.fir.opt.mlir 21499:43]
    node _isIllegalAddr_illegalAddr_T_256 = eq(UInt<10>(931), addr) @[build/NutShell.fir.opt.mlir 21501:43]
    node _isIllegalAddr_illegalAddr_T_257 = mux(_isIllegalAddr_illegalAddr_T_256, UInt<1>(0), _isIllegalAddr_illegalAddr_T_255) @[build/NutShell.fir.opt.mlir 21503:43]
    node _isIllegalAddr_illegalAddr_T_258 = eq(UInt<12>(2885), addr) @[build/NutShell.fir.opt.mlir 21505:43]
    node _isIllegalAddr_illegalAddr_T_259 = mux(_isIllegalAddr_illegalAddr_T_258, UInt<1>(0), _isIllegalAddr_illegalAddr_T_257) @[build/NutShell.fir.opt.mlir 21507:43]
    node _isIllegalAddr_illegalAddr_T_260 = eq(UInt<12>(2870), addr) @[build/NutShell.fir.opt.mlir 21509:43]
    node _isIllegalAddr_illegalAddr_T_261 = mux(_isIllegalAddr_illegalAddr_T_260, UInt<1>(0), _isIllegalAddr_illegalAddr_T_259) @[build/NutShell.fir.opt.mlir 21511:43]
    node _isIllegalAddr_illegalAddr_T_262 = eq(UInt<12>(2828), addr) @[build/NutShell.fir.opt.mlir 21513:43]
    node _isIllegalAddr_illegalAddr_T_263 = mux(_isIllegalAddr_illegalAddr_T_262, UInt<1>(0), _isIllegalAddr_illegalAddr_T_261) @[build/NutShell.fir.opt.mlir 21515:43]
    node _isIllegalAddr_illegalAddr_T_264 = eq(UInt<10>(771), addr) @[build/NutShell.fir.opt.mlir 21517:43]
    node _isIllegalAddr_illegalAddr_T_265 = mux(_isIllegalAddr_illegalAddr_T_264, UInt<1>(0), _isIllegalAddr_illegalAddr_T_263) @[build/NutShell.fir.opt.mlir 21519:43]
    node _isIllegalAddr_illegalAddr_T_266 = eq(UInt<12>(2907), addr) @[build/NutShell.fir.opt.mlir 21521:43]
    node _isIllegalAddr_illegalAddr_T_267 = mux(_isIllegalAddr_illegalAddr_T_266, UInt<1>(0), _isIllegalAddr_illegalAddr_T_265) @[build/NutShell.fir.opt.mlir 21523:43]
    node _isIllegalAddr_illegalAddr_T_268 = eq(UInt<12>(2855), addr) @[build/NutShell.fir.opt.mlir 21525:43]
    node _isIllegalAddr_illegalAddr_T_269 = mux(_isIllegalAddr_illegalAddr_T_268, UInt<1>(0), _isIllegalAddr_illegalAddr_T_267) @[build/NutShell.fir.opt.mlir 21527:43]
    node _isIllegalAddr_illegalAddr_T_270 = eq(UInt<12>(2853), addr) @[build/NutShell.fir.opt.mlir 21529:43]
    node _isIllegalAddr_illegalAddr_T_271 = mux(_isIllegalAddr_illegalAddr_T_270, UInt<1>(0), _isIllegalAddr_illegalAddr_T_269) @[build/NutShell.fir.opt.mlir 21531:43]
    node _isIllegalAddr_illegalAddr_T_272 = eq(UInt<10>(946), addr) @[build/NutShell.fir.opt.mlir 21533:43]
    node _isIllegalAddr_illegalAddr_T_273 = mux(_isIllegalAddr_illegalAddr_T_272, UInt<1>(0), _isIllegalAddr_illegalAddr_T_271) @[build/NutShell.fir.opt.mlir 21535:43]
    node _isIllegalAddr_illegalAddr_T_274 = eq(UInt<12>(2823), addr) @[build/NutShell.fir.opt.mlir 21537:43]
    node _isIllegalAddr_illegalAddr_T_275 = mux(_isIllegalAddr_illegalAddr_T_274, UInt<1>(0), _isIllegalAddr_illegalAddr_T_273) @[build/NutShell.fir.opt.mlir 21539:43]
    node _isIllegalAddr_illegalAddr_T_276 = eq(UInt<12>(3859), addr) @[build/NutShell.fir.opt.mlir 21541:43]
    node _isIllegalAddr_illegalAddr_T_277 = mux(_isIllegalAddr_illegalAddr_T_276, UInt<1>(0), _isIllegalAddr_illegalAddr_T_275) @[build/NutShell.fir.opt.mlir 21543:43]
    node _isIllegalAddr_illegalAddr_T_278 = eq(UInt<12>(2934), addr) @[build/NutShell.fir.opt.mlir 21545:43]
    node _isIllegalAddr_illegalAddr_T_279 = mux(_isIllegalAddr_illegalAddr_T_278, UInt<1>(0), _isIllegalAddr_illegalAddr_T_277) @[build/NutShell.fir.opt.mlir 21547:43]
    node _isIllegalAddr_illegalAddr_T_280 = eq(UInt<12>(2912), addr) @[build/NutShell.fir.opt.mlir 21549:43]
    node _isIllegalAddr_illegalAddr_T_281 = mux(_isIllegalAddr_illegalAddr_T_280, UInt<1>(0), _isIllegalAddr_illegalAddr_T_279) @[build/NutShell.fir.opt.mlir 21551:43]
    node _isIllegalAddr_illegalAddr_T_282 = eq(UInt<10>(929), addr) @[build/NutShell.fir.opt.mlir 21553:43]
    node _isIllegalAddr_illegalAddr_T_283 = mux(_isIllegalAddr_illegalAddr_T_282, UInt<1>(0), _isIllegalAddr_illegalAddr_T_281) @[build/NutShell.fir.opt.mlir 21555:43]
    node _isIllegalAddr_illegalAddr_T_284 = eq(UInt<12>(2902), addr) @[build/NutShell.fir.opt.mlir 21557:43]
    node _isIllegalAddr_illegalAddr_T_285 = mux(_isIllegalAddr_illegalAddr_T_284, UInt<1>(0), _isIllegalAddr_illegalAddr_T_283) @[build/NutShell.fir.opt.mlir 21559:43]
    node _isIllegalAddr_illegalAddr_T_286 = eq(UInt<10>(832), addr) @[build/NutShell.fir.opt.mlir 21561:43]
    node _isIllegalAddr_illegalAddr_T_287 = mux(_isIllegalAddr_illegalAddr_T_286, UInt<1>(0), _isIllegalAddr_illegalAddr_T_285) @[build/NutShell.fir.opt.mlir 21563:43]
    node _isIllegalAddr_illegalAddr_T_288 = eq(UInt<12>(2917), addr) @[build/NutShell.fir.opt.mlir 21565:43]
    node _isIllegalAddr_illegalAddr_T_289 = mux(_isIllegalAddr_illegalAddr_T_288, UInt<1>(0), _isIllegalAddr_illegalAddr_T_287) @[build/NutShell.fir.opt.mlir 21567:43]
    node _isIllegalAddr_illegalAddr_T_290 = eq(UInt<12>(2930), addr) @[build/NutShell.fir.opt.mlir 21569:43]
    node _isIllegalAddr_illegalAddr_T_291 = mux(_isIllegalAddr_illegalAddr_T_290, UInt<1>(0), _isIllegalAddr_illegalAddr_T_289) @[build/NutShell.fir.opt.mlir 21571:43]
    node _isIllegalAddr_illegalAddr_T_292 = eq(UInt<12>(3860), addr) @[build/NutShell.fir.opt.mlir 21573:43]
    node _isIllegalAddr_illegalAddr_T_293 = mux(_isIllegalAddr_illegalAddr_T_292, UInt<1>(0), _isIllegalAddr_illegalAddr_T_291) @[build/NutShell.fir.opt.mlir 21575:43]
    node _isIllegalAddr_illegalAddr_T_294 = eq(UInt<10>(833), addr) @[build/NutShell.fir.opt.mlir 21577:43]
    node _isIllegalAddr_illegalAddr_T_295 = mux(_isIllegalAddr_illegalAddr_T_294, UInt<1>(0), _isIllegalAddr_illegalAddr_T_293) @[build/NutShell.fir.opt.mlir 21579:43]
    node _isIllegalAddr_illegalAddr_T_296 = eq(UInt<10>(835), addr) @[build/NutShell.fir.opt.mlir 21581:43]
    node _isIllegalAddr_illegalAddr_T_297 = mux(_isIllegalAddr_illegalAddr_T_296, UInt<1>(0), _isIllegalAddr_illegalAddr_T_295) @[build/NutShell.fir.opt.mlir 21583:43]
    node _isIllegalAddr_illegalAddr_T_298 = eq(UInt<9>(262), addr) @[build/NutShell.fir.opt.mlir 21585:43]
    node _isIllegalAddr_illegalAddr_T_299 = mux(_isIllegalAddr_illegalAddr_T_298, UInt<1>(0), _isIllegalAddr_illegalAddr_T_297) @[build/NutShell.fir.opt.mlir 21587:43]
    node _isIllegalAddr_illegalAddr_T_300 = eq(UInt<12>(2913), addr) @[build/NutShell.fir.opt.mlir 21589:43]
    node _isIllegalAddr_illegalAddr_T_301 = mux(_isIllegalAddr_illegalAddr_T_300, UInt<1>(0), _isIllegalAddr_illegalAddr_T_299) @[build/NutShell.fir.opt.mlir 21591:43]
    node _isIllegalAddr_illegalAddr_T_302 = eq(UInt<10>(928), addr) @[build/NutShell.fir.opt.mlir 21593:43]
    node _isIllegalAddr_illegalAddr_T_303 = mux(_isIllegalAddr_illegalAddr_T_302, UInt<1>(0), _isIllegalAddr_illegalAddr_T_301) @[build/NutShell.fir.opt.mlir 21595:43]
    node _isIllegalAddr_illegalAddr_T_304 = eq(UInt<12>(2847), addr) @[build/NutShell.fir.opt.mlir 21597:43]
    node _isIllegalAddr_illegalAddr_T_305 = mux(_isIllegalAddr_illegalAddr_T_304, UInt<1>(0), _isIllegalAddr_illegalAddr_T_303) @[build/NutShell.fir.opt.mlir 21599:43]
    node _isIllegalAddr_illegalAddr_T_306 = eq(UInt<12>(2898), addr) @[build/NutShell.fir.opt.mlir 21601:43]
    node _isIllegalAddr_illegalAddr_T_307 = mux(_isIllegalAddr_illegalAddr_T_306, UInt<1>(0), _isIllegalAddr_illegalAddr_T_305) @[build/NutShell.fir.opt.mlir 21603:43]
    node _isIllegalAddr_illegalAddr_T_308 = eq(UInt<12>(2864), addr) @[build/NutShell.fir.opt.mlir 21605:43]
    node _isIllegalAddr_illegalAddr_T_309 = mux(_isIllegalAddr_illegalAddr_T_308, UInt<1>(0), _isIllegalAddr_illegalAddr_T_307) @[build/NutShell.fir.opt.mlir 21607:43]
    node _isIllegalAddr_illegalAddr_T_310 = eq(UInt<9>(322), addr) @[build/NutShell.fir.opt.mlir 21609:43]
    node _isIllegalAddr_illegalAddr_T_311 = mux(_isIllegalAddr_illegalAddr_T_310, UInt<1>(0), _isIllegalAddr_illegalAddr_T_309) @[build/NutShell.fir.opt.mlir 21611:43]
    node _isIllegalAddr_illegalAddr_T_312 = eq(UInt<12>(2879), addr) @[build/NutShell.fir.opt.mlir 21613:43]
    node _isIllegalAddr_illegalAddr_T_313 = mux(_isIllegalAddr_illegalAddr_T_312, UInt<1>(0), _isIllegalAddr_illegalAddr_T_311) @[build/NutShell.fir.opt.mlir 21615:43]
    node _isIllegalAddr_illegalAddr_T_314 = eq(UInt<12>(2881), addr) @[build/NutShell.fir.opt.mlir 21617:43]
    node _isIllegalAddr_illegalAddr_T_315 = mux(_isIllegalAddr_illegalAddr_T_314, UInt<1>(0), _isIllegalAddr_illegalAddr_T_313) @[build/NutShell.fir.opt.mlir 21619:43]
    node _isIllegalAddr_illegalAddr_T_316 = eq(UInt<12>(2887), addr) @[build/NutShell.fir.opt.mlir 21621:43]
    node _isIllegalAddr_illegalAddr_T_317 = mux(_isIllegalAddr_illegalAddr_T_316, UInt<1>(0), _isIllegalAddr_illegalAddr_T_315) @[build/NutShell.fir.opt.mlir 21623:43]
    node _isIllegalAddr_illegalAddr_T_318 = eq(UInt<12>(2834), addr) @[build/NutShell.fir.opt.mlir 21625:43]
    node _isIllegalAddr_illegalAddr_T_319 = mux(_isIllegalAddr_illegalAddr_T_318, UInt<1>(0), _isIllegalAddr_illegalAddr_T_317) @[build/NutShell.fir.opt.mlir 21627:43]
    node _isIllegalAddr_illegalAddr_T_320 = eq(UInt<12>(2866), addr) @[build/NutShell.fir.opt.mlir 21629:43]
    node _isIllegalAddr_illegalAddr_T_321 = mux(_isIllegalAddr_illegalAddr_T_320, UInt<1>(0), _isIllegalAddr_illegalAddr_T_319) @[build/NutShell.fir.opt.mlir 21631:43]
    node _isIllegalAddr_illegalAddr_T_322 = eq(UInt<12>(2832), addr) @[build/NutShell.fir.opt.mlir 21633:43]
    node _isIllegalAddr_illegalAddr_T_323 = mux(_isIllegalAddr_illegalAddr_T_322, UInt<1>(0), _isIllegalAddr_illegalAddr_T_321) @[build/NutShell.fir.opt.mlir 21635:43]
    connect isIllegalAddr, _isIllegalAddr_illegalAddr_T_323 @[build/NutShell.fir.opt.mlir 21636:7]
    node _resetSatp_T = eq(addr, UInt<9>(384)) @[build/NutShell.fir.opt.mlir 21638:23]
    node resetSatp = and(_resetSatp_T, wen) @[build/NutShell.fir.opt.mlir 21640:20]
    connect io.out.bits, rdata @[build/NutShell.fir.opt.mlir 21641:7]
    node fixMapping_0_2_4 = mux(UInt<1>(1), UInt<64>(18446744073709551615), UInt<64>(0)) @[build/NutShell.fir.opt.mlir 21643:27]
    wire rdataDummy : UInt<64> @[build/NutShell.fir.opt.mlir 21644:21]
    node _T_314 = eq(isIllegalAccess, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21646:17]
    node _T_315 = and(wen, _T_314) @[build/NutShell.fir.opt.mlir 21648:17]
    node _rdataDummy_T = and(mipReg, fixMapping_0_2_4) @[build/NutShell.fir.opt.mlir 21650:24]
    node _rdataDummy_T_1 = and(mipReg, sipMask) @[build/NutShell.fir.opt.mlir 21652:26]
    node _rdataDummy_T_2 = eq(UInt<10>(836), addr) @[build/NutShell.fir.opt.mlir 21654:26]
    node _rdataDummy_T_3 = eq(UInt<9>(324), addr) @[build/NutShell.fir.opt.mlir 21656:26]
    node _rdataDummy_T_4 = mux(_rdataDummy_T_2, _rdataDummy_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21658:26]
    node _rdataDummy_T_5 = mux(_rdataDummy_T_3, _rdataDummy_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21660:26]
    node _rdataDummy_T_6 = or(_rdataDummy_T_4, _rdataDummy_T_5) @[build/NutShell.fir.opt.mlir 21662:26]
    wire _rdataDummy_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 21663:27]
    connect _rdataDummy_WIRE, _rdataDummy_T_6 @[build/NutShell.fir.opt.mlir 21664:7]
    connect rdataDummy, _rdataDummy_WIRE @[build/NutShell.fir.opt.mlir 21665:7]
    node _T_316 = eq(addr, UInt<10>(836)) @[build/NutShell.fir.opt.mlir 21667:17]
    node _T_317 = and(_T_315, _T_316) @[build/NutShell.fir.opt.mlir 21669:17]
    when _T_317 : @[build/NutShell.fir.opt.mlir 21671:7]
      node _mipReg_T = and(wdata, UInt<64>(1919)) @[build/NutShell.fir.opt.mlir 21673:22]
      node _mipReg_T_1 = not(UInt<64>(1919)) @[build/NutShell.fir.opt.mlir 21675:24]
      node _mipReg_T_2 = and(mipReg, _mipReg_T_1) @[build/NutShell.fir.opt.mlir 21677:24]
      node _mipReg_T_3 = or(_mipReg_T, _mipReg_T_2) @[build/NutShell.fir.opt.mlir 21679:24]
      connect mipReg, _mipReg_T_3 @[build/NutShell.fir.opt.mlir 21680:9]
    node _T_318 = eq(addr, UInt<9>(324)) @[build/NutShell.fir.opt.mlir 21683:17]
    node _T_319 = and(_T_315, _T_318) @[build/NutShell.fir.opt.mlir 21685:17]
    when _T_319 : @[build/NutShell.fir.opt.mlir 21686:7]
      node _mipReg_T_4 = and(wdata, sipMask) @[build/NutShell.fir.opt.mlir 21688:24]
      node _mipReg_T_5 = not(sipMask) @[build/NutShell.fir.opt.mlir 21690:24]
      node _mipReg_T_6 = and(mipReg, _mipReg_T_5) @[build/NutShell.fir.opt.mlir 21692:24]
      node _mipReg_T_7 = or(_mipReg_T_4, _mipReg_T_6) @[build/NutShell.fir.opt.mlir 21694:24]
      connect mipReg, _mipReg_T_7 @[build/NutShell.fir.opt.mlir 21695:9]
    wire ret : UInt<1> @[build/NutShell.fir.opt.mlir 21697:14]
    node _isEbreak_T = eq(addr, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21699:22]
    node _isEbreak_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21701:24]
    node _isEbreak_T_2 = and(_isEbreak_T, _isEbreak_T_1) @[build/NutShell.fir.opt.mlir 21703:24]
    node _isEbreak_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21705:24]
    node isEbreak = and(_isEbreak_T_2, _isEbreak_T_3) @[build/NutShell.fir.opt.mlir 21707:19]
    node _isEcall_T = eq(addr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21709:21]
    node _isEcall_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21711:23]
    node _isEcall_T_2 = and(_isEcall_T, _isEcall_T_1) @[build/NutShell.fir.opt.mlir 21713:23]
    node _isEcall_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21715:23]
    node isEcall = and(_isEcall_T_2, _isEcall_T_3) @[build/NutShell.fir.opt.mlir 21717:18]
    node _isMret_T = eq(addr, UInt<10>(770)) @[build/NutShell.fir.opt.mlir 21719:20]
    node _isMret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21721:22]
    node _isMret_T_2 = and(_isMret_T, _isMret_T_1) @[build/NutShell.fir.opt.mlir 21723:22]
    node _isMret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21725:22]
    node isMret = and(_isMret_T_2, _isMret_T_3) @[build/NutShell.fir.opt.mlir 21727:17]
    node _isSret_T = eq(addr, UInt<9>(258)) @[build/NutShell.fir.opt.mlir 21730:20]
    node _isSret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21732:22]
    node _isSret_T_2 = and(_isSret_T, _isSret_T_1) @[build/NutShell.fir.opt.mlir 21734:22]
    node _isSret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21736:22]
    node isSret = and(_isSret_T_2, _isSret_T_3) @[build/NutShell.fir.opt.mlir 21738:17]
    node _isUret_T = eq(addr, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 21740:20]
    node _isUret_T_1 = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21742:22]
    node _isUret_T_2 = and(_isUret_T, _isUret_T_1) @[build/NutShell.fir.opt.mlir 21744:22]
    node _isUret_T_3 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21746:22]
    node isUret = and(_isUret_T_2, _isUret_T_3) @[build/NutShell.fir.opt.mlir 21748:17]
    inst LogPerfHelper of LogPerfHelper_16 @[build/NutShell.fir.opt.mlir 21749:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 21750:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 21755:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 21756:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 21757:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 21758:7]
    node _T_320 = and(wen, c_control.logEnable) @[build/NutShell.fir.opt.mlir 21760:17]
    when _T_320 : @[build/NutShell.fir.opt.mlir 21761:7]
      node _T_321 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21763:19]
      node _T_322 = eq(_T_321, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21765:19]
      when _T_322 : @[build/NutShell.fir.opt.mlir 21766:9]
        skip @[build/NutShell.fir.opt.mlir 21767:11]
      node _T_323 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21770:19]
      node _T_324 = eq(_T_323, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21772:19]
      when _T_324 : @[build/NutShell.fir.opt.mlir 21773:9]
        skip @[build/NutShell.fir.opt.mlir 21774:11]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21777:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21779:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 21781:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 21782:7]
    node _T_325 = and(wen, c_control.logEnable) @[build/NutShell.fir.opt.mlir 21784:17]
    when _T_325 : @[build/NutShell.fir.opt.mlir 21785:7]
      node _T_326 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21787:19]
      node _T_327 = eq(_T_326, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21789:19]
      when _T_327 : @[build/NutShell.fir.opt.mlir 21790:9]
        skip @[build/NutShell.fir.opt.mlir 21791:11]
      node _T_328 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21794:19]
      node _T_329 = eq(_T_328, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21796:19]
      when _T_329 : @[build/NutShell.fir.opt.mlir 21797:9]
        skip @[build/NutShell.fir.opt.mlir 21798:11]
    connect io.imemMMU.privilegeMode, privilegeMode @[build/NutShell.fir.opt.mlir 21801:7]
    node _io_dmemMMU_privilegeMode_T = bits(mstatusStruct.mprv, 0, 0) @[build/NutShell.fir.opt.mlir 21803:38]
    node _io_dmemMMU_privilegeMode_T_1 = mux(_io_dmemMMU_privilegeMode_T, mstatusStruct.mpp, privilegeMode) @[build/NutShell.fir.opt.mlir 21805:40]
    connect io.dmemMMU.privilegeMode, _io_dmemMMU_privilegeMode_T_1 @[build/NutShell.fir.opt.mlir 21806:7]
    node _io_imemMMU_status_sum_T = bits(mstatusStruct.sum, 0, 0) @[build/NutShell.fir.opt.mlir 21808:35]
    connect io.imemMMU.status_sum, _io_imemMMU_status_sum_T @[build/NutShell.fir.opt.mlir 21809:7]
    node _io_dmemMMU_status_sum_T = bits(mstatusStruct.sum, 0, 0) @[build/NutShell.fir.opt.mlir 21811:35]
    connect io.dmemMMU.status_sum, _io_dmemMMU_status_sum_T @[build/NutShell.fir.opt.mlir 21812:7]
    invalidate io.imemMMU.status_mxr @[build/NutShell.fir.opt.mlir 21814:7]
    node _io_dmemMMU_status_mxr_T = bits(mstatusStruct.mxr, 0, 0) @[build/NutShell.fir.opt.mlir 21816:35]
    connect io.dmemMMU.status_mxr, _io_dmemMMU_status_mxr_T @[build/NutShell.fir.opt.mlir 21817:7]
    wire hasInstrPageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21818:28]
    wire hasLoadPageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21819:27]
    wire hasStorePageFault : UInt<1> @[build/NutShell.fir.opt.mlir 21820:28]
    wire hasStoreAddrMisaligned : UInt<1> @[build/NutShell.fir.opt.mlir 21821:33]
    wire hasLoadAddrMisaligned : UInt<1> @[build/NutShell.fir.opt.mlir 21822:32]
    wire dmemPagefaultAddr : UInt<39> @[build/NutShell.fir.opt.mlir 21823:28]
    wire dmemAddrMisalignedAddr : UInt<39> @[build/NutShell.fir.opt.mlir 21824:33]
    wire lsuAddr : UInt<64> @[build/NutShell.fir.opt.mlir 21825:18]
    connect lsuAddr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21827:7]
    node _hasInstrPageFault_T = and(io.cfIn.exceptionVec[12], io.in.valid) @[build/NutShell.fir.opt.mlir 21829:31]
    connect hasInstrPageFault, _hasInstrPageFault_T @[build/NutShell.fir.opt.mlir 21830:7]
    connect hasLoadPageFault, io.dmemMMU.loadPF @[build/NutShell.fir.opt.mlir 21831:7]
    connect hasStorePageFault, io.dmemMMU.storePF @[build/NutShell.fir.opt.mlir 21832:7]
    connect hasStoreAddrMisaligned, io.cfIn.exceptionVec[6] @[build/NutShell.fir.opt.mlir 21833:7]
    connect hasLoadAddrMisaligned, io.cfIn.exceptionVec[4] @[build/NutShell.fir.opt.mlir 21834:7]
    connect dmemPagefaultAddr, io.dmemMMU.addr @[build/NutShell.fir.opt.mlir 21835:7]
    connect dmemAddrMisalignedAddr, tail(lsuAddr, 25) @[build/NutShell.fir.opt.mlir 21837:7]
    node _T_330 = or(hasInstrPageFault, hasLoadPageFault) @[build/NutShell.fir.opt.mlir 21839:17]
    node _T_331 = or(_T_330, hasStorePageFault) @[build/NutShell.fir.opt.mlir 21841:17]
    when _T_331 : @[build/NutShell.fir.opt.mlir 21842:7]
      node _tval_T = add(io.cfIn.pc, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 21844:20]
      node _tval_T_1 = tail(_tval_T, 1) @[build/NutShell.fir.opt.mlir 21846:22]
      node _tval_T_2 = bits(_tval_T_1, 38, 0) @[build/NutShell.fir.opt.mlir 21848:22]
      node tval_signBit = bits(_tval_T_2, 38, 38) @[build/NutShell.fir.opt.mlir 21850:25]
      node _tval_T_3 = mux(tval_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21852:22]
      node _tval_T_4 = cat(_tval_T_3, _tval_T_2) @[build/NutShell.fir.opt.mlir 21854:22]
      node _tval_T_5 = bits(io.cfIn.pc, 38, 0) @[build/NutShell.fir.opt.mlir 21856:22]
      node tval_signBit_1 = bits(_tval_T_5, 38, 38) @[build/NutShell.fir.opt.mlir 21858:27]
      node _tval_T_6 = mux(tval_signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21860:22]
      node _tval_T_7 = cat(_tval_T_6, _tval_T_5) @[build/NutShell.fir.opt.mlir 21862:22]
      node _tval_T_8 = mux(io.cfIn.crossPageIPFFix, _tval_T_4, _tval_T_7) @[build/NutShell.fir.opt.mlir 21864:22]
      node tval_signBit_2 = bits(dmemPagefaultAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21866:27]
      node _tval_T_9 = mux(tval_signBit_2, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21868:22]
      node _tval_T_10 = cat(_tval_T_9, dmemPagefaultAddr) @[build/NutShell.fir.opt.mlir 21870:23]
      node tval = mux(hasInstrPageFault, _tval_T_8, _tval_T_10) @[build/NutShell.fir.opt.mlir 21872:17]
      node _T_332 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 21874:19]
      when _T_332 : @[build/NutShell.fir.opt.mlir 21875:9]
        connect mtval, tval @[build/NutShell.fir.opt.mlir 21876:11]
      else :
        connect stval, tval @[build/NutShell.fir.opt.mlir 21878:11]
      regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21880:16]
      node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21882:19]
      node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 21884:19]
      connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 21885:9]
      node signBit = bits(dmemPagefaultAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21887:20]
      node _T_333 = mux(signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21889:19]
      node _T_334 = cat(_T_333, dmemPagefaultAddr) @[build/NutShell.fir.opt.mlir 21891:19]
      node _T_335 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 21893:19]
      when _T_335 : @[build/NutShell.fir.opt.mlir 21894:9]
        node _T_336 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21896:21]
        node _T_337 = eq(_T_336, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21898:21]
        when _T_337 : @[build/NutShell.fir.opt.mlir 21899:11]
          skip @[build/NutShell.fir.opt.mlir 21900:13]
        node _T_338 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21903:21]
        node _T_339 = eq(_T_338, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21905:21]
        when _T_339 : @[build/NutShell.fir.opt.mlir 21906:11]
          skip @[build/NutShell.fir.opt.mlir 21907:13]
    node _T_340 = or(hasLoadAddrMisaligned, hasStoreAddrMisaligned) @[build/NutShell.fir.opt.mlir 21912:17]
    when _T_340 : @[build/NutShell.fir.opt.mlir 21913:7]
      node mtval_signBit = bits(dmemAddrMisalignedAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21915:26]
      node _mtval_T_4 = mux(mtval_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21917:23]
      node _mtval_T_5 = cat(_mtval_T_4, dmemAddrMisalignedAddr) @[build/NutShell.fir.opt.mlir 21919:23]
      connect mtval, _mtval_T_5 @[build/NutShell.fir.opt.mlir 21920:9]
      regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 21921:16]
      node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 21923:19]
      node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 21925:19]
      connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 21926:9]
      node signBit_1 = bits(dmemAddrMisalignedAddr, 38, 38) @[build/NutShell.fir.opt.mlir 21928:22]
      node _T_341 = mux(signBit_1, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 21930:19]
      node _T_342 = cat(_T_341, dmemAddrMisalignedAddr) @[build/NutShell.fir.opt.mlir 21932:19]
      node _T_343 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 21934:19]
      when _T_343 : @[build/NutShell.fir.opt.mlir 21935:9]
        node _T_344 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21937:21]
        node _T_345 = eq(_T_344, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21939:21]
        when _T_345 : @[build/NutShell.fir.opt.mlir 21940:11]
          skip @[build/NutShell.fir.opt.mlir 21941:13]
        node _T_346 = asUInt(reset) @[build/NutShell.fir.opt.mlir 21944:21]
        node _T_347 = eq(_T_346, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 21946:21]
        when _T_347 : @[build/NutShell.fir.opt.mlir 21947:11]
          skip @[build/NutShell.fir.opt.mlir 21948:13]
    wire mtip : UInt<1> @[build/NutShell.fir.opt.mlir 21952:15]
    connect mtip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21954:7]
    wire meip : UInt<1> @[build/NutShell.fir.opt.mlir 21955:15]
    connect meip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21957:7]
    wire msip : UInt<1> @[build/NutShell.fir.opt.mlir 21958:15]
    connect msip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 21960:7]
    connect mipWire.t.m, mtip @[build/NutShell.fir.opt.mlir 21961:7]
    connect mipWire.e.m, meip @[build/NutShell.fir.opt.mlir 21962:7]
    connect mipWire.s.m, msip @[build/NutShell.fir.opt.mlir 21963:7]
    wire mipRaiseIntr : { e : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, t : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, s : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 21964:23]
    connect mipRaiseIntr, mip @[build/NutShell.fir.opt.mlir 21980:7]
    node _mipRaiseIntr_e_s_T = or(mip.e.s, meip) @[build/NutShell.fir.opt.mlir 21982:30]
    connect mipRaiseIntr.e.s, _mipRaiseIntr_e_s_T @[build/NutShell.fir.opt.mlir 21983:7]
    node ideleg_lo = cat(mipRaiseIntr.s.s, mipRaiseIntr.s.u) @[build/NutShell.fir.opt.mlir 21985:20]
    node ideleg_hi = cat(mipRaiseIntr.s.m, mipRaiseIntr.s.h) @[build/NutShell.fir.opt.mlir 21987:20]
    node _ideleg_T = cat(ideleg_hi, ideleg_lo) @[build/NutShell.fir.opt.mlir 21989:20]
    node ideleg_lo_1 = cat(mipRaiseIntr.t.s, mipRaiseIntr.t.u) @[build/NutShell.fir.opt.mlir 21991:22]
    node ideleg_hi_1 = cat(mipRaiseIntr.t.m, mipRaiseIntr.t.h) @[build/NutShell.fir.opt.mlir 21993:22]
    node _ideleg_T_1 = cat(ideleg_hi_1, ideleg_lo_1) @[build/NutShell.fir.opt.mlir 21995:22]
    node ideleg_lo_2 = cat(mipRaiseIntr.e.s, mipRaiseIntr.e.u) @[build/NutShell.fir.opt.mlir 21997:22]
    node ideleg_hi_2 = cat(mipRaiseIntr.e.m, mipRaiseIntr.e.h) @[build/NutShell.fir.opt.mlir 21999:22]
    node _ideleg_T_2 = cat(ideleg_hi_2, ideleg_lo_2) @[build/NutShell.fir.opt.mlir 22001:22]
    node ideleg_hi_3 = cat(_ideleg_T_2, _ideleg_T_1) @[build/NutShell.fir.opt.mlir 22003:22]
    node _ideleg_T_3 = cat(ideleg_hi_3, _ideleg_T) @[build/NutShell.fir.opt.mlir 22005:22]
    node ideleg = and(mideleg, _ideleg_T_3) @[build/NutShell.fir.opt.mlir 22007:17]
    wire intrVecEnable : UInt<1>[12] @[build/NutShell.fir.opt.mlir 22008:24]
    node _T_348 = bits(ideleg, 0, 0) @[build/NutShell.fir.opt.mlir 22022:17]
    node _T_349 = bits(ideleg, 1, 1) @[build/NutShell.fir.opt.mlir 22024:17]
    node _T_350 = bits(ideleg, 2, 2) @[build/NutShell.fir.opt.mlir 22026:17]
    node _T_351 = bits(ideleg, 3, 3) @[build/NutShell.fir.opt.mlir 22028:17]
    node _T_352 = bits(ideleg, 4, 4) @[build/NutShell.fir.opt.mlir 22030:17]
    node _T_353 = bits(ideleg, 5, 5) @[build/NutShell.fir.opt.mlir 22032:17]
    node _T_354 = bits(ideleg, 6, 6) @[build/NutShell.fir.opt.mlir 22034:17]
    node _T_355 = bits(ideleg, 7, 7) @[build/NutShell.fir.opt.mlir 22036:17]
    node _T_356 = bits(ideleg, 8, 8) @[build/NutShell.fir.opt.mlir 22038:17]
    node _T_357 = bits(ideleg, 9, 9) @[build/NutShell.fir.opt.mlir 22040:17]
    node _T_358 = bits(ideleg, 10, 10) @[build/NutShell.fir.opt.mlir 22042:17]
    node _T_359 = bits(ideleg, 11, 11) @[build/NutShell.fir.opt.mlir 22044:17]
    node _T_360 = bits(ideleg, 12, 12) @[build/NutShell.fir.opt.mlir 22046:17]
    node _T_361 = bits(ideleg, 13, 13) @[build/NutShell.fir.opt.mlir 22048:17]
    node _T_362 = bits(ideleg, 14, 14) @[build/NutShell.fir.opt.mlir 22050:17]
    node _T_363 = bits(ideleg, 15, 15) @[build/NutShell.fir.opt.mlir 22052:17]
    node _T_364 = bits(ideleg, 16, 16) @[build/NutShell.fir.opt.mlir 22054:17]
    node _T_365 = bits(ideleg, 17, 17) @[build/NutShell.fir.opt.mlir 22056:17]
    node _T_366 = bits(ideleg, 18, 18) @[build/NutShell.fir.opt.mlir 22058:17]
    node _T_367 = bits(ideleg, 19, 19) @[build/NutShell.fir.opt.mlir 22060:17]
    node _T_368 = bits(ideleg, 20, 20) @[build/NutShell.fir.opt.mlir 22062:17]
    node _T_369 = bits(ideleg, 21, 21) @[build/NutShell.fir.opt.mlir 22064:17]
    node _T_370 = bits(ideleg, 22, 22) @[build/NutShell.fir.opt.mlir 22066:17]
    node _T_371 = bits(ideleg, 23, 23) @[build/NutShell.fir.opt.mlir 22068:17]
    node _T_372 = bits(ideleg, 24, 24) @[build/NutShell.fir.opt.mlir 22070:17]
    node _T_373 = bits(ideleg, 25, 25) @[build/NutShell.fir.opt.mlir 22072:17]
    node _T_374 = bits(ideleg, 26, 26) @[build/NutShell.fir.opt.mlir 22074:17]
    node _T_375 = bits(ideleg, 27, 27) @[build/NutShell.fir.opt.mlir 22076:17]
    node _T_376 = bits(ideleg, 28, 28) @[build/NutShell.fir.opt.mlir 22078:17]
    node _T_377 = bits(ideleg, 29, 29) @[build/NutShell.fir.opt.mlir 22080:17]
    node _T_378 = bits(ideleg, 30, 30) @[build/NutShell.fir.opt.mlir 22082:17]
    node _T_379 = bits(ideleg, 31, 31) @[build/NutShell.fir.opt.mlir 22084:17]
    node _T_380 = bits(ideleg, 32, 32) @[build/NutShell.fir.opt.mlir 22086:17]
    node _T_381 = bits(ideleg, 33, 33) @[build/NutShell.fir.opt.mlir 22088:17]
    node _T_382 = bits(ideleg, 34, 34) @[build/NutShell.fir.opt.mlir 22090:17]
    node _T_383 = bits(ideleg, 35, 35) @[build/NutShell.fir.opt.mlir 22092:17]
    node _T_384 = bits(ideleg, 36, 36) @[build/NutShell.fir.opt.mlir 22094:17]
    node _T_385 = bits(ideleg, 37, 37) @[build/NutShell.fir.opt.mlir 22096:17]
    node _T_386 = bits(ideleg, 38, 38) @[build/NutShell.fir.opt.mlir 22098:17]
    node _T_387 = bits(ideleg, 39, 39) @[build/NutShell.fir.opt.mlir 22100:17]
    node _T_388 = bits(ideleg, 40, 40) @[build/NutShell.fir.opt.mlir 22102:17]
    node _T_389 = bits(ideleg, 41, 41) @[build/NutShell.fir.opt.mlir 22104:17]
    node _T_390 = bits(ideleg, 42, 42) @[build/NutShell.fir.opt.mlir 22106:17]
    node _T_391 = bits(ideleg, 43, 43) @[build/NutShell.fir.opt.mlir 22108:17]
    node _T_392 = bits(ideleg, 44, 44) @[build/NutShell.fir.opt.mlir 22110:17]
    node _T_393 = bits(ideleg, 45, 45) @[build/NutShell.fir.opt.mlir 22112:17]
    node _T_394 = bits(ideleg, 46, 46) @[build/NutShell.fir.opt.mlir 22114:17]
    node _T_395 = bits(ideleg, 47, 47) @[build/NutShell.fir.opt.mlir 22116:17]
    node _T_396 = bits(ideleg, 48, 48) @[build/NutShell.fir.opt.mlir 22118:17]
    node _T_397 = bits(ideleg, 49, 49) @[build/NutShell.fir.opt.mlir 22120:17]
    node _T_398 = bits(ideleg, 50, 50) @[build/NutShell.fir.opt.mlir 22122:17]
    node _T_399 = bits(ideleg, 51, 51) @[build/NutShell.fir.opt.mlir 22124:17]
    node _T_400 = bits(ideleg, 52, 52) @[build/NutShell.fir.opt.mlir 22126:17]
    node _T_401 = bits(ideleg, 53, 53) @[build/NutShell.fir.opt.mlir 22128:17]
    node _T_402 = bits(ideleg, 54, 54) @[build/NutShell.fir.opt.mlir 22130:17]
    node _T_403 = bits(ideleg, 55, 55) @[build/NutShell.fir.opt.mlir 22132:17]
    node _T_404 = bits(ideleg, 56, 56) @[build/NutShell.fir.opt.mlir 22134:17]
    node _T_405 = bits(ideleg, 57, 57) @[build/NutShell.fir.opt.mlir 22136:17]
    node _T_406 = bits(ideleg, 58, 58) @[build/NutShell.fir.opt.mlir 22138:17]
    node _T_407 = bits(ideleg, 59, 59) @[build/NutShell.fir.opt.mlir 22140:17]
    node _T_408 = bits(ideleg, 60, 60) @[build/NutShell.fir.opt.mlir 22142:17]
    node _T_409 = bits(ideleg, 61, 61) @[build/NutShell.fir.opt.mlir 22144:17]
    node _T_410 = bits(ideleg, 62, 62) @[build/NutShell.fir.opt.mlir 22146:17]
    node _T_411 = bits(ideleg, 63, 63) @[build/NutShell.fir.opt.mlir 22148:17]
    node _intrVecEnable_0_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22150:29]
    node _intrVecEnable_0_T_1 = and(_intrVecEnable_0_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22152:31]
    node _intrVecEnable_0_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22154:31]
    node _intrVecEnable_0_T_3 = or(_intrVecEnable_0_T_1, _intrVecEnable_0_T_2) @[build/NutShell.fir.opt.mlir 22156:31]
    node _intrVecEnable_0_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22158:31]
    node _intrVecEnable_0_T_5 = and(_intrVecEnable_0_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22160:31]
    node _intrVecEnable_0_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22162:31]
    node _intrVecEnable_0_T_7 = or(_intrVecEnable_0_T_5, _intrVecEnable_0_T_6) @[build/NutShell.fir.opt.mlir 22164:31]
    node _intrVecEnable_0_T_8 = mux(_T_348, _intrVecEnable_0_T_3, _intrVecEnable_0_T_7) @[build/NutShell.fir.opt.mlir 22166:31]
    connect intrVecEnable[0], _intrVecEnable_0_T_8 @[build/NutShell.fir.opt.mlir 22167:7]
    node _intrVecEnable_1_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22169:29]
    node _intrVecEnable_1_T_1 = and(_intrVecEnable_1_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22171:31]
    node _intrVecEnable_1_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22173:31]
    node _intrVecEnable_1_T_3 = or(_intrVecEnable_1_T_1, _intrVecEnable_1_T_2) @[build/NutShell.fir.opt.mlir 22175:31]
    node _intrVecEnable_1_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22177:31]
    node _intrVecEnable_1_T_5 = and(_intrVecEnable_1_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22179:31]
    node _intrVecEnable_1_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22181:31]
    node _intrVecEnable_1_T_7 = or(_intrVecEnable_1_T_5, _intrVecEnable_1_T_6) @[build/NutShell.fir.opt.mlir 22183:31]
    node _intrVecEnable_1_T_8 = mux(_T_349, _intrVecEnable_1_T_3, _intrVecEnable_1_T_7) @[build/NutShell.fir.opt.mlir 22185:31]
    connect intrVecEnable[1], _intrVecEnable_1_T_8 @[build/NutShell.fir.opt.mlir 22186:7]
    node _intrVecEnable_2_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22188:29]
    node _intrVecEnable_2_T_1 = and(_intrVecEnable_2_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22190:31]
    node _intrVecEnable_2_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22192:31]
    node _intrVecEnable_2_T_3 = or(_intrVecEnable_2_T_1, _intrVecEnable_2_T_2) @[build/NutShell.fir.opt.mlir 22194:31]
    node _intrVecEnable_2_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22196:31]
    node _intrVecEnable_2_T_5 = and(_intrVecEnable_2_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22198:31]
    node _intrVecEnable_2_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22200:31]
    node _intrVecEnable_2_T_7 = or(_intrVecEnable_2_T_5, _intrVecEnable_2_T_6) @[build/NutShell.fir.opt.mlir 22202:31]
    node _intrVecEnable_2_T_8 = mux(_T_350, _intrVecEnable_2_T_3, _intrVecEnable_2_T_7) @[build/NutShell.fir.opt.mlir 22204:31]
    connect intrVecEnable[2], _intrVecEnable_2_T_8 @[build/NutShell.fir.opt.mlir 22205:7]
    node _intrVecEnable_3_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22207:29]
    node _intrVecEnable_3_T_1 = and(_intrVecEnable_3_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22209:31]
    node _intrVecEnable_3_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22211:31]
    node _intrVecEnable_3_T_3 = or(_intrVecEnable_3_T_1, _intrVecEnable_3_T_2) @[build/NutShell.fir.opt.mlir 22213:31]
    node _intrVecEnable_3_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22215:31]
    node _intrVecEnable_3_T_5 = and(_intrVecEnable_3_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22217:31]
    node _intrVecEnable_3_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22219:31]
    node _intrVecEnable_3_T_7 = or(_intrVecEnable_3_T_5, _intrVecEnable_3_T_6) @[build/NutShell.fir.opt.mlir 22221:31]
    node _intrVecEnable_3_T_8 = mux(_T_351, _intrVecEnable_3_T_3, _intrVecEnable_3_T_7) @[build/NutShell.fir.opt.mlir 22223:31]
    connect intrVecEnable[3], _intrVecEnable_3_T_8 @[build/NutShell.fir.opt.mlir 22224:7]
    node _intrVecEnable_4_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22226:29]
    node _intrVecEnable_4_T_1 = and(_intrVecEnable_4_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22228:31]
    node _intrVecEnable_4_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22230:31]
    node _intrVecEnable_4_T_3 = or(_intrVecEnable_4_T_1, _intrVecEnable_4_T_2) @[build/NutShell.fir.opt.mlir 22232:31]
    node _intrVecEnable_4_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22234:31]
    node _intrVecEnable_4_T_5 = and(_intrVecEnable_4_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22236:31]
    node _intrVecEnable_4_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22238:31]
    node _intrVecEnable_4_T_7 = or(_intrVecEnable_4_T_5, _intrVecEnable_4_T_6) @[build/NutShell.fir.opt.mlir 22240:31]
    node _intrVecEnable_4_T_8 = mux(_T_352, _intrVecEnable_4_T_3, _intrVecEnable_4_T_7) @[build/NutShell.fir.opt.mlir 22242:31]
    connect intrVecEnable[4], _intrVecEnable_4_T_8 @[build/NutShell.fir.opt.mlir 22243:7]
    node _intrVecEnable_5_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22245:29]
    node _intrVecEnable_5_T_1 = and(_intrVecEnable_5_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22247:31]
    node _intrVecEnable_5_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22249:31]
    node _intrVecEnable_5_T_3 = or(_intrVecEnable_5_T_1, _intrVecEnable_5_T_2) @[build/NutShell.fir.opt.mlir 22251:31]
    node _intrVecEnable_5_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22253:31]
    node _intrVecEnable_5_T_5 = and(_intrVecEnable_5_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22255:31]
    node _intrVecEnable_5_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22257:31]
    node _intrVecEnable_5_T_7 = or(_intrVecEnable_5_T_5, _intrVecEnable_5_T_6) @[build/NutShell.fir.opt.mlir 22259:31]
    node _intrVecEnable_5_T_8 = mux(_T_353, _intrVecEnable_5_T_3, _intrVecEnable_5_T_7) @[build/NutShell.fir.opt.mlir 22261:31]
    connect intrVecEnable[5], _intrVecEnable_5_T_8 @[build/NutShell.fir.opt.mlir 22262:7]
    node _intrVecEnable_6_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22264:29]
    node _intrVecEnable_6_T_1 = and(_intrVecEnable_6_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22266:31]
    node _intrVecEnable_6_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22268:31]
    node _intrVecEnable_6_T_3 = or(_intrVecEnable_6_T_1, _intrVecEnable_6_T_2) @[build/NutShell.fir.opt.mlir 22270:31]
    node _intrVecEnable_6_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22272:31]
    node _intrVecEnable_6_T_5 = and(_intrVecEnable_6_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22274:31]
    node _intrVecEnable_6_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22276:31]
    node _intrVecEnable_6_T_7 = or(_intrVecEnable_6_T_5, _intrVecEnable_6_T_6) @[build/NutShell.fir.opt.mlir 22278:31]
    node _intrVecEnable_6_T_8 = mux(_T_354, _intrVecEnable_6_T_3, _intrVecEnable_6_T_7) @[build/NutShell.fir.opt.mlir 22280:31]
    connect intrVecEnable[6], _intrVecEnable_6_T_8 @[build/NutShell.fir.opt.mlir 22281:7]
    node _intrVecEnable_7_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22283:29]
    node _intrVecEnable_7_T_1 = and(_intrVecEnable_7_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22285:31]
    node _intrVecEnable_7_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22287:31]
    node _intrVecEnable_7_T_3 = or(_intrVecEnable_7_T_1, _intrVecEnable_7_T_2) @[build/NutShell.fir.opt.mlir 22289:31]
    node _intrVecEnable_7_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22291:31]
    node _intrVecEnable_7_T_5 = and(_intrVecEnable_7_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22293:31]
    node _intrVecEnable_7_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22295:31]
    node _intrVecEnable_7_T_7 = or(_intrVecEnable_7_T_5, _intrVecEnable_7_T_6) @[build/NutShell.fir.opt.mlir 22297:31]
    node _intrVecEnable_7_T_8 = mux(_T_355, _intrVecEnable_7_T_3, _intrVecEnable_7_T_7) @[build/NutShell.fir.opt.mlir 22299:31]
    connect intrVecEnable[7], _intrVecEnable_7_T_8 @[build/NutShell.fir.opt.mlir 22300:7]
    node _intrVecEnable_8_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22302:29]
    node _intrVecEnable_8_T_1 = and(_intrVecEnable_8_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22304:31]
    node _intrVecEnable_8_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22306:31]
    node _intrVecEnable_8_T_3 = or(_intrVecEnable_8_T_1, _intrVecEnable_8_T_2) @[build/NutShell.fir.opt.mlir 22308:31]
    node _intrVecEnable_8_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22310:31]
    node _intrVecEnable_8_T_5 = and(_intrVecEnable_8_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22312:31]
    node _intrVecEnable_8_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22314:31]
    node _intrVecEnable_8_T_7 = or(_intrVecEnable_8_T_5, _intrVecEnable_8_T_6) @[build/NutShell.fir.opt.mlir 22316:31]
    node _intrVecEnable_8_T_8 = mux(_T_356, _intrVecEnable_8_T_3, _intrVecEnable_8_T_7) @[build/NutShell.fir.opt.mlir 22318:31]
    connect intrVecEnable[8], _intrVecEnable_8_T_8 @[build/NutShell.fir.opt.mlir 22319:7]
    node _intrVecEnable_9_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22321:29]
    node _intrVecEnable_9_T_1 = and(_intrVecEnable_9_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22323:31]
    node _intrVecEnable_9_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22325:31]
    node _intrVecEnable_9_T_3 = or(_intrVecEnable_9_T_1, _intrVecEnable_9_T_2) @[build/NutShell.fir.opt.mlir 22327:31]
    node _intrVecEnable_9_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22329:31]
    node _intrVecEnable_9_T_5 = and(_intrVecEnable_9_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22331:31]
    node _intrVecEnable_9_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22333:31]
    node _intrVecEnable_9_T_7 = or(_intrVecEnable_9_T_5, _intrVecEnable_9_T_6) @[build/NutShell.fir.opt.mlir 22335:31]
    node _intrVecEnable_9_T_8 = mux(_T_357, _intrVecEnable_9_T_3, _intrVecEnable_9_T_7) @[build/NutShell.fir.opt.mlir 22337:31]
    connect intrVecEnable[9], _intrVecEnable_9_T_8 @[build/NutShell.fir.opt.mlir 22338:7]
    node _intrVecEnable_10_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22340:30]
    node _intrVecEnable_10_T_1 = and(_intrVecEnable_10_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22342:32]
    node _intrVecEnable_10_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22344:32]
    node _intrVecEnable_10_T_3 = or(_intrVecEnable_10_T_1, _intrVecEnable_10_T_2) @[build/NutShell.fir.opt.mlir 22346:32]
    node _intrVecEnable_10_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22348:32]
    node _intrVecEnable_10_T_5 = and(_intrVecEnable_10_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22350:32]
    node _intrVecEnable_10_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22352:32]
    node _intrVecEnable_10_T_7 = or(_intrVecEnable_10_T_5, _intrVecEnable_10_T_6) @[build/NutShell.fir.opt.mlir 22354:32]
    node _intrVecEnable_10_T_8 = mux(_T_358, _intrVecEnable_10_T_3, _intrVecEnable_10_T_7) @[build/NutShell.fir.opt.mlir 22356:32]
    connect intrVecEnable[10], _intrVecEnable_10_T_8 @[build/NutShell.fir.opt.mlir 22357:7]
    node _intrVecEnable_11_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22359:30]
    node _intrVecEnable_11_T_1 = and(_intrVecEnable_11_T, mstatusStruct.ie.s) @[build/NutShell.fir.opt.mlir 22361:32]
    node _intrVecEnable_11_T_2 = lt(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22363:32]
    node _intrVecEnable_11_T_3 = or(_intrVecEnable_11_T_1, _intrVecEnable_11_T_2) @[build/NutShell.fir.opt.mlir 22365:32]
    node _intrVecEnable_11_T_4 = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22367:32]
    node _intrVecEnable_11_T_5 = and(_intrVecEnable_11_T_4, mstatusStruct.ie.m) @[build/NutShell.fir.opt.mlir 22369:32]
    node _intrVecEnable_11_T_6 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22371:32]
    node _intrVecEnable_11_T_7 = or(_intrVecEnable_11_T_5, _intrVecEnable_11_T_6) @[build/NutShell.fir.opt.mlir 22373:32]
    node _intrVecEnable_11_T_8 = mux(_T_359, _intrVecEnable_11_T_3, _intrVecEnable_11_T_7) @[build/NutShell.fir.opt.mlir 22375:32]
    connect intrVecEnable[11], _intrVecEnable_11_T_8 @[build/NutShell.fir.opt.mlir 22376:7]
    node _intrVec_T = bits(mie, 11, 0) @[build/NutShell.fir.opt.mlir 22378:21]
    node intrVec_lo = cat(mipRaiseIntr.s.s, mipRaiseIntr.s.u) @[build/NutShell.fir.opt.mlir 22380:21]
    node intrVec_hi = cat(mipRaiseIntr.s.m, mipRaiseIntr.s.h) @[build/NutShell.fir.opt.mlir 22382:21]
    node _intrVec_T_1 = cat(intrVec_hi, intrVec_lo) @[build/NutShell.fir.opt.mlir 22384:23]
    node intrVec_lo_1 = cat(mipRaiseIntr.t.s, mipRaiseIntr.t.u) @[build/NutShell.fir.opt.mlir 22386:23]
    node intrVec_hi_1 = cat(mipRaiseIntr.t.m, mipRaiseIntr.t.h) @[build/NutShell.fir.opt.mlir 22388:23]
    node _intrVec_T_2 = cat(intrVec_hi_1, intrVec_lo_1) @[build/NutShell.fir.opt.mlir 22390:23]
    node intrVec_lo_2 = cat(mipRaiseIntr.e.s, mipRaiseIntr.e.u) @[build/NutShell.fir.opt.mlir 22392:23]
    node intrVec_hi_2 = cat(mipRaiseIntr.e.m, mipRaiseIntr.e.h) @[build/NutShell.fir.opt.mlir 22394:23]
    node _intrVec_T_3 = cat(intrVec_hi_2, intrVec_lo_2) @[build/NutShell.fir.opt.mlir 22396:23]
    node intrVec_hi_3 = cat(_intrVec_T_3, _intrVec_T_2) @[build/NutShell.fir.opt.mlir 22398:23]
    node _intrVec_T_4 = cat(intrVec_hi_3, _intrVec_T_1) @[build/NutShell.fir.opt.mlir 22400:23]
    node _intrVec_T_5 = and(_intrVec_T, _intrVec_T_4) @[build/NutShell.fir.opt.mlir 22402:23]
    node intrVec_lo_lo_hi = cat(intrVecEnable[2], intrVecEnable[1]) @[build/NutShell.fir.opt.mlir 22404:27]
    node intrVec_lo_lo = cat(intrVec_lo_lo_hi, intrVecEnable[0]) @[build/NutShell.fir.opt.mlir 22406:24]
    node intrVec_lo_hi_hi = cat(intrVecEnable[5], intrVecEnable[4]) @[build/NutShell.fir.opt.mlir 22408:27]
    node intrVec_lo_hi = cat(intrVec_lo_hi_hi, intrVecEnable[3]) @[build/NutShell.fir.opt.mlir 22410:24]
    node intrVec_lo_3 = cat(intrVec_lo_hi, intrVec_lo_lo) @[build/NutShell.fir.opt.mlir 22412:23]
    node intrVec_hi_lo_hi = cat(intrVecEnable[8], intrVecEnable[7]) @[build/NutShell.fir.opt.mlir 22414:27]
    node intrVec_hi_lo = cat(intrVec_hi_lo_hi, intrVecEnable[6]) @[build/NutShell.fir.opt.mlir 22416:24]
    node intrVec_hi_hi_hi = cat(intrVecEnable[11], intrVecEnable[10]) @[build/NutShell.fir.opt.mlir 22418:27]
    node intrVec_hi_hi = cat(intrVec_hi_hi_hi, intrVecEnable[9]) @[build/NutShell.fir.opt.mlir 22420:24]
    node intrVec_hi_4 = cat(intrVec_hi_hi, intrVec_hi_lo) @[build/NutShell.fir.opt.mlir 22422:23]
    node _intrVec_T_6 = cat(intrVec_hi_4, intrVec_lo_3) @[build/NutShell.fir.opt.mlir 22424:23]
    node intrVec = and(_intrVec_T_5, _intrVec_T_6) @[build/NutShell.fir.opt.mlir 22426:18]
    wire _WIRE : UInt @[build/NutShell.fir.opt.mlir 22427:16]
    connect _WIRE, intrVec @[build/NutShell.fir.opt.mlir 22428:7]
    node _intrNO_T = mux(io.cfIn.intrVec[4], UInt<3>(4), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22431:20]
    node _intrNO_T_1 = mux(io.cfIn.intrVec[8], UInt<4>(8), _intrNO_T) @[build/NutShell.fir.opt.mlir 22433:22]
    node _intrNO_T_2 = mux(io.cfIn.intrVec[0], UInt<1>(0), _intrNO_T_1) @[build/NutShell.fir.opt.mlir 22435:22]
    node _intrNO_T_3 = mux(io.cfIn.intrVec[5], UInt<3>(5), _intrNO_T_2) @[build/NutShell.fir.opt.mlir 22437:22]
    node _intrNO_T_4 = mux(io.cfIn.intrVec[9], UInt<4>(9), _intrNO_T_3) @[build/NutShell.fir.opt.mlir 22440:22]
    node _intrNO_T_5 = mux(io.cfIn.intrVec[1], UInt<1>(1), _intrNO_T_4) @[build/NutShell.fir.opt.mlir 22442:22]
    node _intrNO_T_6 = mux(io.cfIn.intrVec[7], UInt<3>(7), _intrNO_T_5) @[build/NutShell.fir.opt.mlir 22444:22]
    node _intrNO_T_7 = mux(io.cfIn.intrVec[11], UInt<4>(11), _intrNO_T_6) @[build/NutShell.fir.opt.mlir 22447:22]
    node intrNO = mux(io.cfIn.intrVec[3], UInt<2>(3), _intrNO_T_7) @[build/NutShell.fir.opt.mlir 22449:17]
    node raiseIntr_lo_lo_hi = cat(io.cfIn.intrVec[2], io.cfIn.intrVec[1]) @[build/NutShell.fir.opt.mlir 22451:29]
    node raiseIntr_lo_lo = cat(raiseIntr_lo_lo_hi, io.cfIn.intrVec[0]) @[build/NutShell.fir.opt.mlir 22453:26]
    node raiseIntr_lo_hi_hi = cat(io.cfIn.intrVec[5], io.cfIn.intrVec[4]) @[build/NutShell.fir.opt.mlir 22455:29]
    node raiseIntr_lo_hi = cat(raiseIntr_lo_hi_hi, io.cfIn.intrVec[3]) @[build/NutShell.fir.opt.mlir 22457:26]
    node raiseIntr_lo = cat(raiseIntr_lo_hi, raiseIntr_lo_lo) @[build/NutShell.fir.opt.mlir 22459:23]
    node raiseIntr_hi_lo_hi = cat(io.cfIn.intrVec[8], io.cfIn.intrVec[7]) @[build/NutShell.fir.opt.mlir 22461:29]
    node raiseIntr_hi_lo = cat(raiseIntr_hi_lo_hi, io.cfIn.intrVec[6]) @[build/NutShell.fir.opt.mlir 22463:26]
    node raiseIntr_hi_hi_hi = cat(io.cfIn.intrVec[11], io.cfIn.intrVec[10]) @[build/NutShell.fir.opt.mlir 22465:29]
    node raiseIntr_hi_hi = cat(raiseIntr_hi_hi_hi, io.cfIn.intrVec[9]) @[build/NutShell.fir.opt.mlir 22467:26]
    node raiseIntr_hi = cat(raiseIntr_hi_hi, raiseIntr_hi_lo) @[build/NutShell.fir.opt.mlir 22469:23]
    node _raiseIntr_T = cat(raiseIntr_hi, raiseIntr_lo) @[build/NutShell.fir.opt.mlir 22471:23]
    node raiseIntr = orr(_raiseIntr_T) @[build/NutShell.fir.opt.mlir 22473:20]
    wire csrExceptionVec : UInt<1>[16] @[build/NutShell.fir.opt.mlir 22474:26]
    connect csrExceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22492:7]
    connect csrExceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22494:7]
    connect csrExceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22496:7]
    connect csrExceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22498:7]
    connect csrExceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22500:7]
    connect csrExceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22502:7]
    connect csrExceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22504:7]
    connect csrExceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22506:7]
    connect csrExceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22508:7]
    connect csrExceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22510:7]
    connect csrExceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22512:7]
    connect csrExceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22514:7]
    connect csrExceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22516:7]
    connect csrExceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22518:7]
    connect csrExceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22520:7]
    connect csrExceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 22522:7]
    node _csrExceptionVec_3_T = and(io.in.valid, isEbreak) @[build/NutShell.fir.opt.mlir 22524:31]
    connect csrExceptionVec[3], _csrExceptionVec_3_T @[build/NutShell.fir.opt.mlir 22525:7]
    node _csrExceptionVec_11_T = eq(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22527:32]
    node _csrExceptionVec_11_T_1 = and(_csrExceptionVec_11_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22529:34]
    node _csrExceptionVec_11_T_2 = and(_csrExceptionVec_11_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22531:34]
    connect csrExceptionVec[11], _csrExceptionVec_11_T_2 @[build/NutShell.fir.opt.mlir 22532:7]
    node _csrExceptionVec_9_T = eq(privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22534:31]
    node _csrExceptionVec_9_T_1 = and(_csrExceptionVec_9_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22536:33]
    node _csrExceptionVec_9_T_2 = and(_csrExceptionVec_9_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22538:33]
    connect csrExceptionVec[9], _csrExceptionVec_9_T_2 @[build/NutShell.fir.opt.mlir 22539:7]
    node _csrExceptionVec_8_T = eq(privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22541:31]
    node _csrExceptionVec_8_T_1 = and(_csrExceptionVec_8_T, io.in.valid) @[build/NutShell.fir.opt.mlir 22543:33]
    node _csrExceptionVec_8_T_2 = and(_csrExceptionVec_8_T_1, isEcall) @[build/NutShell.fir.opt.mlir 22545:33]
    connect csrExceptionVec[8], _csrExceptionVec_8_T_2 @[build/NutShell.fir.opt.mlir 22546:7]
    node _csrExceptionVec_2_T = or(isIllegalAddr, isIllegalAccess) @[build/NutShell.fir.opt.mlir 22548:31]
    node _csrExceptionVec_2_T_1 = and(_csrExceptionVec_2_T, wen) @[build/NutShell.fir.opt.mlir 22550:33]
    node _csrExceptionVec_2_T_2 = eq(io.isBackendException, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22552:33]
    node _csrExceptionVec_2_T_3 = and(_csrExceptionVec_2_T_1, _csrExceptionVec_2_T_2) @[build/NutShell.fir.opt.mlir 22554:33]
    connect csrExceptionVec[2], _csrExceptionVec_2_T_3 @[build/NutShell.fir.opt.mlir 22555:7]
    connect csrExceptionVec[13], hasLoadPageFault @[build/NutShell.fir.opt.mlir 22556:7]
    connect csrExceptionVec[15], hasStorePageFault @[build/NutShell.fir.opt.mlir 22557:7]
    node raiseExceptionVec_lo_lo_lo = cat(csrExceptionVec[1], csrExceptionVec[0]) @[build/NutShell.fir.opt.mlir 22559:37]
    node raiseExceptionVec_lo_lo_hi = cat(csrExceptionVec[3], csrExceptionVec[2]) @[build/NutShell.fir.opt.mlir 22561:37]
    node raiseExceptionVec_lo_lo = cat(raiseExceptionVec_lo_lo_hi, raiseExceptionVec_lo_lo_lo) @[build/NutShell.fir.opt.mlir 22563:34]
    node raiseExceptionVec_lo_hi_lo = cat(csrExceptionVec[5], csrExceptionVec[4]) @[build/NutShell.fir.opt.mlir 22565:37]
    node raiseExceptionVec_lo_hi_hi = cat(csrExceptionVec[7], csrExceptionVec[6]) @[build/NutShell.fir.opt.mlir 22567:37]
    node raiseExceptionVec_lo_hi = cat(raiseExceptionVec_lo_hi_hi, raiseExceptionVec_lo_hi_lo) @[build/NutShell.fir.opt.mlir 22569:34]
    node raiseExceptionVec_lo = cat(raiseExceptionVec_lo_hi, raiseExceptionVec_lo_lo) @[build/NutShell.fir.opt.mlir 22571:31]
    node raiseExceptionVec_hi_lo_lo = cat(csrExceptionVec[9], csrExceptionVec[8]) @[build/NutShell.fir.opt.mlir 22573:37]
    node raiseExceptionVec_hi_lo_hi = cat(csrExceptionVec[11], csrExceptionVec[10]) @[build/NutShell.fir.opt.mlir 22575:37]
    node raiseExceptionVec_hi_lo = cat(raiseExceptionVec_hi_lo_hi, raiseExceptionVec_hi_lo_lo) @[build/NutShell.fir.opt.mlir 22577:34]
    node raiseExceptionVec_hi_hi_lo = cat(csrExceptionVec[13], csrExceptionVec[12]) @[build/NutShell.fir.opt.mlir 22579:37]
    node raiseExceptionVec_hi_hi_hi = cat(csrExceptionVec[15], csrExceptionVec[14]) @[build/NutShell.fir.opt.mlir 22581:37]
    node raiseExceptionVec_hi_hi = cat(raiseExceptionVec_hi_hi_hi, raiseExceptionVec_hi_hi_lo) @[build/NutShell.fir.opt.mlir 22583:34]
    node raiseExceptionVec_hi = cat(raiseExceptionVec_hi_hi, raiseExceptionVec_hi_lo) @[build/NutShell.fir.opt.mlir 22585:31]
    node _raiseExceptionVec_T = cat(raiseExceptionVec_hi, raiseExceptionVec_lo) @[build/NutShell.fir.opt.mlir 22587:31]
    node raiseExceptionVec_lo_lo_lo_1 = cat(io.cfIn.exceptionVec[1], io.cfIn.exceptionVec[0]) @[build/NutShell.fir.opt.mlir 22589:39]
    node raiseExceptionVec_lo_lo_hi_1 = cat(io.cfIn.exceptionVec[3], io.cfIn.exceptionVec[2]) @[build/NutShell.fir.opt.mlir 22591:39]
    node raiseExceptionVec_lo_lo_1 = cat(raiseExceptionVec_lo_lo_hi_1, raiseExceptionVec_lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 22593:36]
    node raiseExceptionVec_lo_hi_lo_1 = cat(io.cfIn.exceptionVec[5], io.cfIn.exceptionVec[4]) @[build/NutShell.fir.opt.mlir 22595:39]
    node raiseExceptionVec_lo_hi_hi_1 = cat(io.cfIn.exceptionVec[7], io.cfIn.exceptionVec[6]) @[build/NutShell.fir.opt.mlir 22597:39]
    node raiseExceptionVec_lo_hi_1 = cat(raiseExceptionVec_lo_hi_hi_1, raiseExceptionVec_lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 22599:36]
    node raiseExceptionVec_lo_1 = cat(raiseExceptionVec_lo_hi_1, raiseExceptionVec_lo_lo_1) @[build/NutShell.fir.opt.mlir 22601:33]
    node raiseExceptionVec_hi_lo_lo_1 = cat(io.cfIn.exceptionVec[9], io.cfIn.exceptionVec[8]) @[build/NutShell.fir.opt.mlir 22603:39]
    node raiseExceptionVec_hi_lo_hi_1 = cat(io.cfIn.exceptionVec[11], io.cfIn.exceptionVec[10]) @[build/NutShell.fir.opt.mlir 22605:39]
    node raiseExceptionVec_hi_lo_1 = cat(raiseExceptionVec_hi_lo_hi_1, raiseExceptionVec_hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 22607:36]
    node raiseExceptionVec_hi_hi_lo_1 = cat(io.cfIn.exceptionVec[13], io.cfIn.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 22609:39]
    node raiseExceptionVec_hi_hi_hi_1 = cat(io.cfIn.exceptionVec[15], io.cfIn.exceptionVec[14]) @[build/NutShell.fir.opt.mlir 22611:39]
    node raiseExceptionVec_hi_hi_1 = cat(raiseExceptionVec_hi_hi_hi_1, raiseExceptionVec_hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 22613:36]
    node raiseExceptionVec_hi_1 = cat(raiseExceptionVec_hi_hi_1, raiseExceptionVec_hi_lo_1) @[build/NutShell.fir.opt.mlir 22615:33]
    node _raiseExceptionVec_T_1 = cat(raiseExceptionVec_hi_1, raiseExceptionVec_lo_1) @[build/NutShell.fir.opt.mlir 22617:33]
    node raiseExceptionVec = or(_raiseExceptionVec_T, _raiseExceptionVec_T_1) @[build/NutShell.fir.opt.mlir 22619:28]
    node raiseException = orr(raiseExceptionVec) @[build/NutShell.fir.opt.mlir 22621:25]
    node _exceptionNO_T = bits(raiseExceptionVec, 5, 5) @[build/NutShell.fir.opt.mlir 22623:25]
    node _exceptionNO_T_1 = mux(_exceptionNO_T, UInt<3>(5), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22625:27]
    node _exceptionNO_T_2 = bits(raiseExceptionVec, 7, 7) @[build/NutShell.fir.opt.mlir 22627:27]
    node _exceptionNO_T_3 = mux(_exceptionNO_T_2, UInt<3>(7), _exceptionNO_T_1) @[build/NutShell.fir.opt.mlir 22629:27]
    node _exceptionNO_T_4 = bits(raiseExceptionVec, 13, 13) @[build/NutShell.fir.opt.mlir 22631:27]
    node _exceptionNO_T_5 = mux(_exceptionNO_T_4, UInt<4>(13), _exceptionNO_T_3) @[build/NutShell.fir.opt.mlir 22634:27]
    node _exceptionNO_T_6 = bits(raiseExceptionVec, 15, 15) @[build/NutShell.fir.opt.mlir 22636:27]
    node _exceptionNO_T_7 = mux(_exceptionNO_T_6, UInt<4>(15), _exceptionNO_T_5) @[build/NutShell.fir.opt.mlir 22638:27]
    node _exceptionNO_T_8 = bits(raiseExceptionVec, 4, 4) @[build/NutShell.fir.opt.mlir 22640:27]
    node _exceptionNO_T_9 = mux(_exceptionNO_T_8, UInt<3>(4), _exceptionNO_T_7) @[build/NutShell.fir.opt.mlir 22642:27]
    node _exceptionNO_T_10 = bits(raiseExceptionVec, 6, 6) @[build/NutShell.fir.opt.mlir 22644:28]
    node _exceptionNO_T_11 = mux(_exceptionNO_T_10, UInt<3>(6), _exceptionNO_T_9) @[build/NutShell.fir.opt.mlir 22646:28]
    node _exceptionNO_T_12 = bits(raiseExceptionVec, 8, 8) @[build/NutShell.fir.opt.mlir 22648:28]
    node _exceptionNO_T_13 = mux(_exceptionNO_T_12, UInt<4>(8), _exceptionNO_T_11) @[build/NutShell.fir.opt.mlir 22650:28]
    node _exceptionNO_T_14 = bits(raiseExceptionVec, 9, 9) @[build/NutShell.fir.opt.mlir 22652:28]
    node _exceptionNO_T_15 = mux(_exceptionNO_T_14, UInt<4>(9), _exceptionNO_T_13) @[build/NutShell.fir.opt.mlir 22654:28]
    node _exceptionNO_T_16 = bits(raiseExceptionVec, 11, 11) @[build/NutShell.fir.opt.mlir 22656:28]
    node _exceptionNO_T_17 = mux(_exceptionNO_T_16, UInt<4>(11), _exceptionNO_T_15) @[build/NutShell.fir.opt.mlir 22658:28]
    node _exceptionNO_T_18 = bits(raiseExceptionVec, 0, 0) @[build/NutShell.fir.opt.mlir 22660:28]
    node _exceptionNO_T_19 = mux(_exceptionNO_T_18, UInt<1>(0), _exceptionNO_T_17) @[build/NutShell.fir.opt.mlir 22662:28]
    node _exceptionNO_T_20 = bits(raiseExceptionVec, 2, 2) @[build/NutShell.fir.opt.mlir 22664:28]
    node _exceptionNO_T_21 = mux(_exceptionNO_T_20, UInt<2>(2), _exceptionNO_T_19) @[build/NutShell.fir.opt.mlir 22666:28]
    node _exceptionNO_T_22 = bits(raiseExceptionVec, 1, 1) @[build/NutShell.fir.opt.mlir 22668:28]
    node _exceptionNO_T_23 = mux(_exceptionNO_T_22, UInt<1>(1), _exceptionNO_T_21) @[build/NutShell.fir.opt.mlir 22670:28]
    node _exceptionNO_T_24 = bits(raiseExceptionVec, 12, 12) @[build/NutShell.fir.opt.mlir 22672:28]
    node _exceptionNO_T_25 = mux(_exceptionNO_T_24, UInt<4>(12), _exceptionNO_T_23) @[build/NutShell.fir.opt.mlir 22675:28]
    node _exceptionNO_T_26 = bits(raiseExceptionVec, 3, 3) @[build/NutShell.fir.opt.mlir 22677:28]
    node exceptionNO = mux(_exceptionNO_T_26, UInt<2>(3), _exceptionNO_T_25) @[build/NutShell.fir.opt.mlir 22679:22]
    connect io.wenFix, raiseException @[build/NutShell.fir.opt.mlir 22680:7]
    node _causeNO_T = shl(raiseIntr, 63) @[build/NutShell.fir.opt.mlir 22682:21]
    node _causeNO_T_1 = mux(raiseIntr, intrNO, exceptionNO) @[build/NutShell.fir.opt.mlir 22684:23]
    node causeNO = or(_causeNO_T, _causeNO_T_1) @[build/NutShell.fir.opt.mlir 22686:18]
    node _io_intrNO_T = mux(raiseIntr, causeNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22688:23]
    connect io.intrNO, _io_intrNO_T @[build/NutShell.fir.opt.mlir 22689:7]
    node _raiseExceptionIntr_T = or(raiseException, raiseIntr) @[build/NutShell.fir.opt.mlir 22691:32]
    node raiseExceptionIntr = and(_raiseExceptionIntr_T, io.instrValid) @[build/NutShell.fir.opt.mlir 22693:29]
    wire retTarget : UInt<39> @[build/NutShell.fir.opt.mlir 22694:20]
    wire trapTarget : UInt<39> @[build/NutShell.fir.opt.mlir 22695:21]
    node _io_redirect_valid_T = eq(io.in.bits.func, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22697:31]
    node _io_redirect_valid_T_1 = and(io.in.valid, _io_redirect_valid_T) @[build/NutShell.fir.opt.mlir 22699:33]
    node _io_redirect_valid_T_2 = or(_io_redirect_valid_T_1, raiseExceptionIntr) @[build/NutShell.fir.opt.mlir 22701:33]
    node _io_redirect_valid_T_3 = or(_io_redirect_valid_T_2, resetSatp) @[build/NutShell.fir.opt.mlir 22703:33]
    connect io.redirect.valid, _io_redirect_valid_T_3 @[build/NutShell.fir.opt.mlir 22704:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 22706:7]
    node _io_redirect_target_T = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 22708:32]
    node _io_redirect_target_T_1 = tail(_io_redirect_target_T, 1) @[build/NutShell.fir.opt.mlir 22710:34]
    node _io_redirect_target_T_2 = mux(raiseExceptionIntr, trapTarget, retTarget) @[build/NutShell.fir.opt.mlir 22712:34]
    node _io_redirect_target_T_3 = mux(resetSatp, _io_redirect_target_T_1, _io_redirect_target_T_2) @[build/NutShell.fir.opt.mlir 22714:34]
    connect io.redirect.target, _io_redirect_target_T_3 @[build/NutShell.fir.opt.mlir 22715:7]
    node lo_lo_lo = cat(csrExceptionVec[1], csrExceptionVec[0]) @[build/NutShell.fir.opt.mlir 22717:19]
    node lo_lo_hi = cat(csrExceptionVec[3], csrExceptionVec[2]) @[build/NutShell.fir.opt.mlir 22719:19]
    node lo_lo = cat(lo_lo_hi, lo_lo_lo) @[build/NutShell.fir.opt.mlir 22721:16]
    node lo_hi_lo = cat(csrExceptionVec[5], csrExceptionVec[4]) @[build/NutShell.fir.opt.mlir 22723:19]
    node lo_hi_hi = cat(csrExceptionVec[7], csrExceptionVec[6]) @[build/NutShell.fir.opt.mlir 22725:19]
    node lo_hi = cat(lo_hi_hi, lo_hi_lo) @[build/NutShell.fir.opt.mlir 22727:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 22729:13]
    node hi_lo_lo = cat(csrExceptionVec[9], csrExceptionVec[8]) @[build/NutShell.fir.opt.mlir 22731:19]
    node hi_lo_hi = cat(csrExceptionVec[11], csrExceptionVec[10]) @[build/NutShell.fir.opt.mlir 22733:19]
    node hi_lo = cat(hi_lo_hi, hi_lo_lo) @[build/NutShell.fir.opt.mlir 22735:16]
    node hi_hi_lo = cat(csrExceptionVec[13], csrExceptionVec[12]) @[build/NutShell.fir.opt.mlir 22737:19]
    node hi_hi_hi = cat(csrExceptionVec[15], csrExceptionVec[14]) @[build/NutShell.fir.opt.mlir 22739:19]
    node hi_hi = cat(hi_hi_hi, hi_hi_lo) @[build/NutShell.fir.opt.mlir 22741:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 22743:13]
    node _T_412 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 22745:17]
    node lo_lo_lo_1 = cat(io.cfIn.exceptionVec[1], io.cfIn.exceptionVec[0]) @[build/NutShell.fir.opt.mlir 22747:21]
    node lo_lo_hi_1 = cat(io.cfIn.exceptionVec[3], io.cfIn.exceptionVec[2]) @[build/NutShell.fir.opt.mlir 22749:21]
    node lo_lo_1 = cat(lo_lo_hi_1, lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 22751:18]
    node lo_hi_lo_1 = cat(io.cfIn.exceptionVec[5], io.cfIn.exceptionVec[4]) @[build/NutShell.fir.opt.mlir 22753:21]
    node lo_hi_hi_1 = cat(io.cfIn.exceptionVec[7], io.cfIn.exceptionVec[6]) @[build/NutShell.fir.opt.mlir 22755:21]
    node lo_hi_1 = cat(lo_hi_hi_1, lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 22757:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 22759:15]
    node hi_lo_lo_1 = cat(io.cfIn.exceptionVec[9], io.cfIn.exceptionVec[8]) @[build/NutShell.fir.opt.mlir 22761:21]
    node hi_lo_hi_1 = cat(io.cfIn.exceptionVec[11], io.cfIn.exceptionVec[10]) @[build/NutShell.fir.opt.mlir 22763:21]
    node hi_lo_1 = cat(hi_lo_hi_1, hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 22765:18]
    node hi_hi_lo_1 = cat(io.cfIn.exceptionVec[13], io.cfIn.exceptionVec[12]) @[build/NutShell.fir.opt.mlir 22767:21]
    node hi_hi_hi_1 = cat(io.cfIn.exceptionVec[15], io.cfIn.exceptionVec[14]) @[build/NutShell.fir.opt.mlir 22769:21]
    node hi_hi_1 = cat(hi_hi_hi_1, hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 22771:18]
    node hi_1 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 22773:15]
    node _T_413 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 22775:17]
    node _T_414 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22777:17]
    when _T_414 : @[build/NutShell.fir.opt.mlir 22778:7]
      node _T_415 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22780:19]
      node _T_416 = eq(_T_415, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22782:19]
      when _T_416 : @[build/NutShell.fir.opt.mlir 22783:9]
        skip @[build/NutShell.fir.opt.mlir 22784:11]
      node _T_417 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22787:19]
      node _T_418 = eq(_T_417, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22789:19]
      when _T_418 : @[build/NutShell.fir.opt.mlir 22790:9]
        skip @[build/NutShell.fir.opt.mlir 22791:11]
    node lo_lo_hi_2 = cat(io.cfIn.intrVec[2], io.cfIn.intrVec[1]) @[build/NutShell.fir.opt.mlir 22795:21]
    node lo_lo_2 = cat(lo_lo_hi_2, io.cfIn.intrVec[0]) @[build/NutShell.fir.opt.mlir 22797:18]
    node lo_hi_hi_2 = cat(io.cfIn.intrVec[5], io.cfIn.intrVec[4]) @[build/NutShell.fir.opt.mlir 22799:21]
    node lo_hi_2 = cat(lo_hi_hi_2, io.cfIn.intrVec[3]) @[build/NutShell.fir.opt.mlir 22801:18]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[build/NutShell.fir.opt.mlir 22803:15]
    node hi_lo_hi_2 = cat(io.cfIn.intrVec[8], io.cfIn.intrVec[7]) @[build/NutShell.fir.opt.mlir 22805:21]
    node hi_lo_2 = cat(hi_lo_hi_2, io.cfIn.intrVec[6]) @[build/NutShell.fir.opt.mlir 22807:18]
    node hi_hi_hi_2 = cat(io.cfIn.intrVec[11], io.cfIn.intrVec[10]) @[build/NutShell.fir.opt.mlir 22809:21]
    node hi_hi_2 = cat(hi_hi_hi_2, io.cfIn.intrVec[9]) @[build/NutShell.fir.opt.mlir 22811:18]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[build/NutShell.fir.opt.mlir 22813:15]
    node _T_419 = cat(hi_2, lo_2) @[build/NutShell.fir.opt.mlir 22815:17]
    node _T_420 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22817:17]
    when _T_420 : @[build/NutShell.fir.opt.mlir 22818:7]
      node _T_421 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22820:19]
      node _T_422 = eq(_T_421, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22822:19]
      when _T_422 : @[build/NutShell.fir.opt.mlir 22823:9]
        skip @[build/NutShell.fir.opt.mlir 22824:11]
      node _T_423 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22827:19]
      node _T_424 = eq(_T_423, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22829:19]
      when _T_424 : @[build/NutShell.fir.opt.mlir 22830:9]
        skip @[build/NutShell.fir.opt.mlir 22831:11]
    regreset c_3 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 22834:14]
    node _c_T_6 = add(c_3, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 22836:17]
    node _c_T_7 = tail(_c_T_6, 1) @[build/NutShell.fir.opt.mlir 22838:17]
    connect c_3, _c_T_7 @[build/NutShell.fir.opt.mlir 22839:7]
    node _T_425 = and(raiseExceptionIntr, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22841:17]
    when _T_425 : @[build/NutShell.fir.opt.mlir 22842:7]
      node _T_426 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22844:19]
      node _T_427 = eq(_T_426, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22846:19]
      when _T_427 : @[build/NutShell.fir.opt.mlir 22847:9]
        skip @[build/NutShell.fir.opt.mlir 22848:11]
      node _T_428 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22851:19]
      node _T_429 = eq(_T_428, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22853:19]
      when _T_429 : @[build/NutShell.fir.opt.mlir 22854:9]
        skip @[build/NutShell.fir.opt.mlir 22855:11]
    node _T_430 = and(io.redirect.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22859:17]
    when _T_430 : @[build/NutShell.fir.opt.mlir 22860:7]
      node _T_431 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22862:19]
      node _T_432 = eq(_T_431, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22864:19]
      when _T_432 : @[build/NutShell.fir.opt.mlir 22865:9]
        skip @[build/NutShell.fir.opt.mlir 22866:11]
      node _T_433 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22869:19]
      node _T_434 = eq(_T_433, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22871:19]
      when _T_434 : @[build/NutShell.fir.opt.mlir 22872:9]
        skip @[build/NutShell.fir.opt.mlir 22873:11]
    node _T_435 = and(resetSatp, c_control.logEnable) @[build/NutShell.fir.opt.mlir 22877:17]
    when _T_435 : @[build/NutShell.fir.opt.mlir 22878:7]
      node _T_436 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22880:19]
      node _T_437 = eq(_T_436, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22882:19]
      when _T_437 : @[build/NutShell.fir.opt.mlir 22883:9]
        skip @[build/NutShell.fir.opt.mlir 22884:11]
      node _T_438 = asUInt(reset) @[build/NutShell.fir.opt.mlir 22887:19]
      node _T_439 = eq(_T_438, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22889:19]
      when _T_439 : @[build/NutShell.fir.opt.mlir 22890:9]
        skip @[build/NutShell.fir.opt.mlir 22891:11]
    node deleg = mux(raiseIntr, mideleg, medeleg) @[build/NutShell.fir.opt.mlir 22895:16]
    node _delegS_T = bits(causeNO, 3, 0) @[build/NutShell.fir.opt.mlir 22897:20]
    node _delegS_T_1 = dshr(deleg, _delegS_T) @[build/NutShell.fir.opt.mlir 22899:22]
    node _delegS_T_2 = bits(_delegS_T_1, 0, 0) @[build/NutShell.fir.opt.mlir 22901:22]
    node _delegS_T_3 = lt(privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 22903:22]
    node delegS = and(_delegS_T_2, _delegS_T_3) @[build/NutShell.fir.opt.mlir 22905:17]
    node _tvalWen_T = or(hasInstrPageFault, hasLoadPageFault) @[build/NutShell.fir.opt.mlir 22907:21]
    node _tvalWen_T_1 = or(_tvalWen_T, hasStorePageFault) @[build/NutShell.fir.opt.mlir 22909:23]
    node _tvalWen_T_2 = or(_tvalWen_T_1, hasLoadAddrMisaligned) @[build/NutShell.fir.opt.mlir 22911:23]
    node _tvalWen_T_3 = or(_tvalWen_T_2, hasStoreAddrMisaligned) @[build/NutShell.fir.opt.mlir 22913:23]
    node _tvalWen_T_4 = eq(_tvalWen_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 22915:23]
    node tvalWen = or(_tvalWen_T_4, raiseIntr) @[build/NutShell.fir.opt.mlir 22917:18]
    node _ret_T = or(isMret, isSret) @[build/NutShell.fir.opt.mlir 22919:17]
    node _ret_T_1 = or(_ret_T, isUret) @[build/NutShell.fir.opt.mlir 22921:19]
    connect ret, _ret_T_1 @[build/NutShell.fir.opt.mlir 22922:7]
    node _trapTarget_T = mux(delegS, stvec, mtvec) @[build/NutShell.fir.opt.mlir 22924:24]
    node _trapTarget_T_1 = bits(_trapTarget_T, 38, 0) @[build/NutShell.fir.opt.mlir 22926:26]
    connect trapTarget, _trapTarget_T_1 @[build/NutShell.fir.opt.mlir 22927:7]
    invalidate retTarget @[build/NutShell.fir.opt.mlir 22929:7]
    node _T_440 = and(io.in.valid, isMret) @[build/NutShell.fir.opt.mlir 22931:17]
    when _T_440 : @[build/NutShell.fir.opt.mlir 22932:7]
      wire _mstatusOld_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 22933:29]
      wire _mstatusOld_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 22960:31]
      connect _mstatusOld_WIRE_1, mstatus @[build/NutShell.fir.opt.mlir 22961:9]
      node _mstatusOld_T = bits(_mstatusOld_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 22963:26]
      connect _mstatusOld_WIRE.ie.u, _mstatusOld_T @[build/NutShell.fir.opt.mlir 22964:9]
      node _mstatusOld_T_1 = bits(_mstatusOld_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 22966:28]
      connect _mstatusOld_WIRE.ie.s, _mstatusOld_T_1 @[build/NutShell.fir.opt.mlir 22967:9]
      node _mstatusOld_T_2 = bits(_mstatusOld_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 22969:28]
      connect _mstatusOld_WIRE.ie.h, _mstatusOld_T_2 @[build/NutShell.fir.opt.mlir 22970:9]
      node _mstatusOld_T_3 = bits(_mstatusOld_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 22972:28]
      connect _mstatusOld_WIRE.ie.m, _mstatusOld_T_3 @[build/NutShell.fir.opt.mlir 22973:9]
      node _mstatusOld_T_4 = bits(_mstatusOld_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 22975:28]
      connect _mstatusOld_WIRE.pie.u, _mstatusOld_T_4 @[build/NutShell.fir.opt.mlir 22976:9]
      node _mstatusOld_T_5 = bits(_mstatusOld_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 22978:28]
      connect _mstatusOld_WIRE.pie.s, _mstatusOld_T_5 @[build/NutShell.fir.opt.mlir 22979:9]
      node _mstatusOld_T_6 = bits(_mstatusOld_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 22981:28]
      connect _mstatusOld_WIRE.pie.h, _mstatusOld_T_6 @[build/NutShell.fir.opt.mlir 22982:9]
      node _mstatusOld_T_7 = bits(_mstatusOld_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 22984:28]
      connect _mstatusOld_WIRE.pie.m, _mstatusOld_T_7 @[build/NutShell.fir.opt.mlir 22985:9]
      node _mstatusOld_T_8 = bits(_mstatusOld_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 22987:28]
      connect _mstatusOld_WIRE.spp, _mstatusOld_T_8 @[build/NutShell.fir.opt.mlir 22988:9]
      node _mstatusOld_T_9 = bits(_mstatusOld_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 22990:28]
      connect _mstatusOld_WIRE.hpp, _mstatusOld_T_9 @[build/NutShell.fir.opt.mlir 22991:9]
      node _mstatusOld_T_10 = bits(_mstatusOld_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 22993:29]
      connect _mstatusOld_WIRE.mpp, _mstatusOld_T_10 @[build/NutShell.fir.opt.mlir 22994:9]
      node _mstatusOld_T_11 = bits(_mstatusOld_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 22996:29]
      connect _mstatusOld_WIRE.fs, _mstatusOld_T_11 @[build/NutShell.fir.opt.mlir 22997:9]
      node _mstatusOld_T_12 = bits(_mstatusOld_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 22999:29]
      connect _mstatusOld_WIRE.xs, _mstatusOld_T_12 @[build/NutShell.fir.opt.mlir 23000:9]
      node _mstatusOld_T_13 = bits(_mstatusOld_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 23002:29]
      connect _mstatusOld_WIRE.mprv, _mstatusOld_T_13 @[build/NutShell.fir.opt.mlir 23003:9]
      node _mstatusOld_T_14 = bits(_mstatusOld_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 23005:29]
      connect _mstatusOld_WIRE.sum, _mstatusOld_T_14 @[build/NutShell.fir.opt.mlir 23006:9]
      node _mstatusOld_T_15 = bits(_mstatusOld_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 23008:29]
      connect _mstatusOld_WIRE.mxr, _mstatusOld_T_15 @[build/NutShell.fir.opt.mlir 23009:9]
      node _mstatusOld_T_16 = bits(_mstatusOld_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 23011:29]
      connect _mstatusOld_WIRE.tvm, _mstatusOld_T_16 @[build/NutShell.fir.opt.mlir 23012:9]
      node _mstatusOld_T_17 = bits(_mstatusOld_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 23014:29]
      connect _mstatusOld_WIRE.tw, _mstatusOld_T_17 @[build/NutShell.fir.opt.mlir 23015:9]
      node _mstatusOld_T_18 = bits(_mstatusOld_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 23017:29]
      connect _mstatusOld_WIRE.tsr, _mstatusOld_T_18 @[build/NutShell.fir.opt.mlir 23018:9]
      node _mstatusOld_T_19 = bits(_mstatusOld_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 23020:29]
      connect _mstatusOld_WIRE.pad0, _mstatusOld_T_19 @[build/NutShell.fir.opt.mlir 23021:9]
      node _mstatusOld_T_20 = bits(_mstatusOld_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 23023:29]
      connect _mstatusOld_WIRE.uxl, _mstatusOld_T_20 @[build/NutShell.fir.opt.mlir 23024:9]
      node _mstatusOld_T_21 = bits(_mstatusOld_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 23026:29]
      connect _mstatusOld_WIRE.sxl, _mstatusOld_T_21 @[build/NutShell.fir.opt.mlir 23027:9]
      node _mstatusOld_T_22 = bits(_mstatusOld_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 23029:29]
      connect _mstatusOld_WIRE.pad1, _mstatusOld_T_22 @[build/NutShell.fir.opt.mlir 23030:9]
      node _mstatusOld_T_23 = bits(_mstatusOld_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 23032:29]
      connect _mstatusOld_WIRE.sd, _mstatusOld_T_23 @[build/NutShell.fir.opt.mlir 23033:9]
      wire mstatusOld : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23034:23]
      connect mstatusOld, _mstatusOld_WIRE @[build/NutShell.fir.opt.mlir 23038:9]
      wire _mstatusNew_WIRE : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23039:29]
      wire _mstatusNew_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 23066:31]
      connect _mstatusNew_WIRE_1, mstatus @[build/NutShell.fir.opt.mlir 23067:9]
      node _mstatusNew_T = bits(_mstatusNew_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 23069:26]
      connect _mstatusNew_WIRE.ie.u, _mstatusNew_T @[build/NutShell.fir.opt.mlir 23070:9]
      node _mstatusNew_T_1 = bits(_mstatusNew_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 23072:28]
      connect _mstatusNew_WIRE.ie.s, _mstatusNew_T_1 @[build/NutShell.fir.opt.mlir 23073:9]
      node _mstatusNew_T_2 = bits(_mstatusNew_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 23075:28]
      connect _mstatusNew_WIRE.ie.h, _mstatusNew_T_2 @[build/NutShell.fir.opt.mlir 23076:9]
      node _mstatusNew_T_3 = bits(_mstatusNew_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 23078:28]
      connect _mstatusNew_WIRE.ie.m, _mstatusNew_T_3 @[build/NutShell.fir.opt.mlir 23079:9]
      node _mstatusNew_T_4 = bits(_mstatusNew_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 23081:28]
      connect _mstatusNew_WIRE.pie.u, _mstatusNew_T_4 @[build/NutShell.fir.opt.mlir 23082:9]
      node _mstatusNew_T_5 = bits(_mstatusNew_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 23084:28]
      connect _mstatusNew_WIRE.pie.s, _mstatusNew_T_5 @[build/NutShell.fir.opt.mlir 23085:9]
      node _mstatusNew_T_6 = bits(_mstatusNew_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 23087:28]
      connect _mstatusNew_WIRE.pie.h, _mstatusNew_T_6 @[build/NutShell.fir.opt.mlir 23088:9]
      node _mstatusNew_T_7 = bits(_mstatusNew_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 23090:28]
      connect _mstatusNew_WIRE.pie.m, _mstatusNew_T_7 @[build/NutShell.fir.opt.mlir 23091:9]
      node _mstatusNew_T_8 = bits(_mstatusNew_WIRE_1, 8, 8) @[build/NutShell.fir.opt.mlir 23093:28]
      connect _mstatusNew_WIRE.spp, _mstatusNew_T_8 @[build/NutShell.fir.opt.mlir 23094:9]
      node _mstatusNew_T_9 = bits(_mstatusNew_WIRE_1, 10, 9) @[build/NutShell.fir.opt.mlir 23096:28]
      connect _mstatusNew_WIRE.hpp, _mstatusNew_T_9 @[build/NutShell.fir.opt.mlir 23097:9]
      node _mstatusNew_T_10 = bits(_mstatusNew_WIRE_1, 12, 11) @[build/NutShell.fir.opt.mlir 23099:29]
      connect _mstatusNew_WIRE.mpp, _mstatusNew_T_10 @[build/NutShell.fir.opt.mlir 23100:9]
      node _mstatusNew_T_11 = bits(_mstatusNew_WIRE_1, 14, 13) @[build/NutShell.fir.opt.mlir 23102:29]
      connect _mstatusNew_WIRE.fs, _mstatusNew_T_11 @[build/NutShell.fir.opt.mlir 23103:9]
      node _mstatusNew_T_12 = bits(_mstatusNew_WIRE_1, 16, 15) @[build/NutShell.fir.opt.mlir 23105:29]
      connect _mstatusNew_WIRE.xs, _mstatusNew_T_12 @[build/NutShell.fir.opt.mlir 23106:9]
      node _mstatusNew_T_13 = bits(_mstatusNew_WIRE_1, 17, 17) @[build/NutShell.fir.opt.mlir 23108:29]
      connect _mstatusNew_WIRE.mprv, _mstatusNew_T_13 @[build/NutShell.fir.opt.mlir 23109:9]
      node _mstatusNew_T_14 = bits(_mstatusNew_WIRE_1, 18, 18) @[build/NutShell.fir.opt.mlir 23111:29]
      connect _mstatusNew_WIRE.sum, _mstatusNew_T_14 @[build/NutShell.fir.opt.mlir 23112:9]
      node _mstatusNew_T_15 = bits(_mstatusNew_WIRE_1, 19, 19) @[build/NutShell.fir.opt.mlir 23114:29]
      connect _mstatusNew_WIRE.mxr, _mstatusNew_T_15 @[build/NutShell.fir.opt.mlir 23115:9]
      node _mstatusNew_T_16 = bits(_mstatusNew_WIRE_1, 20, 20) @[build/NutShell.fir.opt.mlir 23117:29]
      connect _mstatusNew_WIRE.tvm, _mstatusNew_T_16 @[build/NutShell.fir.opt.mlir 23118:9]
      node _mstatusNew_T_17 = bits(_mstatusNew_WIRE_1, 21, 21) @[build/NutShell.fir.opt.mlir 23120:29]
      connect _mstatusNew_WIRE.tw, _mstatusNew_T_17 @[build/NutShell.fir.opt.mlir 23121:9]
      node _mstatusNew_T_18 = bits(_mstatusNew_WIRE_1, 22, 22) @[build/NutShell.fir.opt.mlir 23123:29]
      connect _mstatusNew_WIRE.tsr, _mstatusNew_T_18 @[build/NutShell.fir.opt.mlir 23124:9]
      node _mstatusNew_T_19 = bits(_mstatusNew_WIRE_1, 31, 23) @[build/NutShell.fir.opt.mlir 23126:29]
      connect _mstatusNew_WIRE.pad0, _mstatusNew_T_19 @[build/NutShell.fir.opt.mlir 23127:9]
      node _mstatusNew_T_20 = bits(_mstatusNew_WIRE_1, 33, 32) @[build/NutShell.fir.opt.mlir 23129:29]
      connect _mstatusNew_WIRE.uxl, _mstatusNew_T_20 @[build/NutShell.fir.opt.mlir 23130:9]
      node _mstatusNew_T_21 = bits(_mstatusNew_WIRE_1, 35, 34) @[build/NutShell.fir.opt.mlir 23132:29]
      connect _mstatusNew_WIRE.sxl, _mstatusNew_T_21 @[build/NutShell.fir.opt.mlir 23133:9]
      node _mstatusNew_T_22 = bits(_mstatusNew_WIRE_1, 62, 36) @[build/NutShell.fir.opt.mlir 23135:29]
      connect _mstatusNew_WIRE.pad1, _mstatusNew_T_22 @[build/NutShell.fir.opt.mlir 23136:9]
      node _mstatusNew_T_23 = bits(_mstatusNew_WIRE_1, 63, 63) @[build/NutShell.fir.opt.mlir 23138:29]
      connect _mstatusNew_WIRE.sd, _mstatusNew_T_23 @[build/NutShell.fir.opt.mlir 23139:9]
      wire mstatusNew : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23140:23]
      connect mstatusNew, _mstatusNew_WIRE @[build/NutShell.fir.opt.mlir 23167:9]
      connect mstatusNew.ie.m, mstatusOld.pie.m @[build/NutShell.fir.opt.mlir 23168:9]
      connect privilegeMode, mstatusOld.mpp @[build/NutShell.fir.opt.mlir 23169:9]
      connect mstatusNew.pie.m, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23171:9]
      connect mstatusNew.mpp, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 23174:9]
      node mstatus_lo = cat(mstatusNew.ie.s, mstatusNew.ie.u) @[build/NutShell.fir.opt.mlir 23176:23]
      node mstatus_hi = cat(mstatusNew.ie.m, mstatusNew.ie.h) @[build/NutShell.fir.opt.mlir 23178:23]
      node _mstatus_T_8 = cat(mstatus_hi, mstatus_lo) @[build/NutShell.fir.opt.mlir 23180:25]
      node mstatus_lo_1 = cat(mstatusNew.pie.s, mstatusNew.pie.u) @[build/NutShell.fir.opt.mlir 23182:25]
      node mstatus_hi_1 = cat(mstatusNew.pie.m, mstatusNew.pie.h) @[build/NutShell.fir.opt.mlir 23184:25]
      node _mstatus_T_9 = cat(mstatus_hi_1, mstatus_lo_1) @[build/NutShell.fir.opt.mlir 23186:25]
      node mstatus_lo_lo_lo = cat(_mstatus_T_9, _mstatus_T_8) @[build/NutShell.fir.opt.mlir 23188:29]
      node mstatus_lo_lo_hi = cat(mstatusNew.hpp, mstatusNew.spp) @[build/NutShell.fir.opt.mlir 23190:29]
      node mstatus_lo_lo = cat(mstatus_lo_lo_hi, mstatus_lo_lo_lo) @[build/NutShell.fir.opt.mlir 23192:26]
      node mstatus_lo_hi_lo = cat(mstatusNew.fs, mstatusNew.mpp) @[build/NutShell.fir.opt.mlir 23194:29]
      node mstatus_lo_hi_hi_hi = cat(mstatusNew.sum, mstatusNew.mprv) @[build/NutShell.fir.opt.mlir 23196:32]
      node mstatus_lo_hi_hi = cat(mstatus_lo_hi_hi_hi, mstatusNew.xs) @[build/NutShell.fir.opt.mlir 23198:29]
      node mstatus_lo_hi = cat(mstatus_lo_hi_hi, mstatus_lo_hi_lo) @[build/NutShell.fir.opt.mlir 23200:26]
      node mstatus_lo_2 = cat(mstatus_lo_hi, mstatus_lo_lo) @[build/NutShell.fir.opt.mlir 23202:25]
      node mstatus_hi_lo_lo = cat(mstatusNew.tvm, mstatusNew.mxr) @[build/NutShell.fir.opt.mlir 23204:29]
      node mstatus_hi_lo_hi = cat(mstatusNew.tsr, mstatusNew.tw) @[build/NutShell.fir.opt.mlir 23206:29]
      node mstatus_hi_lo = cat(mstatus_hi_lo_hi, mstatus_hi_lo_lo) @[build/NutShell.fir.opt.mlir 23208:26]
      node mstatus_hi_hi_lo = cat(mstatusNew.uxl, mstatusNew.pad0) @[build/NutShell.fir.opt.mlir 23210:29]
      node mstatus_hi_hi_hi_hi = cat(mstatusNew.sd, mstatusNew.pad1) @[build/NutShell.fir.opt.mlir 23212:32]
      node mstatus_hi_hi_hi = cat(mstatus_hi_hi_hi_hi, mstatusNew.sxl) @[build/NutShell.fir.opt.mlir 23214:29]
      node mstatus_hi_hi = cat(mstatus_hi_hi_hi, mstatus_hi_hi_lo) @[build/NutShell.fir.opt.mlir 23216:26]
      node mstatus_hi_2 = cat(mstatus_hi_hi, mstatus_hi_lo) @[build/NutShell.fir.opt.mlir 23218:25]
      node _mstatus_T_10 = cat(mstatus_hi_2, mstatus_lo_2) @[build/NutShell.fir.opt.mlir 23220:26]
      connect mstatus, _mstatus_T_10 @[build/NutShell.fir.opt.mlir 23221:9]
      connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23223:9]
      node _retTarget_T = bits(mepc, 38, 0) @[build/NutShell.fir.opt.mlir 23225:25]
      connect retTarget, _retTarget_T @[build/NutShell.fir.opt.mlir 23226:9]
    node _T_441 = and(io.in.valid, isSret) @[build/NutShell.fir.opt.mlir 23229:17]
    when _T_441 : @[build/NutShell.fir.opt.mlir 23230:7]
      wire _mstatusOld_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23231:31]
      wire _mstatusOld_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 23258:31]
      connect _mstatusOld_WIRE_3, mstatus @[build/NutShell.fir.opt.mlir 23259:9]
      node _mstatusOld_T_24 = bits(_mstatusOld_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 23261:29]
      connect _mstatusOld_WIRE_2.ie.u, _mstatusOld_T_24 @[build/NutShell.fir.opt.mlir 23262:9]
      node _mstatusOld_T_25 = bits(_mstatusOld_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 23264:29]
      connect _mstatusOld_WIRE_2.ie.s, _mstatusOld_T_25 @[build/NutShell.fir.opt.mlir 23265:9]
      node _mstatusOld_T_26 = bits(_mstatusOld_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 23267:29]
      connect _mstatusOld_WIRE_2.ie.h, _mstatusOld_T_26 @[build/NutShell.fir.opt.mlir 23268:9]
      node _mstatusOld_T_27 = bits(_mstatusOld_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 23270:29]
      connect _mstatusOld_WIRE_2.ie.m, _mstatusOld_T_27 @[build/NutShell.fir.opt.mlir 23271:9]
      node _mstatusOld_T_28 = bits(_mstatusOld_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 23273:29]
      connect _mstatusOld_WIRE_2.pie.u, _mstatusOld_T_28 @[build/NutShell.fir.opt.mlir 23274:9]
      node _mstatusOld_T_29 = bits(_mstatusOld_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 23276:29]
      connect _mstatusOld_WIRE_2.pie.s, _mstatusOld_T_29 @[build/NutShell.fir.opt.mlir 23277:9]
      node _mstatusOld_T_30 = bits(_mstatusOld_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 23279:29]
      connect _mstatusOld_WIRE_2.pie.h, _mstatusOld_T_30 @[build/NutShell.fir.opt.mlir 23280:9]
      node _mstatusOld_T_31 = bits(_mstatusOld_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 23282:29]
      connect _mstatusOld_WIRE_2.pie.m, _mstatusOld_T_31 @[build/NutShell.fir.opt.mlir 23283:9]
      node _mstatusOld_T_32 = bits(_mstatusOld_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 23285:29]
      connect _mstatusOld_WIRE_2.spp, _mstatusOld_T_32 @[build/NutShell.fir.opt.mlir 23286:9]
      node _mstatusOld_T_33 = bits(_mstatusOld_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 23288:29]
      connect _mstatusOld_WIRE_2.hpp, _mstatusOld_T_33 @[build/NutShell.fir.opt.mlir 23289:9]
      node _mstatusOld_T_34 = bits(_mstatusOld_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 23291:29]
      connect _mstatusOld_WIRE_2.mpp, _mstatusOld_T_34 @[build/NutShell.fir.opt.mlir 23292:9]
      node _mstatusOld_T_35 = bits(_mstatusOld_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 23294:29]
      connect _mstatusOld_WIRE_2.fs, _mstatusOld_T_35 @[build/NutShell.fir.opt.mlir 23295:9]
      node _mstatusOld_T_36 = bits(_mstatusOld_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 23297:29]
      connect _mstatusOld_WIRE_2.xs, _mstatusOld_T_36 @[build/NutShell.fir.opt.mlir 23298:9]
      node _mstatusOld_T_37 = bits(_mstatusOld_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 23300:29]
      connect _mstatusOld_WIRE_2.mprv, _mstatusOld_T_37 @[build/NutShell.fir.opt.mlir 23301:9]
      node _mstatusOld_T_38 = bits(_mstatusOld_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 23303:29]
      connect _mstatusOld_WIRE_2.sum, _mstatusOld_T_38 @[build/NutShell.fir.opt.mlir 23304:9]
      node _mstatusOld_T_39 = bits(_mstatusOld_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 23306:29]
      connect _mstatusOld_WIRE_2.mxr, _mstatusOld_T_39 @[build/NutShell.fir.opt.mlir 23307:9]
      node _mstatusOld_T_40 = bits(_mstatusOld_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 23309:29]
      connect _mstatusOld_WIRE_2.tvm, _mstatusOld_T_40 @[build/NutShell.fir.opt.mlir 23310:9]
      node _mstatusOld_T_41 = bits(_mstatusOld_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 23312:29]
      connect _mstatusOld_WIRE_2.tw, _mstatusOld_T_41 @[build/NutShell.fir.opt.mlir 23313:9]
      node _mstatusOld_T_42 = bits(_mstatusOld_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 23315:29]
      connect _mstatusOld_WIRE_2.tsr, _mstatusOld_T_42 @[build/NutShell.fir.opt.mlir 23316:9]
      node _mstatusOld_T_43 = bits(_mstatusOld_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 23318:29]
      connect _mstatusOld_WIRE_2.pad0, _mstatusOld_T_43 @[build/NutShell.fir.opt.mlir 23319:9]
      node _mstatusOld_T_44 = bits(_mstatusOld_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 23321:29]
      connect _mstatusOld_WIRE_2.uxl, _mstatusOld_T_44 @[build/NutShell.fir.opt.mlir 23322:9]
      node _mstatusOld_T_45 = bits(_mstatusOld_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 23324:29]
      connect _mstatusOld_WIRE_2.sxl, _mstatusOld_T_45 @[build/NutShell.fir.opt.mlir 23325:9]
      node _mstatusOld_T_46 = bits(_mstatusOld_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 23327:29]
      connect _mstatusOld_WIRE_2.pad1, _mstatusOld_T_46 @[build/NutShell.fir.opt.mlir 23328:9]
      node _mstatusOld_T_47 = bits(_mstatusOld_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 23330:29]
      connect _mstatusOld_WIRE_2.sd, _mstatusOld_T_47 @[build/NutShell.fir.opt.mlir 23331:9]
      wire mstatusOld_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23332:25]
      connect mstatusOld_1, _mstatusOld_WIRE_2 @[build/NutShell.fir.opt.mlir 23336:9]
      wire _mstatusNew_WIRE_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23337:31]
      wire _mstatusNew_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 23364:31]
      connect _mstatusNew_WIRE_3, mstatus @[build/NutShell.fir.opt.mlir 23365:9]
      node _mstatusNew_T_24 = bits(_mstatusNew_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 23367:29]
      connect _mstatusNew_WIRE_2.ie.u, _mstatusNew_T_24 @[build/NutShell.fir.opt.mlir 23368:9]
      node _mstatusNew_T_25 = bits(_mstatusNew_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 23370:29]
      connect _mstatusNew_WIRE_2.ie.s, _mstatusNew_T_25 @[build/NutShell.fir.opt.mlir 23371:9]
      node _mstatusNew_T_26 = bits(_mstatusNew_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 23373:29]
      connect _mstatusNew_WIRE_2.ie.h, _mstatusNew_T_26 @[build/NutShell.fir.opt.mlir 23374:9]
      node _mstatusNew_T_27 = bits(_mstatusNew_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 23376:29]
      connect _mstatusNew_WIRE_2.ie.m, _mstatusNew_T_27 @[build/NutShell.fir.opt.mlir 23377:9]
      node _mstatusNew_T_28 = bits(_mstatusNew_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 23379:29]
      connect _mstatusNew_WIRE_2.pie.u, _mstatusNew_T_28 @[build/NutShell.fir.opt.mlir 23380:9]
      node _mstatusNew_T_29 = bits(_mstatusNew_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 23382:29]
      connect _mstatusNew_WIRE_2.pie.s, _mstatusNew_T_29 @[build/NutShell.fir.opt.mlir 23383:9]
      node _mstatusNew_T_30 = bits(_mstatusNew_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 23385:29]
      connect _mstatusNew_WIRE_2.pie.h, _mstatusNew_T_30 @[build/NutShell.fir.opt.mlir 23386:9]
      node _mstatusNew_T_31 = bits(_mstatusNew_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 23388:29]
      connect _mstatusNew_WIRE_2.pie.m, _mstatusNew_T_31 @[build/NutShell.fir.opt.mlir 23389:9]
      node _mstatusNew_T_32 = bits(_mstatusNew_WIRE_3, 8, 8) @[build/NutShell.fir.opt.mlir 23391:29]
      connect _mstatusNew_WIRE_2.spp, _mstatusNew_T_32 @[build/NutShell.fir.opt.mlir 23392:9]
      node _mstatusNew_T_33 = bits(_mstatusNew_WIRE_3, 10, 9) @[build/NutShell.fir.opt.mlir 23394:29]
      connect _mstatusNew_WIRE_2.hpp, _mstatusNew_T_33 @[build/NutShell.fir.opt.mlir 23395:9]
      node _mstatusNew_T_34 = bits(_mstatusNew_WIRE_3, 12, 11) @[build/NutShell.fir.opt.mlir 23397:29]
      connect _mstatusNew_WIRE_2.mpp, _mstatusNew_T_34 @[build/NutShell.fir.opt.mlir 23398:9]
      node _mstatusNew_T_35 = bits(_mstatusNew_WIRE_3, 14, 13) @[build/NutShell.fir.opt.mlir 23400:29]
      connect _mstatusNew_WIRE_2.fs, _mstatusNew_T_35 @[build/NutShell.fir.opt.mlir 23401:9]
      node _mstatusNew_T_36 = bits(_mstatusNew_WIRE_3, 16, 15) @[build/NutShell.fir.opt.mlir 23403:29]
      connect _mstatusNew_WIRE_2.xs, _mstatusNew_T_36 @[build/NutShell.fir.opt.mlir 23404:9]
      node _mstatusNew_T_37 = bits(_mstatusNew_WIRE_3, 17, 17) @[build/NutShell.fir.opt.mlir 23406:29]
      connect _mstatusNew_WIRE_2.mprv, _mstatusNew_T_37 @[build/NutShell.fir.opt.mlir 23407:9]
      node _mstatusNew_T_38 = bits(_mstatusNew_WIRE_3, 18, 18) @[build/NutShell.fir.opt.mlir 23409:29]
      connect _mstatusNew_WIRE_2.sum, _mstatusNew_T_38 @[build/NutShell.fir.opt.mlir 23410:9]
      node _mstatusNew_T_39 = bits(_mstatusNew_WIRE_3, 19, 19) @[build/NutShell.fir.opt.mlir 23412:29]
      connect _mstatusNew_WIRE_2.mxr, _mstatusNew_T_39 @[build/NutShell.fir.opt.mlir 23413:9]
      node _mstatusNew_T_40 = bits(_mstatusNew_WIRE_3, 20, 20) @[build/NutShell.fir.opt.mlir 23415:29]
      connect _mstatusNew_WIRE_2.tvm, _mstatusNew_T_40 @[build/NutShell.fir.opt.mlir 23416:9]
      node _mstatusNew_T_41 = bits(_mstatusNew_WIRE_3, 21, 21) @[build/NutShell.fir.opt.mlir 23418:29]
      connect _mstatusNew_WIRE_2.tw, _mstatusNew_T_41 @[build/NutShell.fir.opt.mlir 23419:9]
      node _mstatusNew_T_42 = bits(_mstatusNew_WIRE_3, 22, 22) @[build/NutShell.fir.opt.mlir 23421:29]
      connect _mstatusNew_WIRE_2.tsr, _mstatusNew_T_42 @[build/NutShell.fir.opt.mlir 23422:9]
      node _mstatusNew_T_43 = bits(_mstatusNew_WIRE_3, 31, 23) @[build/NutShell.fir.opt.mlir 23424:29]
      connect _mstatusNew_WIRE_2.pad0, _mstatusNew_T_43 @[build/NutShell.fir.opt.mlir 23425:9]
      node _mstatusNew_T_44 = bits(_mstatusNew_WIRE_3, 33, 32) @[build/NutShell.fir.opt.mlir 23427:29]
      connect _mstatusNew_WIRE_2.uxl, _mstatusNew_T_44 @[build/NutShell.fir.opt.mlir 23428:9]
      node _mstatusNew_T_45 = bits(_mstatusNew_WIRE_3, 35, 34) @[build/NutShell.fir.opt.mlir 23430:29]
      connect _mstatusNew_WIRE_2.sxl, _mstatusNew_T_45 @[build/NutShell.fir.opt.mlir 23431:9]
      node _mstatusNew_T_46 = bits(_mstatusNew_WIRE_3, 62, 36) @[build/NutShell.fir.opt.mlir 23433:29]
      connect _mstatusNew_WIRE_2.pad1, _mstatusNew_T_46 @[build/NutShell.fir.opt.mlir 23434:9]
      node _mstatusNew_T_47 = bits(_mstatusNew_WIRE_3, 63, 63) @[build/NutShell.fir.opt.mlir 23436:29]
      connect _mstatusNew_WIRE_2.sd, _mstatusNew_T_47 @[build/NutShell.fir.opt.mlir 23437:9]
      wire mstatusNew_1 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23438:25]
      connect mstatusNew_1, _mstatusNew_WIRE_2 @[build/NutShell.fir.opt.mlir 23465:9]
      connect mstatusNew_1.ie.s, mstatusOld_1.pie.s @[build/NutShell.fir.opt.mlir 23466:9]
      node _privilegeMode_T = cat(UInt<1>(0), mstatusOld_1.spp) @[build/NutShell.fir.opt.mlir 23468:29]
      connect privilegeMode, _privilegeMode_T @[build/NutShell.fir.opt.mlir 23469:9]
      connect mstatusNew_1.pie.s, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23471:9]
      connect mstatusNew_1.spp, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23473:9]
      node mstatus_lo_3 = cat(mstatusNew_1.ie.s, mstatusNew_1.ie.u) @[build/NutShell.fir.opt.mlir 23475:25]
      node mstatus_hi_3 = cat(mstatusNew_1.ie.m, mstatusNew_1.ie.h) @[build/NutShell.fir.opt.mlir 23477:25]
      node _mstatus_T_11 = cat(mstatus_hi_3, mstatus_lo_3) @[build/NutShell.fir.opt.mlir 23479:26]
      node mstatus_lo_4 = cat(mstatusNew_1.pie.s, mstatusNew_1.pie.u) @[build/NutShell.fir.opt.mlir 23481:25]
      node mstatus_hi_4 = cat(mstatusNew_1.pie.m, mstatusNew_1.pie.h) @[build/NutShell.fir.opt.mlir 23483:25]
      node _mstatus_T_12 = cat(mstatus_hi_4, mstatus_lo_4) @[build/NutShell.fir.opt.mlir 23485:26]
      node mstatus_lo_lo_lo_1 = cat(_mstatus_T_12, _mstatus_T_11) @[build/NutShell.fir.opt.mlir 23487:31]
      node mstatus_lo_lo_hi_1 = cat(mstatusNew_1.hpp, mstatusNew_1.spp) @[build/NutShell.fir.opt.mlir 23489:31]
      node mstatus_lo_lo_1 = cat(mstatus_lo_lo_hi_1, mstatus_lo_lo_lo_1) @[build/NutShell.fir.opt.mlir 23491:28]
      node mstatus_lo_hi_lo_1 = cat(mstatusNew_1.fs, mstatusNew_1.mpp) @[build/NutShell.fir.opt.mlir 23493:31]
      node mstatus_lo_hi_hi_hi_1 = cat(mstatusNew_1.sum, mstatusNew_1.mprv) @[build/NutShell.fir.opt.mlir 23495:34]
      node mstatus_lo_hi_hi_1 = cat(mstatus_lo_hi_hi_hi_1, mstatusNew_1.xs) @[build/NutShell.fir.opt.mlir 23497:31]
      node mstatus_lo_hi_1 = cat(mstatus_lo_hi_hi_1, mstatus_lo_hi_lo_1) @[build/NutShell.fir.opt.mlir 23499:28]
      node mstatus_lo_5 = cat(mstatus_lo_hi_1, mstatus_lo_lo_1) @[build/NutShell.fir.opt.mlir 23501:25]
      node mstatus_hi_lo_lo_1 = cat(mstatusNew_1.tvm, mstatusNew_1.mxr) @[build/NutShell.fir.opt.mlir 23503:31]
      node mstatus_hi_lo_hi_1 = cat(mstatusNew_1.tsr, mstatusNew_1.tw) @[build/NutShell.fir.opt.mlir 23505:31]
      node mstatus_hi_lo_1 = cat(mstatus_hi_lo_hi_1, mstatus_hi_lo_lo_1) @[build/NutShell.fir.opt.mlir 23507:28]
      node mstatus_hi_hi_lo_1 = cat(mstatusNew_1.uxl, mstatusNew_1.pad0) @[build/NutShell.fir.opt.mlir 23509:31]
      node mstatus_hi_hi_hi_hi_1 = cat(mstatusNew_1.sd, mstatusNew_1.pad1) @[build/NutShell.fir.opt.mlir 23511:34]
      node mstatus_hi_hi_hi_1 = cat(mstatus_hi_hi_hi_hi_1, mstatusNew_1.sxl) @[build/NutShell.fir.opt.mlir 23513:31]
      node mstatus_hi_hi_1 = cat(mstatus_hi_hi_hi_1, mstatus_hi_hi_lo_1) @[build/NutShell.fir.opt.mlir 23515:28]
      node mstatus_hi_5 = cat(mstatus_hi_hi_1, mstatus_hi_lo_1) @[build/NutShell.fir.opt.mlir 23517:25]
      node _mstatus_T_13 = cat(mstatus_hi_5, mstatus_lo_5) @[build/NutShell.fir.opt.mlir 23519:26]
      connect mstatus, _mstatus_T_13 @[build/NutShell.fir.opt.mlir 23520:9]
      connect lr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 23522:9]
      node _retTarget_T_1 = bits(sepc, 38, 0) @[build/NutShell.fir.opt.mlir 23524:27]
      connect retTarget, _retTarget_T_1 @[build/NutShell.fir.opt.mlir 23525:9]
    node _T_442 = and(io.in.valid, isUret) @[build/NutShell.fir.opt.mlir 23528:17]
    when _T_442 : @[build/NutShell.fir.opt.mlir 23529:7]
      wire _mstatusOld_WIRE_4 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23530:31]
      wire _mstatusOld_WIRE_5 : UInt<64> @[build/NutShell.fir.opt.mlir 23557:31]
      connect _mstatusOld_WIRE_5, mstatus @[build/NutShell.fir.opt.mlir 23558:9]
      node _mstatusOld_T_48 = bits(_mstatusOld_WIRE_5, 0, 0) @[build/NutShell.fir.opt.mlir 23560:29]
      connect _mstatusOld_WIRE_4.ie.u, _mstatusOld_T_48 @[build/NutShell.fir.opt.mlir 23561:9]
      node _mstatusOld_T_49 = bits(_mstatusOld_WIRE_5, 1, 1) @[build/NutShell.fir.opt.mlir 23563:29]
      connect _mstatusOld_WIRE_4.ie.s, _mstatusOld_T_49 @[build/NutShell.fir.opt.mlir 23564:9]
      node _mstatusOld_T_50 = bits(_mstatusOld_WIRE_5, 2, 2) @[build/NutShell.fir.opt.mlir 23566:29]
      connect _mstatusOld_WIRE_4.ie.h, _mstatusOld_T_50 @[build/NutShell.fir.opt.mlir 23567:9]
      node _mstatusOld_T_51 = bits(_mstatusOld_WIRE_5, 3, 3) @[build/NutShell.fir.opt.mlir 23569:29]
      connect _mstatusOld_WIRE_4.ie.m, _mstatusOld_T_51 @[build/NutShell.fir.opt.mlir 23570:9]
      node _mstatusOld_T_52 = bits(_mstatusOld_WIRE_5, 4, 4) @[build/NutShell.fir.opt.mlir 23572:29]
      connect _mstatusOld_WIRE_4.pie.u, _mstatusOld_T_52 @[build/NutShell.fir.opt.mlir 23573:9]
      node _mstatusOld_T_53 = bits(_mstatusOld_WIRE_5, 5, 5) @[build/NutShell.fir.opt.mlir 23575:29]
      connect _mstatusOld_WIRE_4.pie.s, _mstatusOld_T_53 @[build/NutShell.fir.opt.mlir 23576:9]
      node _mstatusOld_T_54 = bits(_mstatusOld_WIRE_5, 6, 6) @[build/NutShell.fir.opt.mlir 23578:29]
      connect _mstatusOld_WIRE_4.pie.h, _mstatusOld_T_54 @[build/NutShell.fir.opt.mlir 23579:9]
      node _mstatusOld_T_55 = bits(_mstatusOld_WIRE_5, 7, 7) @[build/NutShell.fir.opt.mlir 23581:29]
      connect _mstatusOld_WIRE_4.pie.m, _mstatusOld_T_55 @[build/NutShell.fir.opt.mlir 23582:9]
      node _mstatusOld_T_56 = bits(_mstatusOld_WIRE_5, 8, 8) @[build/NutShell.fir.opt.mlir 23584:29]
      connect _mstatusOld_WIRE_4.spp, _mstatusOld_T_56 @[build/NutShell.fir.opt.mlir 23585:9]
      node _mstatusOld_T_57 = bits(_mstatusOld_WIRE_5, 10, 9) @[build/NutShell.fir.opt.mlir 23587:29]
      connect _mstatusOld_WIRE_4.hpp, _mstatusOld_T_57 @[build/NutShell.fir.opt.mlir 23588:9]
      node _mstatusOld_T_58 = bits(_mstatusOld_WIRE_5, 12, 11) @[build/NutShell.fir.opt.mlir 23590:29]
      connect _mstatusOld_WIRE_4.mpp, _mstatusOld_T_58 @[build/NutShell.fir.opt.mlir 23591:9]
      node _mstatusOld_T_59 = bits(_mstatusOld_WIRE_5, 14, 13) @[build/NutShell.fir.opt.mlir 23593:29]
      connect _mstatusOld_WIRE_4.fs, _mstatusOld_T_59 @[build/NutShell.fir.opt.mlir 23594:9]
      node _mstatusOld_T_60 = bits(_mstatusOld_WIRE_5, 16, 15) @[build/NutShell.fir.opt.mlir 23596:29]
      connect _mstatusOld_WIRE_4.xs, _mstatusOld_T_60 @[build/NutShell.fir.opt.mlir 23597:9]
      node _mstatusOld_T_61 = bits(_mstatusOld_WIRE_5, 17, 17) @[build/NutShell.fir.opt.mlir 23599:29]
      connect _mstatusOld_WIRE_4.mprv, _mstatusOld_T_61 @[build/NutShell.fir.opt.mlir 23600:9]
      node _mstatusOld_T_62 = bits(_mstatusOld_WIRE_5, 18, 18) @[build/NutShell.fir.opt.mlir 23602:29]
      connect _mstatusOld_WIRE_4.sum, _mstatusOld_T_62 @[build/NutShell.fir.opt.mlir 23603:9]
      node _mstatusOld_T_63 = bits(_mstatusOld_WIRE_5, 19, 19) @[build/NutShell.fir.opt.mlir 23605:29]
      connect _mstatusOld_WIRE_4.mxr, _mstatusOld_T_63 @[build/NutShell.fir.opt.mlir 23606:9]
      node _mstatusOld_T_64 = bits(_mstatusOld_WIRE_5, 20, 20) @[build/NutShell.fir.opt.mlir 23608:29]
      connect _mstatusOld_WIRE_4.tvm, _mstatusOld_T_64 @[build/NutShell.fir.opt.mlir 23609:9]
      node _mstatusOld_T_65 = bits(_mstatusOld_WIRE_5, 21, 21) @[build/NutShell.fir.opt.mlir 23611:29]
      connect _mstatusOld_WIRE_4.tw, _mstatusOld_T_65 @[build/NutShell.fir.opt.mlir 23612:9]
      node _mstatusOld_T_66 = bits(_mstatusOld_WIRE_5, 22, 22) @[build/NutShell.fir.opt.mlir 23614:29]
      connect _mstatusOld_WIRE_4.tsr, _mstatusOld_T_66 @[build/NutShell.fir.opt.mlir 23615:9]
      node _mstatusOld_T_67 = bits(_mstatusOld_WIRE_5, 31, 23) @[build/NutShell.fir.opt.mlir 23617:29]
      connect _mstatusOld_WIRE_4.pad0, _mstatusOld_T_67 @[build/NutShell.fir.opt.mlir 23618:9]
      node _mstatusOld_T_68 = bits(_mstatusOld_WIRE_5, 33, 32) @[build/NutShell.fir.opt.mlir 23620:29]
      connect _mstatusOld_WIRE_4.uxl, _mstatusOld_T_68 @[build/NutShell.fir.opt.mlir 23621:9]
      node _mstatusOld_T_69 = bits(_mstatusOld_WIRE_5, 35, 34) @[build/NutShell.fir.opt.mlir 23623:29]
      connect _mstatusOld_WIRE_4.sxl, _mstatusOld_T_69 @[build/NutShell.fir.opt.mlir 23624:9]
      node _mstatusOld_T_70 = bits(_mstatusOld_WIRE_5, 62, 36) @[build/NutShell.fir.opt.mlir 23626:29]
      connect _mstatusOld_WIRE_4.pad1, _mstatusOld_T_70 @[build/NutShell.fir.opt.mlir 23627:9]
      node _mstatusOld_T_71 = bits(_mstatusOld_WIRE_5, 63, 63) @[build/NutShell.fir.opt.mlir 23629:29]
      connect _mstatusOld_WIRE_4.sd, _mstatusOld_T_71 @[build/NutShell.fir.opt.mlir 23630:9]
      wire mstatusOld_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23631:25]
      connect mstatusOld_2, _mstatusOld_WIRE_4 @[build/NutShell.fir.opt.mlir 23634:9]
      wire _mstatusNew_WIRE_4 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23635:31]
      wire _mstatusNew_WIRE_5 : UInt<64> @[build/NutShell.fir.opt.mlir 23662:31]
      connect _mstatusNew_WIRE_5, mstatus @[build/NutShell.fir.opt.mlir 23663:9]
      node _mstatusNew_T_48 = bits(_mstatusNew_WIRE_5, 0, 0) @[build/NutShell.fir.opt.mlir 23665:29]
      connect _mstatusNew_WIRE_4.ie.u, _mstatusNew_T_48 @[build/NutShell.fir.opt.mlir 23666:9]
      node _mstatusNew_T_49 = bits(_mstatusNew_WIRE_5, 1, 1) @[build/NutShell.fir.opt.mlir 23668:29]
      connect _mstatusNew_WIRE_4.ie.s, _mstatusNew_T_49 @[build/NutShell.fir.opt.mlir 23669:9]
      node _mstatusNew_T_50 = bits(_mstatusNew_WIRE_5, 2, 2) @[build/NutShell.fir.opt.mlir 23671:29]
      connect _mstatusNew_WIRE_4.ie.h, _mstatusNew_T_50 @[build/NutShell.fir.opt.mlir 23672:9]
      node _mstatusNew_T_51 = bits(_mstatusNew_WIRE_5, 3, 3) @[build/NutShell.fir.opt.mlir 23674:29]
      connect _mstatusNew_WIRE_4.ie.m, _mstatusNew_T_51 @[build/NutShell.fir.opt.mlir 23675:9]
      node _mstatusNew_T_52 = bits(_mstatusNew_WIRE_5, 4, 4) @[build/NutShell.fir.opt.mlir 23677:29]
      connect _mstatusNew_WIRE_4.pie.u, _mstatusNew_T_52 @[build/NutShell.fir.opt.mlir 23678:9]
      node _mstatusNew_T_53 = bits(_mstatusNew_WIRE_5, 5, 5) @[build/NutShell.fir.opt.mlir 23680:29]
      connect _mstatusNew_WIRE_4.pie.s, _mstatusNew_T_53 @[build/NutShell.fir.opt.mlir 23681:9]
      node _mstatusNew_T_54 = bits(_mstatusNew_WIRE_5, 6, 6) @[build/NutShell.fir.opt.mlir 23683:29]
      connect _mstatusNew_WIRE_4.pie.h, _mstatusNew_T_54 @[build/NutShell.fir.opt.mlir 23684:9]
      node _mstatusNew_T_55 = bits(_mstatusNew_WIRE_5, 7, 7) @[build/NutShell.fir.opt.mlir 23686:29]
      connect _mstatusNew_WIRE_4.pie.m, _mstatusNew_T_55 @[build/NutShell.fir.opt.mlir 23687:9]
      node _mstatusNew_T_56 = bits(_mstatusNew_WIRE_5, 8, 8) @[build/NutShell.fir.opt.mlir 23689:29]
      connect _mstatusNew_WIRE_4.spp, _mstatusNew_T_56 @[build/NutShell.fir.opt.mlir 23690:9]
      node _mstatusNew_T_57 = bits(_mstatusNew_WIRE_5, 10, 9) @[build/NutShell.fir.opt.mlir 23692:29]
      connect _mstatusNew_WIRE_4.hpp, _mstatusNew_T_57 @[build/NutShell.fir.opt.mlir 23693:9]
      node _mstatusNew_T_58 = bits(_mstatusNew_WIRE_5, 12, 11) @[build/NutShell.fir.opt.mlir 23695:29]
      connect _mstatusNew_WIRE_4.mpp, _mstatusNew_T_58 @[build/NutShell.fir.opt.mlir 23696:9]
      node _mstatusNew_T_59 = bits(_mstatusNew_WIRE_5, 14, 13) @[build/NutShell.fir.opt.mlir 23698:29]
      connect _mstatusNew_WIRE_4.fs, _mstatusNew_T_59 @[build/NutShell.fir.opt.mlir 23699:9]
      node _mstatusNew_T_60 = bits(_mstatusNew_WIRE_5, 16, 15) @[build/NutShell.fir.opt.mlir 23701:29]
      connect _mstatusNew_WIRE_4.xs, _mstatusNew_T_60 @[build/NutShell.fir.opt.mlir 23702:9]
      node _mstatusNew_T_61 = bits(_mstatusNew_WIRE_5, 17, 17) @[build/NutShell.fir.opt.mlir 23704:29]
      connect _mstatusNew_WIRE_4.mprv, _mstatusNew_T_61 @[build/NutShell.fir.opt.mlir 23705:9]
      node _mstatusNew_T_62 = bits(_mstatusNew_WIRE_5, 18, 18) @[build/NutShell.fir.opt.mlir 23707:29]
      connect _mstatusNew_WIRE_4.sum, _mstatusNew_T_62 @[build/NutShell.fir.opt.mlir 23708:9]
      node _mstatusNew_T_63 = bits(_mstatusNew_WIRE_5, 19, 19) @[build/NutShell.fir.opt.mlir 23710:29]
      connect _mstatusNew_WIRE_4.mxr, _mstatusNew_T_63 @[build/NutShell.fir.opt.mlir 23711:9]
      node _mstatusNew_T_64 = bits(_mstatusNew_WIRE_5, 20, 20) @[build/NutShell.fir.opt.mlir 23713:29]
      connect _mstatusNew_WIRE_4.tvm, _mstatusNew_T_64 @[build/NutShell.fir.opt.mlir 23714:9]
      node _mstatusNew_T_65 = bits(_mstatusNew_WIRE_5, 21, 21) @[build/NutShell.fir.opt.mlir 23716:29]
      connect _mstatusNew_WIRE_4.tw, _mstatusNew_T_65 @[build/NutShell.fir.opt.mlir 23717:9]
      node _mstatusNew_T_66 = bits(_mstatusNew_WIRE_5, 22, 22) @[build/NutShell.fir.opt.mlir 23719:29]
      connect _mstatusNew_WIRE_4.tsr, _mstatusNew_T_66 @[build/NutShell.fir.opt.mlir 23720:9]
      node _mstatusNew_T_67 = bits(_mstatusNew_WIRE_5, 31, 23) @[build/NutShell.fir.opt.mlir 23722:29]
      connect _mstatusNew_WIRE_4.pad0, _mstatusNew_T_67 @[build/NutShell.fir.opt.mlir 23723:9]
      node _mstatusNew_T_68 = bits(_mstatusNew_WIRE_5, 33, 32) @[build/NutShell.fir.opt.mlir 23725:29]
      connect _mstatusNew_WIRE_4.uxl, _mstatusNew_T_68 @[build/NutShell.fir.opt.mlir 23726:9]
      node _mstatusNew_T_69 = bits(_mstatusNew_WIRE_5, 35, 34) @[build/NutShell.fir.opt.mlir 23728:29]
      connect _mstatusNew_WIRE_4.sxl, _mstatusNew_T_69 @[build/NutShell.fir.opt.mlir 23729:9]
      node _mstatusNew_T_70 = bits(_mstatusNew_WIRE_5, 62, 36) @[build/NutShell.fir.opt.mlir 23731:29]
      connect _mstatusNew_WIRE_4.pad1, _mstatusNew_T_70 @[build/NutShell.fir.opt.mlir 23732:9]
      node _mstatusNew_T_71 = bits(_mstatusNew_WIRE_5, 63, 63) @[build/NutShell.fir.opt.mlir 23734:29]
      connect _mstatusNew_WIRE_4.sd, _mstatusNew_T_71 @[build/NutShell.fir.opt.mlir 23735:9]
      wire mstatusNew_2 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23736:25]
      connect mstatusNew_2, _mstatusNew_WIRE_4 @[build/NutShell.fir.opt.mlir 23763:9]
      connect mstatusNew_2.ie.u, mstatusOld_2.pie.u @[build/NutShell.fir.opt.mlir 23764:9]
      connect privilegeMode, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 23767:9]
      connect mstatusNew_2.pie.u, UInt<1>(1) @[build/NutShell.fir.opt.mlir 23769:9]
      node mstatus_lo_6 = cat(mstatusNew_2.ie.s, mstatusNew_2.ie.u) @[build/NutShell.fir.opt.mlir 23771:25]
      node mstatus_hi_6 = cat(mstatusNew_2.ie.m, mstatusNew_2.ie.h) @[build/NutShell.fir.opt.mlir 23773:25]
      node _mstatus_T_14 = cat(mstatus_hi_6, mstatus_lo_6) @[build/NutShell.fir.opt.mlir 23775:26]
      node mstatus_lo_7 = cat(mstatusNew_2.pie.s, mstatusNew_2.pie.u) @[build/NutShell.fir.opt.mlir 23777:25]
      node mstatus_hi_7 = cat(mstatusNew_2.pie.m, mstatusNew_2.pie.h) @[build/NutShell.fir.opt.mlir 23779:25]
      node _mstatus_T_15 = cat(mstatus_hi_7, mstatus_lo_7) @[build/NutShell.fir.opt.mlir 23781:26]
      node mstatus_lo_lo_lo_2 = cat(_mstatus_T_15, _mstatus_T_14) @[build/NutShell.fir.opt.mlir 23783:31]
      node mstatus_lo_lo_hi_2 = cat(mstatusNew_2.hpp, mstatusNew_2.spp) @[build/NutShell.fir.opt.mlir 23785:31]
      node mstatus_lo_lo_2 = cat(mstatus_lo_lo_hi_2, mstatus_lo_lo_lo_2) @[build/NutShell.fir.opt.mlir 23787:28]
      node mstatus_lo_hi_lo_2 = cat(mstatusNew_2.fs, mstatusNew_2.mpp) @[build/NutShell.fir.opt.mlir 23789:31]
      node mstatus_lo_hi_hi_hi_2 = cat(mstatusNew_2.sum, mstatusNew_2.mprv) @[build/NutShell.fir.opt.mlir 23791:34]
      node mstatus_lo_hi_hi_2 = cat(mstatus_lo_hi_hi_hi_2, mstatusNew_2.xs) @[build/NutShell.fir.opt.mlir 23793:31]
      node mstatus_lo_hi_2 = cat(mstatus_lo_hi_hi_2, mstatus_lo_hi_lo_2) @[build/NutShell.fir.opt.mlir 23795:28]
      node mstatus_lo_8 = cat(mstatus_lo_hi_2, mstatus_lo_lo_2) @[build/NutShell.fir.opt.mlir 23797:25]
      node mstatus_hi_lo_lo_2 = cat(mstatusNew_2.tvm, mstatusNew_2.mxr) @[build/NutShell.fir.opt.mlir 23799:31]
      node mstatus_hi_lo_hi_2 = cat(mstatusNew_2.tsr, mstatusNew_2.tw) @[build/NutShell.fir.opt.mlir 23801:31]
      node mstatus_hi_lo_2 = cat(mstatus_hi_lo_hi_2, mstatus_hi_lo_lo_2) @[build/NutShell.fir.opt.mlir 23803:28]
      node mstatus_hi_hi_lo_2 = cat(mstatusNew_2.uxl, mstatusNew_2.pad0) @[build/NutShell.fir.opt.mlir 23805:31]
      node mstatus_hi_hi_hi_hi_2 = cat(mstatusNew_2.sd, mstatusNew_2.pad1) @[build/NutShell.fir.opt.mlir 23807:34]
      node mstatus_hi_hi_hi_2 = cat(mstatus_hi_hi_hi_hi_2, mstatusNew_2.sxl) @[build/NutShell.fir.opt.mlir 23809:31]
      node mstatus_hi_hi_2 = cat(mstatus_hi_hi_hi_2, mstatus_hi_hi_lo_2) @[build/NutShell.fir.opt.mlir 23811:28]
      node mstatus_hi_8 = cat(mstatus_hi_hi_2, mstatus_hi_lo_2) @[build/NutShell.fir.opt.mlir 23813:25]
      node _mstatus_T_16 = cat(mstatus_hi_8, mstatus_lo_8) @[build/NutShell.fir.opt.mlir 23815:26]
      connect mstatus, _mstatus_T_16 @[build/NutShell.fir.opt.mlir 23816:9]
      node _retTarget_T_2 = bits(uepc, 38, 0) @[build/NutShell.fir.opt.mlir 23818:27]
      connect retTarget, _retTarget_T_2 @[build/NutShell.fir.opt.mlir 23819:9]
    when raiseExceptionIntr : @[build/NutShell.fir.opt.mlir 23821:7]
      wire _mstatusOld_WIRE_6 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23822:31]
      wire _mstatusOld_WIRE_7 : UInt<64> @[build/NutShell.fir.opt.mlir 23849:31]
      connect _mstatusOld_WIRE_7, mstatus @[build/NutShell.fir.opt.mlir 23850:9]
      node _mstatusOld_T_72 = bits(_mstatusOld_WIRE_7, 0, 0) @[build/NutShell.fir.opt.mlir 23852:29]
      connect _mstatusOld_WIRE_6.ie.u, _mstatusOld_T_72 @[build/NutShell.fir.opt.mlir 23853:9]
      node _mstatusOld_T_73 = bits(_mstatusOld_WIRE_7, 1, 1) @[build/NutShell.fir.opt.mlir 23855:29]
      connect _mstatusOld_WIRE_6.ie.s, _mstatusOld_T_73 @[build/NutShell.fir.opt.mlir 23856:9]
      node _mstatusOld_T_74 = bits(_mstatusOld_WIRE_7, 2, 2) @[build/NutShell.fir.opt.mlir 23858:29]
      connect _mstatusOld_WIRE_6.ie.h, _mstatusOld_T_74 @[build/NutShell.fir.opt.mlir 23859:9]
      node _mstatusOld_T_75 = bits(_mstatusOld_WIRE_7, 3, 3) @[build/NutShell.fir.opt.mlir 23861:29]
      connect _mstatusOld_WIRE_6.ie.m, _mstatusOld_T_75 @[build/NutShell.fir.opt.mlir 23862:9]
      node _mstatusOld_T_76 = bits(_mstatusOld_WIRE_7, 4, 4) @[build/NutShell.fir.opt.mlir 23864:29]
      connect _mstatusOld_WIRE_6.pie.u, _mstatusOld_T_76 @[build/NutShell.fir.opt.mlir 23865:9]
      node _mstatusOld_T_77 = bits(_mstatusOld_WIRE_7, 5, 5) @[build/NutShell.fir.opt.mlir 23867:29]
      connect _mstatusOld_WIRE_6.pie.s, _mstatusOld_T_77 @[build/NutShell.fir.opt.mlir 23868:9]
      node _mstatusOld_T_78 = bits(_mstatusOld_WIRE_7, 6, 6) @[build/NutShell.fir.opt.mlir 23870:29]
      connect _mstatusOld_WIRE_6.pie.h, _mstatusOld_T_78 @[build/NutShell.fir.opt.mlir 23871:9]
      node _mstatusOld_T_79 = bits(_mstatusOld_WIRE_7, 7, 7) @[build/NutShell.fir.opt.mlir 23873:29]
      connect _mstatusOld_WIRE_6.pie.m, _mstatusOld_T_79 @[build/NutShell.fir.opt.mlir 23874:9]
      node _mstatusOld_T_80 = bits(_mstatusOld_WIRE_7, 8, 8) @[build/NutShell.fir.opt.mlir 23876:29]
      connect _mstatusOld_WIRE_6.spp, _mstatusOld_T_80 @[build/NutShell.fir.opt.mlir 23877:9]
      node _mstatusOld_T_81 = bits(_mstatusOld_WIRE_7, 10, 9) @[build/NutShell.fir.opt.mlir 23879:29]
      connect _mstatusOld_WIRE_6.hpp, _mstatusOld_T_81 @[build/NutShell.fir.opt.mlir 23880:9]
      node _mstatusOld_T_82 = bits(_mstatusOld_WIRE_7, 12, 11) @[build/NutShell.fir.opt.mlir 23882:29]
      connect _mstatusOld_WIRE_6.mpp, _mstatusOld_T_82 @[build/NutShell.fir.opt.mlir 23883:9]
      node _mstatusOld_T_83 = bits(_mstatusOld_WIRE_7, 14, 13) @[build/NutShell.fir.opt.mlir 23885:29]
      connect _mstatusOld_WIRE_6.fs, _mstatusOld_T_83 @[build/NutShell.fir.opt.mlir 23886:9]
      node _mstatusOld_T_84 = bits(_mstatusOld_WIRE_7, 16, 15) @[build/NutShell.fir.opt.mlir 23888:29]
      connect _mstatusOld_WIRE_6.xs, _mstatusOld_T_84 @[build/NutShell.fir.opt.mlir 23889:9]
      node _mstatusOld_T_85 = bits(_mstatusOld_WIRE_7, 17, 17) @[build/NutShell.fir.opt.mlir 23891:29]
      connect _mstatusOld_WIRE_6.mprv, _mstatusOld_T_85 @[build/NutShell.fir.opt.mlir 23892:9]
      node _mstatusOld_T_86 = bits(_mstatusOld_WIRE_7, 18, 18) @[build/NutShell.fir.opt.mlir 23894:29]
      connect _mstatusOld_WIRE_6.sum, _mstatusOld_T_86 @[build/NutShell.fir.opt.mlir 23895:9]
      node _mstatusOld_T_87 = bits(_mstatusOld_WIRE_7, 19, 19) @[build/NutShell.fir.opt.mlir 23897:29]
      connect _mstatusOld_WIRE_6.mxr, _mstatusOld_T_87 @[build/NutShell.fir.opt.mlir 23898:9]
      node _mstatusOld_T_88 = bits(_mstatusOld_WIRE_7, 20, 20) @[build/NutShell.fir.opt.mlir 23900:29]
      connect _mstatusOld_WIRE_6.tvm, _mstatusOld_T_88 @[build/NutShell.fir.opt.mlir 23901:9]
      node _mstatusOld_T_89 = bits(_mstatusOld_WIRE_7, 21, 21) @[build/NutShell.fir.opt.mlir 23903:29]
      connect _mstatusOld_WIRE_6.tw, _mstatusOld_T_89 @[build/NutShell.fir.opt.mlir 23904:9]
      node _mstatusOld_T_90 = bits(_mstatusOld_WIRE_7, 22, 22) @[build/NutShell.fir.opt.mlir 23906:29]
      connect _mstatusOld_WIRE_6.tsr, _mstatusOld_T_90 @[build/NutShell.fir.opt.mlir 23907:9]
      node _mstatusOld_T_91 = bits(_mstatusOld_WIRE_7, 31, 23) @[build/NutShell.fir.opt.mlir 23909:29]
      connect _mstatusOld_WIRE_6.pad0, _mstatusOld_T_91 @[build/NutShell.fir.opt.mlir 23910:9]
      node _mstatusOld_T_92 = bits(_mstatusOld_WIRE_7, 33, 32) @[build/NutShell.fir.opt.mlir 23912:29]
      connect _mstatusOld_WIRE_6.uxl, _mstatusOld_T_92 @[build/NutShell.fir.opt.mlir 23913:9]
      node _mstatusOld_T_93 = bits(_mstatusOld_WIRE_7, 35, 34) @[build/NutShell.fir.opt.mlir 23915:29]
      connect _mstatusOld_WIRE_6.sxl, _mstatusOld_T_93 @[build/NutShell.fir.opt.mlir 23916:9]
      node _mstatusOld_T_94 = bits(_mstatusOld_WIRE_7, 62, 36) @[build/NutShell.fir.opt.mlir 23918:29]
      connect _mstatusOld_WIRE_6.pad1, _mstatusOld_T_94 @[build/NutShell.fir.opt.mlir 23919:9]
      node _mstatusOld_T_95 = bits(_mstatusOld_WIRE_7, 63, 63) @[build/NutShell.fir.opt.mlir 23921:29]
      connect _mstatusOld_WIRE_6.sd, _mstatusOld_T_95 @[build/NutShell.fir.opt.mlir 23922:9]
      wire mstatusOld_3 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23923:25]
      connect mstatusOld_3, _mstatusOld_WIRE_6 @[build/NutShell.fir.opt.mlir 23927:9]
      wire _mstatusNew_WIRE_6 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 23928:31]
      wire _mstatusNew_WIRE_7 : UInt<64> @[build/NutShell.fir.opt.mlir 23955:31]
      connect _mstatusNew_WIRE_7, mstatus @[build/NutShell.fir.opt.mlir 23956:9]
      node _mstatusNew_T_72 = bits(_mstatusNew_WIRE_7, 0, 0) @[build/NutShell.fir.opt.mlir 23958:29]
      connect _mstatusNew_WIRE_6.ie.u, _mstatusNew_T_72 @[build/NutShell.fir.opt.mlir 23959:9]
      node _mstatusNew_T_73 = bits(_mstatusNew_WIRE_7, 1, 1) @[build/NutShell.fir.opt.mlir 23961:29]
      connect _mstatusNew_WIRE_6.ie.s, _mstatusNew_T_73 @[build/NutShell.fir.opt.mlir 23962:9]
      node _mstatusNew_T_74 = bits(_mstatusNew_WIRE_7, 2, 2) @[build/NutShell.fir.opt.mlir 23964:29]
      connect _mstatusNew_WIRE_6.ie.h, _mstatusNew_T_74 @[build/NutShell.fir.opt.mlir 23965:9]
      node _mstatusNew_T_75 = bits(_mstatusNew_WIRE_7, 3, 3) @[build/NutShell.fir.opt.mlir 23967:29]
      connect _mstatusNew_WIRE_6.ie.m, _mstatusNew_T_75 @[build/NutShell.fir.opt.mlir 23968:9]
      node _mstatusNew_T_76 = bits(_mstatusNew_WIRE_7, 4, 4) @[build/NutShell.fir.opt.mlir 23970:29]
      connect _mstatusNew_WIRE_6.pie.u, _mstatusNew_T_76 @[build/NutShell.fir.opt.mlir 23971:9]
      node _mstatusNew_T_77 = bits(_mstatusNew_WIRE_7, 5, 5) @[build/NutShell.fir.opt.mlir 23973:29]
      connect _mstatusNew_WIRE_6.pie.s, _mstatusNew_T_77 @[build/NutShell.fir.opt.mlir 23974:9]
      node _mstatusNew_T_78 = bits(_mstatusNew_WIRE_7, 6, 6) @[build/NutShell.fir.opt.mlir 23976:29]
      connect _mstatusNew_WIRE_6.pie.h, _mstatusNew_T_78 @[build/NutShell.fir.opt.mlir 23977:9]
      node _mstatusNew_T_79 = bits(_mstatusNew_WIRE_7, 7, 7) @[build/NutShell.fir.opt.mlir 23979:29]
      connect _mstatusNew_WIRE_6.pie.m, _mstatusNew_T_79 @[build/NutShell.fir.opt.mlir 23980:9]
      node _mstatusNew_T_80 = bits(_mstatusNew_WIRE_7, 8, 8) @[build/NutShell.fir.opt.mlir 23982:29]
      connect _mstatusNew_WIRE_6.spp, _mstatusNew_T_80 @[build/NutShell.fir.opt.mlir 23983:9]
      node _mstatusNew_T_81 = bits(_mstatusNew_WIRE_7, 10, 9) @[build/NutShell.fir.opt.mlir 23985:29]
      connect _mstatusNew_WIRE_6.hpp, _mstatusNew_T_81 @[build/NutShell.fir.opt.mlir 23986:9]
      node _mstatusNew_T_82 = bits(_mstatusNew_WIRE_7, 12, 11) @[build/NutShell.fir.opt.mlir 23988:29]
      connect _mstatusNew_WIRE_6.mpp, _mstatusNew_T_82 @[build/NutShell.fir.opt.mlir 23989:9]
      node _mstatusNew_T_83 = bits(_mstatusNew_WIRE_7, 14, 13) @[build/NutShell.fir.opt.mlir 23991:29]
      connect _mstatusNew_WIRE_6.fs, _mstatusNew_T_83 @[build/NutShell.fir.opt.mlir 23992:9]
      node _mstatusNew_T_84 = bits(_mstatusNew_WIRE_7, 16, 15) @[build/NutShell.fir.opt.mlir 23994:29]
      connect _mstatusNew_WIRE_6.xs, _mstatusNew_T_84 @[build/NutShell.fir.opt.mlir 23995:9]
      node _mstatusNew_T_85 = bits(_mstatusNew_WIRE_7, 17, 17) @[build/NutShell.fir.opt.mlir 23997:29]
      connect _mstatusNew_WIRE_6.mprv, _mstatusNew_T_85 @[build/NutShell.fir.opt.mlir 23998:9]
      node _mstatusNew_T_86 = bits(_mstatusNew_WIRE_7, 18, 18) @[build/NutShell.fir.opt.mlir 24000:29]
      connect _mstatusNew_WIRE_6.sum, _mstatusNew_T_86 @[build/NutShell.fir.opt.mlir 24001:9]
      node _mstatusNew_T_87 = bits(_mstatusNew_WIRE_7, 19, 19) @[build/NutShell.fir.opt.mlir 24003:29]
      connect _mstatusNew_WIRE_6.mxr, _mstatusNew_T_87 @[build/NutShell.fir.opt.mlir 24004:9]
      node _mstatusNew_T_88 = bits(_mstatusNew_WIRE_7, 20, 20) @[build/NutShell.fir.opt.mlir 24006:29]
      connect _mstatusNew_WIRE_6.tvm, _mstatusNew_T_88 @[build/NutShell.fir.opt.mlir 24007:9]
      node _mstatusNew_T_89 = bits(_mstatusNew_WIRE_7, 21, 21) @[build/NutShell.fir.opt.mlir 24009:29]
      connect _mstatusNew_WIRE_6.tw, _mstatusNew_T_89 @[build/NutShell.fir.opt.mlir 24010:9]
      node _mstatusNew_T_90 = bits(_mstatusNew_WIRE_7, 22, 22) @[build/NutShell.fir.opt.mlir 24012:29]
      connect _mstatusNew_WIRE_6.tsr, _mstatusNew_T_90 @[build/NutShell.fir.opt.mlir 24013:9]
      node _mstatusNew_T_91 = bits(_mstatusNew_WIRE_7, 31, 23) @[build/NutShell.fir.opt.mlir 24015:29]
      connect _mstatusNew_WIRE_6.pad0, _mstatusNew_T_91 @[build/NutShell.fir.opt.mlir 24016:9]
      node _mstatusNew_T_92 = bits(_mstatusNew_WIRE_7, 33, 32) @[build/NutShell.fir.opt.mlir 24018:29]
      connect _mstatusNew_WIRE_6.uxl, _mstatusNew_T_92 @[build/NutShell.fir.opt.mlir 24019:9]
      node _mstatusNew_T_93 = bits(_mstatusNew_WIRE_7, 35, 34) @[build/NutShell.fir.opt.mlir 24021:29]
      connect _mstatusNew_WIRE_6.sxl, _mstatusNew_T_93 @[build/NutShell.fir.opt.mlir 24022:9]
      node _mstatusNew_T_94 = bits(_mstatusNew_WIRE_7, 62, 36) @[build/NutShell.fir.opt.mlir 24024:29]
      connect _mstatusNew_WIRE_6.pad1, _mstatusNew_T_94 @[build/NutShell.fir.opt.mlir 24025:9]
      node _mstatusNew_T_95 = bits(_mstatusNew_WIRE_7, 63, 63) @[build/NutShell.fir.opt.mlir 24027:29]
      connect _mstatusNew_WIRE_6.sd, _mstatusNew_T_95 @[build/NutShell.fir.opt.mlir 24028:9]
      wire mstatusNew_3 : { sd : UInt<1>, pad1 : UInt<27>, sxl : UInt<2>, uxl : UInt<2>, pad0 : UInt<9>, tsr : UInt<1>, tw : UInt<1>, tvm : UInt<1>, mxr : UInt<1>, sum : UInt<1>, mprv : UInt<1>, xs : UInt<2>, fs : UInt<2>, mpp : UInt<2>, hpp : UInt<2>, spp : UInt<1>, pie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> }, ie : { m : UInt<1>, h : UInt<1>, s : UInt<1>, u : UInt<1> } } @[build/NutShell.fir.opt.mlir 24029:25]
      connect mstatusNew_3, _mstatusNew_WIRE_6 @[build/NutShell.fir.opt.mlir 24056:9]
      when delegS : @[build/NutShell.fir.opt.mlir 24057:9]
        connect scause, causeNO @[build/NutShell.fir.opt.mlir 24058:11]
        node sepc_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 24060:27]
        node _sepc_T_4 = mux(sepc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 24062:24]
        node _sepc_T_5 = cat(_sepc_T_4, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 24064:24]
        connect sepc, _sepc_T_5 @[build/NutShell.fir.opt.mlir 24065:11]
        connect mstatusNew_3.spp, tail(privilegeMode, 1) @[build/NutShell.fir.opt.mlir 24067:11]
        connect mstatusNew_3.pie.s, mstatusOld_3.ie.s @[build/NutShell.fir.opt.mlir 24068:11]
        connect mstatusNew_3.ie.s, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24070:11]
        connect privilegeMode, pad(UInt<1>(1), 2) @[build/NutShell.fir.opt.mlir 24073:11]
        when tvalWen : @[build/NutShell.fir.opt.mlir 24074:11]
          connect stval, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 24077:13]
      else :
        connect mcause, causeNO @[build/NutShell.fir.opt.mlir 24080:11]
        node mepc_signBit = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 24082:27]
        node _mepc_T_4 = mux(mepc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 24084:24]
        node _mepc_T_5 = cat(_mepc_T_4, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 24086:24]
        connect mepc, _mepc_T_5 @[build/NutShell.fir.opt.mlir 24087:11]
        connect mstatusNew_3.mpp, privilegeMode @[build/NutShell.fir.opt.mlir 24088:11]
        connect mstatusNew_3.pie.m, mstatusOld_3.ie.m @[build/NutShell.fir.opt.mlir 24089:11]
        connect mstatusNew_3.ie.m, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24091:11]
        connect privilegeMode, UInt<2>(3) @[build/NutShell.fir.opt.mlir 24093:11]
        when tvalWen : @[build/NutShell.fir.opt.mlir 24094:11]
          connect mtval, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 24097:13]
      node mstatus_lo_9 = cat(mstatusNew_3.ie.s, mstatusNew_3.ie.u) @[build/NutShell.fir.opt.mlir 24101:25]
      node mstatus_hi_9 = cat(mstatusNew_3.ie.m, mstatusNew_3.ie.h) @[build/NutShell.fir.opt.mlir 24103:25]
      node _mstatus_T_17 = cat(mstatus_hi_9, mstatus_lo_9) @[build/NutShell.fir.opt.mlir 24105:26]
      node mstatus_lo_10 = cat(mstatusNew_3.pie.s, mstatusNew_3.pie.u) @[build/NutShell.fir.opt.mlir 24107:26]
      node mstatus_hi_10 = cat(mstatusNew_3.pie.m, mstatusNew_3.pie.h) @[build/NutShell.fir.opt.mlir 24109:26]
      node _mstatus_T_18 = cat(mstatus_hi_10, mstatus_lo_10) @[build/NutShell.fir.opt.mlir 24111:26]
      node mstatus_lo_lo_lo_3 = cat(_mstatus_T_18, _mstatus_T_17) @[build/NutShell.fir.opt.mlir 24113:31]
      node mstatus_lo_lo_hi_3 = cat(mstatusNew_3.hpp, mstatusNew_3.spp) @[build/NutShell.fir.opt.mlir 24115:31]
      node mstatus_lo_lo_3 = cat(mstatus_lo_lo_hi_3, mstatus_lo_lo_lo_3) @[build/NutShell.fir.opt.mlir 24117:28]
      node mstatus_lo_hi_lo_3 = cat(mstatusNew_3.fs, mstatusNew_3.mpp) @[build/NutShell.fir.opt.mlir 24119:31]
      node mstatus_lo_hi_hi_hi_3 = cat(mstatusNew_3.sum, mstatusNew_3.mprv) @[build/NutShell.fir.opt.mlir 24121:34]
      node mstatus_lo_hi_hi_3 = cat(mstatus_lo_hi_hi_hi_3, mstatusNew_3.xs) @[build/NutShell.fir.opt.mlir 24123:31]
      node mstatus_lo_hi_3 = cat(mstatus_lo_hi_hi_3, mstatus_lo_hi_lo_3) @[build/NutShell.fir.opt.mlir 24125:28]
      node mstatus_lo_11 = cat(mstatus_lo_hi_3, mstatus_lo_lo_3) @[build/NutShell.fir.opt.mlir 24127:26]
      node mstatus_hi_lo_lo_3 = cat(mstatusNew_3.tvm, mstatusNew_3.mxr) @[build/NutShell.fir.opt.mlir 24129:31]
      node mstatus_hi_lo_hi_3 = cat(mstatusNew_3.tsr, mstatusNew_3.tw) @[build/NutShell.fir.opt.mlir 24131:31]
      node mstatus_hi_lo_3 = cat(mstatus_hi_lo_hi_3, mstatus_hi_lo_lo_3) @[build/NutShell.fir.opt.mlir 24133:28]
      node mstatus_hi_hi_lo_3 = cat(mstatusNew_3.uxl, mstatusNew_3.pad0) @[build/NutShell.fir.opt.mlir 24135:31]
      node mstatus_hi_hi_hi_hi_3 = cat(mstatusNew_3.sd, mstatusNew_3.pad1) @[build/NutShell.fir.opt.mlir 24137:34]
      node mstatus_hi_hi_hi_3 = cat(mstatus_hi_hi_hi_hi_3, mstatusNew_3.sxl) @[build/NutShell.fir.opt.mlir 24139:31]
      node mstatus_hi_hi_3 = cat(mstatus_hi_hi_hi_3, mstatus_hi_hi_lo_3) @[build/NutShell.fir.opt.mlir 24141:28]
      node mstatus_hi_11 = cat(mstatus_hi_hi_3, mstatus_hi_lo_3) @[build/NutShell.fir.opt.mlir 24143:26]
      node _mstatus_T_19 = cat(mstatus_hi_11, mstatus_lo_11) @[build/NutShell.fir.opt.mlir 24145:26]
      connect mstatus, _mstatus_T_19 @[build/NutShell.fir.opt.mlir 24146:9]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 24149:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 24150:7]
    wire perfCntCond_0 : UInt<1> @[build/NutShell.fir.opt.mlir 24151:24]
    connect perfCntCond_0, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24153:7]
    wire perfCntCond_1 : UInt<1> @[build/NutShell.fir.opt.mlir 24154:24]
    connect perfCntCond_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24156:7]
    wire perfCntCond_2 : UInt<1> @[build/NutShell.fir.opt.mlir 24157:24]
    connect perfCntCond_2, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24159:7]
    wire perfCntCond_3 : UInt<1> @[build/NutShell.fir.opt.mlir 24160:24]
    connect perfCntCond_3, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24162:7]
    wire perfCntCond_4 : UInt<1> @[build/NutShell.fir.opt.mlir 24163:24]
    connect perfCntCond_4, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24165:7]
    wire perfCntCond_5 : UInt<1> @[build/NutShell.fir.opt.mlir 24166:24]
    connect perfCntCond_5, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24168:7]
    wire perfCntCond_6 : UInt<1> @[build/NutShell.fir.opt.mlir 24169:24]
    connect perfCntCond_6, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24171:7]
    wire perfCntCond_7 : UInt<1> @[build/NutShell.fir.opt.mlir 24172:24]
    connect perfCntCond_7, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24174:7]
    wire perfCntCond_8 : UInt<1> @[build/NutShell.fir.opt.mlir 24175:24]
    connect perfCntCond_8, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24177:7]
    wire perfCntCond_9 : UInt<1> @[build/NutShell.fir.opt.mlir 24178:24]
    connect perfCntCond_9, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24180:7]
    wire perfCntCond_10 : UInt<1> @[build/NutShell.fir.opt.mlir 24181:25]
    connect perfCntCond_10, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24183:7]
    wire perfCntCond_11 : UInt<1> @[build/NutShell.fir.opt.mlir 24184:25]
    connect perfCntCond_11, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24186:7]
    wire perfCntCond_12 : UInt<1> @[build/NutShell.fir.opt.mlir 24187:25]
    connect perfCntCond_12, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24189:7]
    wire perfCntCond_13 : UInt<1> @[build/NutShell.fir.opt.mlir 24190:25]
    connect perfCntCond_13, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24192:7]
    wire perfCntCond_14 : UInt<1> @[build/NutShell.fir.opt.mlir 24193:25]
    connect perfCntCond_14, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24195:7]
    wire perfCntCond_15 : UInt<1> @[build/NutShell.fir.opt.mlir 24196:25]
    connect perfCntCond_15, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24198:7]
    wire perfCntCond_16 : UInt<1> @[build/NutShell.fir.opt.mlir 24199:25]
    connect perfCntCond_16, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24201:7]
    wire perfCntCond_17 : UInt<1> @[build/NutShell.fir.opt.mlir 24202:25]
    connect perfCntCond_17, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24204:7]
    wire perfCntCond_18 : UInt<1> @[build/NutShell.fir.opt.mlir 24205:25]
    connect perfCntCond_18, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24207:7]
    wire perfCntCond_19 : UInt<1> @[build/NutShell.fir.opt.mlir 24208:25]
    connect perfCntCond_19, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24210:7]
    wire perfCntCond_20 : UInt<1> @[build/NutShell.fir.opt.mlir 24211:25]
    connect perfCntCond_20, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24213:7]
    wire perfCntCond_21 : UInt<1> @[build/NutShell.fir.opt.mlir 24214:25]
    connect perfCntCond_21, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24216:7]
    wire perfCntCond_22 : UInt<1> @[build/NutShell.fir.opt.mlir 24217:25]
    connect perfCntCond_22, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24219:7]
    wire perfCntCond_23 : UInt<1> @[build/NutShell.fir.opt.mlir 24220:25]
    connect perfCntCond_23, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24222:7]
    wire perfCntCond_24 : UInt<1> @[build/NutShell.fir.opt.mlir 24223:25]
    connect perfCntCond_24, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24225:7]
    wire perfCntCond_25 : UInt<1> @[build/NutShell.fir.opt.mlir 24226:25]
    connect perfCntCond_25, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24228:7]
    wire perfCntCond_26 : UInt<1> @[build/NutShell.fir.opt.mlir 24229:25]
    connect perfCntCond_26, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24231:7]
    wire perfCntCond_27 : UInt<1> @[build/NutShell.fir.opt.mlir 24232:25]
    connect perfCntCond_27, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24234:7]
    wire perfCntCond_28 : UInt<1> @[build/NutShell.fir.opt.mlir 24235:25]
    connect perfCntCond_28, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24237:7]
    wire perfCntCond_29 : UInt<1> @[build/NutShell.fir.opt.mlir 24238:25]
    connect perfCntCond_29, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24240:7]
    wire perfCntCond_30 : UInt<1> @[build/NutShell.fir.opt.mlir 24241:25]
    connect perfCntCond_30, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24243:7]
    wire perfCntCond_31 : UInt<1> @[build/NutShell.fir.opt.mlir 24244:25]
    connect perfCntCond_31, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24246:7]
    wire perfCntCond_32 : UInt<1> @[build/NutShell.fir.opt.mlir 24247:25]
    connect perfCntCond_32, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24249:7]
    wire perfCntCond_33 : UInt<1> @[build/NutShell.fir.opt.mlir 24250:25]
    connect perfCntCond_33, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24252:7]
    wire perfCntCond_34 : UInt<1> @[build/NutShell.fir.opt.mlir 24253:25]
    connect perfCntCond_34, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24255:7]
    wire perfCntCond_35 : UInt<1> @[build/NutShell.fir.opt.mlir 24256:25]
    connect perfCntCond_35, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24258:7]
    wire perfCntCond_36 : UInt<1> @[build/NutShell.fir.opt.mlir 24259:25]
    connect perfCntCond_36, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24261:7]
    wire perfCntCond_37 : UInt<1> @[build/NutShell.fir.opt.mlir 24262:25]
    connect perfCntCond_37, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24264:7]
    wire perfCntCond_38 : UInt<1> @[build/NutShell.fir.opt.mlir 24265:25]
    connect perfCntCond_38, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24267:7]
    wire perfCntCond_39 : UInt<1> @[build/NutShell.fir.opt.mlir 24268:25]
    connect perfCntCond_39, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24270:7]
    wire perfCntCond_40 : UInt<1> @[build/NutShell.fir.opt.mlir 24271:25]
    connect perfCntCond_40, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24273:7]
    wire perfCntCond_41 : UInt<1> @[build/NutShell.fir.opt.mlir 24274:25]
    connect perfCntCond_41, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24276:7]
    wire perfCntCond_42 : UInt<1> @[build/NutShell.fir.opt.mlir 24277:25]
    connect perfCntCond_42, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24279:7]
    wire perfCntCond_43 : UInt<1> @[build/NutShell.fir.opt.mlir 24280:25]
    connect perfCntCond_43, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24282:7]
    wire perfCntCond_44 : UInt<1> @[build/NutShell.fir.opt.mlir 24283:25]
    connect perfCntCond_44, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24285:7]
    wire perfCntCond_45 : UInt<1> @[build/NutShell.fir.opt.mlir 24286:25]
    connect perfCntCond_45, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24288:7]
    wire perfCntCond_46 : UInt<1> @[build/NutShell.fir.opt.mlir 24289:25]
    connect perfCntCond_46, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24291:7]
    wire perfCntCond_47 : UInt<1> @[build/NutShell.fir.opt.mlir 24292:25]
    connect perfCntCond_47, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24294:7]
    wire perfCntCond_48 : UInt<1> @[build/NutShell.fir.opt.mlir 24295:25]
    connect perfCntCond_48, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24297:7]
    wire perfCntCond_49 : UInt<1> @[build/NutShell.fir.opt.mlir 24298:25]
    connect perfCntCond_49, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24300:7]
    wire perfCntCond_50 : UInt<1> @[build/NutShell.fir.opt.mlir 24301:25]
    connect perfCntCond_50, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24303:7]
    wire perfCntCond_51 : UInt<1> @[build/NutShell.fir.opt.mlir 24304:25]
    connect perfCntCond_51, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24306:7]
    wire perfCntCond_52 : UInt<1> @[build/NutShell.fir.opt.mlir 24307:25]
    connect perfCntCond_52, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24309:7]
    wire perfCntCond_53 : UInt<1> @[build/NutShell.fir.opt.mlir 24310:25]
    connect perfCntCond_53, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24312:7]
    wire perfCntCond_54 : UInt<1> @[build/NutShell.fir.opt.mlir 24313:25]
    connect perfCntCond_54, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24315:7]
    wire perfCntCond_55 : UInt<1> @[build/NutShell.fir.opt.mlir 24316:25]
    connect perfCntCond_55, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24318:7]
    wire perfCntCond_56 : UInt<1> @[build/NutShell.fir.opt.mlir 24319:25]
    connect perfCntCond_56, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24321:7]
    wire perfCntCond_57 : UInt<1> @[build/NutShell.fir.opt.mlir 24322:25]
    connect perfCntCond_57, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24324:7]
    wire perfCntCond_58 : UInt<1> @[build/NutShell.fir.opt.mlir 24325:25]
    connect perfCntCond_58, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24327:7]
    wire perfCntCond_59 : UInt<1> @[build/NutShell.fir.opt.mlir 24328:25]
    connect perfCntCond_59, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24330:7]
    wire perfCntCond_60 : UInt<1> @[build/NutShell.fir.opt.mlir 24331:25]
    connect perfCntCond_60, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24333:7]
    wire perfCntCond_61 : UInt<1> @[build/NutShell.fir.opt.mlir 24334:25]
    connect perfCntCond_61, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24336:7]
    wire perfCntCond_62 : UInt<1> @[build/NutShell.fir.opt.mlir 24337:25]
    connect perfCntCond_62, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24339:7]
    wire perfCntCond_63 : UInt<1> @[build/NutShell.fir.opt.mlir 24340:25]
    connect perfCntCond_63, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24342:7]
    wire perfCntCond_64 : UInt<1> @[build/NutShell.fir.opt.mlir 24343:25]
    connect perfCntCond_64, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24345:7]
    wire perfCntCond_65 : UInt<1> @[build/NutShell.fir.opt.mlir 24346:25]
    connect perfCntCond_65, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24348:7]
    wire perfCntCond_66 : UInt<1> @[build/NutShell.fir.opt.mlir 24349:25]
    connect perfCntCond_66, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24351:7]
    wire perfCntCond_67 : UInt<1> @[build/NutShell.fir.opt.mlir 24352:25]
    connect perfCntCond_67, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24354:7]
    wire perfCntCond_68 : UInt<1> @[build/NutShell.fir.opt.mlir 24355:25]
    connect perfCntCond_68, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24357:7]
    wire perfCntCond_69 : UInt<1> @[build/NutShell.fir.opt.mlir 24358:25]
    connect perfCntCond_69, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24360:7]
    wire perfCntCond_70 : UInt<1> @[build/NutShell.fir.opt.mlir 24361:25]
    connect perfCntCond_70, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24363:7]
    wire perfCntCond_71 : UInt<1> @[build/NutShell.fir.opt.mlir 24364:25]
    connect perfCntCond_71, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24366:7]
    wire perfCntCond_72 : UInt<1> @[build/NutShell.fir.opt.mlir 24367:25]
    connect perfCntCond_72, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24369:7]
    wire perfCntCond_73 : UInt<1> @[build/NutShell.fir.opt.mlir 24370:25]
    connect perfCntCond_73, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24372:7]
    wire perfCntCond_74 : UInt<1> @[build/NutShell.fir.opt.mlir 24373:25]
    connect perfCntCond_74, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24375:7]
    wire perfCntCond_75 : UInt<1> @[build/NutShell.fir.opt.mlir 24376:25]
    connect perfCntCond_75, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24378:7]
    wire perfCntCond_76 : UInt<1> @[build/NutShell.fir.opt.mlir 24379:25]
    connect perfCntCond_76, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24381:7]
    wire perfCntCond_77 : UInt<1> @[build/NutShell.fir.opt.mlir 24382:25]
    connect perfCntCond_77, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24384:7]
    wire perfCntCond_78 : UInt<1> @[build/NutShell.fir.opt.mlir 24385:25]
    connect perfCntCond_78, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24387:7]
    wire perfCntCond_79 : UInt<1> @[build/NutShell.fir.opt.mlir 24388:25]
    connect perfCntCond_79, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24390:7]
    wire perfCntCond_80 : UInt<1> @[build/NutShell.fir.opt.mlir 24391:25]
    connect perfCntCond_80, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24393:7]
    wire perfCntCond_81 : UInt<1> @[build/NutShell.fir.opt.mlir 24394:25]
    connect perfCntCond_81, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24396:7]
    wire perfCntCond_82 : UInt<1> @[build/NutShell.fir.opt.mlir 24397:25]
    connect perfCntCond_82, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24399:7]
    wire perfCntCond_83 : UInt<1> @[build/NutShell.fir.opt.mlir 24400:25]
    connect perfCntCond_83, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24402:7]
    wire perfCntCond_84 : UInt<1> @[build/NutShell.fir.opt.mlir 24403:25]
    connect perfCntCond_84, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24405:7]
    wire perfCntCond_85 : UInt<1> @[build/NutShell.fir.opt.mlir 24406:25]
    connect perfCntCond_85, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24408:7]
    wire perfCntCond_86 : UInt<1> @[build/NutShell.fir.opt.mlir 24409:25]
    connect perfCntCond_86, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24411:7]
    wire perfCntCond_87 : UInt<1> @[build/NutShell.fir.opt.mlir 24412:25]
    connect perfCntCond_87, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24414:7]
    wire perfCntCond_88 : UInt<1> @[build/NutShell.fir.opt.mlir 24415:25]
    connect perfCntCond_88, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24417:7]
    wire perfCntCond_89 : UInt<1> @[build/NutShell.fir.opt.mlir 24418:25]
    connect perfCntCond_89, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24420:7]
    wire perfCntCond_90 : UInt<1> @[build/NutShell.fir.opt.mlir 24421:25]
    connect perfCntCond_90, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24423:7]
    wire perfCntCond_91 : UInt<1> @[build/NutShell.fir.opt.mlir 24424:25]
    connect perfCntCond_91, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24426:7]
    wire perfCntCond_92 : UInt<1> @[build/NutShell.fir.opt.mlir 24427:25]
    connect perfCntCond_92, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24429:7]
    wire perfCntCond_93 : UInt<1> @[build/NutShell.fir.opt.mlir 24430:25]
    connect perfCntCond_93, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24432:7]
    wire perfCntCond_94 : UInt<1> @[build/NutShell.fir.opt.mlir 24433:25]
    connect perfCntCond_94, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24435:7]
    wire perfCntCond_95 : UInt<1> @[build/NutShell.fir.opt.mlir 24436:25]
    connect perfCntCond_95, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24438:7]
    wire perfCntCond_96 : UInt<1> @[build/NutShell.fir.opt.mlir 24439:25]
    connect perfCntCond_96, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24441:7]
    wire perfCntCond_97 : UInt<1> @[build/NutShell.fir.opt.mlir 24442:25]
    connect perfCntCond_97, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24444:7]
    wire perfCntCond_98 : UInt<1> @[build/NutShell.fir.opt.mlir 24445:25]
    connect perfCntCond_98, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24447:7]
    wire perfCntCond_99 : UInt<1> @[build/NutShell.fir.opt.mlir 24448:25]
    connect perfCntCond_99, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24450:7]
    wire perfCntCond_100 : UInt<1> @[build/NutShell.fir.opt.mlir 24451:26]
    connect perfCntCond_100, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24453:7]
    wire perfCntCond_101 : UInt<1> @[build/NutShell.fir.opt.mlir 24454:26]
    connect perfCntCond_101, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24456:7]
    wire perfCntCond_102 : UInt<1> @[build/NutShell.fir.opt.mlir 24457:26]
    connect perfCntCond_102, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24459:7]
    wire perfCntCond_103 : UInt<1> @[build/NutShell.fir.opt.mlir 24460:26]
    connect perfCntCond_103, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24462:7]
    wire perfCntCond_104 : UInt<1> @[build/NutShell.fir.opt.mlir 24463:26]
    connect perfCntCond_104, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24465:7]
    wire perfCntCond_105 : UInt<1> @[build/NutShell.fir.opt.mlir 24466:26]
    connect perfCntCond_105, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24468:7]
    wire perfCntCond_106 : UInt<1> @[build/NutShell.fir.opt.mlir 24469:26]
    connect perfCntCond_106, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24471:7]
    wire perfCntCond_107 : UInt<1> @[build/NutShell.fir.opt.mlir 24472:26]
    connect perfCntCond_107, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24474:7]
    wire perfCntCond_108 : UInt<1> @[build/NutShell.fir.opt.mlir 24475:26]
    connect perfCntCond_108, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24477:7]
    wire perfCntCond_109 : UInt<1> @[build/NutShell.fir.opt.mlir 24478:26]
    connect perfCntCond_109, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24480:7]
    wire perfCntCond_110 : UInt<1> @[build/NutShell.fir.opt.mlir 24481:26]
    connect perfCntCond_110, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24483:7]
    wire perfCntCond_111 : UInt<1> @[build/NutShell.fir.opt.mlir 24484:26]
    connect perfCntCond_111, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24486:7]
    wire perfCntCond_112 : UInt<1> @[build/NutShell.fir.opt.mlir 24487:26]
    connect perfCntCond_112, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24489:7]
    wire perfCntCond_113 : UInt<1> @[build/NutShell.fir.opt.mlir 24490:26]
    connect perfCntCond_113, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24492:7]
    wire perfCntCond_114 : UInt<1> @[build/NutShell.fir.opt.mlir 24493:26]
    connect perfCntCond_114, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24495:7]
    wire perfCntCond_115 : UInt<1> @[build/NutShell.fir.opt.mlir 24496:26]
    connect perfCntCond_115, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24498:7]
    wire perfCntCond_116 : UInt<1> @[build/NutShell.fir.opt.mlir 24499:26]
    connect perfCntCond_116, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24501:7]
    wire perfCntCond_117 : UInt<1> @[build/NutShell.fir.opt.mlir 24502:26]
    connect perfCntCond_117, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24504:7]
    wire perfCntCond_118 : UInt<1> @[build/NutShell.fir.opt.mlir 24505:26]
    connect perfCntCond_118, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24507:7]
    wire perfCntCond_119 : UInt<1> @[build/NutShell.fir.opt.mlir 24508:26]
    connect perfCntCond_119, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24510:7]
    wire perfCntCond_120 : UInt<1> @[build/NutShell.fir.opt.mlir 24511:26]
    connect perfCntCond_120, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24513:7]
    wire perfCntCond_121 : UInt<1> @[build/NutShell.fir.opt.mlir 24514:26]
    connect perfCntCond_121, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24516:7]
    wire perfCntCond_122 : UInt<1> @[build/NutShell.fir.opt.mlir 24517:26]
    connect perfCntCond_122, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24519:7]
    wire perfCntCond_123 : UInt<1> @[build/NutShell.fir.opt.mlir 24520:26]
    connect perfCntCond_123, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24522:7]
    wire perfCntCond_124 : UInt<1> @[build/NutShell.fir.opt.mlir 24523:26]
    connect perfCntCond_124, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24525:7]
    wire perfCntCond_125 : UInt<1> @[build/NutShell.fir.opt.mlir 24526:26]
    connect perfCntCond_125, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24528:7]
    wire perfCntCond_126 : UInt<1> @[build/NutShell.fir.opt.mlir 24529:26]
    connect perfCntCond_126, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24531:7]
    wire perfCntCond_127 : UInt<1> @[build/NutShell.fir.opt.mlir 24532:26]
    connect perfCntCond_127, UInt<1>(0) @[build/NutShell.fir.opt.mlir 24534:7]
    when perfCntCond_0 : @[build/NutShell.fir.opt.mlir 24535:7]
      node _perfCnts_0_T_4 = add(perfCnts_0, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24537:28]
      node _perfCnts_0_T_5 = tail(_perfCnts_0_T_4, 1) @[build/NutShell.fir.opt.mlir 24539:28]
      connect perfCnts_0, _perfCnts_0_T_5 @[build/NutShell.fir.opt.mlir 24540:9]
    when perfCntCond_1 : @[build/NutShell.fir.opt.mlir 24542:7]
      node _perfCnts_1_T_4 = add(perfCnts_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24544:28]
      node _perfCnts_1_T_5 = tail(_perfCnts_1_T_4, 1) @[build/NutShell.fir.opt.mlir 24546:28]
      connect perfCnts_1, _perfCnts_1_T_5 @[build/NutShell.fir.opt.mlir 24547:9]
    when perfCntCond_2 : @[build/NutShell.fir.opt.mlir 24549:7]
      node _perfCnts_2_T_4 = add(perfCnts_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24551:28]
      node _perfCnts_2_T_5 = tail(_perfCnts_2_T_4, 1) @[build/NutShell.fir.opt.mlir 24553:28]
      connect perfCnts_2, _perfCnts_2_T_5 @[build/NutShell.fir.opt.mlir 24554:9]
    when perfCntCond_3 : @[build/NutShell.fir.opt.mlir 24556:7]
      node _perfCnts_3_T_4 = add(perfCnts_3, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24558:28]
      node _perfCnts_3_T_5 = tail(_perfCnts_3_T_4, 1) @[build/NutShell.fir.opt.mlir 24560:28]
      connect perfCnts_3, _perfCnts_3_T_5 @[build/NutShell.fir.opt.mlir 24561:9]
    when perfCntCond_4 : @[build/NutShell.fir.opt.mlir 24563:7]
      node _perfCnts_4_T_4 = add(perfCnts_4, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24565:28]
      node _perfCnts_4_T_5 = tail(_perfCnts_4_T_4, 1) @[build/NutShell.fir.opt.mlir 24567:28]
      connect perfCnts_4, _perfCnts_4_T_5 @[build/NutShell.fir.opt.mlir 24568:9]
    when perfCntCond_5 : @[build/NutShell.fir.opt.mlir 24570:7]
      node _perfCnts_5_T_4 = add(perfCnts_5, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24572:28]
      node _perfCnts_5_T_5 = tail(_perfCnts_5_T_4, 1) @[build/NutShell.fir.opt.mlir 24574:28]
      connect perfCnts_5, _perfCnts_5_T_5 @[build/NutShell.fir.opt.mlir 24575:9]
    when perfCntCond_6 : @[build/NutShell.fir.opt.mlir 24577:7]
      node _perfCnts_6_T_4 = add(perfCnts_6, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24579:28]
      node _perfCnts_6_T_5 = tail(_perfCnts_6_T_4, 1) @[build/NutShell.fir.opt.mlir 24581:28]
      connect perfCnts_6, _perfCnts_6_T_5 @[build/NutShell.fir.opt.mlir 24582:9]
    when perfCntCond_7 : @[build/NutShell.fir.opt.mlir 24584:7]
      node _perfCnts_7_T_4 = add(perfCnts_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24586:28]
      node _perfCnts_7_T_5 = tail(_perfCnts_7_T_4, 1) @[build/NutShell.fir.opt.mlir 24588:28]
      connect perfCnts_7, _perfCnts_7_T_5 @[build/NutShell.fir.opt.mlir 24589:9]
    when perfCntCond_8 : @[build/NutShell.fir.opt.mlir 24591:7]
      node _perfCnts_8_T_4 = add(perfCnts_8, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24593:28]
      node _perfCnts_8_T_5 = tail(_perfCnts_8_T_4, 1) @[build/NutShell.fir.opt.mlir 24595:28]
      connect perfCnts_8, _perfCnts_8_T_5 @[build/NutShell.fir.opt.mlir 24596:9]
    when perfCntCond_9 : @[build/NutShell.fir.opt.mlir 24598:7]
      node _perfCnts_9_T_4 = add(perfCnts_9, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24600:28]
      node _perfCnts_9_T_5 = tail(_perfCnts_9_T_4, 1) @[build/NutShell.fir.opt.mlir 24602:28]
      connect perfCnts_9, _perfCnts_9_T_5 @[build/NutShell.fir.opt.mlir 24603:9]
    when perfCntCond_10 : @[build/NutShell.fir.opt.mlir 24605:7]
      node _perfCnts_10_T_4 = add(perfCnts_10, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24607:29]
      node _perfCnts_10_T_5 = tail(_perfCnts_10_T_4, 1) @[build/NutShell.fir.opt.mlir 24609:29]
      connect perfCnts_10, _perfCnts_10_T_5 @[build/NutShell.fir.opt.mlir 24610:9]
    when perfCntCond_11 : @[build/NutShell.fir.opt.mlir 24612:7]
      node _perfCnts_11_T_4 = add(perfCnts_11, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24614:29]
      node _perfCnts_11_T_5 = tail(_perfCnts_11_T_4, 1) @[build/NutShell.fir.opt.mlir 24616:29]
      connect perfCnts_11, _perfCnts_11_T_5 @[build/NutShell.fir.opt.mlir 24617:9]
    when perfCntCond_12 : @[build/NutShell.fir.opt.mlir 24619:7]
      node _perfCnts_12_T_4 = add(perfCnts_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24621:29]
      node _perfCnts_12_T_5 = tail(_perfCnts_12_T_4, 1) @[build/NutShell.fir.opt.mlir 24623:29]
      connect perfCnts_12, _perfCnts_12_T_5 @[build/NutShell.fir.opt.mlir 24624:9]
    when perfCntCond_13 : @[build/NutShell.fir.opt.mlir 24626:7]
      node _perfCnts_13_T_4 = add(perfCnts_13, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24628:29]
      node _perfCnts_13_T_5 = tail(_perfCnts_13_T_4, 1) @[build/NutShell.fir.opt.mlir 24630:29]
      connect perfCnts_13, _perfCnts_13_T_5 @[build/NutShell.fir.opt.mlir 24631:9]
    when perfCntCond_14 : @[build/NutShell.fir.opt.mlir 24633:7]
      node _perfCnts_14_T_4 = add(perfCnts_14, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24635:29]
      node _perfCnts_14_T_5 = tail(_perfCnts_14_T_4, 1) @[build/NutShell.fir.opt.mlir 24637:29]
      connect perfCnts_14, _perfCnts_14_T_5 @[build/NutShell.fir.opt.mlir 24638:9]
    when perfCntCond_15 : @[build/NutShell.fir.opt.mlir 24640:7]
      node _perfCnts_15_T_4 = add(perfCnts_15, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24642:29]
      node _perfCnts_15_T_5 = tail(_perfCnts_15_T_4, 1) @[build/NutShell.fir.opt.mlir 24644:29]
      connect perfCnts_15, _perfCnts_15_T_5 @[build/NutShell.fir.opt.mlir 24645:9]
    when perfCntCond_16 : @[build/NutShell.fir.opt.mlir 24647:7]
      node _perfCnts_16_T_4 = add(perfCnts_16, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24649:29]
      node _perfCnts_16_T_5 = tail(_perfCnts_16_T_4, 1) @[build/NutShell.fir.opt.mlir 24651:29]
      connect perfCnts_16, _perfCnts_16_T_5 @[build/NutShell.fir.opt.mlir 24652:9]
    when perfCntCond_17 : @[build/NutShell.fir.opt.mlir 24654:7]
      node _perfCnts_17_T_4 = add(perfCnts_17, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24656:29]
      node _perfCnts_17_T_5 = tail(_perfCnts_17_T_4, 1) @[build/NutShell.fir.opt.mlir 24658:29]
      connect perfCnts_17, _perfCnts_17_T_5 @[build/NutShell.fir.opt.mlir 24659:9]
    when perfCntCond_18 : @[build/NutShell.fir.opt.mlir 24661:7]
      node _perfCnts_18_T_4 = add(perfCnts_18, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24663:29]
      node _perfCnts_18_T_5 = tail(_perfCnts_18_T_4, 1) @[build/NutShell.fir.opt.mlir 24665:29]
      connect perfCnts_18, _perfCnts_18_T_5 @[build/NutShell.fir.opt.mlir 24666:9]
    when perfCntCond_19 : @[build/NutShell.fir.opt.mlir 24668:7]
      node _perfCnts_19_T_4 = add(perfCnts_19, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24670:29]
      node _perfCnts_19_T_5 = tail(_perfCnts_19_T_4, 1) @[build/NutShell.fir.opt.mlir 24672:29]
      connect perfCnts_19, _perfCnts_19_T_5 @[build/NutShell.fir.opt.mlir 24673:9]
    when perfCntCond_20 : @[build/NutShell.fir.opt.mlir 24675:7]
      node _perfCnts_20_T_4 = add(perfCnts_20, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24677:29]
      node _perfCnts_20_T_5 = tail(_perfCnts_20_T_4, 1) @[build/NutShell.fir.opt.mlir 24679:29]
      connect perfCnts_20, _perfCnts_20_T_5 @[build/NutShell.fir.opt.mlir 24680:9]
    when perfCntCond_21 : @[build/NutShell.fir.opt.mlir 24682:7]
      node _perfCnts_21_T_4 = add(perfCnts_21, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24684:29]
      node _perfCnts_21_T_5 = tail(_perfCnts_21_T_4, 1) @[build/NutShell.fir.opt.mlir 24686:29]
      connect perfCnts_21, _perfCnts_21_T_5 @[build/NutShell.fir.opt.mlir 24687:9]
    when perfCntCond_22 : @[build/NutShell.fir.opt.mlir 24689:7]
      node _perfCnts_22_T_4 = add(perfCnts_22, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24691:29]
      node _perfCnts_22_T_5 = tail(_perfCnts_22_T_4, 1) @[build/NutShell.fir.opt.mlir 24693:29]
      connect perfCnts_22, _perfCnts_22_T_5 @[build/NutShell.fir.opt.mlir 24694:9]
    when perfCntCond_23 : @[build/NutShell.fir.opt.mlir 24696:7]
      node _perfCnts_23_T_4 = add(perfCnts_23, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24698:29]
      node _perfCnts_23_T_5 = tail(_perfCnts_23_T_4, 1) @[build/NutShell.fir.opt.mlir 24700:29]
      connect perfCnts_23, _perfCnts_23_T_5 @[build/NutShell.fir.opt.mlir 24701:9]
    when perfCntCond_24 : @[build/NutShell.fir.opt.mlir 24703:7]
      node _perfCnts_24_T_4 = add(perfCnts_24, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24705:29]
      node _perfCnts_24_T_5 = tail(_perfCnts_24_T_4, 1) @[build/NutShell.fir.opt.mlir 24707:29]
      connect perfCnts_24, _perfCnts_24_T_5 @[build/NutShell.fir.opt.mlir 24708:9]
    when perfCntCond_25 : @[build/NutShell.fir.opt.mlir 24710:7]
      node _perfCnts_25_T_4 = add(perfCnts_25, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24712:29]
      node _perfCnts_25_T_5 = tail(_perfCnts_25_T_4, 1) @[build/NutShell.fir.opt.mlir 24714:29]
      connect perfCnts_25, _perfCnts_25_T_5 @[build/NutShell.fir.opt.mlir 24715:9]
    when perfCntCond_26 : @[build/NutShell.fir.opt.mlir 24717:7]
      node _perfCnts_26_T_4 = add(perfCnts_26, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24719:29]
      node _perfCnts_26_T_5 = tail(_perfCnts_26_T_4, 1) @[build/NutShell.fir.opt.mlir 24721:29]
      connect perfCnts_26, _perfCnts_26_T_5 @[build/NutShell.fir.opt.mlir 24722:9]
    when perfCntCond_27 : @[build/NutShell.fir.opt.mlir 24724:7]
      node _perfCnts_27_T_4 = add(perfCnts_27, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24726:29]
      node _perfCnts_27_T_5 = tail(_perfCnts_27_T_4, 1) @[build/NutShell.fir.opt.mlir 24728:29]
      connect perfCnts_27, _perfCnts_27_T_5 @[build/NutShell.fir.opt.mlir 24729:9]
    when perfCntCond_28 : @[build/NutShell.fir.opt.mlir 24731:7]
      node _perfCnts_28_T_4 = add(perfCnts_28, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24733:29]
      node _perfCnts_28_T_5 = tail(_perfCnts_28_T_4, 1) @[build/NutShell.fir.opt.mlir 24735:29]
      connect perfCnts_28, _perfCnts_28_T_5 @[build/NutShell.fir.opt.mlir 24736:9]
    when perfCntCond_29 : @[build/NutShell.fir.opt.mlir 24738:7]
      node _perfCnts_29_T_4 = add(perfCnts_29, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24740:29]
      node _perfCnts_29_T_5 = tail(_perfCnts_29_T_4, 1) @[build/NutShell.fir.opt.mlir 24742:29]
      connect perfCnts_29, _perfCnts_29_T_5 @[build/NutShell.fir.opt.mlir 24743:9]
    when perfCntCond_30 : @[build/NutShell.fir.opt.mlir 24745:7]
      node _perfCnts_30_T_4 = add(perfCnts_30, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24747:29]
      node _perfCnts_30_T_5 = tail(_perfCnts_30_T_4, 1) @[build/NutShell.fir.opt.mlir 24749:29]
      connect perfCnts_30, _perfCnts_30_T_5 @[build/NutShell.fir.opt.mlir 24750:9]
    when perfCntCond_31 : @[build/NutShell.fir.opt.mlir 24752:7]
      node _perfCnts_31_T_4 = add(perfCnts_31, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24754:29]
      node _perfCnts_31_T_5 = tail(_perfCnts_31_T_4, 1) @[build/NutShell.fir.opt.mlir 24756:29]
      connect perfCnts_31, _perfCnts_31_T_5 @[build/NutShell.fir.opt.mlir 24757:9]
    when perfCntCond_32 : @[build/NutShell.fir.opt.mlir 24759:7]
      node _perfCnts_32_T_4 = add(perfCnts_32, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24761:29]
      node _perfCnts_32_T_5 = tail(_perfCnts_32_T_4, 1) @[build/NutShell.fir.opt.mlir 24763:29]
      connect perfCnts_32, _perfCnts_32_T_5 @[build/NutShell.fir.opt.mlir 24764:9]
    when perfCntCond_33 : @[build/NutShell.fir.opt.mlir 24766:7]
      node _perfCnts_33_T_4 = add(perfCnts_33, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24768:29]
      node _perfCnts_33_T_5 = tail(_perfCnts_33_T_4, 1) @[build/NutShell.fir.opt.mlir 24770:29]
      connect perfCnts_33, _perfCnts_33_T_5 @[build/NutShell.fir.opt.mlir 24771:9]
    when perfCntCond_34 : @[build/NutShell.fir.opt.mlir 24773:7]
      node _perfCnts_34_T_4 = add(perfCnts_34, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24775:29]
      node _perfCnts_34_T_5 = tail(_perfCnts_34_T_4, 1) @[build/NutShell.fir.opt.mlir 24777:29]
      connect perfCnts_34, _perfCnts_34_T_5 @[build/NutShell.fir.opt.mlir 24778:9]
    when perfCntCond_35 : @[build/NutShell.fir.opt.mlir 24780:7]
      node _perfCnts_35_T_4 = add(perfCnts_35, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24782:29]
      node _perfCnts_35_T_5 = tail(_perfCnts_35_T_4, 1) @[build/NutShell.fir.opt.mlir 24784:29]
      connect perfCnts_35, _perfCnts_35_T_5 @[build/NutShell.fir.opt.mlir 24785:9]
    when perfCntCond_36 : @[build/NutShell.fir.opt.mlir 24787:7]
      node _perfCnts_36_T_4 = add(perfCnts_36, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24789:29]
      node _perfCnts_36_T_5 = tail(_perfCnts_36_T_4, 1) @[build/NutShell.fir.opt.mlir 24791:29]
      connect perfCnts_36, _perfCnts_36_T_5 @[build/NutShell.fir.opt.mlir 24792:9]
    when perfCntCond_37 : @[build/NutShell.fir.opt.mlir 24794:7]
      node _perfCnts_37_T_4 = add(perfCnts_37, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24796:29]
      node _perfCnts_37_T_5 = tail(_perfCnts_37_T_4, 1) @[build/NutShell.fir.opt.mlir 24798:29]
      connect perfCnts_37, _perfCnts_37_T_5 @[build/NutShell.fir.opt.mlir 24799:9]
    when perfCntCond_38 : @[build/NutShell.fir.opt.mlir 24801:7]
      node _perfCnts_38_T_4 = add(perfCnts_38, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24803:29]
      node _perfCnts_38_T_5 = tail(_perfCnts_38_T_4, 1) @[build/NutShell.fir.opt.mlir 24805:29]
      connect perfCnts_38, _perfCnts_38_T_5 @[build/NutShell.fir.opt.mlir 24806:9]
    when perfCntCond_39 : @[build/NutShell.fir.opt.mlir 24808:7]
      node _perfCnts_39_T_4 = add(perfCnts_39, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24810:29]
      node _perfCnts_39_T_5 = tail(_perfCnts_39_T_4, 1) @[build/NutShell.fir.opt.mlir 24812:29]
      connect perfCnts_39, _perfCnts_39_T_5 @[build/NutShell.fir.opt.mlir 24813:9]
    when perfCntCond_40 : @[build/NutShell.fir.opt.mlir 24815:7]
      node _perfCnts_40_T_4 = add(perfCnts_40, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24817:29]
      node _perfCnts_40_T_5 = tail(_perfCnts_40_T_4, 1) @[build/NutShell.fir.opt.mlir 24819:29]
      connect perfCnts_40, _perfCnts_40_T_5 @[build/NutShell.fir.opt.mlir 24820:9]
    when perfCntCond_41 : @[build/NutShell.fir.opt.mlir 24822:7]
      node _perfCnts_41_T_4 = add(perfCnts_41, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24824:29]
      node _perfCnts_41_T_5 = tail(_perfCnts_41_T_4, 1) @[build/NutShell.fir.opt.mlir 24826:29]
      connect perfCnts_41, _perfCnts_41_T_5 @[build/NutShell.fir.opt.mlir 24827:9]
    when perfCntCond_42 : @[build/NutShell.fir.opt.mlir 24829:7]
      node _perfCnts_42_T_4 = add(perfCnts_42, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24831:29]
      node _perfCnts_42_T_5 = tail(_perfCnts_42_T_4, 1) @[build/NutShell.fir.opt.mlir 24833:29]
      connect perfCnts_42, _perfCnts_42_T_5 @[build/NutShell.fir.opt.mlir 24834:9]
    when perfCntCond_43 : @[build/NutShell.fir.opt.mlir 24836:7]
      node _perfCnts_43_T_4 = add(perfCnts_43, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24838:29]
      node _perfCnts_43_T_5 = tail(_perfCnts_43_T_4, 1) @[build/NutShell.fir.opt.mlir 24840:29]
      connect perfCnts_43, _perfCnts_43_T_5 @[build/NutShell.fir.opt.mlir 24841:9]
    when perfCntCond_44 : @[build/NutShell.fir.opt.mlir 24843:7]
      node _perfCnts_44_T_4 = add(perfCnts_44, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24845:29]
      node _perfCnts_44_T_5 = tail(_perfCnts_44_T_4, 1) @[build/NutShell.fir.opt.mlir 24847:29]
      connect perfCnts_44, _perfCnts_44_T_5 @[build/NutShell.fir.opt.mlir 24848:9]
    when perfCntCond_45 : @[build/NutShell.fir.opt.mlir 24850:7]
      node _perfCnts_45_T_4 = add(perfCnts_45, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24852:29]
      node _perfCnts_45_T_5 = tail(_perfCnts_45_T_4, 1) @[build/NutShell.fir.opt.mlir 24854:29]
      connect perfCnts_45, _perfCnts_45_T_5 @[build/NutShell.fir.opt.mlir 24855:9]
    when perfCntCond_46 : @[build/NutShell.fir.opt.mlir 24857:7]
      node _perfCnts_46_T_4 = add(perfCnts_46, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24859:29]
      node _perfCnts_46_T_5 = tail(_perfCnts_46_T_4, 1) @[build/NutShell.fir.opt.mlir 24861:29]
      connect perfCnts_46, _perfCnts_46_T_5 @[build/NutShell.fir.opt.mlir 24862:9]
    when perfCntCond_47 : @[build/NutShell.fir.opt.mlir 24864:7]
      node _perfCnts_47_T_4 = add(perfCnts_47, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24866:29]
      node _perfCnts_47_T_5 = tail(_perfCnts_47_T_4, 1) @[build/NutShell.fir.opt.mlir 24868:29]
      connect perfCnts_47, _perfCnts_47_T_5 @[build/NutShell.fir.opt.mlir 24869:9]
    when perfCntCond_48 : @[build/NutShell.fir.opt.mlir 24871:7]
      node _perfCnts_48_T_4 = add(perfCnts_48, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24873:29]
      node _perfCnts_48_T_5 = tail(_perfCnts_48_T_4, 1) @[build/NutShell.fir.opt.mlir 24875:29]
      connect perfCnts_48, _perfCnts_48_T_5 @[build/NutShell.fir.opt.mlir 24876:9]
    when perfCntCond_49 : @[build/NutShell.fir.opt.mlir 24878:7]
      node _perfCnts_49_T_4 = add(perfCnts_49, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24880:29]
      node _perfCnts_49_T_5 = tail(_perfCnts_49_T_4, 1) @[build/NutShell.fir.opt.mlir 24882:29]
      connect perfCnts_49, _perfCnts_49_T_5 @[build/NutShell.fir.opt.mlir 24883:9]
    when perfCntCond_50 : @[build/NutShell.fir.opt.mlir 24885:7]
      node _perfCnts_50_T_4 = add(perfCnts_50, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24887:29]
      node _perfCnts_50_T_5 = tail(_perfCnts_50_T_4, 1) @[build/NutShell.fir.opt.mlir 24889:29]
      connect perfCnts_50, _perfCnts_50_T_5 @[build/NutShell.fir.opt.mlir 24890:9]
    when perfCntCond_51 : @[build/NutShell.fir.opt.mlir 24892:7]
      node _perfCnts_51_T_4 = add(perfCnts_51, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24894:29]
      node _perfCnts_51_T_5 = tail(_perfCnts_51_T_4, 1) @[build/NutShell.fir.opt.mlir 24896:29]
      connect perfCnts_51, _perfCnts_51_T_5 @[build/NutShell.fir.opt.mlir 24897:9]
    when perfCntCond_52 : @[build/NutShell.fir.opt.mlir 24899:7]
      node _perfCnts_52_T_4 = add(perfCnts_52, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24901:29]
      node _perfCnts_52_T_5 = tail(_perfCnts_52_T_4, 1) @[build/NutShell.fir.opt.mlir 24903:29]
      connect perfCnts_52, _perfCnts_52_T_5 @[build/NutShell.fir.opt.mlir 24904:9]
    when perfCntCond_53 : @[build/NutShell.fir.opt.mlir 24906:7]
      node _perfCnts_53_T_4 = add(perfCnts_53, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24908:29]
      node _perfCnts_53_T_5 = tail(_perfCnts_53_T_4, 1) @[build/NutShell.fir.opt.mlir 24910:29]
      connect perfCnts_53, _perfCnts_53_T_5 @[build/NutShell.fir.opt.mlir 24911:9]
    when perfCntCond_54 : @[build/NutShell.fir.opt.mlir 24913:7]
      node _perfCnts_54_T_4 = add(perfCnts_54, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24915:29]
      node _perfCnts_54_T_5 = tail(_perfCnts_54_T_4, 1) @[build/NutShell.fir.opt.mlir 24917:29]
      connect perfCnts_54, _perfCnts_54_T_5 @[build/NutShell.fir.opt.mlir 24918:9]
    when perfCntCond_55 : @[build/NutShell.fir.opt.mlir 24920:7]
      node _perfCnts_55_T_4 = add(perfCnts_55, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24922:29]
      node _perfCnts_55_T_5 = tail(_perfCnts_55_T_4, 1) @[build/NutShell.fir.opt.mlir 24924:29]
      connect perfCnts_55, _perfCnts_55_T_5 @[build/NutShell.fir.opt.mlir 24925:9]
    when perfCntCond_56 : @[build/NutShell.fir.opt.mlir 24927:7]
      node _perfCnts_56_T_4 = add(perfCnts_56, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24929:29]
      node _perfCnts_56_T_5 = tail(_perfCnts_56_T_4, 1) @[build/NutShell.fir.opt.mlir 24931:29]
      connect perfCnts_56, _perfCnts_56_T_5 @[build/NutShell.fir.opt.mlir 24932:9]
    when perfCntCond_57 : @[build/NutShell.fir.opt.mlir 24934:7]
      node _perfCnts_57_T_4 = add(perfCnts_57, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24936:29]
      node _perfCnts_57_T_5 = tail(_perfCnts_57_T_4, 1) @[build/NutShell.fir.opt.mlir 24938:29]
      connect perfCnts_57, _perfCnts_57_T_5 @[build/NutShell.fir.opt.mlir 24939:9]
    when perfCntCond_58 : @[build/NutShell.fir.opt.mlir 24941:7]
      node _perfCnts_58_T_4 = add(perfCnts_58, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24943:29]
      node _perfCnts_58_T_5 = tail(_perfCnts_58_T_4, 1) @[build/NutShell.fir.opt.mlir 24945:29]
      connect perfCnts_58, _perfCnts_58_T_5 @[build/NutShell.fir.opt.mlir 24946:9]
    when perfCntCond_59 : @[build/NutShell.fir.opt.mlir 24948:7]
      node _perfCnts_59_T_4 = add(perfCnts_59, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24950:29]
      node _perfCnts_59_T_5 = tail(_perfCnts_59_T_4, 1) @[build/NutShell.fir.opt.mlir 24952:29]
      connect perfCnts_59, _perfCnts_59_T_5 @[build/NutShell.fir.opt.mlir 24953:9]
    when perfCntCond_60 : @[build/NutShell.fir.opt.mlir 24955:7]
      node _perfCnts_60_T_4 = add(perfCnts_60, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24957:29]
      node _perfCnts_60_T_5 = tail(_perfCnts_60_T_4, 1) @[build/NutShell.fir.opt.mlir 24959:29]
      connect perfCnts_60, _perfCnts_60_T_5 @[build/NutShell.fir.opt.mlir 24960:9]
    when perfCntCond_61 : @[build/NutShell.fir.opt.mlir 24962:7]
      node _perfCnts_61_T_4 = add(perfCnts_61, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24964:29]
      node _perfCnts_61_T_5 = tail(_perfCnts_61_T_4, 1) @[build/NutShell.fir.opt.mlir 24966:29]
      connect perfCnts_61, _perfCnts_61_T_5 @[build/NutShell.fir.opt.mlir 24967:9]
    when perfCntCond_62 : @[build/NutShell.fir.opt.mlir 24969:7]
      node _perfCnts_62_T_4 = add(perfCnts_62, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24971:29]
      node _perfCnts_62_T_5 = tail(_perfCnts_62_T_4, 1) @[build/NutShell.fir.opt.mlir 24973:29]
      connect perfCnts_62, _perfCnts_62_T_5 @[build/NutShell.fir.opt.mlir 24974:9]
    when perfCntCond_63 : @[build/NutShell.fir.opt.mlir 24976:7]
      node _perfCnts_63_T_4 = add(perfCnts_63, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24978:29]
      node _perfCnts_63_T_5 = tail(_perfCnts_63_T_4, 1) @[build/NutShell.fir.opt.mlir 24980:29]
      connect perfCnts_63, _perfCnts_63_T_5 @[build/NutShell.fir.opt.mlir 24981:9]
    when perfCntCond_64 : @[build/NutShell.fir.opt.mlir 24983:7]
      node _perfCnts_64_T_4 = add(perfCnts_64, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24985:29]
      node _perfCnts_64_T_5 = tail(_perfCnts_64_T_4, 1) @[build/NutShell.fir.opt.mlir 24987:29]
      connect perfCnts_64, _perfCnts_64_T_5 @[build/NutShell.fir.opt.mlir 24988:9]
    when perfCntCond_65 : @[build/NutShell.fir.opt.mlir 24990:7]
      node _perfCnts_65_T_4 = add(perfCnts_65, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24992:29]
      node _perfCnts_65_T_5 = tail(_perfCnts_65_T_4, 1) @[build/NutShell.fir.opt.mlir 24994:29]
      connect perfCnts_65, _perfCnts_65_T_5 @[build/NutShell.fir.opt.mlir 24995:9]
    when perfCntCond_66 : @[build/NutShell.fir.opt.mlir 24997:7]
      node _perfCnts_66_T_4 = add(perfCnts_66, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 24999:29]
      node _perfCnts_66_T_5 = tail(_perfCnts_66_T_4, 1) @[build/NutShell.fir.opt.mlir 25001:29]
      connect perfCnts_66, _perfCnts_66_T_5 @[build/NutShell.fir.opt.mlir 25002:9]
    when perfCntCond_67 : @[build/NutShell.fir.opt.mlir 25004:7]
      node _perfCnts_67_T_4 = add(perfCnts_67, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25006:29]
      node _perfCnts_67_T_5 = tail(_perfCnts_67_T_4, 1) @[build/NutShell.fir.opt.mlir 25008:29]
      connect perfCnts_67, _perfCnts_67_T_5 @[build/NutShell.fir.opt.mlir 25009:9]
    when perfCntCond_68 : @[build/NutShell.fir.opt.mlir 25011:7]
      node _perfCnts_68_T_4 = add(perfCnts_68, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25013:29]
      node _perfCnts_68_T_5 = tail(_perfCnts_68_T_4, 1) @[build/NutShell.fir.opt.mlir 25015:29]
      connect perfCnts_68, _perfCnts_68_T_5 @[build/NutShell.fir.opt.mlir 25016:9]
    when perfCntCond_69 : @[build/NutShell.fir.opt.mlir 25018:7]
      node _perfCnts_69_T_4 = add(perfCnts_69, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25020:29]
      node _perfCnts_69_T_5 = tail(_perfCnts_69_T_4, 1) @[build/NutShell.fir.opt.mlir 25022:29]
      connect perfCnts_69, _perfCnts_69_T_5 @[build/NutShell.fir.opt.mlir 25023:9]
    when perfCntCond_70 : @[build/NutShell.fir.opt.mlir 25025:7]
      node _perfCnts_70_T_4 = add(perfCnts_70, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25027:29]
      node _perfCnts_70_T_5 = tail(_perfCnts_70_T_4, 1) @[build/NutShell.fir.opt.mlir 25029:29]
      connect perfCnts_70, _perfCnts_70_T_5 @[build/NutShell.fir.opt.mlir 25030:9]
    when perfCntCond_71 : @[build/NutShell.fir.opt.mlir 25032:7]
      node _perfCnts_71_T_4 = add(perfCnts_71, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25034:29]
      node _perfCnts_71_T_5 = tail(_perfCnts_71_T_4, 1) @[build/NutShell.fir.opt.mlir 25036:29]
      connect perfCnts_71, _perfCnts_71_T_5 @[build/NutShell.fir.opt.mlir 25037:9]
    when perfCntCond_72 : @[build/NutShell.fir.opt.mlir 25039:7]
      node _perfCnts_72_T_4 = add(perfCnts_72, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25041:29]
      node _perfCnts_72_T_5 = tail(_perfCnts_72_T_4, 1) @[build/NutShell.fir.opt.mlir 25043:29]
      connect perfCnts_72, _perfCnts_72_T_5 @[build/NutShell.fir.opt.mlir 25044:9]
    when perfCntCond_73 : @[build/NutShell.fir.opt.mlir 25046:7]
      node _perfCnts_73_T_4 = add(perfCnts_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25048:29]
      node _perfCnts_73_T_5 = tail(_perfCnts_73_T_4, 1) @[build/NutShell.fir.opt.mlir 25050:29]
      connect perfCnts_73, _perfCnts_73_T_5 @[build/NutShell.fir.opt.mlir 25051:9]
    when perfCntCond_74 : @[build/NutShell.fir.opt.mlir 25053:7]
      node _perfCnts_74_T_4 = add(perfCnts_74, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25055:29]
      node _perfCnts_74_T_5 = tail(_perfCnts_74_T_4, 1) @[build/NutShell.fir.opt.mlir 25057:29]
      connect perfCnts_74, _perfCnts_74_T_5 @[build/NutShell.fir.opt.mlir 25058:9]
    when perfCntCond_75 : @[build/NutShell.fir.opt.mlir 25060:7]
      node _perfCnts_75_T_4 = add(perfCnts_75, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25062:29]
      node _perfCnts_75_T_5 = tail(_perfCnts_75_T_4, 1) @[build/NutShell.fir.opt.mlir 25064:29]
      connect perfCnts_75, _perfCnts_75_T_5 @[build/NutShell.fir.opt.mlir 25065:9]
    when perfCntCond_76 : @[build/NutShell.fir.opt.mlir 25067:7]
      node _perfCnts_76_T_4 = add(perfCnts_76, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25069:29]
      node _perfCnts_76_T_5 = tail(_perfCnts_76_T_4, 1) @[build/NutShell.fir.opt.mlir 25071:29]
      connect perfCnts_76, _perfCnts_76_T_5 @[build/NutShell.fir.opt.mlir 25072:9]
    when perfCntCond_77 : @[build/NutShell.fir.opt.mlir 25074:7]
      node _perfCnts_77_T_4 = add(perfCnts_77, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25076:29]
      node _perfCnts_77_T_5 = tail(_perfCnts_77_T_4, 1) @[build/NutShell.fir.opt.mlir 25078:29]
      connect perfCnts_77, _perfCnts_77_T_5 @[build/NutShell.fir.opt.mlir 25079:9]
    when perfCntCond_78 : @[build/NutShell.fir.opt.mlir 25081:7]
      node _perfCnts_78_T_4 = add(perfCnts_78, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25083:29]
      node _perfCnts_78_T_5 = tail(_perfCnts_78_T_4, 1) @[build/NutShell.fir.opt.mlir 25085:29]
      connect perfCnts_78, _perfCnts_78_T_5 @[build/NutShell.fir.opt.mlir 25086:9]
    when perfCntCond_79 : @[build/NutShell.fir.opt.mlir 25088:7]
      node _perfCnts_79_T_4 = add(perfCnts_79, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25090:29]
      node _perfCnts_79_T_5 = tail(_perfCnts_79_T_4, 1) @[build/NutShell.fir.opt.mlir 25092:29]
      connect perfCnts_79, _perfCnts_79_T_5 @[build/NutShell.fir.opt.mlir 25093:9]
    when perfCntCond_80 : @[build/NutShell.fir.opt.mlir 25095:7]
      node _perfCnts_80_T_4 = add(perfCnts_80, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25097:29]
      node _perfCnts_80_T_5 = tail(_perfCnts_80_T_4, 1) @[build/NutShell.fir.opt.mlir 25099:29]
      connect perfCnts_80, _perfCnts_80_T_5 @[build/NutShell.fir.opt.mlir 25100:9]
    when perfCntCond_81 : @[build/NutShell.fir.opt.mlir 25102:7]
      node _perfCnts_81_T_4 = add(perfCnts_81, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25104:29]
      node _perfCnts_81_T_5 = tail(_perfCnts_81_T_4, 1) @[build/NutShell.fir.opt.mlir 25106:29]
      connect perfCnts_81, _perfCnts_81_T_5 @[build/NutShell.fir.opt.mlir 25107:9]
    when perfCntCond_82 : @[build/NutShell.fir.opt.mlir 25109:7]
      node _perfCnts_82_T_4 = add(perfCnts_82, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25111:29]
      node _perfCnts_82_T_5 = tail(_perfCnts_82_T_4, 1) @[build/NutShell.fir.opt.mlir 25113:29]
      connect perfCnts_82, _perfCnts_82_T_5 @[build/NutShell.fir.opt.mlir 25114:9]
    when perfCntCond_83 : @[build/NutShell.fir.opt.mlir 25116:7]
      node _perfCnts_83_T_4 = add(perfCnts_83, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25118:29]
      node _perfCnts_83_T_5 = tail(_perfCnts_83_T_4, 1) @[build/NutShell.fir.opt.mlir 25120:29]
      connect perfCnts_83, _perfCnts_83_T_5 @[build/NutShell.fir.opt.mlir 25121:9]
    when perfCntCond_84 : @[build/NutShell.fir.opt.mlir 25123:7]
      node _perfCnts_84_T_4 = add(perfCnts_84, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25125:29]
      node _perfCnts_84_T_5 = tail(_perfCnts_84_T_4, 1) @[build/NutShell.fir.opt.mlir 25127:29]
      connect perfCnts_84, _perfCnts_84_T_5 @[build/NutShell.fir.opt.mlir 25128:9]
    when perfCntCond_85 : @[build/NutShell.fir.opt.mlir 25130:7]
      node _perfCnts_85_T_4 = add(perfCnts_85, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25132:29]
      node _perfCnts_85_T_5 = tail(_perfCnts_85_T_4, 1) @[build/NutShell.fir.opt.mlir 25134:29]
      connect perfCnts_85, _perfCnts_85_T_5 @[build/NutShell.fir.opt.mlir 25135:9]
    when perfCntCond_86 : @[build/NutShell.fir.opt.mlir 25137:7]
      node _perfCnts_86_T_4 = add(perfCnts_86, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25139:29]
      node _perfCnts_86_T_5 = tail(_perfCnts_86_T_4, 1) @[build/NutShell.fir.opt.mlir 25141:29]
      connect perfCnts_86, _perfCnts_86_T_5 @[build/NutShell.fir.opt.mlir 25142:9]
    when perfCntCond_87 : @[build/NutShell.fir.opt.mlir 25144:7]
      node _perfCnts_87_T_4 = add(perfCnts_87, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25146:29]
      node _perfCnts_87_T_5 = tail(_perfCnts_87_T_4, 1) @[build/NutShell.fir.opt.mlir 25148:29]
      connect perfCnts_87, _perfCnts_87_T_5 @[build/NutShell.fir.opt.mlir 25149:9]
    when perfCntCond_88 : @[build/NutShell.fir.opt.mlir 25151:7]
      node _perfCnts_88_T_4 = add(perfCnts_88, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25153:29]
      node _perfCnts_88_T_5 = tail(_perfCnts_88_T_4, 1) @[build/NutShell.fir.opt.mlir 25155:29]
      connect perfCnts_88, _perfCnts_88_T_5 @[build/NutShell.fir.opt.mlir 25156:9]
    when perfCntCond_89 : @[build/NutShell.fir.opt.mlir 25158:7]
      node _perfCnts_89_T_4 = add(perfCnts_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25160:29]
      node _perfCnts_89_T_5 = tail(_perfCnts_89_T_4, 1) @[build/NutShell.fir.opt.mlir 25162:29]
      connect perfCnts_89, _perfCnts_89_T_5 @[build/NutShell.fir.opt.mlir 25163:9]
    when perfCntCond_90 : @[build/NutShell.fir.opt.mlir 25165:7]
      node _perfCnts_90_T_4 = add(perfCnts_90, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25167:29]
      node _perfCnts_90_T_5 = tail(_perfCnts_90_T_4, 1) @[build/NutShell.fir.opt.mlir 25169:29]
      connect perfCnts_90, _perfCnts_90_T_5 @[build/NutShell.fir.opt.mlir 25170:9]
    when perfCntCond_91 : @[build/NutShell.fir.opt.mlir 25172:7]
      node _perfCnts_91_T_4 = add(perfCnts_91, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25174:29]
      node _perfCnts_91_T_5 = tail(_perfCnts_91_T_4, 1) @[build/NutShell.fir.opt.mlir 25176:29]
      connect perfCnts_91, _perfCnts_91_T_5 @[build/NutShell.fir.opt.mlir 25177:9]
    when perfCntCond_92 : @[build/NutShell.fir.opt.mlir 25179:7]
      node _perfCnts_92_T_4 = add(perfCnts_92, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25181:29]
      node _perfCnts_92_T_5 = tail(_perfCnts_92_T_4, 1) @[build/NutShell.fir.opt.mlir 25183:29]
      connect perfCnts_92, _perfCnts_92_T_5 @[build/NutShell.fir.opt.mlir 25184:9]
    when perfCntCond_93 : @[build/NutShell.fir.opt.mlir 25186:7]
      node _perfCnts_93_T_4 = add(perfCnts_93, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25188:29]
      node _perfCnts_93_T_5 = tail(_perfCnts_93_T_4, 1) @[build/NutShell.fir.opt.mlir 25190:29]
      connect perfCnts_93, _perfCnts_93_T_5 @[build/NutShell.fir.opt.mlir 25191:9]
    when perfCntCond_94 : @[build/NutShell.fir.opt.mlir 25193:7]
      node _perfCnts_94_T_4 = add(perfCnts_94, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25195:29]
      node _perfCnts_94_T_5 = tail(_perfCnts_94_T_4, 1) @[build/NutShell.fir.opt.mlir 25197:29]
      connect perfCnts_94, _perfCnts_94_T_5 @[build/NutShell.fir.opt.mlir 25198:9]
    when perfCntCond_95 : @[build/NutShell.fir.opt.mlir 25200:7]
      node _perfCnts_95_T_4 = add(perfCnts_95, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25202:29]
      node _perfCnts_95_T_5 = tail(_perfCnts_95_T_4, 1) @[build/NutShell.fir.opt.mlir 25204:29]
      connect perfCnts_95, _perfCnts_95_T_5 @[build/NutShell.fir.opt.mlir 25205:9]
    when perfCntCond_96 : @[build/NutShell.fir.opt.mlir 25207:7]
      node _perfCnts_96_T_4 = add(perfCnts_96, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25209:29]
      node _perfCnts_96_T_5 = tail(_perfCnts_96_T_4, 1) @[build/NutShell.fir.opt.mlir 25211:29]
      connect perfCnts_96, _perfCnts_96_T_5 @[build/NutShell.fir.opt.mlir 25212:9]
    when perfCntCond_97 : @[build/NutShell.fir.opt.mlir 25214:7]
      node _perfCnts_97_T_4 = add(perfCnts_97, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25216:29]
      node _perfCnts_97_T_5 = tail(_perfCnts_97_T_4, 1) @[build/NutShell.fir.opt.mlir 25218:29]
      connect perfCnts_97, _perfCnts_97_T_5 @[build/NutShell.fir.opt.mlir 25219:9]
    when perfCntCond_98 : @[build/NutShell.fir.opt.mlir 25221:7]
      node _perfCnts_98_T_4 = add(perfCnts_98, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25223:29]
      node _perfCnts_98_T_5 = tail(_perfCnts_98_T_4, 1) @[build/NutShell.fir.opt.mlir 25225:29]
      connect perfCnts_98, _perfCnts_98_T_5 @[build/NutShell.fir.opt.mlir 25226:9]
    when perfCntCond_99 : @[build/NutShell.fir.opt.mlir 25228:7]
      node _perfCnts_99_T_4 = add(perfCnts_99, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25230:29]
      node _perfCnts_99_T_5 = tail(_perfCnts_99_T_4, 1) @[build/NutShell.fir.opt.mlir 25232:29]
      connect perfCnts_99, _perfCnts_99_T_5 @[build/NutShell.fir.opt.mlir 25233:9]
    when perfCntCond_100 : @[build/NutShell.fir.opt.mlir 25235:7]
      node _perfCnts_100_T_4 = add(perfCnts_100, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25237:30]
      node _perfCnts_100_T_5 = tail(_perfCnts_100_T_4, 1) @[build/NutShell.fir.opt.mlir 25239:30]
      connect perfCnts_100, _perfCnts_100_T_5 @[build/NutShell.fir.opt.mlir 25240:9]
    when perfCntCond_101 : @[build/NutShell.fir.opt.mlir 25242:7]
      node _perfCnts_101_T_4 = add(perfCnts_101, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25244:30]
      node _perfCnts_101_T_5 = tail(_perfCnts_101_T_4, 1) @[build/NutShell.fir.opt.mlir 25246:30]
      connect perfCnts_101, _perfCnts_101_T_5 @[build/NutShell.fir.opt.mlir 25247:9]
    when perfCntCond_102 : @[build/NutShell.fir.opt.mlir 25249:7]
      node _perfCnts_102_T_4 = add(perfCnts_102, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25251:30]
      node _perfCnts_102_T_5 = tail(_perfCnts_102_T_4, 1) @[build/NutShell.fir.opt.mlir 25253:30]
      connect perfCnts_102, _perfCnts_102_T_5 @[build/NutShell.fir.opt.mlir 25254:9]
    when perfCntCond_103 : @[build/NutShell.fir.opt.mlir 25256:7]
      node _perfCnts_103_T_4 = add(perfCnts_103, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25258:30]
      node _perfCnts_103_T_5 = tail(_perfCnts_103_T_4, 1) @[build/NutShell.fir.opt.mlir 25260:30]
      connect perfCnts_103, _perfCnts_103_T_5 @[build/NutShell.fir.opt.mlir 25261:9]
    when perfCntCond_104 : @[build/NutShell.fir.opt.mlir 25263:7]
      node _perfCnts_104_T_4 = add(perfCnts_104, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25265:30]
      node _perfCnts_104_T_5 = tail(_perfCnts_104_T_4, 1) @[build/NutShell.fir.opt.mlir 25267:30]
      connect perfCnts_104, _perfCnts_104_T_5 @[build/NutShell.fir.opt.mlir 25268:9]
    when perfCntCond_105 : @[build/NutShell.fir.opt.mlir 25270:7]
      node _perfCnts_105_T_4 = add(perfCnts_105, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25272:30]
      node _perfCnts_105_T_5 = tail(_perfCnts_105_T_4, 1) @[build/NutShell.fir.opt.mlir 25274:30]
      connect perfCnts_105, _perfCnts_105_T_5 @[build/NutShell.fir.opt.mlir 25275:9]
    when perfCntCond_106 : @[build/NutShell.fir.opt.mlir 25277:7]
      node _perfCnts_106_T_4 = add(perfCnts_106, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25279:30]
      node _perfCnts_106_T_5 = tail(_perfCnts_106_T_4, 1) @[build/NutShell.fir.opt.mlir 25281:30]
      connect perfCnts_106, _perfCnts_106_T_5 @[build/NutShell.fir.opt.mlir 25282:9]
    when perfCntCond_107 : @[build/NutShell.fir.opt.mlir 25284:7]
      node _perfCnts_107_T_4 = add(perfCnts_107, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25286:30]
      node _perfCnts_107_T_5 = tail(_perfCnts_107_T_4, 1) @[build/NutShell.fir.opt.mlir 25288:30]
      connect perfCnts_107, _perfCnts_107_T_5 @[build/NutShell.fir.opt.mlir 25289:9]
    when perfCntCond_108 : @[build/NutShell.fir.opt.mlir 25291:7]
      node _perfCnts_108_T_4 = add(perfCnts_108, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25293:30]
      node _perfCnts_108_T_5 = tail(_perfCnts_108_T_4, 1) @[build/NutShell.fir.opt.mlir 25295:30]
      connect perfCnts_108, _perfCnts_108_T_5 @[build/NutShell.fir.opt.mlir 25296:9]
    when perfCntCond_109 : @[build/NutShell.fir.opt.mlir 25298:7]
      node _perfCnts_109_T_4 = add(perfCnts_109, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25300:30]
      node _perfCnts_109_T_5 = tail(_perfCnts_109_T_4, 1) @[build/NutShell.fir.opt.mlir 25302:30]
      connect perfCnts_109, _perfCnts_109_T_5 @[build/NutShell.fir.opt.mlir 25303:9]
    when perfCntCond_110 : @[build/NutShell.fir.opt.mlir 25305:7]
      node _perfCnts_110_T_4 = add(perfCnts_110, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25307:30]
      node _perfCnts_110_T_5 = tail(_perfCnts_110_T_4, 1) @[build/NutShell.fir.opt.mlir 25309:30]
      connect perfCnts_110, _perfCnts_110_T_5 @[build/NutShell.fir.opt.mlir 25310:9]
    when perfCntCond_111 : @[build/NutShell.fir.opt.mlir 25312:7]
      node _perfCnts_111_T_4 = add(perfCnts_111, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25314:30]
      node _perfCnts_111_T_5 = tail(_perfCnts_111_T_4, 1) @[build/NutShell.fir.opt.mlir 25316:30]
      connect perfCnts_111, _perfCnts_111_T_5 @[build/NutShell.fir.opt.mlir 25317:9]
    when perfCntCond_112 : @[build/NutShell.fir.opt.mlir 25319:7]
      node _perfCnts_112_T_4 = add(perfCnts_112, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25321:30]
      node _perfCnts_112_T_5 = tail(_perfCnts_112_T_4, 1) @[build/NutShell.fir.opt.mlir 25323:30]
      connect perfCnts_112, _perfCnts_112_T_5 @[build/NutShell.fir.opt.mlir 25324:9]
    when perfCntCond_113 : @[build/NutShell.fir.opt.mlir 25326:7]
      node _perfCnts_113_T_4 = add(perfCnts_113, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25328:30]
      node _perfCnts_113_T_5 = tail(_perfCnts_113_T_4, 1) @[build/NutShell.fir.opt.mlir 25330:30]
      connect perfCnts_113, _perfCnts_113_T_5 @[build/NutShell.fir.opt.mlir 25331:9]
    when perfCntCond_114 : @[build/NutShell.fir.opt.mlir 25333:7]
      node _perfCnts_114_T_4 = add(perfCnts_114, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25335:30]
      node _perfCnts_114_T_5 = tail(_perfCnts_114_T_4, 1) @[build/NutShell.fir.opt.mlir 25337:30]
      connect perfCnts_114, _perfCnts_114_T_5 @[build/NutShell.fir.opt.mlir 25338:9]
    when perfCntCond_115 : @[build/NutShell.fir.opt.mlir 25340:7]
      node _perfCnts_115_T_4 = add(perfCnts_115, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25342:30]
      node _perfCnts_115_T_5 = tail(_perfCnts_115_T_4, 1) @[build/NutShell.fir.opt.mlir 25344:30]
      connect perfCnts_115, _perfCnts_115_T_5 @[build/NutShell.fir.opt.mlir 25345:9]
    when perfCntCond_116 : @[build/NutShell.fir.opt.mlir 25347:7]
      node _perfCnts_116_T_4 = add(perfCnts_116, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25349:30]
      node _perfCnts_116_T_5 = tail(_perfCnts_116_T_4, 1) @[build/NutShell.fir.opt.mlir 25351:30]
      connect perfCnts_116, _perfCnts_116_T_5 @[build/NutShell.fir.opt.mlir 25352:9]
    when perfCntCond_117 : @[build/NutShell.fir.opt.mlir 25354:7]
      node _perfCnts_117_T_4 = add(perfCnts_117, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25356:30]
      node _perfCnts_117_T_5 = tail(_perfCnts_117_T_4, 1) @[build/NutShell.fir.opt.mlir 25358:30]
      connect perfCnts_117, _perfCnts_117_T_5 @[build/NutShell.fir.opt.mlir 25359:9]
    when perfCntCond_118 : @[build/NutShell.fir.opt.mlir 25361:7]
      node _perfCnts_118_T_4 = add(perfCnts_118, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25363:30]
      node _perfCnts_118_T_5 = tail(_perfCnts_118_T_4, 1) @[build/NutShell.fir.opt.mlir 25365:30]
      connect perfCnts_118, _perfCnts_118_T_5 @[build/NutShell.fir.opt.mlir 25366:9]
    when perfCntCond_119 : @[build/NutShell.fir.opt.mlir 25368:7]
      node _perfCnts_119_T_4 = add(perfCnts_119, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25370:30]
      node _perfCnts_119_T_5 = tail(_perfCnts_119_T_4, 1) @[build/NutShell.fir.opt.mlir 25372:30]
      connect perfCnts_119, _perfCnts_119_T_5 @[build/NutShell.fir.opt.mlir 25373:9]
    when perfCntCond_120 : @[build/NutShell.fir.opt.mlir 25375:7]
      node _perfCnts_120_T_4 = add(perfCnts_120, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25377:30]
      node _perfCnts_120_T_5 = tail(_perfCnts_120_T_4, 1) @[build/NutShell.fir.opt.mlir 25379:30]
      connect perfCnts_120, _perfCnts_120_T_5 @[build/NutShell.fir.opt.mlir 25380:9]
    when perfCntCond_121 : @[build/NutShell.fir.opt.mlir 25382:7]
      node _perfCnts_121_T_4 = add(perfCnts_121, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25384:30]
      node _perfCnts_121_T_5 = tail(_perfCnts_121_T_4, 1) @[build/NutShell.fir.opt.mlir 25386:30]
      connect perfCnts_121, _perfCnts_121_T_5 @[build/NutShell.fir.opt.mlir 25387:9]
    when perfCntCond_122 : @[build/NutShell.fir.opt.mlir 25389:7]
      node _perfCnts_122_T_4 = add(perfCnts_122, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25391:30]
      node _perfCnts_122_T_5 = tail(_perfCnts_122_T_4, 1) @[build/NutShell.fir.opt.mlir 25393:30]
      connect perfCnts_122, _perfCnts_122_T_5 @[build/NutShell.fir.opt.mlir 25394:9]
    when perfCntCond_123 : @[build/NutShell.fir.opt.mlir 25396:7]
      node _perfCnts_123_T_4 = add(perfCnts_123, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25398:30]
      node _perfCnts_123_T_5 = tail(_perfCnts_123_T_4, 1) @[build/NutShell.fir.opt.mlir 25400:30]
      connect perfCnts_123, _perfCnts_123_T_5 @[build/NutShell.fir.opt.mlir 25401:9]
    when perfCntCond_124 : @[build/NutShell.fir.opt.mlir 25403:7]
      node _perfCnts_124_T_4 = add(perfCnts_124, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25405:30]
      node _perfCnts_124_T_5 = tail(_perfCnts_124_T_4, 1) @[build/NutShell.fir.opt.mlir 25407:30]
      connect perfCnts_124, _perfCnts_124_T_5 @[build/NutShell.fir.opt.mlir 25408:9]
    when perfCntCond_125 : @[build/NutShell.fir.opt.mlir 25410:7]
      node _perfCnts_125_T_4 = add(perfCnts_125, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25412:30]
      node _perfCnts_125_T_5 = tail(_perfCnts_125_T_4, 1) @[build/NutShell.fir.opt.mlir 25414:30]
      connect perfCnts_125, _perfCnts_125_T_5 @[build/NutShell.fir.opt.mlir 25415:9]
    when perfCntCond_126 : @[build/NutShell.fir.opt.mlir 25417:7]
      node _perfCnts_126_T_4 = add(perfCnts_126, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25419:30]
      node _perfCnts_126_T_5 = tail(_perfCnts_126_T_4, 1) @[build/NutShell.fir.opt.mlir 25421:30]
      connect perfCnts_126, _perfCnts_126_T_5 @[build/NutShell.fir.opt.mlir 25422:9]
    when perfCntCond_127 : @[build/NutShell.fir.opt.mlir 25424:7]
      node _perfCnts_127_T_4 = add(perfCnts_127, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 25426:30]
      node _perfCnts_127_T_5 = tail(_perfCnts_127_T_4, 1) @[build/NutShell.fir.opt.mlir 25428:30]
      connect perfCnts_127, _perfCnts_127_T_5 @[build/NutShell.fir.opt.mlir 25429:9]
    wire pendingLS : UInt<5> @[build/NutShell.fir.opt.mlir 25431:20]
    connect pendingLS, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25434:7]
    wire pendingSCmt : UInt<5> @[build/NutShell.fir.opt.mlir 25435:22]
    connect pendingSCmt, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25437:7]
    wire pendingSReq : UInt<5> @[build/NutShell.fir.opt.mlir 25438:22]
    connect pendingSReq, UInt<5>(0) @[build/NutShell.fir.opt.mlir 25440:7]
    when perfCntCond_3 : @[build/NutShell.fir.opt.mlir 25441:7]
      node _perfCnts_2_T_6 = add(perfCnts_2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 25443:28]
      node _perfCnts_2_T_7 = tail(_perfCnts_2_T_6, 1) @[build/NutShell.fir.opt.mlir 25445:28]
      connect perfCnts_2, _perfCnts_2_T_7 @[build/NutShell.fir.opt.mlir 25446:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25448:7]
      node _perfCnts_99_T_6 = add(perfCnts_99, pendingLS) @[build/NutShell.fir.opt.mlir 25450:29]
      node _perfCnts_99_T_7 = tail(_perfCnts_99_T_6, 1) @[build/NutShell.fir.opt.mlir 25452:29]
      connect perfCnts_99, _perfCnts_99_T_7 @[build/NutShell.fir.opt.mlir 25453:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25455:7]
      node _perfCnts_100_T_6 = add(perfCnts_100, pendingSCmt) @[build/NutShell.fir.opt.mlir 25457:30]
      node _perfCnts_100_T_7 = tail(_perfCnts_100_T_6, 1) @[build/NutShell.fir.opt.mlir 25459:30]
      connect perfCnts_100, _perfCnts_100_T_7 @[build/NutShell.fir.opt.mlir 25460:9]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 25462:7]
      node _perfCnts_101_T_6 = add(perfCnts_102, pendingSReq) @[build/NutShell.fir.opt.mlir 25464:30]
      node _perfCnts_101_T_7 = tail(_perfCnts_101_T_6, 1) @[build/NutShell.fir.opt.mlir 25466:30]
      connect perfCnts_101, _perfCnts_101_T_7 @[build/NutShell.fir.opt.mlir 25467:9]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 25469:18]
    connect _WIRE_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 25471:7]
    wire nutcoretrap : UInt<1> @[build/NutShell.fir.opt.mlir 25472:22]
    connect nutcoretrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 25474:7]
    when nutcoretrap : @[build/NutShell.fir.opt.mlir 25475:7]
      node _T_443 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25477:19]
      node _T_444 = eq(_T_443, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25479:19]
      when _T_444 : @[build/NutShell.fir.opt.mlir 25480:9]
        skip @[build/NutShell.fir.opt.mlir 25481:11]
      node _T_445 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25484:19]
      node _T_446 = eq(_T_445, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25486:19]
      when _T_446 : @[build/NutShell.fir.opt.mlir 25487:9]
        skip @[build/NutShell.fir.opt.mlir 25488:11]
      node _T_447 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25491:19]
      node _T_448 = eq(_T_447, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25493:19]
      when _T_448 : @[build/NutShell.fir.opt.mlir 25494:9]
        skip @[build/NutShell.fir.opt.mlir 25495:11]
      node _T_449 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25498:19]
      node _T_450 = eq(_T_449, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25500:19]
      when _T_450 : @[build/NutShell.fir.opt.mlir 25501:9]
        skip @[build/NutShell.fir.opt.mlir 25502:11]
      node _T_451 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25505:19]
      node _T_452 = eq(_T_451, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25507:19]
      when _T_452 : @[build/NutShell.fir.opt.mlir 25508:9]
        skip @[build/NutShell.fir.opt.mlir 25509:11]
      node _T_453 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25512:19]
      node _T_454 = eq(_T_453, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25514:19]
      when _T_454 : @[build/NutShell.fir.opt.mlir 25515:9]
        skip @[build/NutShell.fir.opt.mlir 25516:11]
      node _T_455 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25519:19]
      node _T_456 = eq(_T_455, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25521:19]
      when _T_456 : @[build/NutShell.fir.opt.mlir 25522:9]
        skip @[build/NutShell.fir.opt.mlir 25523:11]
      node _T_457 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25526:19]
      node _T_458 = eq(_T_457, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25528:19]
      when _T_458 : @[build/NutShell.fir.opt.mlir 25529:9]
        skip @[build/NutShell.fir.opt.mlir 25530:11]
      node _T_459 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25533:19]
      node _T_460 = eq(_T_459, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25535:19]
      when _T_460 : @[build/NutShell.fir.opt.mlir 25536:9]
        skip @[build/NutShell.fir.opt.mlir 25537:11]
      node _T_461 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25540:19]
      node _T_462 = eq(_T_461, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25542:19]
      when _T_462 : @[build/NutShell.fir.opt.mlir 25543:9]
        skip @[build/NutShell.fir.opt.mlir 25544:11]
      node _T_463 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25547:19]
      node _T_464 = eq(_T_463, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25549:19]
      when _T_464 : @[build/NutShell.fir.opt.mlir 25550:9]
        skip @[build/NutShell.fir.opt.mlir 25551:11]
      node _T_465 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25554:19]
      node _T_466 = eq(_T_465, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25556:19]
      when _T_466 : @[build/NutShell.fir.opt.mlir 25557:9]
        skip @[build/NutShell.fir.opt.mlir 25558:11]
      node _T_467 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25561:19]
      node _T_468 = eq(_T_467, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25563:19]
      when _T_468 : @[build/NutShell.fir.opt.mlir 25564:9]
        skip @[build/NutShell.fir.opt.mlir 25565:11]
      node _T_469 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25568:19]
      node _T_470 = eq(_T_469, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25570:19]
      when _T_470 : @[build/NutShell.fir.opt.mlir 25571:9]
        skip @[build/NutShell.fir.opt.mlir 25572:11]
      node _T_471 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25575:19]
      node _T_472 = eq(_T_471, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25577:19]
      when _T_472 : @[build/NutShell.fir.opt.mlir 25578:9]
        skip @[build/NutShell.fir.opt.mlir 25579:11]
      node _T_473 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25582:19]
      node _T_474 = eq(_T_473, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25584:19]
      when _T_474 : @[build/NutShell.fir.opt.mlir 25585:9]
        skip @[build/NutShell.fir.opt.mlir 25586:11]
      node _T_475 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25589:19]
      node _T_476 = eq(_T_475, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25591:19]
      when _T_476 : @[build/NutShell.fir.opt.mlir 25592:9]
        skip @[build/NutShell.fir.opt.mlir 25593:11]
      node _T_477 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25596:19]
      node _T_478 = eq(_T_477, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25598:19]
      when _T_478 : @[build/NutShell.fir.opt.mlir 25599:9]
        skip @[build/NutShell.fir.opt.mlir 25600:11]
      node _T_479 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25603:19]
      node _T_480 = eq(_T_479, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25605:19]
      when _T_480 : @[build/NutShell.fir.opt.mlir 25606:9]
        skip @[build/NutShell.fir.opt.mlir 25607:11]
      node _T_481 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25610:19]
      node _T_482 = eq(_T_481, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25612:19]
      when _T_482 : @[build/NutShell.fir.opt.mlir 25613:9]
        skip @[build/NutShell.fir.opt.mlir 25614:11]
      node _T_483 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25617:19]
      node _T_484 = eq(_T_483, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25619:19]
      when _T_484 : @[build/NutShell.fir.opt.mlir 25620:9]
        skip @[build/NutShell.fir.opt.mlir 25621:11]
      node _T_485 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25624:19]
      node _T_486 = eq(_T_485, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25626:19]
      when _T_486 : @[build/NutShell.fir.opt.mlir 25627:9]
        skip @[build/NutShell.fir.opt.mlir 25628:11]
      node _T_487 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25631:19]
      node _T_488 = eq(_T_487, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25633:19]
      when _T_488 : @[build/NutShell.fir.opt.mlir 25634:9]
        skip @[build/NutShell.fir.opt.mlir 25635:11]
      node _T_489 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25638:19]
      node _T_490 = eq(_T_489, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25640:19]
      when _T_490 : @[build/NutShell.fir.opt.mlir 25641:9]
        skip @[build/NutShell.fir.opt.mlir 25642:11]
      node _T_491 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25645:19]
      node _T_492 = eq(_T_491, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25647:19]
      when _T_492 : @[build/NutShell.fir.opt.mlir 25648:9]
        skip @[build/NutShell.fir.opt.mlir 25649:11]
      node _T_493 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25652:19]
      node _T_494 = eq(_T_493, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25654:19]
      when _T_494 : @[build/NutShell.fir.opt.mlir 25655:9]
        skip @[build/NutShell.fir.opt.mlir 25656:11]
      node _T_495 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25659:19]
      node _T_496 = eq(_T_495, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25661:19]
      when _T_496 : @[build/NutShell.fir.opt.mlir 25662:9]
        skip @[build/NutShell.fir.opt.mlir 25663:11]
      node _T_497 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25666:19]
      node _T_498 = eq(_T_497, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25668:19]
      when _T_498 : @[build/NutShell.fir.opt.mlir 25669:9]
        skip @[build/NutShell.fir.opt.mlir 25670:11]
      node _T_499 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25673:19]
      node _T_500 = eq(_T_499, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25675:19]
      when _T_500 : @[build/NutShell.fir.opt.mlir 25676:9]
        skip @[build/NutShell.fir.opt.mlir 25677:11]
      node _T_501 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25680:19]
      node _T_502 = eq(_T_501, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25682:19]
      when _T_502 : @[build/NutShell.fir.opt.mlir 25683:9]
        skip @[build/NutShell.fir.opt.mlir 25684:11]
      node _T_503 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25687:19]
      node _T_504 = eq(_T_503, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25689:19]
      when _T_504 : @[build/NutShell.fir.opt.mlir 25690:9]
        skip @[build/NutShell.fir.opt.mlir 25691:11]
      node _T_505 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25694:19]
      node _T_506 = eq(_T_505, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25696:19]
      when _T_506 : @[build/NutShell.fir.opt.mlir 25697:9]
        skip @[build/NutShell.fir.opt.mlir 25698:11]
      node _T_507 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25701:19]
      node _T_508 = eq(_T_507, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25703:19]
      when _T_508 : @[build/NutShell.fir.opt.mlir 25704:9]
        skip @[build/NutShell.fir.opt.mlir 25705:11]
      node _T_509 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25708:19]
      node _T_510 = eq(_T_509, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25710:19]
      when _T_510 : @[build/NutShell.fir.opt.mlir 25711:9]
        skip @[build/NutShell.fir.opt.mlir 25712:11]
      node _T_511 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25715:19]
      node _T_512 = eq(_T_511, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25717:19]
      when _T_512 : @[build/NutShell.fir.opt.mlir 25718:9]
        skip @[build/NutShell.fir.opt.mlir 25719:11]
      node _T_513 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25722:19]
      node _T_514 = eq(_T_513, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25724:19]
      when _T_514 : @[build/NutShell.fir.opt.mlir 25725:9]
        skip @[build/NutShell.fir.opt.mlir 25726:11]
      node _T_515 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25729:19]
      node _T_516 = eq(_T_515, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25731:19]
      when _T_516 : @[build/NutShell.fir.opt.mlir 25732:9]
        skip @[build/NutShell.fir.opt.mlir 25733:11]
      node _T_517 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25736:19]
      node _T_518 = eq(_T_517, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25738:19]
      when _T_518 : @[build/NutShell.fir.opt.mlir 25739:9]
        skip @[build/NutShell.fir.opt.mlir 25740:11]
      node _T_519 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25743:19]
      node _T_520 = eq(_T_519, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25745:19]
      when _T_520 : @[build/NutShell.fir.opt.mlir 25746:9]
        skip @[build/NutShell.fir.opt.mlir 25747:11]
      node _T_521 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25750:19]
      node _T_522 = eq(_T_521, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25752:19]
      when _T_522 : @[build/NutShell.fir.opt.mlir 25753:9]
        skip @[build/NutShell.fir.opt.mlir 25754:11]
      node _T_523 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25757:19]
      node _T_524 = eq(_T_523, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25759:19]
      when _T_524 : @[build/NutShell.fir.opt.mlir 25760:9]
        skip @[build/NutShell.fir.opt.mlir 25761:11]
      node _T_525 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25764:19]
      node _T_526 = eq(_T_525, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25766:19]
      when _T_526 : @[build/NutShell.fir.opt.mlir 25767:9]
        skip @[build/NutShell.fir.opt.mlir 25768:11]
      node _T_527 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25771:19]
      node _T_528 = eq(_T_527, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25773:19]
      when _T_528 : @[build/NutShell.fir.opt.mlir 25774:9]
        skip @[build/NutShell.fir.opt.mlir 25775:11]
      node _T_529 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25778:19]
      node _T_530 = eq(_T_529, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25780:19]
      when _T_530 : @[build/NutShell.fir.opt.mlir 25781:9]
        skip @[build/NutShell.fir.opt.mlir 25782:11]
      node _T_531 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25785:19]
      node _T_532 = eq(_T_531, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25787:19]
      when _T_532 : @[build/NutShell.fir.opt.mlir 25788:9]
        skip @[build/NutShell.fir.opt.mlir 25789:11]
      node _T_533 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25792:19]
      node _T_534 = eq(_T_533, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25794:19]
      when _T_534 : @[build/NutShell.fir.opt.mlir 25795:9]
        skip @[build/NutShell.fir.opt.mlir 25796:11]
      node _T_535 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25799:19]
      node _T_536 = eq(_T_535, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25801:19]
      when _T_536 : @[build/NutShell.fir.opt.mlir 25802:9]
        skip @[build/NutShell.fir.opt.mlir 25803:11]
      node _T_537 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25806:19]
      node _T_538 = eq(_T_537, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25808:19]
      when _T_538 : @[build/NutShell.fir.opt.mlir 25809:9]
        skip @[build/NutShell.fir.opt.mlir 25810:11]
      node _T_539 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25813:19]
      node _T_540 = eq(_T_539, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25815:19]
      when _T_540 : @[build/NutShell.fir.opt.mlir 25816:9]
        skip @[build/NutShell.fir.opt.mlir 25817:11]
      node _T_541 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25820:19]
      node _T_542 = eq(_T_541, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25822:19]
      when _T_542 : @[build/NutShell.fir.opt.mlir 25823:9]
        skip @[build/NutShell.fir.opt.mlir 25824:11]
      node _T_543 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25827:19]
      node _T_544 = eq(_T_543, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25829:19]
      when _T_544 : @[build/NutShell.fir.opt.mlir 25830:9]
        skip @[build/NutShell.fir.opt.mlir 25831:11]
      node _T_545 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25834:19]
      node _T_546 = eq(_T_545, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25836:19]
      when _T_546 : @[build/NutShell.fir.opt.mlir 25837:9]
        skip @[build/NutShell.fir.opt.mlir 25838:11]
      node _T_547 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25841:19]
      node _T_548 = eq(_T_547, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25843:19]
      when _T_548 : @[build/NutShell.fir.opt.mlir 25844:9]
        skip @[build/NutShell.fir.opt.mlir 25845:11]
      node _T_549 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25848:19]
      node _T_550 = eq(_T_549, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25850:19]
      when _T_550 : @[build/NutShell.fir.opt.mlir 25851:9]
        skip @[build/NutShell.fir.opt.mlir 25852:11]
      node _T_551 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25855:19]
      node _T_552 = eq(_T_551, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25857:19]
      when _T_552 : @[build/NutShell.fir.opt.mlir 25858:9]
        skip @[build/NutShell.fir.opt.mlir 25859:11]
      node _T_553 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25862:19]
      node _T_554 = eq(_T_553, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25864:19]
      when _T_554 : @[build/NutShell.fir.opt.mlir 25865:9]
        skip @[build/NutShell.fir.opt.mlir 25866:11]
      node _T_555 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25869:19]
      node _T_556 = eq(_T_555, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25871:19]
      when _T_556 : @[build/NutShell.fir.opt.mlir 25872:9]
        skip @[build/NutShell.fir.opt.mlir 25873:11]
      node _T_557 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25876:19]
      node _T_558 = eq(_T_557, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25878:19]
      when _T_558 : @[build/NutShell.fir.opt.mlir 25879:9]
        skip @[build/NutShell.fir.opt.mlir 25880:11]
      node _T_559 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25883:19]
      node _T_560 = eq(_T_559, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25885:19]
      when _T_560 : @[build/NutShell.fir.opt.mlir 25886:9]
        skip @[build/NutShell.fir.opt.mlir 25887:11]
      node _T_561 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25890:19]
      node _T_562 = eq(_T_561, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25892:19]
      when _T_562 : @[build/NutShell.fir.opt.mlir 25893:9]
        skip @[build/NutShell.fir.opt.mlir 25894:11]
      node _T_563 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25897:19]
      node _T_564 = eq(_T_563, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25899:19]
      when _T_564 : @[build/NutShell.fir.opt.mlir 25900:9]
        skip @[build/NutShell.fir.opt.mlir 25901:11]
      node _T_565 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25904:19]
      node _T_566 = eq(_T_565, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25906:19]
      when _T_566 : @[build/NutShell.fir.opt.mlir 25907:9]
        skip @[build/NutShell.fir.opt.mlir 25908:11]
      node _T_567 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25911:19]
      node _T_568 = eq(_T_567, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25913:19]
      when _T_568 : @[build/NutShell.fir.opt.mlir 25914:9]
        skip @[build/NutShell.fir.opt.mlir 25915:11]
      node _T_569 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25918:19]
      node _T_570 = eq(_T_569, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25920:19]
      when _T_570 : @[build/NutShell.fir.opt.mlir 25921:9]
        skip @[build/NutShell.fir.opt.mlir 25922:11]
      node _T_571 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25925:19]
      node _T_572 = eq(_T_571, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25927:19]
      when _T_572 : @[build/NutShell.fir.opt.mlir 25928:9]
        skip @[build/NutShell.fir.opt.mlir 25929:11]
      node _T_573 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25932:19]
      node _T_574 = eq(_T_573, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25934:19]
      when _T_574 : @[build/NutShell.fir.opt.mlir 25935:9]
        skip @[build/NutShell.fir.opt.mlir 25936:11]
      node _T_575 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25939:19]
      node _T_576 = eq(_T_575, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25941:19]
      when _T_576 : @[build/NutShell.fir.opt.mlir 25942:9]
        skip @[build/NutShell.fir.opt.mlir 25943:11]
      node _T_577 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25946:19]
      node _T_578 = eq(_T_577, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25948:19]
      when _T_578 : @[build/NutShell.fir.opt.mlir 25949:9]
        skip @[build/NutShell.fir.opt.mlir 25950:11]
      node _T_579 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25953:19]
      node _T_580 = eq(_T_579, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25955:19]
      when _T_580 : @[build/NutShell.fir.opt.mlir 25956:9]
        skip @[build/NutShell.fir.opt.mlir 25957:11]
      node _T_581 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25960:19]
      node _T_582 = eq(_T_581, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25962:19]
      when _T_582 : @[build/NutShell.fir.opt.mlir 25963:9]
        skip @[build/NutShell.fir.opt.mlir 25964:11]
      node _T_583 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25967:19]
      node _T_584 = eq(_T_583, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25969:19]
      when _T_584 : @[build/NutShell.fir.opt.mlir 25970:9]
        skip @[build/NutShell.fir.opt.mlir 25971:11]
      node _T_585 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25974:19]
      node _T_586 = eq(_T_585, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25976:19]
      when _T_586 : @[build/NutShell.fir.opt.mlir 25977:9]
        skip @[build/NutShell.fir.opt.mlir 25978:11]
      node _T_587 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25981:19]
      node _T_588 = eq(_T_587, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25983:19]
      when _T_588 : @[build/NutShell.fir.opt.mlir 25984:9]
        skip @[build/NutShell.fir.opt.mlir 25985:11]
      node _T_589 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25988:19]
      node _T_590 = eq(_T_589, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25990:19]
      when _T_590 : @[build/NutShell.fir.opt.mlir 25991:9]
        skip @[build/NutShell.fir.opt.mlir 25992:11]
      node _T_591 = asUInt(reset) @[build/NutShell.fir.opt.mlir 25995:19]
      node _T_592 = eq(_T_591, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 25997:19]
      when _T_592 : @[build/NutShell.fir.opt.mlir 25998:9]
        skip @[build/NutShell.fir.opt.mlir 25999:11]
      node _T_593 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26002:19]
      node _T_594 = eq(_T_593, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26004:19]
      when _T_594 : @[build/NutShell.fir.opt.mlir 26005:9]
        skip @[build/NutShell.fir.opt.mlir 26006:11]
      node _T_595 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26009:19]
      node _T_596 = eq(_T_595, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26011:19]
      when _T_596 : @[build/NutShell.fir.opt.mlir 26012:9]
        skip @[build/NutShell.fir.opt.mlir 26013:11]
      node _T_597 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26016:19]
      node _T_598 = eq(_T_597, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26018:19]
      when _T_598 : @[build/NutShell.fir.opt.mlir 26019:9]
        skip @[build/NutShell.fir.opt.mlir 26020:11]
      node _T_599 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26023:19]
      node _T_600 = eq(_T_599, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26025:19]
      when _T_600 : @[build/NutShell.fir.opt.mlir 26026:9]
        skip @[build/NutShell.fir.opt.mlir 26027:11]
      node _T_601 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26030:19]
      node _T_602 = eq(_T_601, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26032:19]
      when _T_602 : @[build/NutShell.fir.opt.mlir 26033:9]
        skip @[build/NutShell.fir.opt.mlir 26034:11]
      node _T_603 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26037:19]
      node _T_604 = eq(_T_603, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26039:19]
      when _T_604 : @[build/NutShell.fir.opt.mlir 26040:9]
        skip @[build/NutShell.fir.opt.mlir 26041:11]
      node _T_605 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26044:19]
      node _T_606 = eq(_T_605, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26046:19]
      when _T_606 : @[build/NutShell.fir.opt.mlir 26047:9]
        skip @[build/NutShell.fir.opt.mlir 26048:11]
      node _T_607 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26051:19]
      node _T_608 = eq(_T_607, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26053:19]
      when _T_608 : @[build/NutShell.fir.opt.mlir 26054:9]
        skip @[build/NutShell.fir.opt.mlir 26055:11]
      node _T_609 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26058:19]
      node _T_610 = eq(_T_609, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26060:19]
      when _T_610 : @[build/NutShell.fir.opt.mlir 26061:9]
        skip @[build/NutShell.fir.opt.mlir 26062:11]
      node _T_611 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26065:19]
      node _T_612 = eq(_T_611, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26067:19]
      when _T_612 : @[build/NutShell.fir.opt.mlir 26068:9]
        skip @[build/NutShell.fir.opt.mlir 26069:11]
      node _T_613 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26072:19]
      node _T_614 = eq(_T_613, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26074:19]
      when _T_614 : @[build/NutShell.fir.opt.mlir 26075:9]
        skip @[build/NutShell.fir.opt.mlir 26076:11]
      node _T_615 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26079:19]
      node _T_616 = eq(_T_615, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26081:19]
      when _T_616 : @[build/NutShell.fir.opt.mlir 26082:9]
        skip @[build/NutShell.fir.opt.mlir 26083:11]
      node _T_617 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26086:19]
      node _T_618 = eq(_T_617, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26088:19]
      when _T_618 : @[build/NutShell.fir.opt.mlir 26089:9]
        skip @[build/NutShell.fir.opt.mlir 26090:11]
      node _T_619 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26093:19]
      node _T_620 = eq(_T_619, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26095:19]
      when _T_620 : @[build/NutShell.fir.opt.mlir 26096:9]
        skip @[build/NutShell.fir.opt.mlir 26097:11]
      node _T_621 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26100:19]
      node _T_622 = eq(_T_621, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26102:19]
      when _T_622 : @[build/NutShell.fir.opt.mlir 26103:9]
        skip @[build/NutShell.fir.opt.mlir 26104:11]
      node _T_623 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26107:19]
      node _T_624 = eq(_T_623, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26109:19]
      when _T_624 : @[build/NutShell.fir.opt.mlir 26110:9]
        skip @[build/NutShell.fir.opt.mlir 26111:11]
      node _T_625 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26114:19]
      node _T_626 = eq(_T_625, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26116:19]
      when _T_626 : @[build/NutShell.fir.opt.mlir 26117:9]
        skip @[build/NutShell.fir.opt.mlir 26118:11]
      node _T_627 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26121:19]
      node _T_628 = eq(_T_627, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26123:19]
      when _T_628 : @[build/NutShell.fir.opt.mlir 26124:9]
        skip @[build/NutShell.fir.opt.mlir 26125:11]
      node _T_629 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26128:19]
      node _T_630 = eq(_T_629, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26130:19]
      when _T_630 : @[build/NutShell.fir.opt.mlir 26131:9]
        skip @[build/NutShell.fir.opt.mlir 26132:11]
      node _T_631 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26135:19]
      node _T_632 = eq(_T_631, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26137:19]
      when _T_632 : @[build/NutShell.fir.opt.mlir 26138:9]
        skip @[build/NutShell.fir.opt.mlir 26139:11]
      node _T_633 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26142:19]
      node _T_634 = eq(_T_633, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26144:19]
      when _T_634 : @[build/NutShell.fir.opt.mlir 26145:9]
        skip @[build/NutShell.fir.opt.mlir 26146:11]
      node _T_635 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26149:19]
      node _T_636 = eq(_T_635, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26151:19]
      when _T_636 : @[build/NutShell.fir.opt.mlir 26152:9]
        skip @[build/NutShell.fir.opt.mlir 26153:11]
      node _T_637 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26156:19]
      node _T_638 = eq(_T_637, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26158:19]
      when _T_638 : @[build/NutShell.fir.opt.mlir 26159:9]
        skip @[build/NutShell.fir.opt.mlir 26160:11]
      node _T_639 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26163:19]
      node _T_640 = eq(_T_639, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26165:19]
      when _T_640 : @[build/NutShell.fir.opt.mlir 26166:9]
        skip @[build/NutShell.fir.opt.mlir 26167:11]
      node _T_641 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26170:19]
      node _T_642 = eq(_T_641, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26172:19]
      when _T_642 : @[build/NutShell.fir.opt.mlir 26173:9]
        skip @[build/NutShell.fir.opt.mlir 26174:11]
      node _T_643 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26177:19]
      node _T_644 = eq(_T_643, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26179:19]
      when _T_644 : @[build/NutShell.fir.opt.mlir 26180:9]
        skip @[build/NutShell.fir.opt.mlir 26181:11]
      node _T_645 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26184:19]
      node _T_646 = eq(_T_645, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26186:19]
      when _T_646 : @[build/NutShell.fir.opt.mlir 26187:9]
        skip @[build/NutShell.fir.opt.mlir 26188:11]
      node _T_647 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26191:19]
      node _T_648 = eq(_T_647, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26193:19]
      when _T_648 : @[build/NutShell.fir.opt.mlir 26194:9]
        skip @[build/NutShell.fir.opt.mlir 26195:11]
      node _T_649 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26198:19]
      node _T_650 = eq(_T_649, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26200:19]
      when _T_650 : @[build/NutShell.fir.opt.mlir 26201:9]
        skip @[build/NutShell.fir.opt.mlir 26202:11]
      node _T_651 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26205:19]
      node _T_652 = eq(_T_651, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26207:19]
      when _T_652 : @[build/NutShell.fir.opt.mlir 26208:9]
        skip @[build/NutShell.fir.opt.mlir 26209:11]
      node _T_653 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26212:19]
      node _T_654 = eq(_T_653, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26214:19]
      when _T_654 : @[build/NutShell.fir.opt.mlir 26215:9]
        skip @[build/NutShell.fir.opt.mlir 26216:11]
    inst CSRDiffWrapper of CSRDiffWrapper @[build/NutShell.fir.opt.mlir 26219:74]
    connect CSRDiffWrapper.clock, clock @[build/NutShell.fir.opt.mlir 26247:7]
    connect CSRDiffWrapper.reset, reset @[build/NutShell.fir.opt.mlir 26248:7]
    invalidate CSRDiffWrapper.io.archEvent.coreid @[build/NutShell.fir.opt.mlir 26250:7]
    invalidate CSRDiffWrapper.io.archEvent.exceptionInst @[build/NutShell.fir.opt.mlir 26252:7]
    invalidate CSRDiffWrapper.io.archEvent.exceptionPC @[build/NutShell.fir.opt.mlir 26254:7]
    invalidate CSRDiffWrapper.io.archEvent.exception @[build/NutShell.fir.opt.mlir 26256:7]
    invalidate CSRDiffWrapper.io.archEvent.interrupt @[build/NutShell.fir.opt.mlir 26258:7]
    invalidate CSRDiffWrapper.io.archEvent.valid @[build/NutShell.fir.opt.mlir 26260:7]
    invalidate CSRDiffWrapper.io.csrState.coreid @[build/NutShell.fir.opt.mlir 26262:7]
    invalidate CSRDiffWrapper.io.csrState.medeleg @[build/NutShell.fir.opt.mlir 26264:7]
    invalidate CSRDiffWrapper.io.csrState.mideleg @[build/NutShell.fir.opt.mlir 26266:7]
    invalidate CSRDiffWrapper.io.csrState.sscratch @[build/NutShell.fir.opt.mlir 26268:7]
    invalidate CSRDiffWrapper.io.csrState.mscratch @[build/NutShell.fir.opt.mlir 26270:7]
    invalidate CSRDiffWrapper.io.csrState.mie @[build/NutShell.fir.opt.mlir 26272:7]
    invalidate CSRDiffWrapper.io.csrState.mip @[build/NutShell.fir.opt.mlir 26274:7]
    invalidate CSRDiffWrapper.io.csrState.satp @[build/NutShell.fir.opt.mlir 26276:7]
    invalidate CSRDiffWrapper.io.csrState.scause @[build/NutShell.fir.opt.mlir 26278:7]
    invalidate CSRDiffWrapper.io.csrState.mcause @[build/NutShell.fir.opt.mlir 26280:7]
    invalidate CSRDiffWrapper.io.csrState.stvec @[build/NutShell.fir.opt.mlir 26282:7]
    invalidate CSRDiffWrapper.io.csrState.mtvec @[build/NutShell.fir.opt.mlir 26284:7]
    invalidate CSRDiffWrapper.io.csrState.stval @[build/NutShell.fir.opt.mlir 26286:7]
    invalidate CSRDiffWrapper.io.csrState.mtval @[build/NutShell.fir.opt.mlir 26288:7]
    invalidate CSRDiffWrapper.io.csrState.sepc @[build/NutShell.fir.opt.mlir 26290:7]
    invalidate CSRDiffWrapper.io.csrState.mepc @[build/NutShell.fir.opt.mlir 26292:7]
    invalidate CSRDiffWrapper.io.csrState.sstatus @[build/NutShell.fir.opt.mlir 26294:7]
    invalidate CSRDiffWrapper.io.csrState.mstatus @[build/NutShell.fir.opt.mlir 26296:7]
    invalidate CSRDiffWrapper.io.csrState.privilegeMode @[build/NutShell.fir.opt.mlir 26298:7]
    connect CSRDiffWrapper.io.csrState.privilegeMode, pad(privilegeMode, 64) @[build/NutShell.fir.opt.mlir 26300:7]
    connect CSRDiffWrapper.io.csrState.mstatus, mstatus @[build/NutShell.fir.opt.mlir 26301:7]
    node _T_655 = and(mstatus, sstatusRmask) @[build/NutShell.fir.opt.mlir 26303:17]
    connect CSRDiffWrapper.io.csrState.sstatus, _T_655 @[build/NutShell.fir.opt.mlir 26304:7]
    connect CSRDiffWrapper.io.csrState.mepc, mepc @[build/NutShell.fir.opt.mlir 26305:7]
    connect CSRDiffWrapper.io.csrState.sepc, sepc @[build/NutShell.fir.opt.mlir 26306:7]
    connect CSRDiffWrapper.io.csrState.mtval, mtval @[build/NutShell.fir.opt.mlir 26307:7]
    connect CSRDiffWrapper.io.csrState.stval, stval @[build/NutShell.fir.opt.mlir 26308:7]
    connect CSRDiffWrapper.io.csrState.mtvec, mtvec @[build/NutShell.fir.opt.mlir 26309:7]
    connect CSRDiffWrapper.io.csrState.stvec, stvec @[build/NutShell.fir.opt.mlir 26310:7]
    connect CSRDiffWrapper.io.csrState.mcause, mcause @[build/NutShell.fir.opt.mlir 26311:7]
    connect CSRDiffWrapper.io.csrState.scause, scause @[build/NutShell.fir.opt.mlir 26312:7]
    connect CSRDiffWrapper.io.csrState.satp, satp @[build/NutShell.fir.opt.mlir 26313:7]
    connect CSRDiffWrapper.io.csrState.mip, mipReg @[build/NutShell.fir.opt.mlir 26314:7]
    connect CSRDiffWrapper.io.csrState.mie, mie @[build/NutShell.fir.opt.mlir 26315:7]
    connect CSRDiffWrapper.io.csrState.mscratch, mscratch @[build/NutShell.fir.opt.mlir 26316:7]
    connect CSRDiffWrapper.io.csrState.sscratch, sscratch @[build/NutShell.fir.opt.mlir 26317:7]
    connect CSRDiffWrapper.io.csrState.mideleg, mideleg @[build/NutShell.fir.opt.mlir 26318:7]
    connect CSRDiffWrapper.io.csrState.medeleg, medeleg @[build/NutShell.fir.opt.mlir 26319:7]
    connect CSRDiffWrapper.io.archEvent.valid, raiseExceptionIntr @[build/NutShell.fir.opt.mlir 26320:7]
    node _T_656 = and(raiseIntr, io.instrValid) @[build/NutShell.fir.opt.mlir 26322:17]
    node _T_657 = mux(_T_656, intrNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26324:17]
    connect CSRDiffWrapper.io.archEvent.interrupt, pad(_T_657, 32) @[build/NutShell.fir.opt.mlir 26326:7]
    node _T_658 = and(raiseException, io.instrValid) @[build/NutShell.fir.opt.mlir 26328:17]
    node _T_659 = mux(_T_658, exceptionNO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26330:17]
    connect CSRDiffWrapper.io.archEvent.exception, pad(_T_659, 32) @[build/NutShell.fir.opt.mlir 26332:7]
    node signBit_2 = bits(io.cfIn.pc, 38, 38) @[build/NutShell.fir.opt.mlir 26334:20]
    node _T_660 = mux(signBit_2, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 26336:17]
    node _T_661 = cat(_T_660, io.cfIn.pc) @[build/NutShell.fir.opt.mlir 26338:17]
    connect CSRDiffWrapper.io.archEvent.exceptionPC, _T_661 @[build/NutShell.fir.opt.mlir 26339:7]
    connect CSRDiffWrapper.io.archEvent.exceptionInst, tail(io.cfIn.instr, 32) @[build/NutShell.fir.opt.mlir 26341:7]
    connect perfCntCond_0, _WIRE_1 @[build/NutShell.fir.opt.mlir 26342:7]
    connect perfCntCond_6, perfCntCond_6__bore @[build/NutShell.fir.opt.mlir 26343:7]
    connect meip, meip__bore @[build/NutShell.fir.opt.mlir 26344:7]
    connect perfCntCond_20, perfCntCond_20__bore @[build/NutShell.fir.opt.mlir 26345:7]
    connect perfCntCond_14, perfCntCond_14__bore @[build/NutShell.fir.opt.mlir 26346:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 26347:7]
    connect _WIRE__bore_0, _WIRE @[build/NutShell.fir.opt.mlir 26348:7]
    connect perfCntCond_29, perfCntCond_29__bore @[build/NutShell.fir.opt.mlir 26349:7]
    connect perfCntCond_7, perfCntCond_7__bore @[build/NutShell.fir.opt.mlir 26350:7]
    connect mtip, mtip__bore @[build/NutShell.fir.opt.mlir 26351:7]
    connect perfCntCond_28, perfCntCond_28__bore @[build/NutShell.fir.opt.mlir 26352:7]
    connect lsuAddr, lsuAddr__bore @[build/NutShell.fir.opt.mlir 26353:7]
    connect perfCntCond_53, perfCntCond_53__bore @[build/NutShell.fir.opt.mlir 26354:7]
    connect perfCnts_2__bore, perfCnts_2 @[build/NutShell.fir.opt.mlir 26355:7]
    connect setLr, setLr__bore @[build/NutShell.fir.opt.mlir 26356:7]
    connect perfCntCond_27, perfCntCond_27__bore @[build/NutShell.fir.opt.mlir 26357:7]
    connect perfCntCond_19, perfCntCond_19__bore @[build/NutShell.fir.opt.mlir 26358:7]
    connect perfCntCond_10, perfCntCond_10__bore @[build/NutShell.fir.opt.mlir 26359:7]
    connect perfCntCond_26, perfCntCond_26__bore @[build/NutShell.fir.opt.mlir 26360:7]
    connect perfCntCond_18, perfCntCond_18__bore @[build/NutShell.fir.opt.mlir 26361:7]
    connect msip, msip__bore @[build/NutShell.fir.opt.mlir 26362:7]
    connect setLrVal, setLrVal__bore @[build/NutShell.fir.opt.mlir 26363:7]
    connect perfCntCond_3, perfCntCond_3__bore @[build/NutShell.fir.opt.mlir 26364:7]
    connect perfCntCond_51, perfCntCond_51__bore @[build/NutShell.fir.opt.mlir 26365:7]
    connect perfCntCond_17, perfCntCond_17__bore @[build/NutShell.fir.opt.mlir 26366:7]
    connect perfCntCond_32, perfCntCond_32__bore @[build/NutShell.fir.opt.mlir 26367:7]
    connect nutcoretrap, nutcoretrap__bore @[build/NutShell.fir.opt.mlir 26368:7]
    connect perfCntCond_4, perfCntCond_4__bore @[build/NutShell.fir.opt.mlir 26369:7]
    connect setLrAddr, setLrAddr__bore @[build/NutShell.fir.opt.mlir 26370:7]
    connect perfCntCond_2, perfCntCond_2__bore @[build/NutShell.fir.opt.mlir 26371:7]
    connect perfCntCond_16, perfCntCond_16__bore @[build/NutShell.fir.opt.mlir 26372:7]
    connect perfCntCond_31, perfCntCond_31__bore @[build/NutShell.fir.opt.mlir 26373:7]
    connect perfCntCond_23, perfCntCond_23__bore @[build/NutShell.fir.opt.mlir 26374:7]
    connect perfCntCond_25, perfCntCond_25__bore @[build/NutShell.fir.opt.mlir 26375:7]
    connect perfCnts_0__bore, perfCnts_0 @[build/NutShell.fir.opt.mlir 26376:7]
    connect perfCntCond_52, perfCntCond_52__bore @[build/NutShell.fir.opt.mlir 26377:7]
    connect perfCntCond_8, perfCntCond_8__bore @[build/NutShell.fir.opt.mlir 26378:7]
    connect perfCntCond_22, perfCntCond_22__bore @[build/NutShell.fir.opt.mlir 26379:7]
    connect satp__bore, satp @[build/NutShell.fir.opt.mlir 26380:7]
    connect satp__bore_0, satp @[build/NutShell.fir.opt.mlir 26381:7]
    connect perfCntCond_30, perfCntCond_30__bore @[build/NutShell.fir.opt.mlir 26382:7]
    connect perfCntCond_11, perfCntCond_11__bore @[build/NutShell.fir.opt.mlir 26383:7]
    connect lr__bore, lr @[build/NutShell.fir.opt.mlir 26384:7]
    connect perfCntCond_50, perfCntCond_50__bore @[build/NutShell.fir.opt.mlir 26385:7]
    connect perfCntCond_5, perfCntCond_5__bore @[build/NutShell.fir.opt.mlir 26386:7]
    connect perfCntCond_9, perfCntCond_9__bore @[build/NutShell.fir.opt.mlir 26387:7]
    connect perfCntCond_49, perfCntCond_49__bore @[build/NutShell.fir.opt.mlir 26388:7]
    connect lrAddr__bore, lrAddr @[build/NutShell.fir.opt.mlir 26389:7]
    connect perfCntCond_15, perfCntCond_15__bore @[build/NutShell.fir.opt.mlir 26390:7]
    connect perfCntCond_21, perfCntCond_21__bore @[build/NutShell.fir.opt.mlir 26391:7]

  extmodule LogPerfHelper_17 : @[build/NutShell.fir.opt.mlir 26393:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 26393:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 26393:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 26393:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 26393:141]
    defname = LogPerfHelper

  module MOU : @[build/NutShell.fir.opt.mlir 26394:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26394:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26394:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { src1 : UInt<64>, src2 : UInt<64>, func : UInt<7> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : UInt<64> }, flip cfIn : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 26394:88]
    output _WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26394:672]
    output _WIRE_1__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 26394:709]
    output _WIRE_1__bore_1 : UInt<1> @[build/NutShell.fir.opt.mlir 26394:748]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26394:787]
    output _WIRE__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 26394:822]

    node _io_redirect_target_T = add(io.cfIn.pc, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 26411:32]
    node _io_redirect_target_T_1 = tail(_io_redirect_target_T, 1) @[build/NutShell.fir.opt.mlir 26413:34]
    connect io.redirect.target, _io_redirect_target_T_1 @[build/NutShell.fir.opt.mlir 26414:7]
    connect io.redirect.valid, io.in.valid @[build/NutShell.fir.opt.mlir 26415:7]
    connect io.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26418:7]
    node _flushICache_T = eq(io.in.bits.func, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 26421:25]
    node flushICache = and(io.in.valid, _flushICache_T) @[build/NutShell.fir.opt.mlir 26423:22]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 26424:16]
    connect _WIRE, flushICache @[build/NutShell.fir.opt.mlir 26425:7]
    inst LogPerfHelper of LogPerfHelper_17 @[build/NutShell.fir.opt.mlir 26426:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 26427:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 26432:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 26433:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 26434:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 26435:7]
    node _T = and(flushICache, c_control.logEnable) @[build/NutShell.fir.opt.mlir 26437:13]
    when _T : @[build/NutShell.fir.opt.mlir 26438:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26440:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26442:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 26443:9]
        skip @[build/NutShell.fir.opt.mlir 26444:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26447:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26449:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 26450:9]
        skip @[build/NutShell.fir.opt.mlir 26451:11]
    node _flushTLB_T = eq(io.in.bits.func, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 26456:22]
    node flushTLB = and(io.in.valid, _flushTLB_T) @[build/NutShell.fir.opt.mlir 26458:19]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 26459:18]
    connect _WIRE_1, flushTLB @[build/NutShell.fir.opt.mlir 26460:7]
    node _T_5 = and(flushTLB, c_control.logEnable) @[build/NutShell.fir.opt.mlir 26462:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 26463:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26465:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26467:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 26468:9]
        skip @[build/NutShell.fir.opt.mlir 26469:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 26472:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26474:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 26475:9]
        skip @[build/NutShell.fir.opt.mlir 26476:11]
    connect io.out.bits, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 26481:7]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26483:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 26484:7]
    connect _WIRE_1__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 26485:7]
    connect _WIRE_1__bore_0, _WIRE_1 @[build/NutShell.fir.opt.mlir 26486:7]
    connect _WIRE_1__bore_1, _WIRE_1 @[build/NutShell.fir.opt.mlir 26487:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 26488:7]
    connect _WIRE__bore_0, _WIRE @[build/NutShell.fir.opt.mlir 26489:7]

  extmodule LogPerfHelper_18 : @[build/NutShell.fir.opt.mlir 26491:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 26491:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 26491:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 26491:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 26491:141]
    defname = LogPerfHelper

  extmodule DifftestTrapEvent : @[build/NutShell.fir.opt.mlir 26492:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26492:52]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 26492:77]
    input io : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 26492:105]
    defname = DifftestTrapEvent

  module DummyDPICWrapper_3 : @[build/NutShell.fir.opt.mlir 26493:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26493:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26493:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 26493:102]
    input io : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 26493:148]

    inst dpic of DifftestTrapEvent @[build/NutShell.fir.opt.mlir 26502:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 26510:7]
    node _dpic_enable_T = and(UInt<1>(1), control.enable) @[build/NutShell.fir.opt.mlir 26513:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 26514:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 26515:7]
    connect dpic.io.pc, io.pc @[build/NutShell.fir.opt.mlir 26516:7]
    connect dpic.io.code, io.code @[build/NutShell.fir.opt.mlir 26517:7]
    connect dpic.io.hasWFI, io.hasWFI @[build/NutShell.fir.opt.mlir 26518:7]
    connect dpic.io.instrCnt, io.instrCnt @[build/NutShell.fir.opt.mlir 26519:7]
    connect dpic.io.cycleCnt, io.cycleCnt @[build/NutShell.fir.opt.mlir 26520:7]
    connect dpic.io.hasTrap, io.hasTrap @[build/NutShell.fir.opt.mlir 26521:7]

  module EXU : @[build/NutShell.fir.opt.mlir 26523:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 26523:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 26523:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] } }, flip flush : UInt<1>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, forward : { valid : UInt<1>, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, fuType : UInt<3> }, flip memMMU : { imem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, dmem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> } } } @[build/NutShell.fir.opt.mlir 26523:88]
    input csr_meip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2293]
    output lsu__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2331]
    output csr__WIRE__bore : UInt @[build/NutShell.fir.opt.mlir 26523:2370]
    output csr__WIRE__bore_0 : UInt @[build/NutShell.fir.opt.mlir 26523:2406]
    input csr_mtip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2443]
    input csr_perfCntCond_53__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2480]
    input lsu_lsuMMIO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2527]
    output alu_REG__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 26523:2568]
    input lsu_lsExecUnit_dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2756]
    input lsu_dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2810]
    input csr_msip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2853]
    input csr_perfCntCond_3__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2890]
    input csr_perfCntCond_4__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2936]
    input lsu_lsExecUnit_dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:2982]
    input lsu_dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3036]
    input csr_perfCntCond_2__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3079]
    output csr_satp__bore : UInt<64> @[build/NutShell.fir.opt.mlir 26523:3126]
    output csr_satp__bore_0 : UInt<64> @[build/NutShell.fir.opt.mlir 26523:3165]
    output mou__WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3206]
    output mou__WIRE_1__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3247]
    output mou__WIRE_1__bore_1 : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3290]
    input csr_perfCntCond_50__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3332]
    input csr_perfCntCond_49__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3379]
    input lsu_lsExecUnit_dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3426]
    input lsu_dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3476]
    output mou__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3516]
    output mou__WIRE__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3555]
    input csr_perfCntCond_15__bore : UInt<1> @[build/NutShell.fir.opt.mlir 26523:3595]

    node src1 = bits(io.in.bits.data.src1, 63, 0) @[build/NutShell.fir.opt.mlir 26688:15]
    node src2 = bits(io.in.bits.data.src2, 63, 0) @[build/NutShell.fir.opt.mlir 26690:15]
    wire fuValids : UInt<1>[5] @[build/NutShell.fir.opt.mlir 26691:19]
    node _fuValids_0_T = eq(io.in.bits.ctrl.fuType, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26699:24]
    node _fuValids_0_T_1 = and(_fuValids_0_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26701:26]
    node _fuValids_0_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26703:26]
    node _fuValids_0_T_3 = and(_fuValids_0_T_1, _fuValids_0_T_2) @[build/NutShell.fir.opt.mlir 26705:26]
    connect fuValids[0], _fuValids_0_T_3 @[build/NutShell.fir.opt.mlir 26706:7]
    node _fuValids_1_T = eq(io.in.bits.ctrl.fuType, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 26709:24]
    node _fuValids_1_T_1 = and(_fuValids_1_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26711:26]
    node _fuValids_1_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26713:26]
    node _fuValids_1_T_3 = and(_fuValids_1_T_1, _fuValids_1_T_2) @[build/NutShell.fir.opt.mlir 26715:26]
    connect fuValids[1], _fuValids_1_T_3 @[build/NutShell.fir.opt.mlir 26716:7]
    node _fuValids_2_T = eq(io.in.bits.ctrl.fuType, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 26719:24]
    node _fuValids_2_T_1 = and(_fuValids_2_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26721:26]
    node _fuValids_2_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26723:26]
    node _fuValids_2_T_3 = and(_fuValids_2_T_1, _fuValids_2_T_2) @[build/NutShell.fir.opt.mlir 26725:26]
    connect fuValids[2], _fuValids_2_T_3 @[build/NutShell.fir.opt.mlir 26726:7]
    node _fuValids_3_T = eq(io.in.bits.ctrl.fuType, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 26729:24]
    node _fuValids_3_T_1 = and(_fuValids_3_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26731:26]
    node _fuValids_3_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26733:26]
    node _fuValids_3_T_3 = and(_fuValids_3_T_1, _fuValids_3_T_2) @[build/NutShell.fir.opt.mlir 26735:26]
    connect fuValids[3], _fuValids_3_T_3 @[build/NutShell.fir.opt.mlir 26736:7]
    node _fuValids_4_T = eq(io.in.bits.ctrl.fuType, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 26739:24]
    node _fuValids_4_T_1 = and(_fuValids_4_T, io.in.valid) @[build/NutShell.fir.opt.mlir 26741:26]
    node _fuValids_4_T_2 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26743:26]
    node _fuValids_4_T_3 = and(_fuValids_4_T_1, _fuValids_4_T_2) @[build/NutShell.fir.opt.mlir 26745:26]
    connect fuValids[4], _fuValids_4_T_3 @[build/NutShell.fir.opt.mlir 26746:7]
    inst alu of ALU @[build/NutShell.fir.opt.mlir 26747:386]
    connect alu.clock, clock @[build/NutShell.fir.opt.mlir 26804:7]
    connect alu.reset, reset @[build/NutShell.fir.opt.mlir 26805:7]
    connect alu.io.in.valid, fuValids[0] @[build/NutShell.fir.opt.mlir 26806:7]
    connect alu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26807:7]
    connect alu.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 26808:7]
    connect alu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26809:7]
    connect alu.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 26810:7]
    connect alu.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 26811:7]
    connect alu.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 26812:7]
    connect alu.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 26813:7]
    connect alu.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 26814:7]
    connect alu.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 26815:7]
    connect alu.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 26816:7]
    connect alu.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 26817:7]
    connect alu.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 26818:7]
    connect alu.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 26819:7]
    connect alu.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 26820:7]
    connect alu.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 26821:7]
    connect alu.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 26822:7]
    connect alu.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 26823:7]
    connect alu.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 26824:7]
    connect alu.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 26825:7]
    connect alu.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 26826:7]
    connect alu.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 26827:7]
    connect alu.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 26828:7]
    connect alu.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 26829:7]
    connect alu.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 26830:7]
    connect alu.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 26831:7]
    connect alu.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 26832:7]
    connect alu.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 26833:7]
    connect alu.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 26834:7]
    connect alu.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 26835:7]
    connect alu.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 26836:7]
    connect alu.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 26837:7]
    connect alu.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 26838:7]
    connect alu.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 26839:7]
    connect alu.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 26840:7]
    connect alu.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 26841:7]
    connect alu.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 26842:7]
    connect alu.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 26843:7]
    connect alu.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 26844:7]
    connect alu.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 26845:7]
    connect alu.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 26846:7]
    connect alu.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 26847:7]
    connect alu.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 26848:7]
    connect alu.io.offset, io.in.bits.data.imm @[build/NutShell.fir.opt.mlir 26849:7]
    connect alu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26851:7]
    inst lsu of UnpipelinedLSU @[build/NutShell.fir.opt.mlir 26852:506]
    connect lsu.clock, clock @[build/NutShell.fir.opt.mlir 26878:7]
    connect lsu.reset, reset @[build/NutShell.fir.opt.mlir 26879:7]
    wire lsuTlbPF : UInt<1> @[build/NutShell.fir.opt.mlir 26880:19]
    connect lsuTlbPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 26882:7]
    connect lsu.io.in.valid, fuValids[1] @[build/NutShell.fir.opt.mlir 26883:7]
    connect lsu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26884:7]
    connect lsu.io.in.bits.src2, io.in.bits.data.imm @[build/NutShell.fir.opt.mlir 26885:7]
    connect lsu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26886:7]
    connect lsuTlbPF, lsu.io.dtlbPF @[build/NutShell.fir.opt.mlir 26887:7]
    connect lsu.io.wdata, src2 @[build/NutShell.fir.opt.mlir 26888:7]
    connect lsu.io.instr, tail(io.in.bits.cf.instr, 32) @[build/NutShell.fir.opt.mlir 26890:7]
    node _io_out_bits_isMMIO_T = xor(io.in.bits.cf.pc, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 26893:32]
    node _io_out_bits_isMMIO_T_1 = bits(_io_out_bits_isMMIO_T, 31, 28) @[build/NutShell.fir.opt.mlir 26895:34]
    node _io_out_bits_isMMIO_T_2 = eq(_io_out_bits_isMMIO_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26897:34]
    node _io_out_bits_isMMIO_T_3 = xor(io.in.bits.cf.pc, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 26900:34]
    node _io_out_bits_isMMIO_T_4 = bits(_io_out_bits_isMMIO_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 26902:34]
    node _io_out_bits_isMMIO_T_5 = eq(_io_out_bits_isMMIO_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 26904:34]
    node _io_out_bits_isMMIO_T_6 = or(_io_out_bits_isMMIO_T_2, _io_out_bits_isMMIO_T_5) @[build/NutShell.fir.opt.mlir 26906:34]
    node _io_out_bits_isMMIO_T_7 = and(_io_out_bits_isMMIO_T_6, io.out.valid) @[build/NutShell.fir.opt.mlir 26908:34]
    node _io_out_bits_isMMIO_T_8 = or(lsu.io.isMMIO, _io_out_bits_isMMIO_T_7) @[build/NutShell.fir.opt.mlir 26910:34]
    connect io.out.bits.isMMIO, _io_out_bits_isMMIO_T_8 @[build/NutShell.fir.opt.mlir 26911:7]
    connect io.dmem.resp.ready, lsu.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 26912:7]
    connect lsu.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 26913:7]
    connect lsu.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 26914:7]
    connect io.dmem.req.bits, lsu.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 26915:7]
    connect io.dmem.req.valid, lsu.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 26916:7]
    connect lsu.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 26917:7]
    connect lsu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26919:7]
    inst mdu of MDU @[build/NutShell.fir.opt.mlir 26920:59]
    connect mdu.clock, clock @[build/NutShell.fir.opt.mlir 26931:7]
    connect mdu.reset, reset @[build/NutShell.fir.opt.mlir 26932:7]
    connect mdu.io.in.valid, fuValids[2] @[build/NutShell.fir.opt.mlir 26933:7]
    connect mdu.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 26934:7]
    connect mdu.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 26935:7]
    connect mdu.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 26936:7]
    connect mdu.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 26938:7]
    inst csr of CSR @[build/NutShell.fir.opt.mlir 26939:1275]
    connect csr.clock, clock @[build/NutShell.fir.opt.mlir 27013:7]
    connect csr.reset, reset @[build/NutShell.fir.opt.mlir 27014:7]
    connect csr.io.in.valid, fuValids[3] @[build/NutShell.fir.opt.mlir 27015:7]
    connect csr.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 27016:7]
    connect csr.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 27017:7]
    connect csr.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 27018:7]
    connect csr.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 27019:7]
    connect csr.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27020:7]
    connect csr.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 27021:7]
    connect csr.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 27022:7]
    connect csr.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 27023:7]
    connect csr.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 27024:7]
    connect csr.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 27025:7]
    connect csr.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 27026:7]
    connect csr.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 27027:7]
    connect csr.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 27028:7]
    connect csr.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 27029:7]
    connect csr.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 27030:7]
    connect csr.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 27031:7]
    connect csr.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 27032:7]
    connect csr.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 27033:7]
    connect csr.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 27034:7]
    connect csr.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 27035:7]
    connect csr.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 27036:7]
    connect csr.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 27037:7]
    connect csr.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 27038:7]
    connect csr.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 27039:7]
    connect csr.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 27040:7]
    connect csr.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 27041:7]
    connect csr.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 27042:7]
    connect csr.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 27043:7]
    connect csr.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 27044:7]
    connect csr.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 27045:7]
    connect csr.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 27046:7]
    connect csr.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 27047:7]
    connect csr.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 27048:7]
    connect csr.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 27049:7]
    connect csr.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 27050:7]
    connect csr.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 27051:7]
    connect csr.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 27052:7]
    connect csr.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 27053:7]
    connect csr.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 27054:7]
    connect csr.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 27055:7]
    connect csr.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 27056:7]
    connect csr.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 27057:7]
    connect csr.io.cfIn.exceptionVec[4], lsu.io.loadAddrMisaligned @[build/NutShell.fir.opt.mlir 27058:7]
    connect csr.io.cfIn.exceptionVec[6], lsu.io.storeAddrMisaligned @[build/NutShell.fir.opt.mlir 27059:7]
    node _csr_io_instrValid_T = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27061:31]
    node _csr_io_instrValid_T_1 = and(io.in.valid, _csr_io_instrValid_T) @[build/NutShell.fir.opt.mlir 27063:33]
    connect csr.io.instrValid, _csr_io_instrValid_T_1 @[build/NutShell.fir.opt.mlir 27064:7]
    connect csr.io.isBackendException, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27066:7]
    connect io.out.bits.intrNO, csr.io.intrNO @[build/NutShell.fir.opt.mlir 27067:7]
    connect csr.io.isBackendException, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27069:7]
    connect csr.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27071:7]
    connect io.memMMU.imem.privilegeMode, csr.io.imemMMU.privilegeMode @[build/NutShell.fir.opt.mlir 27072:7]
    connect io.memMMU.imem.status_sum, csr.io.imemMMU.status_sum @[build/NutShell.fir.opt.mlir 27073:7]
    connect io.memMMU.imem.status_mxr, csr.io.imemMMU.status_mxr @[build/NutShell.fir.opt.mlir 27074:7]
    connect csr.io.imemMMU.loadPF, io.memMMU.imem.loadPF @[build/NutShell.fir.opt.mlir 27075:7]
    connect csr.io.imemMMU.storePF, io.memMMU.imem.storePF @[build/NutShell.fir.opt.mlir 27076:7]
    connect csr.io.imemMMU.addr, io.memMMU.imem.addr @[build/NutShell.fir.opt.mlir 27077:7]
    connect io.memMMU.dmem.privilegeMode, csr.io.dmemMMU.privilegeMode @[build/NutShell.fir.opt.mlir 27078:7]
    connect io.memMMU.dmem.status_sum, csr.io.dmemMMU.status_sum @[build/NutShell.fir.opt.mlir 27079:7]
    connect io.memMMU.dmem.status_mxr, csr.io.dmemMMU.status_mxr @[build/NutShell.fir.opt.mlir 27080:7]
    connect csr.io.dmemMMU.loadPF, io.memMMU.dmem.loadPF @[build/NutShell.fir.opt.mlir 27081:7]
    connect csr.io.dmemMMU.storePF, io.memMMU.dmem.storePF @[build/NutShell.fir.opt.mlir 27082:7]
    connect csr.io.dmemMMU.addr, io.memMMU.dmem.addr @[build/NutShell.fir.opt.mlir 27083:7]
    inst mou of MOU @[build/NutShell.fir.opt.mlir 27084:158]
    connect mou.clock, clock @[build/NutShell.fir.opt.mlir 27138:7]
    connect mou.reset, reset @[build/NutShell.fir.opt.mlir 27139:7]
    connect mou.io.in.valid, fuValids[4] @[build/NutShell.fir.opt.mlir 27140:7]
    connect mou.io.in.bits.src1, src1 @[build/NutShell.fir.opt.mlir 27141:7]
    connect mou.io.in.bits.src2, src2 @[build/NutShell.fir.opt.mlir 27142:7]
    connect mou.io.in.bits.func, io.in.bits.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 27143:7]
    connect mou.io.cfIn.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 27144:7]
    connect mou.io.cfIn.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27145:7]
    connect mou.io.cfIn.crossPageIPFFix, io.in.bits.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 27146:7]
    connect mou.io.cfIn.isRVC, io.in.bits.cf.isRVC @[build/NutShell.fir.opt.mlir 27147:7]
    connect mou.io.cfIn.brIdx, io.in.bits.cf.brIdx @[build/NutShell.fir.opt.mlir 27148:7]
    connect mou.io.cfIn.intrVec[0], io.in.bits.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 27149:7]
    connect mou.io.cfIn.intrVec[1], io.in.bits.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 27150:7]
    connect mou.io.cfIn.intrVec[2], io.in.bits.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 27151:7]
    connect mou.io.cfIn.intrVec[3], io.in.bits.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 27152:7]
    connect mou.io.cfIn.intrVec[4], io.in.bits.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 27153:7]
    connect mou.io.cfIn.intrVec[5], io.in.bits.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 27154:7]
    connect mou.io.cfIn.intrVec[6], io.in.bits.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 27155:7]
    connect mou.io.cfIn.intrVec[7], io.in.bits.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 27156:7]
    connect mou.io.cfIn.intrVec[8], io.in.bits.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 27157:7]
    connect mou.io.cfIn.intrVec[9], io.in.bits.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 27158:7]
    connect mou.io.cfIn.intrVec[10], io.in.bits.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 27159:7]
    connect mou.io.cfIn.intrVec[11], io.in.bits.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 27160:7]
    connect mou.io.cfIn.exceptionVec[0], io.in.bits.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 27161:7]
    connect mou.io.cfIn.exceptionVec[1], io.in.bits.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 27162:7]
    connect mou.io.cfIn.exceptionVec[2], io.in.bits.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 27163:7]
    connect mou.io.cfIn.exceptionVec[3], io.in.bits.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 27164:7]
    connect mou.io.cfIn.exceptionVec[4], io.in.bits.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 27165:7]
    connect mou.io.cfIn.exceptionVec[5], io.in.bits.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 27166:7]
    connect mou.io.cfIn.exceptionVec[6], io.in.bits.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 27167:7]
    connect mou.io.cfIn.exceptionVec[7], io.in.bits.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 27168:7]
    connect mou.io.cfIn.exceptionVec[8], io.in.bits.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 27169:7]
    connect mou.io.cfIn.exceptionVec[9], io.in.bits.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 27170:7]
    connect mou.io.cfIn.exceptionVec[10], io.in.bits.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 27171:7]
    connect mou.io.cfIn.exceptionVec[11], io.in.bits.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 27172:7]
    connect mou.io.cfIn.exceptionVec[12], io.in.bits.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 27173:7]
    connect mou.io.cfIn.exceptionVec[13], io.in.bits.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 27174:7]
    connect mou.io.cfIn.exceptionVec[14], io.in.bits.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 27175:7]
    connect mou.io.cfIn.exceptionVec[15], io.in.bits.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 27176:7]
    connect mou.io.cfIn.redirect.valid, io.in.bits.cf.redirect.valid @[build/NutShell.fir.opt.mlir 27177:7]
    connect mou.io.cfIn.redirect.rtype, io.in.bits.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 27178:7]
    connect mou.io.cfIn.redirect.target, io.in.bits.cf.redirect.target @[build/NutShell.fir.opt.mlir 27179:7]
    connect mou.io.cfIn.pnpc, io.in.bits.cf.pnpc @[build/NutShell.fir.opt.mlir 27180:7]
    connect mou.io.cfIn.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 27181:7]
    connect mou.io.cfIn.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 27182:7]
    connect mou.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27184:7]
    invalidate io.out.bits.decode.data.imm @[build/NutShell.fir.opt.mlir 27186:7]
    invalidate io.out.bits.decode.data.src2 @[build/NutShell.fir.opt.mlir 27188:7]
    invalidate io.out.bits.decode.data.src1 @[build/NutShell.fir.opt.mlir 27190:7]
    invalidate io.out.bits.decode.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 27192:7]
    invalidate io.out.bits.decode.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 27194:7]
    invalidate io.out.bits.decode.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 27196:7]
    invalidate io.out.bits.decode.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 27198:7]
    invalidate io.out.bits.decode.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 27200:7]
    invalidate io.out.bits.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27202:7]
    invalidate io.out.bits.decode.ctrl.rfWen @[build/NutShell.fir.opt.mlir 27204:7]
    invalidate io.out.bits.decode.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 27206:7]
    invalidate io.out.bits.decode.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 27208:7]
    invalidate io.out.bits.decode.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 27210:7]
    invalidate io.out.bits.decode.ctrl.fuType @[build/NutShell.fir.opt.mlir 27212:7]
    invalidate io.out.bits.decode.ctrl.src2Type @[build/NutShell.fir.opt.mlir 27214:7]
    invalidate io.out.bits.decode.ctrl.src1Type @[build/NutShell.fir.opt.mlir 27216:7]
    invalidate io.out.bits.decode.cf.isBranch @[build/NutShell.fir.opt.mlir 27218:7]
    invalidate io.out.bits.decode.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27220:7]
    invalidate io.out.bits.decode.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 27222:7]
    invalidate io.out.bits.decode.cf.isRVC @[build/NutShell.fir.opt.mlir 27224:7]
    invalidate io.out.bits.decode.cf.brIdx @[build/NutShell.fir.opt.mlir 27226:7]
    invalidate io.out.bits.decode.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 27228:7]
    invalidate io.out.bits.decode.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 27230:7]
    invalidate io.out.bits.decode.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 27232:7]
    invalidate io.out.bits.decode.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 27234:7]
    invalidate io.out.bits.decode.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 27236:7]
    invalidate io.out.bits.decode.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 27238:7]
    invalidate io.out.bits.decode.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 27240:7]
    invalidate io.out.bits.decode.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 27242:7]
    invalidate io.out.bits.decode.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 27244:7]
    invalidate io.out.bits.decode.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 27246:7]
    invalidate io.out.bits.decode.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 27248:7]
    invalidate io.out.bits.decode.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 27250:7]
    invalidate io.out.bits.decode.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 27252:7]
    invalidate io.out.bits.decode.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 27254:7]
    invalidate io.out.bits.decode.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 27256:7]
    invalidate io.out.bits.decode.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 27258:7]
    invalidate io.out.bits.decode.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 27260:7]
    invalidate io.out.bits.decode.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 27262:7]
    invalidate io.out.bits.decode.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 27264:7]
    invalidate io.out.bits.decode.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 27266:7]
    invalidate io.out.bits.decode.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 27268:7]
    invalidate io.out.bits.decode.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 27270:7]
    invalidate io.out.bits.decode.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 27272:7]
    invalidate io.out.bits.decode.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 27274:7]
    invalidate io.out.bits.decode.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 27276:7]
    invalidate io.out.bits.decode.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 27278:7]
    invalidate io.out.bits.decode.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 27280:7]
    invalidate io.out.bits.decode.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 27282:7]
    invalidate io.out.bits.decode.cf.redirect.valid @[build/NutShell.fir.opt.mlir 27284:7]
    invalidate io.out.bits.decode.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 27286:7]
    invalidate io.out.bits.decode.cf.redirect.target @[build/NutShell.fir.opt.mlir 27288:7]
    invalidate io.out.bits.decode.cf.pnpc @[build/NutShell.fir.opt.mlir 27290:7]
    invalidate io.out.bits.decode.cf.pc @[build/NutShell.fir.opt.mlir 27292:7]
    invalidate io.out.bits.decode.cf.instr @[build/NutShell.fir.opt.mlir 27294:7]
    node _io_out_bits_decode_ctrl_rfWen_T = eq(lsuTlbPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27296:43]
    node _io_out_bits_decode_ctrl_rfWen_T_1 = eq(lsu.io.loadAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27298:45]
    node _io_out_bits_decode_ctrl_rfWen_T_2 = and(_io_out_bits_decode_ctrl_rfWen_T, _io_out_bits_decode_ctrl_rfWen_T_1) @[build/NutShell.fir.opt.mlir 27300:45]
    node _io_out_bits_decode_ctrl_rfWen_T_3 = eq(lsu.io.storeAddrMisaligned, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27302:45]
    node _io_out_bits_decode_ctrl_rfWen_T_4 = and(_io_out_bits_decode_ctrl_rfWen_T_2, _io_out_bits_decode_ctrl_rfWen_T_3) @[build/NutShell.fir.opt.mlir 27304:45]
    node _io_out_bits_decode_ctrl_rfWen_T_5 = eq(fuValids[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27306:45]
    node _io_out_bits_decode_ctrl_rfWen_T_6 = or(_io_out_bits_decode_ctrl_rfWen_T_4, _io_out_bits_decode_ctrl_rfWen_T_5) @[build/NutShell.fir.opt.mlir 27308:45]
    node _io_out_bits_decode_ctrl_rfWen_T_7 = and(io.in.bits.ctrl.rfWen, _io_out_bits_decode_ctrl_rfWen_T_6) @[build/NutShell.fir.opt.mlir 27310:45]
    node _io_out_bits_decode_ctrl_rfWen_T_8 = and(csr.io.wenFix, fuValids[3]) @[build/NutShell.fir.opt.mlir 27312:45]
    node _io_out_bits_decode_ctrl_rfWen_T_9 = eq(_io_out_bits_decode_ctrl_rfWen_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27314:45]
    node _io_out_bits_decode_ctrl_rfWen_T_10 = and(_io_out_bits_decode_ctrl_rfWen_T_7, _io_out_bits_decode_ctrl_rfWen_T_9) @[build/NutShell.fir.opt.mlir 27316:46]
    connect io.out.bits.decode.ctrl.rfWen, _io_out_bits_decode_ctrl_rfWen_T_10 @[build/NutShell.fir.opt.mlir 27317:7]
    connect io.out.bits.decode.ctrl.rfDest, io.in.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27318:7]
    connect io.out.bits.decode.ctrl.fuType, io.in.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 27319:7]
    connect io.out.bits.decode.cf.pc, io.in.bits.cf.pc @[build/NutShell.fir.opt.mlir 27320:7]
    connect io.out.bits.decode.cf.instr, io.in.bits.cf.instr @[build/NutShell.fir.opt.mlir 27321:7]
    connect io.out.bits.decode.cf.runahead_checkpoint_id, io.in.bits.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 27322:7]
    connect io.out.bits.decode.cf.isBranch, io.in.bits.cf.isBranch @[build/NutShell.fir.opt.mlir 27323:7]
    node _io_out_bits_decode_cf_redirect_T = mux(csr.io.redirect.valid, csr.io.redirect, alu.io.redirect) @[build/NutShell.fir.opt.mlir 27325:44]
    node _io_out_bits_decode_cf_redirect_T_1 = mux(mou.io.redirect.valid, mou.io.redirect, _io_out_bits_decode_cf_redirect_T) @[build/NutShell.fir.opt.mlir 27327:46]
    connect io.out.bits.decode.cf.redirect, _io_out_bits_decode_cf_redirect_T_1 @[build/NutShell.fir.opt.mlir 27328:7]
    node _T = or(mou.io.redirect.valid, csr.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27330:13]
    node _T_1 = or(_T, alu.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27332:15]
    inst LogPerfHelper of LogPerfHelper_18 @[build/NutShell.fir.opt.mlir 27333:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 27334:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 27339:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 27340:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 27341:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 27342:7]
    node _T_2 = and(_T_1, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27344:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 27345:7]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27347:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27349:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 27350:9]
        skip @[build/NutShell.fir.opt.mlir 27351:11]
      node _T_5 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27354:17]
      node _T_6 = eq(_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27356:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 27357:9]
        skip @[build/NutShell.fir.opt.mlir 27358:11]
    node _T_7 = or(mou.io.redirect.valid, csr.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27362:15]
    node _T_8 = or(_T_7, alu.io.redirect.valid) @[build/NutShell.fir.opt.mlir 27364:15]
    node _T_9 = and(_T_8, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27366:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 27367:7]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27369:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27371:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 27372:9]
        skip @[build/NutShell.fir.opt.mlir 27373:11]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27376:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27378:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 27379:9]
        skip @[build/NutShell.fir.opt.mlir 27380:11]
    node _io_out_valid_T = eq(UInt<1>(1), io.in.bits.ctrl.fuType) @[build/NutShell.fir.opt.mlir 27384:26]
    node _io_out_valid_T_1 = mux(_io_out_valid_T, lsu.io.out.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 27386:28]
    node _io_out_valid_T_2 = eq(UInt<2>(2), io.in.bits.ctrl.fuType) @[build/NutShell.fir.opt.mlir 27388:28]
    node _io_out_valid_T_3 = mux(_io_out_valid_T_2, mdu.io.out.valid, _io_out_valid_T_1) @[build/NutShell.fir.opt.mlir 27390:28]
    node _io_out_valid_T_4 = and(io.in.valid, _io_out_valid_T_3) @[build/NutShell.fir.opt.mlir 27392:28]
    connect io.out.valid, _io_out_valid_T_4 @[build/NutShell.fir.opt.mlir 27393:7]
    connect io.out.bits.commits[0], alu.io.out.bits @[build/NutShell.fir.opt.mlir 27394:7]
    connect io.out.bits.commits[1], lsu.io.out.bits @[build/NutShell.fir.opt.mlir 27395:7]
    connect io.out.bits.commits[3], csr.io.out.bits @[build/NutShell.fir.opt.mlir 27396:7]
    connect io.out.bits.commits[2], mdu.io.out.bits @[build/NutShell.fir.opt.mlir 27397:7]
    connect io.out.bits.commits[4], pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 27400:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27402:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 27404:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 27406:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 27407:7]
    connect io.forward.valid, io.in.valid @[build/NutShell.fir.opt.mlir 27408:7]
    connect io.forward.wb.rfWen, io.in.bits.ctrl.rfWen @[build/NutShell.fir.opt.mlir 27409:7]
    connect io.forward.wb.rfDest, io.in.bits.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27410:7]
    node _io_forward_wb_rfData_T = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27412:34]
    node _io_forward_wb_rfData_T_1 = mux(_io_forward_wb_rfData_T, alu.io.out.bits, lsu.io.out.bits) @[build/NutShell.fir.opt.mlir 27414:36]
    connect io.forward.wb.rfData, _io_forward_wb_rfData_T_1 @[build/NutShell.fir.opt.mlir 27415:7]
    connect io.forward.fuType, io.in.bits.ctrl.fuType @[build/NutShell.fir.opt.mlir 27416:7]
    node isBru = bits(io.in.bits.ctrl.fuOpType, 4, 4) @[build/NutShell.fir.opt.mlir 27418:16]
    node _T_14 = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27420:16]
    node _T_15 = eq(isBru, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27422:16]
    node _T_16 = and(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 27424:16]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 27425:16]
    connect _WIRE, _T_16 @[build/NutShell.fir.opt.mlir 27426:7]
    node _T_17 = and(alu.io.out.ready, alu.io.out.valid) @[build/NutShell.fir.opt.mlir 27428:16]
    node _T_18 = and(_T_17, isBru) @[build/NutShell.fir.opt.mlir 27430:16]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 27431:18]
    connect _WIRE_1, _T_18 @[build/NutShell.fir.opt.mlir 27432:7]
    node _T_19 = and(lsu.io.out.ready, lsu.io.out.valid) @[build/NutShell.fir.opt.mlir 27434:16]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 27435:18]
    connect _WIRE_2, _T_19 @[build/NutShell.fir.opt.mlir 27436:7]
    node _T_20 = and(mdu.io.out.ready, mdu.io.out.valid) @[build/NutShell.fir.opt.mlir 27438:16]
    wire _WIRE_3 : UInt<1> @[build/NutShell.fir.opt.mlir 27439:18]
    connect _WIRE_3, _T_20 @[build/NutShell.fir.opt.mlir 27440:7]
    node _T_21 = and(csr.io.out.ready, csr.io.out.valid) @[build/NutShell.fir.opt.mlir 27442:16]
    wire _WIRE_4 : UInt<1> @[build/NutShell.fir.opt.mlir 27443:18]
    connect _WIRE_4, _T_21 @[build/NutShell.fir.opt.mlir 27444:7]
    wire cycleCnt : UInt<64> @[build/NutShell.fir.opt.mlir 27445:19]
    connect cycleCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27448:7]
    wire instrCnt : UInt<64> @[build/NutShell.fir.opt.mlir 27449:19]
    connect instrCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27451:7]
    node _nutcoretrap_T = and(io.in.bits.ctrl.isNutCoreTrap, io.in.valid) @[build/NutShell.fir.opt.mlir 27453:25]
    wire nutcoretrap : UInt<1> @[build/NutShell.fir.opt.mlir 27454:22]
    connect nutcoretrap, _nutcoretrap_T @[build/NutShell.fir.opt.mlir 27455:7]
    wire difftest : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27456:19]
    wire _difftest_sink_bundle_WIRE : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27464:37]
    connect _difftest_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27474:7]
    connect _difftest_sink_bundle_WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27476:7]
    connect _difftest_sink_bundle_WIRE.code, UInt<3>(0) @[build/NutShell.fir.opt.mlir 27479:7]
    connect _difftest_sink_bundle_WIRE.hasWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27481:7]
    connect _difftest_sink_bundle_WIRE.instrCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27483:7]
    connect _difftest_sink_bundle_WIRE.cycleCnt, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27485:7]
    connect _difftest_sink_bundle_WIRE.hasTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27487:7]
    wire difftest_sink : { hasTrap : UInt<1>, cycleCnt : UInt<64>, instrCnt : UInt<64>, hasWFI : UInt<1>, code : UInt<3>, pc : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27488:24]
    connect difftest_sink, _difftest_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 27496:7]
    wire _difftest_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27497:38]
    connect _difftest_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27500:7]
    wire difftest_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27501:32]
    connect difftest_sink_control, _difftest_sink_control_WIRE @[build/NutShell.fir.opt.mlir 27503:7]
    connect difftest_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27505:7]
    inst difftest_sink_module of DummyDPICWrapper_3 @[build/NutShell.fir.opt.mlir 27506:123]
    connect difftest_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 27515:7]
    connect difftest_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 27516:7]
    connect difftest_sink_module.control.enable, difftest_sink_control.enable @[build/NutShell.fir.opt.mlir 27517:7]
    connect difftest_sink_module.io.coreid, difftest_sink.coreid @[build/NutShell.fir.opt.mlir 27518:7]
    connect difftest_sink_module.io.pc, difftest_sink.pc @[build/NutShell.fir.opt.mlir 27519:7]
    connect difftest_sink_module.io.code, difftest_sink.code @[build/NutShell.fir.opt.mlir 27520:7]
    connect difftest_sink_module.io.hasWFI, difftest_sink.hasWFI @[build/NutShell.fir.opt.mlir 27521:7]
    connect difftest_sink_module.io.instrCnt, difftest_sink.instrCnt @[build/NutShell.fir.opt.mlir 27522:7]
    connect difftest_sink_module.io.cycleCnt, difftest_sink.cycleCnt @[build/NutShell.fir.opt.mlir 27523:7]
    connect difftest_sink_module.io.hasTrap, difftest_sink.hasTrap @[build/NutShell.fir.opt.mlir 27524:7]
    connect difftest_sink, difftest @[build/NutShell.fir.opt.mlir 27525:7]
    connect difftest_sink.coreid, difftest.coreid @[build/NutShell.fir.opt.mlir 27526:7]
    connect difftest.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 27529:7]
    connect difftest.hasTrap, nutcoretrap @[build/NutShell.fir.opt.mlir 27530:7]
    connect difftest.code, tail(io.in.bits.data.src1, 61) @[build/NutShell.fir.opt.mlir 27532:7]
    connect difftest.pc, pad(io.in.bits.cf.pc, 64) @[build/NutShell.fir.opt.mlir 27534:7]
    connect difftest.cycleCnt, cycleCnt @[build/NutShell.fir.opt.mlir 27535:7]
    connect difftest.instrCnt, instrCnt @[build/NutShell.fir.opt.mlir 27536:7]
    connect difftest.hasWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27538:7]
    connect csr.meip__bore, csr_meip__bore @[build/NutShell.fir.opt.mlir 27539:7]
    connect lsu__WIRE__bore, lsu._WIRE__bore @[build/NutShell.fir.opt.mlir 27540:7]
    connect csr__WIRE__bore, csr._WIRE__bore @[build/NutShell.fir.opt.mlir 27541:7]
    connect csr__WIRE__bore_0, csr._WIRE__bore_0 @[build/NutShell.fir.opt.mlir 27542:7]
    connect csr.mtip__bore, csr_mtip__bore @[build/NutShell.fir.opt.mlir 27543:7]
    connect csr.perfCntCond_53__bore, csr_perfCntCond_53__bore @[build/NutShell.fir.opt.mlir 27544:7]
    connect lsu.lsuMMIO__bore, lsu_lsuMMIO__bore @[build/NutShell.fir.opt.mlir 27545:7]
    connect alu_REG__bore, alu.REG__bore @[build/NutShell.fir.opt.mlir 27546:7]
    connect lsu.lsExecUnit_dtlbEnable__bore, lsu_lsExecUnit_dtlbEnable__bore @[build/NutShell.fir.opt.mlir 27547:7]
    connect lsu.dtlbEnable__bore, lsu_dtlbEnable__bore @[build/NutShell.fir.opt.mlir 27548:7]
    connect csr.msip__bore, csr_msip__bore @[build/NutShell.fir.opt.mlir 27549:7]
    connect csr.perfCntCond_3__bore, csr_perfCntCond_3__bore @[build/NutShell.fir.opt.mlir 27550:7]
    connect csr.perfCntCond_4__bore, csr_perfCntCond_4__bore @[build/NutShell.fir.opt.mlir 27551:7]
    connect lsu.lsExecUnit_dtlbFinish__bore, lsu_lsExecUnit_dtlbFinish__bore @[build/NutShell.fir.opt.mlir 27552:7]
    connect lsu.dtlbFinish__bore, lsu_dtlbFinish__bore @[build/NutShell.fir.opt.mlir 27553:7]
    connect csr.perfCntCond_2__bore, csr_perfCntCond_2__bore @[build/NutShell.fir.opt.mlir 27554:7]
    connect csr_satp__bore, csr.satp__bore @[build/NutShell.fir.opt.mlir 27555:7]
    connect csr_satp__bore_0, csr.satp__bore_0 @[build/NutShell.fir.opt.mlir 27556:7]
    connect mou__WIRE_1__bore, mou._WIRE_1__bore @[build/NutShell.fir.opt.mlir 27557:7]
    connect mou__WIRE_1__bore_0, mou._WIRE_1__bore_0 @[build/NutShell.fir.opt.mlir 27558:7]
    connect mou__WIRE_1__bore_1, mou._WIRE_1__bore_1 @[build/NutShell.fir.opt.mlir 27559:7]
    connect csr.perfCntCond_50__bore, csr_perfCntCond_50__bore @[build/NutShell.fir.opt.mlir 27560:7]
    connect csr.perfCntCond_49__bore, csr_perfCntCond_49__bore @[build/NutShell.fir.opt.mlir 27561:7]
    connect lsu.lsExecUnit_dtlbPF__bore, lsu_lsExecUnit_dtlbPF__bore @[build/NutShell.fir.opt.mlir 27562:7]
    connect lsu.dtlbPF__bore, lsu_dtlbPF__bore @[build/NutShell.fir.opt.mlir 27563:7]
    connect mou__WIRE__bore, mou._WIRE__bore @[build/NutShell.fir.opt.mlir 27564:7]
    connect mou__WIRE__bore_0, mou._WIRE__bore_0 @[build/NutShell.fir.opt.mlir 27565:7]
    connect csr.perfCntCond_15__bore, csr_perfCntCond_15__bore @[build/NutShell.fir.opt.mlir 27566:7]
    connect csr.perfCntCond_6__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 27567:7]
    connect csr.perfCntCond_20__bore, alu._WIRE_13__bore @[build/NutShell.fir.opt.mlir 27568:7]
    connect csr.perfCntCond_14__bore, mdu._WIRE__bore @[build/NutShell.fir.opt.mlir 27569:7]
    connect csr.perfCntCond_29__bore, alu._WIRE_7__bore @[build/NutShell.fir.opt.mlir 27570:7]
    connect csr.perfCntCond_7__bore, _WIRE_2 @[build/NutShell.fir.opt.mlir 27571:7]
    connect csr.perfCntCond_28__bore, alu._WIRE_6__bore @[build/NutShell.fir.opt.mlir 27572:7]
    connect csr.lsuAddr__bore, lsu.lsExecUnit_io_in_bits_src1__bore @[build/NutShell.fir.opt.mlir 27573:7]
    connect instrCnt, csr.perfCnts_2__bore @[build/NutShell.fir.opt.mlir 27574:7]
    connect csr.setLr__bore, lsu.setLr__bore @[build/NutShell.fir.opt.mlir 27575:7]
    connect csr.perfCntCond_27__bore, alu._WIRE_5__bore @[build/NutShell.fir.opt.mlir 27576:7]
    connect csr.perfCntCond_19__bore, alu._WIRE_12__bore @[build/NutShell.fir.opt.mlir 27577:7]
    connect csr.perfCntCond_10__bore, lsu.lsExecUnit__WIRE__bore @[build/NutShell.fir.opt.mlir 27578:7]
    connect csr.perfCntCond_26__bore, alu._WIRE_4__bore @[build/NutShell.fir.opt.mlir 27579:7]
    connect csr.perfCntCond_18__bore, alu._WIRE_11__bore @[build/NutShell.fir.opt.mlir 27580:7]
    connect csr.setLrVal__bore, lsu.setLrVal__bore @[build/NutShell.fir.opt.mlir 27581:7]
    connect csr.perfCntCond_51__bore, lsu.lsExecUnit_r__bore @[build/NutShell.fir.opt.mlir 27582:7]
    connect csr.perfCntCond_17__bore, alu._WIRE_2__bore @[build/NutShell.fir.opt.mlir 27583:7]
    connect csr.perfCntCond_32__bore, alu._WIRE_10__bore @[build/NutShell.fir.opt.mlir 27584:7]
    connect csr.nutcoretrap__bore, nutcoretrap @[build/NutShell.fir.opt.mlir 27585:7]
    connect csr.setLrAddr__bore, lsu.setLrAddr__bore @[build/NutShell.fir.opt.mlir 27586:7]
    connect csr.perfCntCond_16__bore, alu._WIRE_1__bore @[build/NutShell.fir.opt.mlir 27587:7]
    connect csr.perfCntCond_31__bore, alu._WIRE_9__bore @[build/NutShell.fir.opt.mlir 27588:7]
    connect csr.perfCntCond_23__bore, alu._WIRE_16__bore @[build/NutShell.fir.opt.mlir 27589:7]
    connect csr.perfCntCond_25__bore, alu._WIRE_3__bore @[build/NutShell.fir.opt.mlir 27590:7]
    connect cycleCnt, csr.perfCnts_0__bore @[build/NutShell.fir.opt.mlir 27591:7]
    connect csr.perfCntCond_52__bore, lsu.lsExecUnit_r_1__bore @[build/NutShell.fir.opt.mlir 27592:7]
    connect csr.perfCntCond_8__bore, _WIRE_3 @[build/NutShell.fir.opt.mlir 27593:7]
    connect csr.perfCntCond_22__bore, alu._WIRE_15__bore @[build/NutShell.fir.opt.mlir 27594:7]
    connect csr.perfCntCond_30__bore, alu._WIRE_8__bore @[build/NutShell.fir.opt.mlir 27595:7]
    connect csr.perfCntCond_11__bore, lsu.lsExecUnit_io_isMMIO__bore @[build/NutShell.fir.opt.mlir 27596:7]
    connect lsu.lr__bore, csr.lr__bore @[build/NutShell.fir.opt.mlir 27597:7]
    connect csr.perfCntCond_5__bore, _WIRE @[build/NutShell.fir.opt.mlir 27598:7]
    connect csr.perfCntCond_9__bore, _WIRE_4 @[build/NutShell.fir.opt.mlir 27599:7]
    connect lsu.lrAddr__bore, csr.lrAddr__bore @[build/NutShell.fir.opt.mlir 27600:7]
    connect csr.perfCntCond_21__bore, alu._WIRE_14__bore @[build/NutShell.fir.opt.mlir 27601:7]

  extmodule LogPerfHelper_19 : @[build/NutShell.fir.opt.mlir 27603:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 27603:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 27603:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 27603:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 27603:141]
    defname = LogPerfHelper

  extmodule DifftestInstrCommit : @[build/NutShell.fir.opt.mlir 27604:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27604:54]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 27604:79]
    input io : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27604:107]
    defname = DifftestInstrCommit

  module DummyDPICWrapper_4 : @[build/NutShell.fir.opt.mlir 27605:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27605:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27605:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27605:102]
    input io : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27605:148]

    inst dpic of DifftestInstrCommit @[build/NutShell.fir.opt.mlir 27626:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 27646:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 27648:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 27649:7]
    connect dpic.io.index, io.index @[build/NutShell.fir.opt.mlir 27650:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 27651:7]
    connect dpic.io.special, io.special @[build/NutShell.fir.opt.mlir 27652:7]
    connect dpic.io.nFused, io.nFused @[build/NutShell.fir.opt.mlir 27653:7]
    connect dpic.io.isStore, io.isStore @[build/NutShell.fir.opt.mlir 27654:7]
    connect dpic.io.isLoad, io.isLoad @[build/NutShell.fir.opt.mlir 27655:7]
    connect dpic.io.sqIdx, io.sqIdx @[build/NutShell.fir.opt.mlir 27656:7]
    connect dpic.io.lqIdx, io.lqIdx @[build/NutShell.fir.opt.mlir 27657:7]
    connect dpic.io.robIdx, io.robIdx @[build/NutShell.fir.opt.mlir 27658:7]
    connect dpic.io.instr, io.instr @[build/NutShell.fir.opt.mlir 27659:7]
    connect dpic.io.pc, io.pc @[build/NutShell.fir.opt.mlir 27660:7]
    connect dpic.io.wdest, io.wdest @[build/NutShell.fir.opt.mlir 27661:7]
    connect dpic.io.wpdest, io.wpdest @[build/NutShell.fir.opt.mlir 27662:7]
    connect dpic.io.vecwen, io.vecwen @[build/NutShell.fir.opt.mlir 27663:7]
    connect dpic.io.fpwen, io.fpwen @[build/NutShell.fir.opt.mlir 27664:7]
    connect dpic.io.rfwen, io.rfwen @[build/NutShell.fir.opt.mlir 27665:7]
    connect dpic.io.isRVC, io.isRVC @[build/NutShell.fir.opt.mlir 27666:7]
    connect dpic.io.skip, io.skip @[build/NutShell.fir.opt.mlir 27667:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 27668:7]

  module DelayReg : @[build/NutShell.fir.opt.mlir 27670:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27670:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27670:66]
    input i : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27670:92]
    output o : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27670:429]

    wire r : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27690:12]
    connect r.index, i.index @[build/NutShell.fir.opt.mlir 27710:7]
    connect r.coreid, i.coreid @[build/NutShell.fir.opt.mlir 27711:7]
    connect r.special, i.special @[build/NutShell.fir.opt.mlir 27712:7]
    connect r.nFused, i.nFused @[build/NutShell.fir.opt.mlir 27713:7]
    connect r.isStore, i.isStore @[build/NutShell.fir.opt.mlir 27714:7]
    connect r.isLoad, i.isLoad @[build/NutShell.fir.opt.mlir 27715:7]
    connect r.sqIdx, i.sqIdx @[build/NutShell.fir.opt.mlir 27716:7]
    connect r.lqIdx, i.lqIdx @[build/NutShell.fir.opt.mlir 27717:7]
    connect r.robIdx, i.robIdx @[build/NutShell.fir.opt.mlir 27718:7]
    connect r.instr, i.instr @[build/NutShell.fir.opt.mlir 27719:7]
    connect r.pc, i.pc @[build/NutShell.fir.opt.mlir 27720:7]
    connect r.wdest, i.wdest @[build/NutShell.fir.opt.mlir 27721:7]
    connect r.wpdest, i.wpdest @[build/NutShell.fir.opt.mlir 27722:7]
    connect r.vecwen, i.vecwen @[build/NutShell.fir.opt.mlir 27723:7]
    connect r.fpwen, i.fpwen @[build/NutShell.fir.opt.mlir 27724:7]
    connect r.rfwen, i.rfwen @[build/NutShell.fir.opt.mlir 27725:7]
    connect r.isRVC, i.isRVC @[build/NutShell.fir.opt.mlir 27726:7]
    connect r.skip, i.skip @[build/NutShell.fir.opt.mlir 27727:7]
    connect r.valid, i.valid @[build/NutShell.fir.opt.mlir 27728:7]
    wire _WIRE : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27729:16]
    connect _WIRE.index, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27751:7]
    connect _WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27753:7]
    connect _WIRE.special, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27755:7]
    connect _WIRE.nFused, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27757:7]
    connect _WIRE.isStore, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27760:7]
    connect _WIRE.isLoad, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27762:7]
    connect _WIRE.sqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27765:7]
    connect _WIRE.lqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 27767:7]
    connect _WIRE.robIdx, UInt<10>(0) @[build/NutShell.fir.opt.mlir 27770:7]
    connect _WIRE.instr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 27773:7]
    connect _WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27776:7]
    connect _WIRE.wdest, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27778:7]
    connect _WIRE.wpdest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 27781:7]
    connect _WIRE.vecwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27783:7]
    connect _WIRE.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27785:7]
    connect _WIRE.rfwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27787:7]
    connect _WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27789:7]
    connect _WIRE.skip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27791:7]
    connect _WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27793:7]
    regreset REG : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> }, clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 27794:14]
    connect REG.index, r.index @[build/NutShell.fir.opt.mlir 27814:7]
    connect REG.coreid, r.coreid @[build/NutShell.fir.opt.mlir 27815:7]
    connect REG.special, r.special @[build/NutShell.fir.opt.mlir 27816:7]
    connect REG.nFused, r.nFused @[build/NutShell.fir.opt.mlir 27817:7]
    connect REG.isStore, r.isStore @[build/NutShell.fir.opt.mlir 27818:7]
    connect REG.isLoad, r.isLoad @[build/NutShell.fir.opt.mlir 27819:7]
    connect REG.sqIdx, r.sqIdx @[build/NutShell.fir.opt.mlir 27820:7]
    connect REG.lqIdx, r.lqIdx @[build/NutShell.fir.opt.mlir 27821:7]
    connect REG.robIdx, r.robIdx @[build/NutShell.fir.opt.mlir 27822:7]
    connect REG.instr, r.instr @[build/NutShell.fir.opt.mlir 27823:7]
    connect REG.pc, r.pc @[build/NutShell.fir.opt.mlir 27824:7]
    connect REG.wdest, r.wdest @[build/NutShell.fir.opt.mlir 27825:7]
    connect REG.wpdest, r.wpdest @[build/NutShell.fir.opt.mlir 27826:7]
    connect REG.vecwen, r.vecwen @[build/NutShell.fir.opt.mlir 27827:7]
    connect REG.fpwen, r.fpwen @[build/NutShell.fir.opt.mlir 27828:7]
    connect REG.rfwen, r.rfwen @[build/NutShell.fir.opt.mlir 27829:7]
    connect REG.isRVC, r.isRVC @[build/NutShell.fir.opt.mlir 27830:7]
    connect REG.skip, r.skip @[build/NutShell.fir.opt.mlir 27831:7]
    connect REG.valid, r.valid @[build/NutShell.fir.opt.mlir 27832:7]
    connect o, REG @[build/NutShell.fir.opt.mlir 27833:7]

  extmodule DifftestIntWriteback : @[build/NutShell.fir.opt.mlir 27835:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27835:55]
    input enable : UInt<1> @[build/NutShell.fir.opt.mlir 27835:80]
    input io : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27835:108]
    defname = DifftestIntWriteback

  module DummyDPICWrapper_5 : @[build/NutShell.fir.opt.mlir 27836:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27836:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27836:76]
    input control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 27836:102]
    input io : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27836:148]

    inst dpic of DifftestIntWriteback @[build/NutShell.fir.opt.mlir 27842:45]
    connect dpic.clock, clock @[build/NutShell.fir.opt.mlir 27847:7]
    node _dpic_enable_T = and(io.valid, control.enable) @[build/NutShell.fir.opt.mlir 27849:25]
    connect dpic.enable, _dpic_enable_T @[build/NutShell.fir.opt.mlir 27850:7]
    connect dpic.io.coreid, io.coreid @[build/NutShell.fir.opt.mlir 27851:7]
    connect dpic.io.data, io.data @[build/NutShell.fir.opt.mlir 27852:7]
    connect dpic.io.address, io.address @[build/NutShell.fir.opt.mlir 27853:7]
    connect dpic.io.valid, io.valid @[build/NutShell.fir.opt.mlir 27854:7]

  module DelayReg_1 : @[build/NutShell.fir.opt.mlir 27856:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27856:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27856:68]
    input i : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27856:94]
    output o : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27856:185]

    wire r : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27861:12]
    connect r.coreid, i.coreid @[build/NutShell.fir.opt.mlir 27866:7]
    connect r.data, i.data @[build/NutShell.fir.opt.mlir 27867:7]
    connect r.address, i.address @[build/NutShell.fir.opt.mlir 27868:7]
    connect r.valid, i.valid @[build/NutShell.fir.opt.mlir 27869:7]
    wire _WIRE : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 27870:16]
    connect _WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 27877:7]
    connect _WIRE.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 27880:7]
    connect _WIRE.address, UInt<5>(0) @[build/NutShell.fir.opt.mlir 27883:7]
    connect _WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27886:7]
    regreset REG : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> }, clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 27887:14]
    connect REG.coreid, r.coreid @[build/NutShell.fir.opt.mlir 27892:7]
    connect REG.data, r.data @[build/NutShell.fir.opt.mlir 27893:7]
    connect REG.address, r.address @[build/NutShell.fir.opt.mlir 27894:7]
    connect REG.valid, r.valid @[build/NutShell.fir.opt.mlir 27895:7]
    connect o, REG @[build/NutShell.fir.opt.mlir 27896:7]

  module WBU : @[build/NutShell.fir.opt.mlir 27898:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 27898:35]
    input reset : Reset @[build/NutShell.fir.opt.mlir 27898:61]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] } }, wb : { rfWen : UInt<1>, rfDest : UInt<5>, rfData : UInt<64> }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 27898:88]
    output falseWire__bore : UInt<1> @[build/NutShell.fir.opt.mlir 27898:1025]
    output io_in_valid__bore : UInt<1> @[build/NutShell.fir.opt.mlir 27898:1064]

    node _io_wb_rfWen_T = and(io.in.bits.decode.ctrl.rfWen, io.in.valid) @[build/NutShell.fir.opt.mlir 27922:25]
    connect io.wb.rfWen, _io_wb_rfWen_T @[build/NutShell.fir.opt.mlir 27923:7]
    connect io.wb.rfDest, io.in.bits.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 27924:7]
    connect io.wb.rfData, io.in.bits.commits[io.in.bits.decode.ctrl.fuType] @[build/NutShell.fir.opt.mlir 27926:7]
    connect io.in.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 27929:7]
    connect io.redirect, io.in.bits.decode.cf.redirect @[build/NutShell.fir.opt.mlir 27930:7]
    node _io_redirect_valid_T = and(io.in.bits.decode.cf.redirect.valid, io.in.valid) @[build/NutShell.fir.opt.mlir 27932:31]
    connect io.redirect.valid, _io_redirect_valid_T @[build/NutShell.fir.opt.mlir 27933:7]
    inst LogPerfHelper of LogPerfHelper_19 @[build/NutShell.fir.opt.mlir 27934:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 27935:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 27940:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 27941:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 27942:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 27943:7]
    node _T = and(io.in.valid, c_control.logEnable) @[build/NutShell.fir.opt.mlir 27945:13]
    when _T : @[build/NutShell.fir.opt.mlir 27947:7]
      node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27949:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27951:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 27952:9]
        skip @[build/NutShell.fir.opt.mlir 27953:11]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 27956:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 27958:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 27959:9]
        skip @[build/NutShell.fir.opt.mlir 27960:11]
    wire falseWire : UInt<1> @[build/NutShell.fir.opt.mlir 27963:20]
    connect falseWire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 27965:7]
    wire difftest_commit : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27966:26]
    wire _difftest_commit_sink_bundle_WIRE : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 27986:44]
    connect _difftest_commit_sink_bundle_WIRE.index, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28008:7]
    connect _difftest_commit_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28010:7]
    connect _difftest_commit_sink_bundle_WIRE.special, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28012:7]
    connect _difftest_commit_sink_bundle_WIRE.nFused, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28014:7]
    connect _difftest_commit_sink_bundle_WIRE.isStore, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28016:7]
    connect _difftest_commit_sink_bundle_WIRE.isLoad, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28018:7]
    connect _difftest_commit_sink_bundle_WIRE.sqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 28021:7]
    connect _difftest_commit_sink_bundle_WIRE.lqIdx, UInt<7>(0) @[build/NutShell.fir.opt.mlir 28023:7]
    connect _difftest_commit_sink_bundle_WIRE.robIdx, UInt<10>(0) @[build/NutShell.fir.opt.mlir 28026:7]
    connect _difftest_commit_sink_bundle_WIRE.instr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 28029:7]
    connect _difftest_commit_sink_bundle_WIRE.pc, UInt<64>(0) @[build/NutShell.fir.opt.mlir 28032:7]
    connect _difftest_commit_sink_bundle_WIRE.wdest, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28034:7]
    connect _difftest_commit_sink_bundle_WIRE.wpdest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 28037:7]
    connect _difftest_commit_sink_bundle_WIRE.vecwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28039:7]
    connect _difftest_commit_sink_bundle_WIRE.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28041:7]
    connect _difftest_commit_sink_bundle_WIRE.rfwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28043:7]
    connect _difftest_commit_sink_bundle_WIRE.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28045:7]
    connect _difftest_commit_sink_bundle_WIRE.skip, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28047:7]
    connect _difftest_commit_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28049:7]
    wire difftest_commit_sink : { valid : UInt<1>, skip : UInt<1>, isRVC : UInt<1>, rfwen : UInt<1>, fpwen : UInt<1>, vecwen : UInt<1>, wpdest : UInt<5>, wdest : UInt<8>, pc : UInt<64>, instr : UInt<32>, robIdx : UInt<10>, lqIdx : UInt<7>, sqIdx : UInt<7>, isLoad : UInt<1>, isStore : UInt<1>, nFused : UInt<8>, special : UInt<8>, coreid : UInt<8>, index : UInt<8> } @[build/NutShell.fir.opt.mlir 28050:31]
    connect difftest_commit_sink, _difftest_commit_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 28070:7]
    wire _difftest_commit_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28071:45]
    connect _difftest_commit_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28074:7]
    wire difftest_commit_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28075:39]
    connect difftest_commit_sink_control, _difftest_commit_sink_control_WIRE @[build/NutShell.fir.opt.mlir 28077:7]
    connect difftest_commit_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28079:7]
    inst difftest_commit_sink_module of DummyDPICWrapper_4 @[build/NutShell.fir.opt.mlir 28080:151]
    connect difftest_commit_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 28101:7]
    connect difftest_commit_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 28102:7]
    connect difftest_commit_sink_module.control.enable, difftest_commit_sink_control.enable @[build/NutShell.fir.opt.mlir 28103:7]
    connect difftest_commit_sink_module.io.index, difftest_commit_sink.index @[build/NutShell.fir.opt.mlir 28104:7]
    connect difftest_commit_sink_module.io.coreid, difftest_commit_sink.coreid @[build/NutShell.fir.opt.mlir 28105:7]
    connect difftest_commit_sink_module.io.special, difftest_commit_sink.special @[build/NutShell.fir.opt.mlir 28106:7]
    connect difftest_commit_sink_module.io.nFused, difftest_commit_sink.nFused @[build/NutShell.fir.opt.mlir 28107:7]
    connect difftest_commit_sink_module.io.isStore, difftest_commit_sink.isStore @[build/NutShell.fir.opt.mlir 28108:7]
    connect difftest_commit_sink_module.io.isLoad, difftest_commit_sink.isLoad @[build/NutShell.fir.opt.mlir 28109:7]
    connect difftest_commit_sink_module.io.sqIdx, difftest_commit_sink.sqIdx @[build/NutShell.fir.opt.mlir 28110:7]
    connect difftest_commit_sink_module.io.lqIdx, difftest_commit_sink.lqIdx @[build/NutShell.fir.opt.mlir 28111:7]
    connect difftest_commit_sink_module.io.robIdx, difftest_commit_sink.robIdx @[build/NutShell.fir.opt.mlir 28112:7]
    connect difftest_commit_sink_module.io.instr, difftest_commit_sink.instr @[build/NutShell.fir.opt.mlir 28113:7]
    connect difftest_commit_sink_module.io.pc, difftest_commit_sink.pc @[build/NutShell.fir.opt.mlir 28114:7]
    connect difftest_commit_sink_module.io.wdest, difftest_commit_sink.wdest @[build/NutShell.fir.opt.mlir 28115:7]
    connect difftest_commit_sink_module.io.wpdest, difftest_commit_sink.wpdest @[build/NutShell.fir.opt.mlir 28116:7]
    connect difftest_commit_sink_module.io.vecwen, difftest_commit_sink.vecwen @[build/NutShell.fir.opt.mlir 28117:7]
    connect difftest_commit_sink_module.io.fpwen, difftest_commit_sink.fpwen @[build/NutShell.fir.opt.mlir 28118:7]
    connect difftest_commit_sink_module.io.rfwen, difftest_commit_sink.rfwen @[build/NutShell.fir.opt.mlir 28119:7]
    connect difftest_commit_sink_module.io.isRVC, difftest_commit_sink.isRVC @[build/NutShell.fir.opt.mlir 28120:7]
    connect difftest_commit_sink_module.io.skip, difftest_commit_sink.skip @[build/NutShell.fir.opt.mlir 28121:7]
    connect difftest_commit_sink_module.io.valid, difftest_commit_sink.valid @[build/NutShell.fir.opt.mlir 28122:7]
    inst difftest_commit_sink_delayer of DelayReg @[build/NutShell.fir.opt.mlir 28123:148]
    connect difftest_commit_sink_delayer.clock, clock @[build/NutShell.fir.opt.mlir 28143:7]
    connect difftest_commit_sink_delayer.reset, reset @[build/NutShell.fir.opt.mlir 28144:7]
    connect difftest_commit_sink_delayer.i.index, difftest_commit.index @[build/NutShell.fir.opt.mlir 28145:7]
    connect difftest_commit_sink_delayer.i.coreid, difftest_commit.coreid @[build/NutShell.fir.opt.mlir 28146:7]
    connect difftest_commit_sink_delayer.i.special, difftest_commit.special @[build/NutShell.fir.opt.mlir 28147:7]
    connect difftest_commit_sink_delayer.i.nFused, difftest_commit.nFused @[build/NutShell.fir.opt.mlir 28148:7]
    connect difftest_commit_sink_delayer.i.isStore, difftest_commit.isStore @[build/NutShell.fir.opt.mlir 28149:7]
    connect difftest_commit_sink_delayer.i.isLoad, difftest_commit.isLoad @[build/NutShell.fir.opt.mlir 28150:7]
    connect difftest_commit_sink_delayer.i.sqIdx, difftest_commit.sqIdx @[build/NutShell.fir.opt.mlir 28151:7]
    connect difftest_commit_sink_delayer.i.lqIdx, difftest_commit.lqIdx @[build/NutShell.fir.opt.mlir 28152:7]
    connect difftest_commit_sink_delayer.i.robIdx, difftest_commit.robIdx @[build/NutShell.fir.opt.mlir 28153:7]
    connect difftest_commit_sink_delayer.i.instr, difftest_commit.instr @[build/NutShell.fir.opt.mlir 28154:7]
    connect difftest_commit_sink_delayer.i.pc, difftest_commit.pc @[build/NutShell.fir.opt.mlir 28155:7]
    connect difftest_commit_sink_delayer.i.wdest, difftest_commit.wdest @[build/NutShell.fir.opt.mlir 28156:7]
    connect difftest_commit_sink_delayer.i.wpdest, difftest_commit.wpdest @[build/NutShell.fir.opt.mlir 28157:7]
    connect difftest_commit_sink_delayer.i.vecwen, difftest_commit.vecwen @[build/NutShell.fir.opt.mlir 28158:7]
    connect difftest_commit_sink_delayer.i.fpwen, difftest_commit.fpwen @[build/NutShell.fir.opt.mlir 28159:7]
    connect difftest_commit_sink_delayer.i.rfwen, difftest_commit.rfwen @[build/NutShell.fir.opt.mlir 28160:7]
    connect difftest_commit_sink_delayer.i.isRVC, difftest_commit.isRVC @[build/NutShell.fir.opt.mlir 28161:7]
    connect difftest_commit_sink_delayer.i.skip, difftest_commit.skip @[build/NutShell.fir.opt.mlir 28162:7]
    connect difftest_commit_sink_delayer.i.valid, difftest_commit.valid @[build/NutShell.fir.opt.mlir 28163:7]
    connect difftest_commit_sink, difftest_commit_sink_delayer.o @[build/NutShell.fir.opt.mlir 28164:7]
    connect difftest_commit_sink.coreid, difftest_commit.coreid @[build/NutShell.fir.opt.mlir 28165:7]
    invalidate difftest_commit.index @[build/NutShell.fir.opt.mlir 28167:7]
    invalidate difftest_commit.coreid @[build/NutShell.fir.opt.mlir 28169:7]
    invalidate difftest_commit.special @[build/NutShell.fir.opt.mlir 28171:7]
    invalidate difftest_commit.nFused @[build/NutShell.fir.opt.mlir 28173:7]
    invalidate difftest_commit.isStore @[build/NutShell.fir.opt.mlir 28175:7]
    invalidate difftest_commit.isLoad @[build/NutShell.fir.opt.mlir 28177:7]
    invalidate difftest_commit.sqIdx @[build/NutShell.fir.opt.mlir 28179:7]
    invalidate difftest_commit.lqIdx @[build/NutShell.fir.opt.mlir 28181:7]
    invalidate difftest_commit.robIdx @[build/NutShell.fir.opt.mlir 28183:7]
    invalidate difftest_commit.instr @[build/NutShell.fir.opt.mlir 28185:7]
    invalidate difftest_commit.pc @[build/NutShell.fir.opt.mlir 28187:7]
    invalidate difftest_commit.wdest @[build/NutShell.fir.opt.mlir 28189:7]
    invalidate difftest_commit.wpdest @[build/NutShell.fir.opt.mlir 28191:7]
    invalidate difftest_commit.vecwen @[build/NutShell.fir.opt.mlir 28193:7]
    invalidate difftest_commit.fpwen @[build/NutShell.fir.opt.mlir 28195:7]
    invalidate difftest_commit.rfwen @[build/NutShell.fir.opt.mlir 28197:7]
    invalidate difftest_commit.isRVC @[build/NutShell.fir.opt.mlir 28199:7]
    invalidate difftest_commit.skip @[build/NutShell.fir.opt.mlir 28201:7]
    invalidate difftest_commit.valid @[build/NutShell.fir.opt.mlir 28203:7]
    connect difftest_commit.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28206:7]
    connect difftest_commit.index, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28209:7]
    connect difftest_commit.valid, io.in.valid @[build/NutShell.fir.opt.mlir 28210:7]
    node difftest_commit_pc_signBit = bits(io.in.bits.decode.cf.pc, 38, 38) @[build/NutShell.fir.opt.mlir 28212:37]
    node _difftest_commit_pc_T = mux(difftest_commit_pc_signBit, UInt<25>(33554431), UInt<25>(0)) @[build/NutShell.fir.opt.mlir 28216:32]
    node _difftest_commit_pc_T_1 = cat(_difftest_commit_pc_T, io.in.bits.decode.cf.pc) @[build/NutShell.fir.opt.mlir 28218:34]
    connect difftest_commit.pc, _difftest_commit_pc_T_1 @[build/NutShell.fir.opt.mlir 28219:7]
    connect difftest_commit.instr, tail(io.in.bits.decode.cf.instr, 32) @[build/NutShell.fir.opt.mlir 28221:7]
    connect difftest_commit.skip, io.in.bits.isMMIO @[build/NutShell.fir.opt.mlir 28222:7]
    node _difftest_commit_isRVC_T = bits(io.in.bits.decode.cf.instr, 1, 0) @[build/NutShell.fir.opt.mlir 28224:35]
    node _difftest_commit_isRVC_T_1 = neq(_difftest_commit_isRVC_T, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 28227:37]
    connect difftest_commit.isRVC, _difftest_commit_isRVC_T_1 @[build/NutShell.fir.opt.mlir 28228:7]
    node _difftest_commit_rfwen_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28230:35]
    node _difftest_commit_rfwen_T_1 = and(io.wb.rfWen, _difftest_commit_rfwen_T) @[build/NutShell.fir.opt.mlir 28232:37]
    connect difftest_commit.rfwen, _difftest_commit_rfwen_T_1 @[build/NutShell.fir.opt.mlir 28233:7]
    connect difftest_commit.fpwen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28235:7]
    connect difftest_commit.wdest, pad(io.wb.rfDest, 8) @[build/NutShell.fir.opt.mlir 28237:7]
    connect difftest_commit.wpdest, io.wb.rfDest @[build/NutShell.fir.opt.mlir 28238:7]
    wire difftest_wb : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28239:22]
    wire _difftest_wb_sink_bundle_WIRE : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28244:40]
    connect _difftest_wb_sink_bundle_WIRE.coreid, UInt<8>(0) @[build/NutShell.fir.opt.mlir 28250:7]
    connect _difftest_wb_sink_bundle_WIRE.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 28252:7]
    connect _difftest_wb_sink_bundle_WIRE.address, UInt<5>(0) @[build/NutShell.fir.opt.mlir 28254:7]
    connect _difftest_wb_sink_bundle_WIRE.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28256:7]
    wire difftest_wb_sink : { valid : UInt<1>, address : UInt<5>, data : UInt<64>, coreid : UInt<8> } @[build/NutShell.fir.opt.mlir 28257:27]
    connect difftest_wb_sink, _difftest_wb_sink_bundle_WIRE @[build/NutShell.fir.opt.mlir 28262:7]
    wire _difftest_wb_sink_control_WIRE : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28263:41]
    connect _difftest_wb_sink_control_WIRE.enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28266:7]
    wire difftest_wb_sink_control : { enable : UInt<1> } @[build/NutShell.fir.opt.mlir 28267:35]
    connect difftest_wb_sink_control, _difftest_wb_sink_control_WIRE @[build/NutShell.fir.opt.mlir 28269:7]
    connect difftest_wb_sink_control.enable, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28271:7]
    inst difftest_wb_sink_module of DummyDPICWrapper_5 @[build/NutShell.fir.opt.mlir 28272:135]
    connect difftest_wb_sink_module.clock, clock @[build/NutShell.fir.opt.mlir 28278:7]
    connect difftest_wb_sink_module.reset, reset @[build/NutShell.fir.opt.mlir 28279:7]
    connect difftest_wb_sink_module.control.enable, difftest_wb_sink_control.enable @[build/NutShell.fir.opt.mlir 28280:7]
    connect difftest_wb_sink_module.io.coreid, difftest_wb_sink.coreid @[build/NutShell.fir.opt.mlir 28281:7]
    connect difftest_wb_sink_module.io.data, difftest_wb_sink.data @[build/NutShell.fir.opt.mlir 28282:7]
    connect difftest_wb_sink_module.io.address, difftest_wb_sink.address @[build/NutShell.fir.opt.mlir 28283:7]
    connect difftest_wb_sink_module.io.valid, difftest_wb_sink.valid @[build/NutShell.fir.opt.mlir 28284:7]
    inst difftest_wb_sink_delayer of DelayReg_1 @[build/NutShell.fir.opt.mlir 28285:132]
    connect difftest_wb_sink_delayer.clock, clock @[build/NutShell.fir.opt.mlir 28290:7]
    connect difftest_wb_sink_delayer.reset, reset @[build/NutShell.fir.opt.mlir 28291:7]
    connect difftest_wb_sink_delayer.i.coreid, difftest_wb.coreid @[build/NutShell.fir.opt.mlir 28292:7]
    connect difftest_wb_sink_delayer.i.data, difftest_wb.data @[build/NutShell.fir.opt.mlir 28293:7]
    connect difftest_wb_sink_delayer.i.address, difftest_wb.address @[build/NutShell.fir.opt.mlir 28294:7]
    connect difftest_wb_sink_delayer.i.valid, difftest_wb.valid @[build/NutShell.fir.opt.mlir 28295:7]
    connect difftest_wb_sink, difftest_wb_sink_delayer.o @[build/NutShell.fir.opt.mlir 28296:7]
    connect difftest_wb_sink.coreid, difftest_wb.coreid @[build/NutShell.fir.opt.mlir 28297:7]
    connect difftest_wb.coreid, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 28300:7]
    node _difftest_wb_valid_T = neq(io.wb.rfDest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28302:31]
    node _difftest_wb_valid_T_1 = and(io.wb.rfWen, _difftest_wb_valid_T) @[build/NutShell.fir.opt.mlir 28304:33]
    connect difftest_wb.valid, _difftest_wb_valid_T_1 @[build/NutShell.fir.opt.mlir 28305:7]
    connect difftest_wb.address, io.wb.rfDest @[build/NutShell.fir.opt.mlir 28306:7]
    connect difftest_wb.data, io.wb.rfData @[build/NutShell.fir.opt.mlir 28307:7]
    connect falseWire__bore, falseWire @[build/NutShell.fir.opt.mlir 28308:7]
    connect io_in_valid__bore, io.in.valid @[build/NutShell.fir.opt.mlir 28309:7]

  module Backend_inorder : @[build/NutShell.fir.opt.mlir 28311:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28311:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28311:73]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } }[2], flip flush : UInt<2>, dmem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip memMMU : { imem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, dmem : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> } }, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 28311:100]
    input exu_csr_meip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1494]
    output exu_lsu__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1536]
    output exu_csr__WIRE__bore : UInt @[build/NutShell.fir.opt.mlir 28311:1579]
    output exu_csr__WIRE__bore_0 : UInt @[build/NutShell.fir.opt.mlir 28311:1619]
    input exu_csr_mtip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1660]
    input exu_lsu_lsuMMIO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1701]
    output exu_alu_REG__bore : { valid : UInt<1>, pc : UInt<39>, isMissPredict : UInt<1>, actualTarget : UInt<39>, actualTaken : UInt<1>, fuOpType : UInt<7>, btbType : UInt<2>, isRVC : UInt<1> } @[build/NutShell.fir.opt.mlir 28311:1746]
    input exu_lsu_lsExecUnit_dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1938]
    input exu_lsu_dtlbEnable__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:1996]
    input exu_csr_msip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2043]
    input exu_csr_perfCntCond_4__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2084]
    input exu_lsu_lsExecUnit_dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2134]
    input exu_lsu_dtlbFinish__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2192]
    output exu_csr_satp__bore : UInt<64> @[build/NutShell.fir.opt.mlir 28311:2240]
    output exu_csr_satp__bore_0 : UInt<64> @[build/NutShell.fir.opt.mlir 28311:2283]
    output exu_mou__WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2328]
    output exu_mou__WIRE_1__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2373]
    output exu_mou__WIRE_1__bore_1 : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2420]
    input exu_lsu_lsExecUnit_dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2466]
    input exu_lsu_dtlbPF__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2520]
    output exu_mou__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2564]
    output exu_mou__WIRE__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2607]
    input exu_csr_perfCntCond_15__bore : UInt<1> @[build/NutShell.fir.opt.mlir 28311:2651]

    inst isu of ISU @[build/NutShell.fir.opt.mlir 28347:99]
    connect isu.clock, clock @[build/NutShell.fir.opt.mlir 28364:7]
    connect isu.reset, reset @[build/NutShell.fir.opt.mlir 28365:7]
    inst exu of EXU @[build/NutShell.fir.opt.mlir 28366:842]
    connect exu.clock, clock @[build/NutShell.fir.opt.mlir 28462:7]
    connect exu.reset, reset @[build/NutShell.fir.opt.mlir 28463:7]
    inst wbu of WBU @[build/NutShell.fir.opt.mlir 28464:87]
    connect wbu.clock, clock @[build/NutShell.fir.opt.mlir 28541:7]
    connect wbu.reset, reset @[build/NutShell.fir.opt.mlir 28542:7]
    node _T = and(exu.io.out.ready, exu.io.out.valid) @[build/NutShell.fir.opt.mlir 28544:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 28546:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28548:16]
    when _T : @[build/NutShell.fir.opt.mlir 28549:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28551:9]
    node _T_2 = and(isu.io.out.valid, exu.io.in.ready) @[build/NutShell.fir.opt.mlir 28554:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 28556:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28558:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 28560:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28562:9]
    connect isu.io.out.ready, exu.io.in.ready @[build/NutShell.fir.opt.mlir 28564:7]
    node _exu_io_in_bits_T = and(isu.io.out.valid, exu.io.in.ready) @[build/NutShell.fir.opt.mlir 28566:28]
    reg exu_io_in_bits_r : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 28567:27]
    when _exu_io_in_bits_T : @[build/NutShell.fir.opt.mlir 28629:7]
      connect exu_io_in_bits_r, isu.io.out.bits @[build/NutShell.fir.opt.mlir 28630:9]
    connect exu.io.in.bits.data.imm, exu_io_in_bits_r.data.imm @[build/NutShell.fir.opt.mlir 28632:7]
    connect exu.io.in.bits.data.src2, exu_io_in_bits_r.data.src2 @[build/NutShell.fir.opt.mlir 28633:7]
    connect exu.io.in.bits.data.src1, exu_io_in_bits_r.data.src1 @[build/NutShell.fir.opt.mlir 28634:7]
    connect exu.io.in.bits.ctrl.isBlocked, exu_io_in_bits_r.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 28635:7]
    connect exu.io.in.bits.ctrl.noSpecExec, exu_io_in_bits_r.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 28636:7]
    connect exu.io.in.bits.ctrl.isSrc2Forward, exu_io_in_bits_r.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 28637:7]
    connect exu.io.in.bits.ctrl.isSrc1Forward, exu_io_in_bits_r.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 28638:7]
    connect exu.io.in.bits.ctrl.isNutCoreTrap, exu_io_in_bits_r.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 28639:7]
    connect exu.io.in.bits.ctrl.rfDest, exu_io_in_bits_r.ctrl.rfDest @[build/NutShell.fir.opt.mlir 28640:7]
    connect exu.io.in.bits.ctrl.rfWen, exu_io_in_bits_r.ctrl.rfWen @[build/NutShell.fir.opt.mlir 28641:7]
    connect exu.io.in.bits.ctrl.rfSrc2, exu_io_in_bits_r.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 28642:7]
    connect exu.io.in.bits.ctrl.rfSrc1, exu_io_in_bits_r.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 28643:7]
    connect exu.io.in.bits.ctrl.fuOpType, exu_io_in_bits_r.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 28644:7]
    connect exu.io.in.bits.ctrl.fuType, exu_io_in_bits_r.ctrl.fuType @[build/NutShell.fir.opt.mlir 28645:7]
    connect exu.io.in.bits.ctrl.src2Type, exu_io_in_bits_r.ctrl.src2Type @[build/NutShell.fir.opt.mlir 28646:7]
    connect exu.io.in.bits.ctrl.src1Type, exu_io_in_bits_r.ctrl.src1Type @[build/NutShell.fir.opt.mlir 28647:7]
    connect exu.io.in.bits.cf.isBranch, exu_io_in_bits_r.cf.isBranch @[build/NutShell.fir.opt.mlir 28648:7]
    connect exu.io.in.bits.cf.runahead_checkpoint_id, exu_io_in_bits_r.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 28649:7]
    connect exu.io.in.bits.cf.crossPageIPFFix, exu_io_in_bits_r.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 28650:7]
    connect exu.io.in.bits.cf.isRVC, exu_io_in_bits_r.cf.isRVC @[build/NutShell.fir.opt.mlir 28651:7]
    connect exu.io.in.bits.cf.brIdx, exu_io_in_bits_r.cf.brIdx @[build/NutShell.fir.opt.mlir 28652:7]
    connect exu.io.in.bits.cf.intrVec[0], exu_io_in_bits_r.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 28653:7]
    connect exu.io.in.bits.cf.intrVec[1], exu_io_in_bits_r.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 28654:7]
    connect exu.io.in.bits.cf.intrVec[2], exu_io_in_bits_r.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 28655:7]
    connect exu.io.in.bits.cf.intrVec[3], exu_io_in_bits_r.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 28656:7]
    connect exu.io.in.bits.cf.intrVec[4], exu_io_in_bits_r.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 28657:7]
    connect exu.io.in.bits.cf.intrVec[5], exu_io_in_bits_r.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 28658:7]
    connect exu.io.in.bits.cf.intrVec[6], exu_io_in_bits_r.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 28659:7]
    connect exu.io.in.bits.cf.intrVec[7], exu_io_in_bits_r.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 28660:7]
    connect exu.io.in.bits.cf.intrVec[8], exu_io_in_bits_r.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 28661:7]
    connect exu.io.in.bits.cf.intrVec[9], exu_io_in_bits_r.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 28662:7]
    connect exu.io.in.bits.cf.intrVec[10], exu_io_in_bits_r.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 28663:7]
    connect exu.io.in.bits.cf.intrVec[11], exu_io_in_bits_r.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 28664:7]
    connect exu.io.in.bits.cf.exceptionVec[0], exu_io_in_bits_r.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 28665:7]
    connect exu.io.in.bits.cf.exceptionVec[1], exu_io_in_bits_r.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 28666:7]
    connect exu.io.in.bits.cf.exceptionVec[2], exu_io_in_bits_r.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 28667:7]
    connect exu.io.in.bits.cf.exceptionVec[3], exu_io_in_bits_r.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 28668:7]
    connect exu.io.in.bits.cf.exceptionVec[4], exu_io_in_bits_r.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 28669:7]
    connect exu.io.in.bits.cf.exceptionVec[5], exu_io_in_bits_r.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 28670:7]
    connect exu.io.in.bits.cf.exceptionVec[6], exu_io_in_bits_r.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 28671:7]
    connect exu.io.in.bits.cf.exceptionVec[7], exu_io_in_bits_r.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 28672:7]
    connect exu.io.in.bits.cf.exceptionVec[8], exu_io_in_bits_r.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 28673:7]
    connect exu.io.in.bits.cf.exceptionVec[9], exu_io_in_bits_r.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 28674:7]
    connect exu.io.in.bits.cf.exceptionVec[10], exu_io_in_bits_r.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 28675:7]
    connect exu.io.in.bits.cf.exceptionVec[11], exu_io_in_bits_r.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 28676:7]
    connect exu.io.in.bits.cf.exceptionVec[12], exu_io_in_bits_r.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 28677:7]
    connect exu.io.in.bits.cf.exceptionVec[13], exu_io_in_bits_r.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 28678:7]
    connect exu.io.in.bits.cf.exceptionVec[14], exu_io_in_bits_r.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 28679:7]
    connect exu.io.in.bits.cf.exceptionVec[15], exu_io_in_bits_r.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 28680:7]
    connect exu.io.in.bits.cf.redirect.valid, exu_io_in_bits_r.cf.redirect.valid @[build/NutShell.fir.opt.mlir 28681:7]
    connect exu.io.in.bits.cf.redirect.rtype, exu_io_in_bits_r.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 28682:7]
    connect exu.io.in.bits.cf.redirect.target, exu_io_in_bits_r.cf.redirect.target @[build/NutShell.fir.opt.mlir 28683:7]
    connect exu.io.in.bits.cf.pnpc, exu_io_in_bits_r.cf.pnpc @[build/NutShell.fir.opt.mlir 28684:7]
    connect exu.io.in.bits.cf.pc, exu_io_in_bits_r.cf.pc @[build/NutShell.fir.opt.mlir 28685:7]
    connect exu.io.in.bits.cf.instr, exu_io_in_bits_r.cf.instr @[build/NutShell.fir.opt.mlir 28686:7]
    connect exu.io.in.valid, valid @[build/NutShell.fir.opt.mlir 28687:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 28689:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28690:18]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 28691:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28693:9]
    node _T_4 = and(exu.io.out.valid, wbu.io.in.ready) @[build/NutShell.fir.opt.mlir 28696:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 28697:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28699:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 28701:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28703:9]
    connect exu.io.out.ready, wbu.io.in.ready @[build/NutShell.fir.opt.mlir 28705:7]
    node _wbu_io_in_bits_T = and(exu.io.out.valid, wbu.io.in.ready) @[build/NutShell.fir.opt.mlir 28707:28]
    reg wbu_io_in_bits_r : { decode : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }, isMMIO : UInt<1>, intrNO : UInt<64>, commits : UInt<64>[5] }, clock @[build/NutShell.fir.opt.mlir 28708:27]
    when _wbu_io_in_bits_T : @[build/NutShell.fir.opt.mlir 28779:7]
      connect wbu_io_in_bits_r, exu.io.out.bits @[build/NutShell.fir.opt.mlir 28780:9]
    connect wbu.io.in.bits.commits[0], wbu_io_in_bits_r.commits[0] @[build/NutShell.fir.opt.mlir 28782:7]
    connect wbu.io.in.bits.commits[1], wbu_io_in_bits_r.commits[1] @[build/NutShell.fir.opt.mlir 28783:7]
    connect wbu.io.in.bits.commits[2], wbu_io_in_bits_r.commits[2] @[build/NutShell.fir.opt.mlir 28784:7]
    connect wbu.io.in.bits.commits[3], wbu_io_in_bits_r.commits[3] @[build/NutShell.fir.opt.mlir 28785:7]
    connect wbu.io.in.bits.commits[4], wbu_io_in_bits_r.commits[4] @[build/NutShell.fir.opt.mlir 28786:7]
    connect wbu.io.in.bits.intrNO, wbu_io_in_bits_r.intrNO @[build/NutShell.fir.opt.mlir 28787:7]
    connect wbu.io.in.bits.isMMIO, wbu_io_in_bits_r.isMMIO @[build/NutShell.fir.opt.mlir 28788:7]
    connect wbu.io.in.bits.decode.data.imm, wbu_io_in_bits_r.decode.data.imm @[build/NutShell.fir.opt.mlir 28789:7]
    connect wbu.io.in.bits.decode.data.src2, wbu_io_in_bits_r.decode.data.src2 @[build/NutShell.fir.opt.mlir 28790:7]
    connect wbu.io.in.bits.decode.data.src1, wbu_io_in_bits_r.decode.data.src1 @[build/NutShell.fir.opt.mlir 28791:7]
    connect wbu.io.in.bits.decode.ctrl.isBlocked, wbu_io_in_bits_r.decode.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 28792:7]
    connect wbu.io.in.bits.decode.ctrl.noSpecExec, wbu_io_in_bits_r.decode.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 28793:7]
    connect wbu.io.in.bits.decode.ctrl.isSrc2Forward, wbu_io_in_bits_r.decode.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 28794:7]
    connect wbu.io.in.bits.decode.ctrl.isSrc1Forward, wbu_io_in_bits_r.decode.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 28795:7]
    connect wbu.io.in.bits.decode.ctrl.isNutCoreTrap, wbu_io_in_bits_r.decode.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 28796:7]
    connect wbu.io.in.bits.decode.ctrl.rfDest, wbu_io_in_bits_r.decode.ctrl.rfDest @[build/NutShell.fir.opt.mlir 28797:7]
    connect wbu.io.in.bits.decode.ctrl.rfWen, wbu_io_in_bits_r.decode.ctrl.rfWen @[build/NutShell.fir.opt.mlir 28798:7]
    connect wbu.io.in.bits.decode.ctrl.rfSrc2, wbu_io_in_bits_r.decode.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 28799:7]
    connect wbu.io.in.bits.decode.ctrl.rfSrc1, wbu_io_in_bits_r.decode.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 28800:7]
    connect wbu.io.in.bits.decode.ctrl.fuOpType, wbu_io_in_bits_r.decode.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 28801:7]
    connect wbu.io.in.bits.decode.ctrl.fuType, wbu_io_in_bits_r.decode.ctrl.fuType @[build/NutShell.fir.opt.mlir 28802:7]
    connect wbu.io.in.bits.decode.ctrl.src2Type, wbu_io_in_bits_r.decode.ctrl.src2Type @[build/NutShell.fir.opt.mlir 28803:7]
    connect wbu.io.in.bits.decode.ctrl.src1Type, wbu_io_in_bits_r.decode.ctrl.src1Type @[build/NutShell.fir.opt.mlir 28804:7]
    connect wbu.io.in.bits.decode.cf.isBranch, wbu_io_in_bits_r.decode.cf.isBranch @[build/NutShell.fir.opt.mlir 28805:7]
    connect wbu.io.in.bits.decode.cf.runahead_checkpoint_id, wbu_io_in_bits_r.decode.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 28806:7]
    connect wbu.io.in.bits.decode.cf.crossPageIPFFix, wbu_io_in_bits_r.decode.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 28807:7]
    connect wbu.io.in.bits.decode.cf.isRVC, wbu_io_in_bits_r.decode.cf.isRVC @[build/NutShell.fir.opt.mlir 28808:7]
    connect wbu.io.in.bits.decode.cf.brIdx, wbu_io_in_bits_r.decode.cf.brIdx @[build/NutShell.fir.opt.mlir 28809:7]
    connect wbu.io.in.bits.decode.cf.intrVec[0], wbu_io_in_bits_r.decode.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 28810:7]
    connect wbu.io.in.bits.decode.cf.intrVec[1], wbu_io_in_bits_r.decode.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 28811:7]
    connect wbu.io.in.bits.decode.cf.intrVec[2], wbu_io_in_bits_r.decode.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 28812:7]
    connect wbu.io.in.bits.decode.cf.intrVec[3], wbu_io_in_bits_r.decode.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 28813:7]
    connect wbu.io.in.bits.decode.cf.intrVec[4], wbu_io_in_bits_r.decode.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 28814:7]
    connect wbu.io.in.bits.decode.cf.intrVec[5], wbu_io_in_bits_r.decode.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 28815:7]
    connect wbu.io.in.bits.decode.cf.intrVec[6], wbu_io_in_bits_r.decode.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 28816:7]
    connect wbu.io.in.bits.decode.cf.intrVec[7], wbu_io_in_bits_r.decode.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 28817:7]
    connect wbu.io.in.bits.decode.cf.intrVec[8], wbu_io_in_bits_r.decode.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 28818:7]
    connect wbu.io.in.bits.decode.cf.intrVec[9], wbu_io_in_bits_r.decode.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 28819:7]
    connect wbu.io.in.bits.decode.cf.intrVec[10], wbu_io_in_bits_r.decode.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 28820:7]
    connect wbu.io.in.bits.decode.cf.intrVec[11], wbu_io_in_bits_r.decode.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 28821:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[0], wbu_io_in_bits_r.decode.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 28822:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[1], wbu_io_in_bits_r.decode.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 28823:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[2], wbu_io_in_bits_r.decode.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 28824:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[3], wbu_io_in_bits_r.decode.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 28825:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[4], wbu_io_in_bits_r.decode.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 28826:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[5], wbu_io_in_bits_r.decode.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 28827:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[6], wbu_io_in_bits_r.decode.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 28828:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[7], wbu_io_in_bits_r.decode.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 28829:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[8], wbu_io_in_bits_r.decode.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 28830:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[9], wbu_io_in_bits_r.decode.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 28831:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[10], wbu_io_in_bits_r.decode.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 28832:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[11], wbu_io_in_bits_r.decode.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 28833:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[12], wbu_io_in_bits_r.decode.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 28834:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[13], wbu_io_in_bits_r.decode.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 28835:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[14], wbu_io_in_bits_r.decode.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 28836:7]
    connect wbu.io.in.bits.decode.cf.exceptionVec[15], wbu_io_in_bits_r.decode.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 28837:7]
    connect wbu.io.in.bits.decode.cf.redirect.valid, wbu_io_in_bits_r.decode.cf.redirect.valid @[build/NutShell.fir.opt.mlir 28838:7]
    connect wbu.io.in.bits.decode.cf.redirect.rtype, wbu_io_in_bits_r.decode.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 28839:7]
    connect wbu.io.in.bits.decode.cf.redirect.target, wbu_io_in_bits_r.decode.cf.redirect.target @[build/NutShell.fir.opt.mlir 28840:7]
    connect wbu.io.in.bits.decode.cf.pnpc, wbu_io_in_bits_r.decode.cf.pnpc @[build/NutShell.fir.opt.mlir 28841:7]
    connect wbu.io.in.bits.decode.cf.pc, wbu_io_in_bits_r.decode.cf.pc @[build/NutShell.fir.opt.mlir 28842:7]
    connect wbu.io.in.bits.decode.cf.instr, wbu_io_in_bits_r.decode.cf.instr @[build/NutShell.fir.opt.mlir 28843:7]
    connect wbu.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 28844:7]
    connect io.in[0].ready, isu.io.in[0].ready @[build/NutShell.fir.opt.mlir 28845:7]
    connect isu.io.in[0].valid, io.in[0].valid @[build/NutShell.fir.opt.mlir 28846:7]
    connect isu.io.in[0].bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 28847:7]
    connect io.in[1].ready, isu.io.in[1].ready @[build/NutShell.fir.opt.mlir 28848:7]
    connect isu.io.in[1].valid, io.in[1].valid @[build/NutShell.fir.opt.mlir 28849:7]
    connect isu.io.in[1].bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 28850:7]
    node _isu_io_flush_T = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 28852:26]
    connect isu.io.flush, _isu_io_flush_T @[build/NutShell.fir.opt.mlir 28853:7]
    node _exu_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 28855:26]
    connect exu.io.flush, _exu_io_flush_T @[build/NutShell.fir.opt.mlir 28856:7]
    connect isu.io.wb, wbu.io.wb @[build/NutShell.fir.opt.mlir 28857:7]
    connect io.redirect, wbu.io.redirect @[build/NutShell.fir.opt.mlir 28858:7]
    connect isu.io.forward, exu.io.forward @[build/NutShell.fir.opt.mlir 28859:7]
    connect io.memMMU.imem.privilegeMode, exu.io.memMMU.imem.privilegeMode @[build/NutShell.fir.opt.mlir 28860:7]
    connect io.memMMU.imem.status_sum, exu.io.memMMU.imem.status_sum @[build/NutShell.fir.opt.mlir 28861:7]
    connect io.memMMU.imem.status_mxr, exu.io.memMMU.imem.status_mxr @[build/NutShell.fir.opt.mlir 28862:7]
    connect exu.io.memMMU.imem.loadPF, io.memMMU.imem.loadPF @[build/NutShell.fir.opt.mlir 28863:7]
    connect exu.io.memMMU.imem.storePF, io.memMMU.imem.storePF @[build/NutShell.fir.opt.mlir 28864:7]
    connect exu.io.memMMU.imem.addr, io.memMMU.imem.addr @[build/NutShell.fir.opt.mlir 28865:7]
    connect io.memMMU.dmem.privilegeMode, exu.io.memMMU.dmem.privilegeMode @[build/NutShell.fir.opt.mlir 28866:7]
    connect io.memMMU.dmem.status_sum, exu.io.memMMU.dmem.status_sum @[build/NutShell.fir.opt.mlir 28867:7]
    connect io.memMMU.dmem.status_mxr, exu.io.memMMU.dmem.status_mxr @[build/NutShell.fir.opt.mlir 28868:7]
    connect exu.io.memMMU.dmem.loadPF, io.memMMU.dmem.loadPF @[build/NutShell.fir.opt.mlir 28869:7]
    connect exu.io.memMMU.dmem.storePF, io.memMMU.dmem.storePF @[build/NutShell.fir.opt.mlir 28870:7]
    connect exu.io.memMMU.dmem.addr, io.memMMU.dmem.addr @[build/NutShell.fir.opt.mlir 28871:7]
    connect io.dmem.resp.ready, exu.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 28872:7]
    connect exu.io.dmem.resp.valid, io.dmem.resp.valid @[build/NutShell.fir.opt.mlir 28873:7]
    connect exu.io.dmem.resp.bits, io.dmem.resp.bits @[build/NutShell.fir.opt.mlir 28874:7]
    connect io.dmem.req.bits, exu.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 28875:7]
    connect io.dmem.req.valid, exu.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 28876:7]
    connect exu.io.dmem.req.ready, io.dmem.req.ready @[build/NutShell.fir.opt.mlir 28877:7]
    connect exu.csr_meip__bore, exu_csr_meip__bore @[build/NutShell.fir.opt.mlir 28878:7]
    connect exu_lsu__WIRE__bore, exu.lsu__WIRE__bore @[build/NutShell.fir.opt.mlir 28879:7]
    connect exu_csr__WIRE__bore, exu.csr__WIRE__bore @[build/NutShell.fir.opt.mlir 28880:7]
    connect exu_csr__WIRE__bore_0, exu.csr__WIRE__bore_0 @[build/NutShell.fir.opt.mlir 28881:7]
    connect exu.csr_mtip__bore, exu_csr_mtip__bore @[build/NutShell.fir.opt.mlir 28882:7]
    connect exu.lsu_lsuMMIO__bore, exu_lsu_lsuMMIO__bore @[build/NutShell.fir.opt.mlir 28883:7]
    connect exu_alu_REG__bore, exu.alu_REG__bore @[build/NutShell.fir.opt.mlir 28884:7]
    connect exu.lsu_lsExecUnit_dtlbEnable__bore, exu_lsu_lsExecUnit_dtlbEnable__bore @[build/NutShell.fir.opt.mlir 28885:7]
    connect exu.lsu_dtlbEnable__bore, exu_lsu_dtlbEnable__bore @[build/NutShell.fir.opt.mlir 28886:7]
    connect exu.csr_msip__bore, exu_csr_msip__bore @[build/NutShell.fir.opt.mlir 28887:7]
    connect exu.csr_perfCntCond_4__bore, exu_csr_perfCntCond_4__bore @[build/NutShell.fir.opt.mlir 28888:7]
    connect exu.lsu_lsExecUnit_dtlbFinish__bore, exu_lsu_lsExecUnit_dtlbFinish__bore @[build/NutShell.fir.opt.mlir 28889:7]
    connect exu.lsu_dtlbFinish__bore, exu_lsu_dtlbFinish__bore @[build/NutShell.fir.opt.mlir 28890:7]
    connect exu_csr_satp__bore, exu.csr_satp__bore @[build/NutShell.fir.opt.mlir 28891:7]
    connect exu_csr_satp__bore_0, exu.csr_satp__bore_0 @[build/NutShell.fir.opt.mlir 28892:7]
    connect exu_mou__WIRE_1__bore, exu.mou__WIRE_1__bore @[build/NutShell.fir.opt.mlir 28893:7]
    connect exu_mou__WIRE_1__bore_0, exu.mou__WIRE_1__bore_0 @[build/NutShell.fir.opt.mlir 28894:7]
    connect exu_mou__WIRE_1__bore_1, exu.mou__WIRE_1__bore_1 @[build/NutShell.fir.opt.mlir 28895:7]
    connect exu.lsu_lsExecUnit_dtlbPF__bore, exu_lsu_lsExecUnit_dtlbPF__bore @[build/NutShell.fir.opt.mlir 28896:7]
    connect exu.lsu_dtlbPF__bore, exu_lsu_dtlbPF__bore @[build/NutShell.fir.opt.mlir 28897:7]
    connect exu_mou__WIRE__bore, exu.mou__WIRE__bore @[build/NutShell.fir.opt.mlir 28898:7]
    connect exu_mou__WIRE__bore_0, exu.mou__WIRE__bore_0 @[build/NutShell.fir.opt.mlir 28899:7]
    connect exu.csr_perfCntCond_15__bore, exu_csr_perfCntCond_15__bore @[build/NutShell.fir.opt.mlir 28900:7]
    connect exu.csr_perfCntCond_53__bore, isu._WIRE_2__bore @[build/NutShell.fir.opt.mlir 28901:7]
    connect exu.csr_perfCntCond_50__bore, isu._WIRE_1__bore @[build/NutShell.fir.opt.mlir 28902:7]
    connect exu.csr_perfCntCond_49__bore, isu._WIRE__bore @[build/NutShell.fir.opt.mlir 28903:7]
    connect exu.csr_perfCntCond_3__bore, wbu.falseWire__bore @[build/NutShell.fir.opt.mlir 28904:7]
    connect exu.csr_perfCntCond_2__bore, wbu.io_in_valid__bore @[build/NutShell.fir.opt.mlir 28905:7]

  extmodule LogPerfHelper_20 : @[build/NutShell.fir.opt.mlir 28907:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 28907:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 28907:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 28907:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 28907:141]
    defname = LogPerfHelper

  module LockingArbiter : @[build/NutShell.fir.opt.mlir 28908:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28908:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28908:72]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 28908:99]

    wire io_chosen_choice : UInt @[build/NutShell.fir.opt.mlir 28921:27]
    connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 28923:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 28924:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 28927:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 28930:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 28932:26]
    reg lockIdx : UInt, clock @[build/NutShell.fir.opt.mlir 28933:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28936:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 28938:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 28940:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 28942:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 28944:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 28946:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 28948:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 28949:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 28951:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28953:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 28955:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 28956:9]
    when locked : @[build/NutShell.fir.opt.mlir 28958:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 28959:9]
    node _T_2 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28962:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 28964:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28966:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 28968:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 28969:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 28971:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_2) @[build/NutShell.fir.opt.mlir 28973:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 28975:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 28976:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 28977:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 28978:9]

  module SimpleBusCrossbarNto1 : @[build/NutShell.fir.opt.mlir 28981:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 28981:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 28981:79]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[2], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 28981:106]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29010:16]
    inst inputArb of LockingArbiter @[build/NutShell.fir.opt.mlir 29011:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 29027:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 29028:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 29029:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 29030:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 29031:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 29032:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 29033:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 29034:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29036:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29039:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29041:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29043:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 29045:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29047:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 29049:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29051:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29053:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 29055:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29057:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 29059:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29061:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 29063:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29065:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 29066:9]
        skip @[build/NutShell.fir.opt.mlir 29067:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 29069:9]
    regreset inflightSrc : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29071:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 29072:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29074:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 29076:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 29077:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29079:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 29081:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 29082:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29083:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29084:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29086:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29088:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 29092:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 29096:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 29098:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 29103:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 29105:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 29106:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 29107:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29109:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29111:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29113:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29115:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 29117:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 29118:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 29120:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 29123:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29125:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 29127:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 29128:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 29130:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 29136:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 29137:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29139:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 29141:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 29143:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 29144:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29146:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 29150:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 29151:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29153:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 29154:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29156:15]

  module LockingArbiter_1 : @[build/NutShell.fir.opt.mlir 29162:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 29162:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 29162:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[4], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<2> } @[build/NutShell.fir.opt.mlir 29162:101]

    wire io_chosen_choice : UInt @[build/NutShell.fir.opt.mlir 29181:27]
    connect io_chosen_choice, UInt<2>(3) @[build/NutShell.fir.opt.mlir 29183:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 29184:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 29187:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 29190:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 29192:26]
    reg lockIdx : UInt, clock @[build/NutShell.fir.opt.mlir 29193:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29196:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29198:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 29200:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 29202:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 29204:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 29206:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 29209:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 29210:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 29212:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29214:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 29216:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 29217:9]
    when locked : @[build/NutShell.fir.opt.mlir 29219:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 29220:9]
    node _T_2 = or(io.in[0].valid, io.in[1].valid) @[build/NutShell.fir.opt.mlir 29223:15]
    node _T_3 = or(_T_2, io.in[2].valid) @[build/NutShell.fir.opt.mlir 29225:15]
    node _T_4 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29227:15]
    node _T_5 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29229:15]
    node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29231:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29233:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29235:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29237:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 29238:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29240:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_4) @[build/NutShell.fir.opt.mlir 29242:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29244:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 29245:7]
    node _io_in_2_ready_T = eq(lockIdx, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 29248:27]
    node _io_in_2_ready_T_1 = mux(locked, _io_in_2_ready_T, _T_5) @[build/NutShell.fir.opt.mlir 29250:29]
    node _io_in_2_ready_T_2 = and(_io_in_2_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29252:29]
    connect io.in[2].ready, _io_in_2_ready_T_2 @[build/NutShell.fir.opt.mlir 29253:7]
    node _io_in_3_ready_T = eq(lockIdx, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 29255:27]
    node _io_in_3_ready_T_1 = mux(locked, _io_in_3_ready_T, _T_6) @[build/NutShell.fir.opt.mlir 29257:29]
    node _io_in_3_ready_T_2 = and(_io_in_3_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 29259:29]
    connect io.in[3].ready, _io_in_3_ready_T_2 @[build/NutShell.fir.opt.mlir 29260:7]
    when io.in[2].valid : @[build/NutShell.fir.opt.mlir 29261:7]
      connect io_chosen_choice, UInt<2>(2) @[build/NutShell.fir.opt.mlir 29262:9]
    when io.in[1].valid : @[build/NutShell.fir.opt.mlir 29264:7]
      connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 29265:9]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 29267:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29268:9]

  module SimpleBusCrossbarNto1_1 : @[build/NutShell.fir.opt.mlir 29271:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 29271:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 29271:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[4], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 29271:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29316:16]
    inst inputArb of LockingArbiter_1 @[build/NutShell.fir.opt.mlir 29317:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 29341:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 29342:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 29343:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 29344:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 29345:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 29346:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 29347:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 29348:7]
    connect io.in[2].req.ready, inputArb.io.in[2].ready @[build/NutShell.fir.opt.mlir 29349:7]
    connect inputArb.io.in[2].valid, io.in[2].req.valid @[build/NutShell.fir.opt.mlir 29350:7]
    connect inputArb.io.in[2].bits, io.in[2].req.bits @[build/NutShell.fir.opt.mlir 29351:7]
    connect io.in[3].req.ready, inputArb.io.in[3].ready @[build/NutShell.fir.opt.mlir 29352:7]
    connect inputArb.io.in[3].valid, io.in[3].req.valid @[build/NutShell.fir.opt.mlir 29353:7]
    connect inputArb.io.in[3].bits, io.in[3].req.bits @[build/NutShell.fir.opt.mlir 29354:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29356:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29359:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29361:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29363:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 29365:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29367:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 29369:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29371:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29373:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 29375:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29377:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 29379:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29381:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 29383:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29385:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 29386:9]
        skip @[build/NutShell.fir.opt.mlir 29387:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 29389:9]
    regreset inflightSrc : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29391:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 29392:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29394:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 29396:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 29397:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 29399:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 29401:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 29402:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29403:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29404:7]
    connect io.in[2].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29405:7]
    connect io.in[3].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 29406:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29408:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29410:7]
    connect io.in[2].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29412:7]
    connect io.in[3].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29414:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 29418:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 29422:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 29424:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 29429:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 29431:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 29432:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 29433:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 29435:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29437:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 29439:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 29441:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 29443:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 29444:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 29446:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 29449:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 29451:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 29453:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 29454:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 29456:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 29462:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 29463:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29465:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 29467:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 29469:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 29470:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29472:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 29476:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 29477:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 29479:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 29480:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 29482:15]

  extmodule LogPerfHelper_21 : @[build/NutShell.fir.opt.mlir 29488:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 29488:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 29488:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 29488:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 29488:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_22 : @[build/NutShell.fir.opt.mlir 29489:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 29489:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 29489:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 29489:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 29489:141]
    defname = LogPerfHelper

  module EmbeddedTLBExec : @[build/NutShell.fir.opt.mlir 29490:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 29490:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 29490:73]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip md : UInt<121>[4], mdWrite : { wen : UInt<1>, windex : UInt<1>, waymask : UInt<4>, wdata : UInt<121> }, flip mdReady : UInt<1>, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, flip satp : UInt<64>, pf : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, ipf : UInt<1>, isFinish : UInt<1> } @[build/NutShell.fir.opt.mlir 29490:100]

    wire _vpn_WIRE : { vpn : UInt<27>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 29548:20]
    wire _vpn_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 29551:22]
    connect _vpn_WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 29552:7]
    node _vpn_T = bits(_vpn_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 29554:17]
    connect _vpn_WIRE.off, _vpn_T @[build/NutShell.fir.opt.mlir 29555:7]
    node _vpn_T_1 = bits(_vpn_WIRE_1, 38, 12) @[build/NutShell.fir.opt.mlir 29557:19]
    connect _vpn_WIRE.vpn, _vpn_T_1 @[build/NutShell.fir.opt.mlir 29558:7]
    wire vpn : { vpn2 : UInt<9>, vpn1 : UInt<9>, vpn0 : UInt<9> } @[build/NutShell.fir.opt.mlir 29559:14]
    wire _vpn_WIRE_2 : UInt<27> @[build/NutShell.fir.opt.mlir 29563:22]
    connect _vpn_WIRE_2, _vpn_WIRE.vpn @[build/NutShell.fir.opt.mlir 29564:7]
    node _vpn_T_2 = bits(_vpn_WIRE_2, 8, 0) @[build/NutShell.fir.opt.mlir 29566:19]
    connect vpn.vpn0, _vpn_T_2 @[build/NutShell.fir.opt.mlir 29567:7]
    node _vpn_T_3 = bits(_vpn_WIRE_2, 17, 9) @[build/NutShell.fir.opt.mlir 29569:19]
    connect vpn.vpn1, _vpn_T_3 @[build/NutShell.fir.opt.mlir 29570:7]
    node _vpn_T_4 = bits(_vpn_WIRE_2, 26, 18) @[build/NutShell.fir.opt.mlir 29572:19]
    connect vpn.vpn2, _vpn_T_4 @[build/NutShell.fir.opt.mlir 29573:7]
    wire satp : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 29574:15]
    wire _satp_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 29579:21]
    connect _satp_WIRE, io.satp @[build/NutShell.fir.opt.mlir 29580:7]
    node _satp_T = bits(_satp_WIRE, 19, 0) @[build/NutShell.fir.opt.mlir 29582:18]
    connect satp.ppn, _satp_T @[build/NutShell.fir.opt.mlir 29583:7]
    node _satp_T_1 = bits(_satp_WIRE, 43, 20) @[build/NutShell.fir.opt.mlir 29585:20]
    connect satp.res, _satp_T_1 @[build/NutShell.fir.opt.mlir 29586:7]
    node _satp_T_2 = bits(_satp_WIRE, 59, 44) @[build/NutShell.fir.opt.mlir 29588:20]
    connect satp.asid, _satp_T_2 @[build/NutShell.fir.opt.mlir 29589:7]
    node _satp_T_3 = bits(_satp_WIRE, 63, 60) @[build/NutShell.fir.opt.mlir 29591:20]
    connect satp.mode, _satp_T_3 @[build/NutShell.fir.opt.mlir 29592:7]
    connect io.pf.loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29595:7]
    connect io.pf.storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 29597:7]
    connect io.pf.addr, io.in.bits.addr @[build/NutShell.fir.opt.mlir 29598:7]
    wire _hitVec_WIRE : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29599:23]
    wire _hitVec_WIRE_1 : UInt<121> @[build/NutShell.fir.opt.mlir 29606:25]
    connect _hitVec_WIRE_1, io.md[0] @[build/NutShell.fir.opt.mlir 29607:7]
    node _hitVec_T = bits(_hitVec_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 29609:20]
    connect _hitVec_WIRE.pteaddr, _hitVec_T @[build/NutShell.fir.opt.mlir 29610:7]
    node _hitVec_T_1 = bits(_hitVec_WIRE_1, 51, 32) @[build/NutShell.fir.opt.mlir 29612:22]
    connect _hitVec_WIRE.ppn, _hitVec_T_1 @[build/NutShell.fir.opt.mlir 29613:7]
    node _hitVec_T_2 = bits(_hitVec_WIRE_1, 59, 52) @[build/NutShell.fir.opt.mlir 29615:22]
    connect _hitVec_WIRE.flag, _hitVec_T_2 @[build/NutShell.fir.opt.mlir 29616:7]
    node _hitVec_T_3 = bits(_hitVec_WIRE_1, 77, 60) @[build/NutShell.fir.opt.mlir 29618:22]
    connect _hitVec_WIRE.mask, _hitVec_T_3 @[build/NutShell.fir.opt.mlir 29619:7]
    node _hitVec_T_4 = bits(_hitVec_WIRE_1, 93, 78) @[build/NutShell.fir.opt.mlir 29621:22]
    connect _hitVec_WIRE.asid, _hitVec_T_4 @[build/NutShell.fir.opt.mlir 29622:7]
    node _hitVec_T_5 = bits(_hitVec_WIRE_1, 120, 94) @[build/NutShell.fir.opt.mlir 29624:22]
    connect _hitVec_WIRE.vpn, _hitVec_T_5 @[build/NutShell.fir.opt.mlir 29625:7]
    wire _hitVec_WIRE_2 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29626:25]
    wire _hitVec_WIRE_3 : UInt<8> @[build/NutShell.fir.opt.mlir 29635:25]
    connect _hitVec_WIRE_3, _hitVec_WIRE.flag @[build/NutShell.fir.opt.mlir 29636:7]
    node _hitVec_T_6 = bits(_hitVec_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 29638:22]
    connect _hitVec_WIRE_2.v, _hitVec_T_6 @[build/NutShell.fir.opt.mlir 29639:7]
    node _hitVec_T_7 = bits(_hitVec_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 29641:22]
    connect _hitVec_WIRE_2.r, _hitVec_T_7 @[build/NutShell.fir.opt.mlir 29642:7]
    node _hitVec_T_8 = bits(_hitVec_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 29644:22]
    connect _hitVec_WIRE_2.w, _hitVec_T_8 @[build/NutShell.fir.opt.mlir 29645:7]
    node _hitVec_T_9 = bits(_hitVec_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 29647:22]
    connect _hitVec_WIRE_2.x, _hitVec_T_9 @[build/NutShell.fir.opt.mlir 29648:7]
    node _hitVec_T_10 = bits(_hitVec_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 29650:23]
    connect _hitVec_WIRE_2.u, _hitVec_T_10 @[build/NutShell.fir.opt.mlir 29651:7]
    node _hitVec_T_11 = bits(_hitVec_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 29653:23]
    connect _hitVec_WIRE_2.g, _hitVec_T_11 @[build/NutShell.fir.opt.mlir 29654:7]
    node _hitVec_T_12 = bits(_hitVec_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 29656:23]
    connect _hitVec_WIRE_2.a, _hitVec_T_12 @[build/NutShell.fir.opt.mlir 29657:7]
    node _hitVec_T_13 = bits(_hitVec_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 29659:23]
    connect _hitVec_WIRE_2.d, _hitVec_T_13 @[build/NutShell.fir.opt.mlir 29660:7]
    wire _hitVec_WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29661:25]
    wire _hitVec_WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 29668:25]
    connect _hitVec_WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 29669:7]
    node _hitVec_T_14 = bits(_hitVec_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 29671:23]
    connect _hitVec_WIRE_4.pteaddr, _hitVec_T_14 @[build/NutShell.fir.opt.mlir 29672:7]
    node _hitVec_T_15 = bits(_hitVec_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 29674:23]
    connect _hitVec_WIRE_4.ppn, _hitVec_T_15 @[build/NutShell.fir.opt.mlir 29675:7]
    node _hitVec_T_16 = bits(_hitVec_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 29677:23]
    connect _hitVec_WIRE_4.flag, _hitVec_T_16 @[build/NutShell.fir.opt.mlir 29678:7]
    node _hitVec_T_17 = bits(_hitVec_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 29680:23]
    connect _hitVec_WIRE_4.mask, _hitVec_T_17 @[build/NutShell.fir.opt.mlir 29681:7]
    node _hitVec_T_18 = bits(_hitVec_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 29683:23]
    connect _hitVec_WIRE_4.asid, _hitVec_T_18 @[build/NutShell.fir.opt.mlir 29684:7]
    node _hitVec_T_19 = bits(_hitVec_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 29686:23]
    connect _hitVec_WIRE_4.vpn, _hitVec_T_19 @[build/NutShell.fir.opt.mlir 29687:7]
    node _hitVec_T_20 = eq(_hitVec_WIRE_4.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29689:23]
    node _hitVec_T_21 = and(_hitVec_WIRE_2.v, _hitVec_T_20) @[build/NutShell.fir.opt.mlir 29691:23]
    wire _hitVec_WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29692:25]
    wire _hitVec_WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 29699:25]
    connect _hitVec_WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 29700:7]
    node _hitVec_T_22 = bits(_hitVec_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 29702:23]
    connect _hitVec_WIRE_6.pteaddr, _hitVec_T_22 @[build/NutShell.fir.opt.mlir 29703:7]
    node _hitVec_T_23 = bits(_hitVec_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 29705:23]
    connect _hitVec_WIRE_6.ppn, _hitVec_T_23 @[build/NutShell.fir.opt.mlir 29706:7]
    node _hitVec_T_24 = bits(_hitVec_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 29708:23]
    connect _hitVec_WIRE_6.flag, _hitVec_T_24 @[build/NutShell.fir.opt.mlir 29709:7]
    node _hitVec_T_25 = bits(_hitVec_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 29711:23]
    connect _hitVec_WIRE_6.mask, _hitVec_T_25 @[build/NutShell.fir.opt.mlir 29712:7]
    node _hitVec_T_26 = bits(_hitVec_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 29714:23]
    connect _hitVec_WIRE_6.asid, _hitVec_T_26 @[build/NutShell.fir.opt.mlir 29715:7]
    node _hitVec_T_27 = bits(_hitVec_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 29717:23]
    connect _hitVec_WIRE_6.vpn, _hitVec_T_27 @[build/NutShell.fir.opt.mlir 29718:7]
    wire _hitVec_WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29719:25]
    wire _hitVec_WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 29726:25]
    connect _hitVec_WIRE_9, io.md[0] @[build/NutShell.fir.opt.mlir 29727:7]
    node _hitVec_T_28 = bits(_hitVec_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 29729:23]
    connect _hitVec_WIRE_8.pteaddr, _hitVec_T_28 @[build/NutShell.fir.opt.mlir 29730:7]
    node _hitVec_T_29 = bits(_hitVec_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 29732:23]
    connect _hitVec_WIRE_8.ppn, _hitVec_T_29 @[build/NutShell.fir.opt.mlir 29733:7]
    node _hitVec_T_30 = bits(_hitVec_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 29735:23]
    connect _hitVec_WIRE_8.flag, _hitVec_T_30 @[build/NutShell.fir.opt.mlir 29736:7]
    node _hitVec_T_31 = bits(_hitVec_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 29738:23]
    connect _hitVec_WIRE_8.mask, _hitVec_T_31 @[build/NutShell.fir.opt.mlir 29739:7]
    node _hitVec_T_32 = bits(_hitVec_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 29741:23]
    connect _hitVec_WIRE_8.asid, _hitVec_T_32 @[build/NutShell.fir.opt.mlir 29742:7]
    node _hitVec_T_33 = bits(_hitVec_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 29744:23]
    connect _hitVec_WIRE_8.vpn, _hitVec_T_33 @[build/NutShell.fir.opt.mlir 29745:7]
    node hitVec_hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 29747:20]
    node _hitVec_T_34 = cat(hitVec_hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 29749:23]
    node _hitVec_T_35 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 29752:23]
    node _hitVec_T_36 = and(_hitVec_T_35, _hitVec_WIRE_8.vpn) @[build/NutShell.fir.opt.mlir 29754:23]
    node _hitVec_T_37 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 29756:23]
    node _hitVec_T_38 = and(_hitVec_T_37, _hitVec_T_34) @[build/NutShell.fir.opt.mlir 29758:23]
    node _hitVec_T_39 = eq(_hitVec_T_36, _hitVec_T_38) @[build/NutShell.fir.opt.mlir 29760:23]
    node _hitVec_T_40 = and(_hitVec_T_21, _hitVec_T_39) @[build/NutShell.fir.opt.mlir 29762:23]
    wire _hitVec_WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29763:26]
    wire _hitVec_WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 29770:26]
    connect _hitVec_WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 29771:7]
    node _hitVec_T_41 = bits(_hitVec_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 29773:23]
    connect _hitVec_WIRE_10.pteaddr, _hitVec_T_41 @[build/NutShell.fir.opt.mlir 29774:7]
    node _hitVec_T_42 = bits(_hitVec_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 29776:23]
    connect _hitVec_WIRE_10.ppn, _hitVec_T_42 @[build/NutShell.fir.opt.mlir 29777:7]
    node _hitVec_T_43 = bits(_hitVec_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 29779:23]
    connect _hitVec_WIRE_10.flag, _hitVec_T_43 @[build/NutShell.fir.opt.mlir 29780:7]
    node _hitVec_T_44 = bits(_hitVec_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 29782:23]
    connect _hitVec_WIRE_10.mask, _hitVec_T_44 @[build/NutShell.fir.opt.mlir 29783:7]
    node _hitVec_T_45 = bits(_hitVec_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 29785:23]
    connect _hitVec_WIRE_10.asid, _hitVec_T_45 @[build/NutShell.fir.opt.mlir 29786:7]
    node _hitVec_T_46 = bits(_hitVec_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 29788:23]
    connect _hitVec_WIRE_10.vpn, _hitVec_T_46 @[build/NutShell.fir.opt.mlir 29789:7]
    wire _hitVec_WIRE_12 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29790:26]
    wire _hitVec_WIRE_13 : UInt<8> @[build/NutShell.fir.opt.mlir 29799:26]
    connect _hitVec_WIRE_13, _hitVec_WIRE_10.flag @[build/NutShell.fir.opt.mlir 29800:7]
    node _hitVec_T_47 = bits(_hitVec_WIRE_13, 0, 0) @[build/NutShell.fir.opt.mlir 29802:23]
    connect _hitVec_WIRE_12.v, _hitVec_T_47 @[build/NutShell.fir.opt.mlir 29803:7]
    node _hitVec_T_48 = bits(_hitVec_WIRE_13, 1, 1) @[build/NutShell.fir.opt.mlir 29805:23]
    connect _hitVec_WIRE_12.r, _hitVec_T_48 @[build/NutShell.fir.opt.mlir 29806:7]
    node _hitVec_T_49 = bits(_hitVec_WIRE_13, 2, 2) @[build/NutShell.fir.opt.mlir 29808:23]
    connect _hitVec_WIRE_12.w, _hitVec_T_49 @[build/NutShell.fir.opt.mlir 29809:7]
    node _hitVec_T_50 = bits(_hitVec_WIRE_13, 3, 3) @[build/NutShell.fir.opt.mlir 29811:23]
    connect _hitVec_WIRE_12.x, _hitVec_T_50 @[build/NutShell.fir.opt.mlir 29812:7]
    node _hitVec_T_51 = bits(_hitVec_WIRE_13, 4, 4) @[build/NutShell.fir.opt.mlir 29814:23]
    connect _hitVec_WIRE_12.u, _hitVec_T_51 @[build/NutShell.fir.opt.mlir 29815:7]
    node _hitVec_T_52 = bits(_hitVec_WIRE_13, 5, 5) @[build/NutShell.fir.opt.mlir 29817:23]
    connect _hitVec_WIRE_12.g, _hitVec_T_52 @[build/NutShell.fir.opt.mlir 29818:7]
    node _hitVec_T_53 = bits(_hitVec_WIRE_13, 6, 6) @[build/NutShell.fir.opt.mlir 29820:23]
    connect _hitVec_WIRE_12.a, _hitVec_T_53 @[build/NutShell.fir.opt.mlir 29821:7]
    node _hitVec_T_54 = bits(_hitVec_WIRE_13, 7, 7) @[build/NutShell.fir.opt.mlir 29823:23]
    connect _hitVec_WIRE_12.d, _hitVec_T_54 @[build/NutShell.fir.opt.mlir 29824:7]
    wire _hitVec_WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29825:26]
    wire _hitVec_WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 29832:26]
    connect _hitVec_WIRE_15, io.md[1] @[build/NutShell.fir.opt.mlir 29833:7]
    node _hitVec_T_55 = bits(_hitVec_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 29835:23]
    connect _hitVec_WIRE_14.pteaddr, _hitVec_T_55 @[build/NutShell.fir.opt.mlir 29836:7]
    node _hitVec_T_56 = bits(_hitVec_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 29838:23]
    connect _hitVec_WIRE_14.ppn, _hitVec_T_56 @[build/NutShell.fir.opt.mlir 29839:7]
    node _hitVec_T_57 = bits(_hitVec_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 29841:23]
    connect _hitVec_WIRE_14.flag, _hitVec_T_57 @[build/NutShell.fir.opt.mlir 29842:7]
    node _hitVec_T_58 = bits(_hitVec_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 29844:23]
    connect _hitVec_WIRE_14.mask, _hitVec_T_58 @[build/NutShell.fir.opt.mlir 29845:7]
    node _hitVec_T_59 = bits(_hitVec_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 29847:23]
    connect _hitVec_WIRE_14.asid, _hitVec_T_59 @[build/NutShell.fir.opt.mlir 29848:7]
    node _hitVec_T_60 = bits(_hitVec_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 29850:23]
    connect _hitVec_WIRE_14.vpn, _hitVec_T_60 @[build/NutShell.fir.opt.mlir 29851:7]
    node _hitVec_T_61 = eq(_hitVec_WIRE_14.asid, satp.asid) @[build/NutShell.fir.opt.mlir 29853:23]
    node _hitVec_T_62 = and(_hitVec_WIRE_12.v, _hitVec_T_61) @[build/NutShell.fir.opt.mlir 29855:23]
    wire _hitVec_WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29856:26]
    wire _hitVec_WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 29863:26]
    connect _hitVec_WIRE_17, io.md[1] @[build/NutShell.fir.opt.mlir 29864:7]
    node _hitVec_T_63 = bits(_hitVec_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 29866:23]
    connect _hitVec_WIRE_16.pteaddr, _hitVec_T_63 @[build/NutShell.fir.opt.mlir 29867:7]
    node _hitVec_T_64 = bits(_hitVec_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 29869:23]
    connect _hitVec_WIRE_16.ppn, _hitVec_T_64 @[build/NutShell.fir.opt.mlir 29870:7]
    node _hitVec_T_65 = bits(_hitVec_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 29872:23]
    connect _hitVec_WIRE_16.flag, _hitVec_T_65 @[build/NutShell.fir.opt.mlir 29873:7]
    node _hitVec_T_66 = bits(_hitVec_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 29875:23]
    connect _hitVec_WIRE_16.mask, _hitVec_T_66 @[build/NutShell.fir.opt.mlir 29876:7]
    node _hitVec_T_67 = bits(_hitVec_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 29878:23]
    connect _hitVec_WIRE_16.asid, _hitVec_T_67 @[build/NutShell.fir.opt.mlir 29879:7]
    node _hitVec_T_68 = bits(_hitVec_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 29881:23]
    connect _hitVec_WIRE_16.vpn, _hitVec_T_68 @[build/NutShell.fir.opt.mlir 29882:7]
    wire _hitVec_WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29883:26]
    wire _hitVec_WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 29890:26]
    connect _hitVec_WIRE_19, io.md[1] @[build/NutShell.fir.opt.mlir 29891:7]
    node _hitVec_T_69 = bits(_hitVec_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 29893:23]
    connect _hitVec_WIRE_18.pteaddr, _hitVec_T_69 @[build/NutShell.fir.opt.mlir 29894:7]
    node _hitVec_T_70 = bits(_hitVec_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 29896:23]
    connect _hitVec_WIRE_18.ppn, _hitVec_T_70 @[build/NutShell.fir.opt.mlir 29897:7]
    node _hitVec_T_71 = bits(_hitVec_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 29899:23]
    connect _hitVec_WIRE_18.flag, _hitVec_T_71 @[build/NutShell.fir.opt.mlir 29900:7]
    node _hitVec_T_72 = bits(_hitVec_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 29902:23]
    connect _hitVec_WIRE_18.mask, _hitVec_T_72 @[build/NutShell.fir.opt.mlir 29903:7]
    node _hitVec_T_73 = bits(_hitVec_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 29905:23]
    connect _hitVec_WIRE_18.asid, _hitVec_T_73 @[build/NutShell.fir.opt.mlir 29906:7]
    node _hitVec_T_74 = bits(_hitVec_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 29908:23]
    connect _hitVec_WIRE_18.vpn, _hitVec_T_74 @[build/NutShell.fir.opt.mlir 29909:7]
    node hitVec_hi_1 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 29911:22]
    node _hitVec_T_75 = cat(hitVec_hi_1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 29913:23]
    node _hitVec_T_76 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 29915:23]
    node _hitVec_T_77 = and(_hitVec_T_76, _hitVec_WIRE_18.vpn) @[build/NutShell.fir.opt.mlir 29917:23]
    node _hitVec_T_78 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 29919:23]
    node _hitVec_T_79 = and(_hitVec_T_78, _hitVec_T_75) @[build/NutShell.fir.opt.mlir 29921:23]
    node _hitVec_T_80 = eq(_hitVec_T_77, _hitVec_T_79) @[build/NutShell.fir.opt.mlir 29923:23]
    node _hitVec_T_81 = and(_hitVec_T_62, _hitVec_T_80) @[build/NutShell.fir.opt.mlir 29925:23]
    wire _hitVec_WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29926:26]
    wire _hitVec_WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 29933:26]
    connect _hitVec_WIRE_21, io.md[2] @[build/NutShell.fir.opt.mlir 29934:7]
    node _hitVec_T_82 = bits(_hitVec_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 29936:23]
    connect _hitVec_WIRE_20.pteaddr, _hitVec_T_82 @[build/NutShell.fir.opt.mlir 29937:7]
    node _hitVec_T_83 = bits(_hitVec_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 29939:23]
    connect _hitVec_WIRE_20.ppn, _hitVec_T_83 @[build/NutShell.fir.opt.mlir 29940:7]
    node _hitVec_T_84 = bits(_hitVec_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 29942:23]
    connect _hitVec_WIRE_20.flag, _hitVec_T_84 @[build/NutShell.fir.opt.mlir 29943:7]
    node _hitVec_T_85 = bits(_hitVec_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 29945:23]
    connect _hitVec_WIRE_20.mask, _hitVec_T_85 @[build/NutShell.fir.opt.mlir 29946:7]
    node _hitVec_T_86 = bits(_hitVec_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 29948:23]
    connect _hitVec_WIRE_20.asid, _hitVec_T_86 @[build/NutShell.fir.opt.mlir 29949:7]
    node _hitVec_T_87 = bits(_hitVec_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 29951:23]
    connect _hitVec_WIRE_20.vpn, _hitVec_T_87 @[build/NutShell.fir.opt.mlir 29952:7]
    wire _hitVec_WIRE_22 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 29953:26]
    wire _hitVec_WIRE_23 : UInt<8> @[build/NutShell.fir.opt.mlir 29962:26]
    connect _hitVec_WIRE_23, _hitVec_WIRE_20.flag @[build/NutShell.fir.opt.mlir 29963:7]
    node _hitVec_T_88 = bits(_hitVec_WIRE_23, 0, 0) @[build/NutShell.fir.opt.mlir 29965:23]
    connect _hitVec_WIRE_22.v, _hitVec_T_88 @[build/NutShell.fir.opt.mlir 29966:7]
    node _hitVec_T_89 = bits(_hitVec_WIRE_23, 1, 1) @[build/NutShell.fir.opt.mlir 29968:23]
    connect _hitVec_WIRE_22.r, _hitVec_T_89 @[build/NutShell.fir.opt.mlir 29969:7]
    node _hitVec_T_90 = bits(_hitVec_WIRE_23, 2, 2) @[build/NutShell.fir.opt.mlir 29971:23]
    connect _hitVec_WIRE_22.w, _hitVec_T_90 @[build/NutShell.fir.opt.mlir 29972:7]
    node _hitVec_T_91 = bits(_hitVec_WIRE_23, 3, 3) @[build/NutShell.fir.opt.mlir 29974:23]
    connect _hitVec_WIRE_22.x, _hitVec_T_91 @[build/NutShell.fir.opt.mlir 29975:7]
    node _hitVec_T_92 = bits(_hitVec_WIRE_23, 4, 4) @[build/NutShell.fir.opt.mlir 29977:23]
    connect _hitVec_WIRE_22.u, _hitVec_T_92 @[build/NutShell.fir.opt.mlir 29978:7]
    node _hitVec_T_93 = bits(_hitVec_WIRE_23, 5, 5) @[build/NutShell.fir.opt.mlir 29980:23]
    connect _hitVec_WIRE_22.g, _hitVec_T_93 @[build/NutShell.fir.opt.mlir 29981:7]
    node _hitVec_T_94 = bits(_hitVec_WIRE_23, 6, 6) @[build/NutShell.fir.opt.mlir 29983:23]
    connect _hitVec_WIRE_22.a, _hitVec_T_94 @[build/NutShell.fir.opt.mlir 29984:7]
    node _hitVec_T_95 = bits(_hitVec_WIRE_23, 7, 7) @[build/NutShell.fir.opt.mlir 29986:23]
    connect _hitVec_WIRE_22.d, _hitVec_T_95 @[build/NutShell.fir.opt.mlir 29987:7]
    wire _hitVec_WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 29988:26]
    wire _hitVec_WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 29995:26]
    connect _hitVec_WIRE_25, io.md[2] @[build/NutShell.fir.opt.mlir 29996:7]
    node _hitVec_T_96 = bits(_hitVec_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 29998:23]
    connect _hitVec_WIRE_24.pteaddr, _hitVec_T_96 @[build/NutShell.fir.opt.mlir 29999:7]
    node _hitVec_T_97 = bits(_hitVec_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 30001:23]
    connect _hitVec_WIRE_24.ppn, _hitVec_T_97 @[build/NutShell.fir.opt.mlir 30002:7]
    node _hitVec_T_98 = bits(_hitVec_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 30004:23]
    connect _hitVec_WIRE_24.flag, _hitVec_T_98 @[build/NutShell.fir.opt.mlir 30005:7]
    node _hitVec_T_99 = bits(_hitVec_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 30007:23]
    connect _hitVec_WIRE_24.mask, _hitVec_T_99 @[build/NutShell.fir.opt.mlir 30008:7]
    node _hitVec_T_100 = bits(_hitVec_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 30010:24]
    connect _hitVec_WIRE_24.asid, _hitVec_T_100 @[build/NutShell.fir.opt.mlir 30011:7]
    node _hitVec_T_101 = bits(_hitVec_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 30013:24]
    connect _hitVec_WIRE_24.vpn, _hitVec_T_101 @[build/NutShell.fir.opt.mlir 30014:7]
    node _hitVec_T_102 = eq(_hitVec_WIRE_24.asid, satp.asid) @[build/NutShell.fir.opt.mlir 30016:24]
    node _hitVec_T_103 = and(_hitVec_WIRE_22.v, _hitVec_T_102) @[build/NutShell.fir.opt.mlir 30018:24]
    wire _hitVec_WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30019:26]
    wire _hitVec_WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 30026:26]
    connect _hitVec_WIRE_27, io.md[2] @[build/NutShell.fir.opt.mlir 30027:7]
    node _hitVec_T_104 = bits(_hitVec_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 30029:24]
    connect _hitVec_WIRE_26.pteaddr, _hitVec_T_104 @[build/NutShell.fir.opt.mlir 30030:7]
    node _hitVec_T_105 = bits(_hitVec_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 30032:24]
    connect _hitVec_WIRE_26.ppn, _hitVec_T_105 @[build/NutShell.fir.opt.mlir 30033:7]
    node _hitVec_T_106 = bits(_hitVec_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 30035:24]
    connect _hitVec_WIRE_26.flag, _hitVec_T_106 @[build/NutShell.fir.opt.mlir 30036:7]
    node _hitVec_T_107 = bits(_hitVec_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 30038:24]
    connect _hitVec_WIRE_26.mask, _hitVec_T_107 @[build/NutShell.fir.opt.mlir 30039:7]
    node _hitVec_T_108 = bits(_hitVec_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 30041:24]
    connect _hitVec_WIRE_26.asid, _hitVec_T_108 @[build/NutShell.fir.opt.mlir 30042:7]
    node _hitVec_T_109 = bits(_hitVec_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 30044:24]
    connect _hitVec_WIRE_26.vpn, _hitVec_T_109 @[build/NutShell.fir.opt.mlir 30045:7]
    wire _hitVec_WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30046:26]
    wire _hitVec_WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 30053:26]
    connect _hitVec_WIRE_29, io.md[2] @[build/NutShell.fir.opt.mlir 30054:7]
    node _hitVec_T_110 = bits(_hitVec_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 30056:24]
    connect _hitVec_WIRE_28.pteaddr, _hitVec_T_110 @[build/NutShell.fir.opt.mlir 30057:7]
    node _hitVec_T_111 = bits(_hitVec_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 30059:24]
    connect _hitVec_WIRE_28.ppn, _hitVec_T_111 @[build/NutShell.fir.opt.mlir 30060:7]
    node _hitVec_T_112 = bits(_hitVec_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 30062:24]
    connect _hitVec_WIRE_28.flag, _hitVec_T_112 @[build/NutShell.fir.opt.mlir 30063:7]
    node _hitVec_T_113 = bits(_hitVec_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 30065:24]
    connect _hitVec_WIRE_28.mask, _hitVec_T_113 @[build/NutShell.fir.opt.mlir 30066:7]
    node _hitVec_T_114 = bits(_hitVec_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 30068:24]
    connect _hitVec_WIRE_28.asid, _hitVec_T_114 @[build/NutShell.fir.opt.mlir 30069:7]
    node _hitVec_T_115 = bits(_hitVec_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 30071:24]
    connect _hitVec_WIRE_28.vpn, _hitVec_T_115 @[build/NutShell.fir.opt.mlir 30072:7]
    node hitVec_hi_2 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 30074:22]
    node _hitVec_T_116 = cat(hitVec_hi_2, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30076:24]
    node _hitVec_T_117 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 30078:24]
    node _hitVec_T_118 = and(_hitVec_T_117, _hitVec_WIRE_28.vpn) @[build/NutShell.fir.opt.mlir 30080:24]
    node _hitVec_T_119 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 30082:24]
    node _hitVec_T_120 = and(_hitVec_T_119, _hitVec_T_116) @[build/NutShell.fir.opt.mlir 30084:24]
    node _hitVec_T_121 = eq(_hitVec_T_118, _hitVec_T_120) @[build/NutShell.fir.opt.mlir 30086:24]
    node _hitVec_T_122 = and(_hitVec_T_103, _hitVec_T_121) @[build/NutShell.fir.opt.mlir 30088:24]
    wire _hitVec_WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30089:26]
    wire _hitVec_WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 30096:26]
    connect _hitVec_WIRE_31, io.md[3] @[build/NutShell.fir.opt.mlir 30097:7]
    node _hitVec_T_123 = bits(_hitVec_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 30099:24]
    connect _hitVec_WIRE_30.pteaddr, _hitVec_T_123 @[build/NutShell.fir.opt.mlir 30100:7]
    node _hitVec_T_124 = bits(_hitVec_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 30102:24]
    connect _hitVec_WIRE_30.ppn, _hitVec_T_124 @[build/NutShell.fir.opt.mlir 30103:7]
    node _hitVec_T_125 = bits(_hitVec_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 30105:24]
    connect _hitVec_WIRE_30.flag, _hitVec_T_125 @[build/NutShell.fir.opt.mlir 30106:7]
    node _hitVec_T_126 = bits(_hitVec_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 30108:24]
    connect _hitVec_WIRE_30.mask, _hitVec_T_126 @[build/NutShell.fir.opt.mlir 30109:7]
    node _hitVec_T_127 = bits(_hitVec_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 30111:24]
    connect _hitVec_WIRE_30.asid, _hitVec_T_127 @[build/NutShell.fir.opt.mlir 30112:7]
    node _hitVec_T_128 = bits(_hitVec_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 30114:24]
    connect _hitVec_WIRE_30.vpn, _hitVec_T_128 @[build/NutShell.fir.opt.mlir 30115:7]
    wire _hitVec_WIRE_32 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 30116:26]
    wire _hitVec_WIRE_33 : UInt<8> @[build/NutShell.fir.opt.mlir 30125:26]
    connect _hitVec_WIRE_33, _hitVec_WIRE_30.flag @[build/NutShell.fir.opt.mlir 30126:7]
    node _hitVec_T_129 = bits(_hitVec_WIRE_33, 0, 0) @[build/NutShell.fir.opt.mlir 30128:24]
    connect _hitVec_WIRE_32.v, _hitVec_T_129 @[build/NutShell.fir.opt.mlir 30129:7]
    node _hitVec_T_130 = bits(_hitVec_WIRE_33, 1, 1) @[build/NutShell.fir.opt.mlir 30131:24]
    connect _hitVec_WIRE_32.r, _hitVec_T_130 @[build/NutShell.fir.opt.mlir 30132:7]
    node _hitVec_T_131 = bits(_hitVec_WIRE_33, 2, 2) @[build/NutShell.fir.opt.mlir 30134:24]
    connect _hitVec_WIRE_32.w, _hitVec_T_131 @[build/NutShell.fir.opt.mlir 30135:7]
    node _hitVec_T_132 = bits(_hitVec_WIRE_33, 3, 3) @[build/NutShell.fir.opt.mlir 30137:24]
    connect _hitVec_WIRE_32.x, _hitVec_T_132 @[build/NutShell.fir.opt.mlir 30138:7]
    node _hitVec_T_133 = bits(_hitVec_WIRE_33, 4, 4) @[build/NutShell.fir.opt.mlir 30140:24]
    connect _hitVec_WIRE_32.u, _hitVec_T_133 @[build/NutShell.fir.opt.mlir 30141:7]
    node _hitVec_T_134 = bits(_hitVec_WIRE_33, 5, 5) @[build/NutShell.fir.opt.mlir 30143:24]
    connect _hitVec_WIRE_32.g, _hitVec_T_134 @[build/NutShell.fir.opt.mlir 30144:7]
    node _hitVec_T_135 = bits(_hitVec_WIRE_33, 6, 6) @[build/NutShell.fir.opt.mlir 30146:24]
    connect _hitVec_WIRE_32.a, _hitVec_T_135 @[build/NutShell.fir.opt.mlir 30147:7]
    node _hitVec_T_136 = bits(_hitVec_WIRE_33, 7, 7) @[build/NutShell.fir.opt.mlir 30149:24]
    connect _hitVec_WIRE_32.d, _hitVec_T_136 @[build/NutShell.fir.opt.mlir 30150:7]
    wire _hitVec_WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30151:26]
    wire _hitVec_WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 30158:26]
    connect _hitVec_WIRE_35, io.md[3] @[build/NutShell.fir.opt.mlir 30159:7]
    node _hitVec_T_137 = bits(_hitVec_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 30161:24]
    connect _hitVec_WIRE_34.pteaddr, _hitVec_T_137 @[build/NutShell.fir.opt.mlir 30162:7]
    node _hitVec_T_138 = bits(_hitVec_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 30164:24]
    connect _hitVec_WIRE_34.ppn, _hitVec_T_138 @[build/NutShell.fir.opt.mlir 30165:7]
    node _hitVec_T_139 = bits(_hitVec_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 30167:24]
    connect _hitVec_WIRE_34.flag, _hitVec_T_139 @[build/NutShell.fir.opt.mlir 30168:7]
    node _hitVec_T_140 = bits(_hitVec_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 30170:24]
    connect _hitVec_WIRE_34.mask, _hitVec_T_140 @[build/NutShell.fir.opt.mlir 30171:7]
    node _hitVec_T_141 = bits(_hitVec_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 30173:24]
    connect _hitVec_WIRE_34.asid, _hitVec_T_141 @[build/NutShell.fir.opt.mlir 30174:7]
    node _hitVec_T_142 = bits(_hitVec_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 30176:24]
    connect _hitVec_WIRE_34.vpn, _hitVec_T_142 @[build/NutShell.fir.opt.mlir 30177:7]
    node _hitVec_T_143 = eq(_hitVec_WIRE_34.asid, satp.asid) @[build/NutShell.fir.opt.mlir 30179:24]
    node _hitVec_T_144 = and(_hitVec_WIRE_32.v, _hitVec_T_143) @[build/NutShell.fir.opt.mlir 30181:24]
    wire _hitVec_WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30182:26]
    wire _hitVec_WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 30189:26]
    connect _hitVec_WIRE_37, io.md[3] @[build/NutShell.fir.opt.mlir 30190:7]
    node _hitVec_T_145 = bits(_hitVec_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 30192:24]
    connect _hitVec_WIRE_36.pteaddr, _hitVec_T_145 @[build/NutShell.fir.opt.mlir 30193:7]
    node _hitVec_T_146 = bits(_hitVec_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 30195:24]
    connect _hitVec_WIRE_36.ppn, _hitVec_T_146 @[build/NutShell.fir.opt.mlir 30196:7]
    node _hitVec_T_147 = bits(_hitVec_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 30198:24]
    connect _hitVec_WIRE_36.flag, _hitVec_T_147 @[build/NutShell.fir.opt.mlir 30199:7]
    node _hitVec_T_148 = bits(_hitVec_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 30201:24]
    connect _hitVec_WIRE_36.mask, _hitVec_T_148 @[build/NutShell.fir.opt.mlir 30202:7]
    node _hitVec_T_149 = bits(_hitVec_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 30204:24]
    connect _hitVec_WIRE_36.asid, _hitVec_T_149 @[build/NutShell.fir.opt.mlir 30205:7]
    node _hitVec_T_150 = bits(_hitVec_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 30207:24]
    connect _hitVec_WIRE_36.vpn, _hitVec_T_150 @[build/NutShell.fir.opt.mlir 30208:7]
    wire _hitVec_WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30209:26]
    wire _hitVec_WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 30216:26]
    connect _hitVec_WIRE_39, io.md[3] @[build/NutShell.fir.opt.mlir 30217:7]
    node _hitVec_T_151 = bits(_hitVec_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 30219:24]
    connect _hitVec_WIRE_38.pteaddr, _hitVec_T_151 @[build/NutShell.fir.opt.mlir 30220:7]
    node _hitVec_T_152 = bits(_hitVec_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 30222:24]
    connect _hitVec_WIRE_38.ppn, _hitVec_T_152 @[build/NutShell.fir.opt.mlir 30223:7]
    node _hitVec_T_153 = bits(_hitVec_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 30225:24]
    connect _hitVec_WIRE_38.flag, _hitVec_T_153 @[build/NutShell.fir.opt.mlir 30226:7]
    node _hitVec_T_154 = bits(_hitVec_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 30228:24]
    connect _hitVec_WIRE_38.mask, _hitVec_T_154 @[build/NutShell.fir.opt.mlir 30229:7]
    node _hitVec_T_155 = bits(_hitVec_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 30231:24]
    connect _hitVec_WIRE_38.asid, _hitVec_T_155 @[build/NutShell.fir.opt.mlir 30232:7]
    node _hitVec_T_156 = bits(_hitVec_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 30234:24]
    connect _hitVec_WIRE_38.vpn, _hitVec_T_156 @[build/NutShell.fir.opt.mlir 30235:7]
    node hitVec_hi_3 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 30237:22]
    node _hitVec_T_157 = cat(hitVec_hi_3, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30239:24]
    node _hitVec_T_158 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 30241:24]
    node _hitVec_T_159 = and(_hitVec_T_158, _hitVec_WIRE_38.vpn) @[build/NutShell.fir.opt.mlir 30243:24]
    node _hitVec_T_160 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 30245:24]
    node _hitVec_T_161 = and(_hitVec_T_160, _hitVec_T_157) @[build/NutShell.fir.opt.mlir 30247:24]
    node _hitVec_T_162 = eq(_hitVec_T_159, _hitVec_T_161) @[build/NutShell.fir.opt.mlir 30249:24]
    node _hitVec_T_163 = and(_hitVec_T_144, _hitVec_T_162) @[build/NutShell.fir.opt.mlir 30251:24]
    wire _hitVec_WIRE_40 : UInt<1>[4] @[build/NutShell.fir.opt.mlir 30252:26]
    connect _hitVec_WIRE_40[0], _hitVec_T_40 @[build/NutShell.fir.opt.mlir 30257:7]
    connect _hitVec_WIRE_40[1], _hitVec_T_81 @[build/NutShell.fir.opt.mlir 30258:7]
    connect _hitVec_WIRE_40[2], _hitVec_T_122 @[build/NutShell.fir.opt.mlir 30259:7]
    connect _hitVec_WIRE_40[3], _hitVec_T_163 @[build/NutShell.fir.opt.mlir 30260:7]
    node hitVec_lo = cat(_hitVec_WIRE_40[1], _hitVec_WIRE_40[0]) @[build/NutShell.fir.opt.mlir 30262:20]
    node hitVec_hi_4 = cat(_hitVec_WIRE_40[3], _hitVec_WIRE_40[2]) @[build/NutShell.fir.opt.mlir 30264:22]
    node hitVec = cat(hitVec_hi_4, hitVec_lo) @[build/NutShell.fir.opt.mlir 30266:17]
    node _hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 30268:17]
    node hit = and(io.in.valid, _hit_T) @[build/NutShell.fir.opt.mlir 30270:14]
    node _miss_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 30272:18]
    node _miss_T_1 = eq(_miss_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30274:20]
    node miss = and(io.in.valid, _miss_T_1) @[build/NutShell.fir.opt.mlir 30276:15]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 30278:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 30280:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 30282:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 30284:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 30286:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 30288:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 30290:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 30292:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 30294:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30296:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 30298:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 30300:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 30302:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 30303:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 30306:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 30308:24]
    node waymask = mux(hit, hitVec, victimWaymask) @[build/NutShell.fir.opt.mlir 30310:18]
    wire loadPF : UInt<1> @[build/NutShell.fir.opt.mlir 30311:17]
    connect loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30313:7]
    wire storePF : UInt<1> @[build/NutShell.fir.opt.mlir 30314:18]
    connect storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30316:7]
    node _hitMeta_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 30318:21]
    node _hitMeta_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 30320:23]
    node _hitMeta_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 30322:23]
    node _hitMeta_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 30324:23]
    node _hitMeta_T_4 = mux(_hitMeta_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30326:23]
    node _hitMeta_T_5 = mux(_hitMeta_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30328:23]
    node _hitMeta_T_6 = mux(_hitMeta_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30330:23]
    node _hitMeta_T_7 = mux(_hitMeta_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30332:23]
    node _hitMeta_T_8 = or(_hitMeta_T_4, _hitMeta_T_5) @[build/NutShell.fir.opt.mlir 30334:23]
    node _hitMeta_T_9 = or(_hitMeta_T_8, _hitMeta_T_6) @[build/NutShell.fir.opt.mlir 30336:23]
    node _hitMeta_T_10 = or(_hitMeta_T_9, _hitMeta_T_7) @[build/NutShell.fir.opt.mlir 30338:24]
    wire _hitMeta_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 30339:24]
    connect _hitMeta_WIRE, _hitMeta_T_10 @[build/NutShell.fir.opt.mlir 30340:7]
    wire _hitMeta_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 30341:26]
    wire _hitMeta_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 30344:26]
    connect _hitMeta_WIRE_2, _hitMeta_WIRE @[build/NutShell.fir.opt.mlir 30345:7]
    node _hitMeta_T_11 = bits(_hitMeta_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 30347:24]
    connect _hitMeta_WIRE_1.data, _hitMeta_T_11 @[build/NutShell.fir.opt.mlir 30348:7]
    node _hitMeta_T_12 = bits(_hitMeta_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 30350:24]
    connect _hitMeta_WIRE_1.meta, _hitMeta_T_12 @[build/NutShell.fir.opt.mlir 30351:7]
    wire hitMeta : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8> } @[build/NutShell.fir.opt.mlir 30352:18]
    wire _hitMeta_WIRE_3 : UInt<69> @[build/NutShell.fir.opt.mlir 30357:26]
    connect _hitMeta_WIRE_3, _hitMeta_WIRE_1.meta @[build/NutShell.fir.opt.mlir 30358:7]
    node _hitMeta_T_13 = bits(_hitMeta_WIRE_3, 7, 0) @[build/NutShell.fir.opt.mlir 30360:24]
    connect hitMeta.flag, _hitMeta_T_13 @[build/NutShell.fir.opt.mlir 30361:7]
    node _hitMeta_T_14 = bits(_hitMeta_WIRE_3, 25, 8) @[build/NutShell.fir.opt.mlir 30363:24]
    connect hitMeta.mask, _hitMeta_T_14 @[build/NutShell.fir.opt.mlir 30364:7]
    node _hitMeta_T_15 = bits(_hitMeta_WIRE_3, 41, 26) @[build/NutShell.fir.opt.mlir 30366:24]
    connect hitMeta.asid, _hitMeta_T_15 @[build/NutShell.fir.opt.mlir 30367:7]
    node _hitMeta_T_16 = bits(_hitMeta_WIRE_3, 68, 42) @[build/NutShell.fir.opt.mlir 30369:24]
    connect hitMeta.vpn, _hitMeta_T_16 @[build/NutShell.fir.opt.mlir 30370:7]
    node _hitData_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 30372:21]
    node _hitData_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 30374:23]
    node _hitData_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 30376:23]
    node _hitData_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 30378:23]
    node _hitData_T_4 = mux(_hitData_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30380:23]
    node _hitData_T_5 = mux(_hitData_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30382:23]
    node _hitData_T_6 = mux(_hitData_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30384:23]
    node _hitData_T_7 = mux(_hitData_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30386:23]
    node _hitData_T_8 = or(_hitData_T_4, _hitData_T_5) @[build/NutShell.fir.opt.mlir 30388:23]
    node _hitData_T_9 = or(_hitData_T_8, _hitData_T_6) @[build/NutShell.fir.opt.mlir 30390:23]
    node _hitData_T_10 = or(_hitData_T_9, _hitData_T_7) @[build/NutShell.fir.opt.mlir 30392:24]
    wire _hitData_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 30393:24]
    connect _hitData_WIRE, _hitData_T_10 @[build/NutShell.fir.opt.mlir 30394:7]
    wire _hitData_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 30395:26]
    wire _hitData_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 30398:26]
    connect _hitData_WIRE_2, _hitData_WIRE @[build/NutShell.fir.opt.mlir 30399:7]
    node _hitData_T_11 = bits(_hitData_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 30401:24]
    connect _hitData_WIRE_1.data, _hitData_T_11 @[build/NutShell.fir.opt.mlir 30402:7]
    node _hitData_T_12 = bits(_hitData_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 30404:24]
    connect _hitData_WIRE_1.meta, _hitData_T_12 @[build/NutShell.fir.opt.mlir 30405:7]
    wire hitData : { ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 30406:18]
    wire _hitData_WIRE_3 : UInt<52> @[build/NutShell.fir.opt.mlir 30409:26]
    connect _hitData_WIRE_3, _hitData_WIRE_1.data @[build/NutShell.fir.opt.mlir 30410:7]
    node _hitData_T_13 = bits(_hitData_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 30412:24]
    connect hitData.pteaddr, _hitData_T_13 @[build/NutShell.fir.opt.mlir 30413:7]
    node _hitData_T_14 = bits(_hitData_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 30415:24]
    connect hitData.ppn, _hitData_T_14 @[build/NutShell.fir.opt.mlir 30416:7]
    wire hitFlag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 30417:18]
    wire _hitFlag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 30426:24]
    connect _hitFlag_WIRE, hitMeta.flag @[build/NutShell.fir.opt.mlir 30427:7]
    node _hitFlag_T = bits(_hitFlag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30429:21]
    connect hitFlag.v, _hitFlag_T @[build/NutShell.fir.opt.mlir 30430:7]
    node _hitFlag_T_1 = bits(_hitFlag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30432:23]
    connect hitFlag.r, _hitFlag_T_1 @[build/NutShell.fir.opt.mlir 30433:7]
    node _hitFlag_T_2 = bits(_hitFlag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30435:23]
    connect hitFlag.w, _hitFlag_T_2 @[build/NutShell.fir.opt.mlir 30436:7]
    node _hitFlag_T_3 = bits(_hitFlag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30438:23]
    connect hitFlag.x, _hitFlag_T_3 @[build/NutShell.fir.opt.mlir 30439:7]
    node _hitFlag_T_4 = bits(_hitFlag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30441:23]
    connect hitFlag.u, _hitFlag_T_4 @[build/NutShell.fir.opt.mlir 30442:7]
    node _hitFlag_T_5 = bits(_hitFlag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30444:23]
    connect hitFlag.g, _hitFlag_T_5 @[build/NutShell.fir.opt.mlir 30445:7]
    node _hitFlag_T_6 = bits(_hitFlag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30447:23]
    connect hitFlag.a, _hitFlag_T_6 @[build/NutShell.fir.opt.mlir 30448:7]
    node _hitFlag_T_7 = bits(_hitFlag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30450:23]
    connect hitFlag.d, _hitFlag_T_7 @[build/NutShell.fir.opt.mlir 30451:7]
    wire hitinstrPF : UInt<1> @[build/NutShell.fir.opt.mlir 30452:21]
    connect hitinstrPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30454:7]
    node _hitWB_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30456:19]
    node _hitWB_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30458:21]
    node _hitWB_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30460:21]
    node _hitWB_T_3 = and(_hitWB_T_1, _hitWB_T_2) @[build/NutShell.fir.opt.mlir 30462:21]
    node _hitWB_T_4 = or(_hitWB_T, _hitWB_T_3) @[build/NutShell.fir.opt.mlir 30464:21]
    node _hitWB_T_5 = and(hit, _hitWB_T_4) @[build/NutShell.fir.opt.mlir 30466:21]
    node _hitWB_T_6 = eq(hitinstrPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30468:21]
    node _hitWB_T_7 = and(_hitWB_T_5, _hitWB_T_6) @[build/NutShell.fir.opt.mlir 30470:21]
    node _hitWB_T_8 = or(loadPF, storePF) @[build/NutShell.fir.opt.mlir 30472:21]
    node _hitWB_T_9 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 30474:21]
    node _hitWB_T_10 = or(_hitWB_T_8, _hitWB_T_9) @[build/NutShell.fir.opt.mlir 30476:22]
    node _hitWB_T_11 = eq(_hitWB_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30478:22]
    node hitWB = and(_hitWB_T_7, _hitWB_T_11) @[build/NutShell.fir.opt.mlir 30480:16]
    node _hitRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30482:27]
    node hitRefillFlag_hi = cat(_hitRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30484:27]
    node _hitRefillFlag_T_1 = cat(hitRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30487:29]
    node hitRefillFlag_lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 30489:30]
    node hitRefillFlag_lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 30491:30]
    node hitRefillFlag_lo = cat(hitRefillFlag_lo_hi, hitRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 30493:27]
    node hitRefillFlag_hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 30495:30]
    node hitRefillFlag_hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 30497:30]
    node hitRefillFlag_hi_1 = cat(hitRefillFlag_hi_hi, hitRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 30499:29]
    node _hitRefillFlag_T_2 = cat(hitRefillFlag_hi_1, hitRefillFlag_lo) @[build/NutShell.fir.opt.mlir 30501:29]
    node hitRefillFlag = or(_hitRefillFlag_T_1, _hitRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 30503:24]
    node hitWBStore_lo = cat(UInt<2>(0), hitRefillFlag) @[build/NutShell.fir.opt.mlir 30506:24]
    node hitWBStore_hi = cat(UInt<10>(0), hitData.ppn) @[build/NutShell.fir.opt.mlir 30509:24]
    node _hitWBStore_T = cat(hitWBStore_hi, hitWBStore_lo) @[build/NutShell.fir.opt.mlir 30511:24]
    reg hitWBStore : UInt<40>, clock @[build/NutShell.fir.opt.mlir 30512:21]
    when hitWB : @[build/NutShell.fir.opt.mlir 30513:7]
      connect hitWBStore, _hitWBStore_T @[build/NutShell.fir.opt.mlir 30514:9]
    node _hitCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30517:22]
    node _hitCheck_T_1 = eq(hitFlag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30519:24]
    node _hitCheck_T_2 = and(_hitCheck_T, _hitCheck_T_1) @[build/NutShell.fir.opt.mlir 30521:24]
    node _hitCheck_T_3 = eq(_hitCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30523:24]
    node _hitCheck_T_4 = and(hit, _hitCheck_T_3) @[build/NutShell.fir.opt.mlir 30525:24]
    node _hitCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30527:24]
    node _hitCheck_T_6 = and(_hitCheck_T_5, hitFlag.u) @[build/NutShell.fir.opt.mlir 30529:24]
    node _hitCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30531:24]
    node _hitCheck_T_8 = or(_hitCheck_T_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30533:24]
    node _hitCheck_T_9 = and(_hitCheck_T_6, _hitCheck_T_8) @[build/NutShell.fir.opt.mlir 30535:24]
    node _hitCheck_T_10 = eq(_hitCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30537:25]
    node hitCheck = and(_hitCheck_T_4, _hitCheck_T_10) @[build/NutShell.fir.opt.mlir 30539:19]
    node _hitExec_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30541:21]
    node _hitExec_T_1 = and(hitCheck, _hitExec_T) @[build/NutShell.fir.opt.mlir 30543:23]
    node hitExec = and(_hitExec_T_1, hitFlag.x) @[build/NutShell.fir.opt.mlir 30545:18]
    node _hitLoad_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30547:21]
    node _hitLoad_T_1 = and(hitCheck, _hitLoad_T) @[build/NutShell.fir.opt.mlir 30549:23]
    node _hitLoad_T_2 = and(io.pf.status_mxr, hitFlag.x) @[build/NutShell.fir.opt.mlir 30551:23]
    node _hitLoad_T_3 = or(hitFlag.r, _hitLoad_T_2) @[build/NutShell.fir.opt.mlir 30553:23]
    node hitLoad = and(_hitLoad_T_1, _hitLoad_T_3) @[build/NutShell.fir.opt.mlir 30555:18]
    node _hitStore_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30557:22]
    node _hitStore_T_1 = and(hitCheck, _hitStore_T) @[build/NutShell.fir.opt.mlir 30559:24]
    node hitStore = and(_hitStore_T_1, hitFlag.w) @[build/NutShell.fir.opt.mlir 30561:19]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 30562:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30564:7]
    regreset io_pf_loadPF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30565:27]
    connect io_pf_loadPF_REG, loadPF @[build/NutShell.fir.opt.mlir 30566:7]
    connect io.pf.loadPF, io_pf_loadPF_REG @[build/NutShell.fir.opt.mlir 30567:7]
    regreset io_pf_storePF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30568:28]
    connect io_pf_storePF_REG, storePF @[build/NutShell.fir.opt.mlir 30569:7]
    connect io.pf.storePF, io_pf_storePF_REG @[build/NutShell.fir.opt.mlir 30570:7]
    node _hitinstrPF_T = eq(hitExec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30572:24]
    node _hitinstrPF_T_1 = and(_hitinstrPF_T, hit) @[build/NutShell.fir.opt.mlir 30574:26]
    connect hitinstrPF, _hitinstrPF_T_1 @[build/NutShell.fir.opt.mlir 30575:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30577:16]
    regreset level : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 30579:16]
    reg memRespStore : UInt<64>, clock @[build/NutShell.fir.opt.mlir 30580:23]
    wire missMask : UInt<18> @[build/NutShell.fir.opt.mlir 30581:19]
    connect missMask, UInt<18>(262143) @[build/NutShell.fir.opt.mlir 30584:7]
    reg missMaskStore : UInt<18>, clock @[build/NutShell.fir.opt.mlir 30585:24]
    wire missMetaRefill : UInt<1> @[build/NutShell.fir.opt.mlir 30586:25]
    connect missMetaRefill, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30588:7]
    wire missRefillFlag : UInt<8> @[build/NutShell.fir.opt.mlir 30589:25]
    connect missRefillFlag, UInt<8>(0) @[build/NutShell.fir.opt.mlir 30592:7]
    wire memRdata : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 30593:19]
    wire _memRdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 30606:25]
    connect _memRdata_WIRE, io.mem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 30607:7]
    node _memRdata_T = bits(_memRdata_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30609:22]
    connect memRdata.flag.v, _memRdata_T @[build/NutShell.fir.opt.mlir 30610:7]
    node _memRdata_T_1 = bits(_memRdata_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30612:24]
    connect memRdata.flag.r, _memRdata_T_1 @[build/NutShell.fir.opt.mlir 30613:7]
    node _memRdata_T_2 = bits(_memRdata_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30615:24]
    connect memRdata.flag.w, _memRdata_T_2 @[build/NutShell.fir.opt.mlir 30616:7]
    node _memRdata_T_3 = bits(_memRdata_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30618:24]
    connect memRdata.flag.x, _memRdata_T_3 @[build/NutShell.fir.opt.mlir 30619:7]
    node _memRdata_T_4 = bits(_memRdata_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30621:24]
    connect memRdata.flag.u, _memRdata_T_4 @[build/NutShell.fir.opt.mlir 30622:7]
    node _memRdata_T_5 = bits(_memRdata_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30624:24]
    connect memRdata.flag.g, _memRdata_T_5 @[build/NutShell.fir.opt.mlir 30625:7]
    node _memRdata_T_6 = bits(_memRdata_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30627:24]
    connect memRdata.flag.a, _memRdata_T_6 @[build/NutShell.fir.opt.mlir 30628:7]
    node _memRdata_T_7 = bits(_memRdata_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30630:24]
    connect memRdata.flag.d, _memRdata_T_7 @[build/NutShell.fir.opt.mlir 30631:7]
    node _memRdata_T_8 = bits(_memRdata_WIRE, 9, 8) @[build/NutShell.fir.opt.mlir 30633:24]
    connect memRdata.rsw, _memRdata_T_8 @[build/NutShell.fir.opt.mlir 30634:7]
    node _memRdata_T_9 = bits(_memRdata_WIRE, 29, 10) @[build/NutShell.fir.opt.mlir 30636:24]
    connect memRdata.ppn, _memRdata_T_9 @[build/NutShell.fir.opt.mlir 30637:7]
    node _memRdata_T_10 = bits(_memRdata_WIRE, 63, 30) @[build/NutShell.fir.opt.mlir 30639:25]
    connect memRdata.reserved, _memRdata_T_10 @[build/NutShell.fir.opt.mlir 30640:7]
    reg raddr : UInt<32>, clock @[build/NutShell.fir.opt.mlir 30641:16]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 30643:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30644:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 30645:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30647:9]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30649:20]
    node isFlush = or(needFlush, io.flush) @[build/NutShell.fir.opt.mlir 30651:18]
    node _T = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30653:13]
    node _T_1 = and(io.flush, _T) @[build/NutShell.fir.opt.mlir 30655:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 30656:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30658:9]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 30661:15]
    node _T_3 = and(_T_2, needFlush) @[build/NutShell.fir.opt.mlir 30663:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 30664:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30666:9]
    regreset missIPF : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30668:18]
    node _T_4 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 30670:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 30680:7]
      node _T_5 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30682:17]
      node _T_6 = and(_T_5, hitWB) @[build/NutShell.fir.opt.mlir 30684:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 30685:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 30687:11]
        connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30689:11]
        connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30691:11]
      else :
        node _T_7 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30694:19]
        node _T_8 = and(miss, _T_7) @[build/NutShell.fir.opt.mlir 30696:19]
        when _T_8 : @[build/NutShell.fir.opt.mlir 30697:11]
          connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 30699:13]
          node _raddr_T = cat(satp.ppn, vpn.vpn2) @[build/NutShell.fir.opt.mlir 30701:25]
          node _raddr_T_1 = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30703:27]
          connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 30704:13]
          connect level, UInt<2>(3) @[build/NutShell.fir.opt.mlir 30706:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30708:13]
          connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30710:13]
    else :
      node _T_9 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 30715:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 30716:9]
        when isFlush : @[build/NutShell.fir.opt.mlir 30717:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30719:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30721:13]
        else :
          node _T_10 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 30724:22]
          when _T_10 : @[build/NutShell.fir.opt.mlir 30725:13]
            connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 30727:15]
      else :
        node _T_11 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 30732:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 30733:11]
          wire missflag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 30734:25]
          node missflag_lo_lo = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 30744:31]
          node missflag_lo_hi = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 30746:31]
          node missflag_lo = cat(missflag_lo_hi, missflag_lo_lo) @[build/NutShell.fir.opt.mlir 30748:28]
          node missflag_hi_lo = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 30750:31]
          node missflag_hi_hi = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 30752:31]
          node missflag_hi = cat(missflag_hi_hi, missflag_hi_lo) @[build/NutShell.fir.opt.mlir 30754:28]
          node _missflag_T = cat(missflag_hi, missflag_lo) @[build/NutShell.fir.opt.mlir 30756:28]
          wire _missflag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 30757:31]
          connect _missflag_WIRE, _missflag_T @[build/NutShell.fir.opt.mlir 30758:13]
          node _missflag_T_1 = bits(_missflag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 30760:30]
          connect missflag.v, _missflag_T_1 @[build/NutShell.fir.opt.mlir 30761:13]
          node _missflag_T_2 = bits(_missflag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 30763:30]
          connect missflag.r, _missflag_T_2 @[build/NutShell.fir.opt.mlir 30764:13]
          node _missflag_T_3 = bits(_missflag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 30766:30]
          connect missflag.w, _missflag_T_3 @[build/NutShell.fir.opt.mlir 30767:13]
          node _missflag_T_4 = bits(_missflag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 30769:30]
          connect missflag.x, _missflag_T_4 @[build/NutShell.fir.opt.mlir 30770:13]
          node _missflag_T_5 = bits(_missflag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 30772:30]
          connect missflag.u, _missflag_T_5 @[build/NutShell.fir.opt.mlir 30773:13]
          node _missflag_T_6 = bits(_missflag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 30775:30]
          connect missflag.g, _missflag_T_6 @[build/NutShell.fir.opt.mlir 30776:13]
          node _missflag_T_7 = bits(_missflag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 30778:30]
          connect missflag.a, _missflag_T_7 @[build/NutShell.fir.opt.mlir 30779:13]
          node _missflag_T_8 = bits(_missflag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 30781:30]
          connect missflag.d, _missflag_T_8 @[build/NutShell.fir.opt.mlir 30782:13]
          node _T_12 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 30784:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 30785:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 30786:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 30788:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 30790:17]
            else :
              node _T_13 = or(missflag.r, missflag.x) @[build/NutShell.fir.opt.mlir 30793:26]
              node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30795:26]
              node _T_15 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 30797:26]
              node _T_16 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 30799:26]
              node _T_17 = or(_T_15, _T_16) @[build/NutShell.fir.opt.mlir 30801:26]
              node _T_18 = and(_T_14, _T_17) @[build/NutShell.fir.opt.mlir 30803:26]
              when _T_18 : @[build/NutShell.fir.opt.mlir 30804:17]
                node _T_19 = eq(missflag.v, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30806:28]
                node _T_20 = eq(missflag.r, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30808:28]
                node _T_21 = and(_T_20, missflag.w) @[build/NutShell.fir.opt.mlir 30810:28]
                node _T_22 = or(_T_19, _T_21) @[build/NutShell.fir.opt.mlir 30812:28]
                when _T_22 : @[build/NutShell.fir.opt.mlir 30813:19]
                  connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 30815:21]
                  connect missIPF, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30817:21]
                  inst LogPerfHelper of LogPerfHelper_21 @[build/NutShell.fir.opt.mlir 30818:113]
                  wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 30819:34]
                  connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 30824:21]
                  connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 30825:21]
                  connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 30826:21]
                  connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 30827:21]
                  node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30829:30]
                  when _T_23 : @[build/NutShell.fir.opt.mlir 30830:21]
                    node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30832:32]
                    node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30834:32]
                    when _T_25 : @[build/NutShell.fir.opt.mlir 30835:23]
                      skip @[build/NutShell.fir.opt.mlir 30836:25]
                    node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30839:32]
                    node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30841:32]
                    when _T_27 : @[build/NutShell.fir.opt.mlir 30842:23]
                      skip @[build/NutShell.fir.opt.mlir 30843:25]
                  node _T_28 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30847:30]
                  when _T_28 : @[build/NutShell.fir.opt.mlir 30848:21]
                    node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30850:32]
                    node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30852:32]
                    when _T_30 : @[build/NutShell.fir.opt.mlir 30853:23]
                      skip @[build/NutShell.fir.opt.mlir 30854:25]
                  node _T_31 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30858:30]
                  when _T_31 : @[build/NutShell.fir.opt.mlir 30859:21]
                    node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30861:32]
                    node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30863:32]
                    when _T_33 : @[build/NutShell.fir.opt.mlir 30864:23]
                      skip @[build/NutShell.fir.opt.mlir 30865:25]
                  node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 30869:30]
                  when _T_34 : @[build/NutShell.fir.opt.mlir 30870:21]
                    node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 30872:32]
                    node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30874:32]
                    when _T_36 : @[build/NutShell.fir.opt.mlir 30875:23]
                      skip @[build/NutShell.fir.opt.mlir 30876:25]
                else :
                  connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 30881:21]
                  node _raddr_T_2 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 30883:35]
                  node _raddr_T_3 = mux(_raddr_T_2, vpn.vpn1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 30885:35]
                  node _raddr_T_4 = cat(memRdata.ppn, _raddr_T_3) @[build/NutShell.fir.opt.mlir 30887:35]
                  node _raddr_T_5 = cat(_raddr_T_4, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 30889:35]
                  connect raddr, _raddr_T_5 @[build/NutShell.fir.opt.mlir 30890:21]
              else :
                node _T_37 = neq(level, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30894:28]
                when _T_37 : @[build/NutShell.fir.opt.mlir 30895:19]
                  node _permCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30897:37]
                  node _permCheck_T_1 = eq(missflag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30899:39]
                  node _permCheck_T_2 = and(_permCheck_T, _permCheck_T_1) @[build/NutShell.fir.opt.mlir 30901:39]
                  node _permCheck_T_3 = eq(_permCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30903:39]
                  node _permCheck_T_4 = and(missflag.v, _permCheck_T_3) @[build/NutShell.fir.opt.mlir 30905:39]
                  node _permCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30907:39]
                  node _permCheck_T_6 = and(_permCheck_T_5, missflag.u) @[build/NutShell.fir.opt.mlir 30909:39]
                  node _permCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30911:39]
                  node _permCheck_T_8 = or(_permCheck_T_7, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30913:39]
                  node _permCheck_T_9 = and(_permCheck_T_6, _permCheck_T_8) @[build/NutShell.fir.opt.mlir 30915:39]
                  node _permCheck_T_10 = eq(_permCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30917:40]
                  node permCheck = and(_permCheck_T_4, _permCheck_T_10) @[build/NutShell.fir.opt.mlir 30919:34]
                  node _permExec_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30921:36]
                  node _permExec_T_1 = and(permCheck, _permExec_T) @[build/NutShell.fir.opt.mlir 30923:38]
                  node permExec = and(_permExec_T_1, missflag.x) @[build/NutShell.fir.opt.mlir 30925:33]
                  node _permLoad_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30927:36]
                  node _permLoad_T_1 = and(permCheck, _permLoad_T) @[build/NutShell.fir.opt.mlir 30929:38]
                  node _permLoad_T_2 = and(io.pf.status_mxr, missflag.x) @[build/NutShell.fir.opt.mlir 30931:38]
                  node _permLoad_T_3 = or(missflag.r, _permLoad_T_2) @[build/NutShell.fir.opt.mlir 30933:38]
                  node permLoad = and(_permLoad_T_1, _permLoad_T_3) @[build/NutShell.fir.opt.mlir 30935:33]
                  node _permStore_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30937:37]
                  node _permStore_T_1 = and(permCheck, _permStore_T) @[build/NutShell.fir.opt.mlir 30939:39]
                  node permStore = and(_permStore_T_1, missflag.w) @[build/NutShell.fir.opt.mlir 30941:34]
                  node _updateAD_T = eq(missflag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30943:36]
                  node _updateAD_T_1 = eq(missflag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30945:38]
                  node _updateAD_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30947:38]
                  node _updateAD_T_3 = and(_updateAD_T_1, _updateAD_T_2) @[build/NutShell.fir.opt.mlir 30949:38]
                  node updateAD = or(_updateAD_T, _updateAD_T_3) @[build/NutShell.fir.opt.mlir 30951:33]
                  node _updateData_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30953:38]
                  node updateData_lo = cat(UInt<1>(1), UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30955:38]
                  node updateData_hi = cat(UInt<56>(0), _updateData_T) @[build/NutShell.fir.opt.mlir 30957:38]
                  node updateData = cat(updateData_hi, updateData_lo) @[build/NutShell.fir.opt.mlir 30959:35]
                  node _missRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 30961:42]
                  node missRefillFlag_hi = cat(_missRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 30963:42]
                  node _missRefillFlag_T_1 = cat(missRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 30965:44]
                  node missRefillFlag_lo_lo = cat(missflag.r, missflag.v) @[build/NutShell.fir.opt.mlir 30967:45]
                  node missRefillFlag_lo_hi = cat(missflag.x, missflag.w) @[build/NutShell.fir.opt.mlir 30969:45]
                  node missRefillFlag_lo = cat(missRefillFlag_lo_hi, missRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 30971:42]
                  node missRefillFlag_hi_lo = cat(missflag.g, missflag.u) @[build/NutShell.fir.opt.mlir 30973:45]
                  node missRefillFlag_hi_hi = cat(missflag.d, missflag.a) @[build/NutShell.fir.opt.mlir 30975:45]
                  node missRefillFlag_hi_1 = cat(missRefillFlag_hi_hi, missRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 30977:44]
                  node _missRefillFlag_T_2 = cat(missRefillFlag_hi_1, missRefillFlag_lo) @[build/NutShell.fir.opt.mlir 30979:44]
                  node _missRefillFlag_T_3 = or(_missRefillFlag_T_1, _missRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 30981:44]
                  connect missRefillFlag, _missRefillFlag_T_3 @[build/NutShell.fir.opt.mlir 30982:21]
                  node _memRespStore_T = or(io.mem.resp.bits.rdata, updateData) @[build/NutShell.fir.opt.mlir 30984:40]
                  connect memRespStore, _memRespStore_T @[build/NutShell.fir.opt.mlir 30985:21]
                  node _T_38 = eq(permExec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 30987:30]
                  when _T_38 : @[build/NutShell.fir.opt.mlir 30988:21]
                    connect missIPF, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30990:23]
                    connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 30992:23]
                  else :
                    node _state_T = mux(updateAD, UInt<3>(3), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 30995:35]
                    connect state, _state_T @[build/NutShell.fir.opt.mlir 30996:23]
                    connect missMetaRefill, UInt<1>(1) @[build/NutShell.fir.opt.mlir 30998:23]
                  node _missMask_T = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 31001:36]
                  node _missMask_T_1 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 31003:38]
                  node _missMask_T_2 = mux(_missMask_T_1, UInt<18>(261632), UInt<18>(262143)) @[build/NutShell.fir.opt.mlir 31005:38]
                  node _missMask_T_3 = mux(_missMask_T, UInt<18>(0), _missMask_T_2) @[build/NutShell.fir.opt.mlir 31007:38]
                  connect missMask, _missMask_T_3 @[build/NutShell.fir.opt.mlir 31008:21]
                  connect missMaskStore, missMask @[build/NutShell.fir.opt.mlir 31009:21]
            node _level_T = sub(level, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 31014:27]
            node _level_T_1 = tail(_level_T, 1) @[build/NutShell.fir.opt.mlir 31016:29]
            connect level, _level_T_1 @[build/NutShell.fir.opt.mlir 31017:15]
        else :
          node _T_39 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 31021:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 31022:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 31023:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 31025:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31027:17]
            else :
              node _T_40 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 31030:26]
              when _T_40 : @[build/NutShell.fir.opt.mlir 31031:17]
                connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 31033:19]
          else :
            node _T_41 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 31038:24]
            when _T_41 : @[build/NutShell.fir.opt.mlir 31039:15]
              node _T_42 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 31041:26]
              node _T_43 = or(_T_42, io.flush) @[build/NutShell.fir.opt.mlir 31043:26]
              node _T_44 = or(_T_43, alreadyOutFire) @[build/NutShell.fir.opt.mlir 31045:26]
              when _T_44 : @[build/NutShell.fir.opt.mlir 31046:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 31048:19]
                connect missIPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31050:19]
                connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31052:19]
            else :
              node _T_45 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 31056:26]
              when _T_45 : @[build/NutShell.fir.opt.mlir 31057:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 31059:19]
    node _cmd_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 31067:17]
    node cmd = mux(_cmd_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31069:14]
    node _T_46 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 31071:16]
    node _T_47 = mux(hitWB, hitWBStore, memRespStore) @[build/NutShell.fir.opt.mlir 31073:16]
    connect io.mem.req.bits.addr, _T_46 @[build/NutShell.fir.opt.mlir 31074:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 31076:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 31079:7]
    connect io.mem.req.bits.wdata, _T_47 @[build/NutShell.fir.opt.mlir 31080:7]
    connect io.mem.req.bits.wmask, UInt<8>(255) @[build/NutShell.fir.opt.mlir 31083:7]
    node _io_mem_req_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 31085:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 31087:32]
    node _io_mem_req_valid_T_2 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_1) @[build/NutShell.fir.opt.mlir 31089:32]
    node _io_mem_req_valid_T_3 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31091:32]
    node _io_mem_req_valid_T_4 = and(_io_mem_req_valid_T_2, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 31093:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 31094:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 31096:7]
    node _T_48 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31098:16]
    node _T_49 = and(missMetaRefill, _T_48) @[build/NutShell.fir.opt.mlir 31100:16]
    node _T_50 = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 31102:16]
    node _T_51 = and(hitWB, _T_50) @[build/NutShell.fir.opt.mlir 31104:16]
    node _T_52 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31106:16]
    node _T_53 = and(_T_51, _T_52) @[build/NutShell.fir.opt.mlir 31108:16]
    node _T_54 = or(_T_49, _T_53) @[build/NutShell.fir.opt.mlir 31110:16]
    regreset REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 31111:14]
    connect REG, _T_54 @[build/NutShell.fir.opt.mlir 31112:7]
    wire _WIRE : { tag : UInt<26>, index : UInt<1>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 31113:16]
    wire _WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 31117:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 31118:7]
    node _T_55 = bits(_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 31120:16]
    connect _WIRE.off, _T_55 @[build/NutShell.fir.opt.mlir 31121:7]
    node _T_56 = bits(_WIRE_1, 12, 12) @[build/NutShell.fir.opt.mlir 31123:16]
    connect _WIRE.index, _T_56 @[build/NutShell.fir.opt.mlir 31124:7]
    node _T_57 = bits(_WIRE_1, 38, 13) @[build/NutShell.fir.opt.mlir 31126:16]
    connect _WIRE.tag, _T_57 @[build/NutShell.fir.opt.mlir 31127:7]
    reg REG_1 : UInt, clock @[build/NutShell.fir.opt.mlir 31128:16]
    connect REG_1, _WIRE.index @[build/NutShell.fir.opt.mlir 31129:7]
    reg REG_2 : UInt, clock @[build/NutShell.fir.opt.mlir 31130:16]
    connect REG_2, waymask @[build/NutShell.fir.opt.mlir 31131:7]
    node hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 31133:13]
    node _T_58 = cat(hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 31135:16]
    reg REG_3 : UInt, clock @[build/NutShell.fir.opt.mlir 31136:16]
    connect REG_3, _T_58 @[build/NutShell.fir.opt.mlir 31137:7]
    node _T_59 = mux(hitWB, hitMeta.asid, satp.asid) @[build/NutShell.fir.opt.mlir 31139:16]
    reg REG_4 : UInt, clock @[build/NutShell.fir.opt.mlir 31140:16]
    connect REG_4, _T_59 @[build/NutShell.fir.opt.mlir 31141:7]
    node _T_60 = mux(hitWB, hitMeta.mask, missMask) @[build/NutShell.fir.opt.mlir 31143:16]
    reg REG_5 : UInt, clock @[build/NutShell.fir.opt.mlir 31144:16]
    connect REG_5, _T_60 @[build/NutShell.fir.opt.mlir 31145:7]
    node _T_61 = mux(hitWB, hitRefillFlag, missRefillFlag) @[build/NutShell.fir.opt.mlir 31147:16]
    reg REG_6 : UInt, clock @[build/NutShell.fir.opt.mlir 31148:16]
    connect REG_6, _T_61 @[build/NutShell.fir.opt.mlir 31149:7]
    node _T_62 = mux(hitWB, hitData.ppn, memRdata.ppn) @[build/NutShell.fir.opt.mlir 31151:16]
    reg REG_7 : UInt, clock @[build/NutShell.fir.opt.mlir 31152:16]
    connect REG_7, _T_62 @[build/NutShell.fir.opt.mlir 31153:7]
    node _T_63 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 31155:16]
    reg REG_8 : UInt, clock @[build/NutShell.fir.opt.mlir 31156:16]
    connect REG_8, _T_63 @[build/NutShell.fir.opt.mlir 31157:7]
    connect io.mdWrite.wen, REG @[build/NutShell.fir.opt.mlir 31158:7]
    connect io.mdWrite.windex, REG_1 @[build/NutShell.fir.opt.mlir 31159:7]
    connect io.mdWrite.waymask, REG_2 @[build/NutShell.fir.opt.mlir 31160:7]
    node io_mdWrite_wdata_lo_hi = cat(REG_6, REG_7) @[build/NutShell.fir.opt.mlir 31162:33]
    node io_mdWrite_wdata_lo = cat(io_mdWrite_wdata_lo_hi, REG_8) @[build/NutShell.fir.opt.mlir 31164:30]
    node io_mdWrite_wdata_hi_hi = cat(REG_3, REG_4) @[build/NutShell.fir.opt.mlir 31166:33]
    node io_mdWrite_wdata_hi = cat(io_mdWrite_wdata_hi_hi, REG_5) @[build/NutShell.fir.opt.mlir 31168:30]
    node _io_mdWrite_wdata_T = cat(io_mdWrite_wdata_hi, io_mdWrite_wdata_lo) @[build/NutShell.fir.opt.mlir 31170:30]
    connect io.mdWrite.wdata, _io_mdWrite_wdata_T @[build/NutShell.fir.opt.mlir 31171:7]
    connect io.out.bits.addr, tail(io.in.bits.addr, 7) @[build/NutShell.fir.opt.mlir 31173:7]
    connect io.out.bits.size, io.in.bits.size @[build/NutShell.fir.opt.mlir 31174:7]
    connect io.out.bits.cmd, io.in.bits.cmd @[build/NutShell.fir.opt.mlir 31175:7]
    connect io.out.bits.wmask, io.in.bits.wmask @[build/NutShell.fir.opt.mlir 31176:7]
    connect io.out.bits.wdata, io.in.bits.wdata @[build/NutShell.fir.opt.mlir 31177:7]
    connect io.out.bits.user, io.in.bits.user @[build/NutShell.fir.opt.mlir 31178:7]
    node _io_out_bits_addr_T = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 31180:30]
    node _io_out_bits_addr_T_1 = cat(hitData.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31183:32]
    node _io_out_bits_addr_T_2 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 31185:32]
    node io_out_bits_addr_hi = cat(_io_out_bits_addr_T_2, hitMeta.mask) @[build/NutShell.fir.opt.mlir 31187:30]
    node _io_out_bits_addr_T_3 = cat(io_out_bits_addr_hi, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31189:32]
    node _io_out_bits_addr_T_4 = and(_io_out_bits_addr_T_1, _io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 31191:32]
    node _io_out_bits_addr_T_5 = not(_io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 31193:32]
    node _io_out_bits_addr_T_6 = and(_io_out_bits_addr_T, _io_out_bits_addr_T_5) @[build/NutShell.fir.opt.mlir 31195:32]
    node _io_out_bits_addr_T_7 = or(_io_out_bits_addr_T_4, _io_out_bits_addr_T_6) @[build/NutShell.fir.opt.mlir 31197:32]
    wire _io_out_bits_addr_WIRE : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 31198:33]
    wire _io_out_bits_addr_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 31211:35]
    connect _io_out_bits_addr_WIRE_1, memRespStore @[build/NutShell.fir.opt.mlir 31212:7]
    node _io_out_bits_addr_T_8 = bits(_io_out_bits_addr_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 31214:32]
    connect _io_out_bits_addr_WIRE.flag.v, _io_out_bits_addr_T_8 @[build/NutShell.fir.opt.mlir 31215:7]
    node _io_out_bits_addr_T_9 = bits(_io_out_bits_addr_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 31217:32]
    connect _io_out_bits_addr_WIRE.flag.r, _io_out_bits_addr_T_9 @[build/NutShell.fir.opt.mlir 31218:7]
    node _io_out_bits_addr_T_10 = bits(_io_out_bits_addr_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 31220:33]
    connect _io_out_bits_addr_WIRE.flag.w, _io_out_bits_addr_T_10 @[build/NutShell.fir.opt.mlir 31221:7]
    node _io_out_bits_addr_T_11 = bits(_io_out_bits_addr_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 31223:33]
    connect _io_out_bits_addr_WIRE.flag.x, _io_out_bits_addr_T_11 @[build/NutShell.fir.opt.mlir 31224:7]
    node _io_out_bits_addr_T_12 = bits(_io_out_bits_addr_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 31226:33]
    connect _io_out_bits_addr_WIRE.flag.u, _io_out_bits_addr_T_12 @[build/NutShell.fir.opt.mlir 31227:7]
    node _io_out_bits_addr_T_13 = bits(_io_out_bits_addr_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 31229:33]
    connect _io_out_bits_addr_WIRE.flag.g, _io_out_bits_addr_T_13 @[build/NutShell.fir.opt.mlir 31230:7]
    node _io_out_bits_addr_T_14 = bits(_io_out_bits_addr_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 31232:33]
    connect _io_out_bits_addr_WIRE.flag.a, _io_out_bits_addr_T_14 @[build/NutShell.fir.opt.mlir 31233:7]
    node _io_out_bits_addr_T_15 = bits(_io_out_bits_addr_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 31235:33]
    connect _io_out_bits_addr_WIRE.flag.d, _io_out_bits_addr_T_15 @[build/NutShell.fir.opt.mlir 31236:7]
    node _io_out_bits_addr_T_16 = bits(_io_out_bits_addr_WIRE_1, 9, 8) @[build/NutShell.fir.opt.mlir 31238:33]
    connect _io_out_bits_addr_WIRE.rsw, _io_out_bits_addr_T_16 @[build/NutShell.fir.opt.mlir 31239:7]
    node _io_out_bits_addr_T_17 = bits(_io_out_bits_addr_WIRE_1, 29, 10) @[build/NutShell.fir.opt.mlir 31241:33]
    connect _io_out_bits_addr_WIRE.ppn, _io_out_bits_addr_T_17 @[build/NutShell.fir.opt.mlir 31242:7]
    node _io_out_bits_addr_T_18 = bits(_io_out_bits_addr_WIRE_1, 63, 30) @[build/NutShell.fir.opt.mlir 31244:33]
    connect _io_out_bits_addr_WIRE.reserved, _io_out_bits_addr_T_18 @[build/NutShell.fir.opt.mlir 31245:7]
    node _io_out_bits_addr_T_19 = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 31247:33]
    node _io_out_bits_addr_T_20 = cat(_io_out_bits_addr_WIRE.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31249:33]
    node _io_out_bits_addr_T_21 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 31251:33]
    node io_out_bits_addr_hi_1 = cat(_io_out_bits_addr_T_21, missMaskStore) @[build/NutShell.fir.opt.mlir 31253:32]
    node _io_out_bits_addr_T_22 = cat(io_out_bits_addr_hi_1, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 31255:33]
    node _io_out_bits_addr_T_23 = and(_io_out_bits_addr_T_20, _io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 31257:33]
    node _io_out_bits_addr_T_24 = not(_io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 31259:33]
    node _io_out_bits_addr_T_25 = and(_io_out_bits_addr_T_19, _io_out_bits_addr_T_24) @[build/NutShell.fir.opt.mlir 31261:33]
    node _io_out_bits_addr_T_26 = or(_io_out_bits_addr_T_23, _io_out_bits_addr_T_25) @[build/NutShell.fir.opt.mlir 31263:33]
    node _io_out_bits_addr_T_27 = mux(hit, _io_out_bits_addr_T_7, _io_out_bits_addr_T_26) @[build/NutShell.fir.opt.mlir 31265:33]
    connect io.out.bits.addr, _io_out_bits_addr_T_27 @[build/NutShell.fir.opt.mlir 31266:7]
    node _io_out_valid_T = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31268:26]
    node _io_out_valid_T_1 = and(hit, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 31270:28]
    node _io_out_valid_T_2 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31272:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, loadPF) @[build/NutShell.fir.opt.mlir 31274:28]
    node _io_out_valid_T_4 = or(_io_out_valid_T_3, storePF) @[build/NutShell.fir.opt.mlir 31276:28]
    node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31278:28]
    node _io_out_valid_T_6 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 31280:28]
    node _io_out_valid_T_7 = mux(_io_out_valid_T_1, _io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 31282:28]
    node _io_out_valid_T_8 = and(io.in.valid, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 31284:28]
    connect io.out.valid, _io_out_valid_T_8 @[build/NutShell.fir.opt.mlir 31285:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 31287:25]
    node _io_in_ready_T_1 = and(io.out.ready, _io_in_ready_T) @[build/NutShell.fir.opt.mlir 31289:27]
    node _io_in_ready_T_2 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31291:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 31293:27]
    node _io_in_ready_T_4 = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31295:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 31297:27]
    node _io_in_ready_T_6 = and(_io_in_ready_T_5, io.mdReady) @[build/NutShell.fir.opt.mlir 31299:27]
    node _io_in_ready_T_7 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31301:27]
    node _io_in_ready_T_8 = eq(_io_in_ready_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31303:27]
    node _io_in_ready_T_9 = eq(loadPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31305:27]
    node _io_in_ready_T_10 = and(_io_in_ready_T_8, _io_in_ready_T_9) @[build/NutShell.fir.opt.mlir 31307:28]
    node _io_in_ready_T_11 = eq(storePF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31309:28]
    node _io_in_ready_T_12 = and(_io_in_ready_T_10, _io_in_ready_T_11) @[build/NutShell.fir.opt.mlir 31311:28]
    node _io_in_ready_T_13 = and(_io_in_ready_T_6, _io_in_ready_T_12) @[build/NutShell.fir.opt.mlir 31313:28]
    connect io.in.ready, _io_in_ready_T_13 @[build/NutShell.fir.opt.mlir 31314:7]
    node _io_ipf_T = mux(hit, hitinstrPF, missIPF) @[build/NutShell.fir.opt.mlir 31316:20]
    connect io.ipf, _io_ipf_T @[build/NutShell.fir.opt.mlir 31317:7]
    node _io_isFinish_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 31319:25]
    node _io_isFinish_T_1 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 31321:27]
    node _io_isFinish_T_2 = or(_io_isFinish_T, _io_isFinish_T_1) @[build/NutShell.fir.opt.mlir 31323:27]
    connect io.isFinish, _io_isFinish_T_2 @[build/NutShell.fir.opt.mlir 31324:7]
    inst LogPerfHelper_1 of LogPerfHelper_22 @[build/NutShell.fir.opt.mlir 31325:107]
    wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 31326:22]
    connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 31331:7]
    connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 31332:7]
    connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 31333:7]
    connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 31334:7]
    node _T_64 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31336:16]
    when _T_64 : @[build/NutShell.fir.opt.mlir 31337:7]
      node _T_65 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31339:18]
      node _T_66 = eq(_T_65, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31341:18]
      when _T_66 : @[build/NutShell.fir.opt.mlir 31342:9]
        skip @[build/NutShell.fir.opt.mlir 31343:11]
      node _T_67 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31346:18]
      node _T_68 = eq(_T_67, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31348:18]
      when _T_68 : @[build/NutShell.fir.opt.mlir 31349:9]
        skip @[build/NutShell.fir.opt.mlir 31350:11]
    node _T_69 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31354:16]
    when _T_69 : @[build/NutShell.fir.opt.mlir 31355:7]
      node _T_70 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31357:18]
      node _T_71 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31359:18]
      when _T_71 : @[build/NutShell.fir.opt.mlir 31360:9]
        skip @[build/NutShell.fir.opt.mlir 31361:11]
      node _T_72 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31364:18]
      node _T_73 = eq(_T_72, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31366:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 31367:9]
        skip @[build/NutShell.fir.opt.mlir 31368:11]
    node lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 31372:16]
    node lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 31374:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 31376:13]
    node hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 31378:16]
    node hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 31380:16]
    node hi_1 = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 31382:15]
    node _T_74 = cat(hi_1, lo) @[build/NutShell.fir.opt.mlir 31384:16]
    node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31386:16]
    when _T_75 : @[build/NutShell.fir.opt.mlir 31387:7]
      node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31389:18]
      node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31391:18]
      when _T_77 : @[build/NutShell.fir.opt.mlir 31392:9]
        skip @[build/NutShell.fir.opt.mlir 31393:11]
      node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31396:18]
      node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31398:18]
      when _T_79 : @[build/NutShell.fir.opt.mlir 31399:9]
        skip @[build/NutShell.fir.opt.mlir 31400:11]
    node lo_lo_1 = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 31404:18]
    node lo_hi_1 = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 31406:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 31408:15]
    node hi_lo_1 = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 31410:18]
    node hi_hi_1 = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 31412:18]
    node hi_2 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 31414:15]
    node _T_80 = cat(hi_2, lo_1) @[build/NutShell.fir.opt.mlir 31416:16]
    node lo_2 = cat(memRdata.rsw, _T_80) @[build/NutShell.fir.opt.mlir 31418:15]
    node hi_3 = cat(memRdata.reserved, memRdata.ppn) @[build/NutShell.fir.opt.mlir 31420:15]
    node _T_81 = cat(hi_3, lo_2) @[build/NutShell.fir.opt.mlir 31422:16]
    node _T_82 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31424:16]
    when _T_82 : @[build/NutShell.fir.opt.mlir 31425:7]
      node _T_83 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31427:18]
      node _T_84 = eq(_T_83, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31429:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 31430:9]
        skip @[build/NutShell.fir.opt.mlir 31431:11]
      node _T_85 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31434:18]
      node _T_86 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31436:18]
      when _T_86 : @[build/NutShell.fir.opt.mlir 31437:9]
        skip @[build/NutShell.fir.opt.mlir 31438:11]
    wire _WIRE_2 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31441:18]
    wire _WIRE_3 : UInt<121> @[build/NutShell.fir.opt.mlir 31448:18]
    connect _WIRE_3, io.md[0] @[build/NutShell.fir.opt.mlir 31449:7]
    node _T_87 = bits(_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 31451:16]
    connect _WIRE_2.pteaddr, _T_87 @[build/NutShell.fir.opt.mlir 31452:7]
    node _T_88 = bits(_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 31454:16]
    connect _WIRE_2.ppn, _T_88 @[build/NutShell.fir.opt.mlir 31455:7]
    node _T_89 = bits(_WIRE_3, 59, 52) @[build/NutShell.fir.opt.mlir 31457:16]
    connect _WIRE_2.flag, _T_89 @[build/NutShell.fir.opt.mlir 31458:7]
    node _T_90 = bits(_WIRE_3, 77, 60) @[build/NutShell.fir.opt.mlir 31460:16]
    connect _WIRE_2.mask, _T_90 @[build/NutShell.fir.opt.mlir 31461:7]
    node _T_91 = bits(_WIRE_3, 93, 78) @[build/NutShell.fir.opt.mlir 31463:16]
    connect _WIRE_2.asid, _T_91 @[build/NutShell.fir.opt.mlir 31464:7]
    node _T_92 = bits(_WIRE_3, 120, 94) @[build/NutShell.fir.opt.mlir 31466:16]
    connect _WIRE_2.vpn, _T_92 @[build/NutShell.fir.opt.mlir 31467:7]
    wire _WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31468:18]
    wire _WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 31475:18]
    connect _WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 31476:7]
    node _T_93 = bits(_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 31478:16]
    connect _WIRE_4.pteaddr, _T_93 @[build/NutShell.fir.opt.mlir 31479:7]
    node _T_94 = bits(_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 31481:16]
    connect _WIRE_4.ppn, _T_94 @[build/NutShell.fir.opt.mlir 31482:7]
    node _T_95 = bits(_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 31484:16]
    connect _WIRE_4.flag, _T_95 @[build/NutShell.fir.opt.mlir 31485:7]
    node _T_96 = bits(_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 31487:16]
    connect _WIRE_4.mask, _T_96 @[build/NutShell.fir.opt.mlir 31488:7]
    node _T_97 = bits(_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 31490:16]
    connect _WIRE_4.asid, _T_97 @[build/NutShell.fir.opt.mlir 31491:7]
    node _T_98 = bits(_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 31493:16]
    connect _WIRE_4.vpn, _T_98 @[build/NutShell.fir.opt.mlir 31494:7]
    wire _WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31495:18]
    wire _WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 31502:18]
    connect _WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 31503:7]
    node _T_99 = bits(_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 31505:16]
    connect _WIRE_6.pteaddr, _T_99 @[build/NutShell.fir.opt.mlir 31506:7]
    node _T_100 = bits(_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 31508:17]
    connect _WIRE_6.ppn, _T_100 @[build/NutShell.fir.opt.mlir 31509:7]
    node _T_101 = bits(_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 31511:17]
    connect _WIRE_6.flag, _T_101 @[build/NutShell.fir.opt.mlir 31512:7]
    node _T_102 = bits(_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 31514:17]
    connect _WIRE_6.mask, _T_102 @[build/NutShell.fir.opt.mlir 31515:7]
    node _T_103 = bits(_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 31517:17]
    connect _WIRE_6.asid, _T_103 @[build/NutShell.fir.opt.mlir 31518:7]
    node _T_104 = bits(_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 31520:17]
    connect _WIRE_6.vpn, _T_104 @[build/NutShell.fir.opt.mlir 31521:7]
    wire _WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31522:18]
    wire _WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 31529:18]
    connect _WIRE_9, io.md[1] @[build/NutShell.fir.opt.mlir 31530:7]
    node _T_105 = bits(_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 31532:17]
    connect _WIRE_8.pteaddr, _T_105 @[build/NutShell.fir.opt.mlir 31533:7]
    node _T_106 = bits(_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 31535:17]
    connect _WIRE_8.ppn, _T_106 @[build/NutShell.fir.opt.mlir 31536:7]
    node _T_107 = bits(_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 31538:17]
    connect _WIRE_8.flag, _T_107 @[build/NutShell.fir.opt.mlir 31539:7]
    node _T_108 = bits(_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 31541:17]
    connect _WIRE_8.mask, _T_108 @[build/NutShell.fir.opt.mlir 31542:7]
    node _T_109 = bits(_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 31544:17]
    connect _WIRE_8.asid, _T_109 @[build/NutShell.fir.opt.mlir 31545:7]
    node _T_110 = bits(_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 31547:17]
    connect _WIRE_8.vpn, _T_110 @[build/NutShell.fir.opt.mlir 31548:7]
    wire _WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31549:19]
    wire _WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 31556:19]
    connect _WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 31557:7]
    node _T_111 = bits(_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 31559:17]
    connect _WIRE_10.pteaddr, _T_111 @[build/NutShell.fir.opt.mlir 31560:7]
    node _T_112 = bits(_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 31562:17]
    connect _WIRE_10.ppn, _T_112 @[build/NutShell.fir.opt.mlir 31563:7]
    node _T_113 = bits(_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 31565:17]
    connect _WIRE_10.flag, _T_113 @[build/NutShell.fir.opt.mlir 31566:7]
    node _T_114 = bits(_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 31568:17]
    connect _WIRE_10.mask, _T_114 @[build/NutShell.fir.opt.mlir 31569:7]
    node _T_115 = bits(_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 31571:17]
    connect _WIRE_10.asid, _T_115 @[build/NutShell.fir.opt.mlir 31572:7]
    node _T_116 = bits(_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 31574:17]
    connect _WIRE_10.vpn, _T_116 @[build/NutShell.fir.opt.mlir 31575:7]
    wire _WIRE_12 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31576:19]
    wire _WIRE_13 : UInt<121> @[build/NutShell.fir.opt.mlir 31583:19]
    connect _WIRE_13, io.md[1] @[build/NutShell.fir.opt.mlir 31584:7]
    node _T_117 = bits(_WIRE_13, 31, 0) @[build/NutShell.fir.opt.mlir 31586:17]
    connect _WIRE_12.pteaddr, _T_117 @[build/NutShell.fir.opt.mlir 31587:7]
    node _T_118 = bits(_WIRE_13, 51, 32) @[build/NutShell.fir.opt.mlir 31589:17]
    connect _WIRE_12.ppn, _T_118 @[build/NutShell.fir.opt.mlir 31590:7]
    node _T_119 = bits(_WIRE_13, 59, 52) @[build/NutShell.fir.opt.mlir 31592:17]
    connect _WIRE_12.flag, _T_119 @[build/NutShell.fir.opt.mlir 31593:7]
    node _T_120 = bits(_WIRE_13, 77, 60) @[build/NutShell.fir.opt.mlir 31595:17]
    connect _WIRE_12.mask, _T_120 @[build/NutShell.fir.opt.mlir 31596:7]
    node _T_121 = bits(_WIRE_13, 93, 78) @[build/NutShell.fir.opt.mlir 31598:17]
    connect _WIRE_12.asid, _T_121 @[build/NutShell.fir.opt.mlir 31599:7]
    node _T_122 = bits(_WIRE_13, 120, 94) @[build/NutShell.fir.opt.mlir 31601:17]
    connect _WIRE_12.vpn, _T_122 @[build/NutShell.fir.opt.mlir 31602:7]
    wire _WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31603:19]
    wire _WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 31610:19]
    connect _WIRE_15, io.md[2] @[build/NutShell.fir.opt.mlir 31611:7]
    node _T_123 = bits(_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 31613:17]
    connect _WIRE_14.pteaddr, _T_123 @[build/NutShell.fir.opt.mlir 31614:7]
    node _T_124 = bits(_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 31616:17]
    connect _WIRE_14.ppn, _T_124 @[build/NutShell.fir.opt.mlir 31617:7]
    node _T_125 = bits(_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 31619:17]
    connect _WIRE_14.flag, _T_125 @[build/NutShell.fir.opt.mlir 31620:7]
    node _T_126 = bits(_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 31622:17]
    connect _WIRE_14.mask, _T_126 @[build/NutShell.fir.opt.mlir 31623:7]
    node _T_127 = bits(_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 31625:17]
    connect _WIRE_14.asid, _T_127 @[build/NutShell.fir.opt.mlir 31626:7]
    node _T_128 = bits(_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 31628:17]
    connect _WIRE_14.vpn, _T_128 @[build/NutShell.fir.opt.mlir 31629:7]
    wire _WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31630:19]
    wire _WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 31637:19]
    connect _WIRE_17, io.md[2] @[build/NutShell.fir.opt.mlir 31638:7]
    node _T_129 = bits(_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 31640:17]
    connect _WIRE_16.pteaddr, _T_129 @[build/NutShell.fir.opt.mlir 31641:7]
    node _T_130 = bits(_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 31643:17]
    connect _WIRE_16.ppn, _T_130 @[build/NutShell.fir.opt.mlir 31644:7]
    node _T_131 = bits(_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 31646:17]
    connect _WIRE_16.flag, _T_131 @[build/NutShell.fir.opt.mlir 31647:7]
    node _T_132 = bits(_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 31649:17]
    connect _WIRE_16.mask, _T_132 @[build/NutShell.fir.opt.mlir 31650:7]
    node _T_133 = bits(_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 31652:17]
    connect _WIRE_16.asid, _T_133 @[build/NutShell.fir.opt.mlir 31653:7]
    node _T_134 = bits(_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 31655:17]
    connect _WIRE_16.vpn, _T_134 @[build/NutShell.fir.opt.mlir 31656:7]
    wire _WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31657:19]
    wire _WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 31664:19]
    connect _WIRE_19, io.md[2] @[build/NutShell.fir.opt.mlir 31665:7]
    node _T_135 = bits(_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 31667:17]
    connect _WIRE_18.pteaddr, _T_135 @[build/NutShell.fir.opt.mlir 31668:7]
    node _T_136 = bits(_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 31670:17]
    connect _WIRE_18.ppn, _T_136 @[build/NutShell.fir.opt.mlir 31671:7]
    node _T_137 = bits(_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 31673:17]
    connect _WIRE_18.flag, _T_137 @[build/NutShell.fir.opt.mlir 31674:7]
    node _T_138 = bits(_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 31676:17]
    connect _WIRE_18.mask, _T_138 @[build/NutShell.fir.opt.mlir 31677:7]
    node _T_139 = bits(_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 31679:17]
    connect _WIRE_18.asid, _T_139 @[build/NutShell.fir.opt.mlir 31680:7]
    node _T_140 = bits(_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 31682:17]
    connect _WIRE_18.vpn, _T_140 @[build/NutShell.fir.opt.mlir 31683:7]
    wire _WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31684:19]
    wire _WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 31691:19]
    connect _WIRE_21, io.md[3] @[build/NutShell.fir.opt.mlir 31692:7]
    node _T_141 = bits(_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 31694:17]
    connect _WIRE_20.pteaddr, _T_141 @[build/NutShell.fir.opt.mlir 31695:7]
    node _T_142 = bits(_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 31697:17]
    connect _WIRE_20.ppn, _T_142 @[build/NutShell.fir.opt.mlir 31698:7]
    node _T_143 = bits(_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 31700:17]
    connect _WIRE_20.flag, _T_143 @[build/NutShell.fir.opt.mlir 31701:7]
    node _T_144 = bits(_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 31703:17]
    connect _WIRE_20.mask, _T_144 @[build/NutShell.fir.opt.mlir 31704:7]
    node _T_145 = bits(_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 31706:17]
    connect _WIRE_20.asid, _T_145 @[build/NutShell.fir.opt.mlir 31707:7]
    node _T_146 = bits(_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 31709:17]
    connect _WIRE_20.vpn, _T_146 @[build/NutShell.fir.opt.mlir 31710:7]
    wire _WIRE_22 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31711:19]
    wire _WIRE_23 : UInt<121> @[build/NutShell.fir.opt.mlir 31718:19]
    connect _WIRE_23, io.md[3] @[build/NutShell.fir.opt.mlir 31719:7]
    node _T_147 = bits(_WIRE_23, 31, 0) @[build/NutShell.fir.opt.mlir 31721:17]
    connect _WIRE_22.pteaddr, _T_147 @[build/NutShell.fir.opt.mlir 31722:7]
    node _T_148 = bits(_WIRE_23, 51, 32) @[build/NutShell.fir.opt.mlir 31724:17]
    connect _WIRE_22.ppn, _T_148 @[build/NutShell.fir.opt.mlir 31725:7]
    node _T_149 = bits(_WIRE_23, 59, 52) @[build/NutShell.fir.opt.mlir 31727:17]
    connect _WIRE_22.flag, _T_149 @[build/NutShell.fir.opt.mlir 31728:7]
    node _T_150 = bits(_WIRE_23, 77, 60) @[build/NutShell.fir.opt.mlir 31730:17]
    connect _WIRE_22.mask, _T_150 @[build/NutShell.fir.opt.mlir 31731:7]
    node _T_151 = bits(_WIRE_23, 93, 78) @[build/NutShell.fir.opt.mlir 31733:17]
    connect _WIRE_22.asid, _T_151 @[build/NutShell.fir.opt.mlir 31734:7]
    node _T_152 = bits(_WIRE_23, 120, 94) @[build/NutShell.fir.opt.mlir 31736:17]
    connect _WIRE_22.vpn, _T_152 @[build/NutShell.fir.opt.mlir 31737:7]
    wire _WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31738:19]
    wire _WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 31745:19]
    connect _WIRE_25, io.md[3] @[build/NutShell.fir.opt.mlir 31746:7]
    node _T_153 = bits(_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 31748:17]
    connect _WIRE_24.pteaddr, _T_153 @[build/NutShell.fir.opt.mlir 31749:7]
    node _T_154 = bits(_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 31751:17]
    connect _WIRE_24.ppn, _T_154 @[build/NutShell.fir.opt.mlir 31752:7]
    node _T_155 = bits(_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 31754:17]
    connect _WIRE_24.flag, _T_155 @[build/NutShell.fir.opt.mlir 31755:7]
    node _T_156 = bits(_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 31757:17]
    connect _WIRE_24.mask, _T_156 @[build/NutShell.fir.opt.mlir 31758:7]
    node _T_157 = bits(_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 31760:17]
    connect _WIRE_24.asid, _T_157 @[build/NutShell.fir.opt.mlir 31761:7]
    node _T_158 = bits(_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 31763:17]
    connect _WIRE_24.vpn, _T_158 @[build/NutShell.fir.opt.mlir 31764:7]
    node _T_159 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31766:17]
    when _T_159 : @[build/NutShell.fir.opt.mlir 31767:7]
      node _T_160 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31769:19]
      node _T_161 = eq(_T_160, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31771:19]
      when _T_161 : @[build/NutShell.fir.opt.mlir 31772:9]
        skip @[build/NutShell.fir.opt.mlir 31773:11]
      node _T_162 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31776:19]
      node _T_163 = eq(_T_162, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31778:19]
      when _T_163 : @[build/NutShell.fir.opt.mlir 31779:9]
        skip @[build/NutShell.fir.opt.mlir 31780:11]
    wire _WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31783:19]
    wire _WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 31790:19]
    connect _WIRE_27, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31791:7]
    node _T_164 = bits(_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 31793:17]
    connect _WIRE_26.pteaddr, _T_164 @[build/NutShell.fir.opt.mlir 31794:7]
    node _T_165 = bits(_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 31796:17]
    connect _WIRE_26.ppn, _T_165 @[build/NutShell.fir.opt.mlir 31797:7]
    node _T_166 = bits(_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 31799:17]
    connect _WIRE_26.flag, _T_166 @[build/NutShell.fir.opt.mlir 31800:7]
    node _T_167 = bits(_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 31802:17]
    connect _WIRE_26.mask, _T_167 @[build/NutShell.fir.opt.mlir 31803:7]
    node _T_168 = bits(_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 31805:17]
    connect _WIRE_26.asid, _T_168 @[build/NutShell.fir.opt.mlir 31806:7]
    node _T_169 = bits(_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 31808:17]
    connect _WIRE_26.vpn, _T_169 @[build/NutShell.fir.opt.mlir 31809:7]
    wire _WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31810:19]
    wire _WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 31817:19]
    connect _WIRE_29, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31818:7]
    node _T_170 = bits(_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 31820:17]
    connect _WIRE_28.pteaddr, _T_170 @[build/NutShell.fir.opt.mlir 31821:7]
    node _T_171 = bits(_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 31823:17]
    connect _WIRE_28.ppn, _T_171 @[build/NutShell.fir.opt.mlir 31824:7]
    node _T_172 = bits(_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 31826:17]
    connect _WIRE_28.flag, _T_172 @[build/NutShell.fir.opt.mlir 31827:7]
    node _T_173 = bits(_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 31829:17]
    connect _WIRE_28.mask, _T_173 @[build/NutShell.fir.opt.mlir 31830:7]
    node _T_174 = bits(_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 31832:17]
    connect _WIRE_28.asid, _T_174 @[build/NutShell.fir.opt.mlir 31833:7]
    node _T_175 = bits(_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 31835:17]
    connect _WIRE_28.vpn, _T_175 @[build/NutShell.fir.opt.mlir 31836:7]
    wire _WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31837:19]
    wire _WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 31844:19]
    connect _WIRE_31, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31845:7]
    node _T_176 = bits(_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 31847:17]
    connect _WIRE_30.pteaddr, _T_176 @[build/NutShell.fir.opt.mlir 31848:7]
    node _T_177 = bits(_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 31850:17]
    connect _WIRE_30.ppn, _T_177 @[build/NutShell.fir.opt.mlir 31851:7]
    node _T_178 = bits(_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 31853:17]
    connect _WIRE_30.flag, _T_178 @[build/NutShell.fir.opt.mlir 31854:7]
    node _T_179 = bits(_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 31856:17]
    connect _WIRE_30.mask, _T_179 @[build/NutShell.fir.opt.mlir 31857:7]
    node _T_180 = bits(_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 31859:17]
    connect _WIRE_30.asid, _T_180 @[build/NutShell.fir.opt.mlir 31860:7]
    node _T_181 = bits(_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 31862:17]
    connect _WIRE_30.vpn, _T_181 @[build/NutShell.fir.opt.mlir 31863:7]
    wire _WIRE_32 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31864:19]
    wire _WIRE_33 : UInt<121> @[build/NutShell.fir.opt.mlir 31871:19]
    connect _WIRE_33, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31872:7]
    node _T_182 = bits(_WIRE_33, 31, 0) @[build/NutShell.fir.opt.mlir 31874:17]
    connect _WIRE_32.pteaddr, _T_182 @[build/NutShell.fir.opt.mlir 31875:7]
    node _T_183 = bits(_WIRE_33, 51, 32) @[build/NutShell.fir.opt.mlir 31877:17]
    connect _WIRE_32.ppn, _T_183 @[build/NutShell.fir.opt.mlir 31878:7]
    node _T_184 = bits(_WIRE_33, 59, 52) @[build/NutShell.fir.opt.mlir 31880:17]
    connect _WIRE_32.flag, _T_184 @[build/NutShell.fir.opt.mlir 31881:7]
    node _T_185 = bits(_WIRE_33, 77, 60) @[build/NutShell.fir.opt.mlir 31883:17]
    connect _WIRE_32.mask, _T_185 @[build/NutShell.fir.opt.mlir 31884:7]
    node _T_186 = bits(_WIRE_33, 93, 78) @[build/NutShell.fir.opt.mlir 31886:17]
    connect _WIRE_32.asid, _T_186 @[build/NutShell.fir.opt.mlir 31887:7]
    node _T_187 = bits(_WIRE_33, 120, 94) @[build/NutShell.fir.opt.mlir 31889:17]
    connect _WIRE_32.vpn, _T_187 @[build/NutShell.fir.opt.mlir 31890:7]
    wire _WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31891:19]
    wire _WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 31898:19]
    connect _WIRE_35, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31899:7]
    node _T_188 = bits(_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 31901:17]
    connect _WIRE_34.pteaddr, _T_188 @[build/NutShell.fir.opt.mlir 31902:7]
    node _T_189 = bits(_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 31904:17]
    connect _WIRE_34.ppn, _T_189 @[build/NutShell.fir.opt.mlir 31905:7]
    node _T_190 = bits(_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 31907:17]
    connect _WIRE_34.flag, _T_190 @[build/NutShell.fir.opt.mlir 31908:7]
    node _T_191 = bits(_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 31910:17]
    connect _WIRE_34.mask, _T_191 @[build/NutShell.fir.opt.mlir 31911:7]
    node _T_192 = bits(_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 31913:17]
    connect _WIRE_34.asid, _T_192 @[build/NutShell.fir.opt.mlir 31914:7]
    node _T_193 = bits(_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 31916:17]
    connect _WIRE_34.vpn, _T_193 @[build/NutShell.fir.opt.mlir 31917:7]
    wire _WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31918:19]
    wire _WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 31925:19]
    connect _WIRE_37, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31926:7]
    node _T_194 = bits(_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 31928:17]
    connect _WIRE_36.pteaddr, _T_194 @[build/NutShell.fir.opt.mlir 31929:7]
    node _T_195 = bits(_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 31931:17]
    connect _WIRE_36.ppn, _T_195 @[build/NutShell.fir.opt.mlir 31932:7]
    node _T_196 = bits(_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 31934:17]
    connect _WIRE_36.flag, _T_196 @[build/NutShell.fir.opt.mlir 31935:7]
    node _T_197 = bits(_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 31937:17]
    connect _WIRE_36.mask, _T_197 @[build/NutShell.fir.opt.mlir 31938:7]
    node _T_198 = bits(_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 31940:17]
    connect _WIRE_36.asid, _T_198 @[build/NutShell.fir.opt.mlir 31941:7]
    node _T_199 = bits(_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 31943:17]
    connect _WIRE_36.vpn, _T_199 @[build/NutShell.fir.opt.mlir 31944:7]
    wire _WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 31945:19]
    wire _WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 31952:19]
    connect _WIRE_39, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 31953:7]
    node _T_200 = bits(_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 31955:17]
    connect _WIRE_38.pteaddr, _T_200 @[build/NutShell.fir.opt.mlir 31956:7]
    node _T_201 = bits(_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 31958:17]
    connect _WIRE_38.ppn, _T_201 @[build/NutShell.fir.opt.mlir 31959:7]
    node _T_202 = bits(_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 31961:17]
    connect _WIRE_38.flag, _T_202 @[build/NutShell.fir.opt.mlir 31962:7]
    node _T_203 = bits(_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 31964:17]
    connect _WIRE_38.mask, _T_203 @[build/NutShell.fir.opt.mlir 31965:7]
    node _T_204 = bits(_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 31967:17]
    connect _WIRE_38.asid, _T_204 @[build/NutShell.fir.opt.mlir 31968:7]
    node _T_205 = bits(_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 31970:17]
    connect _WIRE_38.vpn, _T_205 @[build/NutShell.fir.opt.mlir 31971:7]
    node _T_206 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31973:17]
    when _T_206 : @[build/NutShell.fir.opt.mlir 31974:7]
      node _T_207 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31976:19]
      node _T_208 = eq(_T_207, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31978:19]
      when _T_208 : @[build/NutShell.fir.opt.mlir 31979:9]
        skip @[build/NutShell.fir.opt.mlir 31980:11]
      node _T_209 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31983:19]
      node _T_210 = eq(_T_209, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31985:19]
      when _T_210 : @[build/NutShell.fir.opt.mlir 31986:9]
        skip @[build/NutShell.fir.opt.mlir 31987:11]
    node _T_211 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 31991:17]
    when _T_211 : @[build/NutShell.fir.opt.mlir 31992:7]
      node _T_212 = asUInt(reset) @[build/NutShell.fir.opt.mlir 31994:19]
      node _T_213 = eq(_T_212, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 31996:19]
      when _T_213 : @[build/NutShell.fir.opt.mlir 31997:9]
        skip @[build/NutShell.fir.opt.mlir 31998:11]
      node _T_214 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32001:19]
      node _T_215 = eq(_T_214, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32003:19]
      when _T_215 : @[build/NutShell.fir.opt.mlir 32004:9]
        skip @[build/NutShell.fir.opt.mlir 32005:11]
    node _T_216 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 32009:17]
    when _T_216 : @[build/NutShell.fir.opt.mlir 32010:7]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32012:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32014:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 32015:9]
        skip @[build/NutShell.fir.opt.mlir 32016:11]
      node _T_219 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32019:19]
      node _T_220 = eq(_T_219, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32021:19]
      when _T_220 : @[build/NutShell.fir.opt.mlir 32022:9]
        skip @[build/NutShell.fir.opt.mlir 32023:11]

  module EmbeddedTLBEmpty : @[build/NutShell.fir.opt.mlir 32027:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32027:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32027:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } } @[build/NutShell.fir.opt.mlir 32027:101]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 32036:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 32037:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 32038:7]

  module EmbeddedTLBMD : @[build/NutShell.fir.opt.mlir 32040:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32040:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32040:71]
    output io : { tlbmd : UInt<121>[4], flip write : { wen : UInt<1>, windex : UInt<1>, waymask : UInt<4>, wdata : UInt<121> }, flip rindex : UInt<1>, ready : UInt<1> } @[build/NutShell.fir.opt.mlir 32040:98]

    reg tlbmd : UInt<121>[4][1], clock @[build/NutShell.fir.opt.mlir 32048:16]
    wire _WIRE : UInt @[build/NutShell.fir.opt.mlir 32049:16]
    connect _WIRE, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32051:7]
    connect io.tlbmd, tlbmd[_WIRE] @[build/NutShell.fir.opt.mlir 32053:7]
    regreset resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32055:21]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 32056:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32057:7]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 32058:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32060:7]
    when resetState : @[build/NutShell.fir.opt.mlir 32061:7]
      connect resetFinish, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32063:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 32065:7]
      connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32067:9]
    node wen = mux(resetState, UInt<1>(1), io.write.wen) @[build/NutShell.fir.opt.mlir 32070:14]
    node setIdx = mux(resetState, resetSet, io.write.windex) @[build/NutShell.fir.opt.mlir 32072:17]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 32076:21]
    node waymask = mux(resetState, _waymask_T, io.write.waymask) @[build/NutShell.fir.opt.mlir 32078:18]
    node dataword = mux(resetState, UInt<1>(0), io.write.wdata) @[build/NutShell.fir.opt.mlir 32080:19]
    wire wdata : UInt<121>[4] @[build/NutShell.fir.opt.mlir 32081:16]
    connect wdata[0], dataword @[build/NutShell.fir.opt.mlir 32086:7]
    connect wdata[1], dataword @[build/NutShell.fir.opt.mlir 32087:7]
    connect wdata[2], dataword @[build/NutShell.fir.opt.mlir 32088:7]
    connect wdata[3], dataword @[build/NutShell.fir.opt.mlir 32089:7]
    node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32091:13]
    node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32093:15]
    node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32095:15]
    node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32097:15]
    node _T_4 = and(wen, _T) @[build/NutShell.fir.opt.mlir 32099:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 32100:7]
      wire _WIRE_1 : UInt @[build/NutShell.fir.opt.mlir 32101:20]
      connect _WIRE_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32102:9]
      connect tlbmd[_WIRE_1][0], wdata[0] @[build/NutShell.fir.opt.mlir 32105:9]
    node _T_5 = and(wen, _T_1) @[build/NutShell.fir.opt.mlir 32108:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 32109:7]
      wire _WIRE_2 : UInt @[build/NutShell.fir.opt.mlir 32110:20]
      connect _WIRE_2, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32111:9]
      connect tlbmd[_WIRE_2][1], wdata[1] @[build/NutShell.fir.opt.mlir 32114:9]
    node _T_6 = and(wen, _T_2) @[build/NutShell.fir.opt.mlir 32117:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 32118:7]
      wire _WIRE_3 : UInt @[build/NutShell.fir.opt.mlir 32119:20]
      connect _WIRE_3, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32120:9]
      connect tlbmd[_WIRE_3][2], wdata[2] @[build/NutShell.fir.opt.mlir 32123:9]
    node _T_7 = and(wen, _T_3) @[build/NutShell.fir.opt.mlir 32126:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 32127:7]
      wire _WIRE_4 : UInt @[build/NutShell.fir.opt.mlir 32128:20]
      connect _WIRE_4, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32129:9]
      connect tlbmd[_WIRE_4][3], wdata[3] @[build/NutShell.fir.opt.mlir 32132:9]
    node _io_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32135:22]
    connect io.ready, _io_ready_T @[build/NutShell.fir.opt.mlir 32136:7]

  extmodule LogPerfHelper_23 : @[build/NutShell.fir.opt.mlir 32138:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32138:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32138:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32138:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32138:141]
    defname = LogPerfHelper

  module EmbeddedTLB : @[build/NutShell.fir.opt.mlir 32139:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32139:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32139:69]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, csrMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip cacheEmpty : UInt<1>, ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 32139:96]
    input satp__bore : UInt<64> @[build/NutShell.fir.opt.mlir 32139:1165]
    input flushTLB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 32139:1199]

    wire satp : UInt<64> @[build/NutShell.fir.opt.mlir 32192:15]
    connect satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 32195:7]
    inst tlbExec of EmbeddedTLBExec @[build/NutShell.fir.opt.mlir 32196:53]
    connect tlbExec.clock, clock @[build/NutShell.fir.opt.mlir 32229:7]
    connect tlbExec.reset, reset @[build/NutShell.fir.opt.mlir 32230:7]
    inst tlbEmpty of EmbeddedTLBEmpty @[build/NutShell.fir.opt.mlir 32231:56]
    connect tlbEmpty.clock, clock @[build/NutShell.fir.opt.mlir 32243:7]
    connect tlbEmpty.reset, reset @[build/NutShell.fir.opt.mlir 32244:7]
    inst mdTLB of EmbeddedTLBMD @[build/NutShell.fir.opt.mlir 32245:47]
    connect mdTLB.clock, clock @[build/NutShell.fir.opt.mlir 32250:7]
    connect mdTLB.reset, reset @[build/NutShell.fir.opt.mlir 32251:7]
    wire mdUpdate : UInt<1> @[build/NutShell.fir.opt.mlir 32252:19]
    connect tlbExec.io.flush, io.flush @[build/NutShell.fir.opt.mlir 32253:7]
    connect tlbExec.io.satp, satp @[build/NutShell.fir.opt.mlir 32254:7]
    connect io.mem.resp.ready, tlbExec.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 32255:7]
    connect tlbExec.io.mem.resp.valid, io.mem.resp.valid @[build/NutShell.fir.opt.mlir 32256:7]
    connect tlbExec.io.mem.resp.bits, io.mem.resp.bits @[build/NutShell.fir.opt.mlir 32257:7]
    connect io.mem.req.bits, tlbExec.io.mem.req.bits @[build/NutShell.fir.opt.mlir 32258:7]
    connect io.mem.req.valid, tlbExec.io.mem.req.valid @[build/NutShell.fir.opt.mlir 32259:7]
    connect tlbExec.io.mem.req.ready, io.mem.req.ready @[build/NutShell.fir.opt.mlir 32260:7]
    connect io.csrMMU.addr, tlbExec.io.pf.addr @[build/NutShell.fir.opt.mlir 32261:7]
    connect io.csrMMU.storePF, tlbExec.io.pf.storePF @[build/NutShell.fir.opt.mlir 32262:7]
    connect io.csrMMU.loadPF, tlbExec.io.pf.loadPF @[build/NutShell.fir.opt.mlir 32263:7]
    connect tlbExec.io.pf.status_mxr, io.csrMMU.status_mxr @[build/NutShell.fir.opt.mlir 32264:7]
    connect tlbExec.io.pf.status_sum, io.csrMMU.status_sum @[build/NutShell.fir.opt.mlir 32265:7]
    connect tlbExec.io.pf.privilegeMode, io.csrMMU.privilegeMode @[build/NutShell.fir.opt.mlir 32266:7]
    reg r : UInt<121>[4], clock @[build/NutShell.fir.opt.mlir 32267:12]
    when mdUpdate : @[build/NutShell.fir.opt.mlir 32268:7]
      connect r, mdTLB.io.tlbmd @[build/NutShell.fir.opt.mlir 32269:9]
    connect tlbExec.io.md, r @[build/NutShell.fir.opt.mlir 32271:7]
    connect tlbExec.io.mdReady, mdTLB.io.ready @[build/NutShell.fir.opt.mlir 32272:7]
    wire _mdTLB_io_rindex_WIRE : { tag : UInt<26>, index : UInt<1>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 32273:32]
    wire _mdTLB_io_rindex_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 32277:34]
    connect _mdTLB_io_rindex_WIRE_1, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 32278:7]
    node _mdTLB_io_rindex_T = bits(_mdTLB_io_rindex_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 32280:29]
    connect _mdTLB_io_rindex_WIRE.off, _mdTLB_io_rindex_T @[build/NutShell.fir.opt.mlir 32281:7]
    node _mdTLB_io_rindex_T_1 = bits(_mdTLB_io_rindex_WIRE_1, 12, 12) @[build/NutShell.fir.opt.mlir 32283:31]
    connect _mdTLB_io_rindex_WIRE.index, _mdTLB_io_rindex_T_1 @[build/NutShell.fir.opt.mlir 32284:7]
    node _mdTLB_io_rindex_T_2 = bits(_mdTLB_io_rindex_WIRE_1, 38, 13) @[build/NutShell.fir.opt.mlir 32286:31]
    connect _mdTLB_io_rindex_WIRE.tag, _mdTLB_io_rindex_T_2 @[build/NutShell.fir.opt.mlir 32287:7]
    connect mdTLB.io.rindex, _mdTLB_io_rindex_WIRE.index @[build/NutShell.fir.opt.mlir 32288:7]
    connect mdTLB.io.write, tlbExec.io.mdWrite @[build/NutShell.fir.opt.mlir 32289:7]
    connect io.ipf, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32292:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 32293:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32295:7]
    node _mdTLB_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 32297:25]
    node _mdTLB_reset_T_1 = or(_mdTLB_reset_T, flushTLB) @[build/NutShell.fir.opt.mlir 32299:27]
    connect mdTLB.reset, _mdTLB_reset_T_1 @[build/NutShell.fir.opt.mlir 32301:7]
    wire _vmEnable_WIRE : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 32302:25]
    wire _vmEnable_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 32307:27]
    connect _vmEnable_WIRE_1, satp @[build/NutShell.fir.opt.mlir 32308:7]
    node _vmEnable_T = bits(_vmEnable_WIRE_1, 19, 0) @[build/NutShell.fir.opt.mlir 32310:22]
    connect _vmEnable_WIRE.ppn, _vmEnable_T @[build/NutShell.fir.opt.mlir 32311:7]
    node _vmEnable_T_1 = bits(_vmEnable_WIRE_1, 43, 20) @[build/NutShell.fir.opt.mlir 32313:24]
    connect _vmEnable_WIRE.res, _vmEnable_T_1 @[build/NutShell.fir.opt.mlir 32314:7]
    node _vmEnable_T_2 = bits(_vmEnable_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 32316:24]
    connect _vmEnable_WIRE.asid, _vmEnable_T_2 @[build/NutShell.fir.opt.mlir 32317:7]
    node _vmEnable_T_3 = bits(_vmEnable_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 32319:24]
    connect _vmEnable_WIRE.mode, _vmEnable_T_3 @[build/NutShell.fir.opt.mlir 32320:7]
    node _vmEnable_T_4 = eq(_vmEnable_WIRE.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 32323:24]
    node _vmEnable_T_5 = lt(io.csrMMU.privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 32326:24]
    node vmEnable = and(_vmEnable_T_4, _vmEnable_T_5) @[build/NutShell.fir.opt.mlir 32328:19]
    invalidate tlbEmpty.io.in.bits.user @[build/NutShell.fir.opt.mlir 32330:7]
    invalidate tlbEmpty.io.in.bits.wdata @[build/NutShell.fir.opt.mlir 32332:7]
    invalidate tlbEmpty.io.in.bits.wmask @[build/NutShell.fir.opt.mlir 32334:7]
    invalidate tlbEmpty.io.in.bits.cmd @[build/NutShell.fir.opt.mlir 32336:7]
    invalidate tlbEmpty.io.in.bits.size @[build/NutShell.fir.opt.mlir 32338:7]
    invalidate tlbEmpty.io.in.bits.addr @[build/NutShell.fir.opt.mlir 32340:7]
    invalidate tlbEmpty.io.in.valid @[build/NutShell.fir.opt.mlir 32342:7]
    invalidate tlbEmpty.io.out.ready @[build/NutShell.fir.opt.mlir 32344:7]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32345:16]
    when tlbExec.io.isFinish : @[build/NutShell.fir.opt.mlir 32346:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32348:9]
    node _T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32351:13]
    node _T_1 = and(_T, vmEnable) @[build/NutShell.fir.opt.mlir 32353:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 32355:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32357:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 32359:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32361:9]
    connect io.in.req.ready, tlbExec.io.in.ready @[build/NutShell.fir.opt.mlir 32363:7]
    node _tlbExec_io_in_bits_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32365:32]
    reg tlbExec_io_in_bits_r : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, clock @[build/NutShell.fir.opt.mlir 32366:31]
    when _tlbExec_io_in_bits_T : @[build/NutShell.fir.opt.mlir 32367:7]
      connect tlbExec_io_in_bits_r, io.in.req.bits @[build/NutShell.fir.opt.mlir 32368:9]
    connect tlbExec.io.in.bits, tlbExec_io_in_bits_r @[build/NutShell.fir.opt.mlir 32370:7]
    connect tlbExec.io.in.valid, valid @[build/NutShell.fir.opt.mlir 32371:7]
    node _mdUpdate_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 32373:22]
    connect mdUpdate, _mdUpdate_T @[build/NutShell.fir.opt.mlir 32374:7]
    node _T_2 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32376:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 32377:7]
      connect tlbExec.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32379:9]
      connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 32380:9]
      connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 32381:9]
      node _io_out_req_bits_addr_T = bits(io.in.req.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 32383:36]
      connect io.out.req.bits.addr, _io_out_req_bits_addr_T @[build/NutShell.fir.opt.mlir 32384:9]
      connect io.out.req.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 32385:9]
      connect io.out.req.bits.cmd, io.in.req.bits.cmd @[build/NutShell.fir.opt.mlir 32386:9]
      connect io.out.req.bits.wmask, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 32387:9]
      connect io.out.req.bits.wdata, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 32388:9]
      connect io.out.req.bits.user, io.in.req.bits.user @[build/NutShell.fir.opt.mlir 32389:9]
    else :
      connect io.out.req.bits, tlbExec.io.out.bits @[build/NutShell.fir.opt.mlir 32391:9]
      connect io.out.req.valid, tlbExec.io.out.valid @[build/NutShell.fir.opt.mlir 32392:9]
      connect tlbExec.io.out.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 32393:9]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 32395:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 32396:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 32397:7]
    node _T_3 = and(tlbExec.io.ipf, vmEnable) @[build/NutShell.fir.opt.mlir 32399:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 32400:7]
      node _tlbExec_io_out_ready_T = and(io.cacheEmpty, io.in.resp.ready) @[build/NutShell.fir.opt.mlir 32402:36]
      connect tlbExec.io.out.ready, _tlbExec_io_out_ready_T @[build/NutShell.fir.opt.mlir 32403:9]
      connect io.out.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32405:9]
    node _T_4 = and(tlbExec.io.ipf, vmEnable) @[build/NutShell.fir.opt.mlir 32408:15]
    node _T_5 = and(_T_4, io.cacheEmpty) @[build/NutShell.fir.opt.mlir 32410:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 32412:7]
      connect io.in.resp.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32414:9]
      connect io.in.resp.bits.rdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 32417:9]
      connect io.in.resp.bits.cmd, pad(UInt<3>(6), 4) @[build/NutShell.fir.opt.mlir 32420:9]
      connect io.in.resp.bits.user, tlbExec.io.in.bits.user @[build/NutShell.fir.opt.mlir 32421:9]
      connect io.ipf, tlbExec.io.ipf @[build/NutShell.fir.opt.mlir 32422:9]
    inst LogPerfHelper of LogPerfHelper_23 @[build/NutShell.fir.opt.mlir 32424:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32425:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32430:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32431:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32432:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32433:7]
    node _T_6 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32435:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 32436:7]
      node _T_7 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32438:17]
      node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32440:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 32441:9]
        skip @[build/NutShell.fir.opt.mlir 32442:11]
      node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32445:17]
      node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32447:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 32448:9]
        skip @[build/NutShell.fir.opt.mlir 32449:11]
    node _T_11 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32453:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 32454:7]
      node _T_12 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32456:18]
      node _T_13 = eq(_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32458:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 32459:9]
        skip @[build/NutShell.fir.opt.mlir 32460:11]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32463:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32465:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 32466:9]
        skip @[build/NutShell.fir.opt.mlir 32467:11]
    node _T_16 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32471:16]
    when _T_16 : @[build/NutShell.fir.opt.mlir 32472:7]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32474:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32476:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 32477:9]
        skip @[build/NutShell.fir.opt.mlir 32478:11]
      node _T_19 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32481:18]
      node _T_20 = eq(_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32483:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 32484:9]
        skip @[build/NutShell.fir.opt.mlir 32485:11]
    node _T_21 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32489:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 32490:7]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32492:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32494:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 32495:9]
        skip @[build/NutShell.fir.opt.mlir 32496:11]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32499:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32501:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 32502:9]
        skip @[build/NutShell.fir.opt.mlir 32503:11]
    connect satp, satp__bore @[build/NutShell.fir.opt.mlir 32506:7]
    connect flushTLB, flushTLB__bore @[build/NutShell.fir.opt.mlir 32507:7]

  extmodule LogPerfHelper_24 : @[build/NutShell.fir.opt.mlir 32509:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32509:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32509:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32509:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32509:141]
    defname = LogPerfHelper

  module CacheStage1 : @[build/NutShell.fir.opt.mlir 32510:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32510:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32510:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 32510:96]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32535:13]
    when _T : @[build/NutShell.fir.opt.mlir 32538:7]
      node _T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 32540:17]
      node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32542:17]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32544:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32546:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 32547:9]
        node _T_5 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32549:19]
        when _T_5 : @[build/NutShell.fir.opt.mlir 32550:11]
          skip @[build/NutShell.fir.opt.mlir 32551:13]
        assert(clock, _T_2, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 32553:11]
    node _T_6 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32557:15]
    inst LogPerfHelper of LogPerfHelper_24 @[build/NutShell.fir.opt.mlir 32558:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32559:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32564:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32565:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32566:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32567:7]
    node _T_7 = and(_T_6, c_control.logEnable) @[build/NutShell.fir.opt.mlir 32569:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 32570:7]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32572:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32574:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 32575:9]
        skip @[build/NutShell.fir.opt.mlir 32576:11]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32579:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32581:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 32582:9]
        skip @[build/NutShell.fir.opt.mlir 32583:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 32587:23]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32588:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 32593:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32594:7]
    node _T_12 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 32596:16]
    connect _WIRE.byteOffset, _T_12 @[build/NutShell.fir.opt.mlir 32597:7]
    node _T_13 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 32599:16]
    connect _WIRE.wordIndex, _T_13 @[build/NutShell.fir.opt.mlir 32600:7]
    node _T_14 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 32602:16]
    connect _WIRE.index, _T_14 @[build/NutShell.fir.opt.mlir 32603:7]
    node _T_15 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 32605:16]
    connect _WIRE.tag, _T_15 @[build/NutShell.fir.opt.mlir 32606:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 32607:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 32608:7]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32609:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 32614:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32615:7]
    node _T_16 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 32617:16]
    connect _WIRE_2.byteOffset, _T_16 @[build/NutShell.fir.opt.mlir 32618:7]
    node _T_17 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 32620:16]
    connect _WIRE_2.wordIndex, _T_17 @[build/NutShell.fir.opt.mlir 32621:7]
    node _T_18 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 32623:16]
    connect _WIRE_2.index, _T_18 @[build/NutShell.fir.opt.mlir 32624:7]
    node _T_19 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 32626:16]
    connect _WIRE_2.tag, _T_19 @[build/NutShell.fir.opt.mlir 32627:7]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32628:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 32633:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 32634:7]
    node _T_20 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 32636:16]
    connect _WIRE_4.byteOffset, _T_20 @[build/NutShell.fir.opt.mlir 32637:7]
    node _T_21 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 32639:16]
    connect _WIRE_4.wordIndex, _T_21 @[build/NutShell.fir.opt.mlir 32640:7]
    node _T_22 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 32642:16]
    connect _WIRE_4.index, _T_22 @[build/NutShell.fir.opt.mlir 32643:7]
    node _T_23 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 32645:16]
    connect _WIRE_4.tag, _T_23 @[build/NutShell.fir.opt.mlir 32646:7]
    node _T_24 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 32648:16]
    connect io.dataReadBus.req.bits.setIdx, _T_24 @[build/NutShell.fir.opt.mlir 32649:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 32650:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 32651:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32653:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32655:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 32656:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32658:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 32660:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 32662:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32664:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 32666:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 32667:7]
    node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32669:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 32670:7]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32672:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32674:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 32675:9]
        skip @[build/NutShell.fir.opt.mlir 32676:11]
      node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32679:18]
      node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32681:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 32682:9]
        skip @[build/NutShell.fir.opt.mlir 32683:11]

  extmodule LogPerfHelper_25 : @[build/NutShell.fir.opt.mlir 32687:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32687:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32687:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32687:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32687:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_26 : @[build/NutShell.fir.opt.mlir 32688:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32688:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32688:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32688:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32688:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_27 : @[build/NutShell.fir.opt.mlir 32689:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 32689:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 32689:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 32689:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 32689:141]
    defname = LogPerfHelper

  module CacheStage2 : @[build/NutShell.fir.opt.mlir 32690:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 32690:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 32690:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 32690:96]

    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32725:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 32730:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 32731:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 32733:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 32734:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 32736:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 32737:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 32739:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 32740:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 32742:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 32743:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 32745:27]
    wire _isForwardMeta_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 32746:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 32751:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 32752:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 32754:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 32755:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 32757:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 32758:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 32760:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 32761:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 32763:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 32764:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 32766:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 32768:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32770:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 32772:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 32774:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 32777:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32779:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 32781:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 32782:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 32784:9]
    reg forwardMetaReg : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 32786:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 32787:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 32788:9]
    wire metaWay : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 32790:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 32804:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 32806:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32810:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32812:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32814:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32816:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 32818:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 32820:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 32821:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 32823:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 32825:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 32826:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 32828:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 32830:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 32831:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 32833:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 32835:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 32836:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32838:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 32840:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 32842:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32844:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 32846:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 32848:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32850:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 32852:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 32854:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 32856:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 32858:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 32860:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 32861:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 32866:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 32867:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 32868:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 32869:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 32871:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 32873:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 32875:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 32877:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 32879:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 32881:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 32883:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 32885:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 32887:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 32889:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 32891:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 32892:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32894:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 32896:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 32898:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 32900:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 32901:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 32904:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 32906:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32908:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32910:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32912:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32914:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 32915:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 32920:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 32921:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 32922:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 32923:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 32925:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 32927:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 32929:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 32931:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 32934:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 32937:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 32940:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 32942:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 32944:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 32946:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 32948:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 32950:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 32952:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 32954:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 32956:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 32958:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 32960:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 32962:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 32964:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 32966:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 32968:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 32970:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 32972:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 32973:7]
      inst LogPerfHelper of LogPerfHelper_25 @[build/NutShell.fir.opt.mlir 32974:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 32975:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 32980:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 32981:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 32982:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 32983:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 32985:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 32986:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32988:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32990:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 32991:11]
          skip @[build/NutShell.fir.opt.mlir 32992:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 32995:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 32997:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 32998:11]
          skip @[build/NutShell.fir.opt.mlir 32999:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33003:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 33004:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33006:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33008:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 33009:11]
          skip @[build/NutShell.fir.opt.mlir 33010:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33013:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33015:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 33016:11]
          skip @[build/NutShell.fir.opt.mlir 33017:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33021:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 33022:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33024:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33026:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 33027:11]
          skip @[build/NutShell.fir.opt.mlir 33028:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33031:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33033:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 33034:11]
          skip @[build/NutShell.fir.opt.mlir 33035:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33039:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 33040:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33042:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33044:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 33045:11]
          skip @[build/NutShell.fir.opt.mlir 33046:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33049:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33051:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 33052:11]
          skip @[build/NutShell.fir.opt.mlir 33053:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33057:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 33058:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33060:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33062:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 33063:11]
          skip @[build/NutShell.fir.opt.mlir 33064:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33067:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33069:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 33070:11]
          skip @[build/NutShell.fir.opt.mlir 33071:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33075:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 33076:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33078:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33080:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 33081:11]
          skip @[build/NutShell.fir.opt.mlir 33082:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33085:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33087:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 33088:11]
          skip @[build/NutShell.fir.opt.mlir 33089:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33093:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 33094:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33096:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33098:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 33099:11]
          skip @[build/NutShell.fir.opt.mlir 33100:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33103:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33105:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 33106:11]
          skip @[build/NutShell.fir.opt.mlir 33107:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33111:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 33112:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33114:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33116:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 33117:11]
          skip @[build/NutShell.fir.opt.mlir 33118:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33121:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33123:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 33124:11]
          skip @[build/NutShell.fir.opt.mlir 33125:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33129:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 33130:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33132:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33134:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 33135:11]
          skip @[build/NutShell.fir.opt.mlir 33136:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33139:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33141:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 33142:11]
          skip @[build/NutShell.fir.opt.mlir 33143:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 33147:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 33148:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33150:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33152:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 33153:11]
          skip @[build/NutShell.fir.opt.mlir 33154:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33157:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33159:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 33160:11]
          skip @[build/NutShell.fir.opt.mlir 33161:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33166:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33168:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33170:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33172:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 33174:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 33176:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 33178:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 33180:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 33182:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 33184:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33186:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 33187:7]
      inst LogPerfHelper_1 of LogPerfHelper_26 @[build/NutShell.fir.opt.mlir 33188:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 33189:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 33194:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 33195:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 33196:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 33197:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 33199:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 33200:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33202:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33204:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 33205:11]
          skip @[build/NutShell.fir.opt.mlir 33206:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33209:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33211:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 33212:11]
          skip @[build/NutShell.fir.opt.mlir 33213:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33218:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33220:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33222:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33224:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 33226:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 33228:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 33230:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 33232:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 33234:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 33236:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33238:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 33240:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33242:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33244:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33246:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 33247:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33249:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 33250:9]
        skip @[build/NutShell.fir.opt.mlir 33251:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 33253:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 33255:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 33257:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 33259:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 33260:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 33261:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 33262:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 33265:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 33267:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33269:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 33272:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 33274:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33276:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 33278:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 33279:7]
    wire _isForwardData_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33280:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33285:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33286:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33288:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 33289:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33291:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 33292:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33294:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 33295:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33297:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 33298:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33299:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 33304:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33305:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 33307:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 33308:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 33310:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 33311:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 33313:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 33314:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 33316:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 33317:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 33319:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 33321:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 33323:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 33325:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33326:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 33327:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33329:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 33332:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33334:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 33336:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 33337:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33339:9]
    reg forwardDataReg : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 33341:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 33342:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 33343:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 33346:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 33347:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 33349:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 33350:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 33351:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 33352:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33354:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33356:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 33358:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 33359:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 33361:16]
    inst LogPerfHelper_2 of LogPerfHelper_27 @[build/NutShell.fir.opt.mlir 33362:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 33363:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 33368:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 33369:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 33370:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 33371:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 33373:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 33374:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33376:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33378:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 33379:9]
        skip @[build/NutShell.fir.opt.mlir 33380:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33383:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33385:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 33386:9]
        skip @[build/NutShell.fir.opt.mlir 33387:11]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33390:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33395:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33396:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33398:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 33399:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33401:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 33402:7]
    node _T_107 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33404:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 33405:7]
    node _T_108 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33407:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 33408:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 33410:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 33411:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33413:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33415:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 33416:9]
        skip @[build/NutShell.fir.opt.mlir 33417:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33420:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33422:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 33423:9]
        skip @[build/NutShell.fir.opt.mlir 33424:11]

  module Arbiter2_SRAMBundleAW : @[build/NutShell.fir.opt.mlir 33428:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33428:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33428:79]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 33428:106]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33445:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 33446:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 33448:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33450:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 33451:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33454:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 33456:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 33457:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 33459:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 33460:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33462:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 33464:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 33465:7]

  module Arbiter2_SRAMBundleAW_1 : @[build/NutShell.fir.opt.mlir 33467:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33467:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33467:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 33467:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33484:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 33485:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 33487:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33489:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 33490:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33493:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 33495:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 33496:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 33498:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 33499:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33501:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 33503:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 33504:7]

  extmodule LogPerfHelper_28 : @[build/NutShell.fir.opt.mlir 33506:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 33506:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 33506:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 33506:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 33506:141]
    defname = LogPerfHelper

  module CacheStage3 : @[build/NutShell.fir.opt.mlir 33507:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 33507:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 33507:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 33507:96]

    inst metaWriteArb of Arbiter2_SRAMBundleAW @[build/NutShell.fir.opt.mlir 33618:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 33632:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 33633:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_1 @[build/NutShell.fir.opt.mlir 33634:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 33648:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 33649:7]
    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33650:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 33655:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33656:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 33658:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 33659:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 33661:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 33662:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 33664:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 33665:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 33667:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 33668:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 33670:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 33672:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33675:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 33677:15]
    node _probe_T = and(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33679:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33682:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 33684:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 33687:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 33689:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33691:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33693:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33695:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33697:20]
    wire meta : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 33698:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33703:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33705:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33707:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33709:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 33711:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 33713:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 33715:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 33716:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 33717:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 33718:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33720:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33722:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33724:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33726:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 33728:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 33730:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 33732:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 33733:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 33734:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 33735:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33737:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33739:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33741:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33743:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 33745:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 33747:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 33749:21]
    wire _meta_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 33750:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 33751:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 33752:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 33754:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33756:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 33758:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33760:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 33762:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33764:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 33765:9]
        skip @[build/NutShell.fir.opt.mlir 33766:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 33768:9]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 33771:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 33773:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 33775:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 33777:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 33779:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 33781:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 33782:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33785:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33787:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33789:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33791:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 33793:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 33795:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 33797:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 33798:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 33799:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 33800:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 33802:19]
    node _wordMask_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33804:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 33806:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 33808:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 33810:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 33812:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 33814:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 33816:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 33818:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 33820:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 33822:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 33824:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33828:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33830:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33832:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33834:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33836:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33838:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33840:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 33842:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 33844:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 33846:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 33848:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 33850:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 33852:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 33854:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 33856:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 33859:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33861:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33863:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 33866:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33869:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 33871:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 33873:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 33874:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33876:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 33878:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 33880:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 33881:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 33884:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 33886:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 33887:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 33895:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 33898:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 33900:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 33902:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 33904:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 33905:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 33907:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 33909:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 33911:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 33913:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 33915:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 33916:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 33917:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 33918:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 33919:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 33920:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 33929:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 33931:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 33932:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 33937:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 33938:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 33940:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 33941:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 33943:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 33944:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 33946:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 33947:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 33949:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 33950:7]
    wire metaHitWriteBus_x8 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 33951:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 33955:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33957:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33959:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 33960:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 33961:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 33962:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 33963:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 33965:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33966:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 33968:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 33970:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 33971:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 33973:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 33976:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 33978:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 33979:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 33981:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33983:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 33984:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 33986:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 33989:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33991:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 33993:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 33995:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 33997:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 33999:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 34001:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 34003:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 34004:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 34005:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 34008:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 34009:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 34018:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 34019:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 34022:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 34024:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 34026:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 34028:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 34029:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34032:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34034:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34036:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34038:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 34040:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 34042:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 34044:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 34045:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 34046:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 34047:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 34049:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 34050:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 34052:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 34053:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 34055:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 34059:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 34060:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 34062:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 34065:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 34066:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34068:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34070:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 34072:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 34074:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 34076:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 34077:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 34079:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 34085:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 34087:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 34089:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 34092:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34095:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34097:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 34099:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 34101:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34103:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 34105:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 34107:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 34108:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 34110:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 34113:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 34114:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 34116:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34118:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34120:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 34122:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34124:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 34126:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 34128:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 34129:7]
    connect io.mmio.req.bits.wdata, io.in.bits.req.wdata @[build/NutShell.fir.opt.mlir 34130:7]
    connect io.mmio.req.bits.wmask, io.in.bits.req.wmask @[build/NutShell.fir.opt.mlir 34131:7]
    connect io.mmio.req.bits.cmd, io.in.bits.req.cmd @[build/NutShell.fir.opt.mlir 34132:7]
    connect io.mmio.req.bits.size, io.in.bits.req.size @[build/NutShell.fir.opt.mlir 34133:7]
    connect io.mmio.req.bits.addr, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34134:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34136:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 34139:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 34140:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34141:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34143:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34144:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 34145:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34147:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34150:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34152:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 34154:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34157:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 34159:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 34161:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 34164:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 34166:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 34167:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 34168:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 34169:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34172:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 34174:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34176:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34178:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 34180:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 34182:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 34183:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 34184:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34186:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34188:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 34190:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 34191:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 34192:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34194:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 34195:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34197:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34199:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 34201:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 34202:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 34203:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34206:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34209:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34212:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 34214:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 34215:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 34217:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34219:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 34221:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34223:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34225:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34227:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 34229:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 34231:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 34233:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 34235:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 34236:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 34237:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34239:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 34240:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34242:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34244:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 34246:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 34247:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 34248:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 34251:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 34254:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34256:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 34258:9]
      when probe : @[build/NutShell.fir.opt.mlir 34259:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34261:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 34262:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34264:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 34265:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 34266:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 34270:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 34271:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 34273:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34275:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34277:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 34279:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 34281:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 34282:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 34285:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34287:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 34289:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 34290:13]
            node _state_T_1 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34292:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 34294:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34296:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 34298:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 34299:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 34305:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 34306:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 34308:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 34309:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 34311:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 34315:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 34316:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 34318:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 34319:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 34321:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 34325:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 34326:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34328:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 34330:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 34331:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34333:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34335:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 34337:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 34338:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34341:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 34343:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 34345:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 34347:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 34349:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 34350:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 34352:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 34356:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 34357:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34359:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 34360:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 34362:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 34363:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 34367:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 34368:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34370:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 34371:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34373:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34375:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34377:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 34379:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 34380:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 34382:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 34383:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 34386:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 34389:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 34390:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 34392:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 34397:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 34398:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34400:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 34401:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34403:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34405:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 34407:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 34408:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 34411:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34413:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 34415:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 34416:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 34418:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 34422:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 34423:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34425:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 34426:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 34428:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 34432:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 34433:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34435:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 34437:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 34439:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 34440:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 34442:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 34454:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 34456:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 34458:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 34460:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 34462:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 34463:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34472:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34474:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 34476:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 34478:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 34479:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 34481:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 34482:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 34483:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 34484:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 34485:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 34486:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34487:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34488:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 34489:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34490:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34491:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 34492:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 34493:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 34494:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 34495:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34504:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34506:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 34508:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 34510:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 34512:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 34513:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34518:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34520:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 34522:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 34523:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 34525:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 34526:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34527:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 34532:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34533:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 34535:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 34536:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 34538:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 34539:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 34541:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 34542:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 34544:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 34545:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 34546:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 34547:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 34548:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 34549:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 34550:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34551:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34552:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 34553:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 34554:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 34555:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 34556:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 34557:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 34558:7]
    node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 34560:31]
    connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 34561:7]
    node _io_out_bits_cmd_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34563:29]
    node _io_out_bits_cmd_T_1 = eq(_io_out_bits_cmd_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34565:31]
    node _io_out_bits_cmd_T_2 = bits(io.in.bits.req.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 34567:31]
    node _io_out_bits_cmd_T_3 = eq(_io_out_bits_cmd_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34569:31]
    node _io_out_bits_cmd_T_4 = and(_io_out_bits_cmd_T_1, _io_out_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 34571:31]
    node _io_out_bits_cmd_T_5 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34573:31]
    wire _io_out_bits_cmd_WIRE : UInt<3> @[build/NutShell.fir.opt.mlir 34574:32]
    invalidate _io_out_bits_cmd_WIRE @[build/NutShell.fir.opt.mlir 34576:7]
    node _io_out_bits_cmd_T_6 = mux(_io_out_bits_cmd_T_5, UInt<3>(5), _io_out_bits_cmd_WIRE) @[build/NutShell.fir.opt.mlir 34579:31]
    node _io_out_bits_cmd_T_7 = mux(_io_out_bits_cmd_T_4, UInt<3>(6), _io_out_bits_cmd_T_6) @[build/NutShell.fir.opt.mlir 34581:31]
    connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_7, 4) @[build/NutShell.fir.opt.mlir 34583:7]
    connect io.out.bits.user, io.in.bits.req.user @[build/NutShell.fir.opt.mlir 34584:7]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 34586:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34588:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34590:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34592:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34594:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 34596:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 34598:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 34600:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 34602:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 34604:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 34606:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34608:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 34610:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 34612:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 34614:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34616:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 34618:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 34620:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34622:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 34624:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34626:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34628:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 34630:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 34632:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 34634:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 34636:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 34638:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 34640:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 34641:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 34643:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34645:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34647:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 34649:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 34651:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 34653:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 34655:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 34657:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34659:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 34661:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 34663:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 34665:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 34667:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 34669:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 34671:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 34672:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34674:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34676:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 34678:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 34680:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34682:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 34684:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34686:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 34688:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 34689:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 34691:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 34693:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 34695:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 34697:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 34699:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 34701:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 34703:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 34704:7]
    node _T_69 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34706:16]
    node _T_70 = eq(_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34708:16]
    node _T_71 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34710:16]
    node _T_72 = eq(_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34712:16]
    when _T_72 : @[build/NutShell.fir.opt.mlir 34713:7]
      node _T_73 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34715:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 34716:9]
        skip @[build/NutShell.fir.opt.mlir 34717:11]
      assert(clock, _T_70, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 34719:9]
    node _T_74 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34722:16]
    node _T_75 = eq(_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34724:16]
    node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34726:16]
    node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34728:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 34729:7]
      node _T_78 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34731:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 34732:9]
        skip @[build/NutShell.fir.opt.mlir 34733:11]
      assert(clock, _T_75, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 34735:9]
    node _T_79 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34738:16]
    node _T_80 = and(_T_79, io.flush) @[build/NutShell.fir.opt.mlir 34740:16]
    node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34742:16]
    node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34744:16]
    node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34746:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 34747:7]
      node _T_84 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34749:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 34750:9]
        skip @[build/NutShell.fir.opt.mlir 34751:11]
      assert(clock, _T_81, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 34753:9]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34755:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 34760:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34761:7]
    node _T_85 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 34763:16]
    connect _WIRE.byteOffset, _T_85 @[build/NutShell.fir.opt.mlir 34764:7]
    node _T_86 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 34766:16]
    connect _WIRE.wordIndex, _T_86 @[build/NutShell.fir.opt.mlir 34767:7]
    node _T_87 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 34769:16]
    connect _WIRE.index, _T_87 @[build/NutShell.fir.opt.mlir 34770:7]
    node _T_88 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 34772:16]
    connect _WIRE.tag, _T_88 @[build/NutShell.fir.opt.mlir 34773:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 34775:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 34777:13]
    node _T_89 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 34779:16]
    inst LogPerfHelper of LogPerfHelper_28 @[build/NutShell.fir.opt.mlir 34780:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 34781:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 34786:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 34787:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 34788:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 34789:7]
    node _T_90 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34791:16]
    when _T_90 : @[build/NutShell.fir.opt.mlir 34792:7]
      node _T_91 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34794:18]
      node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34796:18]
      when _T_92 : @[build/NutShell.fir.opt.mlir 34797:9]
        skip @[build/NutShell.fir.opt.mlir 34798:11]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34801:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34803:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 34804:9]
        skip @[build/NutShell.fir.opt.mlir 34805:11]
    node _T_95 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34809:16]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 34810:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 34812:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 34814:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 34815:7]
    node _T_96 = and(_T_95, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34817:16]
    when _T_96 : @[build/NutShell.fir.opt.mlir 34818:7]
      node _T_97 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34820:18]
      node _T_98 = eq(_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34822:18]
      when _T_98 : @[build/NutShell.fir.opt.mlir 34823:9]
        skip @[build/NutShell.fir.opt.mlir 34824:11]
      node _T_99 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34827:18]
      node _T_100 = eq(_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34829:19]
      when _T_100 : @[build/NutShell.fir.opt.mlir 34830:9]
        skip @[build/NutShell.fir.opt.mlir 34831:11]
    node _T_101 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34835:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 34836:7]
      node _T_102 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34838:19]
      node _T_103 = eq(_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34840:19]
      when _T_103 : @[build/NutShell.fir.opt.mlir 34841:9]
        skip @[build/NutShell.fir.opt.mlir 34842:11]
      node _T_104 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34845:19]
      node _T_105 = eq(_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34847:19]
      when _T_105 : @[build/NutShell.fir.opt.mlir 34848:9]
        skip @[build/NutShell.fir.opt.mlir 34849:11]
    node _T_106 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34853:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 34854:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34856:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34858:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 34859:9]
        skip @[build/NutShell.fir.opt.mlir 34860:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34863:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34865:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 34866:9]
        skip @[build/NutShell.fir.opt.mlir 34867:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34871:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 34872:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34874:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34876:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 34877:9]
        skip @[build/NutShell.fir.opt.mlir 34878:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34881:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34883:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 34884:9]
        skip @[build/NutShell.fir.opt.mlir 34885:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 34889:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 34891:15]
    node _T_116 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 34893:17]
    node _T_117 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34895:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 34896:7]
      node _T_118 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34898:19]
      node _T_119 = eq(_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34900:19]
      when _T_119 : @[build/NutShell.fir.opt.mlir 34901:9]
        skip @[build/NutShell.fir.opt.mlir 34902:11]
      node _T_120 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34905:19]
      node _T_121 = eq(_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34907:19]
      when _T_121 : @[build/NutShell.fir.opt.mlir 34908:9]
        skip @[build/NutShell.fir.opt.mlir 34909:11]
    node _T_122 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 34913:17]
    when _T_122 : @[build/NutShell.fir.opt.mlir 34914:7]
      node _T_123 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34916:19]
      node _T_124 = eq(_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34918:19]
      when _T_124 : @[build/NutShell.fir.opt.mlir 34919:9]
        skip @[build/NutShell.fir.opt.mlir 34920:11]
      node _T_125 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34923:19]
      node _T_126 = eq(_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34925:19]
      when _T_126 : @[build/NutShell.fir.opt.mlir 34926:9]
        skip @[build/NutShell.fir.opt.mlir 34927:11]
    node _T_127 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 34931:17]
    node _T_128 = and(_T_127, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34933:17]
    when _T_128 : @[build/NutShell.fir.opt.mlir 34934:7]
      node _T_129 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34936:19]
      node _T_130 = eq(_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34938:19]
      when _T_130 : @[build/NutShell.fir.opt.mlir 34939:9]
        skip @[build/NutShell.fir.opt.mlir 34940:11]
      node _T_131 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34943:19]
      node _T_132 = eq(_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34945:19]
      when _T_132 : @[build/NutShell.fir.opt.mlir 34946:9]
        skip @[build/NutShell.fir.opt.mlir 34947:11]
    node _T_133 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 34951:17]
    node _T_134 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34953:17]
    node _T_135 = and(_T_133, _T_134) @[build/NutShell.fir.opt.mlir 34955:17]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34956:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 34961:18]
    connect _WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 34962:7]
    node _T_136 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 34964:17]
    connect _WIRE_2.byteOffset, _T_136 @[build/NutShell.fir.opt.mlir 34965:7]
    node _T_137 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 34967:17]
    connect _WIRE_2.wordIndex, _T_137 @[build/NutShell.fir.opt.mlir 34968:7]
    node _T_138 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 34970:17]
    connect _WIRE_2.index, _T_138 @[build/NutShell.fir.opt.mlir 34971:7]
    node _T_139 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 34973:17]
    connect _WIRE_2.tag, _T_139 @[build/NutShell.fir.opt.mlir 34974:7]
    node _T_140 = and(_T_135, c_control.logEnable) @[build/NutShell.fir.opt.mlir 34976:17]
    when _T_140 : @[build/NutShell.fir.opt.mlir 34977:7]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34979:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34981:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 34982:9]
        skip @[build/NutShell.fir.opt.mlir 34983:11]
      node _T_143 = asUInt(reset) @[build/NutShell.fir.opt.mlir 34986:19]
      node _T_144 = eq(_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 34988:19]
      when _T_144 : @[build/NutShell.fir.opt.mlir 34989:9]
        skip @[build/NutShell.fir.opt.mlir 34990:11]
    node _T_145 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 34994:17]
    node _T_146 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 34996:17]
    node _T_147 = and(_T_145, _T_146) @[build/NutShell.fir.opt.mlir 34998:17]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 34999:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 35004:18]
    connect _WIRE_5, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 35005:7]
    node _T_148 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 35007:17]
    connect _WIRE_4.byteOffset, _T_148 @[build/NutShell.fir.opt.mlir 35008:7]
    node _T_149 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 35010:17]
    connect _WIRE_4.wordIndex, _T_149 @[build/NutShell.fir.opt.mlir 35011:7]
    node _T_150 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 35013:17]
    connect _WIRE_4.index, _T_150 @[build/NutShell.fir.opt.mlir 35014:7]
    node _T_151 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 35016:17]
    connect _WIRE_4.tag, _T_151 @[build/NutShell.fir.opt.mlir 35017:7]
    node _T_152 = and(_T_147, c_control.logEnable) @[build/NutShell.fir.opt.mlir 35019:17]
    when _T_152 : @[build/NutShell.fir.opt.mlir 35020:7]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 35022:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35024:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 35025:9]
        skip @[build/NutShell.fir.opt.mlir 35026:11]
      node _T_155 = asUInt(reset) @[build/NutShell.fir.opt.mlir 35029:19]
      node _T_156 = eq(_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35031:19]
      when _T_156 : @[build/NutShell.fir.opt.mlir 35032:9]
        skip @[build/NutShell.fir.opt.mlir 35033:11]
    node _T_157 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 35037:17]
    node _T_158 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 35039:17]
    node _T_159 = and(_T_157, _T_158) @[build/NutShell.fir.opt.mlir 35041:17]
    wire _WIRE_6 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 35042:18]
    wire _WIRE_7 : UInt<32> @[build/NutShell.fir.opt.mlir 35047:18]
    connect _WIRE_7, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 35048:7]
    node _T_160 = bits(_WIRE_7, 2, 0) @[build/NutShell.fir.opt.mlir 35050:17]
    connect _WIRE_6.byteOffset, _T_160 @[build/NutShell.fir.opt.mlir 35051:7]
    node _T_161 = bits(_WIRE_7, 5, 3) @[build/NutShell.fir.opt.mlir 35053:17]
    connect _WIRE_6.wordIndex, _T_161 @[build/NutShell.fir.opt.mlir 35054:7]
    node _T_162 = bits(_WIRE_7, 12, 6) @[build/NutShell.fir.opt.mlir 35056:17]
    connect _WIRE_6.index, _T_162 @[build/NutShell.fir.opt.mlir 35057:7]
    node _T_163 = bits(_WIRE_7, 31, 13) @[build/NutShell.fir.opt.mlir 35059:17]
    connect _WIRE_6.tag, _T_163 @[build/NutShell.fir.opt.mlir 35060:7]
    node _T_164 = and(_T_159, c_control.logEnable) @[build/NutShell.fir.opt.mlir 35062:17]
    when _T_164 : @[build/NutShell.fir.opt.mlir 35063:7]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 35065:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35067:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 35068:9]
        skip @[build/NutShell.fir.opt.mlir 35069:11]
      node _T_167 = asUInt(reset) @[build/NutShell.fir.opt.mlir 35072:19]
      node _T_168 = eq(_T_167, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35074:19]
      when _T_168 : @[build/NutShell.fir.opt.mlir 35075:9]
        skip @[build/NutShell.fir.opt.mlir 35076:11]

  module SRAMTemplate_1 : @[build/NutShell.fir.opt.mlir 35080:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35080:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35080:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35080:99]

    mem array : @[build/NutShell.fir.opt.mlir 35106:42]
      data-type => UInt<21>[4]
      depth => 128
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 35108:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35110:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 35112:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 35114:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 35116:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 35118:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35120:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 35122:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 35136:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35139:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 35140:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35141:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35143:22]
    regreset _resetSet : UInt<7>, clock, reset, UInt<7>(0) @[build/NutShell.fir.opt.mlir 35145:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 35146:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35148:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 35150:7]
      node wrap_wrap = eq(_resetSet, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 35152:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 35154:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 35156:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 35157:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 35158:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 35160:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35162:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 35164:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 35165:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 35167:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35169:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 35171:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 35173:17]
    wire _wdataword_WIRE : UInt<21> @[build/NutShell.fir.opt.mlir 35174:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 21) @[build/NutShell.fir.opt.mlir 35177:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 35179:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 35181:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 35183:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 35187:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 35189:18]
    wire wdata : UInt<21>[4] @[build/NutShell.fir.opt.mlir 35190:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 35195:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 35196:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 35197:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 35198:7]
    when wen : @[build/NutShell.fir.opt.mlir 35199:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 35201:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 35203:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 35205:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 35207:17]
      node _T_4 = or(setIdx, UInt<7>(0)) @[build/NutShell.fir.opt.mlir 35209:17]
      node _T_5 = bits(_T_4, 6, 0) @[build/NutShell.fir.opt.mlir 35211:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 35212:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35213:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35214:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35216:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35218:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35220:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35222:9]
      when _T : @[build/NutShell.fir.opt.mlir 35223:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35224:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 35225:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 35227:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35228:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 35229:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 35231:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35232:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 35233:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 35235:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35236:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 35237:11]
    wire _rdata_WIRE : UInt<7> @[build/NutShell.fir.opt.mlir 35240:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 35242:7]
    when realRen : @[build/NutShell.fir.opt.mlir 35243:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35244:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 35245:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 35246:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35247:9]
    wire rdata_0 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35249:18]
    wire _rdata_WIRE_1 : UInt<21> @[build/NutShell.fir.opt.mlir 35253:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 35254:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 35256:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 35257:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 35259:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 35260:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 20, 2) @[build/NutShell.fir.opt.mlir 35262:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 35263:7]
    wire rdata_1 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35264:18]
    wire _rdata_WIRE_2 : UInt<21> @[build/NutShell.fir.opt.mlir 35268:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 35269:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 35271:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 35272:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 35274:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 35275:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 20, 2) @[build/NutShell.fir.opt.mlir 35277:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 35278:7]
    wire rdata_2 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35279:18]
    wire _rdata_WIRE_3 : UInt<21> @[build/NutShell.fir.opt.mlir 35283:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 35284:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 35286:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 35287:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 35289:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 35290:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 20, 2) @[build/NutShell.fir.opt.mlir 35292:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 35293:7]
    wire rdata_3 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 35294:18]
    wire _rdata_WIRE_4 : UInt<21> @[build/NutShell.fir.opt.mlir 35298:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 35299:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 35301:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 35302:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 35304:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 35305:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 20, 2) @[build/NutShell.fir.opt.mlir 35307:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 35308:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 35309:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 35326:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 35327:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 35328:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 35329:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 35330:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 35331:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 35332:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 35333:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 35334:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 35335:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 35336:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 35337:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 35338:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35340:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35342:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 35344:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 35345:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35347:7]

  module Arbiter1_SRAMBundleA : @[build/NutShell.fir.opt.mlir 35349:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35349:52]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35349:78]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 35349:105]

    connect io.chosen, tail(UInt<1>(0), 1) @[build/NutShell.fir.opt.mlir 35363:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35364:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35367:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35368:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35370:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 35372:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35373:7]

  module SRAMTemplateWithArbiter : @[build/NutShell.fir.opt.mlir 35375:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35375:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35375:81]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35375:108]

    inst ram of SRAMTemplate_1 @[build/NutShell.fir.opt.mlir 35389:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 35402:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 35403:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 35404:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 35405:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 35406:7]
    inst readArb of Arbiter1_SRAMBundleA @[build/NutShell.fir.opt.mlir 35407:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 35417:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 35418:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 35419:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 35420:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 35421:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 35422:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 35423:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 35424:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 35426:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35427:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 35428:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 35429:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35448:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35450:7]
    connect _WIRE[0].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35453:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35455:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35457:7]
    connect _WIRE[1].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35459:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35461:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35463:7]
    connect _WIRE[2].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35465:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35467:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35469:7]
    connect _WIRE[3].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 35471:7]
    regreset r : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 35472:12]
    when REG : @[build/NutShell.fir.opt.mlir 35473:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35474:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 35477:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 35478:7]

  module SRAMTemplate_2 : @[build/NutShell.fir.opt.mlir 35480:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35480:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35480:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35480:99]

    mem array : @[build/NutShell.fir.opt.mlir 35504:42]
      data-type => UInt<64>[4]
      depth => 1024
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 35506:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35508:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 35510:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 35512:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 35514:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 35516:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35518:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 35520:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 35534:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35537:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 35538:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35539:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 35541:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35543:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 35545:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 35547:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 35548:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 35551:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 35553:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 35558:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 35560:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 35561:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 35566:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 35567:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 35568:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 35569:7]
    when wen : @[build/NutShell.fir.opt.mlir 35571:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 35573:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 35575:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 35577:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 35579:17]
      node _T_4 = or(setIdx, UInt<10>(0)) @[build/NutShell.fir.opt.mlir 35581:17]
      node _T_5 = bits(_T_4, 9, 0) @[build/NutShell.fir.opt.mlir 35583:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 35584:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35585:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35586:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35588:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35590:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35592:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 35594:9]
      when _T : @[build/NutShell.fir.opt.mlir 35595:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35596:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 35597:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 35599:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35600:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 35601:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 35603:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35604:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 35605:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 35607:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 35608:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 35609:11]
    wire _rdata_WIRE : UInt<10> @[build/NutShell.fir.opt.mlir 35612:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 35614:7]
    when realRen : @[build/NutShell.fir.opt.mlir 35615:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35616:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 35617:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 35618:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 35619:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35621:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 35623:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 35624:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 35626:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 35627:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35628:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 35630:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 35631:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 35633:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 35634:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35635:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 35637:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 35638:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 35640:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 35641:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 35642:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 35644:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 35645:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 35647:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 35648:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35649:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 35658:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 35659:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 35660:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 35661:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 35662:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35664:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35666:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 35668:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 35669:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35671:7]

  module Arbiter2_SRAMBundleA : @[build/NutShell.fir.opt.mlir 35673:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35673:52]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35673:78]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 35673:105]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 35690:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 35691:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 35693:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 35695:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35696:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35699:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35701:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35702:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 35704:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 35705:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35707:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 35709:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35710:7]

  module SRAMTemplateWithArbiter_1 : @[build/NutShell.fir.opt.mlir 35712:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35712:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35712:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 35712:110]

    inst ram of SRAMTemplate_2 @[build/NutShell.fir.opt.mlir 35733:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 35746:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 35747:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 35748:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 35749:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 35750:7]
    inst readArb of Arbiter2_SRAMBundleA @[build/NutShell.fir.opt.mlir 35751:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 35765:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 35766:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 35767:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 35768:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 35769:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 35770:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 35771:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 35772:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 35773:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 35774:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 35775:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 35777:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35778:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 35779:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35780:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35791:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35793:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35795:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35797:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 35798:12]
    when REG : @[build/NutShell.fir.opt.mlir 35799:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35800:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 35803:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 35804:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 35806:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 35807:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 35808:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 35809:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35819:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35821:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35823:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 35825:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 35826:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 35827:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 35828:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 35831:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 35832:7]

  module Arbiter1_SimpleBusReqBundle : @[build/NutShell.fir.opt.mlir 35834:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35834:59]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35834:85]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 35834:112]

    connect io.chosen, tail(UInt<1>(0), 1) @[build/NutShell.fir.opt.mlir 35848:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 35849:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 35852:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 35853:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 35855:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 35857:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 35858:7]

  extmodule LogPerfHelper_29 : @[build/NutShell.fir.opt.mlir 35860:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 35860:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 35860:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 35860:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 35860:141]
    defname = LogPerfHelper

  module Cache : @[build/NutShell.fir.opt.mlir 35861:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 35861:37]
    input reset : Reset @[build/NutShell.fir.opt.mlir 35861:63]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64>, user : UInt<87> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 35861:90]
    input flushICache__bore : UInt<1> @[build/NutShell.fir.opt.mlir 35861:1230]

    inst s1 of CacheStage1 @[build/NutShell.fir.opt.mlir 35900:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 35947:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 35948:7]
    inst s2 of CacheStage2 @[build/NutShell.fir.opt.mlir 35949:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 36011:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 36012:7]
    inst s3 of CacheStage3 @[build/NutShell.fir.opt.mlir 36013:38]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 36114:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 36115:7]
    inst metaArray of SRAMTemplateWithArbiter @[build/NutShell.fir.opt.mlir 36116:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 36129:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 36130:7]
    inst dataArray of SRAMTemplateWithArbiter_1 @[build/NutShell.fir.opt.mlir 36131:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 36150:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 36151:7]
    wire flushICache : UInt<1> @[build/NutShell.fir.opt.mlir 36152:22]
    connect flushICache, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36155:7]
    node _metaArray_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 36157:29]
    node _metaArray_reset_T_1 = or(_metaArray_reset_T, flushICache) @[build/NutShell.fir.opt.mlir 36159:31]
    connect metaArray.reset, _metaArray_reset_T_1 @[build/NutShell.fir.opt.mlir 36161:7]
    inst arb of Arbiter1_SimpleBusReqBundle @[build/NutShell.fir.opt.mlir 36162:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 36172:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 36173:7]
    connect io.in.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 36174:7]
    connect arb.io.in[0].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 36175:7]
    connect arb.io.in[0].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 36176:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 36177:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 36178:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 36179:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 36181:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 36183:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36184:16]
    when _T : @[build/NutShell.fir.opt.mlir 36185:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36187:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 36190:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 36192:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36194:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 36196:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36198:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 36200:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 36202:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> } }, clock @[build/NutShell.fir.opt.mlir 36203:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 36211:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 36212:9]
    connect s2.io.in.bits.req.user, s2_io_in_bits_r.req.user @[build/NutShell.fir.opt.mlir 36214:7]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 36215:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 36216:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 36217:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 36218:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 36219:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 36220:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 36222:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36223:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 36224:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36226:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 36229:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 36230:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36232:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 36234:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36236:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 36238:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 36240:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64>, user : UInt<87> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 36241:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 36284:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 36285:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 36287:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 36288:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 36289:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 36290:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 36291:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 36292:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 36293:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 36294:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 36295:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 36296:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 36297:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 36298:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 36299:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 36300:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 36301:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 36302:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 36303:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 36304:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 36305:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 36306:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 36307:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 36308:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 36309:7]
    connect s3.io.in.bits.req.user, s3_io_in_bits_r.req.user @[build/NutShell.fir.opt.mlir 36310:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 36311:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 36312:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 36313:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 36314:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 36315:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 36316:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 36317:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 36318:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 36319:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 36321:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 36322:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 36323:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 36324:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 36325:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 36326:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 36327:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 36328:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 36329:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 36330:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 36331:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 36332:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 36333:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 36334:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36336:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36338:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 36340:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 36341:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 36344:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 36346:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 36348:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 36350:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 36351:7]
    connect io.out.coh.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36353:7]
    invalidate io.out.coh.resp.bits.rdata @[build/NutShell.fir.opt.mlir 36355:7]
    invalidate io.out.coh.resp.bits.cmd @[build/NutShell.fir.opt.mlir 36357:7]
    invalidate io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 36359:7]
    connect io.out.coh.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36361:7]
    connect s3.io.cohResp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 36363:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 36364:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 36365:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 36366:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 36367:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 36368:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 36369:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 36370:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 36371:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 36372:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 36373:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 36374:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 36375:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 36376:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36377:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 36378:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 36379:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36380:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 36381:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 36382:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 36383:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 36384:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 36385:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 36386:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 36387:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 36388:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 36389:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 36390:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 36391:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 36392:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 36393:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 36394:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 36395:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 36396:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 36397:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 36398:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 36399:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 36400:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36401:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 36402:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 36403:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 36404:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 36405:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 36406:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 36407:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 36408:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 36409:7]
    inst LogPerfHelper of LogPerfHelper_29 @[build/NutShell.fir.opt.mlir 36410:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 36411:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 36416:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 36417:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 36418:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 36419:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36421:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 36422:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36424:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36426:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 36427:9]
        skip @[build/NutShell.fir.opt.mlir 36428:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36431:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36433:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 36434:9]
        skip @[build/NutShell.fir.opt.mlir 36435:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36439:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 36440:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36442:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36444:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 36445:9]
        skip @[build/NutShell.fir.opt.mlir 36446:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36449:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36451:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 36452:9]
        skip @[build/NutShell.fir.opt.mlir 36453:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 36456:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36458:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 36459:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36461:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36463:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 36464:11]
          skip @[build/NutShell.fir.opt.mlir 36465:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36468:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36470:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 36471:11]
          skip @[build/NutShell.fir.opt.mlir 36472:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 36476:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36478:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 36479:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36481:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36483:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 36484:11]
          skip @[build/NutShell.fir.opt.mlir 36485:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36488:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36490:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 36491:11]
          skip @[build/NutShell.fir.opt.mlir 36492:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 36496:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 36498:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 36499:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36501:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36503:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 36504:11]
          skip @[build/NutShell.fir.opt.mlir 36505:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 36508:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 36510:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 36511:11]
          skip @[build/NutShell.fir.opt.mlir 36512:13]
    connect flushICache, flushICache__bore @[build/NutShell.fir.opt.mlir 36516:7]

  extmodule LogPerfHelper_30 : @[build/NutShell.fir.opt.mlir 36518:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 36518:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 36518:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 36518:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 36518:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_31 : @[build/NutShell.fir.opt.mlir 36519:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 36519:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 36519:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 36519:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 36519:141]
    defname = LogPerfHelper

  module EmbeddedTLBExec_1 : @[build/NutShell.fir.opt.mlir 36520:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 36520:49]
    input reset : Reset @[build/NutShell.fir.opt.mlir 36520:75]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip md : UInt<121>[4], mdWrite : { wen : UInt<1>, windex : UInt<4>, waymask : UInt<4>, wdata : UInt<121> }, flip mdReady : UInt<1>, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, flip satp : UInt<64>, pf : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, ipf : UInt<1>, isFinish : UInt<1> } @[build/NutShell.fir.opt.mlir 36520:102]
    input isAMO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 36520:1027]

    wire _vpn_WIRE : { vpn : UInt<27>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 36576:20]
    wire _vpn_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 36579:22]
    connect _vpn_WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 36580:7]
    node _vpn_T = bits(_vpn_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 36582:17]
    connect _vpn_WIRE.off, _vpn_T @[build/NutShell.fir.opt.mlir 36583:7]
    node _vpn_T_1 = bits(_vpn_WIRE_1, 38, 12) @[build/NutShell.fir.opt.mlir 36585:19]
    connect _vpn_WIRE.vpn, _vpn_T_1 @[build/NutShell.fir.opt.mlir 36586:7]
    wire vpn : { vpn2 : UInt<9>, vpn1 : UInt<9>, vpn0 : UInt<9> } @[build/NutShell.fir.opt.mlir 36587:14]
    wire _vpn_WIRE_2 : UInt<27> @[build/NutShell.fir.opt.mlir 36591:22]
    connect _vpn_WIRE_2, _vpn_WIRE.vpn @[build/NutShell.fir.opt.mlir 36592:7]
    node _vpn_T_2 = bits(_vpn_WIRE_2, 8, 0) @[build/NutShell.fir.opt.mlir 36594:19]
    connect vpn.vpn0, _vpn_T_2 @[build/NutShell.fir.opt.mlir 36595:7]
    node _vpn_T_3 = bits(_vpn_WIRE_2, 17, 9) @[build/NutShell.fir.opt.mlir 36597:19]
    connect vpn.vpn1, _vpn_T_3 @[build/NutShell.fir.opt.mlir 36598:7]
    node _vpn_T_4 = bits(_vpn_WIRE_2, 26, 18) @[build/NutShell.fir.opt.mlir 36600:19]
    connect vpn.vpn2, _vpn_T_4 @[build/NutShell.fir.opt.mlir 36601:7]
    wire satp : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 36602:15]
    wire _satp_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 36607:21]
    connect _satp_WIRE, io.satp @[build/NutShell.fir.opt.mlir 36608:7]
    node _satp_T = bits(_satp_WIRE, 19, 0) @[build/NutShell.fir.opt.mlir 36610:18]
    connect satp.ppn, _satp_T @[build/NutShell.fir.opt.mlir 36611:7]
    node _satp_T_1 = bits(_satp_WIRE, 43, 20) @[build/NutShell.fir.opt.mlir 36613:20]
    connect satp.res, _satp_T_1 @[build/NutShell.fir.opt.mlir 36614:7]
    node _satp_T_2 = bits(_satp_WIRE, 59, 44) @[build/NutShell.fir.opt.mlir 36616:20]
    connect satp.asid, _satp_T_2 @[build/NutShell.fir.opt.mlir 36617:7]
    node _satp_T_3 = bits(_satp_WIRE, 63, 60) @[build/NutShell.fir.opt.mlir 36619:20]
    connect satp.mode, _satp_T_3 @[build/NutShell.fir.opt.mlir 36620:7]
    connect io.pf.loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36623:7]
    connect io.pf.storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 36625:7]
    connect io.pf.addr, io.in.bits.addr @[build/NutShell.fir.opt.mlir 36626:7]
    wire _hitVec_WIRE : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36627:23]
    wire _hitVec_WIRE_1 : UInt<121> @[build/NutShell.fir.opt.mlir 36634:25]
    connect _hitVec_WIRE_1, io.md[0] @[build/NutShell.fir.opt.mlir 36635:7]
    node _hitVec_T = bits(_hitVec_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 36637:20]
    connect _hitVec_WIRE.pteaddr, _hitVec_T @[build/NutShell.fir.opt.mlir 36638:7]
    node _hitVec_T_1 = bits(_hitVec_WIRE_1, 51, 32) @[build/NutShell.fir.opt.mlir 36640:22]
    connect _hitVec_WIRE.ppn, _hitVec_T_1 @[build/NutShell.fir.opt.mlir 36641:7]
    node _hitVec_T_2 = bits(_hitVec_WIRE_1, 59, 52) @[build/NutShell.fir.opt.mlir 36643:22]
    connect _hitVec_WIRE.flag, _hitVec_T_2 @[build/NutShell.fir.opt.mlir 36644:7]
    node _hitVec_T_3 = bits(_hitVec_WIRE_1, 77, 60) @[build/NutShell.fir.opt.mlir 36646:22]
    connect _hitVec_WIRE.mask, _hitVec_T_3 @[build/NutShell.fir.opt.mlir 36647:7]
    node _hitVec_T_4 = bits(_hitVec_WIRE_1, 93, 78) @[build/NutShell.fir.opt.mlir 36649:22]
    connect _hitVec_WIRE.asid, _hitVec_T_4 @[build/NutShell.fir.opt.mlir 36650:7]
    node _hitVec_T_5 = bits(_hitVec_WIRE_1, 120, 94) @[build/NutShell.fir.opt.mlir 36652:22]
    connect _hitVec_WIRE.vpn, _hitVec_T_5 @[build/NutShell.fir.opt.mlir 36653:7]
    wire _hitVec_WIRE_2 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36654:25]
    wire _hitVec_WIRE_3 : UInt<8> @[build/NutShell.fir.opt.mlir 36663:25]
    connect _hitVec_WIRE_3, _hitVec_WIRE.flag @[build/NutShell.fir.opt.mlir 36664:7]
    node _hitVec_T_6 = bits(_hitVec_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 36666:22]
    connect _hitVec_WIRE_2.v, _hitVec_T_6 @[build/NutShell.fir.opt.mlir 36667:7]
    node _hitVec_T_7 = bits(_hitVec_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 36669:22]
    connect _hitVec_WIRE_2.r, _hitVec_T_7 @[build/NutShell.fir.opt.mlir 36670:7]
    node _hitVec_T_8 = bits(_hitVec_WIRE_3, 2, 2) @[build/NutShell.fir.opt.mlir 36672:22]
    connect _hitVec_WIRE_2.w, _hitVec_T_8 @[build/NutShell.fir.opt.mlir 36673:7]
    node _hitVec_T_9 = bits(_hitVec_WIRE_3, 3, 3) @[build/NutShell.fir.opt.mlir 36675:22]
    connect _hitVec_WIRE_2.x, _hitVec_T_9 @[build/NutShell.fir.opt.mlir 36676:7]
    node _hitVec_T_10 = bits(_hitVec_WIRE_3, 4, 4) @[build/NutShell.fir.opt.mlir 36678:23]
    connect _hitVec_WIRE_2.u, _hitVec_T_10 @[build/NutShell.fir.opt.mlir 36679:7]
    node _hitVec_T_11 = bits(_hitVec_WIRE_3, 5, 5) @[build/NutShell.fir.opt.mlir 36681:23]
    connect _hitVec_WIRE_2.g, _hitVec_T_11 @[build/NutShell.fir.opt.mlir 36682:7]
    node _hitVec_T_12 = bits(_hitVec_WIRE_3, 6, 6) @[build/NutShell.fir.opt.mlir 36684:23]
    connect _hitVec_WIRE_2.a, _hitVec_T_12 @[build/NutShell.fir.opt.mlir 36685:7]
    node _hitVec_T_13 = bits(_hitVec_WIRE_3, 7, 7) @[build/NutShell.fir.opt.mlir 36687:23]
    connect _hitVec_WIRE_2.d, _hitVec_T_13 @[build/NutShell.fir.opt.mlir 36688:7]
    wire _hitVec_WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36689:25]
    wire _hitVec_WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 36696:25]
    connect _hitVec_WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 36697:7]
    node _hitVec_T_14 = bits(_hitVec_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 36699:23]
    connect _hitVec_WIRE_4.pteaddr, _hitVec_T_14 @[build/NutShell.fir.opt.mlir 36700:7]
    node _hitVec_T_15 = bits(_hitVec_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 36702:23]
    connect _hitVec_WIRE_4.ppn, _hitVec_T_15 @[build/NutShell.fir.opt.mlir 36703:7]
    node _hitVec_T_16 = bits(_hitVec_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 36705:23]
    connect _hitVec_WIRE_4.flag, _hitVec_T_16 @[build/NutShell.fir.opt.mlir 36706:7]
    node _hitVec_T_17 = bits(_hitVec_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 36708:23]
    connect _hitVec_WIRE_4.mask, _hitVec_T_17 @[build/NutShell.fir.opt.mlir 36709:7]
    node _hitVec_T_18 = bits(_hitVec_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 36711:23]
    connect _hitVec_WIRE_4.asid, _hitVec_T_18 @[build/NutShell.fir.opt.mlir 36712:7]
    node _hitVec_T_19 = bits(_hitVec_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 36714:23]
    connect _hitVec_WIRE_4.vpn, _hitVec_T_19 @[build/NutShell.fir.opt.mlir 36715:7]
    node _hitVec_T_20 = eq(_hitVec_WIRE_4.asid, satp.asid) @[build/NutShell.fir.opt.mlir 36717:23]
    node _hitVec_T_21 = and(_hitVec_WIRE_2.v, _hitVec_T_20) @[build/NutShell.fir.opt.mlir 36719:23]
    wire _hitVec_WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36720:25]
    wire _hitVec_WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 36727:25]
    connect _hitVec_WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 36728:7]
    node _hitVec_T_22 = bits(_hitVec_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 36730:23]
    connect _hitVec_WIRE_6.pteaddr, _hitVec_T_22 @[build/NutShell.fir.opt.mlir 36731:7]
    node _hitVec_T_23 = bits(_hitVec_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 36733:23]
    connect _hitVec_WIRE_6.ppn, _hitVec_T_23 @[build/NutShell.fir.opt.mlir 36734:7]
    node _hitVec_T_24 = bits(_hitVec_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 36736:23]
    connect _hitVec_WIRE_6.flag, _hitVec_T_24 @[build/NutShell.fir.opt.mlir 36737:7]
    node _hitVec_T_25 = bits(_hitVec_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 36739:23]
    connect _hitVec_WIRE_6.mask, _hitVec_T_25 @[build/NutShell.fir.opt.mlir 36740:7]
    node _hitVec_T_26 = bits(_hitVec_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 36742:23]
    connect _hitVec_WIRE_6.asid, _hitVec_T_26 @[build/NutShell.fir.opt.mlir 36743:7]
    node _hitVec_T_27 = bits(_hitVec_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 36745:23]
    connect _hitVec_WIRE_6.vpn, _hitVec_T_27 @[build/NutShell.fir.opt.mlir 36746:7]
    wire _hitVec_WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36747:25]
    wire _hitVec_WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 36754:25]
    connect _hitVec_WIRE_9, io.md[0] @[build/NutShell.fir.opt.mlir 36755:7]
    node _hitVec_T_28 = bits(_hitVec_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 36757:23]
    connect _hitVec_WIRE_8.pteaddr, _hitVec_T_28 @[build/NutShell.fir.opt.mlir 36758:7]
    node _hitVec_T_29 = bits(_hitVec_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 36760:23]
    connect _hitVec_WIRE_8.ppn, _hitVec_T_29 @[build/NutShell.fir.opt.mlir 36761:7]
    node _hitVec_T_30 = bits(_hitVec_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 36763:23]
    connect _hitVec_WIRE_8.flag, _hitVec_T_30 @[build/NutShell.fir.opt.mlir 36764:7]
    node _hitVec_T_31 = bits(_hitVec_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 36766:23]
    connect _hitVec_WIRE_8.mask, _hitVec_T_31 @[build/NutShell.fir.opt.mlir 36767:7]
    node _hitVec_T_32 = bits(_hitVec_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 36769:23]
    connect _hitVec_WIRE_8.asid, _hitVec_T_32 @[build/NutShell.fir.opt.mlir 36770:7]
    node _hitVec_T_33 = bits(_hitVec_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 36772:23]
    connect _hitVec_WIRE_8.vpn, _hitVec_T_33 @[build/NutShell.fir.opt.mlir 36773:7]
    node hitVec_hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 36775:20]
    node _hitVec_T_34 = cat(hitVec_hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 36777:23]
    node _hitVec_T_35 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 36780:23]
    node _hitVec_T_36 = and(_hitVec_T_35, _hitVec_WIRE_8.vpn) @[build/NutShell.fir.opt.mlir 36782:23]
    node _hitVec_T_37 = cat(UInt<9>(511), _hitVec_WIRE_6.mask) @[build/NutShell.fir.opt.mlir 36784:23]
    node _hitVec_T_38 = and(_hitVec_T_37, _hitVec_T_34) @[build/NutShell.fir.opt.mlir 36786:23]
    node _hitVec_T_39 = eq(_hitVec_T_36, _hitVec_T_38) @[build/NutShell.fir.opt.mlir 36788:23]
    node _hitVec_T_40 = and(_hitVec_T_21, _hitVec_T_39) @[build/NutShell.fir.opt.mlir 36790:23]
    wire _hitVec_WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36791:26]
    wire _hitVec_WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 36798:26]
    connect _hitVec_WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 36799:7]
    node _hitVec_T_41 = bits(_hitVec_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 36801:23]
    connect _hitVec_WIRE_10.pteaddr, _hitVec_T_41 @[build/NutShell.fir.opt.mlir 36802:7]
    node _hitVec_T_42 = bits(_hitVec_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 36804:23]
    connect _hitVec_WIRE_10.ppn, _hitVec_T_42 @[build/NutShell.fir.opt.mlir 36805:7]
    node _hitVec_T_43 = bits(_hitVec_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 36807:23]
    connect _hitVec_WIRE_10.flag, _hitVec_T_43 @[build/NutShell.fir.opt.mlir 36808:7]
    node _hitVec_T_44 = bits(_hitVec_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 36810:23]
    connect _hitVec_WIRE_10.mask, _hitVec_T_44 @[build/NutShell.fir.opt.mlir 36811:7]
    node _hitVec_T_45 = bits(_hitVec_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 36813:23]
    connect _hitVec_WIRE_10.asid, _hitVec_T_45 @[build/NutShell.fir.opt.mlir 36814:7]
    node _hitVec_T_46 = bits(_hitVec_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 36816:23]
    connect _hitVec_WIRE_10.vpn, _hitVec_T_46 @[build/NutShell.fir.opt.mlir 36817:7]
    wire _hitVec_WIRE_12 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36818:26]
    wire _hitVec_WIRE_13 : UInt<8> @[build/NutShell.fir.opt.mlir 36827:26]
    connect _hitVec_WIRE_13, _hitVec_WIRE_10.flag @[build/NutShell.fir.opt.mlir 36828:7]
    node _hitVec_T_47 = bits(_hitVec_WIRE_13, 0, 0) @[build/NutShell.fir.opt.mlir 36830:23]
    connect _hitVec_WIRE_12.v, _hitVec_T_47 @[build/NutShell.fir.opt.mlir 36831:7]
    node _hitVec_T_48 = bits(_hitVec_WIRE_13, 1, 1) @[build/NutShell.fir.opt.mlir 36833:23]
    connect _hitVec_WIRE_12.r, _hitVec_T_48 @[build/NutShell.fir.opt.mlir 36834:7]
    node _hitVec_T_49 = bits(_hitVec_WIRE_13, 2, 2) @[build/NutShell.fir.opt.mlir 36836:23]
    connect _hitVec_WIRE_12.w, _hitVec_T_49 @[build/NutShell.fir.opt.mlir 36837:7]
    node _hitVec_T_50 = bits(_hitVec_WIRE_13, 3, 3) @[build/NutShell.fir.opt.mlir 36839:23]
    connect _hitVec_WIRE_12.x, _hitVec_T_50 @[build/NutShell.fir.opt.mlir 36840:7]
    node _hitVec_T_51 = bits(_hitVec_WIRE_13, 4, 4) @[build/NutShell.fir.opt.mlir 36842:23]
    connect _hitVec_WIRE_12.u, _hitVec_T_51 @[build/NutShell.fir.opt.mlir 36843:7]
    node _hitVec_T_52 = bits(_hitVec_WIRE_13, 5, 5) @[build/NutShell.fir.opt.mlir 36845:23]
    connect _hitVec_WIRE_12.g, _hitVec_T_52 @[build/NutShell.fir.opt.mlir 36846:7]
    node _hitVec_T_53 = bits(_hitVec_WIRE_13, 6, 6) @[build/NutShell.fir.opt.mlir 36848:23]
    connect _hitVec_WIRE_12.a, _hitVec_T_53 @[build/NutShell.fir.opt.mlir 36849:7]
    node _hitVec_T_54 = bits(_hitVec_WIRE_13, 7, 7) @[build/NutShell.fir.opt.mlir 36851:23]
    connect _hitVec_WIRE_12.d, _hitVec_T_54 @[build/NutShell.fir.opt.mlir 36852:7]
    wire _hitVec_WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36853:26]
    wire _hitVec_WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 36860:26]
    connect _hitVec_WIRE_15, io.md[1] @[build/NutShell.fir.opt.mlir 36861:7]
    node _hitVec_T_55 = bits(_hitVec_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 36863:23]
    connect _hitVec_WIRE_14.pteaddr, _hitVec_T_55 @[build/NutShell.fir.opt.mlir 36864:7]
    node _hitVec_T_56 = bits(_hitVec_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 36866:23]
    connect _hitVec_WIRE_14.ppn, _hitVec_T_56 @[build/NutShell.fir.opt.mlir 36867:7]
    node _hitVec_T_57 = bits(_hitVec_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 36869:23]
    connect _hitVec_WIRE_14.flag, _hitVec_T_57 @[build/NutShell.fir.opt.mlir 36870:7]
    node _hitVec_T_58 = bits(_hitVec_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 36872:23]
    connect _hitVec_WIRE_14.mask, _hitVec_T_58 @[build/NutShell.fir.opt.mlir 36873:7]
    node _hitVec_T_59 = bits(_hitVec_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 36875:23]
    connect _hitVec_WIRE_14.asid, _hitVec_T_59 @[build/NutShell.fir.opt.mlir 36876:7]
    node _hitVec_T_60 = bits(_hitVec_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 36878:23]
    connect _hitVec_WIRE_14.vpn, _hitVec_T_60 @[build/NutShell.fir.opt.mlir 36879:7]
    node _hitVec_T_61 = eq(_hitVec_WIRE_14.asid, satp.asid) @[build/NutShell.fir.opt.mlir 36881:23]
    node _hitVec_T_62 = and(_hitVec_WIRE_12.v, _hitVec_T_61) @[build/NutShell.fir.opt.mlir 36883:23]
    wire _hitVec_WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36884:26]
    wire _hitVec_WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 36891:26]
    connect _hitVec_WIRE_17, io.md[1] @[build/NutShell.fir.opt.mlir 36892:7]
    node _hitVec_T_63 = bits(_hitVec_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 36894:23]
    connect _hitVec_WIRE_16.pteaddr, _hitVec_T_63 @[build/NutShell.fir.opt.mlir 36895:7]
    node _hitVec_T_64 = bits(_hitVec_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 36897:23]
    connect _hitVec_WIRE_16.ppn, _hitVec_T_64 @[build/NutShell.fir.opt.mlir 36898:7]
    node _hitVec_T_65 = bits(_hitVec_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 36900:23]
    connect _hitVec_WIRE_16.flag, _hitVec_T_65 @[build/NutShell.fir.opt.mlir 36901:7]
    node _hitVec_T_66 = bits(_hitVec_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 36903:23]
    connect _hitVec_WIRE_16.mask, _hitVec_T_66 @[build/NutShell.fir.opt.mlir 36904:7]
    node _hitVec_T_67 = bits(_hitVec_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 36906:23]
    connect _hitVec_WIRE_16.asid, _hitVec_T_67 @[build/NutShell.fir.opt.mlir 36907:7]
    node _hitVec_T_68 = bits(_hitVec_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 36909:23]
    connect _hitVec_WIRE_16.vpn, _hitVec_T_68 @[build/NutShell.fir.opt.mlir 36910:7]
    wire _hitVec_WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36911:26]
    wire _hitVec_WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 36918:26]
    connect _hitVec_WIRE_19, io.md[1] @[build/NutShell.fir.opt.mlir 36919:7]
    node _hitVec_T_69 = bits(_hitVec_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 36921:23]
    connect _hitVec_WIRE_18.pteaddr, _hitVec_T_69 @[build/NutShell.fir.opt.mlir 36922:7]
    node _hitVec_T_70 = bits(_hitVec_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 36924:23]
    connect _hitVec_WIRE_18.ppn, _hitVec_T_70 @[build/NutShell.fir.opt.mlir 36925:7]
    node _hitVec_T_71 = bits(_hitVec_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 36927:23]
    connect _hitVec_WIRE_18.flag, _hitVec_T_71 @[build/NutShell.fir.opt.mlir 36928:7]
    node _hitVec_T_72 = bits(_hitVec_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 36930:23]
    connect _hitVec_WIRE_18.mask, _hitVec_T_72 @[build/NutShell.fir.opt.mlir 36931:7]
    node _hitVec_T_73 = bits(_hitVec_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 36933:23]
    connect _hitVec_WIRE_18.asid, _hitVec_T_73 @[build/NutShell.fir.opt.mlir 36934:7]
    node _hitVec_T_74 = bits(_hitVec_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 36936:23]
    connect _hitVec_WIRE_18.vpn, _hitVec_T_74 @[build/NutShell.fir.opt.mlir 36937:7]
    node hitVec_hi_1 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 36939:22]
    node _hitVec_T_75 = cat(hitVec_hi_1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 36941:23]
    node _hitVec_T_76 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 36943:23]
    node _hitVec_T_77 = and(_hitVec_T_76, _hitVec_WIRE_18.vpn) @[build/NutShell.fir.opt.mlir 36945:23]
    node _hitVec_T_78 = cat(UInt<9>(511), _hitVec_WIRE_16.mask) @[build/NutShell.fir.opt.mlir 36947:23]
    node _hitVec_T_79 = and(_hitVec_T_78, _hitVec_T_75) @[build/NutShell.fir.opt.mlir 36949:23]
    node _hitVec_T_80 = eq(_hitVec_T_77, _hitVec_T_79) @[build/NutShell.fir.opt.mlir 36951:23]
    node _hitVec_T_81 = and(_hitVec_T_62, _hitVec_T_80) @[build/NutShell.fir.opt.mlir 36953:23]
    wire _hitVec_WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 36954:26]
    wire _hitVec_WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 36961:26]
    connect _hitVec_WIRE_21, io.md[2] @[build/NutShell.fir.opt.mlir 36962:7]
    node _hitVec_T_82 = bits(_hitVec_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 36964:23]
    connect _hitVec_WIRE_20.pteaddr, _hitVec_T_82 @[build/NutShell.fir.opt.mlir 36965:7]
    node _hitVec_T_83 = bits(_hitVec_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 36967:23]
    connect _hitVec_WIRE_20.ppn, _hitVec_T_83 @[build/NutShell.fir.opt.mlir 36968:7]
    node _hitVec_T_84 = bits(_hitVec_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 36970:23]
    connect _hitVec_WIRE_20.flag, _hitVec_T_84 @[build/NutShell.fir.opt.mlir 36971:7]
    node _hitVec_T_85 = bits(_hitVec_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 36973:23]
    connect _hitVec_WIRE_20.mask, _hitVec_T_85 @[build/NutShell.fir.opt.mlir 36974:7]
    node _hitVec_T_86 = bits(_hitVec_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 36976:23]
    connect _hitVec_WIRE_20.asid, _hitVec_T_86 @[build/NutShell.fir.opt.mlir 36977:7]
    node _hitVec_T_87 = bits(_hitVec_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 36979:23]
    connect _hitVec_WIRE_20.vpn, _hitVec_T_87 @[build/NutShell.fir.opt.mlir 36980:7]
    wire _hitVec_WIRE_22 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 36981:26]
    wire _hitVec_WIRE_23 : UInt<8> @[build/NutShell.fir.opt.mlir 36990:26]
    connect _hitVec_WIRE_23, _hitVec_WIRE_20.flag @[build/NutShell.fir.opt.mlir 36991:7]
    node _hitVec_T_88 = bits(_hitVec_WIRE_23, 0, 0) @[build/NutShell.fir.opt.mlir 36993:23]
    connect _hitVec_WIRE_22.v, _hitVec_T_88 @[build/NutShell.fir.opt.mlir 36994:7]
    node _hitVec_T_89 = bits(_hitVec_WIRE_23, 1, 1) @[build/NutShell.fir.opt.mlir 36996:23]
    connect _hitVec_WIRE_22.r, _hitVec_T_89 @[build/NutShell.fir.opt.mlir 36997:7]
    node _hitVec_T_90 = bits(_hitVec_WIRE_23, 2, 2) @[build/NutShell.fir.opt.mlir 36999:23]
    connect _hitVec_WIRE_22.w, _hitVec_T_90 @[build/NutShell.fir.opt.mlir 37000:7]
    node _hitVec_T_91 = bits(_hitVec_WIRE_23, 3, 3) @[build/NutShell.fir.opt.mlir 37002:23]
    connect _hitVec_WIRE_22.x, _hitVec_T_91 @[build/NutShell.fir.opt.mlir 37003:7]
    node _hitVec_T_92 = bits(_hitVec_WIRE_23, 4, 4) @[build/NutShell.fir.opt.mlir 37005:23]
    connect _hitVec_WIRE_22.u, _hitVec_T_92 @[build/NutShell.fir.opt.mlir 37006:7]
    node _hitVec_T_93 = bits(_hitVec_WIRE_23, 5, 5) @[build/NutShell.fir.opt.mlir 37008:23]
    connect _hitVec_WIRE_22.g, _hitVec_T_93 @[build/NutShell.fir.opt.mlir 37009:7]
    node _hitVec_T_94 = bits(_hitVec_WIRE_23, 6, 6) @[build/NutShell.fir.opt.mlir 37011:23]
    connect _hitVec_WIRE_22.a, _hitVec_T_94 @[build/NutShell.fir.opt.mlir 37012:7]
    node _hitVec_T_95 = bits(_hitVec_WIRE_23, 7, 7) @[build/NutShell.fir.opt.mlir 37014:23]
    connect _hitVec_WIRE_22.d, _hitVec_T_95 @[build/NutShell.fir.opt.mlir 37015:7]
    wire _hitVec_WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37016:26]
    wire _hitVec_WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 37023:26]
    connect _hitVec_WIRE_25, io.md[2] @[build/NutShell.fir.opt.mlir 37024:7]
    node _hitVec_T_96 = bits(_hitVec_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 37026:23]
    connect _hitVec_WIRE_24.pteaddr, _hitVec_T_96 @[build/NutShell.fir.opt.mlir 37027:7]
    node _hitVec_T_97 = bits(_hitVec_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 37029:23]
    connect _hitVec_WIRE_24.ppn, _hitVec_T_97 @[build/NutShell.fir.opt.mlir 37030:7]
    node _hitVec_T_98 = bits(_hitVec_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 37032:23]
    connect _hitVec_WIRE_24.flag, _hitVec_T_98 @[build/NutShell.fir.opt.mlir 37033:7]
    node _hitVec_T_99 = bits(_hitVec_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 37035:23]
    connect _hitVec_WIRE_24.mask, _hitVec_T_99 @[build/NutShell.fir.opt.mlir 37036:7]
    node _hitVec_T_100 = bits(_hitVec_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 37038:24]
    connect _hitVec_WIRE_24.asid, _hitVec_T_100 @[build/NutShell.fir.opt.mlir 37039:7]
    node _hitVec_T_101 = bits(_hitVec_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 37041:24]
    connect _hitVec_WIRE_24.vpn, _hitVec_T_101 @[build/NutShell.fir.opt.mlir 37042:7]
    node _hitVec_T_102 = eq(_hitVec_WIRE_24.asid, satp.asid) @[build/NutShell.fir.opt.mlir 37044:24]
    node _hitVec_T_103 = and(_hitVec_WIRE_22.v, _hitVec_T_102) @[build/NutShell.fir.opt.mlir 37046:24]
    wire _hitVec_WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37047:26]
    wire _hitVec_WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 37054:26]
    connect _hitVec_WIRE_27, io.md[2] @[build/NutShell.fir.opt.mlir 37055:7]
    node _hitVec_T_104 = bits(_hitVec_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 37057:24]
    connect _hitVec_WIRE_26.pteaddr, _hitVec_T_104 @[build/NutShell.fir.opt.mlir 37058:7]
    node _hitVec_T_105 = bits(_hitVec_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 37060:24]
    connect _hitVec_WIRE_26.ppn, _hitVec_T_105 @[build/NutShell.fir.opt.mlir 37061:7]
    node _hitVec_T_106 = bits(_hitVec_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 37063:24]
    connect _hitVec_WIRE_26.flag, _hitVec_T_106 @[build/NutShell.fir.opt.mlir 37064:7]
    node _hitVec_T_107 = bits(_hitVec_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 37066:24]
    connect _hitVec_WIRE_26.mask, _hitVec_T_107 @[build/NutShell.fir.opt.mlir 37067:7]
    node _hitVec_T_108 = bits(_hitVec_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 37069:24]
    connect _hitVec_WIRE_26.asid, _hitVec_T_108 @[build/NutShell.fir.opt.mlir 37070:7]
    node _hitVec_T_109 = bits(_hitVec_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 37072:24]
    connect _hitVec_WIRE_26.vpn, _hitVec_T_109 @[build/NutShell.fir.opt.mlir 37073:7]
    wire _hitVec_WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37074:26]
    wire _hitVec_WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 37081:26]
    connect _hitVec_WIRE_29, io.md[2] @[build/NutShell.fir.opt.mlir 37082:7]
    node _hitVec_T_110 = bits(_hitVec_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 37084:24]
    connect _hitVec_WIRE_28.pteaddr, _hitVec_T_110 @[build/NutShell.fir.opt.mlir 37085:7]
    node _hitVec_T_111 = bits(_hitVec_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 37087:24]
    connect _hitVec_WIRE_28.ppn, _hitVec_T_111 @[build/NutShell.fir.opt.mlir 37088:7]
    node _hitVec_T_112 = bits(_hitVec_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 37090:24]
    connect _hitVec_WIRE_28.flag, _hitVec_T_112 @[build/NutShell.fir.opt.mlir 37091:7]
    node _hitVec_T_113 = bits(_hitVec_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 37093:24]
    connect _hitVec_WIRE_28.mask, _hitVec_T_113 @[build/NutShell.fir.opt.mlir 37094:7]
    node _hitVec_T_114 = bits(_hitVec_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 37096:24]
    connect _hitVec_WIRE_28.asid, _hitVec_T_114 @[build/NutShell.fir.opt.mlir 37097:7]
    node _hitVec_T_115 = bits(_hitVec_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 37099:24]
    connect _hitVec_WIRE_28.vpn, _hitVec_T_115 @[build/NutShell.fir.opt.mlir 37100:7]
    node hitVec_hi_2 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 37102:22]
    node _hitVec_T_116 = cat(hitVec_hi_2, vpn.vpn0) @[build/NutShell.fir.opt.mlir 37104:24]
    node _hitVec_T_117 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 37106:24]
    node _hitVec_T_118 = and(_hitVec_T_117, _hitVec_WIRE_28.vpn) @[build/NutShell.fir.opt.mlir 37108:24]
    node _hitVec_T_119 = cat(UInt<9>(511), _hitVec_WIRE_26.mask) @[build/NutShell.fir.opt.mlir 37110:24]
    node _hitVec_T_120 = and(_hitVec_T_119, _hitVec_T_116) @[build/NutShell.fir.opt.mlir 37112:24]
    node _hitVec_T_121 = eq(_hitVec_T_118, _hitVec_T_120) @[build/NutShell.fir.opt.mlir 37114:24]
    node _hitVec_T_122 = and(_hitVec_T_103, _hitVec_T_121) @[build/NutShell.fir.opt.mlir 37116:24]
    wire _hitVec_WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37117:26]
    wire _hitVec_WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 37124:26]
    connect _hitVec_WIRE_31, io.md[3] @[build/NutShell.fir.opt.mlir 37125:7]
    node _hitVec_T_123 = bits(_hitVec_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 37127:24]
    connect _hitVec_WIRE_30.pteaddr, _hitVec_T_123 @[build/NutShell.fir.opt.mlir 37128:7]
    node _hitVec_T_124 = bits(_hitVec_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 37130:24]
    connect _hitVec_WIRE_30.ppn, _hitVec_T_124 @[build/NutShell.fir.opt.mlir 37131:7]
    node _hitVec_T_125 = bits(_hitVec_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 37133:24]
    connect _hitVec_WIRE_30.flag, _hitVec_T_125 @[build/NutShell.fir.opt.mlir 37134:7]
    node _hitVec_T_126 = bits(_hitVec_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 37136:24]
    connect _hitVec_WIRE_30.mask, _hitVec_T_126 @[build/NutShell.fir.opt.mlir 37137:7]
    node _hitVec_T_127 = bits(_hitVec_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 37139:24]
    connect _hitVec_WIRE_30.asid, _hitVec_T_127 @[build/NutShell.fir.opt.mlir 37140:7]
    node _hitVec_T_128 = bits(_hitVec_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 37142:24]
    connect _hitVec_WIRE_30.vpn, _hitVec_T_128 @[build/NutShell.fir.opt.mlir 37143:7]
    wire _hitVec_WIRE_32 : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 37144:26]
    wire _hitVec_WIRE_33 : UInt<8> @[build/NutShell.fir.opt.mlir 37153:26]
    connect _hitVec_WIRE_33, _hitVec_WIRE_30.flag @[build/NutShell.fir.opt.mlir 37154:7]
    node _hitVec_T_129 = bits(_hitVec_WIRE_33, 0, 0) @[build/NutShell.fir.opt.mlir 37156:24]
    connect _hitVec_WIRE_32.v, _hitVec_T_129 @[build/NutShell.fir.opt.mlir 37157:7]
    node _hitVec_T_130 = bits(_hitVec_WIRE_33, 1, 1) @[build/NutShell.fir.opt.mlir 37159:24]
    connect _hitVec_WIRE_32.r, _hitVec_T_130 @[build/NutShell.fir.opt.mlir 37160:7]
    node _hitVec_T_131 = bits(_hitVec_WIRE_33, 2, 2) @[build/NutShell.fir.opt.mlir 37162:24]
    connect _hitVec_WIRE_32.w, _hitVec_T_131 @[build/NutShell.fir.opt.mlir 37163:7]
    node _hitVec_T_132 = bits(_hitVec_WIRE_33, 3, 3) @[build/NutShell.fir.opt.mlir 37165:24]
    connect _hitVec_WIRE_32.x, _hitVec_T_132 @[build/NutShell.fir.opt.mlir 37166:7]
    node _hitVec_T_133 = bits(_hitVec_WIRE_33, 4, 4) @[build/NutShell.fir.opt.mlir 37168:24]
    connect _hitVec_WIRE_32.u, _hitVec_T_133 @[build/NutShell.fir.opt.mlir 37169:7]
    node _hitVec_T_134 = bits(_hitVec_WIRE_33, 5, 5) @[build/NutShell.fir.opt.mlir 37171:24]
    connect _hitVec_WIRE_32.g, _hitVec_T_134 @[build/NutShell.fir.opt.mlir 37172:7]
    node _hitVec_T_135 = bits(_hitVec_WIRE_33, 6, 6) @[build/NutShell.fir.opt.mlir 37174:24]
    connect _hitVec_WIRE_32.a, _hitVec_T_135 @[build/NutShell.fir.opt.mlir 37175:7]
    node _hitVec_T_136 = bits(_hitVec_WIRE_33, 7, 7) @[build/NutShell.fir.opt.mlir 37177:24]
    connect _hitVec_WIRE_32.d, _hitVec_T_136 @[build/NutShell.fir.opt.mlir 37178:7]
    wire _hitVec_WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37179:26]
    wire _hitVec_WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 37186:26]
    connect _hitVec_WIRE_35, io.md[3] @[build/NutShell.fir.opt.mlir 37187:7]
    node _hitVec_T_137 = bits(_hitVec_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 37189:24]
    connect _hitVec_WIRE_34.pteaddr, _hitVec_T_137 @[build/NutShell.fir.opt.mlir 37190:7]
    node _hitVec_T_138 = bits(_hitVec_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 37192:24]
    connect _hitVec_WIRE_34.ppn, _hitVec_T_138 @[build/NutShell.fir.opt.mlir 37193:7]
    node _hitVec_T_139 = bits(_hitVec_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 37195:24]
    connect _hitVec_WIRE_34.flag, _hitVec_T_139 @[build/NutShell.fir.opt.mlir 37196:7]
    node _hitVec_T_140 = bits(_hitVec_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 37198:24]
    connect _hitVec_WIRE_34.mask, _hitVec_T_140 @[build/NutShell.fir.opt.mlir 37199:7]
    node _hitVec_T_141 = bits(_hitVec_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 37201:24]
    connect _hitVec_WIRE_34.asid, _hitVec_T_141 @[build/NutShell.fir.opt.mlir 37202:7]
    node _hitVec_T_142 = bits(_hitVec_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 37204:24]
    connect _hitVec_WIRE_34.vpn, _hitVec_T_142 @[build/NutShell.fir.opt.mlir 37205:7]
    node _hitVec_T_143 = eq(_hitVec_WIRE_34.asid, satp.asid) @[build/NutShell.fir.opt.mlir 37207:24]
    node _hitVec_T_144 = and(_hitVec_WIRE_32.v, _hitVec_T_143) @[build/NutShell.fir.opt.mlir 37209:24]
    wire _hitVec_WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37210:26]
    wire _hitVec_WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 37217:26]
    connect _hitVec_WIRE_37, io.md[3] @[build/NutShell.fir.opt.mlir 37218:7]
    node _hitVec_T_145 = bits(_hitVec_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 37220:24]
    connect _hitVec_WIRE_36.pteaddr, _hitVec_T_145 @[build/NutShell.fir.opt.mlir 37221:7]
    node _hitVec_T_146 = bits(_hitVec_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 37223:24]
    connect _hitVec_WIRE_36.ppn, _hitVec_T_146 @[build/NutShell.fir.opt.mlir 37224:7]
    node _hitVec_T_147 = bits(_hitVec_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 37226:24]
    connect _hitVec_WIRE_36.flag, _hitVec_T_147 @[build/NutShell.fir.opt.mlir 37227:7]
    node _hitVec_T_148 = bits(_hitVec_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 37229:24]
    connect _hitVec_WIRE_36.mask, _hitVec_T_148 @[build/NutShell.fir.opt.mlir 37230:7]
    node _hitVec_T_149 = bits(_hitVec_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 37232:24]
    connect _hitVec_WIRE_36.asid, _hitVec_T_149 @[build/NutShell.fir.opt.mlir 37233:7]
    node _hitVec_T_150 = bits(_hitVec_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 37235:24]
    connect _hitVec_WIRE_36.vpn, _hitVec_T_150 @[build/NutShell.fir.opt.mlir 37236:7]
    wire _hitVec_WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37237:26]
    wire _hitVec_WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 37244:26]
    connect _hitVec_WIRE_39, io.md[3] @[build/NutShell.fir.opt.mlir 37245:7]
    node _hitVec_T_151 = bits(_hitVec_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 37247:24]
    connect _hitVec_WIRE_38.pteaddr, _hitVec_T_151 @[build/NutShell.fir.opt.mlir 37248:7]
    node _hitVec_T_152 = bits(_hitVec_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 37250:24]
    connect _hitVec_WIRE_38.ppn, _hitVec_T_152 @[build/NutShell.fir.opt.mlir 37251:7]
    node _hitVec_T_153 = bits(_hitVec_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 37253:24]
    connect _hitVec_WIRE_38.flag, _hitVec_T_153 @[build/NutShell.fir.opt.mlir 37254:7]
    node _hitVec_T_154 = bits(_hitVec_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 37256:24]
    connect _hitVec_WIRE_38.mask, _hitVec_T_154 @[build/NutShell.fir.opt.mlir 37257:7]
    node _hitVec_T_155 = bits(_hitVec_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 37259:24]
    connect _hitVec_WIRE_38.asid, _hitVec_T_155 @[build/NutShell.fir.opt.mlir 37260:7]
    node _hitVec_T_156 = bits(_hitVec_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 37262:24]
    connect _hitVec_WIRE_38.vpn, _hitVec_T_156 @[build/NutShell.fir.opt.mlir 37263:7]
    node hitVec_hi_3 = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 37265:22]
    node _hitVec_T_157 = cat(hitVec_hi_3, vpn.vpn0) @[build/NutShell.fir.opt.mlir 37267:24]
    node _hitVec_T_158 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 37269:24]
    node _hitVec_T_159 = and(_hitVec_T_158, _hitVec_WIRE_38.vpn) @[build/NutShell.fir.opt.mlir 37271:24]
    node _hitVec_T_160 = cat(UInt<9>(511), _hitVec_WIRE_36.mask) @[build/NutShell.fir.opt.mlir 37273:24]
    node _hitVec_T_161 = and(_hitVec_T_160, _hitVec_T_157) @[build/NutShell.fir.opt.mlir 37275:24]
    node _hitVec_T_162 = eq(_hitVec_T_159, _hitVec_T_161) @[build/NutShell.fir.opt.mlir 37277:24]
    node _hitVec_T_163 = and(_hitVec_T_144, _hitVec_T_162) @[build/NutShell.fir.opt.mlir 37279:24]
    wire _hitVec_WIRE_40 : UInt<1>[4] @[build/NutShell.fir.opt.mlir 37280:26]
    connect _hitVec_WIRE_40[0], _hitVec_T_40 @[build/NutShell.fir.opt.mlir 37285:7]
    connect _hitVec_WIRE_40[1], _hitVec_T_81 @[build/NutShell.fir.opt.mlir 37286:7]
    connect _hitVec_WIRE_40[2], _hitVec_T_122 @[build/NutShell.fir.opt.mlir 37287:7]
    connect _hitVec_WIRE_40[3], _hitVec_T_163 @[build/NutShell.fir.opt.mlir 37288:7]
    node hitVec_lo = cat(_hitVec_WIRE_40[1], _hitVec_WIRE_40[0]) @[build/NutShell.fir.opt.mlir 37290:20]
    node hitVec_hi_4 = cat(_hitVec_WIRE_40[3], _hitVec_WIRE_40[2]) @[build/NutShell.fir.opt.mlir 37292:22]
    node hitVec = cat(hitVec_hi_4, hitVec_lo) @[build/NutShell.fir.opt.mlir 37294:17]
    node _hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 37296:17]
    node hit = and(io.in.valid, _hit_T) @[build/NutShell.fir.opt.mlir 37298:14]
    node _miss_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 37300:18]
    node _miss_T_1 = eq(_miss_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37302:20]
    node miss = and(io.in.valid, _miss_T_1) @[build/NutShell.fir.opt.mlir 37304:15]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 37306:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 37308:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 37310:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 37312:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 37314:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 37316:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 37318:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 37320:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 37322:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37324:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 37326:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 37328:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 37330:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 37331:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 37334:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 37336:24]
    node waymask = mux(hit, hitVec, victimWaymask) @[build/NutShell.fir.opt.mlir 37338:18]
    wire loadPF : UInt<1> @[build/NutShell.fir.opt.mlir 37339:17]
    connect loadPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37341:7]
    wire storePF : UInt<1> @[build/NutShell.fir.opt.mlir 37342:18]
    connect storePF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37344:7]
    node _hitMeta_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 37346:21]
    node _hitMeta_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 37348:23]
    node _hitMeta_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 37350:23]
    node _hitMeta_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 37352:23]
    node _hitMeta_T_4 = mux(_hitMeta_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37354:23]
    node _hitMeta_T_5 = mux(_hitMeta_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37356:23]
    node _hitMeta_T_6 = mux(_hitMeta_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37358:23]
    node _hitMeta_T_7 = mux(_hitMeta_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37360:23]
    node _hitMeta_T_8 = or(_hitMeta_T_4, _hitMeta_T_5) @[build/NutShell.fir.opt.mlir 37362:23]
    node _hitMeta_T_9 = or(_hitMeta_T_8, _hitMeta_T_6) @[build/NutShell.fir.opt.mlir 37364:23]
    node _hitMeta_T_10 = or(_hitMeta_T_9, _hitMeta_T_7) @[build/NutShell.fir.opt.mlir 37366:24]
    wire _hitMeta_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 37367:24]
    connect _hitMeta_WIRE, _hitMeta_T_10 @[build/NutShell.fir.opt.mlir 37368:7]
    wire _hitMeta_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 37369:26]
    wire _hitMeta_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 37372:26]
    connect _hitMeta_WIRE_2, _hitMeta_WIRE @[build/NutShell.fir.opt.mlir 37373:7]
    node _hitMeta_T_11 = bits(_hitMeta_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 37375:24]
    connect _hitMeta_WIRE_1.data, _hitMeta_T_11 @[build/NutShell.fir.opt.mlir 37376:7]
    node _hitMeta_T_12 = bits(_hitMeta_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 37378:24]
    connect _hitMeta_WIRE_1.meta, _hitMeta_T_12 @[build/NutShell.fir.opt.mlir 37379:7]
    wire hitMeta : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8> } @[build/NutShell.fir.opt.mlir 37380:18]
    wire _hitMeta_WIRE_3 : UInt<69> @[build/NutShell.fir.opt.mlir 37385:26]
    connect _hitMeta_WIRE_3, _hitMeta_WIRE_1.meta @[build/NutShell.fir.opt.mlir 37386:7]
    node _hitMeta_T_13 = bits(_hitMeta_WIRE_3, 7, 0) @[build/NutShell.fir.opt.mlir 37388:24]
    connect hitMeta.flag, _hitMeta_T_13 @[build/NutShell.fir.opt.mlir 37389:7]
    node _hitMeta_T_14 = bits(_hitMeta_WIRE_3, 25, 8) @[build/NutShell.fir.opt.mlir 37391:24]
    connect hitMeta.mask, _hitMeta_T_14 @[build/NutShell.fir.opt.mlir 37392:7]
    node _hitMeta_T_15 = bits(_hitMeta_WIRE_3, 41, 26) @[build/NutShell.fir.opt.mlir 37394:24]
    connect hitMeta.asid, _hitMeta_T_15 @[build/NutShell.fir.opt.mlir 37395:7]
    node _hitMeta_T_16 = bits(_hitMeta_WIRE_3, 68, 42) @[build/NutShell.fir.opt.mlir 37397:24]
    connect hitMeta.vpn, _hitMeta_T_16 @[build/NutShell.fir.opt.mlir 37398:7]
    node _hitData_T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 37400:21]
    node _hitData_T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 37402:23]
    node _hitData_T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 37404:23]
    node _hitData_T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 37406:23]
    node _hitData_T_4 = mux(_hitData_T, io.md[0], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37408:23]
    node _hitData_T_5 = mux(_hitData_T_1, io.md[1], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37410:23]
    node _hitData_T_6 = mux(_hitData_T_2, io.md[2], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37412:23]
    node _hitData_T_7 = mux(_hitData_T_3, io.md[3], UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37414:23]
    node _hitData_T_8 = or(_hitData_T_4, _hitData_T_5) @[build/NutShell.fir.opt.mlir 37416:23]
    node _hitData_T_9 = or(_hitData_T_8, _hitData_T_6) @[build/NutShell.fir.opt.mlir 37418:23]
    node _hitData_T_10 = or(_hitData_T_9, _hitData_T_7) @[build/NutShell.fir.opt.mlir 37420:24]
    wire _hitData_WIRE : UInt<121> @[build/NutShell.fir.opt.mlir 37421:24]
    connect _hitData_WIRE, _hitData_T_10 @[build/NutShell.fir.opt.mlir 37422:7]
    wire _hitData_WIRE_1 : { meta : UInt<69>, data : UInt<52> } @[build/NutShell.fir.opt.mlir 37423:26]
    wire _hitData_WIRE_2 : UInt<121> @[build/NutShell.fir.opt.mlir 37426:26]
    connect _hitData_WIRE_2, _hitData_WIRE @[build/NutShell.fir.opt.mlir 37427:7]
    node _hitData_T_11 = bits(_hitData_WIRE_2, 51, 0) @[build/NutShell.fir.opt.mlir 37429:24]
    connect _hitData_WIRE_1.data, _hitData_T_11 @[build/NutShell.fir.opt.mlir 37430:7]
    node _hitData_T_12 = bits(_hitData_WIRE_2, 120, 52) @[build/NutShell.fir.opt.mlir 37432:24]
    connect _hitData_WIRE_1.meta, _hitData_T_12 @[build/NutShell.fir.opt.mlir 37433:7]
    wire hitData : { ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 37434:18]
    wire _hitData_WIRE_3 : UInt<52> @[build/NutShell.fir.opt.mlir 37437:26]
    connect _hitData_WIRE_3, _hitData_WIRE_1.data @[build/NutShell.fir.opt.mlir 37438:7]
    node _hitData_T_13 = bits(_hitData_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 37440:24]
    connect hitData.pteaddr, _hitData_T_13 @[build/NutShell.fir.opt.mlir 37441:7]
    node _hitData_T_14 = bits(_hitData_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 37443:24]
    connect hitData.ppn, _hitData_T_14 @[build/NutShell.fir.opt.mlir 37444:7]
    wire hitFlag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 37445:18]
    wire _hitFlag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 37454:24]
    connect _hitFlag_WIRE, hitMeta.flag @[build/NutShell.fir.opt.mlir 37455:7]
    node _hitFlag_T = bits(_hitFlag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37457:21]
    connect hitFlag.v, _hitFlag_T @[build/NutShell.fir.opt.mlir 37458:7]
    node _hitFlag_T_1 = bits(_hitFlag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37460:23]
    connect hitFlag.r, _hitFlag_T_1 @[build/NutShell.fir.opt.mlir 37461:7]
    node _hitFlag_T_2 = bits(_hitFlag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37463:23]
    connect hitFlag.w, _hitFlag_T_2 @[build/NutShell.fir.opt.mlir 37464:7]
    node _hitFlag_T_3 = bits(_hitFlag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37466:23]
    connect hitFlag.x, _hitFlag_T_3 @[build/NutShell.fir.opt.mlir 37467:7]
    node _hitFlag_T_4 = bits(_hitFlag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37469:23]
    connect hitFlag.u, _hitFlag_T_4 @[build/NutShell.fir.opt.mlir 37470:7]
    node _hitFlag_T_5 = bits(_hitFlag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37472:23]
    connect hitFlag.g, _hitFlag_T_5 @[build/NutShell.fir.opt.mlir 37473:7]
    node _hitFlag_T_6 = bits(_hitFlag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37475:23]
    connect hitFlag.a, _hitFlag_T_6 @[build/NutShell.fir.opt.mlir 37476:7]
    node _hitFlag_T_7 = bits(_hitFlag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37478:23]
    connect hitFlag.d, _hitFlag_T_7 @[build/NutShell.fir.opt.mlir 37479:7]
    wire hitinstrPF : UInt<1> @[build/NutShell.fir.opt.mlir 37480:21]
    connect hitinstrPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37482:7]
    node _hitWB_T = eq(hitFlag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37484:19]
    node _hitWB_T_1 = eq(hitFlag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37486:21]
    node _hitWB_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37488:21]
    node _hitWB_T_3 = and(_hitWB_T_1, _hitWB_T_2) @[build/NutShell.fir.opt.mlir 37490:21]
    node _hitWB_T_4 = or(_hitWB_T, _hitWB_T_3) @[build/NutShell.fir.opt.mlir 37492:21]
    node _hitWB_T_5 = and(hit, _hitWB_T_4) @[build/NutShell.fir.opt.mlir 37494:21]
    node _hitWB_T_6 = eq(hitinstrPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37496:21]
    node _hitWB_T_7 = and(_hitWB_T_5, _hitWB_T_6) @[build/NutShell.fir.opt.mlir 37498:21]
    node _hitWB_T_8 = or(loadPF, storePF) @[build/NutShell.fir.opt.mlir 37500:21]
    node _hitWB_T_9 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 37502:21]
    node _hitWB_T_10 = or(_hitWB_T_8, _hitWB_T_9) @[build/NutShell.fir.opt.mlir 37504:22]
    node _hitWB_T_11 = eq(_hitWB_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37506:22]
    node hitWB = and(_hitWB_T_7, _hitWB_T_11) @[build/NutShell.fir.opt.mlir 37508:16]
    node _hitRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37510:27]
    node hitRefillFlag_hi = cat(_hitRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37512:27]
    node _hitRefillFlag_T_1 = cat(hitRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 37515:29]
    node hitRefillFlag_lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 37517:30]
    node hitRefillFlag_lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 37519:30]
    node hitRefillFlag_lo = cat(hitRefillFlag_lo_hi, hitRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 37521:27]
    node hitRefillFlag_hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 37523:30]
    node hitRefillFlag_hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 37525:30]
    node hitRefillFlag_hi_1 = cat(hitRefillFlag_hi_hi, hitRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 37527:29]
    node _hitRefillFlag_T_2 = cat(hitRefillFlag_hi_1, hitRefillFlag_lo) @[build/NutShell.fir.opt.mlir 37529:29]
    node hitRefillFlag = or(_hitRefillFlag_T_1, _hitRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 37531:24]
    node hitWBStore_lo = cat(UInt<2>(0), hitRefillFlag) @[build/NutShell.fir.opt.mlir 37534:24]
    node hitWBStore_hi = cat(UInt<10>(0), hitData.ppn) @[build/NutShell.fir.opt.mlir 37537:24]
    node _hitWBStore_T = cat(hitWBStore_hi, hitWBStore_lo) @[build/NutShell.fir.opt.mlir 37539:24]
    reg hitWBStore : UInt<40>, clock @[build/NutShell.fir.opt.mlir 37540:21]
    when hitWB : @[build/NutShell.fir.opt.mlir 37541:7]
      connect hitWBStore, _hitWBStore_T @[build/NutShell.fir.opt.mlir 37542:9]
    node _hitCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37545:22]
    node _hitCheck_T_1 = eq(hitFlag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37547:24]
    node _hitCheck_T_2 = and(_hitCheck_T, _hitCheck_T_1) @[build/NutShell.fir.opt.mlir 37549:24]
    node _hitCheck_T_3 = eq(_hitCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37551:24]
    node _hitCheck_T_4 = and(hit, _hitCheck_T_3) @[build/NutShell.fir.opt.mlir 37553:24]
    node _hitCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37555:24]
    node _hitCheck_T_6 = and(_hitCheck_T_5, hitFlag.u) @[build/NutShell.fir.opt.mlir 37557:24]
    node _hitCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37559:24]
    node _hitCheck_T_8 = or(_hitCheck_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37561:24]
    node _hitCheck_T_9 = and(_hitCheck_T_6, _hitCheck_T_8) @[build/NutShell.fir.opt.mlir 37563:24]
    node _hitCheck_T_10 = eq(_hitCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37565:25]
    node hitCheck = and(_hitCheck_T_4, _hitCheck_T_10) @[build/NutShell.fir.opt.mlir 37567:19]
    node _hitExec_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37569:21]
    node _hitExec_T_1 = and(hitCheck, _hitExec_T) @[build/NutShell.fir.opt.mlir 37571:23]
    node hitExec = and(_hitExec_T_1, hitFlag.x) @[build/NutShell.fir.opt.mlir 37573:18]
    node _hitLoad_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37575:21]
    node _hitLoad_T_1 = and(hitCheck, _hitLoad_T) @[build/NutShell.fir.opt.mlir 37577:23]
    node _hitLoad_T_2 = and(io.pf.status_mxr, hitFlag.x) @[build/NutShell.fir.opt.mlir 37579:23]
    node _hitLoad_T_3 = or(hitFlag.r, _hitLoad_T_2) @[build/NutShell.fir.opt.mlir 37581:23]
    node hitLoad = and(_hitLoad_T_1, _hitLoad_T_3) @[build/NutShell.fir.opt.mlir 37583:18]
    node _hitStore_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37585:22]
    node _hitStore_T_1 = and(hitCheck, _hitStore_T) @[build/NutShell.fir.opt.mlir 37587:24]
    node hitStore = and(_hitStore_T_1, hitFlag.w) @[build/NutShell.fir.opt.mlir 37589:19]
    wire isAMO : UInt<1> @[build/NutShell.fir.opt.mlir 37590:16]
    connect isAMO, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37592:7]
    regreset io_pf_loadPF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37593:27]
    connect io_pf_loadPF_REG, loadPF @[build/NutShell.fir.opt.mlir 37594:7]
    connect io.pf.loadPF, io_pf_loadPF_REG @[build/NutShell.fir.opt.mlir 37595:7]
    regreset io_pf_storePF_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37596:28]
    connect io_pf_storePF_REG, storePF @[build/NutShell.fir.opt.mlir 37597:7]
    connect io.pf.storePF, io_pf_storePF_REG @[build/NutShell.fir.opt.mlir 37598:7]
    node _loadPF_T = eq(hitLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37600:20]
    node _loadPF_T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37602:22]
    node _loadPF_T_2 = eq(_loadPF_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37604:22]
    node _loadPF_T_3 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37606:22]
    node _loadPF_T_4 = eq(_loadPF_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37608:22]
    node _loadPF_T_5 = and(_loadPF_T_2, _loadPF_T_4) @[build/NutShell.fir.opt.mlir 37610:22]
    node _loadPF_T_6 = and(_loadPF_T, _loadPF_T_5) @[build/NutShell.fir.opt.mlir 37612:22]
    node _loadPF_T_7 = and(_loadPF_T_6, hit) @[build/NutShell.fir.opt.mlir 37614:22]
    node _loadPF_T_8 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37616:22]
    node _loadPF_T_9 = and(_loadPF_T_7, _loadPF_T_8) @[build/NutShell.fir.opt.mlir 37618:22]
    connect loadPF, _loadPF_T_9 @[build/NutShell.fir.opt.mlir 37619:7]
    node _storePF_T = eq(hitStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37621:21]
    node _storePF_T_1 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37623:23]
    node _storePF_T_2 = and(_storePF_T, _storePF_T_1) @[build/NutShell.fir.opt.mlir 37625:23]
    node _storePF_T_3 = and(_storePF_T_2, hit) @[build/NutShell.fir.opt.mlir 37627:23]
    node _storePF_T_4 = eq(hitLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37629:23]
    node _storePF_T_5 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37631:23]
    node _storePF_T_6 = eq(_storePF_T_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37633:23]
    node _storePF_T_7 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37635:23]
    node _storePF_T_8 = eq(_storePF_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37637:23]
    node _storePF_T_9 = and(_storePF_T_6, _storePF_T_8) @[build/NutShell.fir.opt.mlir 37639:23]
    node _storePF_T_10 = and(_storePF_T_4, _storePF_T_9) @[build/NutShell.fir.opt.mlir 37641:24]
    node _storePF_T_11 = and(_storePF_T_10, hit) @[build/NutShell.fir.opt.mlir 37643:24]
    node _storePF_T_12 = and(_storePF_T_11, isAMO) @[build/NutShell.fir.opt.mlir 37645:24]
    node _storePF_T_13 = or(_storePF_T_3, _storePF_T_12) @[build/NutShell.fir.opt.mlir 37647:24]
    connect storePF, _storePF_T_13 @[build/NutShell.fir.opt.mlir 37648:7]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37650:16]
    regreset level : UInt<2>, clock, reset, UInt<2>(3) @[build/NutShell.fir.opt.mlir 37652:16]
    reg memRespStore : UInt<64>, clock @[build/NutShell.fir.opt.mlir 37653:23]
    wire missMask : UInt<18> @[build/NutShell.fir.opt.mlir 37654:19]
    connect missMask, UInt<18>(262143) @[build/NutShell.fir.opt.mlir 37657:7]
    reg missMaskStore : UInt<18>, clock @[build/NutShell.fir.opt.mlir 37658:24]
    wire missMetaRefill : UInt<1> @[build/NutShell.fir.opt.mlir 37659:25]
    connect missMetaRefill, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37661:7]
    wire missRefillFlag : UInt<8> @[build/NutShell.fir.opt.mlir 37662:25]
    connect missRefillFlag, UInt<8>(0) @[build/NutShell.fir.opt.mlir 37665:7]
    wire memRdata : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 37666:19]
    wire _memRdata_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 37679:25]
    connect _memRdata_WIRE, io.mem.resp.bits.rdata @[build/NutShell.fir.opt.mlir 37680:7]
    node _memRdata_T = bits(_memRdata_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37682:22]
    connect memRdata.flag.v, _memRdata_T @[build/NutShell.fir.opt.mlir 37683:7]
    node _memRdata_T_1 = bits(_memRdata_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37685:24]
    connect memRdata.flag.r, _memRdata_T_1 @[build/NutShell.fir.opt.mlir 37686:7]
    node _memRdata_T_2 = bits(_memRdata_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37688:24]
    connect memRdata.flag.w, _memRdata_T_2 @[build/NutShell.fir.opt.mlir 37689:7]
    node _memRdata_T_3 = bits(_memRdata_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37691:24]
    connect memRdata.flag.x, _memRdata_T_3 @[build/NutShell.fir.opt.mlir 37692:7]
    node _memRdata_T_4 = bits(_memRdata_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37694:24]
    connect memRdata.flag.u, _memRdata_T_4 @[build/NutShell.fir.opt.mlir 37695:7]
    node _memRdata_T_5 = bits(_memRdata_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37697:24]
    connect memRdata.flag.g, _memRdata_T_5 @[build/NutShell.fir.opt.mlir 37698:7]
    node _memRdata_T_6 = bits(_memRdata_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37700:24]
    connect memRdata.flag.a, _memRdata_T_6 @[build/NutShell.fir.opt.mlir 37701:7]
    node _memRdata_T_7 = bits(_memRdata_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37703:24]
    connect memRdata.flag.d, _memRdata_T_7 @[build/NutShell.fir.opt.mlir 37704:7]
    node _memRdata_T_8 = bits(_memRdata_WIRE, 9, 8) @[build/NutShell.fir.opt.mlir 37706:24]
    connect memRdata.rsw, _memRdata_T_8 @[build/NutShell.fir.opt.mlir 37707:7]
    node _memRdata_T_9 = bits(_memRdata_WIRE, 29, 10) @[build/NutShell.fir.opt.mlir 37709:24]
    connect memRdata.ppn, _memRdata_T_9 @[build/NutShell.fir.opt.mlir 37710:7]
    node _memRdata_T_10 = bits(_memRdata_WIRE, 63, 30) @[build/NutShell.fir.opt.mlir 37712:25]
    connect memRdata.reserved, _memRdata_T_10 @[build/NutShell.fir.opt.mlir 37713:7]
    reg raddr : UInt<32>, clock @[build/NutShell.fir.opt.mlir 37714:16]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 37716:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37717:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 37718:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 37720:9]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37722:20]
    node isFlush = or(needFlush, io.flush) @[build/NutShell.fir.opt.mlir 37724:18]
    node _T = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37726:13]
    node _T_1 = and(io.flush, _T) @[build/NutShell.fir.opt.mlir 37728:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 37729:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 37731:9]
    node _T_2 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 37734:15]
    node _T_3 = and(_T_2, needFlush) @[build/NutShell.fir.opt.mlir 37736:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 37737:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37739:9]
    regreset missIPF : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37741:18]
    node _T_4 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 37743:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 37753:7]
      node _T_5 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37755:17]
      node _T_6 = and(_T_5, hitWB) @[build/NutShell.fir.opt.mlir 37757:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 37758:9]
        connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 37760:11]
        connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37762:11]
        connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37764:11]
      else :
        node _T_7 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37767:19]
        node _T_8 = and(miss, _T_7) @[build/NutShell.fir.opt.mlir 37769:19]
        when _T_8 : @[build/NutShell.fir.opt.mlir 37770:11]
          connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 37772:13]
          node _raddr_T = cat(satp.ppn, vpn.vpn2) @[build/NutShell.fir.opt.mlir 37774:25]
          node _raddr_T_1 = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37776:27]
          connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 37777:13]
          connect level, UInt<2>(3) @[build/NutShell.fir.opt.mlir 37779:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37781:13]
          connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37783:13]
    else :
      node _T_9 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 37788:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 37789:9]
        when isFlush : @[build/NutShell.fir.opt.mlir 37790:11]
          connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37792:13]
          connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37794:13]
        else :
          node _T_10 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 37797:22]
          when _T_10 : @[build/NutShell.fir.opt.mlir 37798:13]
            connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 37800:15]
      else :
        node _T_11 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 37805:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 37806:11]
          wire missflag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } @[build/NutShell.fir.opt.mlir 37807:25]
          node missflag_lo_lo = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 37817:31]
          node missflag_lo_hi = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 37819:31]
          node missflag_lo = cat(missflag_lo_hi, missflag_lo_lo) @[build/NutShell.fir.opt.mlir 37821:28]
          node missflag_hi_lo = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 37823:31]
          node missflag_hi_hi = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 37825:31]
          node missflag_hi = cat(missflag_hi_hi, missflag_hi_lo) @[build/NutShell.fir.opt.mlir 37827:28]
          node _missflag_T = cat(missflag_hi, missflag_lo) @[build/NutShell.fir.opt.mlir 37829:28]
          wire _missflag_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 37830:31]
          connect _missflag_WIRE, _missflag_T @[build/NutShell.fir.opt.mlir 37831:13]
          node _missflag_T_1 = bits(_missflag_WIRE, 0, 0) @[build/NutShell.fir.opt.mlir 37833:30]
          connect missflag.v, _missflag_T_1 @[build/NutShell.fir.opt.mlir 37834:13]
          node _missflag_T_2 = bits(_missflag_WIRE, 1, 1) @[build/NutShell.fir.opt.mlir 37836:30]
          connect missflag.r, _missflag_T_2 @[build/NutShell.fir.opt.mlir 37837:13]
          node _missflag_T_3 = bits(_missflag_WIRE, 2, 2) @[build/NutShell.fir.opt.mlir 37839:30]
          connect missflag.w, _missflag_T_3 @[build/NutShell.fir.opt.mlir 37840:13]
          node _missflag_T_4 = bits(_missflag_WIRE, 3, 3) @[build/NutShell.fir.opt.mlir 37842:30]
          connect missflag.x, _missflag_T_4 @[build/NutShell.fir.opt.mlir 37843:13]
          node _missflag_T_5 = bits(_missflag_WIRE, 4, 4) @[build/NutShell.fir.opt.mlir 37845:30]
          connect missflag.u, _missflag_T_5 @[build/NutShell.fir.opt.mlir 37846:13]
          node _missflag_T_6 = bits(_missflag_WIRE, 5, 5) @[build/NutShell.fir.opt.mlir 37848:30]
          connect missflag.g, _missflag_T_6 @[build/NutShell.fir.opt.mlir 37849:13]
          node _missflag_T_7 = bits(_missflag_WIRE, 6, 6) @[build/NutShell.fir.opt.mlir 37851:30]
          connect missflag.a, _missflag_T_7 @[build/NutShell.fir.opt.mlir 37852:13]
          node _missflag_T_8 = bits(_missflag_WIRE, 7, 7) @[build/NutShell.fir.opt.mlir 37854:30]
          connect missflag.d, _missflag_T_8 @[build/NutShell.fir.opt.mlir 37855:13]
          node _T_12 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 37857:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 37858:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 37859:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 37861:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 37863:17]
            else :
              node _T_13 = or(missflag.r, missflag.x) @[build/NutShell.fir.opt.mlir 37866:26]
              node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37868:26]
              node _T_15 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 37870:26]
              node _T_16 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 37872:26]
              node _T_17 = or(_T_15, _T_16) @[build/NutShell.fir.opt.mlir 37874:26]
              node _T_18 = and(_T_14, _T_17) @[build/NutShell.fir.opt.mlir 37876:26]
              when _T_18 : @[build/NutShell.fir.opt.mlir 37877:17]
                node _T_19 = eq(missflag.v, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37879:28]
                node _T_20 = eq(missflag.r, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37881:28]
                node _T_21 = and(_T_20, missflag.w) @[build/NutShell.fir.opt.mlir 37883:28]
                node _T_22 = or(_T_19, _T_21) @[build/NutShell.fir.opt.mlir 37885:28]
                when _T_22 : @[build/NutShell.fir.opt.mlir 37886:19]
                  connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 37888:21]
                  node _loadPF_T_10 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37890:37]
                  node _loadPF_T_11 = eq(_loadPF_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37892:37]
                  node _loadPF_T_12 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 37894:37]
                  node _loadPF_T_13 = eq(_loadPF_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37896:37]
                  node _loadPF_T_14 = and(_loadPF_T_11, _loadPF_T_13) @[build/NutShell.fir.opt.mlir 37898:37]
                  node _loadPF_T_15 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37900:37]
                  node _loadPF_T_16 = and(_loadPF_T_14, _loadPF_T_15) @[build/NutShell.fir.opt.mlir 37902:37]
                  connect loadPF, _loadPF_T_16 @[build/NutShell.fir.opt.mlir 37903:21]
                  node _storePF_T_14 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 37905:38]
                  node _storePF_T_15 = or(_storePF_T_14, isAMO) @[build/NutShell.fir.opt.mlir 37907:38]
                  connect storePF, _storePF_T_15 @[build/NutShell.fir.opt.mlir 37908:21]
                  inst LogPerfHelper of LogPerfHelper_30 @[build/NutShell.fir.opt.mlir 37909:113]
                  wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 37910:34]
                  connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 37915:21]
                  connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 37916:21]
                  connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 37917:21]
                  connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 37918:21]
                  node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37920:30]
                  when _T_23 : @[build/NutShell.fir.opt.mlir 37921:21]
                    node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37923:32]
                    node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37925:32]
                    when _T_25 : @[build/NutShell.fir.opt.mlir 37926:23]
                      skip @[build/NutShell.fir.opt.mlir 37927:25]
                    node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37930:32]
                    node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37932:32]
                    when _T_27 : @[build/NutShell.fir.opt.mlir 37933:23]
                      skip @[build/NutShell.fir.opt.mlir 37934:25]
                  node _T_28 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37938:30]
                  when _T_28 : @[build/NutShell.fir.opt.mlir 37939:21]
                    node _T_29 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37941:32]
                    node _T_30 = eq(_T_29, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37943:32]
                    when _T_30 : @[build/NutShell.fir.opt.mlir 37944:23]
                      skip @[build/NutShell.fir.opt.mlir 37945:25]
                  node _T_31 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37949:30]
                  when _T_31 : @[build/NutShell.fir.opt.mlir 37950:21]
                    node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37952:32]
                    node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37954:32]
                    when _T_33 : @[build/NutShell.fir.opt.mlir 37955:23]
                      skip @[build/NutShell.fir.opt.mlir 37956:25]
                  node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 37960:30]
                  when _T_34 : @[build/NutShell.fir.opt.mlir 37961:21]
                    node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 37963:32]
                    node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37965:32]
                    when _T_36 : @[build/NutShell.fir.opt.mlir 37966:23]
                      skip @[build/NutShell.fir.opt.mlir 37967:25]
                else :
                  connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 37972:21]
                  node _raddr_T_2 = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 37974:35]
                  node _raddr_T_3 = mux(_raddr_T_2, vpn.vpn1, vpn.vpn0) @[build/NutShell.fir.opt.mlir 37976:35]
                  node _raddr_T_4 = cat(memRdata.ppn, _raddr_T_3) @[build/NutShell.fir.opt.mlir 37978:35]
                  node _raddr_T_5 = cat(_raddr_T_4, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 37980:35]
                  connect raddr, _raddr_T_5 @[build/NutShell.fir.opt.mlir 37981:21]
              else :
                node _T_37 = neq(level, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37985:28]
                when _T_37 : @[build/NutShell.fir.opt.mlir 37986:19]
                  node _permCheck_T = eq(io.pf.privilegeMode, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37988:37]
                  node _permCheck_T_1 = eq(missflag.u, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37990:39]
                  node _permCheck_T_2 = and(_permCheck_T, _permCheck_T_1) @[build/NutShell.fir.opt.mlir 37992:39]
                  node _permCheck_T_3 = eq(_permCheck_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 37994:39]
                  node _permCheck_T_4 = and(missflag.v, _permCheck_T_3) @[build/NutShell.fir.opt.mlir 37996:39]
                  node _permCheck_T_5 = eq(io.pf.privilegeMode, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 37998:39]
                  node _permCheck_T_6 = and(_permCheck_T_5, missflag.u) @[build/NutShell.fir.opt.mlir 38000:39]
                  node _permCheck_T_7 = eq(io.pf.status_sum, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38002:39]
                  node _permCheck_T_8 = or(_permCheck_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38004:39]
                  node _permCheck_T_9 = and(_permCheck_T_6, _permCheck_T_8) @[build/NutShell.fir.opt.mlir 38006:39]
                  node _permCheck_T_10 = eq(_permCheck_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38008:40]
                  node permCheck = and(_permCheck_T_4, _permCheck_T_10) @[build/NutShell.fir.opt.mlir 38010:34]
                  node _permExec_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38012:36]
                  node _permExec_T_1 = and(permCheck, _permExec_T) @[build/NutShell.fir.opt.mlir 38014:38]
                  node permExec = and(_permExec_T_1, missflag.x) @[build/NutShell.fir.opt.mlir 38016:33]
                  node _permLoad_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38018:36]
                  node _permLoad_T_1 = and(permCheck, _permLoad_T) @[build/NutShell.fir.opt.mlir 38020:38]
                  node _permLoad_T_2 = and(io.pf.status_mxr, missflag.x) @[build/NutShell.fir.opt.mlir 38022:38]
                  node _permLoad_T_3 = or(missflag.r, _permLoad_T_2) @[build/NutShell.fir.opt.mlir 38024:38]
                  node permLoad = and(_permLoad_T_1, _permLoad_T_3) @[build/NutShell.fir.opt.mlir 38026:33]
                  node _permStore_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38028:37]
                  node _permStore_T_1 = and(permCheck, _permStore_T) @[build/NutShell.fir.opt.mlir 38030:39]
                  node permStore = and(_permStore_T_1, missflag.w) @[build/NutShell.fir.opt.mlir 38032:34]
                  node _updateAD_T = eq(missflag.a, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38034:36]
                  node _updateAD_T_1 = eq(missflag.d, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38036:38]
                  node _updateAD_T_2 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38038:38]
                  node _updateAD_T_3 = and(_updateAD_T_1, _updateAD_T_2) @[build/NutShell.fir.opt.mlir 38040:38]
                  node updateAD = or(_updateAD_T, _updateAD_T_3) @[build/NutShell.fir.opt.mlir 38042:33]
                  node _updateData_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38044:38]
                  node updateData_lo = cat(UInt<1>(1), UInt<6>(0)) @[build/NutShell.fir.opt.mlir 38046:38]
                  node updateData_hi = cat(UInt<56>(0), _updateData_T) @[build/NutShell.fir.opt.mlir 38048:38]
                  node updateData = cat(updateData_hi, updateData_lo) @[build/NutShell.fir.opt.mlir 38050:35]
                  node _missRefillFlag_T = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38052:42]
                  node missRefillFlag_hi = cat(_missRefillFlag_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 38054:42]
                  node _missRefillFlag_T_1 = cat(missRefillFlag_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 38056:44]
                  node missRefillFlag_lo_lo = cat(missflag.r, missflag.v) @[build/NutShell.fir.opt.mlir 38058:45]
                  node missRefillFlag_lo_hi = cat(missflag.x, missflag.w) @[build/NutShell.fir.opt.mlir 38060:45]
                  node missRefillFlag_lo = cat(missRefillFlag_lo_hi, missRefillFlag_lo_lo) @[build/NutShell.fir.opt.mlir 38062:42]
                  node missRefillFlag_hi_lo = cat(missflag.g, missflag.u) @[build/NutShell.fir.opt.mlir 38064:45]
                  node missRefillFlag_hi_hi = cat(missflag.d, missflag.a) @[build/NutShell.fir.opt.mlir 38066:45]
                  node missRefillFlag_hi_1 = cat(missRefillFlag_hi_hi, missRefillFlag_hi_lo) @[build/NutShell.fir.opt.mlir 38068:44]
                  node _missRefillFlag_T_2 = cat(missRefillFlag_hi_1, missRefillFlag_lo) @[build/NutShell.fir.opt.mlir 38070:44]
                  node _missRefillFlag_T_3 = or(_missRefillFlag_T_1, _missRefillFlag_T_2) @[build/NutShell.fir.opt.mlir 38072:44]
                  connect missRefillFlag, _missRefillFlag_T_3 @[build/NutShell.fir.opt.mlir 38073:21]
                  node _memRespStore_T = or(io.mem.resp.bits.rdata, updateData) @[build/NutShell.fir.opt.mlir 38075:40]
                  connect memRespStore, _memRespStore_T @[build/NutShell.fir.opt.mlir 38076:21]
                  node _T_38 = eq(permLoad, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38078:30]
                  node _T_39 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38080:30]
                  node _T_40 = eq(_T_39, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38082:30]
                  node _T_41 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 38084:30]
                  node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38086:30]
                  node _T_43 = and(_T_40, _T_42) @[build/NutShell.fir.opt.mlir 38088:30]
                  node _T_44 = and(_T_38, _T_43) @[build/NutShell.fir.opt.mlir 38090:30]
                  node _T_45 = eq(permStore, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38092:30]
                  node _T_46 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38094:30]
                  node _T_47 = and(_T_45, _T_46) @[build/NutShell.fir.opt.mlir 38096:30]
                  node _T_48 = or(_T_44, _T_47) @[build/NutShell.fir.opt.mlir 38098:30]
                  when _T_48 : @[build/NutShell.fir.opt.mlir 38099:21]
                    connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 38101:23]
                    node _loadPF_T_17 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38103:39]
                    node _loadPF_T_18 = eq(_loadPF_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38105:39]
                    node _loadPF_T_19 = bits(io.in.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 38107:39]
                    node _loadPF_T_20 = eq(_loadPF_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38109:39]
                    node _loadPF_T_21 = and(_loadPF_T_18, _loadPF_T_20) @[build/NutShell.fir.opt.mlir 38111:39]
                    node _loadPF_T_22 = eq(isAMO, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38113:39]
                    node _loadPF_T_23 = and(_loadPF_T_21, _loadPF_T_22) @[build/NutShell.fir.opt.mlir 38115:39]
                    connect loadPF, _loadPF_T_23 @[build/NutShell.fir.opt.mlir 38116:23]
                    node _storePF_T_16 = bits(io.in.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 38118:40]
                    node _storePF_T_17 = or(_storePF_T_16, isAMO) @[build/NutShell.fir.opt.mlir 38120:40]
                    connect storePF, _storePF_T_17 @[build/NutShell.fir.opt.mlir 38121:23]
                  else :
                    node _state_T = mux(updateAD, UInt<3>(3), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 38124:35]
                    connect state, _state_T @[build/NutShell.fir.opt.mlir 38125:23]
                    connect missMetaRefill, UInt<1>(1) @[build/NutShell.fir.opt.mlir 38127:23]
                  node _missMask_T = eq(level, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 38130:36]
                  node _missMask_T_1 = eq(level, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 38132:38]
                  node _missMask_T_2 = mux(_missMask_T_1, UInt<18>(261632), UInt<18>(262143)) @[build/NutShell.fir.opt.mlir 38134:38]
                  node _missMask_T_3 = mux(_missMask_T, UInt<18>(0), _missMask_T_2) @[build/NutShell.fir.opt.mlir 38136:38]
                  connect missMask, _missMask_T_3 @[build/NutShell.fir.opt.mlir 38137:21]
                  connect missMaskStore, missMask @[build/NutShell.fir.opt.mlir 38138:21]
            node _level_T = sub(level, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 38143:27]
            node _level_T_1 = tail(_level_T, 1) @[build/NutShell.fir.opt.mlir 38145:29]
            connect level, _level_T_1 @[build/NutShell.fir.opt.mlir 38146:15]
        else :
          node _T_49 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 38150:22]
          when _T_49 : @[build/NutShell.fir.opt.mlir 38151:13]
            when isFlush : @[build/NutShell.fir.opt.mlir 38152:15]
              connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 38154:17]
              connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38156:17]
            else :
              node _T_50 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 38159:26]
              when _T_50 : @[build/NutShell.fir.opt.mlir 38160:17]
                connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 38162:19]
          else :
            node _T_51 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 38167:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 38168:15]
              node _T_52 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 38170:26]
              node _T_53 = or(_T_52, io.flush) @[build/NutShell.fir.opt.mlir 38172:26]
              node _T_54 = or(_T_53, alreadyOutFire) @[build/NutShell.fir.opt.mlir 38174:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 38175:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 38177:19]
                connect missIPF, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38179:19]
                connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38181:19]
            else :
              node _T_55 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 38185:26]
              when _T_55 : @[build/NutShell.fir.opt.mlir 38186:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 38188:19]
    node _cmd_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 38196:17]
    node cmd = mux(_cmd_T, UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38198:14]
    node _T_56 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 38200:16]
    node _T_57 = mux(hitWB, hitWBStore, memRespStore) @[build/NutShell.fir.opt.mlir 38202:16]
    connect io.mem.req.bits.addr, _T_56 @[build/NutShell.fir.opt.mlir 38203:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 38205:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 38208:7]
    connect io.mem.req.bits.wdata, _T_57 @[build/NutShell.fir.opt.mlir 38209:7]
    connect io.mem.req.bits.wmask, UInt<8>(255) @[build/NutShell.fir.opt.mlir 38212:7]
    node _io_mem_req_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 38214:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 38216:32]
    node _io_mem_req_valid_T_2 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_1) @[build/NutShell.fir.opt.mlir 38218:32]
    node _io_mem_req_valid_T_3 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38220:32]
    node _io_mem_req_valid_T_4 = and(_io_mem_req_valid_T_2, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 38222:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 38223:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 38225:7]
    node _T_58 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38227:16]
    node _T_59 = and(missMetaRefill, _T_58) @[build/NutShell.fir.opt.mlir 38229:16]
    node _T_60 = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 38231:16]
    node _T_61 = and(hitWB, _T_60) @[build/NutShell.fir.opt.mlir 38233:16]
    node _T_62 = eq(isFlush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38235:16]
    node _T_63 = and(_T_61, _T_62) @[build/NutShell.fir.opt.mlir 38237:16]
    node _T_64 = or(_T_59, _T_63) @[build/NutShell.fir.opt.mlir 38239:16]
    regreset REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 38240:14]
    connect REG, _T_64 @[build/NutShell.fir.opt.mlir 38241:7]
    wire _WIRE : { tag : UInt<23>, index : UInt<4>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 38242:16]
    wire _WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 38246:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 38247:7]
    node _T_65 = bits(_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 38249:16]
    connect _WIRE.off, _T_65 @[build/NutShell.fir.opt.mlir 38250:7]
    node _T_66 = bits(_WIRE_1, 15, 12) @[build/NutShell.fir.opt.mlir 38252:16]
    connect _WIRE.index, _T_66 @[build/NutShell.fir.opt.mlir 38253:7]
    node _T_67 = bits(_WIRE_1, 38, 16) @[build/NutShell.fir.opt.mlir 38255:16]
    connect _WIRE.tag, _T_67 @[build/NutShell.fir.opt.mlir 38256:7]
    reg REG_1 : UInt, clock @[build/NutShell.fir.opt.mlir 38257:16]
    connect REG_1, _WIRE.index @[build/NutShell.fir.opt.mlir 38258:7]
    reg REG_2 : UInt, clock @[build/NutShell.fir.opt.mlir 38259:16]
    connect REG_2, waymask @[build/NutShell.fir.opt.mlir 38260:7]
    node hi = cat(vpn.vpn2, vpn.vpn1) @[build/NutShell.fir.opt.mlir 38262:13]
    node _T_68 = cat(hi, vpn.vpn0) @[build/NutShell.fir.opt.mlir 38264:16]
    reg REG_3 : UInt, clock @[build/NutShell.fir.opt.mlir 38265:16]
    connect REG_3, _T_68 @[build/NutShell.fir.opt.mlir 38266:7]
    node _T_69 = mux(hitWB, hitMeta.asid, satp.asid) @[build/NutShell.fir.opt.mlir 38268:16]
    reg REG_4 : UInt, clock @[build/NutShell.fir.opt.mlir 38269:16]
    connect REG_4, _T_69 @[build/NutShell.fir.opt.mlir 38270:7]
    node _T_70 = mux(hitWB, hitMeta.mask, missMask) @[build/NutShell.fir.opt.mlir 38272:16]
    reg REG_5 : UInt, clock @[build/NutShell.fir.opt.mlir 38273:16]
    connect REG_5, _T_70 @[build/NutShell.fir.opt.mlir 38274:7]
    node _T_71 = mux(hitWB, hitRefillFlag, missRefillFlag) @[build/NutShell.fir.opt.mlir 38276:16]
    reg REG_6 : UInt, clock @[build/NutShell.fir.opt.mlir 38277:16]
    connect REG_6, _T_71 @[build/NutShell.fir.opt.mlir 38278:7]
    node _T_72 = mux(hitWB, hitData.ppn, memRdata.ppn) @[build/NutShell.fir.opt.mlir 38280:16]
    reg REG_7 : UInt, clock @[build/NutShell.fir.opt.mlir 38281:16]
    connect REG_7, _T_72 @[build/NutShell.fir.opt.mlir 38282:7]
    node _T_73 = mux(hitWB, hitData.pteaddr, raddr) @[build/NutShell.fir.opt.mlir 38284:16]
    reg REG_8 : UInt, clock @[build/NutShell.fir.opt.mlir 38285:16]
    connect REG_8, _T_73 @[build/NutShell.fir.opt.mlir 38286:7]
    connect io.mdWrite.wen, REG @[build/NutShell.fir.opt.mlir 38287:7]
    connect io.mdWrite.windex, REG_1 @[build/NutShell.fir.opt.mlir 38288:7]
    connect io.mdWrite.waymask, REG_2 @[build/NutShell.fir.opt.mlir 38289:7]
    node io_mdWrite_wdata_lo_hi = cat(REG_6, REG_7) @[build/NutShell.fir.opt.mlir 38291:33]
    node io_mdWrite_wdata_lo = cat(io_mdWrite_wdata_lo_hi, REG_8) @[build/NutShell.fir.opt.mlir 38293:30]
    node io_mdWrite_wdata_hi_hi = cat(REG_3, REG_4) @[build/NutShell.fir.opt.mlir 38295:33]
    node io_mdWrite_wdata_hi = cat(io_mdWrite_wdata_hi_hi, REG_5) @[build/NutShell.fir.opt.mlir 38297:30]
    node _io_mdWrite_wdata_T = cat(io_mdWrite_wdata_hi, io_mdWrite_wdata_lo) @[build/NutShell.fir.opt.mlir 38299:30]
    connect io.mdWrite.wdata, _io_mdWrite_wdata_T @[build/NutShell.fir.opt.mlir 38300:7]
    connect io.out.bits.addr, tail(io.in.bits.addr, 7) @[build/NutShell.fir.opt.mlir 38302:7]
    connect io.out.bits.size, io.in.bits.size @[build/NutShell.fir.opt.mlir 38303:7]
    connect io.out.bits.cmd, io.in.bits.cmd @[build/NutShell.fir.opt.mlir 38304:7]
    connect io.out.bits.wmask, io.in.bits.wmask @[build/NutShell.fir.opt.mlir 38305:7]
    connect io.out.bits.wdata, io.in.bits.wdata @[build/NutShell.fir.opt.mlir 38306:7]
    node _io_out_bits_addr_T = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 38308:30]
    node _io_out_bits_addr_T_1 = cat(hitData.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38311:32]
    node _io_out_bits_addr_T_2 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 38313:32]
    node io_out_bits_addr_hi = cat(_io_out_bits_addr_T_2, hitMeta.mask) @[build/NutShell.fir.opt.mlir 38315:30]
    node _io_out_bits_addr_T_3 = cat(io_out_bits_addr_hi, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38317:32]
    node _io_out_bits_addr_T_4 = and(_io_out_bits_addr_T_1, _io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 38319:32]
    node _io_out_bits_addr_T_5 = not(_io_out_bits_addr_T_3) @[build/NutShell.fir.opt.mlir 38321:32]
    node _io_out_bits_addr_T_6 = and(_io_out_bits_addr_T, _io_out_bits_addr_T_5) @[build/NutShell.fir.opt.mlir 38323:32]
    node _io_out_bits_addr_T_7 = or(_io_out_bits_addr_T_4, _io_out_bits_addr_T_6) @[build/NutShell.fir.opt.mlir 38325:32]
    wire _io_out_bits_addr_WIRE : { reserved : UInt<34>, ppn : UInt<20>, rsw : UInt<2>, flag : { d : UInt<1>, a : UInt<1>, g : UInt<1>, u : UInt<1>, x : UInt<1>, w : UInt<1>, r : UInt<1>, v : UInt<1> } } @[build/NutShell.fir.opt.mlir 38326:33]
    wire _io_out_bits_addr_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 38339:35]
    connect _io_out_bits_addr_WIRE_1, memRespStore @[build/NutShell.fir.opt.mlir 38340:7]
    node _io_out_bits_addr_T_8 = bits(_io_out_bits_addr_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 38342:32]
    connect _io_out_bits_addr_WIRE.flag.v, _io_out_bits_addr_T_8 @[build/NutShell.fir.opt.mlir 38343:7]
    node _io_out_bits_addr_T_9 = bits(_io_out_bits_addr_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 38345:32]
    connect _io_out_bits_addr_WIRE.flag.r, _io_out_bits_addr_T_9 @[build/NutShell.fir.opt.mlir 38346:7]
    node _io_out_bits_addr_T_10 = bits(_io_out_bits_addr_WIRE_1, 2, 2) @[build/NutShell.fir.opt.mlir 38348:33]
    connect _io_out_bits_addr_WIRE.flag.w, _io_out_bits_addr_T_10 @[build/NutShell.fir.opt.mlir 38349:7]
    node _io_out_bits_addr_T_11 = bits(_io_out_bits_addr_WIRE_1, 3, 3) @[build/NutShell.fir.opt.mlir 38351:33]
    connect _io_out_bits_addr_WIRE.flag.x, _io_out_bits_addr_T_11 @[build/NutShell.fir.opt.mlir 38352:7]
    node _io_out_bits_addr_T_12 = bits(_io_out_bits_addr_WIRE_1, 4, 4) @[build/NutShell.fir.opt.mlir 38354:33]
    connect _io_out_bits_addr_WIRE.flag.u, _io_out_bits_addr_T_12 @[build/NutShell.fir.opt.mlir 38355:7]
    node _io_out_bits_addr_T_13 = bits(_io_out_bits_addr_WIRE_1, 5, 5) @[build/NutShell.fir.opt.mlir 38357:33]
    connect _io_out_bits_addr_WIRE.flag.g, _io_out_bits_addr_T_13 @[build/NutShell.fir.opt.mlir 38358:7]
    node _io_out_bits_addr_T_14 = bits(_io_out_bits_addr_WIRE_1, 6, 6) @[build/NutShell.fir.opt.mlir 38360:33]
    connect _io_out_bits_addr_WIRE.flag.a, _io_out_bits_addr_T_14 @[build/NutShell.fir.opt.mlir 38361:7]
    node _io_out_bits_addr_T_15 = bits(_io_out_bits_addr_WIRE_1, 7, 7) @[build/NutShell.fir.opt.mlir 38363:33]
    connect _io_out_bits_addr_WIRE.flag.d, _io_out_bits_addr_T_15 @[build/NutShell.fir.opt.mlir 38364:7]
    node _io_out_bits_addr_T_16 = bits(_io_out_bits_addr_WIRE_1, 9, 8) @[build/NutShell.fir.opt.mlir 38366:33]
    connect _io_out_bits_addr_WIRE.rsw, _io_out_bits_addr_T_16 @[build/NutShell.fir.opt.mlir 38367:7]
    node _io_out_bits_addr_T_17 = bits(_io_out_bits_addr_WIRE_1, 29, 10) @[build/NutShell.fir.opt.mlir 38369:33]
    connect _io_out_bits_addr_WIRE.ppn, _io_out_bits_addr_T_17 @[build/NutShell.fir.opt.mlir 38370:7]
    node _io_out_bits_addr_T_18 = bits(_io_out_bits_addr_WIRE_1, 63, 30) @[build/NutShell.fir.opt.mlir 38372:33]
    connect _io_out_bits_addr_WIRE.reserved, _io_out_bits_addr_T_18 @[build/NutShell.fir.opt.mlir 38373:7]
    node _io_out_bits_addr_T_19 = bits(io.in.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 38375:33]
    node _io_out_bits_addr_T_20 = cat(_io_out_bits_addr_WIRE.ppn, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38377:33]
    node _io_out_bits_addr_T_21 = mux(UInt<1>(1), UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 38379:33]
    node io_out_bits_addr_hi_1 = cat(_io_out_bits_addr_T_21, missMaskStore) @[build/NutShell.fir.opt.mlir 38381:32]
    node _io_out_bits_addr_T_22 = cat(io_out_bits_addr_hi_1, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 38383:33]
    node _io_out_bits_addr_T_23 = and(_io_out_bits_addr_T_20, _io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 38385:33]
    node _io_out_bits_addr_T_24 = not(_io_out_bits_addr_T_22) @[build/NutShell.fir.opt.mlir 38387:33]
    node _io_out_bits_addr_T_25 = and(_io_out_bits_addr_T_19, _io_out_bits_addr_T_24) @[build/NutShell.fir.opt.mlir 38389:33]
    node _io_out_bits_addr_T_26 = or(_io_out_bits_addr_T_23, _io_out_bits_addr_T_25) @[build/NutShell.fir.opt.mlir 38391:33]
    node _io_out_bits_addr_T_27 = mux(hit, _io_out_bits_addr_T_7, _io_out_bits_addr_T_26) @[build/NutShell.fir.opt.mlir 38393:33]
    connect io.out.bits.addr, _io_out_bits_addr_T_27 @[build/NutShell.fir.opt.mlir 38394:7]
    node _io_out_valid_T = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38396:26]
    node _io_out_valid_T_1 = and(hit, _io_out_valid_T) @[build/NutShell.fir.opt.mlir 38398:28]
    node _io_out_valid_T_2 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38400:28]
    node _io_out_valid_T_3 = or(_io_out_valid_T_2, loadPF) @[build/NutShell.fir.opt.mlir 38402:28]
    node _io_out_valid_T_4 = or(_io_out_valid_T_3, storePF) @[build/NutShell.fir.opt.mlir 38404:28]
    node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38406:28]
    node _io_out_valid_T_6 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 38408:28]
    node _io_out_valid_T_7 = mux(_io_out_valid_T_1, _io_out_valid_T_5, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 38410:28]
    node _io_out_valid_T_8 = and(io.in.valid, _io_out_valid_T_7) @[build/NutShell.fir.opt.mlir 38412:28]
    connect io.out.valid, _io_out_valid_T_8 @[build/NutShell.fir.opt.mlir 38413:7]
    node _io_in_ready_T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 38415:25]
    node _io_in_ready_T_1 = and(io.out.ready, _io_in_ready_T) @[build/NutShell.fir.opt.mlir 38417:27]
    node _io_in_ready_T_2 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38419:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_1, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 38421:27]
    node _io_in_ready_T_4 = eq(hitWB, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38423:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 38425:27]
    node _io_in_ready_T_6 = and(_io_in_ready_T_5, io.mdReady) @[build/NutShell.fir.opt.mlir 38427:27]
    node _io_in_ready_T_7 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38429:27]
    node _io_in_ready_T_8 = eq(_io_in_ready_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38431:27]
    node _io_in_ready_T_9 = eq(loadPF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38433:27]
    node _io_in_ready_T_10 = and(_io_in_ready_T_8, _io_in_ready_T_9) @[build/NutShell.fir.opt.mlir 38435:28]
    node _io_in_ready_T_11 = eq(storePF, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38437:28]
    node _io_in_ready_T_12 = and(_io_in_ready_T_10, _io_in_ready_T_11) @[build/NutShell.fir.opt.mlir 38439:28]
    node _io_in_ready_T_13 = and(_io_in_ready_T_6, _io_in_ready_T_12) @[build/NutShell.fir.opt.mlir 38441:28]
    connect io.in.ready, _io_in_ready_T_13 @[build/NutShell.fir.opt.mlir 38442:7]
    node _io_ipf_T = mux(hit, hitinstrPF, missIPF) @[build/NutShell.fir.opt.mlir 38444:20]
    connect io.ipf, _io_ipf_T @[build/NutShell.fir.opt.mlir 38445:7]
    node _io_isFinish_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 38447:25]
    node _io_isFinish_T_1 = or(io.pf.loadPF, io.pf.storePF) @[build/NutShell.fir.opt.mlir 38449:27]
    node _io_isFinish_T_2 = or(_io_isFinish_T, _io_isFinish_T_1) @[build/NutShell.fir.opt.mlir 38451:27]
    connect io.isFinish, _io_isFinish_T_2 @[build/NutShell.fir.opt.mlir 38452:7]
    inst LogPerfHelper_1 of LogPerfHelper_31 @[build/NutShell.fir.opt.mlir 38453:107]
    wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 38454:22]
    connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 38459:7]
    connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 38460:7]
    connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 38461:7]
    connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 38462:7]
    node _T_74 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38464:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 38465:7]
      node _T_75 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38467:18]
      node _T_76 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38469:18]
      when _T_76 : @[build/NutShell.fir.opt.mlir 38470:9]
        skip @[build/NutShell.fir.opt.mlir 38471:11]
      node _T_77 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38474:18]
      node _T_78 = eq(_T_77, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38476:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 38477:9]
        skip @[build/NutShell.fir.opt.mlir 38478:11]
    node _T_79 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38482:16]
    when _T_79 : @[build/NutShell.fir.opt.mlir 38483:7]
      node _T_80 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38485:18]
      node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38487:18]
      when _T_81 : @[build/NutShell.fir.opt.mlir 38488:9]
        skip @[build/NutShell.fir.opt.mlir 38489:11]
      node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38492:18]
      node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38494:18]
      when _T_83 : @[build/NutShell.fir.opt.mlir 38495:9]
        skip @[build/NutShell.fir.opt.mlir 38496:11]
    node lo_lo = cat(hitFlag.r, hitFlag.v) @[build/NutShell.fir.opt.mlir 38500:16]
    node lo_hi = cat(hitFlag.x, hitFlag.w) @[build/NutShell.fir.opt.mlir 38502:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 38504:13]
    node hi_lo = cat(hitFlag.g, hitFlag.u) @[build/NutShell.fir.opt.mlir 38506:16]
    node hi_hi = cat(hitFlag.d, hitFlag.a) @[build/NutShell.fir.opt.mlir 38508:16]
    node hi_1 = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 38510:15]
    node _T_84 = cat(hi_1, lo) @[build/NutShell.fir.opt.mlir 38512:16]
    node _T_85 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38514:16]
    when _T_85 : @[build/NutShell.fir.opt.mlir 38515:7]
      node _T_86 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38517:18]
      node _T_87 = eq(_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38519:18]
      when _T_87 : @[build/NutShell.fir.opt.mlir 38520:9]
        skip @[build/NutShell.fir.opt.mlir 38521:11]
      node _T_88 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38524:18]
      node _T_89 = eq(_T_88, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38526:18]
      when _T_89 : @[build/NutShell.fir.opt.mlir 38527:9]
        skip @[build/NutShell.fir.opt.mlir 38528:11]
    node lo_lo_1 = cat(memRdata.flag.r, memRdata.flag.v) @[build/NutShell.fir.opt.mlir 38532:18]
    node lo_hi_1 = cat(memRdata.flag.x, memRdata.flag.w) @[build/NutShell.fir.opt.mlir 38534:18]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[build/NutShell.fir.opt.mlir 38536:15]
    node hi_lo_1 = cat(memRdata.flag.g, memRdata.flag.u) @[build/NutShell.fir.opt.mlir 38538:18]
    node hi_hi_1 = cat(memRdata.flag.d, memRdata.flag.a) @[build/NutShell.fir.opt.mlir 38540:18]
    node hi_2 = cat(hi_hi_1, hi_lo_1) @[build/NutShell.fir.opt.mlir 38542:15]
    node _T_90 = cat(hi_2, lo_1) @[build/NutShell.fir.opt.mlir 38544:16]
    node lo_2 = cat(memRdata.rsw, _T_90) @[build/NutShell.fir.opt.mlir 38546:15]
    node hi_3 = cat(memRdata.reserved, memRdata.ppn) @[build/NutShell.fir.opt.mlir 38548:15]
    node _T_91 = cat(hi_3, lo_2) @[build/NutShell.fir.opt.mlir 38550:16]
    node _T_92 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38552:16]
    when _T_92 : @[build/NutShell.fir.opt.mlir 38553:7]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38555:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38557:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 38558:9]
        skip @[build/NutShell.fir.opt.mlir 38559:11]
      node _T_95 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38562:18]
      node _T_96 = eq(_T_95, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38564:18]
      when _T_96 : @[build/NutShell.fir.opt.mlir 38565:9]
        skip @[build/NutShell.fir.opt.mlir 38566:11]
    wire _WIRE_2 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38569:18]
    wire _WIRE_3 : UInt<121> @[build/NutShell.fir.opt.mlir 38576:18]
    connect _WIRE_3, io.md[0] @[build/NutShell.fir.opt.mlir 38577:7]
    node _T_97 = bits(_WIRE_3, 31, 0) @[build/NutShell.fir.opt.mlir 38579:16]
    connect _WIRE_2.pteaddr, _T_97 @[build/NutShell.fir.opt.mlir 38580:7]
    node _T_98 = bits(_WIRE_3, 51, 32) @[build/NutShell.fir.opt.mlir 38582:16]
    connect _WIRE_2.ppn, _T_98 @[build/NutShell.fir.opt.mlir 38583:7]
    node _T_99 = bits(_WIRE_3, 59, 52) @[build/NutShell.fir.opt.mlir 38585:16]
    connect _WIRE_2.flag, _T_99 @[build/NutShell.fir.opt.mlir 38586:7]
    node _T_100 = bits(_WIRE_3, 77, 60) @[build/NutShell.fir.opt.mlir 38588:17]
    connect _WIRE_2.mask, _T_100 @[build/NutShell.fir.opt.mlir 38589:7]
    node _T_101 = bits(_WIRE_3, 93, 78) @[build/NutShell.fir.opt.mlir 38591:17]
    connect _WIRE_2.asid, _T_101 @[build/NutShell.fir.opt.mlir 38592:7]
    node _T_102 = bits(_WIRE_3, 120, 94) @[build/NutShell.fir.opt.mlir 38594:17]
    connect _WIRE_2.vpn, _T_102 @[build/NutShell.fir.opt.mlir 38595:7]
    wire _WIRE_4 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38596:18]
    wire _WIRE_5 : UInt<121> @[build/NutShell.fir.opt.mlir 38603:18]
    connect _WIRE_5, io.md[0] @[build/NutShell.fir.opt.mlir 38604:7]
    node _T_103 = bits(_WIRE_5, 31, 0) @[build/NutShell.fir.opt.mlir 38606:17]
    connect _WIRE_4.pteaddr, _T_103 @[build/NutShell.fir.opt.mlir 38607:7]
    node _T_104 = bits(_WIRE_5, 51, 32) @[build/NutShell.fir.opt.mlir 38609:17]
    connect _WIRE_4.ppn, _T_104 @[build/NutShell.fir.opt.mlir 38610:7]
    node _T_105 = bits(_WIRE_5, 59, 52) @[build/NutShell.fir.opt.mlir 38612:17]
    connect _WIRE_4.flag, _T_105 @[build/NutShell.fir.opt.mlir 38613:7]
    node _T_106 = bits(_WIRE_5, 77, 60) @[build/NutShell.fir.opt.mlir 38615:17]
    connect _WIRE_4.mask, _T_106 @[build/NutShell.fir.opt.mlir 38616:7]
    node _T_107 = bits(_WIRE_5, 93, 78) @[build/NutShell.fir.opt.mlir 38618:17]
    connect _WIRE_4.asid, _T_107 @[build/NutShell.fir.opt.mlir 38619:7]
    node _T_108 = bits(_WIRE_5, 120, 94) @[build/NutShell.fir.opt.mlir 38621:17]
    connect _WIRE_4.vpn, _T_108 @[build/NutShell.fir.opt.mlir 38622:7]
    wire _WIRE_6 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38623:18]
    wire _WIRE_7 : UInt<121> @[build/NutShell.fir.opt.mlir 38630:18]
    connect _WIRE_7, io.md[0] @[build/NutShell.fir.opt.mlir 38631:7]
    node _T_109 = bits(_WIRE_7, 31, 0) @[build/NutShell.fir.opt.mlir 38633:17]
    connect _WIRE_6.pteaddr, _T_109 @[build/NutShell.fir.opt.mlir 38634:7]
    node _T_110 = bits(_WIRE_7, 51, 32) @[build/NutShell.fir.opt.mlir 38636:17]
    connect _WIRE_6.ppn, _T_110 @[build/NutShell.fir.opt.mlir 38637:7]
    node _T_111 = bits(_WIRE_7, 59, 52) @[build/NutShell.fir.opt.mlir 38639:17]
    connect _WIRE_6.flag, _T_111 @[build/NutShell.fir.opt.mlir 38640:7]
    node _T_112 = bits(_WIRE_7, 77, 60) @[build/NutShell.fir.opt.mlir 38642:17]
    connect _WIRE_6.mask, _T_112 @[build/NutShell.fir.opt.mlir 38643:7]
    node _T_113 = bits(_WIRE_7, 93, 78) @[build/NutShell.fir.opt.mlir 38645:17]
    connect _WIRE_6.asid, _T_113 @[build/NutShell.fir.opt.mlir 38646:7]
    node _T_114 = bits(_WIRE_7, 120, 94) @[build/NutShell.fir.opt.mlir 38648:17]
    connect _WIRE_6.vpn, _T_114 @[build/NutShell.fir.opt.mlir 38649:7]
    wire _WIRE_8 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38650:18]
    wire _WIRE_9 : UInt<121> @[build/NutShell.fir.opt.mlir 38657:18]
    connect _WIRE_9, io.md[1] @[build/NutShell.fir.opt.mlir 38658:7]
    node _T_115 = bits(_WIRE_9, 31, 0) @[build/NutShell.fir.opt.mlir 38660:17]
    connect _WIRE_8.pteaddr, _T_115 @[build/NutShell.fir.opt.mlir 38661:7]
    node _T_116 = bits(_WIRE_9, 51, 32) @[build/NutShell.fir.opt.mlir 38663:17]
    connect _WIRE_8.ppn, _T_116 @[build/NutShell.fir.opt.mlir 38664:7]
    node _T_117 = bits(_WIRE_9, 59, 52) @[build/NutShell.fir.opt.mlir 38666:17]
    connect _WIRE_8.flag, _T_117 @[build/NutShell.fir.opt.mlir 38667:7]
    node _T_118 = bits(_WIRE_9, 77, 60) @[build/NutShell.fir.opt.mlir 38669:17]
    connect _WIRE_8.mask, _T_118 @[build/NutShell.fir.opt.mlir 38670:7]
    node _T_119 = bits(_WIRE_9, 93, 78) @[build/NutShell.fir.opt.mlir 38672:17]
    connect _WIRE_8.asid, _T_119 @[build/NutShell.fir.opt.mlir 38673:7]
    node _T_120 = bits(_WIRE_9, 120, 94) @[build/NutShell.fir.opt.mlir 38675:17]
    connect _WIRE_8.vpn, _T_120 @[build/NutShell.fir.opt.mlir 38676:7]
    wire _WIRE_10 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38677:19]
    wire _WIRE_11 : UInt<121> @[build/NutShell.fir.opt.mlir 38684:19]
    connect _WIRE_11, io.md[1] @[build/NutShell.fir.opt.mlir 38685:7]
    node _T_121 = bits(_WIRE_11, 31, 0) @[build/NutShell.fir.opt.mlir 38687:17]
    connect _WIRE_10.pteaddr, _T_121 @[build/NutShell.fir.opt.mlir 38688:7]
    node _T_122 = bits(_WIRE_11, 51, 32) @[build/NutShell.fir.opt.mlir 38690:17]
    connect _WIRE_10.ppn, _T_122 @[build/NutShell.fir.opt.mlir 38691:7]
    node _T_123 = bits(_WIRE_11, 59, 52) @[build/NutShell.fir.opt.mlir 38693:17]
    connect _WIRE_10.flag, _T_123 @[build/NutShell.fir.opt.mlir 38694:7]
    node _T_124 = bits(_WIRE_11, 77, 60) @[build/NutShell.fir.opt.mlir 38696:17]
    connect _WIRE_10.mask, _T_124 @[build/NutShell.fir.opt.mlir 38697:7]
    node _T_125 = bits(_WIRE_11, 93, 78) @[build/NutShell.fir.opt.mlir 38699:17]
    connect _WIRE_10.asid, _T_125 @[build/NutShell.fir.opt.mlir 38700:7]
    node _T_126 = bits(_WIRE_11, 120, 94) @[build/NutShell.fir.opt.mlir 38702:17]
    connect _WIRE_10.vpn, _T_126 @[build/NutShell.fir.opt.mlir 38703:7]
    wire _WIRE_12 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38704:19]
    wire _WIRE_13 : UInt<121> @[build/NutShell.fir.opt.mlir 38711:19]
    connect _WIRE_13, io.md[1] @[build/NutShell.fir.opt.mlir 38712:7]
    node _T_127 = bits(_WIRE_13, 31, 0) @[build/NutShell.fir.opt.mlir 38714:17]
    connect _WIRE_12.pteaddr, _T_127 @[build/NutShell.fir.opt.mlir 38715:7]
    node _T_128 = bits(_WIRE_13, 51, 32) @[build/NutShell.fir.opt.mlir 38717:17]
    connect _WIRE_12.ppn, _T_128 @[build/NutShell.fir.opt.mlir 38718:7]
    node _T_129 = bits(_WIRE_13, 59, 52) @[build/NutShell.fir.opt.mlir 38720:17]
    connect _WIRE_12.flag, _T_129 @[build/NutShell.fir.opt.mlir 38721:7]
    node _T_130 = bits(_WIRE_13, 77, 60) @[build/NutShell.fir.opt.mlir 38723:17]
    connect _WIRE_12.mask, _T_130 @[build/NutShell.fir.opt.mlir 38724:7]
    node _T_131 = bits(_WIRE_13, 93, 78) @[build/NutShell.fir.opt.mlir 38726:17]
    connect _WIRE_12.asid, _T_131 @[build/NutShell.fir.opt.mlir 38727:7]
    node _T_132 = bits(_WIRE_13, 120, 94) @[build/NutShell.fir.opt.mlir 38729:17]
    connect _WIRE_12.vpn, _T_132 @[build/NutShell.fir.opt.mlir 38730:7]
    wire _WIRE_14 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38731:19]
    wire _WIRE_15 : UInt<121> @[build/NutShell.fir.opt.mlir 38738:19]
    connect _WIRE_15, io.md[2] @[build/NutShell.fir.opt.mlir 38739:7]
    node _T_133 = bits(_WIRE_15, 31, 0) @[build/NutShell.fir.opt.mlir 38741:17]
    connect _WIRE_14.pteaddr, _T_133 @[build/NutShell.fir.opt.mlir 38742:7]
    node _T_134 = bits(_WIRE_15, 51, 32) @[build/NutShell.fir.opt.mlir 38744:17]
    connect _WIRE_14.ppn, _T_134 @[build/NutShell.fir.opt.mlir 38745:7]
    node _T_135 = bits(_WIRE_15, 59, 52) @[build/NutShell.fir.opt.mlir 38747:17]
    connect _WIRE_14.flag, _T_135 @[build/NutShell.fir.opt.mlir 38748:7]
    node _T_136 = bits(_WIRE_15, 77, 60) @[build/NutShell.fir.opt.mlir 38750:17]
    connect _WIRE_14.mask, _T_136 @[build/NutShell.fir.opt.mlir 38751:7]
    node _T_137 = bits(_WIRE_15, 93, 78) @[build/NutShell.fir.opt.mlir 38753:17]
    connect _WIRE_14.asid, _T_137 @[build/NutShell.fir.opt.mlir 38754:7]
    node _T_138 = bits(_WIRE_15, 120, 94) @[build/NutShell.fir.opt.mlir 38756:17]
    connect _WIRE_14.vpn, _T_138 @[build/NutShell.fir.opt.mlir 38757:7]
    wire _WIRE_16 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38758:19]
    wire _WIRE_17 : UInt<121> @[build/NutShell.fir.opt.mlir 38765:19]
    connect _WIRE_17, io.md[2] @[build/NutShell.fir.opt.mlir 38766:7]
    node _T_139 = bits(_WIRE_17, 31, 0) @[build/NutShell.fir.opt.mlir 38768:17]
    connect _WIRE_16.pteaddr, _T_139 @[build/NutShell.fir.opt.mlir 38769:7]
    node _T_140 = bits(_WIRE_17, 51, 32) @[build/NutShell.fir.opt.mlir 38771:17]
    connect _WIRE_16.ppn, _T_140 @[build/NutShell.fir.opt.mlir 38772:7]
    node _T_141 = bits(_WIRE_17, 59, 52) @[build/NutShell.fir.opt.mlir 38774:17]
    connect _WIRE_16.flag, _T_141 @[build/NutShell.fir.opt.mlir 38775:7]
    node _T_142 = bits(_WIRE_17, 77, 60) @[build/NutShell.fir.opt.mlir 38777:17]
    connect _WIRE_16.mask, _T_142 @[build/NutShell.fir.opt.mlir 38778:7]
    node _T_143 = bits(_WIRE_17, 93, 78) @[build/NutShell.fir.opt.mlir 38780:17]
    connect _WIRE_16.asid, _T_143 @[build/NutShell.fir.opt.mlir 38781:7]
    node _T_144 = bits(_WIRE_17, 120, 94) @[build/NutShell.fir.opt.mlir 38783:17]
    connect _WIRE_16.vpn, _T_144 @[build/NutShell.fir.opt.mlir 38784:7]
    wire _WIRE_18 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38785:19]
    wire _WIRE_19 : UInt<121> @[build/NutShell.fir.opt.mlir 38792:19]
    connect _WIRE_19, io.md[2] @[build/NutShell.fir.opt.mlir 38793:7]
    node _T_145 = bits(_WIRE_19, 31, 0) @[build/NutShell.fir.opt.mlir 38795:17]
    connect _WIRE_18.pteaddr, _T_145 @[build/NutShell.fir.opt.mlir 38796:7]
    node _T_146 = bits(_WIRE_19, 51, 32) @[build/NutShell.fir.opt.mlir 38798:17]
    connect _WIRE_18.ppn, _T_146 @[build/NutShell.fir.opt.mlir 38799:7]
    node _T_147 = bits(_WIRE_19, 59, 52) @[build/NutShell.fir.opt.mlir 38801:17]
    connect _WIRE_18.flag, _T_147 @[build/NutShell.fir.opt.mlir 38802:7]
    node _T_148 = bits(_WIRE_19, 77, 60) @[build/NutShell.fir.opt.mlir 38804:17]
    connect _WIRE_18.mask, _T_148 @[build/NutShell.fir.opt.mlir 38805:7]
    node _T_149 = bits(_WIRE_19, 93, 78) @[build/NutShell.fir.opt.mlir 38807:17]
    connect _WIRE_18.asid, _T_149 @[build/NutShell.fir.opt.mlir 38808:7]
    node _T_150 = bits(_WIRE_19, 120, 94) @[build/NutShell.fir.opt.mlir 38810:17]
    connect _WIRE_18.vpn, _T_150 @[build/NutShell.fir.opt.mlir 38811:7]
    wire _WIRE_20 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38812:19]
    wire _WIRE_21 : UInt<121> @[build/NutShell.fir.opt.mlir 38819:19]
    connect _WIRE_21, io.md[3] @[build/NutShell.fir.opt.mlir 38820:7]
    node _T_151 = bits(_WIRE_21, 31, 0) @[build/NutShell.fir.opt.mlir 38822:17]
    connect _WIRE_20.pteaddr, _T_151 @[build/NutShell.fir.opt.mlir 38823:7]
    node _T_152 = bits(_WIRE_21, 51, 32) @[build/NutShell.fir.opt.mlir 38825:17]
    connect _WIRE_20.ppn, _T_152 @[build/NutShell.fir.opt.mlir 38826:7]
    node _T_153 = bits(_WIRE_21, 59, 52) @[build/NutShell.fir.opt.mlir 38828:17]
    connect _WIRE_20.flag, _T_153 @[build/NutShell.fir.opt.mlir 38829:7]
    node _T_154 = bits(_WIRE_21, 77, 60) @[build/NutShell.fir.opt.mlir 38831:17]
    connect _WIRE_20.mask, _T_154 @[build/NutShell.fir.opt.mlir 38832:7]
    node _T_155 = bits(_WIRE_21, 93, 78) @[build/NutShell.fir.opt.mlir 38834:17]
    connect _WIRE_20.asid, _T_155 @[build/NutShell.fir.opt.mlir 38835:7]
    node _T_156 = bits(_WIRE_21, 120, 94) @[build/NutShell.fir.opt.mlir 38837:17]
    connect _WIRE_20.vpn, _T_156 @[build/NutShell.fir.opt.mlir 38838:7]
    wire _WIRE_22 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38839:19]
    wire _WIRE_23 : UInt<121> @[build/NutShell.fir.opt.mlir 38846:19]
    connect _WIRE_23, io.md[3] @[build/NutShell.fir.opt.mlir 38847:7]
    node _T_157 = bits(_WIRE_23, 31, 0) @[build/NutShell.fir.opt.mlir 38849:17]
    connect _WIRE_22.pteaddr, _T_157 @[build/NutShell.fir.opt.mlir 38850:7]
    node _T_158 = bits(_WIRE_23, 51, 32) @[build/NutShell.fir.opt.mlir 38852:17]
    connect _WIRE_22.ppn, _T_158 @[build/NutShell.fir.opt.mlir 38853:7]
    node _T_159 = bits(_WIRE_23, 59, 52) @[build/NutShell.fir.opt.mlir 38855:17]
    connect _WIRE_22.flag, _T_159 @[build/NutShell.fir.opt.mlir 38856:7]
    node _T_160 = bits(_WIRE_23, 77, 60) @[build/NutShell.fir.opt.mlir 38858:17]
    connect _WIRE_22.mask, _T_160 @[build/NutShell.fir.opt.mlir 38859:7]
    node _T_161 = bits(_WIRE_23, 93, 78) @[build/NutShell.fir.opt.mlir 38861:17]
    connect _WIRE_22.asid, _T_161 @[build/NutShell.fir.opt.mlir 38862:7]
    node _T_162 = bits(_WIRE_23, 120, 94) @[build/NutShell.fir.opt.mlir 38864:17]
    connect _WIRE_22.vpn, _T_162 @[build/NutShell.fir.opt.mlir 38865:7]
    wire _WIRE_24 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38866:19]
    wire _WIRE_25 : UInt<121> @[build/NutShell.fir.opt.mlir 38873:19]
    connect _WIRE_25, io.md[3] @[build/NutShell.fir.opt.mlir 38874:7]
    node _T_163 = bits(_WIRE_25, 31, 0) @[build/NutShell.fir.opt.mlir 38876:17]
    connect _WIRE_24.pteaddr, _T_163 @[build/NutShell.fir.opt.mlir 38877:7]
    node _T_164 = bits(_WIRE_25, 51, 32) @[build/NutShell.fir.opt.mlir 38879:17]
    connect _WIRE_24.ppn, _T_164 @[build/NutShell.fir.opt.mlir 38880:7]
    node _T_165 = bits(_WIRE_25, 59, 52) @[build/NutShell.fir.opt.mlir 38882:17]
    connect _WIRE_24.flag, _T_165 @[build/NutShell.fir.opt.mlir 38883:7]
    node _T_166 = bits(_WIRE_25, 77, 60) @[build/NutShell.fir.opt.mlir 38885:17]
    connect _WIRE_24.mask, _T_166 @[build/NutShell.fir.opt.mlir 38886:7]
    node _T_167 = bits(_WIRE_25, 93, 78) @[build/NutShell.fir.opt.mlir 38888:17]
    connect _WIRE_24.asid, _T_167 @[build/NutShell.fir.opt.mlir 38889:7]
    node _T_168 = bits(_WIRE_25, 120, 94) @[build/NutShell.fir.opt.mlir 38891:17]
    connect _WIRE_24.vpn, _T_168 @[build/NutShell.fir.opt.mlir 38892:7]
    node _T_169 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 38894:17]
    when _T_169 : @[build/NutShell.fir.opt.mlir 38895:7]
      node _T_170 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38897:19]
      node _T_171 = eq(_T_170, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38899:19]
      when _T_171 : @[build/NutShell.fir.opt.mlir 38900:9]
        skip @[build/NutShell.fir.opt.mlir 38901:11]
      node _T_172 = asUInt(reset) @[build/NutShell.fir.opt.mlir 38904:19]
      node _T_173 = eq(_T_172, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 38906:19]
      when _T_173 : @[build/NutShell.fir.opt.mlir 38907:9]
        skip @[build/NutShell.fir.opt.mlir 38908:11]
    wire _WIRE_26 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38911:19]
    wire _WIRE_27 : UInt<121> @[build/NutShell.fir.opt.mlir 38918:19]
    connect _WIRE_27, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38919:7]
    node _T_174 = bits(_WIRE_27, 31, 0) @[build/NutShell.fir.opt.mlir 38921:17]
    connect _WIRE_26.pteaddr, _T_174 @[build/NutShell.fir.opt.mlir 38922:7]
    node _T_175 = bits(_WIRE_27, 51, 32) @[build/NutShell.fir.opt.mlir 38924:17]
    connect _WIRE_26.ppn, _T_175 @[build/NutShell.fir.opt.mlir 38925:7]
    node _T_176 = bits(_WIRE_27, 59, 52) @[build/NutShell.fir.opt.mlir 38927:17]
    connect _WIRE_26.flag, _T_176 @[build/NutShell.fir.opt.mlir 38928:7]
    node _T_177 = bits(_WIRE_27, 77, 60) @[build/NutShell.fir.opt.mlir 38930:17]
    connect _WIRE_26.mask, _T_177 @[build/NutShell.fir.opt.mlir 38931:7]
    node _T_178 = bits(_WIRE_27, 93, 78) @[build/NutShell.fir.opt.mlir 38933:17]
    connect _WIRE_26.asid, _T_178 @[build/NutShell.fir.opt.mlir 38934:7]
    node _T_179 = bits(_WIRE_27, 120, 94) @[build/NutShell.fir.opt.mlir 38936:17]
    connect _WIRE_26.vpn, _T_179 @[build/NutShell.fir.opt.mlir 38937:7]
    wire _WIRE_28 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38938:19]
    wire _WIRE_29 : UInt<121> @[build/NutShell.fir.opt.mlir 38945:19]
    connect _WIRE_29, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38946:7]
    node _T_180 = bits(_WIRE_29, 31, 0) @[build/NutShell.fir.opt.mlir 38948:17]
    connect _WIRE_28.pteaddr, _T_180 @[build/NutShell.fir.opt.mlir 38949:7]
    node _T_181 = bits(_WIRE_29, 51, 32) @[build/NutShell.fir.opt.mlir 38951:17]
    connect _WIRE_28.ppn, _T_181 @[build/NutShell.fir.opt.mlir 38952:7]
    node _T_182 = bits(_WIRE_29, 59, 52) @[build/NutShell.fir.opt.mlir 38954:17]
    connect _WIRE_28.flag, _T_182 @[build/NutShell.fir.opt.mlir 38955:7]
    node _T_183 = bits(_WIRE_29, 77, 60) @[build/NutShell.fir.opt.mlir 38957:17]
    connect _WIRE_28.mask, _T_183 @[build/NutShell.fir.opt.mlir 38958:7]
    node _T_184 = bits(_WIRE_29, 93, 78) @[build/NutShell.fir.opt.mlir 38960:17]
    connect _WIRE_28.asid, _T_184 @[build/NutShell.fir.opt.mlir 38961:7]
    node _T_185 = bits(_WIRE_29, 120, 94) @[build/NutShell.fir.opt.mlir 38963:17]
    connect _WIRE_28.vpn, _T_185 @[build/NutShell.fir.opt.mlir 38964:7]
    wire _WIRE_30 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38965:19]
    wire _WIRE_31 : UInt<121> @[build/NutShell.fir.opt.mlir 38972:19]
    connect _WIRE_31, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 38973:7]
    node _T_186 = bits(_WIRE_31, 31, 0) @[build/NutShell.fir.opt.mlir 38975:17]
    connect _WIRE_30.pteaddr, _T_186 @[build/NutShell.fir.opt.mlir 38976:7]
    node _T_187 = bits(_WIRE_31, 51, 32) @[build/NutShell.fir.opt.mlir 38978:17]
    connect _WIRE_30.ppn, _T_187 @[build/NutShell.fir.opt.mlir 38979:7]
    node _T_188 = bits(_WIRE_31, 59, 52) @[build/NutShell.fir.opt.mlir 38981:17]
    connect _WIRE_30.flag, _T_188 @[build/NutShell.fir.opt.mlir 38982:7]
    node _T_189 = bits(_WIRE_31, 77, 60) @[build/NutShell.fir.opt.mlir 38984:17]
    connect _WIRE_30.mask, _T_189 @[build/NutShell.fir.opt.mlir 38985:7]
    node _T_190 = bits(_WIRE_31, 93, 78) @[build/NutShell.fir.opt.mlir 38987:17]
    connect _WIRE_30.asid, _T_190 @[build/NutShell.fir.opt.mlir 38988:7]
    node _T_191 = bits(_WIRE_31, 120, 94) @[build/NutShell.fir.opt.mlir 38990:17]
    connect _WIRE_30.vpn, _T_191 @[build/NutShell.fir.opt.mlir 38991:7]
    wire _WIRE_32 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 38992:19]
    wire _WIRE_33 : UInt<121> @[build/NutShell.fir.opt.mlir 38999:19]
    connect _WIRE_33, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 39000:7]
    node _T_192 = bits(_WIRE_33, 31, 0) @[build/NutShell.fir.opt.mlir 39002:17]
    connect _WIRE_32.pteaddr, _T_192 @[build/NutShell.fir.opt.mlir 39003:7]
    node _T_193 = bits(_WIRE_33, 51, 32) @[build/NutShell.fir.opt.mlir 39005:17]
    connect _WIRE_32.ppn, _T_193 @[build/NutShell.fir.opt.mlir 39006:7]
    node _T_194 = bits(_WIRE_33, 59, 52) @[build/NutShell.fir.opt.mlir 39008:17]
    connect _WIRE_32.flag, _T_194 @[build/NutShell.fir.opt.mlir 39009:7]
    node _T_195 = bits(_WIRE_33, 77, 60) @[build/NutShell.fir.opt.mlir 39011:17]
    connect _WIRE_32.mask, _T_195 @[build/NutShell.fir.opt.mlir 39012:7]
    node _T_196 = bits(_WIRE_33, 93, 78) @[build/NutShell.fir.opt.mlir 39014:17]
    connect _WIRE_32.asid, _T_196 @[build/NutShell.fir.opt.mlir 39015:7]
    node _T_197 = bits(_WIRE_33, 120, 94) @[build/NutShell.fir.opt.mlir 39017:17]
    connect _WIRE_32.vpn, _T_197 @[build/NutShell.fir.opt.mlir 39018:7]
    wire _WIRE_34 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 39019:19]
    wire _WIRE_35 : UInt<121> @[build/NutShell.fir.opt.mlir 39026:19]
    connect _WIRE_35, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 39027:7]
    node _T_198 = bits(_WIRE_35, 31, 0) @[build/NutShell.fir.opt.mlir 39029:17]
    connect _WIRE_34.pteaddr, _T_198 @[build/NutShell.fir.opt.mlir 39030:7]
    node _T_199 = bits(_WIRE_35, 51, 32) @[build/NutShell.fir.opt.mlir 39032:17]
    connect _WIRE_34.ppn, _T_199 @[build/NutShell.fir.opt.mlir 39033:7]
    node _T_200 = bits(_WIRE_35, 59, 52) @[build/NutShell.fir.opt.mlir 39035:17]
    connect _WIRE_34.flag, _T_200 @[build/NutShell.fir.opt.mlir 39036:7]
    node _T_201 = bits(_WIRE_35, 77, 60) @[build/NutShell.fir.opt.mlir 39038:17]
    connect _WIRE_34.mask, _T_201 @[build/NutShell.fir.opt.mlir 39039:7]
    node _T_202 = bits(_WIRE_35, 93, 78) @[build/NutShell.fir.opt.mlir 39041:17]
    connect _WIRE_34.asid, _T_202 @[build/NutShell.fir.opt.mlir 39042:7]
    node _T_203 = bits(_WIRE_35, 120, 94) @[build/NutShell.fir.opt.mlir 39044:17]
    connect _WIRE_34.vpn, _T_203 @[build/NutShell.fir.opt.mlir 39045:7]
    wire _WIRE_36 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 39046:19]
    wire _WIRE_37 : UInt<121> @[build/NutShell.fir.opt.mlir 39053:19]
    connect _WIRE_37, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 39054:7]
    node _T_204 = bits(_WIRE_37, 31, 0) @[build/NutShell.fir.opt.mlir 39056:17]
    connect _WIRE_36.pteaddr, _T_204 @[build/NutShell.fir.opt.mlir 39057:7]
    node _T_205 = bits(_WIRE_37, 51, 32) @[build/NutShell.fir.opt.mlir 39059:17]
    connect _WIRE_36.ppn, _T_205 @[build/NutShell.fir.opt.mlir 39060:7]
    node _T_206 = bits(_WIRE_37, 59, 52) @[build/NutShell.fir.opt.mlir 39062:17]
    connect _WIRE_36.flag, _T_206 @[build/NutShell.fir.opt.mlir 39063:7]
    node _T_207 = bits(_WIRE_37, 77, 60) @[build/NutShell.fir.opt.mlir 39065:17]
    connect _WIRE_36.mask, _T_207 @[build/NutShell.fir.opt.mlir 39066:7]
    node _T_208 = bits(_WIRE_37, 93, 78) @[build/NutShell.fir.opt.mlir 39068:17]
    connect _WIRE_36.asid, _T_208 @[build/NutShell.fir.opt.mlir 39069:7]
    node _T_209 = bits(_WIRE_37, 120, 94) @[build/NutShell.fir.opt.mlir 39071:17]
    connect _WIRE_36.vpn, _T_209 @[build/NutShell.fir.opt.mlir 39072:7]
    wire _WIRE_38 : { vpn : UInt<27>, asid : UInt<16>, mask : UInt<18>, flag : UInt<8>, ppn : UInt<20>, pteaddr : UInt<32> } @[build/NutShell.fir.opt.mlir 39073:19]
    wire _WIRE_39 : UInt<121> @[build/NutShell.fir.opt.mlir 39080:19]
    connect _WIRE_39, io.mdWrite.wdata @[build/NutShell.fir.opt.mlir 39081:7]
    node _T_210 = bits(_WIRE_39, 31, 0) @[build/NutShell.fir.opt.mlir 39083:17]
    connect _WIRE_38.pteaddr, _T_210 @[build/NutShell.fir.opt.mlir 39084:7]
    node _T_211 = bits(_WIRE_39, 51, 32) @[build/NutShell.fir.opt.mlir 39086:17]
    connect _WIRE_38.ppn, _T_211 @[build/NutShell.fir.opt.mlir 39087:7]
    node _T_212 = bits(_WIRE_39, 59, 52) @[build/NutShell.fir.opt.mlir 39089:17]
    connect _WIRE_38.flag, _T_212 @[build/NutShell.fir.opt.mlir 39090:7]
    node _T_213 = bits(_WIRE_39, 77, 60) @[build/NutShell.fir.opt.mlir 39092:17]
    connect _WIRE_38.mask, _T_213 @[build/NutShell.fir.opt.mlir 39093:7]
    node _T_214 = bits(_WIRE_39, 93, 78) @[build/NutShell.fir.opt.mlir 39095:17]
    connect _WIRE_38.asid, _T_214 @[build/NutShell.fir.opt.mlir 39096:7]
    node _T_215 = bits(_WIRE_39, 120, 94) @[build/NutShell.fir.opt.mlir 39098:17]
    connect _WIRE_38.vpn, _T_215 @[build/NutShell.fir.opt.mlir 39099:7]
    node _T_216 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 39101:17]
    when _T_216 : @[build/NutShell.fir.opt.mlir 39102:7]
      node _T_217 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39104:19]
      node _T_218 = eq(_T_217, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39106:19]
      when _T_218 : @[build/NutShell.fir.opt.mlir 39107:9]
        skip @[build/NutShell.fir.opt.mlir 39108:11]
      node _T_219 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39111:19]
      node _T_220 = eq(_T_219, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39113:19]
      when _T_220 : @[build/NutShell.fir.opt.mlir 39114:9]
        skip @[build/NutShell.fir.opt.mlir 39115:11]
    node _T_221 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 39119:17]
    when _T_221 : @[build/NutShell.fir.opt.mlir 39120:7]
      node _T_222 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39122:19]
      node _T_223 = eq(_T_222, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39124:19]
      when _T_223 : @[build/NutShell.fir.opt.mlir 39125:9]
        skip @[build/NutShell.fir.opt.mlir 39126:11]
      node _T_224 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39129:19]
      node _T_225 = eq(_T_224, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39131:19]
      when _T_225 : @[build/NutShell.fir.opt.mlir 39132:9]
        skip @[build/NutShell.fir.opt.mlir 39133:11]
    node _T_226 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 39137:17]
    when _T_226 : @[build/NutShell.fir.opt.mlir 39138:7]
      node _T_227 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39140:19]
      node _T_228 = eq(_T_227, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39142:19]
      when _T_228 : @[build/NutShell.fir.opt.mlir 39143:9]
        skip @[build/NutShell.fir.opt.mlir 39144:11]
      node _T_229 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39147:19]
      node _T_230 = eq(_T_229, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39149:19]
      when _T_230 : @[build/NutShell.fir.opt.mlir 39150:9]
        skip @[build/NutShell.fir.opt.mlir 39151:11]
    connect isAMO, isAMO__bore @[build/NutShell.fir.opt.mlir 39154:7]

  module EmbeddedTLBEmpty_1 : @[build/NutShell.fir.opt.mlir 39156:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39156:50]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39156:76]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 39156:103]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 39165:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 39166:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 39167:7]

  module EmbeddedTLBMD_1 : @[build/NutShell.fir.opt.mlir 39169:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39169:47]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39169:73]
    output io : { tlbmd : UInt<121>[4], flip write : { wen : UInt<1>, windex : UInt<4>, waymask : UInt<4>, wdata : UInt<121> }, flip rindex : UInt<4>, ready : UInt<1> } @[build/NutShell.fir.opt.mlir 39169:100]

    reg tlbmd : UInt<121>[4][16], clock @[build/NutShell.fir.opt.mlir 39178:16]
    connect io.tlbmd, tlbmd[io.rindex] @[build/NutShell.fir.opt.mlir 39180:7]
    regreset resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39182:21]
    regreset resetSet : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 39184:19]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 39185:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39188:7]
    when resetState : @[build/NutShell.fir.opt.mlir 39190:7]
      node wrap_wrap = eq(resetSet, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 39192:22]
      node _wrap_value_T = add(resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 39194:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 39196:28]
      connect resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 39197:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 39198:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 39200:7]
      connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39202:9]
    node wen = mux(resetState, UInt<1>(1), io.write.wen) @[build/NutShell.fir.opt.mlir 39205:14]
    node setIdx = mux(resetState, resetSet, io.write.windex) @[build/NutShell.fir.opt.mlir 39207:17]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 39209:21]
    node waymask = mux(resetState, _waymask_T, io.write.waymask) @[build/NutShell.fir.opt.mlir 39211:18]
    node dataword = mux(resetState, UInt<1>(0), io.write.wdata) @[build/NutShell.fir.opt.mlir 39213:19]
    wire wdata : UInt<121>[4] @[build/NutShell.fir.opt.mlir 39214:16]
    connect wdata[0], dataword @[build/NutShell.fir.opt.mlir 39219:7]
    connect wdata[1], dataword @[build/NutShell.fir.opt.mlir 39220:7]
    connect wdata[2], dataword @[build/NutShell.fir.opt.mlir 39221:7]
    connect wdata[3], dataword @[build/NutShell.fir.opt.mlir 39222:7]
    node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 39224:13]
    node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 39226:15]
    node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 39228:15]
    node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 39230:15]
    node _T_4 = and(wen, _T) @[build/NutShell.fir.opt.mlir 39232:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 39233:7]
      connect tlbmd[setIdx][0], wdata[0] @[build/NutShell.fir.opt.mlir 39236:9]
    node _T_5 = and(wen, _T_1) @[build/NutShell.fir.opt.mlir 39239:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 39240:7]
      connect tlbmd[setIdx][1], wdata[1] @[build/NutShell.fir.opt.mlir 39243:9]
    node _T_6 = and(wen, _T_2) @[build/NutShell.fir.opt.mlir 39246:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 39247:7]
      connect tlbmd[setIdx][2], wdata[2] @[build/NutShell.fir.opt.mlir 39250:9]
    node _T_7 = and(wen, _T_3) @[build/NutShell.fir.opt.mlir 39253:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 39254:7]
      connect tlbmd[setIdx][3], wdata[3] @[build/NutShell.fir.opt.mlir 39257:9]
    node _io_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39260:22]
    connect io.ready, _io_ready_T @[build/NutShell.fir.opt.mlir 39261:7]

  extmodule LogPerfHelper_32 : @[build/NutShell.fir.opt.mlir 39263:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39263:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39263:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39263:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39263:141]
    defname = LogPerfHelper

  module EmbeddedTLB_1 : @[build/NutShell.fir.opt.mlir 39264:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39264:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39264:71]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<1>, csrMMU : { flip privilegeMode : UInt<2>, flip status_sum : UInt<1>, flip status_mxr : UInt<1>, loadPF : UInt<1>, storePF : UInt<1>, addr : UInt<39> }, flip cacheEmpty : UInt<1>, ipf : UInt<1> } @[build/NutShell.fir.opt.mlir 39264:98]
    input tlbExec_isAMO__bore : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1103]
    output _WIRE_2__bore : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1146]
    output _WIRE_2__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1183]
    output _WIRE_2__bore_1 : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1222]
    output _WIRE_2__bore_2 : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1261]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1300]
    output _WIRE__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1335]
    input satp__bore : UInt<64> @[build/NutShell.fir.opt.mlir 39264:1371]
    input flushTLB__bore : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1405]
    output _WIRE_1__bore : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1443]
    output _WIRE_1__bore_0 : UInt<1> @[build/NutShell.fir.opt.mlir 39264:1480]

    wire satp : UInt<64> @[build/NutShell.fir.opt.mlir 39311:15]
    connect satp, UInt<64>(0) @[build/NutShell.fir.opt.mlir 39314:7]
    inst tlbExec of EmbeddedTLBExec_1 @[build/NutShell.fir.opt.mlir 39315:77]
    connect tlbExec.clock, clock @[build/NutShell.fir.opt.mlir 39346:7]
    connect tlbExec.reset, reset @[build/NutShell.fir.opt.mlir 39347:7]
    inst tlbEmpty of EmbeddedTLBEmpty_1 @[build/NutShell.fir.opt.mlir 39348:56]
    connect tlbEmpty.clock, clock @[build/NutShell.fir.opt.mlir 39362:7]
    connect tlbEmpty.reset, reset @[build/NutShell.fir.opt.mlir 39363:7]
    inst mdTLB of EmbeddedTLBMD_1 @[build/NutShell.fir.opt.mlir 39364:47]
    connect mdTLB.clock, clock @[build/NutShell.fir.opt.mlir 39369:7]
    connect mdTLB.reset, reset @[build/NutShell.fir.opt.mlir 39370:7]
    wire mdUpdate : UInt<1> @[build/NutShell.fir.opt.mlir 39371:19]
    connect tlbExec.io.flush, io.flush @[build/NutShell.fir.opt.mlir 39372:7]
    connect tlbExec.io.satp, satp @[build/NutShell.fir.opt.mlir 39373:7]
    connect io.mem.resp.ready, tlbExec.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 39374:7]
    connect tlbExec.io.mem.resp.valid, io.mem.resp.valid @[build/NutShell.fir.opt.mlir 39375:7]
    connect tlbExec.io.mem.resp.bits, io.mem.resp.bits @[build/NutShell.fir.opt.mlir 39376:7]
    connect io.mem.req.bits, tlbExec.io.mem.req.bits @[build/NutShell.fir.opt.mlir 39377:7]
    connect io.mem.req.valid, tlbExec.io.mem.req.valid @[build/NutShell.fir.opt.mlir 39378:7]
    connect tlbExec.io.mem.req.ready, io.mem.req.ready @[build/NutShell.fir.opt.mlir 39379:7]
    connect io.csrMMU.addr, tlbExec.io.pf.addr @[build/NutShell.fir.opt.mlir 39380:7]
    connect io.csrMMU.storePF, tlbExec.io.pf.storePF @[build/NutShell.fir.opt.mlir 39381:7]
    connect io.csrMMU.loadPF, tlbExec.io.pf.loadPF @[build/NutShell.fir.opt.mlir 39382:7]
    connect tlbExec.io.pf.status_mxr, io.csrMMU.status_mxr @[build/NutShell.fir.opt.mlir 39383:7]
    connect tlbExec.io.pf.status_sum, io.csrMMU.status_sum @[build/NutShell.fir.opt.mlir 39384:7]
    connect tlbExec.io.pf.privilegeMode, io.csrMMU.privilegeMode @[build/NutShell.fir.opt.mlir 39385:7]
    reg r : UInt<121>[4], clock @[build/NutShell.fir.opt.mlir 39386:12]
    when mdUpdate : @[build/NutShell.fir.opt.mlir 39387:7]
      connect r, mdTLB.io.tlbmd @[build/NutShell.fir.opt.mlir 39388:9]
    connect tlbExec.io.md, r @[build/NutShell.fir.opt.mlir 39390:7]
    connect tlbExec.io.mdReady, mdTLB.io.ready @[build/NutShell.fir.opt.mlir 39391:7]
    wire _mdTLB_io_rindex_WIRE : { tag : UInt<23>, index : UInt<4>, off : UInt<12> } @[build/NutShell.fir.opt.mlir 39392:32]
    wire _mdTLB_io_rindex_WIRE_1 : UInt<39> @[build/NutShell.fir.opt.mlir 39396:34]
    connect _mdTLB_io_rindex_WIRE_1, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 39397:7]
    node _mdTLB_io_rindex_T = bits(_mdTLB_io_rindex_WIRE_1, 11, 0) @[build/NutShell.fir.opt.mlir 39399:29]
    connect _mdTLB_io_rindex_WIRE.off, _mdTLB_io_rindex_T @[build/NutShell.fir.opt.mlir 39400:7]
    node _mdTLB_io_rindex_T_1 = bits(_mdTLB_io_rindex_WIRE_1, 15, 12) @[build/NutShell.fir.opt.mlir 39402:31]
    connect _mdTLB_io_rindex_WIRE.index, _mdTLB_io_rindex_T_1 @[build/NutShell.fir.opt.mlir 39403:7]
    node _mdTLB_io_rindex_T_2 = bits(_mdTLB_io_rindex_WIRE_1, 38, 16) @[build/NutShell.fir.opt.mlir 39405:31]
    connect _mdTLB_io_rindex_WIRE.tag, _mdTLB_io_rindex_T_2 @[build/NutShell.fir.opt.mlir 39406:7]
    connect mdTLB.io.rindex, _mdTLB_io_rindex_WIRE.index @[build/NutShell.fir.opt.mlir 39407:7]
    connect mdTLB.io.write, tlbExec.io.mdWrite @[build/NutShell.fir.opt.mlir 39408:7]
    connect io.ipf, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39411:7]
    wire flushTLB : UInt<1> @[build/NutShell.fir.opt.mlir 39412:19]
    connect flushTLB, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39414:7]
    node _mdTLB_reset_T = asUInt(reset) @[build/NutShell.fir.opt.mlir 39416:25]
    node _mdTLB_reset_T_1 = or(_mdTLB_reset_T, flushTLB) @[build/NutShell.fir.opt.mlir 39418:27]
    connect mdTLB.reset, _mdTLB_reset_T_1 @[build/NutShell.fir.opt.mlir 39420:7]
    wire _vmEnable_WIRE : { mode : UInt<4>, asid : UInt<16>, res : UInt<24>, ppn : UInt<20> } @[build/NutShell.fir.opt.mlir 39421:25]
    wire _vmEnable_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 39426:27]
    connect _vmEnable_WIRE_1, satp @[build/NutShell.fir.opt.mlir 39427:7]
    node _vmEnable_T = bits(_vmEnable_WIRE_1, 19, 0) @[build/NutShell.fir.opt.mlir 39429:22]
    connect _vmEnable_WIRE.ppn, _vmEnable_T @[build/NutShell.fir.opt.mlir 39430:7]
    node _vmEnable_T_1 = bits(_vmEnable_WIRE_1, 43, 20) @[build/NutShell.fir.opt.mlir 39432:24]
    connect _vmEnable_WIRE.res, _vmEnable_T_1 @[build/NutShell.fir.opt.mlir 39433:7]
    node _vmEnable_T_2 = bits(_vmEnable_WIRE_1, 59, 44) @[build/NutShell.fir.opt.mlir 39435:24]
    connect _vmEnable_WIRE.asid, _vmEnable_T_2 @[build/NutShell.fir.opt.mlir 39436:7]
    node _vmEnable_T_3 = bits(_vmEnable_WIRE_1, 63, 60) @[build/NutShell.fir.opt.mlir 39438:24]
    connect _vmEnable_WIRE.mode, _vmEnable_T_3 @[build/NutShell.fir.opt.mlir 39439:7]
    node _vmEnable_T_4 = eq(_vmEnable_WIRE.mode, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 39442:24]
    node _vmEnable_T_5 = lt(io.csrMMU.privilegeMode, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 39445:24]
    node vmEnable = and(_vmEnable_T_4, _vmEnable_T_5) @[build/NutShell.fir.opt.mlir 39447:19]
    invalidate tlbEmpty.io.in.bits.wdata @[build/NutShell.fir.opt.mlir 39449:7]
    invalidate tlbEmpty.io.in.bits.wmask @[build/NutShell.fir.opt.mlir 39451:7]
    invalidate tlbEmpty.io.in.bits.cmd @[build/NutShell.fir.opt.mlir 39453:7]
    invalidate tlbEmpty.io.in.bits.size @[build/NutShell.fir.opt.mlir 39455:7]
    invalidate tlbEmpty.io.in.bits.addr @[build/NutShell.fir.opt.mlir 39457:7]
    invalidate tlbEmpty.io.in.valid @[build/NutShell.fir.opt.mlir 39459:7]
    invalidate tlbEmpty.io.out.ready @[build/NutShell.fir.opt.mlir 39461:7]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39462:16]
    when tlbExec.io.isFinish : @[build/NutShell.fir.opt.mlir 39463:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39465:9]
    node _T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39468:13]
    node _T_1 = and(_T, vmEnable) @[build/NutShell.fir.opt.mlir 39470:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 39472:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39474:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 39476:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39478:9]
    connect io.in.req.ready, tlbExec.io.in.ready @[build/NutShell.fir.opt.mlir 39480:7]
    node _tlbExec_io_in_bits_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39482:32]
    reg tlbExec_io_in_bits_r : { addr : UInt<39>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 39483:31]
    when _tlbExec_io_in_bits_T : @[build/NutShell.fir.opt.mlir 39484:7]
      connect tlbExec_io_in_bits_r, io.in.req.bits @[build/NutShell.fir.opt.mlir 39485:9]
    connect tlbExec.io.in.bits, tlbExec_io_in_bits_r @[build/NutShell.fir.opt.mlir 39487:7]
    connect tlbExec.io.in.valid, valid @[build/NutShell.fir.opt.mlir 39488:7]
    node _mdUpdate_T = and(io.in.req.valid, tlbExec.io.in.ready) @[build/NutShell.fir.opt.mlir 39490:22]
    connect mdUpdate, _mdUpdate_T @[build/NutShell.fir.opt.mlir 39491:7]
    node _T_2 = and(tlbEmpty.io.out.ready, tlbEmpty.io.out.valid) @[build/NutShell.fir.opt.mlir 39493:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39494:18]
    when _T_2 : @[build/NutShell.fir.opt.mlir 39495:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39497:9]
    node _T_3 = and(tlbExec.io.out.valid, tlbEmpty.io.in.ready) @[build/NutShell.fir.opt.mlir 39500:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 39501:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39503:9]
    when io.flush : @[build/NutShell.fir.opt.mlir 39505:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39507:9]
    connect tlbExec.io.out.ready, tlbEmpty.io.in.ready @[build/NutShell.fir.opt.mlir 39509:7]
    node _tlbEmpty_io_in_bits_T = and(tlbExec.io.out.valid, tlbEmpty.io.in.ready) @[build/NutShell.fir.opt.mlir 39511:33]
    reg tlbEmpty_io_in_bits_r : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 39512:32]
    when _tlbEmpty_io_in_bits_T : @[build/NutShell.fir.opt.mlir 39518:7]
      connect tlbEmpty_io_in_bits_r, tlbExec.io.out.bits @[build/NutShell.fir.opt.mlir 39519:9]
    connect tlbEmpty.io.in.bits.wdata, tlbEmpty_io_in_bits_r.wdata @[build/NutShell.fir.opt.mlir 39521:7]
    connect tlbEmpty.io.in.bits.wmask, tlbEmpty_io_in_bits_r.wmask @[build/NutShell.fir.opt.mlir 39522:7]
    connect tlbEmpty.io.in.bits.cmd, tlbEmpty_io_in_bits_r.cmd @[build/NutShell.fir.opt.mlir 39523:7]
    connect tlbEmpty.io.in.bits.size, tlbEmpty_io_in_bits_r.size @[build/NutShell.fir.opt.mlir 39524:7]
    connect tlbEmpty.io.in.bits.addr, tlbEmpty_io_in_bits_r.addr @[build/NutShell.fir.opt.mlir 39525:7]
    connect tlbEmpty.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 39526:7]
    node _T_4 = eq(vmEnable, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39528:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 39529:7]
      connect tlbExec.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39531:9]
      connect tlbEmpty.io.out.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39533:9]
      connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 39534:9]
      connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 39535:9]
      node _io_out_req_bits_addr_T = bits(io.in.req.bits.addr, 31, 0) @[build/NutShell.fir.opt.mlir 39537:36]
      connect io.out.req.bits.addr, _io_out_req_bits_addr_T @[build/NutShell.fir.opt.mlir 39538:9]
      connect io.out.req.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 39539:9]
      connect io.out.req.bits.cmd, io.in.req.bits.cmd @[build/NutShell.fir.opt.mlir 39540:9]
      connect io.out.req.bits.wmask, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 39541:9]
      connect io.out.req.bits.wdata, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 39542:9]
    else :
      connect io.out.req.bits, tlbEmpty.io.out.bits @[build/NutShell.fir.opt.mlir 39544:9]
      connect io.out.req.valid, tlbEmpty.io.out.valid @[build/NutShell.fir.opt.mlir 39545:9]
      connect tlbEmpty.io.out.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 39546:9]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 39548:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 39549:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 39550:7]
    node _alreadyOutFinish_T = eq(tlbExec.io.out.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39552:30]
    node _alreadyOutFinish_T_1 = and(tlbExec.io.out.valid, _alreadyOutFinish_T) @[build/NutShell.fir.opt.mlir 39554:32]
    regreset alreadyOutFinish : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39555:27]
    when _alreadyOutFinish_T_1 : @[build/NutShell.fir.opt.mlir 39556:7]
      connect alreadyOutFinish, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39558:9]
    node _T_5 = and(tlbExec.io.out.ready, tlbExec.io.out.valid) @[build/NutShell.fir.opt.mlir 39561:15]
    node _T_6 = and(alreadyOutFinish, _T_5) @[build/NutShell.fir.opt.mlir 39563:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 39564:7]
      connect alreadyOutFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39566:9]
    node _tlbFinish_T = eq(alreadyOutFinish, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39569:23]
    node _tlbFinish_T_1 = and(tlbExec.io.out.valid, _tlbFinish_T) @[build/NutShell.fir.opt.mlir 39571:25]
    node _tlbFinish_T_2 = or(tlbExec.io.pf.loadPF, tlbExec.io.pf.storePF) @[build/NutShell.fir.opt.mlir 39573:25]
    node tlbFinish = or(_tlbFinish_T_1, _tlbFinish_T_2) @[build/NutShell.fir.opt.mlir 39575:20]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 39576:16]
    connect _WIRE, tlbFinish @[build/NutShell.fir.opt.mlir 39577:7]
    node _T_7 = or(io.csrMMU.loadPF, io.csrMMU.storePF) @[build/NutShell.fir.opt.mlir 39579:15]
    wire _WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 39580:18]
    connect _WIRE_1, _T_7 @[build/NutShell.fir.opt.mlir 39581:7]
    wire _WIRE_2 : UInt<1> @[build/NutShell.fir.opt.mlir 39582:18]
    connect _WIRE_2, vmEnable @[build/NutShell.fir.opt.mlir 39583:7]
    inst LogPerfHelper of LogPerfHelper_32 @[build/NutShell.fir.opt.mlir 39584:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 39585:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 39590:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 39591:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 39592:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 39593:7]
    node _T_8 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39595:15]
    when _T_8 : @[build/NutShell.fir.opt.mlir 39596:7]
      node _T_9 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39598:17]
      node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39600:18]
      when _T_10 : @[build/NutShell.fir.opt.mlir 39601:9]
        skip @[build/NutShell.fir.opt.mlir 39602:11]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39605:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39607:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 39608:9]
        skip @[build/NutShell.fir.opt.mlir 39609:11]
    node _T_13 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39613:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 39614:7]
      node _T_14 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39616:18]
      node _T_15 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39618:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 39619:9]
        skip @[build/NutShell.fir.opt.mlir 39620:11]
      node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39623:18]
      node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39625:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 39626:9]
        skip @[build/NutShell.fir.opt.mlir 39627:11]
    node _T_18 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39631:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 39632:7]
      node _T_19 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39634:18]
      node _T_20 = eq(_T_19, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39636:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 39637:9]
        skip @[build/NutShell.fir.opt.mlir 39638:11]
      node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39641:18]
      node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39643:18]
      when _T_22 : @[build/NutShell.fir.opt.mlir 39644:9]
        skip @[build/NutShell.fir.opt.mlir 39645:11]
    node _T_23 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39649:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 39650:7]
      node _T_24 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39652:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39654:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 39655:9]
        skip @[build/NutShell.fir.opt.mlir 39656:11]
      node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39659:18]
      node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39661:18]
      when _T_27 : @[build/NutShell.fir.opt.mlir 39662:9]
        skip @[build/NutShell.fir.opt.mlir 39663:11]
    connect tlbExec.isAMO__bore, tlbExec_isAMO__bore @[build/NutShell.fir.opt.mlir 39666:7]
    connect _WIRE_2__bore, _WIRE_2 @[build/NutShell.fir.opt.mlir 39667:7]
    connect _WIRE_2__bore_0, _WIRE_2 @[build/NutShell.fir.opt.mlir 39668:7]
    connect _WIRE_2__bore_1, _WIRE_2 @[build/NutShell.fir.opt.mlir 39669:7]
    connect _WIRE_2__bore_2, _WIRE_2 @[build/NutShell.fir.opt.mlir 39670:7]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 39671:7]
    connect _WIRE__bore_0, _WIRE @[build/NutShell.fir.opt.mlir 39672:7]
    connect satp, satp__bore @[build/NutShell.fir.opt.mlir 39673:7]
    connect flushTLB, flushTLB__bore @[build/NutShell.fir.opt.mlir 39674:7]
    connect _WIRE_1__bore, _WIRE_1 @[build/NutShell.fir.opt.mlir 39675:7]
    connect _WIRE_1__bore_0, _WIRE_1 @[build/NutShell.fir.opt.mlir 39676:7]

  extmodule LogPerfHelper_33 : @[build/NutShell.fir.opt.mlir 39678:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39678:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39678:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39678:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39678:141]
    defname = LogPerfHelper

  module CacheStage1_1 : @[build/NutShell.fir.opt.mlir 39679:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39679:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39679:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 39679:98]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 39703:13]
    inst LogPerfHelper of LogPerfHelper_33 @[build/NutShell.fir.opt.mlir 39704:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 39705:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 39710:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 39711:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 39712:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 39713:7]
    node _T_1 = and(_T, c_control.logEnable) @[build/NutShell.fir.opt.mlir 39715:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 39717:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39719:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39721:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 39722:9]
        skip @[build/NutShell.fir.opt.mlir 39723:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39726:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39728:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 39729:9]
        skip @[build/NutShell.fir.opt.mlir 39730:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 39734:23]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39735:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 39740:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39741:7]
    node _T_6 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 39743:15]
    connect _WIRE.byteOffset, _T_6 @[build/NutShell.fir.opt.mlir 39744:7]
    node _T_7 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 39746:15]
    connect _WIRE.wordIndex, _T_7 @[build/NutShell.fir.opt.mlir 39747:7]
    node _T_8 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 39749:15]
    connect _WIRE.index, _T_8 @[build/NutShell.fir.opt.mlir 39750:7]
    node _T_9 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 39752:15]
    connect _WIRE.tag, _T_9 @[build/NutShell.fir.opt.mlir 39753:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 39754:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 39755:7]
    wire _WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39756:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 39761:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39762:7]
    node _T_10 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 39764:16]
    connect _WIRE_2.byteOffset, _T_10 @[build/NutShell.fir.opt.mlir 39765:7]
    node _T_11 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 39767:16]
    connect _WIRE_2.wordIndex, _T_11 @[build/NutShell.fir.opt.mlir 39768:7]
    node _T_12 = bits(_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 39770:16]
    connect _WIRE_2.index, _T_12 @[build/NutShell.fir.opt.mlir 39771:7]
    node _T_13 = bits(_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 39773:16]
    connect _WIRE_2.tag, _T_13 @[build/NutShell.fir.opt.mlir 39774:7]
    wire _WIRE_4 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39775:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 39780:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 39781:7]
    node _T_14 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 39783:16]
    connect _WIRE_4.byteOffset, _T_14 @[build/NutShell.fir.opt.mlir 39784:7]
    node _T_15 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 39786:16]
    connect _WIRE_4.wordIndex, _T_15 @[build/NutShell.fir.opt.mlir 39787:7]
    node _T_16 = bits(_WIRE_5, 12, 6) @[build/NutShell.fir.opt.mlir 39789:16]
    connect _WIRE_4.index, _T_16 @[build/NutShell.fir.opt.mlir 39790:7]
    node _T_17 = bits(_WIRE_5, 31, 13) @[build/NutShell.fir.opt.mlir 39792:16]
    connect _WIRE_4.tag, _T_17 @[build/NutShell.fir.opt.mlir 39793:7]
    node _T_18 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 39795:16]
    connect io.dataReadBus.req.bits.setIdx, _T_18 @[build/NutShell.fir.opt.mlir 39796:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 39797:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 39798:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39800:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39802:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 39803:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39805:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 39807:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 39809:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39811:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 39813:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 39814:7]
    node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 39817:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 39818:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39820:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39822:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 39823:9]
        skip @[build/NutShell.fir.opt.mlir 39824:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 39827:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39829:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 39830:9]
        skip @[build/NutShell.fir.opt.mlir 39831:11]

  extmodule LogPerfHelper_34 : @[build/NutShell.fir.opt.mlir 39835:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39835:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39835:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39835:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39835:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_35 : @[build/NutShell.fir.opt.mlir 39836:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39836:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39836:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39836:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39836:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_36 : @[build/NutShell.fir.opt.mlir 39837:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 39837:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 39837:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 39837:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 39837:141]
    defname = LogPerfHelper

  module CacheStage2_1 : @[build/NutShell.fir.opt.mlir 39838:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 39838:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 39838:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 39838:98]

    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39873:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 39878:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 39879:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 39881:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 39882:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 39884:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 39885:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 39887:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 39888:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 39890:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 39891:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 39893:27]
    wire _isForwardMeta_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 39894:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 39899:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 39900:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 39902:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 39903:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 39905:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 39906:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 39908:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 39909:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 39911:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 39912:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 39914:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 39916:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39918:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 39920:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 39922:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 39925:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 39927:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 39929:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 39930:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 39932:9]
    reg forwardMetaReg : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 39934:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 39935:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 39936:9]
    wire metaWay : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 39938:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 39952:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 39954:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 39958:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 39960:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 39962:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 39964:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 39966:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 39968:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 39969:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 39971:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 39973:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 39974:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 39976:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 39978:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 39979:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 39981:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 39983:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 39984:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39986:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 39988:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 39990:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39992:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 39994:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 39996:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 39998:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 40000:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 40002:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 40004:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 40006:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 40008:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 40009:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 40014:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 40015:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 40016:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 40017:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 40019:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 40021:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 40023:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 40025:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 40027:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 40029:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 40031:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 40033:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 40035:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 40037:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 40039:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 40040:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40042:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 40044:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 40046:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 40048:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 40049:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 40052:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 40054:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40056:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40058:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40060:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40062:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 40063:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 40068:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 40069:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 40070:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 40071:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 40073:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 40075:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 40077:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 40079:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 40082:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 40085:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 40088:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40090:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 40092:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 40094:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 40096:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 40098:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40100:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40102:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40104:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40106:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 40108:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 40110:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 40112:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 40114:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 40116:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 40118:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40120:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 40121:7]
      inst LogPerfHelper of LogPerfHelper_34 @[build/NutShell.fir.opt.mlir 40122:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 40123:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 40128:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 40129:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 40130:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 40131:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40133:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 40134:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40136:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40138:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 40139:11]
          skip @[build/NutShell.fir.opt.mlir 40140:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40143:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40145:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 40146:11]
          skip @[build/NutShell.fir.opt.mlir 40147:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40151:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 40152:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40154:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40156:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 40157:11]
          skip @[build/NutShell.fir.opt.mlir 40158:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40161:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40163:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 40164:11]
          skip @[build/NutShell.fir.opt.mlir 40165:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40169:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 40170:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40172:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40174:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 40175:11]
          skip @[build/NutShell.fir.opt.mlir 40176:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40179:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40181:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 40182:11]
          skip @[build/NutShell.fir.opt.mlir 40183:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40187:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 40188:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40190:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40192:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 40193:11]
          skip @[build/NutShell.fir.opt.mlir 40194:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40197:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40199:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 40200:11]
          skip @[build/NutShell.fir.opt.mlir 40201:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40205:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 40206:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40208:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40210:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 40211:11]
          skip @[build/NutShell.fir.opt.mlir 40212:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40215:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40217:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 40218:11]
          skip @[build/NutShell.fir.opt.mlir 40219:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40223:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 40224:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40226:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40228:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 40229:11]
          skip @[build/NutShell.fir.opt.mlir 40230:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40233:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40235:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 40236:11]
          skip @[build/NutShell.fir.opt.mlir 40237:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40241:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 40242:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40244:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40246:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 40247:11]
          skip @[build/NutShell.fir.opt.mlir 40248:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40251:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40253:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 40254:11]
          skip @[build/NutShell.fir.opt.mlir 40255:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40259:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 40260:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40262:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40264:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 40265:11]
          skip @[build/NutShell.fir.opt.mlir 40266:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40269:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40271:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 40272:11]
          skip @[build/NutShell.fir.opt.mlir 40273:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40277:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 40278:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40280:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40282:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 40283:11]
          skip @[build/NutShell.fir.opt.mlir 40284:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40287:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40289:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 40290:11]
          skip @[build/NutShell.fir.opt.mlir 40291:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 40295:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 40296:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40298:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40300:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 40301:11]
          skip @[build/NutShell.fir.opt.mlir 40302:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40305:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40307:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 40308:11]
          skip @[build/NutShell.fir.opt.mlir 40309:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40314:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40316:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40318:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40320:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 40322:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 40324:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 40326:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 40328:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 40330:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 40332:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40334:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 40335:7]
      inst LogPerfHelper_1 of LogPerfHelper_35 @[build/NutShell.fir.opt.mlir 40336:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 40337:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 40342:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 40343:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 40344:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 40345:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 40347:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 40348:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40350:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40352:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 40353:11]
          skip @[build/NutShell.fir.opt.mlir 40354:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40357:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40359:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 40360:11]
          skip @[build/NutShell.fir.opt.mlir 40361:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40366:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40368:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40370:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40372:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 40374:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 40376:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 40378:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 40380:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 40382:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 40384:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40386:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 40388:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40390:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40392:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40394:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 40395:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40397:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 40398:9]
        skip @[build/NutShell.fir.opt.mlir 40399:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 40401:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 40403:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 40405:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 40407:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 40408:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 40409:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 40410:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 40413:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 40415:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40417:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 40420:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 40422:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40424:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 40426:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 40427:7]
    wire _isForwardData_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40428:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 40433:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40434:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 40436:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 40437:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 40439:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 40440:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 40442:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 40443:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 40445:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 40446:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40447:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 40452:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40453:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 40455:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 40456:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 40458:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 40459:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 12, 6) @[build/NutShell.fir.opt.mlir 40461:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 40462:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 13) @[build/NutShell.fir.opt.mlir 40464:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 40465:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 40467:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 40469:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 40471:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 40473:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40474:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 40475:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40477:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 40480:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40482:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 40484:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 40485:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40487:9]
    reg forwardDataReg : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 40489:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 40490:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 40491:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 40494:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 40495:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 40497:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 40498:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 40499:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 40500:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40502:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 40504:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 40506:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 40507:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 40509:16]
    inst LogPerfHelper_2 of LogPerfHelper_36 @[build/NutShell.fir.opt.mlir 40510:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 40511:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 40516:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 40517:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 40518:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 40519:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 40521:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 40522:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40524:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40526:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 40527:9]
        skip @[build/NutShell.fir.opt.mlir 40528:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40531:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40533:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 40534:9]
        skip @[build/NutShell.fir.opt.mlir 40535:11]
    wire _WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40538:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 40543:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40544:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 40546:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 40547:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 40549:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 40550:7]
    node _T_107 = bits(_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 40552:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 40553:7]
    node _T_108 = bits(_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 40555:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 40556:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 40558:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 40559:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40561:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40563:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 40564:9]
        skip @[build/NutShell.fir.opt.mlir 40565:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40568:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40570:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 40571:9]
        skip @[build/NutShell.fir.opt.mlir 40572:11]

  module Arbiter2_SRAMBundleAW_2 : @[build/NutShell.fir.opt.mlir 40576:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40576:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40576:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 40576:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40593:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 40594:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 40596:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40598:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 40599:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40602:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 40604:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 40605:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 40607:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 40608:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40610:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 40612:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 40613:7]

  module Arbiter2_SRAMBundleAW_3 : @[build/NutShell.fir.opt.mlir 40615:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40615:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40615:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 40615:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 40632:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 40633:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 40635:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 40637:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 40638:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40641:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 40643:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 40644:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 40646:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 40647:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40649:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 40651:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 40652:7]

  extmodule LogPerfHelper_37 : @[build/NutShell.fir.opt.mlir 40654:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 40654:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 40654:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 40654:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 40654:141]
    defname = LogPerfHelper

  module CacheStage3_1 : @[build/NutShell.fir.opt.mlir 40655:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 40655:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 40655:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 40655:98]
    output _WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 40655:1826]

    inst metaWriteArb of Arbiter2_SRAMBundleAW_2 @[build/NutShell.fir.opt.mlir 40758:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 40772:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 40773:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_3 @[build/NutShell.fir.opt.mlir 40774:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 40788:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 40789:7]
    wire addr : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 40790:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 40795:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 40796:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 40798:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 40799:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 40801:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 40802:7]
    node _addr_T_2 = bits(_addr_WIRE, 12, 6) @[build/NutShell.fir.opt.mlir 40804:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 40805:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 13) @[build/NutShell.fir.opt.mlir 40807:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 40808:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 40810:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 40812:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40815:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 40817:15]
    node _probe_T = and(io.in.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 40820:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 40823:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 40825:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 40828:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 40830:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40832:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40834:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40836:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40838:20]
    wire meta : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 40839:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40844:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40846:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40848:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40850:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 40852:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 40854:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 40856:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 40857:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 40858:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 40859:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40861:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40863:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40865:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40867:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 40869:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 40871:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 40873:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 40874:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 40875:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 40876:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40878:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40880:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40882:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40884:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 40886:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 40888:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 40890:21]
    wire _meta_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 40891:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 40892:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 40893:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 40895:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40897:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 40899:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40901:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 40902:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40904:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 40905:9]
        skip @[build/NutShell.fir.opt.mlir 40906:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 40908:9]
    wire _WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 40910:16]
    connect _WIRE, mmio @[build/NutShell.fir.opt.mlir 40911:7]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 40913:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 40915:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 40917:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 40919:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 40921:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 40923:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 40924:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40927:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40929:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40931:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40933:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 40935:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 40937:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 40939:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 40940:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 40941:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 40942:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 40944:19]
    node _wordMask_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 40946:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 40948:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 40950:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 40952:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 40954:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 40956:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 40958:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 40960:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 40962:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 40964:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 40966:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40970:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40972:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40974:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40976:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40978:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40980:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40982:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 40984:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 40986:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 40988:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 40990:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 40992:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 40994:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 40996:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 40998:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 41001:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41003:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41005:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41008:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41011:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 41013:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 41015:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 41016:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41018:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41020:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 41022:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 41023:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41026:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 41028:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41029:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 41037:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 41040:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 41042:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 41044:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 41046:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 41047:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41049:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41051:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 41053:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 41055:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 41057:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 41058:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 41059:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41060:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 41061:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41062:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41071:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 41073:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41074:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 41079:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41080:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 41082:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 41083:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 41085:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 41086:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 41088:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 41089:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 41091:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 41092:7]
    wire metaHitWriteBus_x8 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 41093:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 41097:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41099:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41101:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 41102:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 41103:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41104:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 41105:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 41107:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41108:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41110:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 41112:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 41113:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41115:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41118:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 41120:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 41121:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41123:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41125:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41126:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 41128:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 41131:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41133:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 41135:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 41137:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 41139:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41141:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 41143:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 41145:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 41146:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 41147:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 41150:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 41151:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 41160:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 41161:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 41164:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 41166:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 41168:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 41170:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 41171:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41174:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41176:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41178:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41180:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 41182:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 41184:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 41186:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 41187:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 41188:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 41189:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 41191:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 41192:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 41194:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 41195:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 41197:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 41201:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 41202:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 41204:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 41207:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 41208:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41210:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41212:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 41214:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41216:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 41218:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 41219:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 41221:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 41227:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 41229:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 41231:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 41234:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41237:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41239:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41241:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 41243:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41245:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 41247:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 41249:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 41250:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 41252:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 41255:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 41256:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 41258:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41260:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41262:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 41264:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41266:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 41268:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 41270:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 41271:7]
    connect io.mmio.req.bits, io.in.bits.req @[build/NutShell.fir.opt.mlir 41272:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41274:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 41277:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 41278:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41279:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41281:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41282:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 41283:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41285:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41288:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41290:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 41292:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41295:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 41297:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 41299:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 41302:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 41304:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 41305:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 41306:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 41307:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41310:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 41312:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41314:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41316:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 41318:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 41320:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 41321:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 41322:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41324:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41326:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 41328:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41329:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 41330:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41332:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 41333:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41335:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41337:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 41339:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 41340:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 41341:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41344:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41347:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41350:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 41352:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 41353:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41355:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41357:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 41359:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41361:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41363:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41365:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 41367:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 41369:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 41371:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 41373:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 41374:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 41375:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41377:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 41378:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41380:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41382:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 41384:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 41385:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 41386:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 41389:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 41392:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41394:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 41396:9]
      when probe : @[build/NutShell.fir.opt.mlir 41397:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41399:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 41400:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41402:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 41403:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 41404:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 41408:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 41409:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 41411:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41413:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41415:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 41417:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 41419:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 41420:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 41423:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41425:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 41427:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 41428:13]
            node _state_T_1 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41430:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 41432:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 41434:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 41436:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 41437:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 41443:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 41444:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 41446:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 41447:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 41449:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 41453:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 41454:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 41456:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 41457:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 41459:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 41463:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 41464:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41466:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 41468:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 41469:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41471:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41473:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 41475:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 41476:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41479:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 41481:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 41483:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 41485:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 41487:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 41488:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 41490:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 41494:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 41495:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41497:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 41498:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 41500:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 41501:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 41505:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 41506:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41508:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 41509:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41511:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41513:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41515:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 41517:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 41518:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 41520:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 41521:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 41524:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 41527:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 41528:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 41530:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 41535:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 41536:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41538:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 41539:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41541:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41543:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 41545:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 41546:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 41549:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 41551:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 41553:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 41554:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 41556:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 41560:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 41561:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41563:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 41564:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 41566:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 41570:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 41571:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41573:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 41575:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 41577:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 41578:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 41580:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 41592:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 41594:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 41596:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 41598:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 41600:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41601:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41610:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41612:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 41614:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 41616:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 41617:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 41619:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 41620:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 41621:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41622:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 41623:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 41624:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41625:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41626:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 41627:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41628:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41629:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 41630:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 41631:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 41632:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 41633:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41642:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41644:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 41646:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 41648:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 41650:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 41651:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41656:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41658:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 41660:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 41661:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 41663:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 41664:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41665:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 41670:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41671:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 41673:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 41674:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 41676:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 41677:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 12, 6) @[build/NutShell.fir.opt.mlir 41679:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 41680:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 13) @[build/NutShell.fir.opt.mlir 41682:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 41683:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 41684:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 41685:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 41686:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 41687:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 41688:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41689:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41690:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 41691:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 41692:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 41693:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 41694:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 41695:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 41696:7]
    node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 41698:31]
    connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 41699:7]
    node _io_out_bits_cmd_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41701:29]
    node _io_out_bits_cmd_T_1 = eq(_io_out_bits_cmd_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41703:31]
    node _io_out_bits_cmd_T_2 = bits(io.in.bits.req.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 41705:31]
    node _io_out_bits_cmd_T_3 = eq(_io_out_bits_cmd_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41707:31]
    node _io_out_bits_cmd_T_4 = and(_io_out_bits_cmd_T_1, _io_out_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 41709:31]
    node _io_out_bits_cmd_T_5 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41711:31]
    wire _io_out_bits_cmd_WIRE : UInt<3> @[build/NutShell.fir.opt.mlir 41712:32]
    invalidate _io_out_bits_cmd_WIRE @[build/NutShell.fir.opt.mlir 41714:7]
    node _io_out_bits_cmd_T_6 = mux(_io_out_bits_cmd_T_5, UInt<3>(5), _io_out_bits_cmd_WIRE) @[build/NutShell.fir.opt.mlir 41717:31]
    node _io_out_bits_cmd_T_7 = mux(_io_out_bits_cmd_T_4, UInt<3>(6), _io_out_bits_cmd_T_6) @[build/NutShell.fir.opt.mlir 41719:31]
    connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_7, 4) @[build/NutShell.fir.opt.mlir 41721:7]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 41723:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41725:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41727:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41729:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41731:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 41733:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 41735:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 41737:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 41739:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 41741:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 41743:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41745:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 41747:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 41749:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 41751:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41753:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 41755:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 41757:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41759:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 41761:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41763:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41765:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 41767:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 41769:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 41771:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 41773:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 41775:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 41777:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 41778:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 41780:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41782:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41784:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 41786:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 41788:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 41790:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 41792:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 41794:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41796:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 41798:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 41800:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 41802:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 41804:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 41806:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 41808:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 41809:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41811:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41813:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 41815:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 41817:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41819:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 41821:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41823:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 41825:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 41826:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 41828:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 41830:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 41832:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 41834:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 41836:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 41838:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 41840:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 41841:7]
    node _T_69 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41843:16]
    node _T_70 = eq(_T_69, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41845:16]
    node _T_71 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41847:16]
    node _T_72 = eq(_T_71, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41849:16]
    when _T_72 : @[build/NutShell.fir.opt.mlir 41850:7]
      node _T_73 = eq(_T_70, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41852:18]
      when _T_73 : @[build/NutShell.fir.opt.mlir 41853:9]
        skip @[build/NutShell.fir.opt.mlir 41854:11]
      assert(clock, _T_70, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 41856:9]
    node _T_74 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41859:16]
    node _T_75 = eq(_T_74, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41861:16]
    node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41863:16]
    node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41865:16]
    when _T_77 : @[build/NutShell.fir.opt.mlir 41866:7]
      node _T_78 = eq(_T_75, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41868:18]
      when _T_78 : @[build/NutShell.fir.opt.mlir 41869:9]
        skip @[build/NutShell.fir.opt.mlir 41870:11]
      assert(clock, _T_75, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 41872:9]
    node _T_79 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41875:16]
    node _T_80 = and(_T_79, io.flush) @[build/NutShell.fir.opt.mlir 41877:16]
    node _T_81 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41879:16]
    node _T_82 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41881:16]
    node _T_83 = eq(_T_82, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41883:16]
    when _T_83 : @[build/NutShell.fir.opt.mlir 41884:7]
      node _T_84 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41886:18]
      when _T_84 : @[build/NutShell.fir.opt.mlir 41887:9]
        skip @[build/NutShell.fir.opt.mlir 41888:11]
      assert(clock, _T_81, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 41890:9]
    wire _WIRE_1 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 41892:18]
    wire _WIRE_2 : UInt<32> @[build/NutShell.fir.opt.mlir 41897:18]
    connect _WIRE_2, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 41898:7]
    node _T_85 = bits(_WIRE_2, 2, 0) @[build/NutShell.fir.opt.mlir 41900:16]
    connect _WIRE_1.byteOffset, _T_85 @[build/NutShell.fir.opt.mlir 41901:7]
    node _T_86 = bits(_WIRE_2, 5, 3) @[build/NutShell.fir.opt.mlir 41903:16]
    connect _WIRE_1.wordIndex, _T_86 @[build/NutShell.fir.opt.mlir 41904:7]
    node _T_87 = bits(_WIRE_2, 12, 6) @[build/NutShell.fir.opt.mlir 41906:16]
    connect _WIRE_1.index, _T_87 @[build/NutShell.fir.opt.mlir 41907:7]
    node _T_88 = bits(_WIRE_2, 31, 13) @[build/NutShell.fir.opt.mlir 41909:16]
    connect _WIRE_1.tag, _T_88 @[build/NutShell.fir.opt.mlir 41910:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 41912:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 41914:13]
    node _T_89 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 41916:16]
    inst LogPerfHelper of LogPerfHelper_37 @[build/NutShell.fir.opt.mlir 41917:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 41918:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 41923:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 41924:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 41925:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 41926:7]
    node _T_90 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41928:16]
    when _T_90 : @[build/NutShell.fir.opt.mlir 41929:7]
      node _T_91 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41931:18]
      node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41933:18]
      when _T_92 : @[build/NutShell.fir.opt.mlir 41934:9]
        skip @[build/NutShell.fir.opt.mlir 41935:11]
      node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41938:18]
      node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41940:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 41941:9]
        skip @[build/NutShell.fir.opt.mlir 41942:11]
    node _T_95 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 41946:16]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 41947:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 41949:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 41951:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 41952:7]
    node _T_96 = and(_T_95, c_control.logEnable) @[build/NutShell.fir.opt.mlir 41954:16]
    when _T_96 : @[build/NutShell.fir.opt.mlir 41955:7]
      node _T_97 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41957:18]
      node _T_98 = eq(_T_97, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41959:18]
      when _T_98 : @[build/NutShell.fir.opt.mlir 41960:9]
        skip @[build/NutShell.fir.opt.mlir 41961:11]
      node _T_99 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41964:18]
      node _T_100 = eq(_T_99, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41966:19]
      when _T_100 : @[build/NutShell.fir.opt.mlir 41967:9]
        skip @[build/NutShell.fir.opt.mlir 41968:11]
    node _T_101 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41972:17]
    when _T_101 : @[build/NutShell.fir.opt.mlir 41973:7]
      node _T_102 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41975:19]
      node _T_103 = eq(_T_102, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41977:19]
      when _T_103 : @[build/NutShell.fir.opt.mlir 41978:9]
        skip @[build/NutShell.fir.opt.mlir 41979:11]
      node _T_104 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41982:19]
      node _T_105 = eq(_T_104, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41984:19]
      when _T_105 : @[build/NutShell.fir.opt.mlir 41985:9]
        skip @[build/NutShell.fir.opt.mlir 41986:11]
    node _T_106 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 41990:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 41991:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 41993:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 41995:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 41996:9]
        skip @[build/NutShell.fir.opt.mlir 41997:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42000:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42002:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 42003:9]
        skip @[build/NutShell.fir.opt.mlir 42004:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 42008:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 42009:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42011:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42013:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 42014:9]
        skip @[build/NutShell.fir.opt.mlir 42015:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42018:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42020:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 42021:9]
        skip @[build/NutShell.fir.opt.mlir 42022:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 42026:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 42028:15]
    node _T_116 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 42030:17]
    node _T_117 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 42032:17]
    when _T_117 : @[build/NutShell.fir.opt.mlir 42033:7]
      node _T_118 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42035:19]
      node _T_119 = eq(_T_118, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42037:19]
      when _T_119 : @[build/NutShell.fir.opt.mlir 42038:9]
        skip @[build/NutShell.fir.opt.mlir 42039:11]
      node _T_120 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42042:19]
      node _T_121 = eq(_T_120, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42044:19]
      when _T_121 : @[build/NutShell.fir.opt.mlir 42045:9]
        skip @[build/NutShell.fir.opt.mlir 42046:11]
    node _T_122 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 42050:17]
    when _T_122 : @[build/NutShell.fir.opt.mlir 42051:7]
      node _T_123 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42053:19]
      node _T_124 = eq(_T_123, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42055:19]
      when _T_124 : @[build/NutShell.fir.opt.mlir 42056:9]
        skip @[build/NutShell.fir.opt.mlir 42057:11]
      node _T_125 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42060:19]
      node _T_126 = eq(_T_125, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42062:19]
      when _T_126 : @[build/NutShell.fir.opt.mlir 42063:9]
        skip @[build/NutShell.fir.opt.mlir 42064:11]
    node _T_127 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 42068:17]
    node _T_128 = and(_T_127, c_control.logEnable) @[build/NutShell.fir.opt.mlir 42070:17]
    when _T_128 : @[build/NutShell.fir.opt.mlir 42071:7]
      node _T_129 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42073:19]
      node _T_130 = eq(_T_129, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42075:19]
      when _T_130 : @[build/NutShell.fir.opt.mlir 42076:9]
        skip @[build/NutShell.fir.opt.mlir 42077:11]
      node _T_131 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42080:19]
      node _T_132 = eq(_T_131, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42082:19]
      when _T_132 : @[build/NutShell.fir.opt.mlir 42083:9]
        skip @[build/NutShell.fir.opt.mlir 42084:11]
    node _T_133 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 42088:17]
    node _T_134 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 42090:17]
    node _T_135 = and(_T_133, _T_134) @[build/NutShell.fir.opt.mlir 42092:17]
    wire _WIRE_3 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 42093:18]
    wire _WIRE_4 : UInt<32> @[build/NutShell.fir.opt.mlir 42098:18]
    connect _WIRE_4, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 42099:7]
    node _T_136 = bits(_WIRE_4, 2, 0) @[build/NutShell.fir.opt.mlir 42101:17]
    connect _WIRE_3.byteOffset, _T_136 @[build/NutShell.fir.opt.mlir 42102:7]
    node _T_137 = bits(_WIRE_4, 5, 3) @[build/NutShell.fir.opt.mlir 42104:17]
    connect _WIRE_3.wordIndex, _T_137 @[build/NutShell.fir.opt.mlir 42105:7]
    node _T_138 = bits(_WIRE_4, 12, 6) @[build/NutShell.fir.opt.mlir 42107:17]
    connect _WIRE_3.index, _T_138 @[build/NutShell.fir.opt.mlir 42108:7]
    node _T_139 = bits(_WIRE_4, 31, 13) @[build/NutShell.fir.opt.mlir 42110:17]
    connect _WIRE_3.tag, _T_139 @[build/NutShell.fir.opt.mlir 42111:7]
    node _T_140 = and(_T_135, c_control.logEnable) @[build/NutShell.fir.opt.mlir 42113:17]
    when _T_140 : @[build/NutShell.fir.opt.mlir 42114:7]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42116:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42118:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 42119:9]
        skip @[build/NutShell.fir.opt.mlir 42120:11]
      node _T_143 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42123:19]
      node _T_144 = eq(_T_143, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42125:19]
      when _T_144 : @[build/NutShell.fir.opt.mlir 42126:9]
        skip @[build/NutShell.fir.opt.mlir 42127:11]
    node _T_145 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 42131:17]
    node _T_146 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 42133:17]
    node _T_147 = and(_T_145, _T_146) @[build/NutShell.fir.opt.mlir 42135:17]
    wire _WIRE_5 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 42136:18]
    wire _WIRE_6 : UInt<32> @[build/NutShell.fir.opt.mlir 42141:18]
    connect _WIRE_6, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 42142:7]
    node _T_148 = bits(_WIRE_6, 2, 0) @[build/NutShell.fir.opt.mlir 42144:17]
    connect _WIRE_5.byteOffset, _T_148 @[build/NutShell.fir.opt.mlir 42145:7]
    node _T_149 = bits(_WIRE_6, 5, 3) @[build/NutShell.fir.opt.mlir 42147:17]
    connect _WIRE_5.wordIndex, _T_149 @[build/NutShell.fir.opt.mlir 42148:7]
    node _T_150 = bits(_WIRE_6, 12, 6) @[build/NutShell.fir.opt.mlir 42150:17]
    connect _WIRE_5.index, _T_150 @[build/NutShell.fir.opt.mlir 42151:7]
    node _T_151 = bits(_WIRE_6, 31, 13) @[build/NutShell.fir.opt.mlir 42153:17]
    connect _WIRE_5.tag, _T_151 @[build/NutShell.fir.opt.mlir 42154:7]
    node _T_152 = and(_T_147, c_control.logEnable) @[build/NutShell.fir.opt.mlir 42156:17]
    when _T_152 : @[build/NutShell.fir.opt.mlir 42157:7]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42159:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42161:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 42162:9]
        skip @[build/NutShell.fir.opt.mlir 42163:11]
      node _T_155 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42166:19]
      node _T_156 = eq(_T_155, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42168:19]
      when _T_156 : @[build/NutShell.fir.opt.mlir 42169:9]
        skip @[build/NutShell.fir.opt.mlir 42170:11]
    node _T_157 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 42174:17]
    node _T_158 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 42176:17]
    node _T_159 = and(_T_157, _T_158) @[build/NutShell.fir.opt.mlir 42178:17]
    wire _WIRE_7 : { tag : UInt<19>, index : UInt<7>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 42179:18]
    wire _WIRE_8 : UInt<32> @[build/NutShell.fir.opt.mlir 42184:18]
    connect _WIRE_8, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 42185:7]
    node _T_160 = bits(_WIRE_8, 2, 0) @[build/NutShell.fir.opt.mlir 42187:17]
    connect _WIRE_7.byteOffset, _T_160 @[build/NutShell.fir.opt.mlir 42188:7]
    node _T_161 = bits(_WIRE_8, 5, 3) @[build/NutShell.fir.opt.mlir 42190:17]
    connect _WIRE_7.wordIndex, _T_161 @[build/NutShell.fir.opt.mlir 42191:7]
    node _T_162 = bits(_WIRE_8, 12, 6) @[build/NutShell.fir.opt.mlir 42193:17]
    connect _WIRE_7.index, _T_162 @[build/NutShell.fir.opt.mlir 42194:7]
    node _T_163 = bits(_WIRE_8, 31, 13) @[build/NutShell.fir.opt.mlir 42196:17]
    connect _WIRE_7.tag, _T_163 @[build/NutShell.fir.opt.mlir 42197:7]
    node _T_164 = and(_T_159, c_control.logEnable) @[build/NutShell.fir.opt.mlir 42199:17]
    when _T_164 : @[build/NutShell.fir.opt.mlir 42200:7]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42202:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42204:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 42205:9]
        skip @[build/NutShell.fir.opt.mlir 42206:11]
      node _T_167 = asUInt(reset) @[build/NutShell.fir.opt.mlir 42209:19]
      node _T_168 = eq(_T_167, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42211:19]
      when _T_168 : @[build/NutShell.fir.opt.mlir 42212:9]
        skip @[build/NutShell.fir.opt.mlir 42213:11]
    connect _WIRE__bore, _WIRE @[build/NutShell.fir.opt.mlir 42216:7]

  module SRAMTemplate_3 : @[build/NutShell.fir.opt.mlir 42218:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42218:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42218:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42218:99]

    mem array : @[build/NutShell.fir.opt.mlir 42244:42]
      data-type => UInt<21>[4]
      depth => 128
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 42246:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42248:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 42250:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 42252:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 42254:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42256:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42258:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 42260:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 42274:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42277:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 42278:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42279:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42281:22]
    regreset _resetSet : UInt<7>, clock, reset, UInt<7>(0) @[build/NutShell.fir.opt.mlir 42283:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 42284:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42286:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 42288:7]
      node wrap_wrap = eq(_resetSet, UInt<7>(127)) @[build/NutShell.fir.opt.mlir 42290:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 42292:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 42294:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 42295:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 42296:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 42298:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42300:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 42302:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 42303:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 42305:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42307:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 42309:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 42311:17]
    wire _wdataword_WIRE : UInt<21> @[build/NutShell.fir.opt.mlir 42312:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 21) @[build/NutShell.fir.opt.mlir 42315:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 42317:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 42319:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 42321:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 42325:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 42327:18]
    wire wdata : UInt<21>[4] @[build/NutShell.fir.opt.mlir 42328:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 42333:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 42334:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 42335:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 42336:7]
    when wen : @[build/NutShell.fir.opt.mlir 42337:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 42339:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 42341:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 42343:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 42345:17]
      node _T_4 = or(setIdx, UInt<7>(0)) @[build/NutShell.fir.opt.mlir 42347:17]
      node _T_5 = bits(_T_4, 6, 0) @[build/NutShell.fir.opt.mlir 42349:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 42350:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42351:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42352:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42354:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42356:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42358:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42360:9]
      when _T : @[build/NutShell.fir.opt.mlir 42361:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42362:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 42363:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 42365:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42366:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 42367:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 42369:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42370:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 42371:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 42373:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42374:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 42375:11]
    wire _rdata_WIRE : UInt<7> @[build/NutShell.fir.opt.mlir 42378:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 42380:7]
    when realRen : @[build/NutShell.fir.opt.mlir 42381:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42382:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 42383:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 42384:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42385:9]
    wire rdata_0 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42387:18]
    wire _rdata_WIRE_1 : UInt<21> @[build/NutShell.fir.opt.mlir 42391:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 42392:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 42394:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 42395:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 42397:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 42398:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 20, 2) @[build/NutShell.fir.opt.mlir 42400:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 42401:7]
    wire rdata_1 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42402:18]
    wire _rdata_WIRE_2 : UInt<21> @[build/NutShell.fir.opt.mlir 42406:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 42407:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 42409:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 42410:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 42412:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 42413:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 20, 2) @[build/NutShell.fir.opt.mlir 42415:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 42416:7]
    wire rdata_2 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42417:18]
    wire _rdata_WIRE_3 : UInt<21> @[build/NutShell.fir.opt.mlir 42421:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 42422:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 42424:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 42425:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 42427:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 42428:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 20, 2) @[build/NutShell.fir.opt.mlir 42430:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 42431:7]
    wire rdata_3 : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 42432:18]
    wire _rdata_WIRE_4 : UInt<21> @[build/NutShell.fir.opt.mlir 42436:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 42437:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 42439:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 42440:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 42442:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 42443:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 20, 2) @[build/NutShell.fir.opt.mlir 42445:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 42446:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 42447:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 42464:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 42465:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 42466:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 42467:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 42468:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 42469:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 42470:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 42471:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 42472:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 42473:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 42474:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 42475:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 42476:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42478:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42480:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 42482:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 42483:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42485:7]

  module Arbiter1_SRAMBundleA_1 : @[build/NutShell.fir.opt.mlir 42487:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42487:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42487:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 42487:107]

    connect io.chosen, tail(UInt<1>(0), 1) @[build/NutShell.fir.opt.mlir 42501:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42502:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 42505:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 42506:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42508:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 42510:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 42511:7]

  module SRAMTemplateWithArbiter_2 : @[build/NutShell.fir.opt.mlir 42513:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42513:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42513:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7> } }, flip resp : { data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<7>, data : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42513:110]

    inst ram of SRAMTemplate_3 @[build/NutShell.fir.opt.mlir 42527:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 42540:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 42541:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 42542:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 42543:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 42544:7]
    inst readArb of Arbiter1_SRAMBundleA_1 @[build/NutShell.fir.opt.mlir 42545:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 42555:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 42556:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 42557:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 42558:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 42559:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 42560:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 42561:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 42562:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 42564:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42565:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 42566:7]
    wire _WIRE : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 42567:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42586:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42588:7]
    connect _WIRE[0].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42591:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42593:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42595:7]
    connect _WIRE[1].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42597:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42599:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42601:7]
    connect _WIRE[2].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42603:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42605:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42607:7]
    connect _WIRE[3].tag, UInt<19>(0) @[build/NutShell.fir.opt.mlir 42609:7]
    regreset r : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 42610:12]
    when REG : @[build/NutShell.fir.opt.mlir 42611:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42612:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 42615:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 42616:7]

  module SRAMTemplate_4 : @[build/NutShell.fir.opt.mlir 42618:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42618:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42618:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42618:99]

    mem array : @[build/NutShell.fir.opt.mlir 42642:42]
      data-type => UInt<64>[4]
      depth => 1024
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 42644:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42646:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 42648:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 42650:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 42652:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 42654:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42656:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 42658:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 42672:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42675:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 42676:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42677:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 42679:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42681:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 42683:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 42685:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 42686:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 42689:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 42691:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 42696:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 42698:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 42699:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 42704:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 42705:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 42706:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 42707:7]
    when wen : @[build/NutShell.fir.opt.mlir 42709:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 42711:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 42713:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 42715:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 42717:17]
      node _T_4 = or(setIdx, UInt<10>(0)) @[build/NutShell.fir.opt.mlir 42719:17]
      node _T_5 = bits(_T_4, 9, 0) @[build/NutShell.fir.opt.mlir 42721:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 42722:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42723:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42724:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42726:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42728:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42730:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 42732:9]
      when _T : @[build/NutShell.fir.opt.mlir 42733:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42734:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 42735:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 42737:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42738:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 42739:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 42741:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42742:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 42743:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 42745:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 42746:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 42747:11]
    wire _rdata_WIRE : UInt<10> @[build/NutShell.fir.opt.mlir 42750:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 42752:7]
    when realRen : @[build/NutShell.fir.opt.mlir 42753:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42754:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 42755:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 42756:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 42757:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42759:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 42761:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 42762:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 42764:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 42765:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42766:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 42768:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 42769:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 42771:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 42772:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42773:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 42775:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 42776:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 42778:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 42779:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 42780:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 42782:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 42783:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 42785:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 42786:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42787:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 42796:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 42797:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 42798:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 42799:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 42800:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42802:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42804:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 42806:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 42807:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42809:7]

  module Arbiter2_SRAMBundleA_1 : @[build/NutShell.fir.opt.mlir 42811:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42811:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42811:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 42811:107]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42828:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 42829:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 42831:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42833:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42834:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42837:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 42839:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 42840:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 42842:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 42843:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42845:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 42847:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 42848:7]

  module SRAMTemplateWithArbiter_3 : @[build/NutShell.fir.opt.mlir 42850:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42850:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42850:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 42850:110]

    inst ram of SRAMTemplate_4 @[build/NutShell.fir.opt.mlir 42871:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 42884:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 42885:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 42886:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 42887:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 42888:7]
    inst readArb of Arbiter2_SRAMBundleA_1 @[build/NutShell.fir.opt.mlir 42889:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 42903:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 42904:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 42905:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 42906:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 42907:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 42908:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 42909:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 42910:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 42911:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 42912:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 42913:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 42915:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42916:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 42917:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42918:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42929:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42931:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42933:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42935:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 42936:12]
    when REG : @[build/NutShell.fir.opt.mlir 42937:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42938:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 42941:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 42942:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 42944:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 42945:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 42946:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 42947:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42957:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42959:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42961:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 42963:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 42964:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 42965:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 42966:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 42969:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 42970:7]

  module Arbiter2_SimpleBusReqBundle : @[build/NutShell.fir.opt.mlir 42972:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 42972:59]
    input reset : Reset @[build/NutShell.fir.opt.mlir 42972:85]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 42972:112]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 42989:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 42990:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 42992:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 42994:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 42995:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 42998:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 43000:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 43001:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 43003:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 43004:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43006:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 43008:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 43009:7]

  extmodule LogPerfHelper_38 : @[build/NutShell.fir.opt.mlir 43011:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 43011:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 43011:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 43011:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 43011:141]
    defname = LogPerfHelper

  module Cache_1 : @[build/NutShell.fir.opt.mlir 43012:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 43012:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 43012:65]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 43012:92]
    output s3__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 43012:1201]

    inst s1 of CacheStage1_1 @[build/NutShell.fir.opt.mlir 43057:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 43104:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 43105:7]
    inst s2 of CacheStage2_1 @[build/NutShell.fir.opt.mlir 43106:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 43167:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 43168:7]
    inst s3 of CacheStage3_1 @[build/NutShell.fir.opt.mlir 43169:57]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 43271:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 43272:7]
    inst metaArray of SRAMTemplateWithArbiter_2 @[build/NutShell.fir.opt.mlir 43273:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 43286:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 43287:7]
    inst dataArray of SRAMTemplateWithArbiter_3 @[build/NutShell.fir.opt.mlir 43288:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 43307:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 43308:7]
    inst arb of Arbiter2_SimpleBusReqBundle @[build/NutShell.fir.opt.mlir 43309:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 43328:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 43329:7]
    connect io.in.req.ready, arb.io.in[1].ready @[build/NutShell.fir.opt.mlir 43330:7]
    connect arb.io.in[1].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 43331:7]
    connect arb.io.in[1].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 43332:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 43333:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 43334:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 43335:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 43337:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 43339:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43341:16]
    when _T : @[build/NutShell.fir.opt.mlir 43342:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43344:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 43347:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 43349:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 43351:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 43353:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43355:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 43357:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 43359:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 43360:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 43367:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 43368:9]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 43370:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 43371:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 43372:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 43373:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 43374:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 43375:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 43377:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43378:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 43379:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43381:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 43384:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 43385:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 43387:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 43389:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43391:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 43393:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 43395:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<19>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<10>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 43396:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 43438:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 43439:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 43441:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 43442:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 43443:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 43444:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 43445:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 43446:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 43447:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 43448:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 43449:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 43450:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 43451:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 43452:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 43453:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 43454:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 43455:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 43456:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 43457:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 43458:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 43459:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 43460:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 43461:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 43462:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 43463:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 43464:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 43465:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 43466:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 43467:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 43468:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 43469:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 43470:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 43471:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 43472:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 43474:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 43475:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 43476:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 43477:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 43478:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 43479:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 43480:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 43481:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 43482:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 43483:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 43484:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 43485:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 43486:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 43487:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43489:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43491:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 43493:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 43494:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 43497:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 43499:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 43501:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 43503:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 43504:7]
    wire coh : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } @[build/NutShell.fir.opt.mlir 43505:14]
    connect coh.addr, io.out.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 43511:7]
    connect coh.cmd, io.out.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 43512:7]
    connect coh.size, io.out.coh.req.bits.size @[build/NutShell.fir.opt.mlir 43513:7]
    connect coh.wdata, io.out.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 43514:7]
    connect coh.wmask, io.out.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 43515:7]
    connect arb.io.in[0].bits.wdata, coh.wdata @[build/NutShell.fir.opt.mlir 43516:7]
    connect arb.io.in[0].bits.wmask, coh.wmask @[build/NutShell.fir.opt.mlir 43517:7]
    connect arb.io.in[0].bits.cmd, coh.cmd @[build/NutShell.fir.opt.mlir 43518:7]
    connect arb.io.in[0].bits.size, coh.size @[build/NutShell.fir.opt.mlir 43519:7]
    connect arb.io.in[0].bits.addr, coh.addr @[build/NutShell.fir.opt.mlir 43520:7]
    connect arb.io.in[0].valid, io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 43521:7]
    connect io.out.coh.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 43522:7]
    connect io.out.coh.resp.bits, s3.io.cohResp.bits @[build/NutShell.fir.opt.mlir 43523:7]
    connect io.out.coh.resp.valid, s3.io.cohResp.valid @[build/NutShell.fir.opt.mlir 43524:7]
    connect s3.io.cohResp.ready, io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 43525:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 43526:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 43527:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 43528:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 43529:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 43530:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 43531:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 43532:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 43533:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 43534:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 43535:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 43536:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 43537:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 43538:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43539:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 43540:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 43541:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43542:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 43543:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 43544:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 43545:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 43546:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 43547:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 43548:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 43549:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 43550:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 43551:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 43552:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 43553:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 43554:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 43555:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 43556:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 43557:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 43558:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 43559:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 43560:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 43561:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 43562:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43563:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 43564:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 43565:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 43566:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 43567:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 43568:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 43569:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 43570:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 43571:7]
    inst LogPerfHelper of LogPerfHelper_38 @[build/NutShell.fir.opt.mlir 43572:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 43573:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 43578:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 43579:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 43580:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 43581:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43583:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 43584:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43586:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43588:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 43589:9]
        skip @[build/NutShell.fir.opt.mlir 43590:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43593:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43595:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 43596:9]
        skip @[build/NutShell.fir.opt.mlir 43597:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43601:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 43602:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43604:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43606:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 43607:9]
        skip @[build/NutShell.fir.opt.mlir 43608:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43611:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43613:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 43614:9]
        skip @[build/NutShell.fir.opt.mlir 43615:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 43618:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43620:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 43621:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43623:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43625:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 43626:11]
          skip @[build/NutShell.fir.opt.mlir 43627:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43630:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43632:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 43633:11]
          skip @[build/NutShell.fir.opt.mlir 43634:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 43638:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43640:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 43641:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43643:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43645:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 43646:11]
          skip @[build/NutShell.fir.opt.mlir 43647:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43650:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43652:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 43653:11]
          skip @[build/NutShell.fir.opt.mlir 43654:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 43658:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 43660:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 43661:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43663:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43665:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 43666:11]
          skip @[build/NutShell.fir.opt.mlir 43667:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 43670:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 43672:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 43673:11]
          skip @[build/NutShell.fir.opt.mlir 43674:13]
    connect s3__WIRE__bore, s3._WIRE__bore @[build/NutShell.fir.opt.mlir 43678:7]

  module NutCore : @[build/NutShell.fir.opt.mlir 43680:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 43680:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 43680:65]
    output io : { imem : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, dmem : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip frontend : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 43680:92]
    input backend_exu_csr_meip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 43680:1701]
    input backend_exu_csr_mtip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 43680:1750]
    output frontend_idu__WIRE__bore : UInt<1> @[build/NutShell.fir.opt.mlir 43680:1800]
    input backend_exu_csr_msip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 43680:1847]

    inst frontend of Frontend_inorder @[build/NutShell.fir.opt.mlir 43737:386]
    connect frontend.clock, clock @[build/NutShell.fir.opt.mlir 43760:7]
    connect frontend.reset, reset @[build/NutShell.fir.opt.mlir 43761:7]
    inst backend of Backend_inorder @[build/NutShell.fir.opt.mlir 43762:832]
    connect backend.clock, clock @[build/NutShell.fir.opt.mlir 43920:7]
    connect backend.reset, reset @[build/NutShell.fir.opt.mlir 43921:7]
    node _T = bits(frontend.io.flushVec, 1, 1) @[build/NutShell.fir.opt.mlir 43923:13]
    wire _dataBuffer_WIRE : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 43924:27]
    connect _dataBuffer_WIRE.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43988:7]
    connect _dataBuffer_WIRE.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43990:7]
    connect _dataBuffer_WIRE.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 43992:7]
    connect _dataBuffer_WIRE.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43995:7]
    connect _dataBuffer_WIRE.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43997:7]
    connect _dataBuffer_WIRE.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 43999:7]
    connect _dataBuffer_WIRE.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44001:7]
    connect _dataBuffer_WIRE.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44003:7]
    connect _dataBuffer_WIRE.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44006:7]
    connect _dataBuffer_WIRE.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44008:7]
    connect _dataBuffer_WIRE.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44010:7]
    connect _dataBuffer_WIRE.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44012:7]
    connect _dataBuffer_WIRE.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44015:7]
    connect _dataBuffer_WIRE.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44018:7]
    connect _dataBuffer_WIRE.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44020:7]
    connect _dataBuffer_WIRE.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44022:7]
    connect _dataBuffer_WIRE.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44024:7]
    connect _dataBuffer_WIRE.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44026:7]
    connect _dataBuffer_WIRE.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44028:7]
    connect _dataBuffer_WIRE.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44030:7]
    connect _dataBuffer_WIRE.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44033:7]
    connect _dataBuffer_WIRE.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44035:7]
    connect _dataBuffer_WIRE.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44037:7]
    connect _dataBuffer_WIRE.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44039:7]
    connect _dataBuffer_WIRE.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44041:7]
    connect _dataBuffer_WIRE.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44043:7]
    connect _dataBuffer_WIRE.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44045:7]
    connect _dataBuffer_WIRE.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44047:7]
    connect _dataBuffer_WIRE.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44049:7]
    connect _dataBuffer_WIRE.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44051:7]
    connect _dataBuffer_WIRE.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44053:7]
    connect _dataBuffer_WIRE.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44055:7]
    connect _dataBuffer_WIRE.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44057:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44059:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44061:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44063:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44065:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44067:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44069:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44071:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44073:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44075:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44077:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44079:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44081:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44083:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44085:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44087:7]
    connect _dataBuffer_WIRE.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44089:7]
    connect _dataBuffer_WIRE.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44091:7]
    connect _dataBuffer_WIRE.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44093:7]
    connect _dataBuffer_WIRE.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44096:7]
    connect _dataBuffer_WIRE.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44098:7]
    connect _dataBuffer_WIRE.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44100:7]
    connect _dataBuffer_WIRE.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44102:7]
    wire _dataBuffer_WIRE_1 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 44103:29]
    connect _dataBuffer_WIRE_1.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44166:7]
    connect _dataBuffer_WIRE_1.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44168:7]
    connect _dataBuffer_WIRE_1.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44170:7]
    connect _dataBuffer_WIRE_1.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44172:7]
    connect _dataBuffer_WIRE_1.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44174:7]
    connect _dataBuffer_WIRE_1.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44176:7]
    connect _dataBuffer_WIRE_1.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44178:7]
    connect _dataBuffer_WIRE_1.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44180:7]
    connect _dataBuffer_WIRE_1.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44182:7]
    connect _dataBuffer_WIRE_1.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44184:7]
    connect _dataBuffer_WIRE_1.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44186:7]
    connect _dataBuffer_WIRE_1.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44188:7]
    connect _dataBuffer_WIRE_1.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44190:7]
    connect _dataBuffer_WIRE_1.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44192:7]
    connect _dataBuffer_WIRE_1.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44194:7]
    connect _dataBuffer_WIRE_1.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44196:7]
    connect _dataBuffer_WIRE_1.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44198:7]
    connect _dataBuffer_WIRE_1.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44200:7]
    connect _dataBuffer_WIRE_1.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44202:7]
    connect _dataBuffer_WIRE_1.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44204:7]
    connect _dataBuffer_WIRE_1.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44206:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44208:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44210:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44212:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44214:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44216:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44218:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44220:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44222:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44224:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44226:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44228:7]
    connect _dataBuffer_WIRE_1.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44230:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44232:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44234:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44236:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44238:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44240:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44242:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44244:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44246:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44248:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44250:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44252:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44254:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44256:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44258:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44260:7]
    connect _dataBuffer_WIRE_1.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44262:7]
    connect _dataBuffer_WIRE_1.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44264:7]
    connect _dataBuffer_WIRE_1.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44266:7]
    connect _dataBuffer_WIRE_1.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44268:7]
    connect _dataBuffer_WIRE_1.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44270:7]
    connect _dataBuffer_WIRE_1.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44272:7]
    connect _dataBuffer_WIRE_1.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44274:7]
    wire _dataBuffer_WIRE_2 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 44275:29]
    connect _dataBuffer_WIRE_2.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44338:7]
    connect _dataBuffer_WIRE_2.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44340:7]
    connect _dataBuffer_WIRE_2.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44342:7]
    connect _dataBuffer_WIRE_2.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44344:7]
    connect _dataBuffer_WIRE_2.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44346:7]
    connect _dataBuffer_WIRE_2.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44348:7]
    connect _dataBuffer_WIRE_2.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44350:7]
    connect _dataBuffer_WIRE_2.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44352:7]
    connect _dataBuffer_WIRE_2.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44354:7]
    connect _dataBuffer_WIRE_2.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44356:7]
    connect _dataBuffer_WIRE_2.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44358:7]
    connect _dataBuffer_WIRE_2.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44360:7]
    connect _dataBuffer_WIRE_2.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44362:7]
    connect _dataBuffer_WIRE_2.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44364:7]
    connect _dataBuffer_WIRE_2.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44366:7]
    connect _dataBuffer_WIRE_2.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44368:7]
    connect _dataBuffer_WIRE_2.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44370:7]
    connect _dataBuffer_WIRE_2.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44372:7]
    connect _dataBuffer_WIRE_2.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44374:7]
    connect _dataBuffer_WIRE_2.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44376:7]
    connect _dataBuffer_WIRE_2.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44378:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44380:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44382:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44384:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44386:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44388:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44390:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44392:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44394:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44396:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44398:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44400:7]
    connect _dataBuffer_WIRE_2.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44402:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44404:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44406:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44408:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44410:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44412:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44414:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44416:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44418:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44420:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44422:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44424:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44426:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44428:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44430:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44432:7]
    connect _dataBuffer_WIRE_2.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44434:7]
    connect _dataBuffer_WIRE_2.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44436:7]
    connect _dataBuffer_WIRE_2.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44438:7]
    connect _dataBuffer_WIRE_2.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44440:7]
    connect _dataBuffer_WIRE_2.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44442:7]
    connect _dataBuffer_WIRE_2.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44444:7]
    connect _dataBuffer_WIRE_2.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44446:7]
    wire _dataBuffer_WIRE_3 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } } @[build/NutShell.fir.opt.mlir 44447:29]
    connect _dataBuffer_WIRE_3.data.imm, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44510:7]
    connect _dataBuffer_WIRE_3.data.src2, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44512:7]
    connect _dataBuffer_WIRE_3.data.src1, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44514:7]
    connect _dataBuffer_WIRE_3.ctrl.isBlocked, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44516:7]
    connect _dataBuffer_WIRE_3.ctrl.noSpecExec, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44518:7]
    connect _dataBuffer_WIRE_3.ctrl.isSrc2Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44520:7]
    connect _dataBuffer_WIRE_3.ctrl.isSrc1Forward, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44522:7]
    connect _dataBuffer_WIRE_3.ctrl.isNutCoreTrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44524:7]
    connect _dataBuffer_WIRE_3.ctrl.rfDest, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44526:7]
    connect _dataBuffer_WIRE_3.ctrl.rfWen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44528:7]
    connect _dataBuffer_WIRE_3.ctrl.rfSrc2, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44530:7]
    connect _dataBuffer_WIRE_3.ctrl.rfSrc1, UInt<5>(0) @[build/NutShell.fir.opt.mlir 44532:7]
    connect _dataBuffer_WIRE_3.ctrl.fuOpType, UInt<7>(0) @[build/NutShell.fir.opt.mlir 44534:7]
    connect _dataBuffer_WIRE_3.ctrl.fuType, UInt<3>(0) @[build/NutShell.fir.opt.mlir 44536:7]
    connect _dataBuffer_WIRE_3.ctrl.src2Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44538:7]
    connect _dataBuffer_WIRE_3.ctrl.src1Type, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44540:7]
    connect _dataBuffer_WIRE_3.cf.isBranch, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44542:7]
    connect _dataBuffer_WIRE_3.cf.runahead_checkpoint_id, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44544:7]
    connect _dataBuffer_WIRE_3.cf.crossPageIPFFix, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44546:7]
    connect _dataBuffer_WIRE_3.cf.isRVC, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44548:7]
    connect _dataBuffer_WIRE_3.cf.brIdx, UInt<4>(0) @[build/NutShell.fir.opt.mlir 44550:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44552:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44554:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44556:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44558:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44560:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44562:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44564:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44566:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44568:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44570:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44572:7]
    connect _dataBuffer_WIRE_3.cf.intrVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44574:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44576:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44578:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44580:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44582:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44584:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44586:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44588:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44590:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44592:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44594:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44596:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44598:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44600:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44602:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44604:7]
    connect _dataBuffer_WIRE_3.cf.exceptionVec[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 44606:7]
    connect _dataBuffer_WIRE_3.cf.redirect.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44608:7]
    connect _dataBuffer_WIRE_3.cf.redirect.rtype, UInt<1>(0) @[build/NutShell.fir.opt.mlir 44610:7]
    connect _dataBuffer_WIRE_3.cf.redirect.target, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44612:7]
    connect _dataBuffer_WIRE_3.cf.pnpc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44614:7]
    connect _dataBuffer_WIRE_3.cf.pc, UInt<39>(0) @[build/NutShell.fir.opt.mlir 44616:7]
    connect _dataBuffer_WIRE_3.cf.instr, UInt<64>(0) @[build/NutShell.fir.opt.mlir 44618:7]
    wire _dataBuffer_WIRE_4 : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }[4] @[build/NutShell.fir.opt.mlir 44619:29]
    connect _dataBuffer_WIRE_4[0].data.imm, _dataBuffer_WIRE.data.imm @[build/NutShell.fir.opt.mlir 44868:7]
    connect _dataBuffer_WIRE_4[0].data.src2, _dataBuffer_WIRE.data.src2 @[build/NutShell.fir.opt.mlir 44869:7]
    connect _dataBuffer_WIRE_4[0].data.src1, _dataBuffer_WIRE.data.src1 @[build/NutShell.fir.opt.mlir 44870:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isBlocked, _dataBuffer_WIRE.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44871:7]
    connect _dataBuffer_WIRE_4[0].ctrl.noSpecExec, _dataBuffer_WIRE.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44872:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isSrc2Forward, _dataBuffer_WIRE.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44873:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isSrc1Forward, _dataBuffer_WIRE.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44874:7]
    connect _dataBuffer_WIRE_4[0].ctrl.isNutCoreTrap, _dataBuffer_WIRE.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44875:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfDest, _dataBuffer_WIRE.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44876:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfWen, _dataBuffer_WIRE.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44877:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfSrc2, _dataBuffer_WIRE.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44878:7]
    connect _dataBuffer_WIRE_4[0].ctrl.rfSrc1, _dataBuffer_WIRE.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44879:7]
    connect _dataBuffer_WIRE_4[0].ctrl.fuOpType, _dataBuffer_WIRE.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44880:7]
    connect _dataBuffer_WIRE_4[0].ctrl.fuType, _dataBuffer_WIRE.ctrl.fuType @[build/NutShell.fir.opt.mlir 44881:7]
    connect _dataBuffer_WIRE_4[0].ctrl.src2Type, _dataBuffer_WIRE.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44882:7]
    connect _dataBuffer_WIRE_4[0].ctrl.src1Type, _dataBuffer_WIRE.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44883:7]
    connect _dataBuffer_WIRE_4[0].cf.isBranch, _dataBuffer_WIRE.cf.isBranch @[build/NutShell.fir.opt.mlir 44884:7]
    connect _dataBuffer_WIRE_4[0].cf.runahead_checkpoint_id, _dataBuffer_WIRE.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44885:7]
    connect _dataBuffer_WIRE_4[0].cf.crossPageIPFFix, _dataBuffer_WIRE.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44886:7]
    connect _dataBuffer_WIRE_4[0].cf.isRVC, _dataBuffer_WIRE.cf.isRVC @[build/NutShell.fir.opt.mlir 44887:7]
    connect _dataBuffer_WIRE_4[0].cf.brIdx, _dataBuffer_WIRE.cf.brIdx @[build/NutShell.fir.opt.mlir 44888:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[0], _dataBuffer_WIRE.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44889:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[1], _dataBuffer_WIRE.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44890:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[2], _dataBuffer_WIRE.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44891:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[3], _dataBuffer_WIRE.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44892:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[4], _dataBuffer_WIRE.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44893:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[5], _dataBuffer_WIRE.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44894:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[6], _dataBuffer_WIRE.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44895:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[7], _dataBuffer_WIRE.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44896:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[8], _dataBuffer_WIRE.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44897:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[9], _dataBuffer_WIRE.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44898:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[10], _dataBuffer_WIRE.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44899:7]
    connect _dataBuffer_WIRE_4[0].cf.intrVec[11], _dataBuffer_WIRE.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44900:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[0], _dataBuffer_WIRE.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44901:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[1], _dataBuffer_WIRE.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44902:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[2], _dataBuffer_WIRE.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44903:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[3], _dataBuffer_WIRE.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44904:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[4], _dataBuffer_WIRE.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44905:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[5], _dataBuffer_WIRE.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44906:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[6], _dataBuffer_WIRE.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44907:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[7], _dataBuffer_WIRE.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44908:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[8], _dataBuffer_WIRE.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44909:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[9], _dataBuffer_WIRE.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44910:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[10], _dataBuffer_WIRE.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44911:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[11], _dataBuffer_WIRE.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44912:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[12], _dataBuffer_WIRE.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44913:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[13], _dataBuffer_WIRE.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44914:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[14], _dataBuffer_WIRE.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44915:7]
    connect _dataBuffer_WIRE_4[0].cf.exceptionVec[15], _dataBuffer_WIRE.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44916:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.valid, _dataBuffer_WIRE.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44917:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.rtype, _dataBuffer_WIRE.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44918:7]
    connect _dataBuffer_WIRE_4[0].cf.redirect.target, _dataBuffer_WIRE.cf.redirect.target @[build/NutShell.fir.opt.mlir 44919:7]
    connect _dataBuffer_WIRE_4[0].cf.pnpc, _dataBuffer_WIRE.cf.pnpc @[build/NutShell.fir.opt.mlir 44920:7]
    connect _dataBuffer_WIRE_4[0].cf.pc, _dataBuffer_WIRE.cf.pc @[build/NutShell.fir.opt.mlir 44921:7]
    connect _dataBuffer_WIRE_4[0].cf.instr, _dataBuffer_WIRE.cf.instr @[build/NutShell.fir.opt.mlir 44922:7]
    connect _dataBuffer_WIRE_4[1].data.imm, _dataBuffer_WIRE_1.data.imm @[build/NutShell.fir.opt.mlir 44923:7]
    connect _dataBuffer_WIRE_4[1].data.src2, _dataBuffer_WIRE_1.data.src2 @[build/NutShell.fir.opt.mlir 44924:7]
    connect _dataBuffer_WIRE_4[1].data.src1, _dataBuffer_WIRE_1.data.src1 @[build/NutShell.fir.opt.mlir 44925:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isBlocked, _dataBuffer_WIRE_1.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44926:7]
    connect _dataBuffer_WIRE_4[1].ctrl.noSpecExec, _dataBuffer_WIRE_1.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44927:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isSrc2Forward, _dataBuffer_WIRE_1.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44928:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isSrc1Forward, _dataBuffer_WIRE_1.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44929:7]
    connect _dataBuffer_WIRE_4[1].ctrl.isNutCoreTrap, _dataBuffer_WIRE_1.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44930:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfDest, _dataBuffer_WIRE_1.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44931:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfWen, _dataBuffer_WIRE_1.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44932:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfSrc2, _dataBuffer_WIRE_1.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44933:7]
    connect _dataBuffer_WIRE_4[1].ctrl.rfSrc1, _dataBuffer_WIRE_1.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44934:7]
    connect _dataBuffer_WIRE_4[1].ctrl.fuOpType, _dataBuffer_WIRE_1.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44935:7]
    connect _dataBuffer_WIRE_4[1].ctrl.fuType, _dataBuffer_WIRE_1.ctrl.fuType @[build/NutShell.fir.opt.mlir 44936:7]
    connect _dataBuffer_WIRE_4[1].ctrl.src2Type, _dataBuffer_WIRE_1.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44937:7]
    connect _dataBuffer_WIRE_4[1].ctrl.src1Type, _dataBuffer_WIRE_1.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44938:7]
    connect _dataBuffer_WIRE_4[1].cf.isBranch, _dataBuffer_WIRE_1.cf.isBranch @[build/NutShell.fir.opt.mlir 44939:7]
    connect _dataBuffer_WIRE_4[1].cf.runahead_checkpoint_id, _dataBuffer_WIRE_1.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44940:7]
    connect _dataBuffer_WIRE_4[1].cf.crossPageIPFFix, _dataBuffer_WIRE_1.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44941:7]
    connect _dataBuffer_WIRE_4[1].cf.isRVC, _dataBuffer_WIRE_1.cf.isRVC @[build/NutShell.fir.opt.mlir 44942:7]
    connect _dataBuffer_WIRE_4[1].cf.brIdx, _dataBuffer_WIRE_1.cf.brIdx @[build/NutShell.fir.opt.mlir 44943:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[0], _dataBuffer_WIRE_1.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44944:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[1], _dataBuffer_WIRE_1.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 44945:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[2], _dataBuffer_WIRE_1.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 44946:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[3], _dataBuffer_WIRE_1.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 44947:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[4], _dataBuffer_WIRE_1.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 44948:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[5], _dataBuffer_WIRE_1.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 44949:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[6], _dataBuffer_WIRE_1.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 44950:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[7], _dataBuffer_WIRE_1.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 44951:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[8], _dataBuffer_WIRE_1.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 44952:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[9], _dataBuffer_WIRE_1.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 44953:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[10], _dataBuffer_WIRE_1.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 44954:7]
    connect _dataBuffer_WIRE_4[1].cf.intrVec[11], _dataBuffer_WIRE_1.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 44955:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[0], _dataBuffer_WIRE_1.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 44956:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[1], _dataBuffer_WIRE_1.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 44957:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[2], _dataBuffer_WIRE_1.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 44958:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[3], _dataBuffer_WIRE_1.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 44959:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[4], _dataBuffer_WIRE_1.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 44960:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[5], _dataBuffer_WIRE_1.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 44961:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[6], _dataBuffer_WIRE_1.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 44962:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[7], _dataBuffer_WIRE_1.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 44963:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[8], _dataBuffer_WIRE_1.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 44964:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[9], _dataBuffer_WIRE_1.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 44965:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[10], _dataBuffer_WIRE_1.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 44966:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[11], _dataBuffer_WIRE_1.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 44967:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[12], _dataBuffer_WIRE_1.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 44968:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[13], _dataBuffer_WIRE_1.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 44969:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[14], _dataBuffer_WIRE_1.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 44970:7]
    connect _dataBuffer_WIRE_4[1].cf.exceptionVec[15], _dataBuffer_WIRE_1.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 44971:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.valid, _dataBuffer_WIRE_1.cf.redirect.valid @[build/NutShell.fir.opt.mlir 44972:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.rtype, _dataBuffer_WIRE_1.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 44973:7]
    connect _dataBuffer_WIRE_4[1].cf.redirect.target, _dataBuffer_WIRE_1.cf.redirect.target @[build/NutShell.fir.opt.mlir 44974:7]
    connect _dataBuffer_WIRE_4[1].cf.pnpc, _dataBuffer_WIRE_1.cf.pnpc @[build/NutShell.fir.opt.mlir 44975:7]
    connect _dataBuffer_WIRE_4[1].cf.pc, _dataBuffer_WIRE_1.cf.pc @[build/NutShell.fir.opt.mlir 44976:7]
    connect _dataBuffer_WIRE_4[1].cf.instr, _dataBuffer_WIRE_1.cf.instr @[build/NutShell.fir.opt.mlir 44977:7]
    connect _dataBuffer_WIRE_4[2].data.imm, _dataBuffer_WIRE_2.data.imm @[build/NutShell.fir.opt.mlir 44978:7]
    connect _dataBuffer_WIRE_4[2].data.src2, _dataBuffer_WIRE_2.data.src2 @[build/NutShell.fir.opt.mlir 44979:7]
    connect _dataBuffer_WIRE_4[2].data.src1, _dataBuffer_WIRE_2.data.src1 @[build/NutShell.fir.opt.mlir 44980:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isBlocked, _dataBuffer_WIRE_2.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 44981:7]
    connect _dataBuffer_WIRE_4[2].ctrl.noSpecExec, _dataBuffer_WIRE_2.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 44982:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isSrc2Forward, _dataBuffer_WIRE_2.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 44983:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isSrc1Forward, _dataBuffer_WIRE_2.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 44984:7]
    connect _dataBuffer_WIRE_4[2].ctrl.isNutCoreTrap, _dataBuffer_WIRE_2.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 44985:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfDest, _dataBuffer_WIRE_2.ctrl.rfDest @[build/NutShell.fir.opt.mlir 44986:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfWen, _dataBuffer_WIRE_2.ctrl.rfWen @[build/NutShell.fir.opt.mlir 44987:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfSrc2, _dataBuffer_WIRE_2.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 44988:7]
    connect _dataBuffer_WIRE_4[2].ctrl.rfSrc1, _dataBuffer_WIRE_2.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 44989:7]
    connect _dataBuffer_WIRE_4[2].ctrl.fuOpType, _dataBuffer_WIRE_2.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 44990:7]
    connect _dataBuffer_WIRE_4[2].ctrl.fuType, _dataBuffer_WIRE_2.ctrl.fuType @[build/NutShell.fir.opt.mlir 44991:7]
    connect _dataBuffer_WIRE_4[2].ctrl.src2Type, _dataBuffer_WIRE_2.ctrl.src2Type @[build/NutShell.fir.opt.mlir 44992:7]
    connect _dataBuffer_WIRE_4[2].ctrl.src1Type, _dataBuffer_WIRE_2.ctrl.src1Type @[build/NutShell.fir.opt.mlir 44993:7]
    connect _dataBuffer_WIRE_4[2].cf.isBranch, _dataBuffer_WIRE_2.cf.isBranch @[build/NutShell.fir.opt.mlir 44994:7]
    connect _dataBuffer_WIRE_4[2].cf.runahead_checkpoint_id, _dataBuffer_WIRE_2.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 44995:7]
    connect _dataBuffer_WIRE_4[2].cf.crossPageIPFFix, _dataBuffer_WIRE_2.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 44996:7]
    connect _dataBuffer_WIRE_4[2].cf.isRVC, _dataBuffer_WIRE_2.cf.isRVC @[build/NutShell.fir.opt.mlir 44997:7]
    connect _dataBuffer_WIRE_4[2].cf.brIdx, _dataBuffer_WIRE_2.cf.brIdx @[build/NutShell.fir.opt.mlir 44998:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[0], _dataBuffer_WIRE_2.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 44999:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[1], _dataBuffer_WIRE_2.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45000:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[2], _dataBuffer_WIRE_2.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45001:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[3], _dataBuffer_WIRE_2.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45002:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[4], _dataBuffer_WIRE_2.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45003:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[5], _dataBuffer_WIRE_2.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45004:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[6], _dataBuffer_WIRE_2.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45005:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[7], _dataBuffer_WIRE_2.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45006:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[8], _dataBuffer_WIRE_2.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45007:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[9], _dataBuffer_WIRE_2.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45008:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[10], _dataBuffer_WIRE_2.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45009:7]
    connect _dataBuffer_WIRE_4[2].cf.intrVec[11], _dataBuffer_WIRE_2.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45010:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[0], _dataBuffer_WIRE_2.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45011:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[1], _dataBuffer_WIRE_2.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45012:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[2], _dataBuffer_WIRE_2.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45013:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[3], _dataBuffer_WIRE_2.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45014:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[4], _dataBuffer_WIRE_2.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45015:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[5], _dataBuffer_WIRE_2.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45016:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[6], _dataBuffer_WIRE_2.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45017:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[7], _dataBuffer_WIRE_2.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45018:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[8], _dataBuffer_WIRE_2.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45019:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[9], _dataBuffer_WIRE_2.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45020:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[10], _dataBuffer_WIRE_2.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45021:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[11], _dataBuffer_WIRE_2.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45022:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[12], _dataBuffer_WIRE_2.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45023:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[13], _dataBuffer_WIRE_2.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45024:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[14], _dataBuffer_WIRE_2.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45025:7]
    connect _dataBuffer_WIRE_4[2].cf.exceptionVec[15], _dataBuffer_WIRE_2.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45026:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.valid, _dataBuffer_WIRE_2.cf.redirect.valid @[build/NutShell.fir.opt.mlir 45027:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.rtype, _dataBuffer_WIRE_2.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45028:7]
    connect _dataBuffer_WIRE_4[2].cf.redirect.target, _dataBuffer_WIRE_2.cf.redirect.target @[build/NutShell.fir.opt.mlir 45029:7]
    connect _dataBuffer_WIRE_4[2].cf.pnpc, _dataBuffer_WIRE_2.cf.pnpc @[build/NutShell.fir.opt.mlir 45030:7]
    connect _dataBuffer_WIRE_4[2].cf.pc, _dataBuffer_WIRE_2.cf.pc @[build/NutShell.fir.opt.mlir 45031:7]
    connect _dataBuffer_WIRE_4[2].cf.instr, _dataBuffer_WIRE_2.cf.instr @[build/NutShell.fir.opt.mlir 45032:7]
    connect _dataBuffer_WIRE_4[3].data.imm, _dataBuffer_WIRE_3.data.imm @[build/NutShell.fir.opt.mlir 45033:7]
    connect _dataBuffer_WIRE_4[3].data.src2, _dataBuffer_WIRE_3.data.src2 @[build/NutShell.fir.opt.mlir 45034:7]
    connect _dataBuffer_WIRE_4[3].data.src1, _dataBuffer_WIRE_3.data.src1 @[build/NutShell.fir.opt.mlir 45035:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isBlocked, _dataBuffer_WIRE_3.ctrl.isBlocked @[build/NutShell.fir.opt.mlir 45036:7]
    connect _dataBuffer_WIRE_4[3].ctrl.noSpecExec, _dataBuffer_WIRE_3.ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 45037:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isSrc2Forward, _dataBuffer_WIRE_3.ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 45038:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isSrc1Forward, _dataBuffer_WIRE_3.ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 45039:7]
    connect _dataBuffer_WIRE_4[3].ctrl.isNutCoreTrap, _dataBuffer_WIRE_3.ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 45040:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfDest, _dataBuffer_WIRE_3.ctrl.rfDest @[build/NutShell.fir.opt.mlir 45041:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfWen, _dataBuffer_WIRE_3.ctrl.rfWen @[build/NutShell.fir.opt.mlir 45042:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfSrc2, _dataBuffer_WIRE_3.ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 45043:7]
    connect _dataBuffer_WIRE_4[3].ctrl.rfSrc1, _dataBuffer_WIRE_3.ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 45044:7]
    connect _dataBuffer_WIRE_4[3].ctrl.fuOpType, _dataBuffer_WIRE_3.ctrl.fuOpType @[build/NutShell.fir.opt.mlir 45045:7]
    connect _dataBuffer_WIRE_4[3].ctrl.fuType, _dataBuffer_WIRE_3.ctrl.fuType @[build/NutShell.fir.opt.mlir 45046:7]
    connect _dataBuffer_WIRE_4[3].ctrl.src2Type, _dataBuffer_WIRE_3.ctrl.src2Type @[build/NutShell.fir.opt.mlir 45047:7]
    connect _dataBuffer_WIRE_4[3].ctrl.src1Type, _dataBuffer_WIRE_3.ctrl.src1Type @[build/NutShell.fir.opt.mlir 45048:7]
    connect _dataBuffer_WIRE_4[3].cf.isBranch, _dataBuffer_WIRE_3.cf.isBranch @[build/NutShell.fir.opt.mlir 45049:7]
    connect _dataBuffer_WIRE_4[3].cf.runahead_checkpoint_id, _dataBuffer_WIRE_3.cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 45050:7]
    connect _dataBuffer_WIRE_4[3].cf.crossPageIPFFix, _dataBuffer_WIRE_3.cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 45051:7]
    connect _dataBuffer_WIRE_4[3].cf.isRVC, _dataBuffer_WIRE_3.cf.isRVC @[build/NutShell.fir.opt.mlir 45052:7]
    connect _dataBuffer_WIRE_4[3].cf.brIdx, _dataBuffer_WIRE_3.cf.brIdx @[build/NutShell.fir.opt.mlir 45053:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[0], _dataBuffer_WIRE_3.cf.intrVec[0] @[build/NutShell.fir.opt.mlir 45054:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[1], _dataBuffer_WIRE_3.cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45055:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[2], _dataBuffer_WIRE_3.cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45056:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[3], _dataBuffer_WIRE_3.cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45057:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[4], _dataBuffer_WIRE_3.cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45058:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[5], _dataBuffer_WIRE_3.cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45059:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[6], _dataBuffer_WIRE_3.cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45060:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[7], _dataBuffer_WIRE_3.cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45061:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[8], _dataBuffer_WIRE_3.cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45062:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[9], _dataBuffer_WIRE_3.cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45063:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[10], _dataBuffer_WIRE_3.cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45064:7]
    connect _dataBuffer_WIRE_4[3].cf.intrVec[11], _dataBuffer_WIRE_3.cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45065:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[0], _dataBuffer_WIRE_3.cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45066:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[1], _dataBuffer_WIRE_3.cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45067:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[2], _dataBuffer_WIRE_3.cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45068:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[3], _dataBuffer_WIRE_3.cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45069:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[4], _dataBuffer_WIRE_3.cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45070:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[5], _dataBuffer_WIRE_3.cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45071:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[6], _dataBuffer_WIRE_3.cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45072:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[7], _dataBuffer_WIRE_3.cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45073:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[8], _dataBuffer_WIRE_3.cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45074:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[9], _dataBuffer_WIRE_3.cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45075:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[10], _dataBuffer_WIRE_3.cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45076:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[11], _dataBuffer_WIRE_3.cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45077:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[12], _dataBuffer_WIRE_3.cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45078:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[13], _dataBuffer_WIRE_3.cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45079:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[14], _dataBuffer_WIRE_3.cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45080:7]
    connect _dataBuffer_WIRE_4[3].cf.exceptionVec[15], _dataBuffer_WIRE_3.cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45081:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.valid, _dataBuffer_WIRE_3.cf.redirect.valid @[build/NutShell.fir.opt.mlir 45082:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.rtype, _dataBuffer_WIRE_3.cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45083:7]
    connect _dataBuffer_WIRE_4[3].cf.redirect.target, _dataBuffer_WIRE_3.cf.redirect.target @[build/NutShell.fir.opt.mlir 45084:7]
    connect _dataBuffer_WIRE_4[3].cf.pnpc, _dataBuffer_WIRE_3.cf.pnpc @[build/NutShell.fir.opt.mlir 45085:7]
    connect _dataBuffer_WIRE_4[3].cf.pc, _dataBuffer_WIRE_3.cf.pc @[build/NutShell.fir.opt.mlir 45086:7]
    connect _dataBuffer_WIRE_4[3].cf.instr, _dataBuffer_WIRE_3.cf.instr @[build/NutShell.fir.opt.mlir 45087:7]
    regreset dataBuffer : { cf : { instr : UInt<64>, pc : UInt<39>, pnpc : UInt<39>, redirect : { target : UInt<39>, rtype : UInt<1>, valid : UInt<1> }, exceptionVec : UInt<1>[16], intrVec : UInt<1>[12], brIdx : UInt<4>, isRVC : UInt<1>, crossPageIPFFix : UInt<1>, runahead_checkpoint_id : UInt<64>, isBranch : UInt<1> }, ctrl : { src1Type : UInt<1>, src2Type : UInt<1>, fuType : UInt<3>, fuOpType : UInt<7>, rfSrc1 : UInt<5>, rfSrc2 : UInt<5>, rfWen : UInt<1>, rfDest : UInt<5>, isNutCoreTrap : UInt<1>, isSrc1Forward : UInt<1>, isSrc2Forward : UInt<1>, noSpecExec : UInt<1>, isBlocked : UInt<1> }, data : { src1 : UInt<64>, src2 : UInt<64>, imm : UInt<64> } }[4], clock, reset, _dataBuffer_WIRE_4 @[build/NutShell.fir.opt.mlir 45088:21]
    regreset ringBufferHead : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 45090:25]
    regreset ringBufferTail : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 45091:25]
    node ringBufferEmpty = eq(ringBufferHead, ringBufferTail) @[build/NutShell.fir.opt.mlir 45093:26]
    node _ringBufferAllowin_T = add(ringBufferHead, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 45096:31]
    node _ringBufferAllowin_T_1 = tail(_ringBufferAllowin_T, 1) @[build/NutShell.fir.opt.mlir 45098:33]
    node _ringBufferAllowin_T_2 = neq(_ringBufferAllowin_T_1, ringBufferTail) @[build/NutShell.fir.opt.mlir 45100:33]
    node _ringBufferAllowin_T_3 = add(ringBufferHead, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 45103:33]
    node _ringBufferAllowin_T_4 = tail(_ringBufferAllowin_T_3, 1) @[build/NutShell.fir.opt.mlir 45105:33]
    node _ringBufferAllowin_T_5 = neq(_ringBufferAllowin_T_4, ringBufferTail) @[build/NutShell.fir.opt.mlir 45107:33]
    node _ringBufferAllowin_T_6 = and(_ringBufferAllowin_T_5, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 45109:33]
    node ringBufferAllowin = and(_ringBufferAllowin_T_2, _ringBufferAllowin_T_6) @[build/NutShell.fir.opt.mlir 45111:28]
    wire needEnqueue : UInt<1>[2] @[build/NutShell.fir.opt.mlir 45112:22]
    connect needEnqueue[0], frontend.io.out[0].valid @[build/NutShell.fir.opt.mlir 45115:7]
    connect needEnqueue[1], frontend.io.out[1].valid @[build/NutShell.fir.opt.mlir 45116:7]
    node enqueueSize = add(needEnqueue[0], needEnqueue[1]) @[build/NutShell.fir.opt.mlir 45118:22]
    node enqueueFire_0 = geq(enqueueSize, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 45120:24]
    node enqueueFire_1 = geq(enqueueSize, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 45122:24]
    node _wen_T = and(frontend.io.out[0].ready, frontend.io.out[0].valid) @[build/NutShell.fir.opt.mlir 45124:17]
    node _wen_T_1 = and(frontend.io.out[1].ready, frontend.io.out[1].valid) @[build/NutShell.fir.opt.mlir 45126:19]
    node wen = or(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 45128:14]
    when wen : @[build/NutShell.fir.opt.mlir 45129:7]
      when enqueueFire_0 : @[build/NutShell.fir.opt.mlir 45130:9]
        node _T_1 = add(UInt<1>(0), ringBufferHead) @[build/NutShell.fir.opt.mlir 45132:19]
        node _T_2 = tail(_T_1, 1) @[build/NutShell.fir.opt.mlir 45134:19]
        node _dataBuffer_T = mux(needEnqueue[0], frontend.io.out[0].bits, frontend.io.out[1].bits) @[build/NutShell.fir.opt.mlir 45136:28]
        connect dataBuffer[_T_2], _dataBuffer_T @[build/NutShell.fir.opt.mlir 45138:11]
      when enqueueFire_1 : @[build/NutShell.fir.opt.mlir 45140:9]
        node _T_3 = add(UInt<1>(1), ringBufferHead) @[build/NutShell.fir.opt.mlir 45142:19]
        node _T_4 = tail(_T_3, 1) @[build/NutShell.fir.opt.mlir 45144:19]
        connect dataBuffer[_T_4], frontend.io.out[1].bits @[build/NutShell.fir.opt.mlir 45146:11]
      node _ringBufferHead_T = add(ringBufferHead, enqueueSize) @[build/NutShell.fir.opt.mlir 45149:30]
      node _ringBufferHead_T_1 = tail(_ringBufferHead_T, 1) @[build/NutShell.fir.opt.mlir 45151:32]
      connect ringBufferHead, _ringBufferHead_T_1 @[build/NutShell.fir.opt.mlir 45152:9]
    node _frontend_io_out_0_ready_T = eq(frontend.io.out[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45155:37]
    node _frontend_io_out_0_ready_T_1 = or(ringBufferAllowin, _frontend_io_out_0_ready_T) @[build/NutShell.fir.opt.mlir 45157:39]
    connect frontend.io.out[0].ready, _frontend_io_out_0_ready_T_1 @[build/NutShell.fir.opt.mlir 45158:7]
    node _frontend_io_out_1_ready_T = eq(frontend.io.out[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45160:37]
    node _frontend_io_out_1_ready_T_1 = or(ringBufferAllowin, _frontend_io_out_1_ready_T) @[build/NutShell.fir.opt.mlir 45162:39]
    connect frontend.io.out[1].ready, _frontend_io_out_1_ready_T_1 @[build/NutShell.fir.opt.mlir 45163:7]
    connect backend.io.in[0].bits.data.imm, dataBuffer[ringBufferTail].data.imm @[build/NutShell.fir.opt.mlir 45167:7]
    connect backend.io.in[0].bits.data.src2, dataBuffer[ringBufferTail].data.src2 @[build/NutShell.fir.opt.mlir 45171:7]
    connect backend.io.in[0].bits.data.src1, dataBuffer[ringBufferTail].data.src1 @[build/NutShell.fir.opt.mlir 45175:7]
    connect backend.io.in[0].bits.ctrl.isBlocked, dataBuffer[ringBufferTail].ctrl.isBlocked @[build/NutShell.fir.opt.mlir 45179:7]
    connect backend.io.in[0].bits.ctrl.noSpecExec, dataBuffer[ringBufferTail].ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 45183:7]
    connect backend.io.in[0].bits.ctrl.isSrc2Forward, dataBuffer[ringBufferTail].ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 45187:7]
    connect backend.io.in[0].bits.ctrl.isSrc1Forward, dataBuffer[ringBufferTail].ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 45191:7]
    connect backend.io.in[0].bits.ctrl.isNutCoreTrap, dataBuffer[ringBufferTail].ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 45195:7]
    connect backend.io.in[0].bits.ctrl.rfDest, dataBuffer[ringBufferTail].ctrl.rfDest @[build/NutShell.fir.opt.mlir 45199:7]
    connect backend.io.in[0].bits.ctrl.rfWen, dataBuffer[ringBufferTail].ctrl.rfWen @[build/NutShell.fir.opt.mlir 45203:7]
    connect backend.io.in[0].bits.ctrl.rfSrc2, dataBuffer[ringBufferTail].ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 45207:7]
    connect backend.io.in[0].bits.ctrl.rfSrc1, dataBuffer[ringBufferTail].ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 45211:7]
    connect backend.io.in[0].bits.ctrl.fuOpType, dataBuffer[ringBufferTail].ctrl.fuOpType @[build/NutShell.fir.opt.mlir 45215:7]
    connect backend.io.in[0].bits.ctrl.fuType, dataBuffer[ringBufferTail].ctrl.fuType @[build/NutShell.fir.opt.mlir 45219:7]
    connect backend.io.in[0].bits.ctrl.src2Type, dataBuffer[ringBufferTail].ctrl.src2Type @[build/NutShell.fir.opt.mlir 45223:7]
    connect backend.io.in[0].bits.ctrl.src1Type, dataBuffer[ringBufferTail].ctrl.src1Type @[build/NutShell.fir.opt.mlir 45227:7]
    connect backend.io.in[0].bits.cf.isBranch, dataBuffer[ringBufferTail].cf.isBranch @[build/NutShell.fir.opt.mlir 45231:7]
    connect backend.io.in[0].bits.cf.runahead_checkpoint_id, dataBuffer[ringBufferTail].cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 45235:7]
    connect backend.io.in[0].bits.cf.crossPageIPFFix, dataBuffer[ringBufferTail].cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 45239:7]
    connect backend.io.in[0].bits.cf.isRVC, dataBuffer[ringBufferTail].cf.isRVC @[build/NutShell.fir.opt.mlir 45243:7]
    connect backend.io.in[0].bits.cf.brIdx, dataBuffer[ringBufferTail].cf.brIdx @[build/NutShell.fir.opt.mlir 45247:7]
    connect backend.io.in[0].bits.cf.intrVec[0], dataBuffer[ringBufferTail].cf.intrVec[0] @[build/NutShell.fir.opt.mlir 45252:7]
    connect backend.io.in[0].bits.cf.intrVec[1], dataBuffer[ringBufferTail].cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45257:7]
    connect backend.io.in[0].bits.cf.intrVec[2], dataBuffer[ringBufferTail].cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45262:7]
    connect backend.io.in[0].bits.cf.intrVec[3], dataBuffer[ringBufferTail].cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45267:7]
    connect backend.io.in[0].bits.cf.intrVec[4], dataBuffer[ringBufferTail].cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45272:7]
    connect backend.io.in[0].bits.cf.intrVec[5], dataBuffer[ringBufferTail].cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45277:7]
    connect backend.io.in[0].bits.cf.intrVec[6], dataBuffer[ringBufferTail].cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45282:7]
    connect backend.io.in[0].bits.cf.intrVec[7], dataBuffer[ringBufferTail].cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45287:7]
    connect backend.io.in[0].bits.cf.intrVec[8], dataBuffer[ringBufferTail].cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45292:7]
    connect backend.io.in[0].bits.cf.intrVec[9], dataBuffer[ringBufferTail].cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45297:7]
    connect backend.io.in[0].bits.cf.intrVec[10], dataBuffer[ringBufferTail].cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45302:7]
    connect backend.io.in[0].bits.cf.intrVec[11], dataBuffer[ringBufferTail].cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45307:7]
    connect backend.io.in[0].bits.cf.exceptionVec[0], dataBuffer[ringBufferTail].cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45312:7]
    connect backend.io.in[0].bits.cf.exceptionVec[1], dataBuffer[ringBufferTail].cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45317:7]
    connect backend.io.in[0].bits.cf.exceptionVec[2], dataBuffer[ringBufferTail].cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45322:7]
    connect backend.io.in[0].bits.cf.exceptionVec[3], dataBuffer[ringBufferTail].cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45327:7]
    connect backend.io.in[0].bits.cf.exceptionVec[4], dataBuffer[ringBufferTail].cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45332:7]
    connect backend.io.in[0].bits.cf.exceptionVec[5], dataBuffer[ringBufferTail].cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45337:7]
    connect backend.io.in[0].bits.cf.exceptionVec[6], dataBuffer[ringBufferTail].cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45342:7]
    connect backend.io.in[0].bits.cf.exceptionVec[7], dataBuffer[ringBufferTail].cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45347:7]
    connect backend.io.in[0].bits.cf.exceptionVec[8], dataBuffer[ringBufferTail].cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45352:7]
    connect backend.io.in[0].bits.cf.exceptionVec[9], dataBuffer[ringBufferTail].cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45357:7]
    connect backend.io.in[0].bits.cf.exceptionVec[10], dataBuffer[ringBufferTail].cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45362:7]
    connect backend.io.in[0].bits.cf.exceptionVec[11], dataBuffer[ringBufferTail].cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45367:7]
    connect backend.io.in[0].bits.cf.exceptionVec[12], dataBuffer[ringBufferTail].cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45372:7]
    connect backend.io.in[0].bits.cf.exceptionVec[13], dataBuffer[ringBufferTail].cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45377:7]
    connect backend.io.in[0].bits.cf.exceptionVec[14], dataBuffer[ringBufferTail].cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45382:7]
    connect backend.io.in[0].bits.cf.exceptionVec[15], dataBuffer[ringBufferTail].cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45387:7]
    connect backend.io.in[0].bits.cf.redirect.valid, dataBuffer[ringBufferTail].cf.redirect.valid @[build/NutShell.fir.opt.mlir 45392:7]
    connect backend.io.in[0].bits.cf.redirect.rtype, dataBuffer[ringBufferTail].cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45397:7]
    connect backend.io.in[0].bits.cf.redirect.target, dataBuffer[ringBufferTail].cf.redirect.target @[build/NutShell.fir.opt.mlir 45402:7]
    connect backend.io.in[0].bits.cf.pnpc, dataBuffer[ringBufferTail].cf.pnpc @[build/NutShell.fir.opt.mlir 45406:7]
    connect backend.io.in[0].bits.cf.pc, dataBuffer[ringBufferTail].cf.pc @[build/NutShell.fir.opt.mlir 45410:7]
    connect backend.io.in[0].bits.cf.instr, dataBuffer[ringBufferTail].cf.instr @[build/NutShell.fir.opt.mlir 45414:7]
    node _backend_io_in_0_valid_T = neq(ringBufferHead, ringBufferTail) @[build/NutShell.fir.opt.mlir 45416:35]
    connect backend.io.in[0].valid, _backend_io_in_0_valid_T @[build/NutShell.fir.opt.mlir 45417:7]
    node _deq2_StartIndex_T = add(ringBufferTail, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 45419:29]
    node deq2_StartIndex = tail(_deq2_StartIndex_T, 1) @[build/NutShell.fir.opt.mlir 45421:26]
    connect backend.io.in[1].bits.data.imm, dataBuffer[deq2_StartIndex].data.imm @[build/NutShell.fir.opt.mlir 45425:7]
    connect backend.io.in[1].bits.data.src2, dataBuffer[deq2_StartIndex].data.src2 @[build/NutShell.fir.opt.mlir 45429:7]
    connect backend.io.in[1].bits.data.src1, dataBuffer[deq2_StartIndex].data.src1 @[build/NutShell.fir.opt.mlir 45433:7]
    connect backend.io.in[1].bits.ctrl.isBlocked, dataBuffer[deq2_StartIndex].ctrl.isBlocked @[build/NutShell.fir.opt.mlir 45437:7]
    connect backend.io.in[1].bits.ctrl.noSpecExec, dataBuffer[deq2_StartIndex].ctrl.noSpecExec @[build/NutShell.fir.opt.mlir 45441:7]
    connect backend.io.in[1].bits.ctrl.isSrc2Forward, dataBuffer[deq2_StartIndex].ctrl.isSrc2Forward @[build/NutShell.fir.opt.mlir 45445:7]
    connect backend.io.in[1].bits.ctrl.isSrc1Forward, dataBuffer[deq2_StartIndex].ctrl.isSrc1Forward @[build/NutShell.fir.opt.mlir 45449:7]
    connect backend.io.in[1].bits.ctrl.isNutCoreTrap, dataBuffer[deq2_StartIndex].ctrl.isNutCoreTrap @[build/NutShell.fir.opt.mlir 45453:7]
    connect backend.io.in[1].bits.ctrl.rfDest, dataBuffer[deq2_StartIndex].ctrl.rfDest @[build/NutShell.fir.opt.mlir 45457:7]
    connect backend.io.in[1].bits.ctrl.rfWen, dataBuffer[deq2_StartIndex].ctrl.rfWen @[build/NutShell.fir.opt.mlir 45461:7]
    connect backend.io.in[1].bits.ctrl.rfSrc2, dataBuffer[deq2_StartIndex].ctrl.rfSrc2 @[build/NutShell.fir.opt.mlir 45465:7]
    connect backend.io.in[1].bits.ctrl.rfSrc1, dataBuffer[deq2_StartIndex].ctrl.rfSrc1 @[build/NutShell.fir.opt.mlir 45469:7]
    connect backend.io.in[1].bits.ctrl.fuOpType, dataBuffer[deq2_StartIndex].ctrl.fuOpType @[build/NutShell.fir.opt.mlir 45473:7]
    connect backend.io.in[1].bits.ctrl.fuType, dataBuffer[deq2_StartIndex].ctrl.fuType @[build/NutShell.fir.opt.mlir 45477:7]
    connect backend.io.in[1].bits.ctrl.src2Type, dataBuffer[deq2_StartIndex].ctrl.src2Type @[build/NutShell.fir.opt.mlir 45481:7]
    connect backend.io.in[1].bits.ctrl.src1Type, dataBuffer[deq2_StartIndex].ctrl.src1Type @[build/NutShell.fir.opt.mlir 45485:7]
    connect backend.io.in[1].bits.cf.isBranch, dataBuffer[deq2_StartIndex].cf.isBranch @[build/NutShell.fir.opt.mlir 45489:7]
    connect backend.io.in[1].bits.cf.runahead_checkpoint_id, dataBuffer[deq2_StartIndex].cf.runahead_checkpoint_id @[build/NutShell.fir.opt.mlir 45493:7]
    connect backend.io.in[1].bits.cf.crossPageIPFFix, dataBuffer[deq2_StartIndex].cf.crossPageIPFFix @[build/NutShell.fir.opt.mlir 45497:7]
    connect backend.io.in[1].bits.cf.isRVC, dataBuffer[deq2_StartIndex].cf.isRVC @[build/NutShell.fir.opt.mlir 45501:7]
    connect backend.io.in[1].bits.cf.brIdx, dataBuffer[deq2_StartIndex].cf.brIdx @[build/NutShell.fir.opt.mlir 45505:7]
    connect backend.io.in[1].bits.cf.intrVec[0], dataBuffer[deq2_StartIndex].cf.intrVec[0] @[build/NutShell.fir.opt.mlir 45510:7]
    connect backend.io.in[1].bits.cf.intrVec[1], dataBuffer[deq2_StartIndex].cf.intrVec[1] @[build/NutShell.fir.opt.mlir 45515:7]
    connect backend.io.in[1].bits.cf.intrVec[2], dataBuffer[deq2_StartIndex].cf.intrVec[2] @[build/NutShell.fir.opt.mlir 45520:7]
    connect backend.io.in[1].bits.cf.intrVec[3], dataBuffer[deq2_StartIndex].cf.intrVec[3] @[build/NutShell.fir.opt.mlir 45525:7]
    connect backend.io.in[1].bits.cf.intrVec[4], dataBuffer[deq2_StartIndex].cf.intrVec[4] @[build/NutShell.fir.opt.mlir 45530:7]
    connect backend.io.in[1].bits.cf.intrVec[5], dataBuffer[deq2_StartIndex].cf.intrVec[5] @[build/NutShell.fir.opt.mlir 45535:7]
    connect backend.io.in[1].bits.cf.intrVec[6], dataBuffer[deq2_StartIndex].cf.intrVec[6] @[build/NutShell.fir.opt.mlir 45540:7]
    connect backend.io.in[1].bits.cf.intrVec[7], dataBuffer[deq2_StartIndex].cf.intrVec[7] @[build/NutShell.fir.opt.mlir 45545:7]
    connect backend.io.in[1].bits.cf.intrVec[8], dataBuffer[deq2_StartIndex].cf.intrVec[8] @[build/NutShell.fir.opt.mlir 45550:7]
    connect backend.io.in[1].bits.cf.intrVec[9], dataBuffer[deq2_StartIndex].cf.intrVec[9] @[build/NutShell.fir.opt.mlir 45555:7]
    connect backend.io.in[1].bits.cf.intrVec[10], dataBuffer[deq2_StartIndex].cf.intrVec[10] @[build/NutShell.fir.opt.mlir 45560:7]
    connect backend.io.in[1].bits.cf.intrVec[11], dataBuffer[deq2_StartIndex].cf.intrVec[11] @[build/NutShell.fir.opt.mlir 45565:7]
    connect backend.io.in[1].bits.cf.exceptionVec[0], dataBuffer[deq2_StartIndex].cf.exceptionVec[0] @[build/NutShell.fir.opt.mlir 45570:7]
    connect backend.io.in[1].bits.cf.exceptionVec[1], dataBuffer[deq2_StartIndex].cf.exceptionVec[1] @[build/NutShell.fir.opt.mlir 45575:7]
    connect backend.io.in[1].bits.cf.exceptionVec[2], dataBuffer[deq2_StartIndex].cf.exceptionVec[2] @[build/NutShell.fir.opt.mlir 45580:7]
    connect backend.io.in[1].bits.cf.exceptionVec[3], dataBuffer[deq2_StartIndex].cf.exceptionVec[3] @[build/NutShell.fir.opt.mlir 45585:7]
    connect backend.io.in[1].bits.cf.exceptionVec[4], dataBuffer[deq2_StartIndex].cf.exceptionVec[4] @[build/NutShell.fir.opt.mlir 45590:7]
    connect backend.io.in[1].bits.cf.exceptionVec[5], dataBuffer[deq2_StartIndex].cf.exceptionVec[5] @[build/NutShell.fir.opt.mlir 45595:7]
    connect backend.io.in[1].bits.cf.exceptionVec[6], dataBuffer[deq2_StartIndex].cf.exceptionVec[6] @[build/NutShell.fir.opt.mlir 45600:7]
    connect backend.io.in[1].bits.cf.exceptionVec[7], dataBuffer[deq2_StartIndex].cf.exceptionVec[7] @[build/NutShell.fir.opt.mlir 45605:7]
    connect backend.io.in[1].bits.cf.exceptionVec[8], dataBuffer[deq2_StartIndex].cf.exceptionVec[8] @[build/NutShell.fir.opt.mlir 45610:7]
    connect backend.io.in[1].bits.cf.exceptionVec[9], dataBuffer[deq2_StartIndex].cf.exceptionVec[9] @[build/NutShell.fir.opt.mlir 45615:7]
    connect backend.io.in[1].bits.cf.exceptionVec[10], dataBuffer[deq2_StartIndex].cf.exceptionVec[10] @[build/NutShell.fir.opt.mlir 45620:7]
    connect backend.io.in[1].bits.cf.exceptionVec[11], dataBuffer[deq2_StartIndex].cf.exceptionVec[11] @[build/NutShell.fir.opt.mlir 45625:7]
    connect backend.io.in[1].bits.cf.exceptionVec[12], dataBuffer[deq2_StartIndex].cf.exceptionVec[12] @[build/NutShell.fir.opt.mlir 45630:7]
    connect backend.io.in[1].bits.cf.exceptionVec[13], dataBuffer[deq2_StartIndex].cf.exceptionVec[13] @[build/NutShell.fir.opt.mlir 45635:7]
    connect backend.io.in[1].bits.cf.exceptionVec[14], dataBuffer[deq2_StartIndex].cf.exceptionVec[14] @[build/NutShell.fir.opt.mlir 45640:7]
    connect backend.io.in[1].bits.cf.exceptionVec[15], dataBuffer[deq2_StartIndex].cf.exceptionVec[15] @[build/NutShell.fir.opt.mlir 45645:7]
    connect backend.io.in[1].bits.cf.redirect.valid, dataBuffer[deq2_StartIndex].cf.redirect.valid @[build/NutShell.fir.opt.mlir 45650:7]
    connect backend.io.in[1].bits.cf.redirect.rtype, dataBuffer[deq2_StartIndex].cf.redirect.rtype @[build/NutShell.fir.opt.mlir 45655:7]
    connect backend.io.in[1].bits.cf.redirect.target, dataBuffer[deq2_StartIndex].cf.redirect.target @[build/NutShell.fir.opt.mlir 45660:7]
    connect backend.io.in[1].bits.cf.pnpc, dataBuffer[deq2_StartIndex].cf.pnpc @[build/NutShell.fir.opt.mlir 45664:7]
    connect backend.io.in[1].bits.cf.pc, dataBuffer[deq2_StartIndex].cf.pc @[build/NutShell.fir.opt.mlir 45668:7]
    connect backend.io.in[1].bits.cf.instr, dataBuffer[deq2_StartIndex].cf.instr @[build/NutShell.fir.opt.mlir 45672:7]
    node _backend_io_in_1_valid_T = neq(ringBufferHead, deq2_StartIndex) @[build/NutShell.fir.opt.mlir 45674:35]
    node _backend_io_in_1_valid_T_1 = and(_backend_io_in_1_valid_T, backend.io.in[0].valid) @[build/NutShell.fir.opt.mlir 45676:37]
    connect backend.io.in[1].valid, _backend_io_in_1_valid_T_1 @[build/NutShell.fir.opt.mlir 45677:7]
    node _dequeueSize_T = and(backend.io.in[0].ready, backend.io.in[0].valid) @[build/NutShell.fir.opt.mlir 45679:25]
    node _dequeueSize_T_1 = and(backend.io.in[1].ready, backend.io.in[1].valid) @[build/NutShell.fir.opt.mlir 45681:27]
    node dequeueSize = add(_dequeueSize_T, _dequeueSize_T_1) @[build/NutShell.fir.opt.mlir 45683:22]
    node dequeueFire = gt(dequeueSize, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45685:22]
    when dequeueFire : @[build/NutShell.fir.opt.mlir 45686:7]
      node _ringBufferTail_T = add(ringBufferTail, dequeueSize) @[build/NutShell.fir.opt.mlir 45688:30]
      node _ringBufferTail_T_1 = tail(_ringBufferTail_T, 1) @[build/NutShell.fir.opt.mlir 45690:32]
      connect ringBufferTail, _ringBufferTail_T_1 @[build/NutShell.fir.opt.mlir 45691:9]
    when _T : @[build/NutShell.fir.opt.mlir 45693:7]
      connect ringBufferHead, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 45696:9]
      connect ringBufferTail, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 45699:9]
    inst LogPerfHelper of LogPerfHelper_20 @[build/NutShell.fir.opt.mlir 45701:99]
    wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 45702:18]
    connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 45707:7]
    connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 45708:7]
    connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 45709:7]
    connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 45710:7]
    node _T_5 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 45712:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 45714:7]
      node _T_6 = add(UInt<3>(4), ringBufferHead) @[build/NutShell.fir.opt.mlir 45716:17]
      node _T_7 = sub(_T_6, ringBufferTail) @[build/NutShell.fir.opt.mlir 45718:17]
      node _T_8 = tail(_T_7, 1) @[build/NutShell.fir.opt.mlir 45720:17]
      node _T_9 = rem(_T_8, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 45722:17]
      node _T_10 = asUInt(reset) @[build/NutShell.fir.opt.mlir 45724:18]
      node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 45726:18]
      when _T_11 : @[build/NutShell.fir.opt.mlir 45727:9]
        skip @[build/NutShell.fir.opt.mlir 45728:11]
    inst mmioXbar of SimpleBusCrossbarNto1 @[build/NutShell.fir.opt.mlir 45731:56]
    connect mmioXbar.clock, clock @[build/NutShell.fir.opt.mlir 45760:7]
    connect mmioXbar.reset, reset @[build/NutShell.fir.opt.mlir 45761:7]
    inst dmemXbar of SimpleBusCrossbarNto1_1 @[build/NutShell.fir.opt.mlir 45762:56]
    connect dmemXbar.clock, clock @[build/NutShell.fir.opt.mlir 45809:7]
    connect dmemXbar.reset, reset @[build/NutShell.fir.opt.mlir 45810:7]
    node _T_12 = bits(frontend.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 45812:16]
    node _T_13 = or(_T_12, frontend.io.bpFlush) @[build/NutShell.fir.opt.mlir 45814:16]
    inst itlb of EmbeddedTLB @[build/NutShell.fir.opt.mlir 45815:84]
    connect itlb.clock, clock @[build/NutShell.fir.opt.mlir 45853:7]
    connect itlb.reset, reset @[build/NutShell.fir.opt.mlir 45854:7]
    connect frontend.io.imem.req.ready, itlb.io.in.req.ready @[build/NutShell.fir.opt.mlir 45855:7]
    connect itlb.io.in.req.valid, frontend.io.imem.req.valid @[build/NutShell.fir.opt.mlir 45856:7]
    connect itlb.io.in.req.bits, frontend.io.imem.req.bits @[build/NutShell.fir.opt.mlir 45857:7]
    connect itlb.io.in.resp.ready, frontend.io.imem.resp.ready @[build/NutShell.fir.opt.mlir 45858:7]
    connect frontend.io.imem.resp.valid, itlb.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45859:7]
    connect frontend.io.imem.resp.bits, itlb.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45860:7]
    connect itlb.io.mem.req.ready, dmemXbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 45861:7]
    connect dmemXbar.io.in[1].req.valid, itlb.io.mem.req.valid @[build/NutShell.fir.opt.mlir 45862:7]
    connect dmemXbar.io.in[1].req.bits, itlb.io.mem.req.bits @[build/NutShell.fir.opt.mlir 45863:7]
    connect dmemXbar.io.in[1].resp.ready, itlb.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 45864:7]
    connect itlb.io.mem.resp.valid, dmemXbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 45865:7]
    connect itlb.io.mem.resp.bits, dmemXbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 45866:7]
    connect itlb.io.flush, _T_13 @[build/NutShell.fir.opt.mlir 45867:7]
    connect itlb.io.csrMMU.privilegeMode, backend.io.memMMU.imem.privilegeMode @[build/NutShell.fir.opt.mlir 45868:7]
    connect itlb.io.csrMMU.status_sum, backend.io.memMMU.imem.status_sum @[build/NutShell.fir.opt.mlir 45869:7]
    connect itlb.io.csrMMU.status_mxr, backend.io.memMMU.imem.status_mxr @[build/NutShell.fir.opt.mlir 45870:7]
    connect backend.io.memMMU.imem.loadPF, itlb.io.csrMMU.loadPF @[build/NutShell.fir.opt.mlir 45871:7]
    connect backend.io.memMMU.imem.storePF, itlb.io.csrMMU.storePF @[build/NutShell.fir.opt.mlir 45872:7]
    connect backend.io.memMMU.imem.addr, itlb.io.csrMMU.addr @[build/NutShell.fir.opt.mlir 45873:7]
    connect frontend.io.ipf, itlb.io.ipf @[build/NutShell.fir.opt.mlir 45874:7]
    node _io_imem_T = bits(frontend.io.flushVec, 0, 0) @[build/NutShell.fir.opt.mlir 45876:21]
    node _io_imem_T_1 = or(_io_imem_T, frontend.io.bpFlush) @[build/NutShell.fir.opt.mlir 45878:23]
    node _io_imem_T_2 = mux(_io_imem_T_1, UInt<2>(3), UInt<2>(0)) @[build/NutShell.fir.opt.mlir 45881:23]
    inst io_imem_cache of Cache @[build/NutShell.fir.opt.mlir 45882:105]
    connect io_imem_cache.clock, clock @[build/NutShell.fir.opt.mlir 45922:7]
    connect io_imem_cache.reset, reset @[build/NutShell.fir.opt.mlir 45923:7]
    connect io_imem_cache.io.flush, _io_imem_T_2 @[build/NutShell.fir.opt.mlir 45924:7]
    connect itlb.io.out.req.ready, io_imem_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 45925:7]
    connect io_imem_cache.io.in.req.valid, itlb.io.out.req.valid @[build/NutShell.fir.opt.mlir 45926:7]
    connect io_imem_cache.io.in.req.bits, itlb.io.out.req.bits @[build/NutShell.fir.opt.mlir 45927:7]
    connect io_imem_cache.io.in.resp.ready, itlb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 45928:7]
    connect itlb.io.out.resp.valid, io_imem_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45929:7]
    connect itlb.io.out.resp.bits, io_imem_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45930:7]
    connect io_imem_cache.io.mmio.req.ready, mmioXbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 45931:7]
    connect mmioXbar.io.in[0].req.valid, io_imem_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 45932:7]
    connect mmioXbar.io.in[0].req.bits, io_imem_cache.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 45933:7]
    connect mmioXbar.io.in[0].resp.ready, io_imem_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 45934:7]
    connect io_imem_cache.io.mmio.resp.valid, mmioXbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 45935:7]
    connect io_imem_cache.io.mmio.resp.bits, mmioXbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 45936:7]
    connect itlb.io.cacheEmpty, io_imem_cache.io.empty @[build/NutShell.fir.opt.mlir 45937:7]
    connect io.imem.coh.req.ready, io_imem_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 45938:7]
    connect io_imem_cache.io.out.coh.req.valid, io.imem.coh.req.valid @[build/NutShell.fir.opt.mlir 45939:7]
    connect io_imem_cache.io.out.coh.req.bits, io.imem.coh.req.bits @[build/NutShell.fir.opt.mlir 45940:7]
    connect io_imem_cache.io.out.coh.resp.ready, io.imem.coh.resp.ready @[build/NutShell.fir.opt.mlir 45941:7]
    connect io.imem.coh.resp.valid, io_imem_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 45942:7]
    connect io.imem.coh.resp.bits, io_imem_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 45943:7]
    connect io.imem.mem.resp.ready, io_imem_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 45944:7]
    connect io_imem_cache.io.out.mem.resp.valid, io.imem.mem.resp.valid @[build/NutShell.fir.opt.mlir 45945:7]
    connect io_imem_cache.io.out.mem.resp.bits, io.imem.mem.resp.bits @[build/NutShell.fir.opt.mlir 45946:7]
    connect io.imem.mem.req.bits, io_imem_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 45947:7]
    connect io.imem.mem.req.valid, io_imem_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 45948:7]
    connect io_imem_cache.io.out.mem.req.ready, io.imem.mem.req.ready @[build/NutShell.fir.opt.mlir 45949:7]
    inst dtlb of EmbeddedTLB_1 @[build/NutShell.fir.opt.mlir 45950:285]
    connect dtlb.clock, clock @[build/NutShell.fir.opt.mlir 45987:7]
    connect dtlb.reset, reset @[build/NutShell.fir.opt.mlir 45988:7]
    connect backend.io.dmem.req.ready, dtlb.io.in.req.ready @[build/NutShell.fir.opt.mlir 45989:7]
    connect dtlb.io.in.req.valid, backend.io.dmem.req.valid @[build/NutShell.fir.opt.mlir 45990:7]
    connect dtlb.io.in.req.bits, backend.io.dmem.req.bits @[build/NutShell.fir.opt.mlir 45991:7]
    connect dtlb.io.in.resp.ready, backend.io.dmem.resp.ready @[build/NutShell.fir.opt.mlir 45992:7]
    connect backend.io.dmem.resp.valid, dtlb.io.in.resp.valid @[build/NutShell.fir.opt.mlir 45993:7]
    connect backend.io.dmem.resp.bits, dtlb.io.in.resp.bits @[build/NutShell.fir.opt.mlir 45994:7]
    connect dtlb.io.mem.req.ready, dmemXbar.io.in[2].req.ready @[build/NutShell.fir.opt.mlir 45995:7]
    connect dmemXbar.io.in[2].req.valid, dtlb.io.mem.req.valid @[build/NutShell.fir.opt.mlir 45996:7]
    connect dmemXbar.io.in[2].req.bits, dtlb.io.mem.req.bits @[build/NutShell.fir.opt.mlir 45997:7]
    connect dmemXbar.io.in[2].resp.ready, dtlb.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 45998:7]
    connect dtlb.io.mem.resp.valid, dmemXbar.io.in[2].resp.valid @[build/NutShell.fir.opt.mlir 45999:7]
    connect dtlb.io.mem.resp.bits, dmemXbar.io.in[2].resp.bits @[build/NutShell.fir.opt.mlir 46000:7]
    connect dtlb.io.flush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46002:7]
    connect dtlb.io.csrMMU.privilegeMode, backend.io.memMMU.dmem.privilegeMode @[build/NutShell.fir.opt.mlir 46003:7]
    connect dtlb.io.csrMMU.status_sum, backend.io.memMMU.dmem.status_sum @[build/NutShell.fir.opt.mlir 46004:7]
    connect dtlb.io.csrMMU.status_mxr, backend.io.memMMU.dmem.status_mxr @[build/NutShell.fir.opt.mlir 46005:7]
    connect backend.io.memMMU.dmem.loadPF, dtlb.io.csrMMU.loadPF @[build/NutShell.fir.opt.mlir 46006:7]
    connect backend.io.memMMU.dmem.storePF, dtlb.io.csrMMU.storePF @[build/NutShell.fir.opt.mlir 46007:7]
    connect backend.io.memMMU.dmem.addr, dtlb.io.csrMMU.addr @[build/NutShell.fir.opt.mlir 46008:7]
    connect dtlb.io.out.req.ready, dmemXbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 46009:7]
    connect dmemXbar.io.in[0].req.valid, dtlb.io.out.req.valid @[build/NutShell.fir.opt.mlir 46010:7]
    connect dmemXbar.io.in[0].req.bits, dtlb.io.out.req.bits @[build/NutShell.fir.opt.mlir 46011:7]
    connect dmemXbar.io.in[0].resp.ready, dtlb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 46012:7]
    connect dtlb.io.out.resp.valid, dmemXbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 46013:7]
    connect dtlb.io.out.resp.bits, dmemXbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 46014:7]
    inst io_dmem_cache of Cache_1 @[build/NutShell.fir.opt.mlir 46015:102]
    connect io_dmem_cache.clock, clock @[build/NutShell.fir.opt.mlir 46055:7]
    connect io_dmem_cache.reset, reset @[build/NutShell.fir.opt.mlir 46056:7]
    connect io_dmem_cache.io.flush, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 46059:7]
    connect dmemXbar.io.out.req.ready, io_dmem_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 46060:7]
    connect io_dmem_cache.io.in.req.valid, dmemXbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 46061:7]
    connect io_dmem_cache.io.in.req.bits, dmemXbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 46062:7]
    connect io_dmem_cache.io.in.resp.ready, dmemXbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 46063:7]
    connect dmemXbar.io.out.resp.valid, io_dmem_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 46064:7]
    connect dmemXbar.io.out.resp.bits, io_dmem_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 46065:7]
    connect io_dmem_cache.io.mmio.req.ready, mmioXbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 46066:7]
    connect mmioXbar.io.in[1].req.valid, io_dmem_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 46067:7]
    connect mmioXbar.io.in[1].req.bits, io_dmem_cache.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 46068:7]
    connect mmioXbar.io.in[1].resp.ready, io_dmem_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 46069:7]
    connect io_dmem_cache.io.mmio.resp.valid, mmioXbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 46070:7]
    connect io_dmem_cache.io.mmio.resp.bits, mmioXbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 46071:7]
    connect dtlb.io.cacheEmpty, io_dmem_cache.io.empty @[build/NutShell.fir.opt.mlir 46072:7]
    connect io.dmem.coh.req.ready, io_dmem_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 46073:7]
    connect io_dmem_cache.io.out.coh.req.valid, io.dmem.coh.req.valid @[build/NutShell.fir.opt.mlir 46074:7]
    connect io_dmem_cache.io.out.coh.req.bits, io.dmem.coh.req.bits @[build/NutShell.fir.opt.mlir 46075:7]
    connect io_dmem_cache.io.out.coh.resp.ready, io.dmem.coh.resp.ready @[build/NutShell.fir.opt.mlir 46076:7]
    connect io.dmem.coh.resp.valid, io_dmem_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 46077:7]
    connect io.dmem.coh.resp.bits, io_dmem_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 46078:7]
    connect io.dmem.mem.resp.ready, io_dmem_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 46079:7]
    connect io_dmem_cache.io.out.mem.resp.valid, io.dmem.mem.resp.valid @[build/NutShell.fir.opt.mlir 46080:7]
    connect io_dmem_cache.io.out.mem.resp.bits, io.dmem.mem.resp.bits @[build/NutShell.fir.opt.mlir 46081:7]
    connect io.dmem.mem.req.bits, io_dmem_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 46082:7]
    connect io.dmem.mem.req.valid, io_dmem_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 46083:7]
    connect io_dmem_cache.io.out.mem.req.ready, io.dmem.mem.req.ready @[build/NutShell.fir.opt.mlir 46084:7]
    connect frontend.io.redirect, backend.io.redirect @[build/NutShell.fir.opt.mlir 46085:7]
    node _backend_io_flush_T = bits(frontend.io.flushVec, 3, 2) @[build/NutShell.fir.opt.mlir 46087:30]
    connect backend.io.flush, _backend_io_flush_T @[build/NutShell.fir.opt.mlir 46088:7]
    connect io.frontend.req.ready, dmemXbar.io.in[3].req.ready @[build/NutShell.fir.opt.mlir 46089:7]
    connect dmemXbar.io.in[3].req.valid, io.frontend.req.valid @[build/NutShell.fir.opt.mlir 46090:7]
    connect dmemXbar.io.in[3].req.bits, io.frontend.req.bits @[build/NutShell.fir.opt.mlir 46091:7]
    connect dmemXbar.io.in[3].resp.ready, io.frontend.resp.ready @[build/NutShell.fir.opt.mlir 46092:7]
    connect io.frontend.resp.valid, dmemXbar.io.in[3].resp.valid @[build/NutShell.fir.opt.mlir 46093:7]
    connect io.frontend.resp.bits, dmemXbar.io.in[3].resp.bits @[build/NutShell.fir.opt.mlir 46094:7]
    connect io.mmio.resp.ready, mmioXbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 46095:7]
    connect mmioXbar.io.out.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 46096:7]
    connect mmioXbar.io.out.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 46097:7]
    connect io.mmio.req.bits, mmioXbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 46098:7]
    connect io.mmio.req.valid, mmioXbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 46099:7]
    connect mmioXbar.io.out.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 46100:7]
    node _T_14 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 46102:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 46103:7]
      node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46105:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46107:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 46108:9]
        skip @[build/NutShell.fir.opt.mlir 46109:11]
      node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46112:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46114:18]
      when _T_18 : @[build/NutShell.fir.opt.mlir 46115:9]
        skip @[build/NutShell.fir.opt.mlir 46116:11]
    connect backend.exu_csr_meip__bore, backend_exu_csr_meip__bore @[build/NutShell.fir.opt.mlir 46119:7]
    connect backend.exu_csr_mtip__bore, backend_exu_csr_mtip__bore @[build/NutShell.fir.opt.mlir 46120:7]
    connect frontend_idu__WIRE__bore, frontend.idu__WIRE__bore @[build/NutShell.fir.opt.mlir 46121:7]
    connect backend.exu_csr_msip__bore, backend_exu_csr_msip__bore @[build/NutShell.fir.opt.mlir 46122:7]
    connect frontend.idu_decoder1_intrVec__bore, backend.exu_csr__WIRE__bore @[build/NutShell.fir.opt.mlir 46123:7]
    connect frontend.idu_decoder2_intrVec__bore, backend.exu_csr__WIRE__bore_0 @[build/NutShell.fir.opt.mlir 46124:7]
    connect frontend.ifu_bp1_req__bore, backend.exu_alu_REG__bore @[build/NutShell.fir.opt.mlir 46125:7]
    connect backend.exu_csr_perfCntCond_4__bore, frontend.ifu_r__bore @[build/NutShell.fir.opt.mlir 46126:7]
    connect frontend.ifu_bp1_flushTLB__bore, backend.exu_mou__WIRE_1__bore @[build/NutShell.fir.opt.mlir 46127:7]
    connect frontend.ifu_bp1_flushBTB__bore, backend.exu_mou__WIRE__bore @[build/NutShell.fir.opt.mlir 46128:7]
    connect backend.exu_csr_perfCntCond_15__bore, frontend.ifu__WIRE__bore @[build/NutShell.fir.opt.mlir 46129:7]
    connect itlb.satp__bore, backend.exu_csr_satp__bore @[build/NutShell.fir.opt.mlir 46130:7]
    connect itlb.flushTLB__bore, backend.exu_mou__WIRE_1__bore_0 @[build/NutShell.fir.opt.mlir 46131:7]
    connect io_imem_cache.flushICache__bore, backend.exu_mou__WIRE__bore_0 @[build/NutShell.fir.opt.mlir 46132:7]
    connect dtlb.tlbExec_isAMO__bore, backend.exu_lsu__WIRE__bore @[build/NutShell.fir.opt.mlir 46133:7]
    connect frontend.idu_decoder1_vmEnable__bore, dtlb._WIRE_2__bore @[build/NutShell.fir.opt.mlir 46134:7]
    connect frontend.idu_decoder2_vmEnable__bore, dtlb._WIRE_2__bore_0 @[build/NutShell.fir.opt.mlir 46135:7]
    connect backend.exu_lsu_lsExecUnit_dtlbEnable__bore, dtlb._WIRE_2__bore_1 @[build/NutShell.fir.opt.mlir 46136:7]
    connect backend.exu_lsu_dtlbEnable__bore, dtlb._WIRE_2__bore_2 @[build/NutShell.fir.opt.mlir 46137:7]
    connect backend.exu_lsu_lsExecUnit_dtlbFinish__bore, dtlb._WIRE__bore @[build/NutShell.fir.opt.mlir 46138:7]
    connect backend.exu_lsu_dtlbFinish__bore, dtlb._WIRE__bore_0 @[build/NutShell.fir.opt.mlir 46139:7]
    connect dtlb.satp__bore, backend.exu_csr_satp__bore_0 @[build/NutShell.fir.opt.mlir 46140:7]
    connect dtlb.flushTLB__bore, backend.exu_mou__WIRE_1__bore_1 @[build/NutShell.fir.opt.mlir 46141:7]
    connect backend.exu_lsu_lsExecUnit_dtlbPF__bore, dtlb._WIRE_1__bore @[build/NutShell.fir.opt.mlir 46142:7]
    connect backend.exu_lsu_dtlbPF__bore, dtlb._WIRE_1__bore_0 @[build/NutShell.fir.opt.mlir 46143:7]
    connect backend.exu_lsu_lsuMMIO__bore, io_dmem_cache.s3__WIRE__bore @[build/NutShell.fir.opt.mlir 46144:7]

  module CoherenceManager : @[build/NutShell.fir.opt.mlir 46146:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46146:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46146:74]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } } @[build/NutShell.fir.opt.mlir 46146:101]

    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46181:16]
    node inflight = neq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 46183:19]
    node _T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46185:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46188:15]
    node _T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46190:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46192:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 46194:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46196:15]
    node _T_6 = and(io.in.req.valid, _T_5) @[build/NutShell.fir.opt.mlir 46198:15]
    node _T_7 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46200:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46202:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 46204:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46206:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46208:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46210:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 46212:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46214:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 46215:9]
        skip @[build/NutShell.fir.opt.mlir 46216:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 46218:9]
    node _reqLatch_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46221:22]
    node _reqLatch_T_1 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46223:24]
    node _reqLatch_T_2 = eq(_reqLatch_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46225:24]
    node _reqLatch_T_3 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46227:24]
    node _reqLatch_T_4 = eq(_reqLatch_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46229:24]
    node _reqLatch_T_5 = and(_reqLatch_T_2, _reqLatch_T_4) @[build/NutShell.fir.opt.mlir 46231:24]
    node _reqLatch_T_6 = and(_reqLatch_T, _reqLatch_T_5) @[build/NutShell.fir.opt.mlir 46233:24]
    reg reqLatch : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 46234:19]
    when _reqLatch_T_6 : @[build/NutShell.fir.opt.mlir 46235:7]
      connect reqLatch, io.in.req.bits @[build/NutShell.fir.opt.mlir 46236:9]
    connect io.out.coh.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 46238:7]
    connect io.out.coh.req.bits.cmd, UInt<4>(8) @[build/NutShell.fir.opt.mlir 46241:7]
    connect io.out.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46243:7]
    connect io.out.mem.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 46244:7]
    connect io.out.mem.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46246:7]
    connect io.in.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46248:7]
    connect io.out.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46250:7]
    node _T_14 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46252:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 46253:7]
      node _io_out_mem_req_valid_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46255:36]
      node _io_out_mem_req_valid_T_1 = and(io.in.req.valid, _io_out_mem_req_valid_T) @[build/NutShell.fir.opt.mlir 46257:38]
      connect io.out.mem.req.valid, _io_out_mem_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46258:9]
      node _io_in_req_ready_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46260:31]
      node _io_in_req_ready_T_1 = and(io.out.mem.req.ready, _io_in_req_ready_T) @[build/NutShell.fir.opt.mlir 46262:33]
      connect io.in.req.ready, _io_in_req_ready_T_1 @[build/NutShell.fir.opt.mlir 46263:9]
    else :
      node _T_15 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46266:18]
      node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46268:18]
      node _T_17 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46270:18]
      node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46272:18]
      node _T_19 = and(_T_16, _T_18) @[build/NutShell.fir.opt.mlir 46274:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 46275:9]
        node _io_out_coh_req_valid_T = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46277:38]
        node _io_out_coh_req_valid_T_1 = and(io.in.req.valid, _io_out_coh_req_valid_T) @[build/NutShell.fir.opt.mlir 46279:40]
        connect io.out.coh.req.valid, _io_out_coh_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46280:11]
        node _io_in_req_ready_T_2 = eq(inflight, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46282:35]
        node _io_in_req_ready_T_3 = and(io.out.coh.req.ready, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 46284:35]
        connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 46285:11]
    connect io.out.mem.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 46288:7]
    connect io.in.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 46289:7]
    connect io.in.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 46290:7]
    node _T_20 = eq(UInt<3>(0), state) @[build/NutShell.fir.opt.mlir 46292:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 46301:7]
      node _T_21 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 46303:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 46304:9]
        node _T_22 = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46306:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46308:20]
        node _T_24 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46310:20]
        node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46312:20]
        node _T_26 = and(_T_23, _T_25) @[build/NutShell.fir.opt.mlir 46314:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 46315:11]
          node _state_T = mux(UInt<1>(1), UInt<3>(1), UInt<3>(4)) @[build/NutShell.fir.opt.mlir 46317:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 46319:13]
        else :
          node _T_27 = eq(io.in.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46322:22]
          when _T_27 : @[build/NutShell.fir.opt.mlir 46323:13]
            connect state, UInt<3>(5) @[build/NutShell.fir.opt.mlir 46325:15]
    else :
      node _T_28 = eq(UInt<3>(1), state) @[build/NutShell.fir.opt.mlir 46331:18]
      when _T_28 : @[build/NutShell.fir.opt.mlir 46332:9]
        node _T_29 = and(io.out.coh.resp.ready, io.out.coh.resp.valid) @[build/NutShell.fir.opt.mlir 46334:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 46335:11]
          node _state_T_1 = eq(io.out.coh.resp.bits.cmd, UInt<4>(12)) @[build/NutShell.fir.opt.mlir 46337:27]
          node _state_T_2 = mux(_state_T_1, UInt<3>(2), UInt<3>(3)) @[build/NutShell.fir.opt.mlir 46339:27]
          connect state, _state_T_2 @[build/NutShell.fir.opt.mlir 46340:13]
      else :
        node _T_30 = eq(UInt<3>(2), state) @[build/NutShell.fir.opt.mlir 46344:20]
        when _T_30 : @[build/NutShell.fir.opt.mlir 46345:11]
          connect io.out.coh.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 46346:13]
          connect io.in.resp.valid, io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 46347:13]
          connect io.in.resp.bits, io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 46348:13]
          node _T_31 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 46350:22]
          node _T_32 = eq(io.in.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46352:22]
          node _T_33 = and(_T_31, _T_32) @[build/NutShell.fir.opt.mlir 46354:22]
          when _T_33 : @[build/NutShell.fir.opt.mlir 46355:13]
            connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46357:15]
        else :
          node _T_34 = eq(UInt<3>(3), state) @[build/NutShell.fir.opt.mlir 46361:22]
          when _T_34 : @[build/NutShell.fir.opt.mlir 46362:13]
            connect io.out.mem.req.bits, reqLatch @[build/NutShell.fir.opt.mlir 46363:15]
            connect io.out.mem.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46365:15]
            node _T_35 = and(io.out.mem.req.ready, io.out.mem.req.valid) @[build/NutShell.fir.opt.mlir 46367:24]
            when _T_35 : @[build/NutShell.fir.opt.mlir 46368:15]
              connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 46370:17]
          else :
            node _T_36 = eq(UInt<3>(4), state) @[build/NutShell.fir.opt.mlir 46374:24]
            when _T_36 : @[build/NutShell.fir.opt.mlir 46375:15]
              node _T_37 = and(io.out.mem.resp.ready, io.out.mem.resp.valid) @[build/NutShell.fir.opt.mlir 46377:26]
              node _T_38 = eq(io.out.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46379:26]
              node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 46381:26]
              when _T_39 : @[build/NutShell.fir.opt.mlir 46382:17]
                connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46384:19]
            else :
              node _T_40 = eq(UInt<3>(5), state) @[build/NutShell.fir.opt.mlir 46388:26]
              when _T_40 : @[build/NutShell.fir.opt.mlir 46389:17]
                node _T_41 = and(io.out.mem.resp.ready, io.out.mem.resp.valid) @[build/NutShell.fir.opt.mlir 46391:28]
                when _T_41 : @[build/NutShell.fir.opt.mlir 46392:19]
                  connect state, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46394:21]

  module LockingArbiter_2 : @[build/NutShell.fir.opt.mlir 46403:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46403:48]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46403:74]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 46403:101]

    wire io_chosen_choice : UInt @[build/NutShell.fir.opt.mlir 46416:27]
    connect io_chosen_choice, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46418:7]
    connect io.chosen, io_chosen_choice @[build/NutShell.fir.opt.mlir 46419:7]
    connect io.out.valid, io.in[io.chosen].valid @[build/NutShell.fir.opt.mlir 46422:7]
    connect io.out.bits, io.in[io.chosen].bits @[build/NutShell.fir.opt.mlir 46425:7]
    regreset lockCount_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46427:26]
    reg lockIdx : UInt, clock @[build/NutShell.fir.opt.mlir 46428:18]
    node locked = neq(lockCount_value, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46431:17]
    node _wantsLock_T = bits(io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46433:23]
    node _wantsLock_T_1 = bits(io.out.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 46435:25]
    node wantsLock = and(_wantsLock_T, _wantsLock_T_1) @[build/NutShell.fir.opt.mlir 46437:20]
    node _T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 46439:13]
    node _T_1 = and(_T, wantsLock) @[build/NutShell.fir.opt.mlir 46441:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 46443:7]
      connect lockIdx, io.chosen @[build/NutShell.fir.opt.mlir 46444:9]
      node wrap = eq(lockCount_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46446:17]
      node _value_T = add(lockCount_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46448:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 46450:23]
      connect lockCount_value, _value_T_1 @[build/NutShell.fir.opt.mlir 46451:9]
    when locked : @[build/NutShell.fir.opt.mlir 46453:7]
      connect io.chosen, lockIdx @[build/NutShell.fir.opt.mlir 46454:9]
    node _T_2 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46457:15]
    node _io_in_0_ready_T = eq(lockIdx, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46459:27]
    node _io_in_0_ready_T_1 = mux(locked, _io_in_0_ready_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46461:29]
    node _io_in_0_ready_T_2 = and(_io_in_0_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 46463:29]
    connect io.in[0].ready, _io_in_0_ready_T_2 @[build/NutShell.fir.opt.mlir 46464:7]
    node _io_in_1_ready_T = eq(lockIdx, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46466:27]
    node _io_in_1_ready_T_1 = mux(locked, _io_in_1_ready_T, _T_2) @[build/NutShell.fir.opt.mlir 46468:29]
    node _io_in_1_ready_T_2 = and(_io_in_1_ready_T_1, io.out.ready) @[build/NutShell.fir.opt.mlir 46470:29]
    connect io.in[1].ready, _io_in_1_ready_T_2 @[build/NutShell.fir.opt.mlir 46471:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 46472:7]
      connect io_chosen_choice, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46473:9]

  module SimpleBusCrossbarNto1_2 : @[build/NutShell.fir.opt.mlir 46476:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46476:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46476:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[2], out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 46476:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46505:16]
    inst inputArb of LockingArbiter_2 @[build/NutShell.fir.opt.mlir 46506:56]
    connect inputArb.clock, clock @[build/NutShell.fir.opt.mlir 46522:7]
    connect inputArb.reset, reset @[build/NutShell.fir.opt.mlir 46523:7]
    connect io.in[0].req.ready, inputArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 46524:7]
    connect inputArb.io.in[0].valid, io.in[0].req.valid @[build/NutShell.fir.opt.mlir 46525:7]
    connect inputArb.io.in[0].bits, io.in[0].req.bits @[build/NutShell.fir.opt.mlir 46526:7]
    connect io.in[1].req.ready, inputArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 46527:7]
    connect inputArb.io.in[1].valid, io.in[1].req.valid @[build/NutShell.fir.opt.mlir 46528:7]
    connect inputArb.io.in[1].bits, io.in[1].req.bits @[build/NutShell.fir.opt.mlir 46529:7]
    node _T = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46531:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46534:15]
    node _T_2 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46536:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46538:15]
    node _T_4 = and(_T_1, _T_3) @[build/NutShell.fir.opt.mlir 46540:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46542:15]
    node _T_6 = and(inputArb.io.out.valid, _T_5) @[build/NutShell.fir.opt.mlir 46544:15]
    node _T_7 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46546:15]
    node _T_8 = eq(_T_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46548:15]
    node _T_9 = and(_T_6, _T_8) @[build/NutShell.fir.opt.mlir 46550:15]
    node _T_10 = eq(_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46552:16]
    node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 46554:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46556:16]
    when _T_12 : @[build/NutShell.fir.opt.mlir 46558:7]
      node _T_13 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46560:18]
      when _T_13 : @[build/NutShell.fir.opt.mlir 46561:9]
        skip @[build/NutShell.fir.opt.mlir 46562:11]
      assert(clock, _T_10, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 46564:9]
    regreset inflightSrc : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46566:22]
    connect io.out.req.bits, inputArb.io.out.bits @[build/NutShell.fir.opt.mlir 46567:7]
    node _io_out_req_valid_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46569:30]
    node _io_out_req_valid_T_1 = and(inputArb.io.out.valid, _io_out_req_valid_T) @[build/NutShell.fir.opt.mlir 46571:32]
    connect io.out.req.valid, _io_out_req_valid_T_1 @[build/NutShell.fir.opt.mlir 46572:7]
    node _inputArb_io_out_ready_T = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46574:35]
    node _inputArb_io_out_ready_T_1 = and(io.out.req.ready, _inputArb_io_out_ready_T) @[build/NutShell.fir.opt.mlir 46576:37]
    connect inputArb.io.out.ready, _inputArb_io_out_ready_T_1 @[build/NutShell.fir.opt.mlir 46577:7]
    connect io.in[0].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 46578:7]
    connect io.in[1].resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 46579:7]
    connect io.in[0].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46581:7]
    connect io.in[1].resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46583:7]
    connect io.in[inflightSrc].resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 46587:7]
    connect io.out.resp.ready, io.in[inflightSrc].resp.ready @[build/NutShell.fir.opt.mlir 46591:7]
    node _T_14 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 46593:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 46598:7]
      node _T_15 = and(inputArb.io.out.ready, inputArb.io.out.valid) @[build/NutShell.fir.opt.mlir 46600:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 46601:9]
        connect inflightSrc, inputArb.io.chosen @[build/NutShell.fir.opt.mlir 46602:11]
        node _T_16 = bits(inputArb.io.out.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 46604:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46606:20]
        node _T_18 = bits(inputArb.io.out.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 46608:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46610:20]
        node _T_20 = and(_T_17, _T_19) @[build/NutShell.fir.opt.mlir 46612:20]
        when _T_20 : @[build/NutShell.fir.opt.mlir 46613:11]
          connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 46615:13]
        else :
          node _T_21 = eq(inputArb.io.out.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 46618:22]
          node _T_22 = eq(inputArb.io.out.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 46620:22]
          node _T_23 = or(_T_21, _T_22) @[build/NutShell.fir.opt.mlir 46622:22]
          when _T_23 : @[build/NutShell.fir.opt.mlir 46623:13]
            connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 46625:15]
    else :
      node _T_24 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 46631:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 46632:9]
        node _T_25 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46634:20]
        node _T_26 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46636:20]
        node _T_27 = and(_T_25, _T_26) @[build/NutShell.fir.opt.mlir 46638:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 46639:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46641:13]
      else :
        node _T_28 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 46645:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 46646:11]
          node _T_29 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46648:22]
          when _T_29 : @[build/NutShell.fir.opt.mlir 46649:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46651:15]

  module AXI42SimpleBusConverter : @[build/NutShell.fir.opt.mlir 46657:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 46657:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 46657:81]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<18>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<18>, user : UInt<1> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 46657:108]

    regreset inflight_id_reg : UInt, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46712:26]
    regreset inflight_type : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46714:24]
    wire default_mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 46715:22]
    connect default_mem.resp.bits.rdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46733:7]
    connect default_mem.resp.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46736:7]
    connect default_mem.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46738:7]
    connect default_mem.resp.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46740:7]
    connect default_mem.req.bits.wdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46742:7]
    connect default_mem.req.bits.wmask, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46745:7]
    connect default_mem.req.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46747:7]
    connect default_mem.req.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46750:7]
    connect default_mem.req.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46753:7]
    connect default_mem.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46755:7]
    connect default_mem.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46757:7]
    wire default_axi : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } @[build/NutShell.fir.opt.mlir 46758:22]
    connect default_axi.r.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46811:7]
    connect default_axi.r.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46813:7]
    connect default_axi.r.bits.last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46815:7]
    connect default_axi.r.bits.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46817:7]
    connect default_axi.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46819:7]
    connect default_axi.r.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46821:7]
    connect default_axi.r.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46823:7]
    connect default_axi.ar.bits.qos, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46825:7]
    connect default_axi.ar.bits.cache, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46827:7]
    connect default_axi.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46829:7]
    connect default_axi.ar.bits.burst, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46831:7]
    connect default_axi.ar.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46833:7]
    connect default_axi.ar.bits.len, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46835:7]
    connect default_axi.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46837:7]
    connect default_axi.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46839:7]
    connect default_axi.ar.bits.prot, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46841:7]
    connect default_axi.ar.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46843:7]
    connect default_axi.ar.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46845:7]
    connect default_axi.ar.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46847:7]
    connect default_axi.b.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46849:7]
    connect default_axi.b.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46851:7]
    connect default_axi.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46853:7]
    connect default_axi.b.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46855:7]
    connect default_axi.b.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46857:7]
    connect default_axi.w.bits.last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46859:7]
    connect default_axi.w.bits.strb, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46861:7]
    connect default_axi.w.bits.data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 46863:7]
    connect default_axi.w.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46865:7]
    connect default_axi.w.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46867:7]
    connect default_axi.aw.bits.qos, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46869:7]
    connect default_axi.aw.bits.cache, UInt<4>(0) @[build/NutShell.fir.opt.mlir 46871:7]
    connect default_axi.aw.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46873:7]
    connect default_axi.aw.bits.burst, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46875:7]
    connect default_axi.aw.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46877:7]
    connect default_axi.aw.bits.len, UInt<8>(0) @[build/NutShell.fir.opt.mlir 46879:7]
    connect default_axi.aw.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46881:7]
    connect default_axi.aw.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46883:7]
    connect default_axi.aw.bits.prot, UInt<3>(0) @[build/NutShell.fir.opt.mlir 46885:7]
    connect default_axi.aw.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 46887:7]
    connect default_axi.aw.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46889:7]
    connect default_axi.aw.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46891:7]
    connect io.out.req.bits, default_mem.req.bits @[build/NutShell.fir.opt.mlir 46892:7]
    connect io.in.r.bits.resp, default_axi.r.bits.resp @[build/NutShell.fir.opt.mlir 46893:7]
    connect io.in.r.bits.data, default_axi.r.bits.data @[build/NutShell.fir.opt.mlir 46894:7]
    connect io.in.r.bits.last, default_axi.r.bits.last @[build/NutShell.fir.opt.mlir 46895:7]
    connect io.in.r.bits.id, pad(default_axi.r.bits.id, 18) @[build/NutShell.fir.opt.mlir 46897:7]
    connect io.in.r.bits.user, default_axi.r.bits.user @[build/NutShell.fir.opt.mlir 46898:7]
    connect io.in.b.bits.resp, default_axi.b.bits.resp @[build/NutShell.fir.opt.mlir 46899:7]
    connect io.in.b.bits.id, pad(default_axi.b.bits.id, 18) @[build/NutShell.fir.opt.mlir 46901:7]
    connect io.in.b.bits.user, default_axi.b.bits.user @[build/NutShell.fir.opt.mlir 46902:7]
    node _T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46904:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46906:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46908:15]
    node _T_3 = and(_T_2, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 46910:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 46914:7]
      connect io.out.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46916:9]
      connect io.out.req.bits.addr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 46917:9]
      node _io_out_req_bits_cmd_T = eq(io.in.ar.bits.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46919:35]
      node _io_out_req_bits_cmd_T_1 = mux(_io_out_req_bits_cmd_T, UInt<1>(0), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46921:37]
      connect io.out.req.bits.cmd, pad(_io_out_req_bits_cmd_T_1, 4) @[build/NutShell.fir.opt.mlir 46923:9]
      connect io.out.req.bits.size, io.in.ar.bits.size @[build/NutShell.fir.opt.mlir 46924:9]
      connect io.out.req.bits.wmask, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 46927:9]
      connect io.out.req.bits.wdata, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 46930:9]
      node _T_4 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 46932:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 46933:9]
        connect inflight_id_reg, io.in.ar.bits.id @[build/NutShell.fir.opt.mlir 46934:11]
        connect inflight_type, UInt<2>(1) @[build/NutShell.fir.opt.mlir 46936:11]
    node _T_5 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 46940:15]
    node _T_6 = and(_T_5, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 46942:15]
    when _T_6 : @[build/NutShell.fir.opt.mlir 46944:7]
      connect io.in.r.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 46946:9]
      connect io.in.r.bits.data, io.out.resp.bits.rdata @[build/NutShell.fir.opt.mlir 46947:9]
      connect io.in.r.bits.id, inflight_id_reg @[build/NutShell.fir.opt.mlir 46948:9]
      connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46950:9]
      node _io_in_r_bits_last_T = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46952:33]
      connect io.in.r.bits.last, _io_in_r_bits_last_T @[build/NutShell.fir.opt.mlir 46953:9]
      node _T_7 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 46955:17]
      node _T_8 = eq(io.out.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 46957:17]
      node _T_9 = and(_T_7, _T_8) @[build/NutShell.fir.opt.mlir 46959:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 46960:9]
        connect inflight_type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 46962:11]
        connect inflight_id_reg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46963:11]
    reg aw_reg : { addr : UInt<32>, prot : UInt<3>, id : UInt<18>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 46966:17]
    regreset bresp_en : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 46970:19]
    node _T_10 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 46972:16]
    node _T_11 = eq(_T_10, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46974:16]
    node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46976:16]
    node _T_13 = and(_T_12, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 46978:16]
    node _T_14 = eq(io.in.ar.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 46980:16]
    node _T_15 = and(_T_13, _T_14) @[build/NutShell.fir.opt.mlir 46982:16]
    when _T_15 : @[build/NutShell.fir.opt.mlir 46983:7]
      connect aw_reg, io.in.aw.bits @[build/NutShell.fir.opt.mlir 46984:9]
      node _T_16 = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 46986:18]
      when _T_16 : @[build/NutShell.fir.opt.mlir 46987:9]
        connect inflight_id_reg, io.in.aw.bits.id @[build/NutShell.fir.opt.mlir 46988:11]
        connect inflight_type, UInt<2>(2) @[build/NutShell.fir.opt.mlir 46990:11]
    node _T_17 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 46994:16]
    node _T_18 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 46996:16]
    node _T_19 = and(_T_17, _T_18) @[build/NutShell.fir.opt.mlir 46998:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 47001:7]
      connect io.out.req.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 47003:9]
      node _io_out_req_bits_cmd_T_2 = eq(aw_reg.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47005:37]
      node _io_out_req_bits_cmd_T_3 = mux(io.in.w.bits.last, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 47007:37]
      node _io_out_req_bits_cmd_T_4 = mux(_io_out_req_bits_cmd_T_2, UInt<1>(1), _io_out_req_bits_cmd_T_3) @[build/NutShell.fir.opt.mlir 47009:37]
      connect io.out.req.bits.cmd, pad(_io_out_req_bits_cmd_T_4, 4) @[build/NutShell.fir.opt.mlir 47011:9]
      connect io.out.req.bits.addr, aw_reg.addr @[build/NutShell.fir.opt.mlir 47012:9]
      connect io.out.req.bits.size, aw_reg.size @[build/NutShell.fir.opt.mlir 47013:9]
      connect io.out.req.bits.wmask, io.in.w.bits.strb @[build/NutShell.fir.opt.mlir 47014:9]
      connect io.out.req.bits.wdata, io.in.w.bits.data @[build/NutShell.fir.opt.mlir 47015:9]
      when io.in.w.bits.last : @[build/NutShell.fir.opt.mlir 47016:9]
        connect bresp_en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 47018:11]
    node _T_20 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 47022:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 47023:7]
      connect bresp_en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47025:9]
      connect inflight_type, UInt<2>(0) @[build/NutShell.fir.opt.mlir 47027:9]
      connect inflight_id_reg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47028:9]
    node _io_out_req_valid_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47031:30]
    node _io_out_req_valid_T_1 = eq(_io_out_req_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47033:32]
    node _io_out_req_valid_T_2 = eq(_io_out_req_valid_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47035:32]
    node _io_out_req_valid_T_3 = and(_io_out_req_valid_T_2, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 47037:32]
    node _io_out_req_valid_T_4 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47039:32]
    node _io_out_req_valid_T_5 = and(_io_out_req_valid_T_4, io.in.w.valid) @[build/NutShell.fir.opt.mlir 47041:32]
    node _io_out_req_valid_T_6 = or(_io_out_req_valid_T_3, _io_out_req_valid_T_5) @[build/NutShell.fir.opt.mlir 47043:32]
    connect io.out.req.valid, _io_out_req_valid_T_6 @[build/NutShell.fir.opt.mlir 47044:7]
    node _io_out_resp_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47046:31]
    node _io_out_resp_ready_T_1 = eq(_io_out_resp_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47048:33]
    node _io_out_resp_ready_T_2 = eq(_io_out_resp_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47050:33]
    node _io_out_resp_ready_T_3 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 47052:33]
    node _io_out_resp_ready_T_4 = and(_io_out_resp_ready_T_3, io.in.r.ready) @[build/NutShell.fir.opt.mlir 47054:33]
    node _io_out_resp_ready_T_5 = or(_io_out_resp_ready_T_2, _io_out_resp_ready_T_4) @[build/NutShell.fir.opt.mlir 47056:33]
    node _io_out_resp_ready_T_6 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47058:33]
    node _io_out_resp_ready_T_7 = and(_io_out_resp_ready_T_6, io.in.b.ready) @[build/NutShell.fir.opt.mlir 47060:33]
    node _io_out_resp_ready_T_8 = or(_io_out_resp_ready_T_5, _io_out_resp_ready_T_7) @[build/NutShell.fir.opt.mlir 47062:33]
    connect io.out.resp.ready, _io_out_resp_ready_T_8 @[build/NutShell.fir.opt.mlir 47063:7]
    node _io_in_ar_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47065:28]
    node _io_in_ar_ready_T_1 = eq(_io_in_ar_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47067:30]
    node _io_in_ar_ready_T_2 = eq(_io_in_ar_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47069:30]
    node _io_in_ar_ready_T_3 = and(_io_in_ar_ready_T_2, io.out.req.ready) @[build/NutShell.fir.opt.mlir 47071:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_3 @[build/NutShell.fir.opt.mlir 47072:7]
    node _io_in_r_valid_T = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 47074:27]
    node _io_in_r_valid_T_1 = and(_io_in_r_valid_T, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47076:29]
    connect io.in.r.valid, _io_in_r_valid_T_1 @[build/NutShell.fir.opt.mlir 47077:7]
    node _io_in_aw_ready_T = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47079:28]
    node _io_in_aw_ready_T_1 = eq(_io_in_aw_ready_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47081:30]
    node _io_in_aw_ready_T_2 = eq(_io_in_aw_ready_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47083:30]
    node _io_in_aw_ready_T_3 = eq(io.in.ar.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47085:30]
    node _io_in_aw_ready_T_4 = and(_io_in_aw_ready_T_2, _io_in_aw_ready_T_3) @[build/NutShell.fir.opt.mlir 47087:30]
    connect io.in.aw.ready, _io_in_aw_ready_T_4 @[build/NutShell.fir.opt.mlir 47088:7]
    node _io_in_w_ready_T = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47090:27]
    node _io_in_w_ready_T_1 = and(_io_in_w_ready_T, io.out.req.ready) @[build/NutShell.fir.opt.mlir 47092:29]
    connect io.in.w.ready, _io_in_w_ready_T_1 @[build/NutShell.fir.opt.mlir 47093:7]
    node _io_in_b_valid_T = and(bresp_en, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47095:27]
    connect io.in.b.valid, _io_in_b_valid_T @[build/NutShell.fir.opt.mlir 47096:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 47098:7]
    node _T_21 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 47100:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 47101:7]
      node _T_22 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 47103:18]
      node _T_23 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47105:18]
      node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47107:18]
      node _T_25 = eq(_T_24, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47109:18]
      node _T_26 = and(_T_22, _T_25) @[build/NutShell.fir.opt.mlir 47111:18]
      node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47113:18]
      node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47115:18]
      when _T_28 : @[build/NutShell.fir.opt.mlir 47116:9]
        node _T_29 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47118:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 47119:11]
          skip @[build/NutShell.fir.opt.mlir 47120:13]
        assert(clock, _T_26, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 47122:11]
    node _T_30 = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 47126:16]
    when _T_30 : @[build/NutShell.fir.opt.mlir 47127:7]
      node _T_31 = eq(inflight_type, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 47129:18]
      node _T_32 = eq(_T_31, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47131:18]
      node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47133:18]
      node _T_34 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47135:18]
      node _T_35 = eq(_T_34, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47137:18]
      when _T_35 : @[build/NutShell.fir.opt.mlir 47138:9]
        node _T_36 = eq(_T_33, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47140:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 47141:11]
          skip @[build/NutShell.fir.opt.mlir 47142:13]
        assert(clock, _T_33, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 47144:11]
    node _T_37 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 47148:16]
    when _T_37 : @[build/NutShell.fir.opt.mlir 47149:7]
      node _T_38 = and(io.out.req.ready, io.out.req.valid) @[build/NutShell.fir.opt.mlir 47151:18]
      node _T_39 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47153:18]
      node _T_40 = and(_T_38, _T_39) @[build/NutShell.fir.opt.mlir 47155:18]
      node _T_41 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47157:18]
      node _T_42 = eq(_T_41, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47159:18]
      when _T_42 : @[build/NutShell.fir.opt.mlir 47160:9]
        node _T_43 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47162:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 47163:11]
          skip @[build/NutShell.fir.opt.mlir 47164:13]
        assert(clock, _T_40, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 47166:11]
    node _T_44 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 47170:16]
    when _T_44 : @[build/NutShell.fir.opt.mlir 47171:7]
      node _T_45 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47173:18]
      node _T_46 = eq(inflight_type, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47175:18]
      node _T_47 = and(_T_45, _T_46) @[build/NutShell.fir.opt.mlir 47177:18]
      node _T_48 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47179:18]
      node _T_49 = eq(_T_48, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47181:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 47182:9]
        node _T_50 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47184:20]
        when _T_50 : @[build/NutShell.fir.opt.mlir 47185:11]
          skip @[build/NutShell.fir.opt.mlir 47186:13]
        assert(clock, _T_47, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 47188:11]
    node _T_51 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 47192:16]
    when _T_51 : @[build/NutShell.fir.opt.mlir 47193:7]
      node _T_52 = and(io.out.resp.ready, io.out.resp.valid) @[build/NutShell.fir.opt.mlir 47195:18]
      node _T_53 = eq(inflight_type, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 47197:18]
      node _T_54 = and(_T_52, _T_53) @[build/NutShell.fir.opt.mlir 47199:18]
      node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47201:18]
      node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47203:18]
      when _T_56 : @[build/NutShell.fir.opt.mlir 47204:9]
        node _T_57 = eq(_T_54, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47206:20]
        when _T_57 : @[build/NutShell.fir.opt.mlir 47207:11]
          skip @[build/NutShell.fir.opt.mlir 47208:13]
        assert(clock, _T_54, UInt<1>(1), "") : assert_4 @[build/NutShell.fir.opt.mlir 47210:11]

  module SimpleBus2MemPortConverter : @[build/NutShell.fir.opt.mlir 47214:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47214:58]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47214:84]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, data : UInt<32>, fcn : UInt<1>, typ : UInt<3> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<32> } } } } @[build/NutShell.fir.opt.mlir 47214:111]

    connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 47243:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 47244:7]
    connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 47245:7]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 47246:7]
    connect io.out.req.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 47247:7]
    connect io.out.req.bits.data, tail(io.in.req.bits.wdata, 32) @[build/NutShell.fir.opt.mlir 47249:7]
    node _io_out_req_bits_fcn_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 47251:33]
    node _io_out_req_bits_fcn_T_1 = eq(_io_out_req_bits_fcn_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47254:35]
    node _io_out_req_bits_fcn_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 47256:35]
    node _io_out_req_bits_fcn_T_3 = eq(_io_out_req_bits_fcn_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47258:35]
    node _io_out_req_bits_fcn_T_4 = and(_io_out_req_bits_fcn_T_1, _io_out_req_bits_fcn_T_3) @[build/NutShell.fir.opt.mlir 47260:35]
    node _io_out_req_bits_fcn_T_5 = mux(_io_out_req_bits_fcn_T_4, UInt<1>(0), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47263:35]
    connect io.out.req.bits.fcn, _io_out_req_bits_fcn_T_5 @[build/NutShell.fir.opt.mlir 47264:7]
    connect io.out.req.bits.typ, UInt<3>(3) @[build/NutShell.fir.opt.mlir 47267:7]
    connect io.in.resp.bits.rdata, pad(io.out.resp.bits.data, 64) @[build/NutShell.fir.opt.mlir 47269:7]
    connect io.in.resp.bits.cmd, pad(UInt<3>(6), 4) @[build/NutShell.fir.opt.mlir 47273:7]

  extmodule LogPerfHelper_39 : @[build/NutShell.fir.opt.mlir 47275:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47275:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47275:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47275:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47275:141]
    defname = LogPerfHelper

  module Prefetcher : @[build/NutShell.fir.opt.mlir 47276:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47276:42]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47276:68]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 47276:95]

    regreset getNewReq : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47288:20]
    reg prefetchReq : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, clock @[build/NutShell.fir.opt.mlir 47289:22]
    connect prefetchReq, io.in.bits @[build/NutShell.fir.opt.mlir 47292:7]
    connect prefetchReq.cmd, pad(UInt<3>(4), 4) @[build/NutShell.fir.opt.mlir 47296:7]
    node _prefetchReq_addr_T = add(io.in.bits.addr, UInt<7>(64)) @[build/NutShell.fir.opt.mlir 47299:30]
    node _prefetchReq_addr_T_1 = tail(_prefetchReq_addr_T, 1) @[build/NutShell.fir.opt.mlir 47301:32]
    connect prefetchReq.addr, _prefetchReq_addr_T_1 @[build/NutShell.fir.opt.mlir 47302:7]
    regreset lastReqAddr : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 47304:22]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47306:13]
    when _T : @[build/NutShell.fir.opt.mlir 47307:7]
      connect lastReqAddr, pad(io.in.bits.addr, 64) @[build/NutShell.fir.opt.mlir 47309:9]
    node _lineMask_T = mux(UInt<1>(1), UInt<58>(288230376151711743), UInt<58>(0)) @[build/NutShell.fir.opt.mlir 47315:22]
    node lineMask = cat(_lineMask_T, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 47318:19]
    node _neqAddr_T = and(io.in.bits.addr, lineMask) @[build/NutShell.fir.opt.mlir 47320:21]
    node _neqAddr_T_1 = and(lastReqAddr, lineMask) @[build/NutShell.fir.opt.mlir 47322:23]
    node neqAddr = neq(_neqAddr_T, _neqAddr_T_1) @[build/NutShell.fir.opt.mlir 47324:18]
    node _T_1 = eq(getNewReq, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47326:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 47329:7]
      connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 47330:9]
      connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 47331:9]
      node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47333:27]
      node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47335:29]
      node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 47337:29]
      connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 47338:9]
      node _getNewReq_T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47340:25]
      node _getNewReq_T_1 = bits(io.in.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 47342:27]
      node _getNewReq_T_2 = and(_getNewReq_T, _getNewReq_T_1) @[build/NutShell.fir.opt.mlir 47344:27]
      node _getNewReq_T_3 = and(_getNewReq_T_2, neqAddr) @[build/NutShell.fir.opt.mlir 47346:27]
      connect getNewReq, _getNewReq_T_3 @[build/NutShell.fir.opt.mlir 47347:9]
    else :
      connect io.out.bits, prefetchReq @[build/NutShell.fir.opt.mlir 47349:9]
      node _io_out_valid_T = xor(prefetchReq.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 47351:28]
      node _io_out_valid_T_1 = bits(_io_out_valid_T, 31, 28) @[build/NutShell.fir.opt.mlir 47353:30]
      node _io_out_valid_T_2 = eq(_io_out_valid_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47355:30]
      node _io_out_valid_T_3 = xor(prefetchReq.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 47357:30]
      node _io_out_valid_T_4 = bits(_io_out_valid_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 47359:30]
      node _io_out_valid_T_5 = eq(_io_out_valid_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47361:30]
      node _io_out_valid_T_6 = or(_io_out_valid_T_2, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 47363:30]
      node _io_out_valid_T_7 = eq(_io_out_valid_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47365:30]
      connect io.out.valid, _io_out_valid_T_7 @[build/NutShell.fir.opt.mlir 47366:9]
      connect io.in.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47368:9]
      node _getNewReq_T_4 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47370:27]
      node _getNewReq_T_5 = xor(prefetchReq.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 47372:27]
      node _getNewReq_T_6 = bits(_getNewReq_T_5, 31, 28) @[build/NutShell.fir.opt.mlir 47374:27]
      node _getNewReq_T_7 = eq(_getNewReq_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47376:27]
      node _getNewReq_T_8 = xor(prefetchReq.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 47378:27]
      node _getNewReq_T_9 = bits(_getNewReq_T_8, 31, 30) @[build/NutShell.fir.opt.mlir 47380:27]
      node _getNewReq_T_10 = eq(_getNewReq_T_9, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47382:28]
      node _getNewReq_T_11 = or(_getNewReq_T_7, _getNewReq_T_10) @[build/NutShell.fir.opt.mlir 47384:28]
      node _getNewReq_T_12 = or(_getNewReq_T_4, _getNewReq_T_11) @[build/NutShell.fir.opt.mlir 47386:28]
      node _getNewReq_T_13 = eq(_getNewReq_T_12, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47388:28]
      connect getNewReq, _getNewReq_T_13 @[build/NutShell.fir.opt.mlir 47389:9]
    inst LogPerfHelper of LogPerfHelper_39 @[build/NutShell.fir.opt.mlir 47391:99]
    wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47392:18]
    connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47397:7]
    connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47398:7]
    connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47399:7]
    connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47400:7]
    node _T_2 = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 47402:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 47403:7]
      regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 47404:14]
      node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47406:17]
      node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 47408:19]
      connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 47409:9]
      node _T_3 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47411:17]
      node _T_4 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47413:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 47414:9]
        skip @[build/NutShell.fir.opt.mlir 47415:11]

  extmodule LogPerfHelper_40 : @[build/NutShell.fir.opt.mlir 47419:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47419:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47419:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47419:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47419:141]
    defname = LogPerfHelper

  module CacheStage1_2 : @[build/NutShell.fir.opt.mlir 47420:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47420:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47420:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, metaReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } } } @[build/NutShell.fir.opt.mlir 47420:98]

    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47444:13]
    inst LogPerfHelper of LogPerfHelper_40 @[build/NutShell.fir.opt.mlir 47445:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47446:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47451:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47452:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47453:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47454:7]
    node _T_1 = and(_T, c_control.logEnable) @[build/NutShell.fir.opt.mlir 47456:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 47458:7]
      node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47460:17]
      node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47462:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 47463:9]
        skip @[build/NutShell.fir.opt.mlir 47464:11]
      node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47467:17]
      node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47469:17]
      when _T_5 : @[build/NutShell.fir.opt.mlir 47470:9]
        skip @[build/NutShell.fir.opt.mlir 47471:11]
    node readBusValid = and(io.in.valid, io.out.ready) @[build/NutShell.fir.opt.mlir 47475:23]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47476:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 47481:18]
    connect _WIRE_1, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47482:7]
    node _T_6 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 47484:15]
    connect _WIRE.byteOffset, _T_6 @[build/NutShell.fir.opt.mlir 47485:7]
    node _T_7 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 47487:15]
    connect _WIRE.wordIndex, _T_7 @[build/NutShell.fir.opt.mlir 47488:7]
    node _T_8 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 47490:15]
    connect _WIRE.index, _T_8 @[build/NutShell.fir.opt.mlir 47491:7]
    node _T_9 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 47493:15]
    connect _WIRE.tag, _T_9 @[build/NutShell.fir.opt.mlir 47494:7]
    connect io.metaReadBus.req.bits.setIdx, _WIRE.index @[build/NutShell.fir.opt.mlir 47495:7]
    connect io.metaReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 47496:7]
    wire _WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47497:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 47502:18]
    connect _WIRE_3, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47503:7]
    node _T_10 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 47505:16]
    connect _WIRE_2.byteOffset, _T_10 @[build/NutShell.fir.opt.mlir 47506:7]
    node _T_11 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 47508:16]
    connect _WIRE_2.wordIndex, _T_11 @[build/NutShell.fir.opt.mlir 47509:7]
    node _T_12 = bits(_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 47511:16]
    connect _WIRE_2.index, _T_12 @[build/NutShell.fir.opt.mlir 47512:7]
    node _T_13 = bits(_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 47514:16]
    connect _WIRE_2.tag, _T_13 @[build/NutShell.fir.opt.mlir 47515:7]
    wire _WIRE_4 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47516:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 47521:18]
    connect _WIRE_5, io.in.bits.addr @[build/NutShell.fir.opt.mlir 47522:7]
    node _T_14 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 47524:16]
    connect _WIRE_4.byteOffset, _T_14 @[build/NutShell.fir.opt.mlir 47525:7]
    node _T_15 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 47527:16]
    connect _WIRE_4.wordIndex, _T_15 @[build/NutShell.fir.opt.mlir 47528:7]
    node _T_16 = bits(_WIRE_5, 14, 6) @[build/NutShell.fir.opt.mlir 47530:16]
    connect _WIRE_4.index, _T_16 @[build/NutShell.fir.opt.mlir 47531:7]
    node _T_17 = bits(_WIRE_5, 31, 15) @[build/NutShell.fir.opt.mlir 47533:16]
    connect _WIRE_4.tag, _T_17 @[build/NutShell.fir.opt.mlir 47534:7]
    node _T_18 = cat(_WIRE_2.index, _WIRE_4.wordIndex) @[build/NutShell.fir.opt.mlir 47536:16]
    connect io.dataReadBus.req.bits.setIdx, _T_18 @[build/NutShell.fir.opt.mlir 47537:7]
    connect io.dataReadBus.req.valid, readBusValid @[build/NutShell.fir.opt.mlir 47538:7]
    connect io.out.bits.req, io.in.bits @[build/NutShell.fir.opt.mlir 47539:7]
    node _io_out_valid_T = and(io.in.valid, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47541:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47543:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 47544:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47546:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 47548:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 47550:27]
    node _io_in_ready_T_3 = and(_io_in_ready_T_2, io.metaReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47552:27]
    node _io_in_ready_T_4 = and(_io_in_ready_T_3, io.dataReadBus.req.ready) @[build/NutShell.fir.opt.mlir 47554:27]
    connect io.in.ready, _io_in_ready_T_4 @[build/NutShell.fir.opt.mlir 47555:7]
    node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47558:16]
    when _T_19 : @[build/NutShell.fir.opt.mlir 47559:7]
      node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47561:18]
      node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47563:18]
      when _T_21 : @[build/NutShell.fir.opt.mlir 47564:9]
        skip @[build/NutShell.fir.opt.mlir 47565:11]
      node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47568:18]
      node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47570:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 47571:9]
        skip @[build/NutShell.fir.opt.mlir 47572:11]

  extmodule LogPerfHelper_41 : @[build/NutShell.fir.opt.mlir 47576:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47576:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47576:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47576:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47576:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_42 : @[build/NutShell.fir.opt.mlir 47577:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47577:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47577:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47577:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47577:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_43 : @[build/NutShell.fir.opt.mlir 47578:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 47578:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 47578:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 47578:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 47578:141]
    defname = LogPerfHelper

  module CacheStage2_2 : @[build/NutShell.fir.opt.mlir 47579:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 47579:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 47579:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, flip metaReadResp : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], flip dataReadResp : { data : UInt<64> }[4], flip metaWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, flip dataWriteBus : { req : { ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 47579:98]

    wire addr : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47614:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 47619:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 47620:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 47622:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 47623:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 47625:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 47626:7]
    node _addr_T_2 = bits(_addr_WIRE, 14, 6) @[build/NutShell.fir.opt.mlir 47628:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 47629:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 15) @[build/NutShell.fir.opt.mlir 47631:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 47632:7]
    node _isForwardMeta_T = and(io.in.valid, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 47634:27]
    wire _isForwardMeta_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 47635:30]
    wire _isForwardMeta_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 47640:32]
    connect _isForwardMeta_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 47641:7]
    node _isForwardMeta_T_1 = bits(_isForwardMeta_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 47643:29]
    connect _isForwardMeta_WIRE.byteOffset, _isForwardMeta_T_1 @[build/NutShell.fir.opt.mlir 47644:7]
    node _isForwardMeta_T_2 = bits(_isForwardMeta_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 47646:29]
    connect _isForwardMeta_WIRE.wordIndex, _isForwardMeta_T_2 @[build/NutShell.fir.opt.mlir 47647:7]
    node _isForwardMeta_T_3 = bits(_isForwardMeta_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 47649:29]
    connect _isForwardMeta_WIRE.index, _isForwardMeta_T_3 @[build/NutShell.fir.opt.mlir 47650:7]
    node _isForwardMeta_T_4 = bits(_isForwardMeta_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 47652:29]
    connect _isForwardMeta_WIRE.tag, _isForwardMeta_T_4 @[build/NutShell.fir.opt.mlir 47653:7]
    node _isForwardMeta_T_5 = eq(io.metaWriteBus.req.bits.setIdx, _isForwardMeta_WIRE.index) @[build/NutShell.fir.opt.mlir 47655:29]
    node isForwardMeta = and(_isForwardMeta_T, _isForwardMeta_T_5) @[build/NutShell.fir.opt.mlir 47657:24]
    regreset isForwardMetaReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47659:27]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 47661:7]
      connect isForwardMetaReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 47663:9]
    node _T = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 47666:13]
    node _T_1 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47668:15]
    node _T_2 = or(_T, _T_1) @[build/NutShell.fir.opt.mlir 47670:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 47671:7]
      connect isForwardMetaReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 47673:9]
    reg forwardMetaReg : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 47675:25]
    when isForwardMeta : @[build/NutShell.fir.opt.mlir 47676:7]
      connect forwardMetaReg, io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 47677:9]
    wire metaWay : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 47679:18]
    node pickForwardMeta = or(isForwardMetaReg, isForwardMeta) @[build/NutShell.fir.opt.mlir 47693:26]
    node forwardMeta = mux(isForwardMeta, io.metaWriteBus.req.bits, forwardMetaReg) @[build/NutShell.fir.opt.mlir 47695:22]
    node forwardWaymask_0 = bits(forwardMeta.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47699:27]
    node forwardWaymask_1 = bits(forwardMeta.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47701:27]
    node forwardWaymask_2 = bits(forwardMeta.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47703:27]
    node forwardWaymask_3 = bits(forwardMeta.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47705:27]
    node _metaWay_0_T = and(pickForwardMeta, forwardWaymask_0) @[build/NutShell.fir.opt.mlir 47707:23]
    node _metaWay_0_T_1 = mux(_metaWay_0_T, forwardMeta.data, io.metaReadResp[0]) @[build/NutShell.fir.opt.mlir 47709:25]
    connect metaWay[0], _metaWay_0_T_1 @[build/NutShell.fir.opt.mlir 47710:7]
    node _metaWay_1_T = and(pickForwardMeta, forwardWaymask_1) @[build/NutShell.fir.opt.mlir 47712:23]
    node _metaWay_1_T_1 = mux(_metaWay_1_T, forwardMeta.data, io.metaReadResp[1]) @[build/NutShell.fir.opt.mlir 47714:25]
    connect metaWay[1], _metaWay_1_T_1 @[build/NutShell.fir.opt.mlir 47715:7]
    node _metaWay_2_T = and(pickForwardMeta, forwardWaymask_2) @[build/NutShell.fir.opt.mlir 47717:23]
    node _metaWay_2_T_1 = mux(_metaWay_2_T, forwardMeta.data, io.metaReadResp[2]) @[build/NutShell.fir.opt.mlir 47719:25]
    connect metaWay[2], _metaWay_2_T_1 @[build/NutShell.fir.opt.mlir 47720:7]
    node _metaWay_3_T = and(pickForwardMeta, forwardWaymask_3) @[build/NutShell.fir.opt.mlir 47722:23]
    node _metaWay_3_T_1 = mux(_metaWay_3_T, forwardMeta.data, io.metaReadResp[3]) @[build/NutShell.fir.opt.mlir 47724:25]
    connect metaWay[3], _metaWay_3_T_1 @[build/NutShell.fir.opt.mlir 47725:7]
    node _hitVec_T = eq(metaWay[0].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47727:20]
    node _hitVec_T_1 = and(metaWay[0].valid, _hitVec_T) @[build/NutShell.fir.opt.mlir 47729:22]
    node _hitVec_T_2 = and(_hitVec_T_1, io.in.valid) @[build/NutShell.fir.opt.mlir 47731:22]
    node _hitVec_T_3 = eq(metaWay[1].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47733:22]
    node _hitVec_T_4 = and(metaWay[1].valid, _hitVec_T_3) @[build/NutShell.fir.opt.mlir 47735:22]
    node _hitVec_T_5 = and(_hitVec_T_4, io.in.valid) @[build/NutShell.fir.opt.mlir 47737:22]
    node _hitVec_T_6 = eq(metaWay[2].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47739:22]
    node _hitVec_T_7 = and(metaWay[2].valid, _hitVec_T_6) @[build/NutShell.fir.opt.mlir 47741:22]
    node _hitVec_T_8 = and(_hitVec_T_7, io.in.valid) @[build/NutShell.fir.opt.mlir 47743:22]
    node _hitVec_T_9 = eq(metaWay[3].tag, addr.tag) @[build/NutShell.fir.opt.mlir 47745:22]
    node _hitVec_T_10 = and(metaWay[3].valid, _hitVec_T_9) @[build/NutShell.fir.opt.mlir 47747:23]
    node _hitVec_T_11 = and(_hitVec_T_10, io.in.valid) @[build/NutShell.fir.opt.mlir 47749:23]
    wire _hitVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 47750:23]
    connect _hitVec_WIRE[0], _hitVec_T_2 @[build/NutShell.fir.opt.mlir 47755:7]
    connect _hitVec_WIRE[1], _hitVec_T_5 @[build/NutShell.fir.opt.mlir 47756:7]
    connect _hitVec_WIRE[2], _hitVec_T_8 @[build/NutShell.fir.opt.mlir 47757:7]
    connect _hitVec_WIRE[3], _hitVec_T_11 @[build/NutShell.fir.opt.mlir 47758:7]
    node hitVec_lo = cat(_hitVec_WIRE[1], _hitVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 47760:20]
    node hitVec_hi = cat(_hitVec_WIRE[3], _hitVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 47762:20]
    node hitVec = cat(hitVec_hi, hitVec_lo) @[build/NutShell.fir.opt.mlir 47764:17]
    regreset victimWaymask_lfsr : UInt<64>, clock, reset, UInt<64>(1311768467139281697) @[build/NutShell.fir.opt.mlir 47766:29]
    node _victimWaymask_xor_T = bits(victimWaymask_lfsr, 0, 0) @[build/NutShell.fir.opt.mlir 47768:31]
    node _victimWaymask_xor_T_1 = bits(victimWaymask_lfsr, 1, 1) @[build/NutShell.fir.opt.mlir 47770:33]
    node _victimWaymask_xor_T_2 = xor(_victimWaymask_xor_T, _victimWaymask_xor_T_1) @[build/NutShell.fir.opt.mlir 47772:33]
    node _victimWaymask_xor_T_3 = bits(victimWaymask_lfsr, 3, 3) @[build/NutShell.fir.opt.mlir 47774:33]
    node _victimWaymask_xor_T_4 = xor(_victimWaymask_xor_T_2, _victimWaymask_xor_T_3) @[build/NutShell.fir.opt.mlir 47776:33]
    node _victimWaymask_xor_T_5 = bits(victimWaymask_lfsr, 4, 4) @[build/NutShell.fir.opt.mlir 47778:33]
    node victimWaymask_xor = xor(_victimWaymask_xor_T_4, _victimWaymask_xor_T_5) @[build/NutShell.fir.opt.mlir 47780:28]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 47781:7]
      node _victimWaymask_lfsr_T = eq(victimWaymask_lfsr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47783:34]
      node _victimWaymask_lfsr_T_1 = bits(victimWaymask_lfsr, 63, 1) @[build/NutShell.fir.opt.mlir 47785:36]
      node _victimWaymask_lfsr_T_2 = cat(victimWaymask_xor, _victimWaymask_lfsr_T_1) @[build/NutShell.fir.opt.mlir 47787:36]
      node _victimWaymask_lfsr_T_3 = mux(_victimWaymask_lfsr_T, UInt<1>(1), _victimWaymask_lfsr_T_2) @[build/NutShell.fir.opt.mlir 47789:36]
      connect victimWaymask_lfsr, _victimWaymask_lfsr_T_3 @[build/NutShell.fir.opt.mlir 47790:9]
    node _victimWaymask_T = bits(victimWaymask_lfsr, 1, 0) @[build/NutShell.fir.opt.mlir 47793:27]
    node victimWaymask = dshl(UInt<1>(1), _victimWaymask_T) @[build/NutShell.fir.opt.mlir 47795:24]
    node _invalidVec_T = eq(metaWay[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47797:24]
    node _invalidVec_T_1 = eq(metaWay[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47799:26]
    node _invalidVec_T_2 = eq(metaWay[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47801:26]
    node _invalidVec_T_3 = eq(metaWay[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47803:26]
    wire _invalidVec_WIRE : UInt<1>[4] @[build/NutShell.fir.opt.mlir 47804:27]
    connect _invalidVec_WIRE[0], _invalidVec_T @[build/NutShell.fir.opt.mlir 47809:7]
    connect _invalidVec_WIRE[1], _invalidVec_T_1 @[build/NutShell.fir.opt.mlir 47810:7]
    connect _invalidVec_WIRE[2], _invalidVec_T_2 @[build/NutShell.fir.opt.mlir 47811:7]
    connect _invalidVec_WIRE[3], _invalidVec_T_3 @[build/NutShell.fir.opt.mlir 47812:7]
    node invalidVec_lo = cat(_invalidVec_WIRE[1], _invalidVec_WIRE[0]) @[build/NutShell.fir.opt.mlir 47814:24]
    node invalidVec_hi = cat(_invalidVec_WIRE[3], _invalidVec_WIRE[2]) @[build/NutShell.fir.opt.mlir 47816:24]
    node invalidVec = cat(invalidVec_hi, invalidVec_lo) @[build/NutShell.fir.opt.mlir 47818:21]
    node hasInvalidWay = orr(invalidVec) @[build/NutShell.fir.opt.mlir 47820:24]
    node _refillInvalidWaymask_T = geq(invalidVec, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 47823:34]
    node _refillInvalidWaymask_T_1 = geq(invalidVec, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 47826:36]
    node _refillInvalidWaymask_T_2 = geq(invalidVec, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 47829:36]
    node _refillInvalidWaymask_T_3 = mux(_refillInvalidWaymask_T_2, UInt<2>(2), UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47831:36]
    node _refillInvalidWaymask_T_4 = mux(_refillInvalidWaymask_T_1, UInt<3>(4), _refillInvalidWaymask_T_3) @[build/NutShell.fir.opt.mlir 47833:36]
    node refillInvalidWaymask = mux(_refillInvalidWaymask_T, UInt<4>(8), _refillInvalidWaymask_T_4) @[build/NutShell.fir.opt.mlir 47835:31]
    node _waymask_T = mux(hasInvalidWay, refillInvalidWaymask, victimWaymask) @[build/NutShell.fir.opt.mlir 47837:21]
    node waymask = mux(io.out.bits.hit, hitVec, _waymask_T) @[build/NutShell.fir.opt.mlir 47839:18]
    node _T_3 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 47841:15]
    node _T_4 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 47843:15]
    node _T_5 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 47845:15]
    node _T_6 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 47847:15]
    node _T_7 = add(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 47849:15]
    node _T_8 = bits(_T_7, 1, 0) @[build/NutShell.fir.opt.mlir 47851:15]
    node _T_9 = add(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 47853:15]
    node _T_10 = bits(_T_9, 1, 0) @[build/NutShell.fir.opt.mlir 47855:16]
    node _T_11 = add(_T_8, _T_10) @[build/NutShell.fir.opt.mlir 47857:16]
    node _T_12 = bits(_T_11, 2, 0) @[build/NutShell.fir.opt.mlir 47859:16]
    node _T_13 = gt(_T_12, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 47861:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 47862:7]
      inst LogPerfHelper of LogPerfHelper_41 @[build/NutShell.fir.opt.mlir 47863:101]
      wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 47864:22]
      connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 47869:9]
      connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 47870:9]
      connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 47871:9]
      connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 47872:9]
      node _T_14 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47874:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 47875:9]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47877:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47879:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 47880:11]
          skip @[build/NutShell.fir.opt.mlir 47881:13]
        node _T_17 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47884:20]
        node _T_18 = eq(_T_17, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47886:20]
        when _T_18 : @[build/NutShell.fir.opt.mlir 47887:11]
          skip @[build/NutShell.fir.opt.mlir 47888:13]
      node _T_19 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47892:18]
      when _T_19 : @[build/NutShell.fir.opt.mlir 47893:9]
        node _T_20 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47895:20]
        node _T_21 = eq(_T_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47897:20]
        when _T_21 : @[build/NutShell.fir.opt.mlir 47898:11]
          skip @[build/NutShell.fir.opt.mlir 47899:13]
        node _T_22 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47902:20]
        node _T_23 = eq(_T_22, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47904:20]
        when _T_23 : @[build/NutShell.fir.opt.mlir 47905:11]
          skip @[build/NutShell.fir.opt.mlir 47906:13]
      node _T_24 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47910:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 47911:9]
        node _T_25 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47913:20]
        node _T_26 = eq(_T_25, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47915:20]
        when _T_26 : @[build/NutShell.fir.opt.mlir 47916:11]
          skip @[build/NutShell.fir.opt.mlir 47917:13]
        node _T_27 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47920:20]
        node _T_28 = eq(_T_27, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47922:20]
        when _T_28 : @[build/NutShell.fir.opt.mlir 47923:11]
          skip @[build/NutShell.fir.opt.mlir 47924:13]
      node _T_29 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47928:18]
      when _T_29 : @[build/NutShell.fir.opt.mlir 47929:9]
        node _T_30 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47931:20]
        node _T_31 = eq(_T_30, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47933:20]
        when _T_31 : @[build/NutShell.fir.opt.mlir 47934:11]
          skip @[build/NutShell.fir.opt.mlir 47935:13]
        node _T_32 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47938:20]
        node _T_33 = eq(_T_32, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47940:20]
        when _T_33 : @[build/NutShell.fir.opt.mlir 47941:11]
          skip @[build/NutShell.fir.opt.mlir 47942:13]
      node _T_34 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47946:18]
      when _T_34 : @[build/NutShell.fir.opt.mlir 47947:9]
        node _T_35 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47949:20]
        node _T_36 = eq(_T_35, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47951:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 47952:11]
          skip @[build/NutShell.fir.opt.mlir 47953:13]
        node _T_37 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47956:20]
        node _T_38 = eq(_T_37, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47958:20]
        when _T_38 : @[build/NutShell.fir.opt.mlir 47959:11]
          skip @[build/NutShell.fir.opt.mlir 47960:13]
      node _T_39 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47964:18]
      when _T_39 : @[build/NutShell.fir.opt.mlir 47965:9]
        node _T_40 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47967:20]
        node _T_41 = eq(_T_40, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47969:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 47970:11]
          skip @[build/NutShell.fir.opt.mlir 47971:13]
        node _T_42 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47974:20]
        node _T_43 = eq(_T_42, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47976:20]
        when _T_43 : @[build/NutShell.fir.opt.mlir 47977:11]
          skip @[build/NutShell.fir.opt.mlir 47978:13]
      node _T_44 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 47982:18]
      when _T_44 : @[build/NutShell.fir.opt.mlir 47983:9]
        node _T_45 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47985:20]
        node _T_46 = eq(_T_45, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47987:20]
        when _T_46 : @[build/NutShell.fir.opt.mlir 47988:11]
          skip @[build/NutShell.fir.opt.mlir 47989:13]
        node _T_47 = asUInt(reset) @[build/NutShell.fir.opt.mlir 47992:20]
        node _T_48 = eq(_T_47, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 47994:20]
        when _T_48 : @[build/NutShell.fir.opt.mlir 47995:11]
          skip @[build/NutShell.fir.opt.mlir 47996:13]
      node _T_49 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 48000:18]
      when _T_49 : @[build/NutShell.fir.opt.mlir 48001:9]
        node _T_50 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48003:20]
        node _T_51 = eq(_T_50, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48005:20]
        when _T_51 : @[build/NutShell.fir.opt.mlir 48006:11]
          skip @[build/NutShell.fir.opt.mlir 48007:13]
        node _T_52 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48010:20]
        node _T_53 = eq(_T_52, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48012:20]
        when _T_53 : @[build/NutShell.fir.opt.mlir 48013:11]
          skip @[build/NutShell.fir.opt.mlir 48014:13]
      node _T_54 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 48018:18]
      when _T_54 : @[build/NutShell.fir.opt.mlir 48019:9]
        node _T_55 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48021:20]
        node _T_56 = eq(_T_55, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48023:20]
        when _T_56 : @[build/NutShell.fir.opt.mlir 48024:11]
          skip @[build/NutShell.fir.opt.mlir 48025:13]
        node _T_57 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48028:20]
        node _T_58 = eq(_T_57, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48030:20]
        when _T_58 : @[build/NutShell.fir.opt.mlir 48031:11]
          skip @[build/NutShell.fir.opt.mlir 48032:13]
      node _T_59 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 48036:18]
      when _T_59 : @[build/NutShell.fir.opt.mlir 48037:9]
        node _T_60 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48039:20]
        node _T_61 = eq(_T_60, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48041:20]
        when _T_61 : @[build/NutShell.fir.opt.mlir 48042:11]
          skip @[build/NutShell.fir.opt.mlir 48043:13]
        node _T_62 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48046:20]
        node _T_63 = eq(_T_62, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48048:20]
        when _T_63 : @[build/NutShell.fir.opt.mlir 48049:11]
          skip @[build/NutShell.fir.opt.mlir 48050:13]
    node _T_64 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48055:16]
    node _T_65 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48057:16]
    node _T_66 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48059:16]
    node _T_67 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48061:16]
    node _T_68 = add(_T_64, _T_65) @[build/NutShell.fir.opt.mlir 48063:16]
    node _T_69 = bits(_T_68, 1, 0) @[build/NutShell.fir.opt.mlir 48065:16]
    node _T_70 = add(_T_66, _T_67) @[build/NutShell.fir.opt.mlir 48067:16]
    node _T_71 = bits(_T_70, 1, 0) @[build/NutShell.fir.opt.mlir 48069:16]
    node _T_72 = add(_T_69, _T_71) @[build/NutShell.fir.opt.mlir 48071:16]
    node _T_73 = bits(_T_72, 2, 0) @[build/NutShell.fir.opt.mlir 48073:16]
    node _T_74 = gt(_T_73, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48075:16]
    when _T_74 : @[build/NutShell.fir.opt.mlir 48076:7]
      inst LogPerfHelper_1 of LogPerfHelper_42 @[build/NutShell.fir.opt.mlir 48077:109]
      wire c_control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 48078:24]
      connect c_control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 48083:9]
      connect c_control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 48084:9]
      connect c_control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 48085:9]
      connect c_control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 48086:9]
      node _T_75 = and(UInt<1>(1), c_control_1.logEnable) @[build/NutShell.fir.opt.mlir 48088:18]
      when _T_75 : @[build/NutShell.fir.opt.mlir 48089:9]
        node _T_76 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48091:20]
        node _T_77 = eq(_T_76, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48093:20]
        when _T_77 : @[build/NutShell.fir.opt.mlir 48094:11]
          skip @[build/NutShell.fir.opt.mlir 48095:13]
        node _T_78 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48098:20]
        node _T_79 = eq(_T_78, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48100:20]
        when _T_79 : @[build/NutShell.fir.opt.mlir 48101:11]
          skip @[build/NutShell.fir.opt.mlir 48102:13]
    node _T_80 = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48107:16]
    node _T_81 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48109:16]
    node _T_82 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48111:16]
    node _T_83 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48113:16]
    node _T_84 = add(_T_80, _T_81) @[build/NutShell.fir.opt.mlir 48115:16]
    node _T_85 = bits(_T_84, 1, 0) @[build/NutShell.fir.opt.mlir 48117:16]
    node _T_86 = add(_T_82, _T_83) @[build/NutShell.fir.opt.mlir 48119:16]
    node _T_87 = bits(_T_86, 1, 0) @[build/NutShell.fir.opt.mlir 48121:16]
    node _T_88 = add(_T_85, _T_87) @[build/NutShell.fir.opt.mlir 48123:16]
    node _T_89 = bits(_T_88, 2, 0) @[build/NutShell.fir.opt.mlir 48125:16]
    node _T_90 = gt(_T_89, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48127:16]
    node _T_91 = and(io.in.valid, _T_90) @[build/NutShell.fir.opt.mlir 48129:16]
    node _T_92 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48131:16]
    node _T_93 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48133:16]
    node _T_94 = eq(_T_93, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48135:16]
    when _T_94 : @[build/NutShell.fir.opt.mlir 48136:7]
      node _T_95 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48138:18]
      when _T_95 : @[build/NutShell.fir.opt.mlir 48139:9]
        skip @[build/NutShell.fir.opt.mlir 48140:11]
      assert(clock, _T_92, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 48142:9]
    connect io.out.bits.metas, metaWay @[build/NutShell.fir.opt.mlir 48144:7]
    node _io_out_bits_hit_T = orr(hitVec) @[build/NutShell.fir.opt.mlir 48146:29]
    node _io_out_bits_hit_T_1 = and(io.in.valid, _io_out_bits_hit_T) @[build/NutShell.fir.opt.mlir 48148:31]
    connect io.out.bits.hit, _io_out_bits_hit_T_1 @[build/NutShell.fir.opt.mlir 48149:7]
    connect io.out.bits.waymask, waymask @[build/NutShell.fir.opt.mlir 48150:7]
    connect io.out.bits.datas, io.dataReadResp @[build/NutShell.fir.opt.mlir 48151:7]
    node _io_out_bits_mmio_T = xor(io.in.bits.req.addr, UInt<30>(805306368)) @[build/NutShell.fir.opt.mlir 48154:30]
    node _io_out_bits_mmio_T_1 = bits(_io_out_bits_mmio_T, 31, 28) @[build/NutShell.fir.opt.mlir 48156:32]
    node _io_out_bits_mmio_T_2 = eq(_io_out_bits_mmio_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48158:32]
    node _io_out_bits_mmio_T_3 = xor(io.in.bits.req.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 48161:32]
    node _io_out_bits_mmio_T_4 = bits(_io_out_bits_mmio_T_3, 31, 30) @[build/NutShell.fir.opt.mlir 48163:32]
    node _io_out_bits_mmio_T_5 = eq(_io_out_bits_mmio_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48165:32]
    node _io_out_bits_mmio_T_6 = or(_io_out_bits_mmio_T_2, _io_out_bits_mmio_T_5) @[build/NutShell.fir.opt.mlir 48167:32]
    connect io.out.bits.mmio, _io_out_bits_mmio_T_6 @[build/NutShell.fir.opt.mlir 48168:7]
    wire _isForwardData_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48169:30]
    wire _isForwardData_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48174:32]
    connect _isForwardData_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48175:7]
    node _isForwardData_T = bits(_isForwardData_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48177:27]
    connect _isForwardData_WIRE.byteOffset, _isForwardData_T @[build/NutShell.fir.opt.mlir 48178:7]
    node _isForwardData_T_1 = bits(_isForwardData_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48180:29]
    connect _isForwardData_WIRE.wordIndex, _isForwardData_T_1 @[build/NutShell.fir.opt.mlir 48181:7]
    node _isForwardData_T_2 = bits(_isForwardData_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48183:29]
    connect _isForwardData_WIRE.index, _isForwardData_T_2 @[build/NutShell.fir.opt.mlir 48184:7]
    node _isForwardData_T_3 = bits(_isForwardData_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48186:29]
    connect _isForwardData_WIRE.tag, _isForwardData_T_3 @[build/NutShell.fir.opt.mlir 48187:7]
    wire _isForwardData_WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48188:32]
    wire _isForwardData_WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 48193:32]
    connect _isForwardData_WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48194:7]
    node _isForwardData_T_4 = bits(_isForwardData_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 48196:29]
    connect _isForwardData_WIRE_2.byteOffset, _isForwardData_T_4 @[build/NutShell.fir.opt.mlir 48197:7]
    node _isForwardData_T_5 = bits(_isForwardData_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 48199:29]
    connect _isForwardData_WIRE_2.wordIndex, _isForwardData_T_5 @[build/NutShell.fir.opt.mlir 48200:7]
    node _isForwardData_T_6 = bits(_isForwardData_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 48202:29]
    connect _isForwardData_WIRE_2.index, _isForwardData_T_6 @[build/NutShell.fir.opt.mlir 48203:7]
    node _isForwardData_T_7 = bits(_isForwardData_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 48205:29]
    connect _isForwardData_WIRE_2.tag, _isForwardData_T_7 @[build/NutShell.fir.opt.mlir 48206:7]
    node _isForwardData_T_8 = cat(_isForwardData_WIRE.index, _isForwardData_WIRE_2.wordIndex) @[build/NutShell.fir.opt.mlir 48208:29]
    node _isForwardData_T_9 = eq(io.dataWriteBus.req.bits.setIdx, _isForwardData_T_8) @[build/NutShell.fir.opt.mlir 48210:29]
    node _isForwardData_T_10 = and(io.dataWriteBus.req.valid, _isForwardData_T_9) @[build/NutShell.fir.opt.mlir 48212:30]
    node isForwardData = and(io.in.valid, _isForwardData_T_10) @[build/NutShell.fir.opt.mlir 48214:24]
    regreset isForwardDataReg : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48215:27]
    when isForwardData : @[build/NutShell.fir.opt.mlir 48216:7]
      connect isForwardDataReg, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48218:9]
    node _T_96 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 48221:16]
    node _T_97 = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48223:16]
    node _T_98 = or(_T_96, _T_97) @[build/NutShell.fir.opt.mlir 48225:16]
    when _T_98 : @[build/NutShell.fir.opt.mlir 48226:7]
      connect isForwardDataReg, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48228:9]
    reg forwardDataReg : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> }, clock @[build/NutShell.fir.opt.mlir 48230:25]
    when isForwardData : @[build/NutShell.fir.opt.mlir 48231:7]
      connect forwardDataReg, io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 48232:9]
    node _io_out_bits_isForwardData_T = or(isForwardDataReg, isForwardData) @[build/NutShell.fir.opt.mlir 48235:39]
    connect io.out.bits.isForwardData, _io_out_bits_isForwardData_T @[build/NutShell.fir.opt.mlir 48236:7]
    node _io_out_bits_forwardData_T = mux(isForwardData, io.dataWriteBus.req.bits, forwardDataReg) @[build/NutShell.fir.opt.mlir 48238:37]
    connect io.out.bits.forwardData, _io_out_bits_forwardData_T @[build/NutShell.fir.opt.mlir 48239:7]
    connect io.out.bits.req, io.in.bits.req @[build/NutShell.fir.opt.mlir 48240:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 48241:7]
    node _io_in_ready_T = eq(io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48243:25]
    node _io_in_ready_T_1 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48245:27]
    node _io_in_ready_T_2 = or(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 48247:27]
    connect io.in.ready, _io_in_ready_T_2 @[build/NutShell.fir.opt.mlir 48248:7]
    node _T_99 = and(io.in.ready, io.in.valid) @[build/NutShell.fir.opt.mlir 48250:16]
    inst LogPerfHelper_2 of LogPerfHelper_43 @[build/NutShell.fir.opt.mlir 48251:107]
    wire c_control_2 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 48252:22]
    connect c_control_2.dump, LogPerfHelper_2.dump @[build/NutShell.fir.opt.mlir 48257:7]
    connect c_control_2.clean, LogPerfHelper_2.clean @[build/NutShell.fir.opt.mlir 48258:7]
    connect c_control_2.logEnable, LogPerfHelper_2.logEnable @[build/NutShell.fir.opt.mlir 48259:7]
    connect c_control_2.timer, LogPerfHelper_2.timer @[build/NutShell.fir.opt.mlir 48260:7]
    node _T_100 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 48262:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 48263:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48265:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48267:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 48268:9]
        skip @[build/NutShell.fir.opt.mlir 48269:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48272:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48274:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 48275:9]
        skip @[build/NutShell.fir.opt.mlir 48276:11]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48279:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48284:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48285:7]
    node _T_105 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48287:17]
    connect _WIRE.byteOffset, _T_105 @[build/NutShell.fir.opt.mlir 48288:7]
    node _T_106 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48290:17]
    connect _WIRE.wordIndex, _T_106 @[build/NutShell.fir.opt.mlir 48291:7]
    node _T_107 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48293:17]
    connect _WIRE.index, _T_107 @[build/NutShell.fir.opt.mlir 48294:7]
    node _T_108 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48296:17]
    connect _WIRE.tag, _T_108 @[build/NutShell.fir.opt.mlir 48297:7]
    node _T_109 = and(UInt<1>(1), c_control_2.logEnable) @[build/NutShell.fir.opt.mlir 48299:17]
    when _T_109 : @[build/NutShell.fir.opt.mlir 48300:7]
      node _T_110 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48302:19]
      node _T_111 = eq(_T_110, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48304:19]
      when _T_111 : @[build/NutShell.fir.opt.mlir 48305:9]
        skip @[build/NutShell.fir.opt.mlir 48306:11]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48309:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48311:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 48312:9]
        skip @[build/NutShell.fir.opt.mlir 48313:11]

  module Arbiter2_SRAMBundleAW_4 : @[build/NutShell.fir.opt.mlir 48317:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48317:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48317:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 48317:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48334:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 48335:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 48337:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48339:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 48340:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48343:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 48345:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 48346:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 48348:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 48349:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48351:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 48353:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 48354:7]

  module Arbiter2_SRAMBundleAW_5 : @[build/NutShell.fir.opt.mlir 48356:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48356:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48356:81]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 48356:108]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48373:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 48374:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 48376:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48378:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 48379:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48382:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 48384:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 48385:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 48387:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 48388:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48390:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 48392:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 48393:7]

  extmodule LogPerfHelper_44 : @[build/NutShell.fir.opt.mlir 48395:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 48395:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 48395:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 48395:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 48395:141]
    defname = LogPerfHelper

  module CacheStage3_2 : @[build/NutShell.fir.opt.mlir 48396:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 48396:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 48396:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, isFinish : UInt<1>, flip flush : UInt<1>, dataReadBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }, dataWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } }, metaWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } }, mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, cohResp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } }, dataReadRespToL1 : UInt<1> } @[build/NutShell.fir.opt.mlir 48396:98]

    inst metaWriteArb of Arbiter2_SRAMBundleAW_4 @[build/NutShell.fir.opt.mlir 48499:68]
    connect metaWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 48513:7]
    connect metaWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 48514:7]
    inst dataWriteArb of Arbiter2_SRAMBundleAW_5 @[build/NutShell.fir.opt.mlir 48515:68]
    connect dataWriteArb.clock, clock @[build/NutShell.fir.opt.mlir 48529:7]
    connect dataWriteArb.reset, reset @[build/NutShell.fir.opt.mlir 48530:7]
    wire addr : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48531:15]
    wire _addr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 48536:21]
    connect _addr_WIRE, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48537:7]
    node _addr_T = bits(_addr_WIRE, 2, 0) @[build/NutShell.fir.opt.mlir 48539:18]
    connect addr.byteOffset, _addr_T @[build/NutShell.fir.opt.mlir 48540:7]
    node _addr_T_1 = bits(_addr_WIRE, 5, 3) @[build/NutShell.fir.opt.mlir 48542:20]
    connect addr.wordIndex, _addr_T_1 @[build/NutShell.fir.opt.mlir 48543:7]
    node _addr_T_2 = bits(_addr_WIRE, 14, 6) @[build/NutShell.fir.opt.mlir 48545:20]
    connect addr.index, _addr_T_2 @[build/NutShell.fir.opt.mlir 48546:7]
    node _addr_T_3 = bits(_addr_WIRE, 31, 15) @[build/NutShell.fir.opt.mlir 48548:20]
    connect addr.tag, _addr_T_3 @[build/NutShell.fir.opt.mlir 48549:7]
    node mmio = and(io.in.valid, io.in.bits.mmio) @[build/NutShell.fir.opt.mlir 48551:15]
    node hit = and(io.in.valid, io.in.bits.hit) @[build/NutShell.fir.opt.mlir 48553:14]
    node _miss_T = eq(io.in.bits.hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48556:18]
    node miss = and(io.in.valid, _miss_T) @[build/NutShell.fir.opt.mlir 48558:15]
    node _probe_T = and(io.in.valid, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48561:19]
    node _probe_T_1 = eq(io.in.bits.req.cmd, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48564:21]
    node probe = and(_probe_T, _probe_T_1) @[build/NutShell.fir.opt.mlir 48566:16]
    node _hitReadBurst_T = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 48569:26]
    node hitReadBurst = and(hit, _hitReadBurst_T) @[build/NutShell.fir.opt.mlir 48571:23]
    node _meta_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48573:18]
    node _meta_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48575:20]
    node _meta_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48577:20]
    node _meta_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48579:20]
    wire meta : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 48580:15]
    node _meta_T_4 = mux(_meta_T, io.in.bits.metas[0].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48585:20]
    node _meta_T_5 = mux(_meta_T_1, io.in.bits.metas[1].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48587:20]
    node _meta_T_6 = mux(_meta_T_2, io.in.bits.metas[2].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48589:20]
    node _meta_T_7 = mux(_meta_T_3, io.in.bits.metas[3].dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48591:20]
    node _meta_T_8 = or(_meta_T_4, _meta_T_5) @[build/NutShell.fir.opt.mlir 48593:20]
    node _meta_T_9 = or(_meta_T_8, _meta_T_6) @[build/NutShell.fir.opt.mlir 48595:20]
    node _meta_T_10 = or(_meta_T_9, _meta_T_7) @[build/NutShell.fir.opt.mlir 48597:21]
    wire _meta_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 48598:21]
    connect _meta_WIRE, _meta_T_10 @[build/NutShell.fir.opt.mlir 48599:7]
    connect meta.dirty, _meta_WIRE @[build/NutShell.fir.opt.mlir 48600:7]
    node _meta_T_11 = mux(_meta_T, io.in.bits.metas[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48602:21]
    node _meta_T_12 = mux(_meta_T_1, io.in.bits.metas[1].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48604:21]
    node _meta_T_13 = mux(_meta_T_2, io.in.bits.metas[2].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48606:21]
    node _meta_T_14 = mux(_meta_T_3, io.in.bits.metas[3].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48608:21]
    node _meta_T_15 = or(_meta_T_11, _meta_T_12) @[build/NutShell.fir.opt.mlir 48610:21]
    node _meta_T_16 = or(_meta_T_15, _meta_T_13) @[build/NutShell.fir.opt.mlir 48612:21]
    node _meta_T_17 = or(_meta_T_16, _meta_T_14) @[build/NutShell.fir.opt.mlir 48614:21]
    wire _meta_WIRE_1 : UInt<1> @[build/NutShell.fir.opt.mlir 48615:23]
    connect _meta_WIRE_1, _meta_T_17 @[build/NutShell.fir.opt.mlir 48616:7]
    connect meta.valid, _meta_WIRE_1 @[build/NutShell.fir.opt.mlir 48617:7]
    node _meta_T_18 = mux(_meta_T, io.in.bits.metas[0].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48619:21]
    node _meta_T_19 = mux(_meta_T_1, io.in.bits.metas[1].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48621:21]
    node _meta_T_20 = mux(_meta_T_2, io.in.bits.metas[2].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48623:21]
    node _meta_T_21 = mux(_meta_T_3, io.in.bits.metas[3].tag, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48625:21]
    node _meta_T_22 = or(_meta_T_18, _meta_T_19) @[build/NutShell.fir.opt.mlir 48627:21]
    node _meta_T_23 = or(_meta_T_22, _meta_T_20) @[build/NutShell.fir.opt.mlir 48629:21]
    node _meta_T_24 = or(_meta_T_23, _meta_T_21) @[build/NutShell.fir.opt.mlir 48631:21]
    wire _meta_WIRE_2 : UInt<17> @[build/NutShell.fir.opt.mlir 48632:23]
    connect _meta_WIRE_2, _meta_T_24 @[build/NutShell.fir.opt.mlir 48633:7]
    connect meta.tag, _meta_WIRE_2 @[build/NutShell.fir.opt.mlir 48634:7]
    node _T = and(mmio, hit) @[build/NutShell.fir.opt.mlir 48636:13]
    node _T_1 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48638:15]
    node _T_2 = asUInt(reset) @[build/NutShell.fir.opt.mlir 48640:15]
    node _T_3 = eq(_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48642:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 48643:7]
      node _T_4 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48645:17]
      when _T_4 : @[build/NutShell.fir.opt.mlir 48646:9]
        skip @[build/NutShell.fir.opt.mlir 48647:11]
      assert(clock, _T_1, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 48649:9]
    node _useForwardData_T = eq(io.in.bits.waymask, io.in.bits.forwardData.waymask) @[build/NutShell.fir.opt.mlir 48652:28]
    node useForwardData = and(io.in.bits.isForwardData, _useForwardData_T) @[build/NutShell.fir.opt.mlir 48654:25]
    node _dataReadArray_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48656:27]
    node _dataReadArray_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48658:29]
    node _dataReadArray_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48660:29]
    node _dataReadArray_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48662:29]
    wire _dataReadArray_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48663:30]
    node _dataReadArray_T_4 = mux(_dataReadArray_T, io.in.bits.datas[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48666:29]
    node _dataReadArray_T_5 = mux(_dataReadArray_T_1, io.in.bits.datas[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48668:29]
    node _dataReadArray_T_6 = mux(_dataReadArray_T_2, io.in.bits.datas[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48670:29]
    node _dataReadArray_T_7 = mux(_dataReadArray_T_3, io.in.bits.datas[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48672:29]
    node _dataReadArray_T_8 = or(_dataReadArray_T_4, _dataReadArray_T_5) @[build/NutShell.fir.opt.mlir 48674:29]
    node _dataReadArray_T_9 = or(_dataReadArray_T_8, _dataReadArray_T_6) @[build/NutShell.fir.opt.mlir 48676:29]
    node _dataReadArray_T_10 = or(_dataReadArray_T_9, _dataReadArray_T_7) @[build/NutShell.fir.opt.mlir 48678:30]
    wire _dataReadArray_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 48679:32]
    connect _dataReadArray_WIRE_1, _dataReadArray_T_10 @[build/NutShell.fir.opt.mlir 48680:7]
    connect _dataReadArray_WIRE.data, _dataReadArray_WIRE_1 @[build/NutShell.fir.opt.mlir 48681:7]
    node dataRead = mux(useForwardData, io.in.bits.forwardData.data.data, _dataReadArray_WIRE.data) @[build/NutShell.fir.opt.mlir 48683:19]
    node _wordMask_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48685:22]
    node _wordMask_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 48687:24]
    node _wordMask_T_2 = and(_wordMask_T, _wordMask_T_1) @[build/NutShell.fir.opt.mlir 48689:24]
    node _wordMask_T_3 = bits(io.in.bits.req.wmask, 0, 0) @[build/NutShell.fir.opt.mlir 48691:24]
    node _wordMask_T_4 = bits(io.in.bits.req.wmask, 1, 1) @[build/NutShell.fir.opt.mlir 48693:24]
    node _wordMask_T_5 = bits(io.in.bits.req.wmask, 2, 2) @[build/NutShell.fir.opt.mlir 48695:24]
    node _wordMask_T_6 = bits(io.in.bits.req.wmask, 3, 3) @[build/NutShell.fir.opt.mlir 48697:24]
    node _wordMask_T_7 = bits(io.in.bits.req.wmask, 4, 4) @[build/NutShell.fir.opt.mlir 48699:24]
    node _wordMask_T_8 = bits(io.in.bits.req.wmask, 5, 5) @[build/NutShell.fir.opt.mlir 48701:24]
    node _wordMask_T_9 = bits(io.in.bits.req.wmask, 6, 6) @[build/NutShell.fir.opt.mlir 48703:24]
    node _wordMask_T_10 = bits(io.in.bits.req.wmask, 7, 7) @[build/NutShell.fir.opt.mlir 48705:25]
    node _wordMask_T_11 = mux(_wordMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48709:25]
    node _wordMask_T_12 = mux(_wordMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48711:25]
    node _wordMask_T_13 = mux(_wordMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48713:25]
    node _wordMask_T_14 = mux(_wordMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48715:25]
    node _wordMask_T_15 = mux(_wordMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48717:25]
    node _wordMask_T_16 = mux(_wordMask_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48719:25]
    node _wordMask_T_17 = mux(_wordMask_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48721:25]
    node _wordMask_T_18 = mux(_wordMask_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48723:25]
    node wordMask_lo_lo = cat(_wordMask_T_12, _wordMask_T_11) @[build/NutShell.fir.opt.mlir 48725:25]
    node wordMask_lo_hi = cat(_wordMask_T_14, _wordMask_T_13) @[build/NutShell.fir.opt.mlir 48727:25]
    node wordMask_lo = cat(wordMask_lo_hi, wordMask_lo_lo) @[build/NutShell.fir.opt.mlir 48729:22]
    node wordMask_hi_lo = cat(_wordMask_T_16, _wordMask_T_15) @[build/NutShell.fir.opt.mlir 48731:25]
    node wordMask_hi_hi = cat(_wordMask_T_18, _wordMask_T_17) @[build/NutShell.fir.opt.mlir 48733:25]
    node wordMask_hi = cat(wordMask_hi_hi, wordMask_hi_lo) @[build/NutShell.fir.opt.mlir 48735:22]
    node _wordMask_T_19 = cat(wordMask_hi, wordMask_lo) @[build/NutShell.fir.opt.mlir 48737:25]
    node wordMask = mux(_wordMask_T_2, _wordMask_T_19, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 48740:19]
    regreset writeL2BeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48742:31]
    node _T_5 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48744:15]
    node _T_6 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48747:15]
    node _T_7 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48750:15]
    node _T_8 = or(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 48752:15]
    node _T_9 = and(_T_5, _T_8) @[build/NutShell.fir.opt.mlir 48754:15]
    when _T_9 : @[build/NutShell.fir.opt.mlir 48755:7]
      node wrap = eq(writeL2BeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48757:17]
      node _value_T = add(writeL2BeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 48759:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 48761:23]
      connect writeL2BeatCnt_value, _value_T_1 @[build/NutShell.fir.opt.mlir 48762:9]
    node _hitWrite_T = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 48765:22]
    node hitWrite = and(hit, _hitWrite_T) @[build/NutShell.fir.opt.mlir 48767:19]
    wire dataHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 48768:26]
    wire dataHitWriteBus_x1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48776:29]
    node _dataHitWriteBus_x1_T = and(io.in.bits.req.wdata, wordMask) @[build/NutShell.fir.opt.mlir 48779:32]
    node _dataHitWriteBus_x1_T_1 = not(wordMask) @[build/NutShell.fir.opt.mlir 48781:34]
    node _dataHitWriteBus_x1_T_2 = and(dataRead, _dataHitWriteBus_x1_T_1) @[build/NutShell.fir.opt.mlir 48783:34]
    node _dataHitWriteBus_x1_T_3 = or(_dataHitWriteBus_x1_T, _dataHitWriteBus_x1_T_2) @[build/NutShell.fir.opt.mlir 48785:34]
    connect dataHitWriteBus_x1.data, _dataHitWriteBus_x1_T_3 @[build/NutShell.fir.opt.mlir 48786:7]
    node _dataHitWriteBus_x3_T = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48788:32]
    node _dataHitWriteBus_x3_T_1 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48790:34]
    node _dataHitWriteBus_x3_T_2 = or(_dataHitWriteBus_x3_T, _dataHitWriteBus_x3_T_1) @[build/NutShell.fir.opt.mlir 48792:34]
    node _dataHitWriteBus_x3_T_3 = mux(_dataHitWriteBus_x3_T_2, writeL2BeatCnt_value, addr.wordIndex) @[build/NutShell.fir.opt.mlir 48794:34]
    node dataHitWriteBus_x3 = cat(addr.index, _dataHitWriteBus_x3_T_3) @[build/NutShell.fir.opt.mlir 48796:29]
    connect dataHitWriteBus.req.bits.setIdx, dataHitWriteBus_x3 @[build/NutShell.fir.opt.mlir 48797:7]
    connect dataHitWriteBus.req.bits.data, dataHitWriteBus_x1 @[build/NutShell.fir.opt.mlir 48798:7]
    connect dataHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 48799:7]
    connect dataHitWriteBus.req.valid, hitWrite @[build/NutShell.fir.opt.mlir 48800:7]
    wire metaHitWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 48801:26]
    node _metaHitWriteBus_x5_T = eq(meta.dirty, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48810:32]
    node metaHitWriteBus_x5 = and(hitWrite, _metaHitWriteBus_x5_T) @[build/NutShell.fir.opt.mlir 48812:29]
    wire _metaHitWriteBus_x6_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 48813:35]
    wire _metaHitWriteBus_x6_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 48818:37]
    connect _metaHitWriteBus_x6_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 48819:7]
    node _metaHitWriteBus_x6_T = bits(_metaHitWriteBus_x6_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 48821:32]
    connect _metaHitWriteBus_x6_WIRE.byteOffset, _metaHitWriteBus_x6_T @[build/NutShell.fir.opt.mlir 48822:7]
    node _metaHitWriteBus_x6_T_1 = bits(_metaHitWriteBus_x6_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 48824:34]
    connect _metaHitWriteBus_x6_WIRE.wordIndex, _metaHitWriteBus_x6_T_1 @[build/NutShell.fir.opt.mlir 48825:7]
    node _metaHitWriteBus_x6_T_2 = bits(_metaHitWriteBus_x6_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 48827:34]
    connect _metaHitWriteBus_x6_WIRE.index, _metaHitWriteBus_x6_T_2 @[build/NutShell.fir.opt.mlir 48828:7]
    node _metaHitWriteBus_x6_T_3 = bits(_metaHitWriteBus_x6_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 48830:34]
    connect _metaHitWriteBus_x6_WIRE.tag, _metaHitWriteBus_x6_T_3 @[build/NutShell.fir.opt.mlir 48831:7]
    wire metaHitWriteBus_x8 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 48832:29]
    connect metaHitWriteBus_x8.tag, meta.tag @[build/NutShell.fir.opt.mlir 48836:7]
    connect metaHitWriteBus_x8.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48838:7]
    connect metaHitWriteBus_x8.dirty, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48840:7]
    connect metaHitWriteBus.req.bits.setIdx, _metaHitWriteBus_x6_WIRE.index @[build/NutShell.fir.opt.mlir 48841:7]
    connect metaHitWriteBus.req.bits.data, metaHitWriteBus_x8 @[build/NutShell.fir.opt.mlir 48842:7]
    connect metaHitWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 48843:7]
    connect metaHitWriteBus.req.valid, metaHitWriteBus_x5 @[build/NutShell.fir.opt.mlir 48844:7]
    regreset state : UInt<4>, clock, reset, UInt<4>(0) @[build/NutShell.fir.opt.mlir 48846:16]
    regreset needFlush : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48847:20]
    node _T_10 = neq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 48849:16]
    node _T_11 = and(io.flush, _T_10) @[build/NutShell.fir.opt.mlir 48851:16]
    when _T_11 : @[build/NutShell.fir.opt.mlir 48852:7]
      connect needFlush, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48854:9]
    node _T_12 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 48857:16]
    node _T_13 = and(_T_12, needFlush) @[build/NutShell.fir.opt.mlir 48859:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 48860:7]
      connect needFlush, UInt<1>(0) @[build/NutShell.fir.opt.mlir 48862:9]
    regreset readBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48864:28]
    regreset writeBeatCnt_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 48865:29]
    regreset state2 : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 48867:17]
    node _T_14 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 48870:16]
    node _T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48872:16]
    node _T_16 = or(_T_14, _T_15) @[build/NutShell.fir.opt.mlir 48874:16]
    node _T_17 = eq(state2, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 48876:16]
    node _T_18 = and(_T_16, _T_17) @[build/NutShell.fir.opt.mlir 48878:16]
    node _T_19 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 48880:16]
    node _T_20 = mux(_T_19, readBeatCnt_value, writeBeatCnt_value) @[build/NutShell.fir.opt.mlir 48882:16]
    node _T_21 = cat(addr.index, _T_20) @[build/NutShell.fir.opt.mlir 48884:16]
    connect io.dataReadBus.req.bits.setIdx, _T_21 @[build/NutShell.fir.opt.mlir 48885:7]
    connect io.dataReadBus.req.valid, _T_18 @[build/NutShell.fir.opt.mlir 48886:7]
    node _dataWay_T = eq(state2, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 48889:21]
    reg dataWay : { data : UInt<64> }[4], clock @[build/NutShell.fir.opt.mlir 48890:18]
    when _dataWay_T : @[build/NutShell.fir.opt.mlir 48899:7]
      connect dataWay, io.dataReadBus.resp.data @[build/NutShell.fir.opt.mlir 48900:9]
    node _dataHitWay_T = bits(io.in.bits.waymask, 0, 0) @[build/NutShell.fir.opt.mlir 48903:24]
    node _dataHitWay_T_1 = bits(io.in.bits.waymask, 1, 1) @[build/NutShell.fir.opt.mlir 48905:26]
    node _dataHitWay_T_2 = bits(io.in.bits.waymask, 2, 2) @[build/NutShell.fir.opt.mlir 48907:26]
    node _dataHitWay_T_3 = bits(io.in.bits.waymask, 3, 3) @[build/NutShell.fir.opt.mlir 48909:26]
    wire _dataHitWay_WIRE : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 48910:27]
    node _dataHitWay_T_4 = mux(_dataHitWay_T, dataWay[0].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48913:26]
    node _dataHitWay_T_5 = mux(_dataHitWay_T_1, dataWay[1].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48915:26]
    node _dataHitWay_T_6 = mux(_dataHitWay_T_2, dataWay[2].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48917:26]
    node _dataHitWay_T_7 = mux(_dataHitWay_T_3, dataWay[3].data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 48919:26]
    node _dataHitWay_T_8 = or(_dataHitWay_T_4, _dataHitWay_T_5) @[build/NutShell.fir.opt.mlir 48921:26]
    node _dataHitWay_T_9 = or(_dataHitWay_T_8, _dataHitWay_T_6) @[build/NutShell.fir.opt.mlir 48923:26]
    node _dataHitWay_T_10 = or(_dataHitWay_T_9, _dataHitWay_T_7) @[build/NutShell.fir.opt.mlir 48925:27]
    wire _dataHitWay_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 48926:29]
    connect _dataHitWay_WIRE_1, _dataHitWay_T_10 @[build/NutShell.fir.opt.mlir 48927:7]
    connect _dataHitWay_WIRE.data, _dataHitWay_WIRE_1 @[build/NutShell.fir.opt.mlir 48928:7]
    node _T_22 = eq(UInt<2>(0), state2) @[build/NutShell.fir.opt.mlir 48930:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 48931:7]
      node _T_23 = and(io.dataReadBus.req.ready, io.dataReadBus.req.valid) @[build/NutShell.fir.opt.mlir 48933:18]
      when _T_23 : @[build/NutShell.fir.opt.mlir 48934:9]
        connect state2, UInt<2>(1) @[build/NutShell.fir.opt.mlir 48936:11]
    else :
      node _T_24 = eq(UInt<2>(1), state2) @[build/NutShell.fir.opt.mlir 48940:18]
      when _T_24 : @[build/NutShell.fir.opt.mlir 48941:9]
        connect state2, UInt<2>(2) @[build/NutShell.fir.opt.mlir 48943:11]
      else :
        node _T_25 = eq(UInt<2>(2), state2) @[build/NutShell.fir.opt.mlir 48946:20]
        when _T_25 : @[build/NutShell.fir.opt.mlir 48947:11]
          node _T_26 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 48949:22]
          node _T_27 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 48951:22]
          node _T_28 = or(_T_26, _T_27) @[build/NutShell.fir.opt.mlir 48953:22]
          node _T_29 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 48955:22]
          node _T_30 = or(_T_28, _T_29) @[build/NutShell.fir.opt.mlir 48957:22]
          when _T_30 : @[build/NutShell.fir.opt.mlir 48958:13]
            connect state2, UInt<2>(0) @[build/NutShell.fir.opt.mlir 48960:15]
    node _raddr_T = bits(io.in.bits.req.addr, 31, 3) @[build/NutShell.fir.opt.mlir 48966:19]
    node raddr = cat(_raddr_T, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 48968:16]
    node waddr_hi = cat(meta.tag, addr.index) @[build/NutShell.fir.opt.mlir 48970:19]
    node waddr = cat(waddr_hi, UInt<6>(0)) @[build/NutShell.fir.opt.mlir 48973:16]
    node _cmd_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 48976:17]
    node _cmd_T_1 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 48978:19]
    node _cmd_T_2 = mux(_cmd_T_1, UInt<3>(7), UInt<2>(3)) @[build/NutShell.fir.opt.mlir 48980:19]
    node cmd = mux(_cmd_T, UInt<2>(2), _cmd_T_2) @[build/NutShell.fir.opt.mlir 48982:14]
    node _T_31 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 48984:16]
    node _T_32 = mux(_T_31, raddr, waddr) @[build/NutShell.fir.opt.mlir 48986:16]
    node _T_33 = mux(UInt<1>(1), UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 48988:16]
    connect io.mem.req.bits.addr, _T_32 @[build/NutShell.fir.opt.mlir 48989:7]
    connect io.mem.req.bits.cmd, pad(cmd, 4) @[build/NutShell.fir.opt.mlir 48991:7]
    connect io.mem.req.bits.size, pad(UInt<2>(3), 3) @[build/NutShell.fir.opt.mlir 48994:7]
    connect io.mem.req.bits.wdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 48995:7]
    connect io.mem.req.bits.wmask, _T_33 @[build/NutShell.fir.opt.mlir 48997:7]
    connect io.mem.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 48999:7]
    node _io_mem_req_valid_T = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 49001:30]
    node _io_mem_req_valid_T_1 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 49003:32]
    node _io_mem_req_valid_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49005:32]
    node _io_mem_req_valid_T_3 = and(_io_mem_req_valid_T_1, _io_mem_req_valid_T_2) @[build/NutShell.fir.opt.mlir 49007:32]
    node _io_mem_req_valid_T_4 = or(_io_mem_req_valid_T, _io_mem_req_valid_T_3) @[build/NutShell.fir.opt.mlir 49009:32]
    connect io.mem.req.valid, _io_mem_req_valid_T_4 @[build/NutShell.fir.opt.mlir 49010:7]
    connect io.mmio.req.bits, io.in.bits.req @[build/NutShell.fir.opt.mlir 49011:7]
    connect io.mmio.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49013:7]
    node _io_mmio_req_valid_T = eq(state, UInt<4>(5)) @[build/NutShell.fir.opt.mlir 49016:31]
    connect io.mmio.req.valid, _io_mmio_req_valid_T @[build/NutShell.fir.opt.mlir 49017:7]
    regreset afterFirstRead : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49018:25]
    node _alreadyOutFire_T = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49020:28]
    regreset alreadyOutFire : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49021:25]
    when _alreadyOutFire_T : @[build/NutShell.fir.opt.mlir 49022:7]
      connect alreadyOutFire, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49024:9]
    node _readingFirst_T = eq(afterFirstRead, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49027:26]
    node _readingFirst_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49029:28]
    node _readingFirst_T_2 = and(_readingFirst_T, _readingFirst_T_1) @[build/NutShell.fir.opt.mlir 49031:28]
    node _readingFirst_T_3 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49034:28]
    node readingFirst = and(_readingFirst_T_2, _readingFirst_T_3) @[build/NutShell.fir.opt.mlir 49036:23]
    node _inRdataRegDemand_T = mux(mmio, io.mmio.resp.bits.rdata, io.mem.resp.bits.rdata) @[build/NutShell.fir.opt.mlir 49038:30]
    node _inRdataRegDemand_T_1 = eq(state, UInt<4>(6)) @[build/NutShell.fir.opt.mlir 49041:32]
    node _inRdataRegDemand_T_2 = mux(mmio, _inRdataRegDemand_T_1, readingFirst) @[build/NutShell.fir.opt.mlir 49043:32]
    reg inRdataRegDemand : UInt<64>, clock @[build/NutShell.fir.opt.mlir 49044:27]
    when _inRdataRegDemand_T_2 : @[build/NutShell.fir.opt.mlir 49045:7]
      connect inRdataRegDemand, _inRdataRegDemand_T @[build/NutShell.fir.opt.mlir 49046:9]
    node _io_cohResp_valid_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49049:30]
    node _io_cohResp_valid_T_1 = and(_io_cohResp_valid_T, probe) @[build/NutShell.fir.opt.mlir 49051:32]
    node _io_cohResp_valid_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49053:32]
    node _io_cohResp_valid_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49055:32]
    node _io_cohResp_valid_T_4 = and(_io_cohResp_valid_T_2, _io_cohResp_valid_T_3) @[build/NutShell.fir.opt.mlir 49057:32]
    node _io_cohResp_valid_T_5 = or(_io_cohResp_valid_T_1, _io_cohResp_valid_T_4) @[build/NutShell.fir.opt.mlir 49059:32]
    connect io.cohResp.valid, _io_cohResp_valid_T_5 @[build/NutShell.fir.opt.mlir 49060:7]
    connect io.cohResp.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 49061:7]
    node _releaseLast_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49063:25]
    node _releaseLast_T_1 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49065:27]
    node _releaseLast_T_2 = and(_releaseLast_T, _releaseLast_T_1) @[build/NutShell.fir.opt.mlir 49067:27]
    regreset releaseLast_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 49068:30]
    wire releaseLast : UInt<1> @[build/NutShell.fir.opt.mlir 49069:22]
    connect releaseLast, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49071:7]
    when _releaseLast_T_2 : @[build/NutShell.fir.opt.mlir 49072:7]
      node releaseLast_wrap_wrap = eq(releaseLast_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49074:34]
      node _releaseLast_wrap_value_T = add(releaseLast_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49076:38]
      node _releaseLast_wrap_value_T_1 = tail(_releaseLast_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 49078:40]
      connect releaseLast_c_value, _releaseLast_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 49079:9]
      connect releaseLast, releaseLast_wrap_wrap @[build/NutShell.fir.opt.mlir 49080:9]
    node _io_cohResp_bits_cmd_T = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49083:33]
    node _io_cohResp_bits_cmd_T_1 = mux(releaseLast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49086:35]
    node _io_cohResp_bits_cmd_T_2 = mux(hit, UInt<4>(12), UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49089:35]
    node _io_cohResp_bits_cmd_T_3 = mux(_io_cohResp_bits_cmd_T, _io_cohResp_bits_cmd_T_1, _io_cohResp_bits_cmd_T_2) @[build/NutShell.fir.opt.mlir 49091:35]
    connect io.cohResp.bits.cmd, _io_cohResp_bits_cmd_T_3 @[build/NutShell.fir.opt.mlir 49092:7]
    node _respToL1Fire_T = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 49094:26]
    node _respToL1Fire_T_1 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49096:28]
    node respToL1Fire = and(_respToL1Fire_T, _respToL1Fire_T_1) @[build/NutShell.fir.opt.mlir 49098:23]
    node _respToL1Last_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49100:26]
    node _respToL1Last_T_1 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49102:28]
    node _respToL1Last_T_2 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49104:28]
    node _respToL1Last_T_3 = and(_respToL1Last_T_1, _respToL1Last_T_2) @[build/NutShell.fir.opt.mlir 49106:28]
    node _respToL1Last_T_4 = or(_respToL1Last_T, _respToL1Last_T_3) @[build/NutShell.fir.opt.mlir 49108:28]
    node _respToL1Last_T_5 = and(_respToL1Last_T_4, hitReadBurst) @[build/NutShell.fir.opt.mlir 49110:28]
    node _respToL1Last_T_6 = and(_respToL1Last_T_5, io.out.ready) @[build/NutShell.fir.opt.mlir 49112:28]
    regreset respToL1Last_c_value : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 49113:31]
    wire respToL1Last : UInt<1> @[build/NutShell.fir.opt.mlir 49114:23]
    connect respToL1Last, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49116:7]
    when _respToL1Last_T_6 : @[build/NutShell.fir.opt.mlir 49117:7]
      node respToL1Last_wrap_wrap = eq(respToL1Last_c_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49119:35]
      node _respToL1Last_wrap_value_T = add(respToL1Last_c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49121:39]
      node _respToL1Last_wrap_value_T_1 = tail(_respToL1Last_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 49123:41]
      connect respToL1Last_c_value, _respToL1Last_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 49124:9]
      connect respToL1Last, respToL1Last_wrap_wrap @[build/NutShell.fir.opt.mlir 49125:9]
    node _T_34 = eq(UInt<4>(0), state) @[build/NutShell.fir.opt.mlir 49128:16]
    when _T_34 : @[build/NutShell.fir.opt.mlir 49131:7]
      connect afterFirstRead, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49133:9]
      connect alreadyOutFire, UInt<1>(0) @[build/NutShell.fir.opt.mlir 49135:9]
      when probe : @[build/NutShell.fir.opt.mlir 49136:9]
        node _T_35 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49138:20]
        when _T_35 : @[build/NutShell.fir.opt.mlir 49139:11]
          node _state_T = mux(hit, UInt<4>(8), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49141:25]
          connect state, _state_T @[build/NutShell.fir.opt.mlir 49142:13]
          connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 49143:13]
      else :
        node _T_36 = and(hitReadBurst, io.out.ready) @[build/NutShell.fir.opt.mlir 49147:20]
        when _T_36 : @[build/NutShell.fir.opt.mlir 49148:11]
          connect state, UInt<4>(8) @[build/NutShell.fir.opt.mlir 49150:13]
          node _value_T_2 = eq(addr.wordIndex, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49152:27]
          node _value_T_3 = add(addr.wordIndex, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49154:27]
          node _value_T_4 = tail(_value_T_3, 1) @[build/NutShell.fir.opt.mlir 49156:27]
          node _value_T_5 = mux(_value_T_2, UInt<1>(0), _value_T_4) @[build/NutShell.fir.opt.mlir 49158:27]
          connect readBeatCnt_value, _value_T_5 @[build/NutShell.fir.opt.mlir 49159:13]
        else :
          node _T_37 = or(miss, mmio) @[build/NutShell.fir.opt.mlir 49162:22]
          node _T_38 = eq(io.flush, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49164:22]
          node _T_39 = and(_T_37, _T_38) @[build/NutShell.fir.opt.mlir 49166:22]
          when _T_39 : @[build/NutShell.fir.opt.mlir 49167:13]
            node _state_T_1 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49169:29]
            node _state_T_2 = and(_state_T_1, meta.dirty) @[build/NutShell.fir.opt.mlir 49171:29]
            node _state_T_3 = mux(_state_T_2, UInt<4>(3), UInt<4>(1)) @[build/NutShell.fir.opt.mlir 49173:29]
            node _state_T_4 = mux(mmio, UInt<4>(5), _state_T_3) @[build/NutShell.fir.opt.mlir 49175:29]
            connect state, _state_T_4 @[build/NutShell.fir.opt.mlir 49176:15]
    else :
      node _T_40 = eq(UInt<4>(5), state) @[build/NutShell.fir.opt.mlir 49182:18]
      when _T_40 : @[build/NutShell.fir.opt.mlir 49183:9]
        node _T_41 = and(io.mmio.req.ready, io.mmio.req.valid) @[build/NutShell.fir.opt.mlir 49185:20]
        when _T_41 : @[build/NutShell.fir.opt.mlir 49186:11]
          connect state, UInt<4>(6) @[build/NutShell.fir.opt.mlir 49188:13]
      else :
        node _T_42 = eq(UInt<4>(6), state) @[build/NutShell.fir.opt.mlir 49192:20]
        when _T_42 : @[build/NutShell.fir.opt.mlir 49193:11]
          node _T_43 = and(io.mmio.resp.ready, io.mmio.resp.valid) @[build/NutShell.fir.opt.mlir 49195:22]
          when _T_43 : @[build/NutShell.fir.opt.mlir 49196:13]
            connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 49198:15]
        else :
          node _T_44 = eq(UInt<4>(8), state) @[build/NutShell.fir.opt.mlir 49202:22]
          when _T_44 : @[build/NutShell.fir.opt.mlir 49203:13]
            node _T_45 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49205:24]
            node _T_46 = or(_T_45, respToL1Fire) @[build/NutShell.fir.opt.mlir 49207:24]
            when _T_46 : @[build/NutShell.fir.opt.mlir 49208:15]
              node wrap_1 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49210:27]
              node _value_T_6 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49212:31]
              node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 49214:31]
              connect readBeatCnt_value, _value_T_7 @[build/NutShell.fir.opt.mlir 49215:17]
            node _T_47 = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49218:24]
            node _T_48 = and(probe, _T_47) @[build/NutShell.fir.opt.mlir 49220:24]
            node _T_49 = and(_T_48, releaseLast) @[build/NutShell.fir.opt.mlir 49222:24]
            node _T_50 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 49224:24]
            node _T_51 = or(_T_49, _T_50) @[build/NutShell.fir.opt.mlir 49226:24]
            when _T_51 : @[build/NutShell.fir.opt.mlir 49227:15]
              connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 49229:17]
          else :
            node _T_52 = eq(UInt<4>(1), state) @[build/NutShell.fir.opt.mlir 49233:24]
            when _T_52 : @[build/NutShell.fir.opt.mlir 49234:15]
              node _T_53 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49236:26]
              when _T_53 : @[build/NutShell.fir.opt.mlir 49237:17]
                connect state, UInt<4>(2) @[build/NutShell.fir.opt.mlir 49239:19]
                connect readBeatCnt_value, addr.wordIndex @[build/NutShell.fir.opt.mlir 49240:19]
            else :
              node _T_54 = eq(UInt<4>(2), state) @[build/NutShell.fir.opt.mlir 49244:26]
              when _T_54 : @[build/NutShell.fir.opt.mlir 49245:17]
                node _T_55 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49247:28]
                when _T_55 : @[build/NutShell.fir.opt.mlir 49248:19]
                  connect afterFirstRead, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49250:21]
                  node wrap_2 = eq(readBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49252:31]
                  node _value_T_8 = add(readBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49254:35]
                  node _value_T_9 = tail(_value_T_8, 1) @[build/NutShell.fir.opt.mlir 49256:35]
                  connect readBeatCnt_value, _value_T_9 @[build/NutShell.fir.opt.mlir 49257:21]
                  node _T_56 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 49259:30]
                  when _T_56 : @[build/NutShell.fir.opt.mlir 49260:21]
                    connect writeL2BeatCnt_value, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 49263:23]
                  node _T_57 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49266:30]
                  when _T_57 : @[build/NutShell.fir.opt.mlir 49267:21]
                    connect state, UInt<4>(7) @[build/NutShell.fir.opt.mlir 49269:23]
              else :
                node _T_58 = eq(UInt<4>(3), state) @[build/NutShell.fir.opt.mlir 49274:28]
                when _T_58 : @[build/NutShell.fir.opt.mlir 49275:19]
                  node _T_59 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49277:30]
                  when _T_59 : @[build/NutShell.fir.opt.mlir 49278:21]
                    node wrap_3 = eq(writeBeatCnt_value, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49280:33]
                    node _value_T_10 = add(writeBeatCnt_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49282:38]
                    node _value_T_11 = tail(_value_T_10, 1) @[build/NutShell.fir.opt.mlir 49284:38]
                    connect writeBeatCnt_value, _value_T_11 @[build/NutShell.fir.opt.mlir 49285:23]
                  node _T_60 = eq(io.mem.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49288:30]
                  node _T_61 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49290:30]
                  node _T_62 = and(_T_60, _T_61) @[build/NutShell.fir.opt.mlir 49292:30]
                  when _T_62 : @[build/NutShell.fir.opt.mlir 49293:21]
                    connect state, UInt<4>(4) @[build/NutShell.fir.opt.mlir 49295:23]
                else :
                  node _T_63 = eq(UInt<4>(4), state) @[build/NutShell.fir.opt.mlir 49299:30]
                  when _T_63 : @[build/NutShell.fir.opt.mlir 49300:21]
                    node _T_64 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49302:32]
                    when _T_64 : @[build/NutShell.fir.opt.mlir 49303:23]
                      connect state, UInt<4>(1) @[build/NutShell.fir.opt.mlir 49305:25]
                  else :
                    node _T_65 = eq(UInt<4>(7), state) @[build/NutShell.fir.opt.mlir 49309:32]
                    when _T_65 : @[build/NutShell.fir.opt.mlir 49310:23]
                      node _T_66 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49312:34]
                      node _T_67 = or(_T_66, needFlush) @[build/NutShell.fir.opt.mlir 49314:34]
                      node _T_68 = or(_T_67, alreadyOutFire) @[build/NutShell.fir.opt.mlir 49316:34]
                      when _T_68 : @[build/NutShell.fir.opt.mlir 49317:25]
                        connect state, UInt<4>(0) @[build/NutShell.fir.opt.mlir 49319:27]
    node _dataRefill_T = mux(readingFirst, wordMask, UInt<64>(0)) @[build/NutShell.fir.opt.mlir 49331:24]
    node _dataRefill_T_1 = and(io.in.bits.req.wdata, _dataRefill_T) @[build/NutShell.fir.opt.mlir 49333:26]
    node _dataRefill_T_2 = not(_dataRefill_T) @[build/NutShell.fir.opt.mlir 49335:26]
    node _dataRefill_T_3 = and(io.mem.resp.bits.rdata, _dataRefill_T_2) @[build/NutShell.fir.opt.mlir 49337:26]
    node dataRefill = or(_dataRefill_T_1, _dataRefill_T_3) @[build/NutShell.fir.opt.mlir 49339:21]
    wire dataRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 49340:29]
    node _dataRefillWriteBus_x9_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49349:35]
    node _dataRefillWriteBus_x9_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49351:37]
    node dataRefillWriteBus_x9 = and(_dataRefillWriteBus_x9_T, _dataRefillWriteBus_x9_T_1) @[build/NutShell.fir.opt.mlir 49353:32]
    node dataRefillWriteBus_x10 = cat(addr.index, readBeatCnt_value) @[build/NutShell.fir.opt.mlir 49355:33]
    wire dataRefillWriteBus_x11 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 49356:33]
    connect dataRefillWriteBus_x11.data, dataRefill @[build/NutShell.fir.opt.mlir 49358:7]
    connect dataRefillWriteBus.req.bits.setIdx, dataRefillWriteBus_x10 @[build/NutShell.fir.opt.mlir 49359:7]
    connect dataRefillWriteBus.req.bits.data, dataRefillWriteBus_x11 @[build/NutShell.fir.opt.mlir 49360:7]
    connect dataRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 49361:7]
    connect dataRefillWriteBus.req.valid, dataRefillWriteBus_x9 @[build/NutShell.fir.opt.mlir 49362:7]
    connect dataHitWriteBus.req.ready, dataWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 49363:7]
    connect dataWriteArb.io.in[0].valid, dataHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49364:7]
    connect dataWriteArb.io.in[0].bits, dataHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49365:7]
    connect dataRefillWriteBus.req.ready, dataWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 49366:7]
    connect dataWriteArb.io.in[1].valid, dataRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49367:7]
    connect dataWriteArb.io.in[1].bits, dataRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49368:7]
    connect io.dataWriteBus.req.bits, dataWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 49369:7]
    connect io.dataWriteBus.req.valid, dataWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 49370:7]
    connect dataWriteArb.io.out.ready, io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 49371:7]
    wire metaRefillWriteBus : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } @[build/NutShell.fir.opt.mlir 49372:29]
    node _metaRefillWriteBus_T = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49381:32]
    node _metaRefillWriteBus_T_1 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49383:34]
    node _metaRefillWriteBus_T_2 = and(_metaRefillWriteBus_T, _metaRefillWriteBus_T_1) @[build/NutShell.fir.opt.mlir 49385:34]
    node _metaRefillWriteBus_T_3 = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49387:34]
    node _metaRefillWriteBus_T_4 = and(_metaRefillWriteBus_T_2, _metaRefillWriteBus_T_3) @[build/NutShell.fir.opt.mlir 49389:34]
    wire metaRefillWriteBus_qual4 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 49390:35]
    node _metaRefillWriteBus_x15_T = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49395:36]
    node _metaRefillWriteBus_x15_T_1 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49397:38]
    node metaRefillWriteBus_x15 = and(_metaRefillWriteBus_x15_T, _metaRefillWriteBus_x15_T_1) @[build/NutShell.fir.opt.mlir 49399:33]
    connect metaRefillWriteBus_qual4.tag, addr.tag @[build/NutShell.fir.opt.mlir 49400:7]
    connect metaRefillWriteBus_qual4.valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 49402:7]
    connect metaRefillWriteBus_qual4.dirty, metaRefillWriteBus_x15 @[build/NutShell.fir.opt.mlir 49403:7]
    wire _metaRefillWriteBus_WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49404:35]
    wire _metaRefillWriteBus_WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 49409:37]
    connect _metaRefillWriteBus_WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49410:7]
    node _metaRefillWriteBus_T_5 = bits(_metaRefillWriteBus_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 49412:34]
    connect _metaRefillWriteBus_WIRE.byteOffset, _metaRefillWriteBus_T_5 @[build/NutShell.fir.opt.mlir 49413:7]
    node _metaRefillWriteBus_T_6 = bits(_metaRefillWriteBus_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 49415:34]
    connect _metaRefillWriteBus_WIRE.wordIndex, _metaRefillWriteBus_T_6 @[build/NutShell.fir.opt.mlir 49416:7]
    node _metaRefillWriteBus_T_7 = bits(_metaRefillWriteBus_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 49418:34]
    connect _metaRefillWriteBus_WIRE.index, _metaRefillWriteBus_T_7 @[build/NutShell.fir.opt.mlir 49419:7]
    node _metaRefillWriteBus_T_8 = bits(_metaRefillWriteBus_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 49421:34]
    connect _metaRefillWriteBus_WIRE.tag, _metaRefillWriteBus_T_8 @[build/NutShell.fir.opt.mlir 49422:7]
    connect metaRefillWriteBus.req.bits.setIdx, _metaRefillWriteBus_WIRE.index @[build/NutShell.fir.opt.mlir 49423:7]
    connect metaRefillWriteBus.req.bits.data, metaRefillWriteBus_qual4 @[build/NutShell.fir.opt.mlir 49424:7]
    connect metaRefillWriteBus.req.bits.waymask, io.in.bits.waymask @[build/NutShell.fir.opt.mlir 49425:7]
    connect metaRefillWriteBus.req.valid, _metaRefillWriteBus_T_4 @[build/NutShell.fir.opt.mlir 49426:7]
    connect metaHitWriteBus.req.ready, metaWriteArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 49427:7]
    connect metaWriteArb.io.in[0].valid, metaHitWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49428:7]
    connect metaWriteArb.io.in[0].bits, metaHitWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49429:7]
    connect metaRefillWriteBus.req.ready, metaWriteArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 49430:7]
    connect metaWriteArb.io.in[1].valid, metaRefillWriteBus.req.valid @[build/NutShell.fir.opt.mlir 49431:7]
    connect metaWriteArb.io.in[1].bits, metaRefillWriteBus.req.bits @[build/NutShell.fir.opt.mlir 49432:7]
    connect io.metaWriteBus.req.bits, metaWriteArb.io.out.bits @[build/NutShell.fir.opt.mlir 49433:7]
    connect io.metaWriteBus.req.valid, metaWriteArb.io.out.valid @[build/NutShell.fir.opt.mlir 49434:7]
    connect metaWriteArb.io.out.ready, io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 49435:7]
    node _T_69 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49437:16]
    node _T_70 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49439:16]
    node _T_71 = and(_T_69, _T_70) @[build/NutShell.fir.opt.mlir 49441:16]
    node _T_72 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49443:16]
    node _T_73 = and(_T_71, _T_72) @[build/NutShell.fir.opt.mlir 49445:16]
    when _T_73 : @[build/NutShell.fir.opt.mlir 49446:7]
      connect io.out.bits.rdata, dataRefill @[build/NutShell.fir.opt.mlir 49447:9]
      node _io_out_bits_cmd_T = eq(io.mem.resp.bits.cmd, UInt<3>(6)) @[build/NutShell.fir.opt.mlir 49449:31]
      node _io_out_bits_cmd_T_1 = mux(_io_out_bits_cmd_T, UInt<3>(6), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49451:33]
      connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_1, 4) @[build/NutShell.fir.opt.mlir 49453:9]
    else :
      node _T_74 = eq(io.in.bits.req.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 49456:18]
      node _T_75 = eq(io.in.bits.req.cmd, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 49458:18]
      node _T_76 = or(_T_74, _T_75) @[build/NutShell.fir.opt.mlir 49460:18]
      when _T_76 : @[build/NutShell.fir.opt.mlir 49461:9]
        node _io_out_bits_rdata_T = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 49463:35]
        connect io.out.bits.rdata, _io_out_bits_rdata_T @[build/NutShell.fir.opt.mlir 49464:11]
        invalidate io.out.bits.cmd @[build/NutShell.fir.opt.mlir 49466:11]
      else :
        node _T_77 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49469:20]
        node _T_78 = and(hitReadBurst, _T_77) @[build/NutShell.fir.opt.mlir 49471:20]
        when _T_78 : @[build/NutShell.fir.opt.mlir 49472:11]
          connect io.out.bits.rdata, _dataHitWay_WIRE.data @[build/NutShell.fir.opt.mlir 49473:13]
          node _io_out_bits_cmd_T_2 = mux(respToL1Last, UInt<3>(6), UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49475:37]
          connect io.out.bits.cmd, pad(_io_out_bits_cmd_T_2, 4) @[build/NutShell.fir.opt.mlir 49477:13]
        else :
          node _io_out_bits_rdata_T_1 = mux(hit, dataRead, inRdataRegDemand) @[build/NutShell.fir.opt.mlir 49480:39]
          connect io.out.bits.rdata, _io_out_bits_rdata_T_1 @[build/NutShell.fir.opt.mlir 49481:13]
          connect io.out.bits.cmd, io.in.bits.req.cmd @[build/NutShell.fir.opt.mlir 49482:13]
    node _io_out_valid_T = bits(io.in.bits.req.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 49487:26]
    node _io_out_valid_T_1 = and(_io_out_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49489:28]
    node _io_out_valid_T_2 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49491:28]
    node _io_out_valid_T_3 = eq(hit, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49493:28]
    node _io_out_valid_T_4 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49495:28]
    node _io_out_valid_T_5 = and(_io_out_valid_T_3, _io_out_valid_T_4) @[build/NutShell.fir.opt.mlir 49497:28]
    node _io_out_valid_T_6 = or(hit, _io_out_valid_T_5) @[build/NutShell.fir.opt.mlir 49499:28]
    node _io_out_valid_T_7 = and(_io_out_valid_T_2, _io_out_valid_T_6) @[build/NutShell.fir.opt.mlir 49501:28]
    node _io_out_valid_T_8 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49503:28]
    node _io_out_valid_T_9 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49505:28]
    node _io_out_valid_T_10 = and(_io_out_valid_T_8, _io_out_valid_T_9) @[build/NutShell.fir.opt.mlir 49507:29]
    node _io_out_valid_T_11 = eq(io.in.bits.req.cmd, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49509:29]
    node _io_out_valid_T_12 = and(_io_out_valid_T_10, _io_out_valid_T_11) @[build/NutShell.fir.opt.mlir 49511:29]
    node _io_out_valid_T_13 = mux(_io_out_valid_T_7, UInt<1>(1), _io_out_valid_T_12) @[build/NutShell.fir.opt.mlir 49513:29]
    node _io_out_valid_T_14 = and(respToL1Fire, respToL1Last) @[build/NutShell.fir.opt.mlir 49515:29]
    node _io_out_valid_T_15 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49517:29]
    node _io_out_valid_T_16 = and(_io_out_valid_T_14, _io_out_valid_T_15) @[build/NutShell.fir.opt.mlir 49519:29]
    node _io_out_valid_T_17 = or(_io_out_valid_T_13, _io_out_valid_T_16) @[build/NutShell.fir.opt.mlir 49521:29]
    node _io_out_valid_T_18 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49523:29]
    node _io_out_valid_T_19 = or(_io_out_valid_T_18, mmio) @[build/NutShell.fir.opt.mlir 49525:29]
    node _io_out_valid_T_20 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49527:29]
    node _io_out_valid_T_21 = eq(alreadyOutFire, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49529:29]
    node _io_out_valid_T_22 = and(afterFirstRead, _io_out_valid_T_21) @[build/NutShell.fir.opt.mlir 49531:29]
    node _io_out_valid_T_23 = mux(_io_out_valid_T_19, _io_out_valid_T_20, _io_out_valid_T_22) @[build/NutShell.fir.opt.mlir 49533:29]
    node _io_out_valid_T_24 = mux(hit, UInt<1>(1), _io_out_valid_T_23) @[build/NutShell.fir.opt.mlir 49535:29]
    node _io_out_valid_T_25 = mux(probe, UInt<1>(0), _io_out_valid_T_24) @[build/NutShell.fir.opt.mlir 49537:29]
    node _io_out_valid_T_26 = mux(_io_out_valid_T_1, _io_out_valid_T_17, _io_out_valid_T_25) @[build/NutShell.fir.opt.mlir 49539:29]
    node _io_out_valid_T_27 = and(io.in.valid, _io_out_valid_T_26) @[build/NutShell.fir.opt.mlir 49541:29]
    connect io.out.valid, _io_out_valid_T_27 @[build/NutShell.fir.opt.mlir 49542:7]
    node _io_isFinish_T = and(io.cohResp.ready, io.cohResp.valid) @[build/NutShell.fir.opt.mlir 49544:25]
    node _io_isFinish_T_1 = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49546:27]
    node _io_isFinish_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49548:27]
    node _io_isFinish_T_3 = and(_io_isFinish_T_2, releaseLast) @[build/NutShell.fir.opt.mlir 49550:27]
    node _io_isFinish_T_4 = mux(miss, _io_isFinish_T_1, _io_isFinish_T_3) @[build/NutShell.fir.opt.mlir 49552:27]
    node _io_isFinish_T_5 = and(_io_isFinish_T, _io_isFinish_T_4) @[build/NutShell.fir.opt.mlir 49554:27]
    node _io_isFinish_T_6 = bits(io.in.bits.req.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 49556:27]
    node _io_isFinish_T_7 = or(hit, _io_isFinish_T_6) @[build/NutShell.fir.opt.mlir 49558:27]
    node _io_isFinish_T_8 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49560:27]
    node _io_isFinish_T_9 = eq(state, UInt<4>(7)) @[build/NutShell.fir.opt.mlir 49562:27]
    node _io_isFinish_T_10 = and(io.out.ready, io.out.valid) @[build/NutShell.fir.opt.mlir 49564:28]
    node _io_isFinish_T_11 = or(_io_isFinish_T_10, alreadyOutFire) @[build/NutShell.fir.opt.mlir 49566:28]
    node _io_isFinish_T_12 = and(_io_isFinish_T_9, _io_isFinish_T_11) @[build/NutShell.fir.opt.mlir 49568:28]
    node _io_isFinish_T_13 = mux(_io_isFinish_T_7, _io_isFinish_T_8, _io_isFinish_T_12) @[build/NutShell.fir.opt.mlir 49570:28]
    node _io_isFinish_T_14 = mux(probe, _io_isFinish_T_5, _io_isFinish_T_13) @[build/NutShell.fir.opt.mlir 49572:28]
    connect io.isFinish, _io_isFinish_T_14 @[build/NutShell.fir.opt.mlir 49573:7]
    node _io_in_ready_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49575:25]
    node _io_in_ready_T_1 = eq(hitReadBurst, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49577:27]
    node _io_in_ready_T_2 = and(_io_in_ready_T, _io_in_ready_T_1) @[build/NutShell.fir.opt.mlir 49579:27]
    node _io_in_ready_T_3 = and(io.out.ready, _io_in_ready_T_2) @[build/NutShell.fir.opt.mlir 49581:27]
    node _io_in_ready_T_4 = eq(miss, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49583:27]
    node _io_in_ready_T_5 = and(_io_in_ready_T_3, _io_in_ready_T_4) @[build/NutShell.fir.opt.mlir 49585:27]
    node _io_in_ready_T_6 = eq(probe, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49587:27]
    node _io_in_ready_T_7 = and(_io_in_ready_T_5, _io_in_ready_T_6) @[build/NutShell.fir.opt.mlir 49589:27]
    connect io.in.ready, _io_in_ready_T_7 @[build/NutShell.fir.opt.mlir 49590:7]
    node _io_dataReadRespToL1_T = eq(state, UInt<4>(0)) @[build/NutShell.fir.opt.mlir 49592:33]
    node _io_dataReadRespToL1_T_1 = and(_io_dataReadRespToL1_T, io.out.ready) @[build/NutShell.fir.opt.mlir 49594:35]
    node _io_dataReadRespToL1_T_2 = eq(state, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 49596:35]
    node _io_dataReadRespToL1_T_3 = eq(state2, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 49598:35]
    node _io_dataReadRespToL1_T_4 = and(_io_dataReadRespToL1_T_2, _io_dataReadRespToL1_T_3) @[build/NutShell.fir.opt.mlir 49600:35]
    node _io_dataReadRespToL1_T_5 = or(_io_dataReadRespToL1_T_1, _io_dataReadRespToL1_T_4) @[build/NutShell.fir.opt.mlir 49602:35]
    node _io_dataReadRespToL1_T_6 = and(hitReadBurst, _io_dataReadRespToL1_T_5) @[build/NutShell.fir.opt.mlir 49604:35]
    connect io.dataReadRespToL1, _io_dataReadRespToL1_T_6 @[build/NutShell.fir.opt.mlir 49605:7]
    node _T_79 = and(metaHitWriteBus.req.valid, metaRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49607:16]
    node _T_80 = eq(_T_79, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49609:16]
    node _T_81 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49611:16]
    node _T_82 = eq(_T_81, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49613:16]
    when _T_82 : @[build/NutShell.fir.opt.mlir 49614:7]
      node _T_83 = eq(_T_80, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49616:18]
      when _T_83 : @[build/NutShell.fir.opt.mlir 49617:9]
        skip @[build/NutShell.fir.opt.mlir 49618:11]
      assert(clock, _T_80, UInt<1>(1), "") : assert_1 @[build/NutShell.fir.opt.mlir 49620:9]
    node _T_84 = and(dataHitWriteBus.req.valid, dataRefillWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49623:16]
    node _T_85 = eq(_T_84, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49625:16]
    node _T_86 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49627:16]
    node _T_87 = eq(_T_86, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49629:16]
    when _T_87 : @[build/NutShell.fir.opt.mlir 49630:7]
      node _T_88 = eq(_T_85, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49632:18]
      when _T_88 : @[build/NutShell.fir.opt.mlir 49633:9]
        skip @[build/NutShell.fir.opt.mlir 49634:11]
      assert(clock, _T_85, UInt<1>(1), "") : assert_2 @[build/NutShell.fir.opt.mlir 49636:9]
    node _T_89 = eq(UInt<1>(0), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49639:16]
    node _T_90 = and(_T_89, io.flush) @[build/NutShell.fir.opt.mlir 49641:16]
    node _T_91 = eq(_T_90, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49643:16]
    node _T_92 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49645:16]
    node _T_93 = eq(_T_92, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49647:16]
    when _T_93 : @[build/NutShell.fir.opt.mlir 49648:7]
      node _T_94 = eq(_T_91, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49650:18]
      when _T_94 : @[build/NutShell.fir.opt.mlir 49651:9]
        skip @[build/NutShell.fir.opt.mlir 49652:11]
      assert(clock, _T_91, UInt<1>(1), "") : assert_3 @[build/NutShell.fir.opt.mlir 49654:9]
    wire _WIRE : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49656:16]
    wire _WIRE_1 : UInt<32> @[build/NutShell.fir.opt.mlir 49661:18]
    connect _WIRE_1, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49662:7]
    node _T_95 = bits(_WIRE_1, 2, 0) @[build/NutShell.fir.opt.mlir 49664:16]
    connect _WIRE.byteOffset, _T_95 @[build/NutShell.fir.opt.mlir 49665:7]
    node _T_96 = bits(_WIRE_1, 5, 3) @[build/NutShell.fir.opt.mlir 49667:16]
    connect _WIRE.wordIndex, _T_96 @[build/NutShell.fir.opt.mlir 49668:7]
    node _T_97 = bits(_WIRE_1, 14, 6) @[build/NutShell.fir.opt.mlir 49670:16]
    connect _WIRE.index, _T_97 @[build/NutShell.fir.opt.mlir 49671:7]
    node _T_98 = bits(_WIRE_1, 31, 15) @[build/NutShell.fir.opt.mlir 49673:16]
    connect _WIRE.tag, _T_98 @[build/NutShell.fir.opt.mlir 49674:7]
    node lo = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 49676:13]
    node hi = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 49678:13]
    node _T_99 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 49680:16]
    inst LogPerfHelper of LogPerfHelper_44 @[build/NutShell.fir.opt.mlir 49681:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 49682:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 49687:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 49688:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 49689:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 49690:7]
    node _T_100 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49692:17]
    when _T_100 : @[build/NutShell.fir.opt.mlir 49693:7]
      node _T_101 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49695:19]
      node _T_102 = eq(_T_101, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49697:19]
      when _T_102 : @[build/NutShell.fir.opt.mlir 49698:9]
        skip @[build/NutShell.fir.opt.mlir 49699:11]
      node _T_103 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49702:19]
      node _T_104 = eq(_T_103, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49704:19]
      when _T_104 : @[build/NutShell.fir.opt.mlir 49705:9]
        skip @[build/NutShell.fir.opt.mlir 49706:11]
    node _T_105 = and(io.metaWriteBus.req.ready, io.metaWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49710:17]
    regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 49711:12]
    node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 49713:15]
    node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 49715:17]
    connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 49716:7]
    node _T_106 = and(_T_105, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49718:17]
    when _T_106 : @[build/NutShell.fir.opt.mlir 49719:7]
      node _T_107 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49721:19]
      node _T_108 = eq(_T_107, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49723:19]
      when _T_108 : @[build/NutShell.fir.opt.mlir 49724:9]
        skip @[build/NutShell.fir.opt.mlir 49725:11]
      node _T_109 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49728:19]
      node _T_110 = eq(_T_109, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49730:19]
      when _T_110 : @[build/NutShell.fir.opt.mlir 49731:9]
        skip @[build/NutShell.fir.opt.mlir 49732:11]
    node _T_111 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49736:17]
    when _T_111 : @[build/NutShell.fir.opt.mlir 49737:7]
      node _T_112 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49739:19]
      node _T_113 = eq(_T_112, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49741:19]
      when _T_113 : @[build/NutShell.fir.opt.mlir 49742:9]
        skip @[build/NutShell.fir.opt.mlir 49743:11]
      node _T_114 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49746:19]
      node _T_115 = eq(_T_114, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49748:19]
      when _T_115 : @[build/NutShell.fir.opt.mlir 49749:9]
        skip @[build/NutShell.fir.opt.mlir 49750:11]
    node _T_116 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49754:17]
    when _T_116 : @[build/NutShell.fir.opt.mlir 49755:7]
      node _T_117 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49757:19]
      node _T_118 = eq(_T_117, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49759:19]
      when _T_118 : @[build/NutShell.fir.opt.mlir 49760:9]
        skip @[build/NutShell.fir.opt.mlir 49761:11]
      node _T_119 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49764:19]
      node _T_120 = eq(_T_119, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49766:19]
      when _T_120 : @[build/NutShell.fir.opt.mlir 49767:9]
        skip @[build/NutShell.fir.opt.mlir 49768:11]
    node _T_121 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49772:17]
    when _T_121 : @[build/NutShell.fir.opt.mlir 49773:7]
      node _T_122 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49775:19]
      node _T_123 = eq(_T_122, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49777:19]
      when _T_123 : @[build/NutShell.fir.opt.mlir 49778:9]
        skip @[build/NutShell.fir.opt.mlir 49779:11]
      node _T_124 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49782:19]
      node _T_125 = eq(_T_124, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49784:19]
      when _T_125 : @[build/NutShell.fir.opt.mlir 49785:9]
        skip @[build/NutShell.fir.opt.mlir 49786:11]
    node lo_1 = cat(io.in.bits.datas[1].data, io.in.bits.datas[0].data) @[build/NutShell.fir.opt.mlir 49790:15]
    node hi_1 = cat(io.in.bits.datas[3].data, io.in.bits.datas[2].data) @[build/NutShell.fir.opt.mlir 49792:15]
    node _T_126 = cat(hi_1, lo_1) @[build/NutShell.fir.opt.mlir 49794:17]
    node _T_127 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49796:17]
    when _T_127 : @[build/NutShell.fir.opt.mlir 49797:7]
      node _T_128 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49799:19]
      node _T_129 = eq(_T_128, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49801:19]
      when _T_129 : @[build/NutShell.fir.opt.mlir 49802:9]
        skip @[build/NutShell.fir.opt.mlir 49803:11]
      node _T_130 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49806:19]
      node _T_131 = eq(_T_130, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49808:19]
      when _T_131 : @[build/NutShell.fir.opt.mlir 49809:9]
        skip @[build/NutShell.fir.opt.mlir 49810:11]
    node _T_132 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 49814:17]
    when _T_132 : @[build/NutShell.fir.opt.mlir 49815:7]
      node _T_133 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49817:19]
      node _T_134 = eq(_T_133, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49819:19]
      when _T_134 : @[build/NutShell.fir.opt.mlir 49820:9]
        skip @[build/NutShell.fir.opt.mlir 49821:11]
      node _T_135 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49824:19]
      node _T_136 = eq(_T_135, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49826:19]
      when _T_136 : @[build/NutShell.fir.opt.mlir 49827:9]
        skip @[build/NutShell.fir.opt.mlir 49828:11]
    node _T_137 = and(io.dataWriteBus.req.ready, io.dataWriteBus.req.valid) @[build/NutShell.fir.opt.mlir 49832:17]
    node _T_138 = and(_T_137, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49834:17]
    when _T_138 : @[build/NutShell.fir.opt.mlir 49835:7]
      node _T_139 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49837:19]
      node _T_140 = eq(_T_139, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49839:19]
      when _T_140 : @[build/NutShell.fir.opt.mlir 49840:9]
        skip @[build/NutShell.fir.opt.mlir 49841:11]
      node _T_141 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49844:19]
      node _T_142 = eq(_T_141, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49846:19]
      when _T_142 : @[build/NutShell.fir.opt.mlir 49847:9]
        skip @[build/NutShell.fir.opt.mlir 49848:11]
    node _T_143 = eq(state, UInt<4>(3)) @[build/NutShell.fir.opt.mlir 49852:17]
    node _T_144 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49854:17]
    node _T_145 = and(_T_143, _T_144) @[build/NutShell.fir.opt.mlir 49856:17]
    wire _WIRE_2 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49857:18]
    wire _WIRE_3 : UInt<32> @[build/NutShell.fir.opt.mlir 49862:18]
    connect _WIRE_3, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49863:7]
    node _T_146 = bits(_WIRE_3, 2, 0) @[build/NutShell.fir.opt.mlir 49865:17]
    connect _WIRE_2.byteOffset, _T_146 @[build/NutShell.fir.opt.mlir 49866:7]
    node _T_147 = bits(_WIRE_3, 5, 3) @[build/NutShell.fir.opt.mlir 49868:17]
    connect _WIRE_2.wordIndex, _T_147 @[build/NutShell.fir.opt.mlir 49869:7]
    node _T_148 = bits(_WIRE_3, 14, 6) @[build/NutShell.fir.opt.mlir 49871:17]
    connect _WIRE_2.index, _T_148 @[build/NutShell.fir.opt.mlir 49872:7]
    node _T_149 = bits(_WIRE_3, 31, 15) @[build/NutShell.fir.opt.mlir 49874:17]
    connect _WIRE_2.tag, _T_149 @[build/NutShell.fir.opt.mlir 49875:7]
    node _T_150 = and(_T_145, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49877:17]
    when _T_150 : @[build/NutShell.fir.opt.mlir 49878:7]
      node _T_151 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49880:19]
      node _T_152 = eq(_T_151, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49882:19]
      when _T_152 : @[build/NutShell.fir.opt.mlir 49883:9]
        skip @[build/NutShell.fir.opt.mlir 49884:11]
      node _T_153 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49887:19]
      node _T_154 = eq(_T_153, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49889:19]
      when _T_154 : @[build/NutShell.fir.opt.mlir 49890:9]
        skip @[build/NutShell.fir.opt.mlir 49891:11]
    node _T_155 = eq(state, UInt<4>(1)) @[build/NutShell.fir.opt.mlir 49895:17]
    node _T_156 = and(io.mem.req.ready, io.mem.req.valid) @[build/NutShell.fir.opt.mlir 49897:17]
    node _T_157 = and(_T_155, _T_156) @[build/NutShell.fir.opt.mlir 49899:17]
    wire _WIRE_4 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49900:18]
    wire _WIRE_5 : UInt<32> @[build/NutShell.fir.opt.mlir 49905:18]
    connect _WIRE_5, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49906:7]
    node _T_158 = bits(_WIRE_5, 2, 0) @[build/NutShell.fir.opt.mlir 49908:17]
    connect _WIRE_4.byteOffset, _T_158 @[build/NutShell.fir.opt.mlir 49909:7]
    node _T_159 = bits(_WIRE_5, 5, 3) @[build/NutShell.fir.opt.mlir 49911:17]
    connect _WIRE_4.wordIndex, _T_159 @[build/NutShell.fir.opt.mlir 49912:7]
    node _T_160 = bits(_WIRE_5, 14, 6) @[build/NutShell.fir.opt.mlir 49914:17]
    connect _WIRE_4.index, _T_160 @[build/NutShell.fir.opt.mlir 49915:7]
    node _T_161 = bits(_WIRE_5, 31, 15) @[build/NutShell.fir.opt.mlir 49917:17]
    connect _WIRE_4.tag, _T_161 @[build/NutShell.fir.opt.mlir 49918:7]
    node _T_162 = and(_T_157, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49920:17]
    when _T_162 : @[build/NutShell.fir.opt.mlir 49921:7]
      node _T_163 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49923:19]
      node _T_164 = eq(_T_163, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49925:19]
      when _T_164 : @[build/NutShell.fir.opt.mlir 49926:9]
        skip @[build/NutShell.fir.opt.mlir 49927:11]
      node _T_165 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49930:19]
      node _T_166 = eq(_T_165, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49932:19]
      when _T_166 : @[build/NutShell.fir.opt.mlir 49933:9]
        skip @[build/NutShell.fir.opt.mlir 49934:11]
    node _T_167 = eq(state, UInt<4>(2)) @[build/NutShell.fir.opt.mlir 49938:17]
    node _T_168 = and(io.mem.resp.ready, io.mem.resp.valid) @[build/NutShell.fir.opt.mlir 49940:17]
    node _T_169 = and(_T_167, _T_168) @[build/NutShell.fir.opt.mlir 49942:17]
    wire _WIRE_6 : { tag : UInt<17>, index : UInt<9>, wordIndex : UInt<3>, byteOffset : UInt<3> } @[build/NutShell.fir.opt.mlir 49943:18]
    wire _WIRE_7 : UInt<32> @[build/NutShell.fir.opt.mlir 49948:18]
    connect _WIRE_7, io.in.bits.req.addr @[build/NutShell.fir.opt.mlir 49949:7]
    node _T_170 = bits(_WIRE_7, 2, 0) @[build/NutShell.fir.opt.mlir 49951:17]
    connect _WIRE_6.byteOffset, _T_170 @[build/NutShell.fir.opt.mlir 49952:7]
    node _T_171 = bits(_WIRE_7, 5, 3) @[build/NutShell.fir.opt.mlir 49954:17]
    connect _WIRE_6.wordIndex, _T_171 @[build/NutShell.fir.opt.mlir 49955:7]
    node _T_172 = bits(_WIRE_7, 14, 6) @[build/NutShell.fir.opt.mlir 49957:17]
    connect _WIRE_6.index, _T_172 @[build/NutShell.fir.opt.mlir 49958:7]
    node _T_173 = bits(_WIRE_7, 31, 15) @[build/NutShell.fir.opt.mlir 49960:17]
    connect _WIRE_6.tag, _T_173 @[build/NutShell.fir.opt.mlir 49961:7]
    node _T_174 = and(_T_169, c_control.logEnable) @[build/NutShell.fir.opt.mlir 49963:17]
    when _T_174 : @[build/NutShell.fir.opt.mlir 49964:7]
      node _T_175 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49966:19]
      node _T_176 = eq(_T_175, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49968:19]
      when _T_176 : @[build/NutShell.fir.opt.mlir 49969:9]
        skip @[build/NutShell.fir.opt.mlir 49970:11]
      node _T_177 = asUInt(reset) @[build/NutShell.fir.opt.mlir 49973:19]
      node _T_178 = eq(_T_177, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 49975:19]
      when _T_178 : @[build/NutShell.fir.opt.mlir 49976:9]
        skip @[build/NutShell.fir.opt.mlir 49977:11]

  module SRAMTemplate_5 : @[build/NutShell.fir.opt.mlir 49981:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 49981:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 49981:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 49981:99]

    mem array : @[build/NutShell.fir.opt.mlir 50007:42]
      data-type => UInt<19>[4]
      depth => 512
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 50009:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50011:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 50013:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 50015:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 50017:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 50019:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50021:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 50023:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 50037:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50040:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 50041:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50042:7]
    regreset _resetState : UInt<1>, clock, reset, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50044:22]
    regreset _resetSet : UInt<9>, clock, reset, UInt<9>(0) @[build/NutShell.fir.opt.mlir 50046:20]
    wire resetFinish : UInt<1> @[build/NutShell.fir.opt.mlir 50047:22]
    connect resetFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50049:7]
    when _resetState : @[build/NutShell.fir.opt.mlir 50051:7]
      node wrap_wrap = eq(_resetSet, UInt<9>(511)) @[build/NutShell.fir.opt.mlir 50053:22]
      node _wrap_value_T = add(_resetSet, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 50055:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 50057:28]
      connect _resetSet, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 50058:9]
      connect resetFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 50059:9]
    when resetFinish : @[build/NutShell.fir.opt.mlir 50061:7]
      connect _resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50063:9]
    connect resetState, _resetState @[build/NutShell.fir.opt.mlir 50065:7]
    connect resetSet, _resetSet @[build/NutShell.fir.opt.mlir 50066:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 50068:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50070:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 50072:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 50074:17]
    wire _wdataword_WIRE : UInt<19> @[build/NutShell.fir.opt.mlir 50075:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 19) @[build/NutShell.fir.opt.mlir 50078:7]
    node wdataword_hi = cat(io.w.req.bits.data.tag, io.w.req.bits.data.valid) @[build/NutShell.fir.opt.mlir 50080:23]
    node _wdataword_T = cat(wdataword_hi, io.w.req.bits.data.dirty) @[build/NutShell.fir.opt.mlir 50082:23]
    node wdataword = mux(resetState, _wdataword_WIRE, _wdataword_T) @[build/NutShell.fir.opt.mlir 50084:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 50088:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 50090:18]
    wire wdata : UInt<19>[4] @[build/NutShell.fir.opt.mlir 50091:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 50096:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 50097:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 50098:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 50099:7]
    when wen : @[build/NutShell.fir.opt.mlir 50100:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 50102:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 50104:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 50106:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 50108:17]
      node _T_4 = or(setIdx, UInt<9>(0)) @[build/NutShell.fir.opt.mlir 50110:17]
      node _T_5 = bits(_T_4, 8, 0) @[build/NutShell.fir.opt.mlir 50112:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 50113:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50114:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50115:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50117:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50119:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50121:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50123:9]
      when _T : @[build/NutShell.fir.opt.mlir 50124:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50125:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 50126:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 50128:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50129:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 50130:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 50132:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50133:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 50134:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 50136:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50137:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 50138:11]
    wire _rdata_WIRE : UInt<9> @[build/NutShell.fir.opt.mlir 50141:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 50143:7]
    when realRen : @[build/NutShell.fir.opt.mlir 50144:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50145:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 50146:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 50147:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50148:9]
    wire rdata_0 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50150:18]
    wire _rdata_WIRE_1 : UInt<19> @[build/NutShell.fir.opt.mlir 50154:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 50155:7]
    node _rdata_T = bits(_rdata_WIRE_1, 0, 0) @[build/NutShell.fir.opt.mlir 50157:19]
    connect rdata_0.dirty, _rdata_T @[build/NutShell.fir.opt.mlir 50158:7]
    node _rdata_T_1 = bits(_rdata_WIRE_1, 1, 1) @[build/NutShell.fir.opt.mlir 50160:21]
    connect rdata_0.valid, _rdata_T_1 @[build/NutShell.fir.opt.mlir 50161:7]
    node _rdata_T_2 = bits(_rdata_WIRE_1, 18, 2) @[build/NutShell.fir.opt.mlir 50163:21]
    connect rdata_0.tag, _rdata_T_2 @[build/NutShell.fir.opt.mlir 50164:7]
    wire rdata_1 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50165:18]
    wire _rdata_WIRE_2 : UInt<19> @[build/NutShell.fir.opt.mlir 50169:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 50170:7]
    node _rdata_T_3 = bits(_rdata_WIRE_2, 0, 0) @[build/NutShell.fir.opt.mlir 50172:21]
    connect rdata_1.dirty, _rdata_T_3 @[build/NutShell.fir.opt.mlir 50173:7]
    node _rdata_T_4 = bits(_rdata_WIRE_2, 1, 1) @[build/NutShell.fir.opt.mlir 50175:21]
    connect rdata_1.valid, _rdata_T_4 @[build/NutShell.fir.opt.mlir 50176:7]
    node _rdata_T_5 = bits(_rdata_WIRE_2, 18, 2) @[build/NutShell.fir.opt.mlir 50178:21]
    connect rdata_1.tag, _rdata_T_5 @[build/NutShell.fir.opt.mlir 50179:7]
    wire rdata_2 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50180:18]
    wire _rdata_WIRE_3 : UInt<19> @[build/NutShell.fir.opt.mlir 50184:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 50185:7]
    node _rdata_T_6 = bits(_rdata_WIRE_3, 0, 0) @[build/NutShell.fir.opt.mlir 50187:21]
    connect rdata_2.dirty, _rdata_T_6 @[build/NutShell.fir.opt.mlir 50188:7]
    node _rdata_T_7 = bits(_rdata_WIRE_3, 1, 1) @[build/NutShell.fir.opt.mlir 50190:21]
    connect rdata_2.valid, _rdata_T_7 @[build/NutShell.fir.opt.mlir 50191:7]
    node _rdata_T_8 = bits(_rdata_WIRE_3, 18, 2) @[build/NutShell.fir.opt.mlir 50193:21]
    connect rdata_2.tag, _rdata_T_8 @[build/NutShell.fir.opt.mlir 50194:7]
    wire rdata_3 : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> } @[build/NutShell.fir.opt.mlir 50195:18]
    wire _rdata_WIRE_4 : UInt<19> @[build/NutShell.fir.opt.mlir 50199:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 50200:7]
    node _rdata_T_9 = bits(_rdata_WIRE_4, 0, 0) @[build/NutShell.fir.opt.mlir 50202:21]
    connect rdata_3.dirty, _rdata_T_9 @[build/NutShell.fir.opt.mlir 50203:7]
    node _rdata_T_10 = bits(_rdata_WIRE_4, 1, 1) @[build/NutShell.fir.opt.mlir 50205:22]
    connect rdata_3.valid, _rdata_T_10 @[build/NutShell.fir.opt.mlir 50206:7]
    node _rdata_T_11 = bits(_rdata_WIRE_4, 18, 2) @[build/NutShell.fir.opt.mlir 50208:22]
    connect rdata_3.tag, _rdata_T_11 @[build/NutShell.fir.opt.mlir 50209:7]
    wire _WIRE : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 50210:16]
    connect _WIRE[0].dirty, rdata_0.dirty @[build/NutShell.fir.opt.mlir 50227:7]
    connect _WIRE[0].valid, rdata_0.valid @[build/NutShell.fir.opt.mlir 50228:7]
    connect _WIRE[0].tag, rdata_0.tag @[build/NutShell.fir.opt.mlir 50229:7]
    connect _WIRE[1].dirty, rdata_1.dirty @[build/NutShell.fir.opt.mlir 50230:7]
    connect _WIRE[1].valid, rdata_1.valid @[build/NutShell.fir.opt.mlir 50231:7]
    connect _WIRE[1].tag, rdata_1.tag @[build/NutShell.fir.opt.mlir 50232:7]
    connect _WIRE[2].dirty, rdata_2.dirty @[build/NutShell.fir.opt.mlir 50233:7]
    connect _WIRE[2].valid, rdata_2.valid @[build/NutShell.fir.opt.mlir 50234:7]
    connect _WIRE[2].tag, rdata_2.tag @[build/NutShell.fir.opt.mlir 50235:7]
    connect _WIRE[3].dirty, rdata_3.dirty @[build/NutShell.fir.opt.mlir 50236:7]
    connect _WIRE[3].valid, rdata_3.valid @[build/NutShell.fir.opt.mlir 50237:7]
    connect _WIRE[3].tag, rdata_3.tag @[build/NutShell.fir.opt.mlir 50238:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 50239:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50241:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50243:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 50245:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 50246:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50248:7]

  module Arbiter1_SRAMBundleA_2 : @[build/NutShell.fir.opt.mlir 50250:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50250:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50250:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }[1], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, chosen : UInt<0> } @[build/NutShell.fir.opt.mlir 50250:107]

    connect io.chosen, tail(UInt<1>(0), 1) @[build/NutShell.fir.opt.mlir 50264:7]
    connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50265:7]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50268:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50269:7]
    node _io_out_valid_T = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50271:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[0].valid) @[build/NutShell.fir.opt.mlir 50273:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50274:7]

  module SRAMTemplateWithArbiter_4 : @[build/NutShell.fir.opt.mlir 50276:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50276:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50276:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9> } }, flip resp : { data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] } }[1], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<9>, data : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50276:110]

    inst ram of SRAMTemplate_5 @[build/NutShell.fir.opt.mlir 50290:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 50303:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 50304:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 50305:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 50306:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 50307:7]
    inst readArb of Arbiter1_SRAMBundleA_2 @[build/NutShell.fir.opt.mlir 50308:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 50318:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 50319:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 50320:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 50321:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 50322:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 50323:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 50324:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 50325:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 50327:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50328:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 50329:7]
    wire _WIRE : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4] @[build/NutShell.fir.opt.mlir 50330:16]
    connect _WIRE[0].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50349:7]
    connect _WIRE[0].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50351:7]
    connect _WIRE[0].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50354:7]
    connect _WIRE[1].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50356:7]
    connect _WIRE[1].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50358:7]
    connect _WIRE[1].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50360:7]
    connect _WIRE[2].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50362:7]
    connect _WIRE[2].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50364:7]
    connect _WIRE[2].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50366:7]
    connect _WIRE[3].dirty, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50368:7]
    connect _WIRE[3].valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50370:7]
    connect _WIRE[3].tag, UInt<17>(0) @[build/NutShell.fir.opt.mlir 50372:7]
    regreset r : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 50373:12]
    when REG : @[build/NutShell.fir.opt.mlir 50374:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50375:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 50378:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 50379:7]

  module SRAMTemplate_6 : @[build/NutShell.fir.opt.mlir 50381:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50381:46]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50381:72]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }, flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50381:99]

    mem array : @[build/NutShell.fir.opt.mlir 50405:42]
      data-type => UInt<64>[4]
      depth => 4096
      read-latency => 1
      write-latency => 1
      reader => rdata_MPORT
      writer => MPORT
      read-under-write => undefined
    invalidate array.MPORT.addr @[build/NutShell.fir.opt.mlir 50407:7]
    connect array.MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50409:7]
    invalidate array.MPORT.clk @[build/NutShell.fir.opt.mlir 50411:7]
    invalidate array.MPORT.data @[build/NutShell.fir.opt.mlir 50413:7]
    invalidate array.MPORT.mask @[build/NutShell.fir.opt.mlir 50415:7]
    invalidate array.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 50417:7]
    connect array.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50419:7]
    invalidate array.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 50421:7]
    wire resetState : UInt<1> @[build/NutShell.fir.opt.mlir 50435:21]
    connect resetState, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50438:7]
    wire resetSet : UInt @[build/NutShell.fir.opt.mlir 50439:19]
    connect resetSet, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50440:7]
    node wen = or(io.w.req.valid, resetState) @[build/NutShell.fir.opt.mlir 50442:14]
    node _realRen_T = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50444:21]
    node realRen = and(io.r.req.valid, _realRen_T) @[build/NutShell.fir.opt.mlir 50446:18]
    node setIdx = mux(resetState, resetSet, io.w.req.bits.setIdx) @[build/NutShell.fir.opt.mlir 50448:17]
    wire _wdataword_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 50449:26]
    connect _wdataword_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 50452:7]
    node wdataword = mux(resetState, _wdataword_WIRE, io.w.req.bits.data.data) @[build/NutShell.fir.opt.mlir 50454:20]
    node _waymask_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 50459:21]
    node waymask = mux(resetState, _waymask_T, io.w.req.bits.waymask) @[build/NutShell.fir.opt.mlir 50461:18]
    wire wdata : UInt<64>[4] @[build/NutShell.fir.opt.mlir 50462:16]
    connect wdata[0], wdataword @[build/NutShell.fir.opt.mlir 50467:7]
    connect wdata[1], wdataword @[build/NutShell.fir.opt.mlir 50468:7]
    connect wdata[2], wdataword @[build/NutShell.fir.opt.mlir 50469:7]
    connect wdata[3], wdataword @[build/NutShell.fir.opt.mlir 50470:7]
    when wen : @[build/NutShell.fir.opt.mlir 50472:7]
      node _T = bits(waymask, 0, 0) @[build/NutShell.fir.opt.mlir 50474:15]
      node _T_1 = bits(waymask, 1, 1) @[build/NutShell.fir.opt.mlir 50476:17]
      node _T_2 = bits(waymask, 2, 2) @[build/NutShell.fir.opt.mlir 50478:17]
      node _T_3 = bits(waymask, 3, 3) @[build/NutShell.fir.opt.mlir 50480:17]
      node _T_4 = or(setIdx, UInt<12>(0)) @[build/NutShell.fir.opt.mlir 50482:17]
      node _T_5 = bits(_T_4, 11, 0) @[build/NutShell.fir.opt.mlir 50484:17]
      connect array.MPORT.addr, _T_5 @[build/NutShell.fir.opt.mlir 50485:9]
      connect array.MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50486:9]
      connect array.MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50487:9]
      connect array.MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50489:9]
      connect array.MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50491:9]
      connect array.MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50493:9]
      connect array.MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 50495:9]
      when _T : @[build/NutShell.fir.opt.mlir 50496:9]
        connect array.MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50497:11]
        connect array.MPORT.data[0], wdata[0] @[build/NutShell.fir.opt.mlir 50498:11]
      when _T_1 : @[build/NutShell.fir.opt.mlir 50500:9]
        connect array.MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50501:11]
        connect array.MPORT.data[1], wdata[1] @[build/NutShell.fir.opt.mlir 50502:11]
      when _T_2 : @[build/NutShell.fir.opt.mlir 50504:9]
        connect array.MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50505:11]
        connect array.MPORT.data[2], wdata[2] @[build/NutShell.fir.opt.mlir 50506:11]
      when _T_3 : @[build/NutShell.fir.opt.mlir 50508:9]
        connect array.MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 50509:11]
        connect array.MPORT.data[3], wdata[3] @[build/NutShell.fir.opt.mlir 50510:11]
    wire _rdata_WIRE : UInt<12> @[build/NutShell.fir.opt.mlir 50513:22]
    invalidate _rdata_WIRE @[build/NutShell.fir.opt.mlir 50515:7]
    when realRen : @[build/NutShell.fir.opt.mlir 50516:7]
      connect array.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50517:9]
      connect _rdata_WIRE, io.r.req.bits.setIdx @[build/NutShell.fir.opt.mlir 50518:9]
      connect array.rdata_MPORT.addr, _rdata_WIRE @[build/NutShell.fir.opt.mlir 50519:9]
      connect array.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 50520:9]
    wire rdata_0 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50522:18]
    wire _rdata_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 50524:24]
    connect _rdata_WIRE_1, array.rdata_MPORT.data[0] @[build/NutShell.fir.opt.mlir 50525:7]
    node _rdata_T = bits(_rdata_WIRE_1, 63, 0) @[build/NutShell.fir.opt.mlir 50527:19]
    connect rdata_0.data, _rdata_T @[build/NutShell.fir.opt.mlir 50528:7]
    wire rdata_1 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50529:18]
    wire _rdata_WIRE_2 : UInt<64> @[build/NutShell.fir.opt.mlir 50531:24]
    connect _rdata_WIRE_2, array.rdata_MPORT.data[1] @[build/NutShell.fir.opt.mlir 50532:7]
    node _rdata_T_1 = bits(_rdata_WIRE_2, 63, 0) @[build/NutShell.fir.opt.mlir 50534:21]
    connect rdata_1.data, _rdata_T_1 @[build/NutShell.fir.opt.mlir 50535:7]
    wire rdata_2 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50536:18]
    wire _rdata_WIRE_3 : UInt<64> @[build/NutShell.fir.opt.mlir 50538:24]
    connect _rdata_WIRE_3, array.rdata_MPORT.data[2] @[build/NutShell.fir.opt.mlir 50539:7]
    node _rdata_T_2 = bits(_rdata_WIRE_3, 63, 0) @[build/NutShell.fir.opt.mlir 50541:21]
    connect rdata_2.data, _rdata_T_2 @[build/NutShell.fir.opt.mlir 50542:7]
    wire rdata_3 : { data : UInt<64> } @[build/NutShell.fir.opt.mlir 50543:18]
    wire _rdata_WIRE_4 : UInt<64> @[build/NutShell.fir.opt.mlir 50545:24]
    connect _rdata_WIRE_4, array.rdata_MPORT.data[3] @[build/NutShell.fir.opt.mlir 50546:7]
    node _rdata_T_3 = bits(_rdata_WIRE_4, 63, 0) @[build/NutShell.fir.opt.mlir 50548:21]
    connect rdata_3.data, _rdata_T_3 @[build/NutShell.fir.opt.mlir 50549:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50550:16]
    connect _WIRE[0].data, rdata_0.data @[build/NutShell.fir.opt.mlir 50559:7]
    connect _WIRE[1].data, rdata_1.data @[build/NutShell.fir.opt.mlir 50560:7]
    connect _WIRE[2].data, rdata_2.data @[build/NutShell.fir.opt.mlir 50561:7]
    connect _WIRE[3].data, rdata_3.data @[build/NutShell.fir.opt.mlir 50562:7]
    connect io.r.resp.data, _WIRE @[build/NutShell.fir.opt.mlir 50563:7]
    node _io_r_req_ready_T = eq(resetState, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50565:28]
    node _io_r_req_ready_T_1 = eq(wen, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50567:30]
    node _io_r_req_ready_T_2 = and(_io_r_req_ready_T, _io_r_req_ready_T_1) @[build/NutShell.fir.opt.mlir 50569:30]
    connect io.r.req.ready, _io_r_req_ready_T_2 @[build/NutShell.fir.opt.mlir 50570:7]
    connect io.w.req.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50572:7]

  module Arbiter2_SRAMBundleA_2 : @[build/NutShell.fir.opt.mlir 50574:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50574:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50574:80]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 50574:107]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50591:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 50592:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 50594:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50596:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50597:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50600:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50602:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50603:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 50605:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 50606:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50608:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 50610:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50611:7]

  module SRAMTemplateWithArbiter_5 : @[build/NutShell.fir.opt.mlir 50613:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50613:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50613:83]
    output io : { flip r : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12> } }, flip resp : { data : { data : UInt<64> }[4] } }[2], flip w : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } } } } @[build/NutShell.fir.opt.mlir 50613:110]

    inst ram of SRAMTemplate_6 @[build/NutShell.fir.opt.mlir 50634:41]
    connect ram.clock, clock @[build/NutShell.fir.opt.mlir 50647:7]
    connect ram.reset, reset @[build/NutShell.fir.opt.mlir 50648:7]
    connect io.w.req.ready, ram.io.w.req.ready @[build/NutShell.fir.opt.mlir 50649:7]
    connect ram.io.w.req.valid, io.w.req.valid @[build/NutShell.fir.opt.mlir 50650:7]
    connect ram.io.w.req.bits, io.w.req.bits @[build/NutShell.fir.opt.mlir 50651:7]
    inst readArb of Arbiter2_SRAMBundleA_2 @[build/NutShell.fir.opt.mlir 50652:53]
    connect readArb.clock, clock @[build/NutShell.fir.opt.mlir 50666:7]
    connect readArb.reset, reset @[build/NutShell.fir.opt.mlir 50667:7]
    connect io.r[0].req.ready, readArb.io.in[0].ready @[build/NutShell.fir.opt.mlir 50668:7]
    connect readArb.io.in[0].valid, io.r[0].req.valid @[build/NutShell.fir.opt.mlir 50669:7]
    connect readArb.io.in[0].bits, io.r[0].req.bits @[build/NutShell.fir.opt.mlir 50670:7]
    connect io.r[1].req.ready, readArb.io.in[1].ready @[build/NutShell.fir.opt.mlir 50671:7]
    connect readArb.io.in[1].valid, io.r[1].req.valid @[build/NutShell.fir.opt.mlir 50672:7]
    connect readArb.io.in[1].bits, io.r[1].req.bits @[build/NutShell.fir.opt.mlir 50673:7]
    connect readArb.io.out.ready, ram.io.r.req.ready @[build/NutShell.fir.opt.mlir 50674:7]
    connect ram.io.r.req.valid, readArb.io.out.valid @[build/NutShell.fir.opt.mlir 50675:7]
    connect ram.io.r.req.bits, readArb.io.out.bits @[build/NutShell.fir.opt.mlir 50676:7]
    node _T = and(io.r[0].req.ready, io.r[0].req.valid) @[build/NutShell.fir.opt.mlir 50678:13]
    reg REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50679:14]
    connect REG, _T @[build/NutShell.fir.opt.mlir 50680:7]
    wire _WIRE : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50681:16]
    connect _WIRE[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50692:7]
    connect _WIRE[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50694:7]
    connect _WIRE[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50696:7]
    connect _WIRE[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50698:7]
    regreset r : { data : UInt<64> }[4], clock, reset, _WIRE @[build/NutShell.fir.opt.mlir 50699:12]
    when REG : @[build/NutShell.fir.opt.mlir 50700:7]
      connect r, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50701:9]
    node _T_1 = mux(REG, ram.io.r.resp.data, r) @[build/NutShell.fir.opt.mlir 50704:15]
    connect io.r[0].resp.data, _T_1 @[build/NutShell.fir.opt.mlir 50705:7]
    node _T_2 = and(io.r[1].req.ready, io.r[1].req.valid) @[build/NutShell.fir.opt.mlir 50707:15]
    reg REG_1 : UInt<1>, clock @[build/NutShell.fir.opt.mlir 50708:16]
    connect REG_1, _T_2 @[build/NutShell.fir.opt.mlir 50709:7]
    wire _WIRE_1 : { data : UInt<64> }[4] @[build/NutShell.fir.opt.mlir 50710:18]
    connect _WIRE_1[0].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50720:7]
    connect _WIRE_1[1].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50722:7]
    connect _WIRE_1[2].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50724:7]
    connect _WIRE_1[3].data, UInt<64>(0) @[build/NutShell.fir.opt.mlir 50726:7]
    regreset r_1 : { data : UInt<64> }[4], clock, reset, _WIRE_1 @[build/NutShell.fir.opt.mlir 50727:14]
    when REG_1 : @[build/NutShell.fir.opt.mlir 50728:7]
      connect r_1, ram.io.r.resp.data @[build/NutShell.fir.opt.mlir 50729:9]
    node _T_3 = mux(REG_1, ram.io.r.resp.data, r_1) @[build/NutShell.fir.opt.mlir 50732:15]
    connect io.r[1].resp.data, _T_3 @[build/NutShell.fir.opt.mlir 50733:7]

  module Arbiter2_SimpleBusReqBundle_1 : @[build/NutShell.fir.opt.mlir 50735:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50735:61]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50735:87]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }[2], out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, chosen : UInt<1> } @[build/NutShell.fir.opt.mlir 50735:114]

    connect io.chosen, UInt<1>(1) @[build/NutShell.fir.opt.mlir 50752:7]
    connect io.out.bits, io.in[1].bits @[build/NutShell.fir.opt.mlir 50753:7]
    when io.in[0].valid : @[build/NutShell.fir.opt.mlir 50755:7]
      connect io.chosen, UInt<1>(0) @[build/NutShell.fir.opt.mlir 50757:9]
      connect io.out.bits, io.in[0].bits @[build/NutShell.fir.opt.mlir 50758:9]
    node grant_1 = eq(io.in[0].valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50761:18]
    node _io_in_0_ready_T = and(UInt<1>(1), io.out.ready) @[build/NutShell.fir.opt.mlir 50763:27]
    connect io.in[0].ready, _io_in_0_ready_T @[build/NutShell.fir.opt.mlir 50764:7]
    node _io_in_1_ready_T = and(grant_1, io.out.ready) @[build/NutShell.fir.opt.mlir 50766:27]
    connect io.in[1].ready, _io_in_1_ready_T @[build/NutShell.fir.opt.mlir 50767:7]
    node _io_out_valid_T = eq(grant_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 50769:26]
    node _io_out_valid_T_1 = or(_io_out_valid_T, io.in[1].valid) @[build/NutShell.fir.opt.mlir 50771:28]
    connect io.out.valid, _io_out_valid_T_1 @[build/NutShell.fir.opt.mlir 50772:7]

  extmodule LogPerfHelper_45 : @[build/NutShell.fir.opt.mlir 50774:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 50774:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 50774:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 50774:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 50774:141]
    defname = LogPerfHelper

  module Cache_2 : @[build/NutShell.fir.opt.mlir 50775:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 50775:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 50775:65]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip flush : UInt<2>, out : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, empty : UInt<1> } @[build/NutShell.fir.opt.mlir 50775:92]

    inst s1 of CacheStage1_2 @[build/NutShell.fir.opt.mlir 50820:38]
    connect s1.clock, clock @[build/NutShell.fir.opt.mlir 50867:7]
    connect s1.reset, reset @[build/NutShell.fir.opt.mlir 50868:7]
    inst s2 of CacheStage2_2 @[build/NutShell.fir.opt.mlir 50869:38]
    connect s2.clock, clock @[build/NutShell.fir.opt.mlir 50930:7]
    connect s2.reset, reset @[build/NutShell.fir.opt.mlir 50931:7]
    inst s3 of CacheStage3_2 @[build/NutShell.fir.opt.mlir 50932:38]
    connect s3.clock, clock @[build/NutShell.fir.opt.mlir 51034:7]
    connect s3.reset, reset @[build/NutShell.fir.opt.mlir 51035:7]
    inst metaArray of SRAMTemplateWithArbiter_4 @[build/NutShell.fir.opt.mlir 51036:59]
    connect metaArray.clock, clock @[build/NutShell.fir.opt.mlir 51049:7]
    connect metaArray.reset, reset @[build/NutShell.fir.opt.mlir 51050:7]
    inst dataArray of SRAMTemplateWithArbiter_5 @[build/NutShell.fir.opt.mlir 51051:59]
    connect dataArray.clock, clock @[build/NutShell.fir.opt.mlir 51070:7]
    connect dataArray.reset, reset @[build/NutShell.fir.opt.mlir 51071:7]
    inst arb of Arbiter2_SimpleBusReqBundle_1 @[build/NutShell.fir.opt.mlir 51072:41]
    connect arb.clock, clock @[build/NutShell.fir.opt.mlir 51091:7]
    connect arb.reset, reset @[build/NutShell.fir.opt.mlir 51092:7]
    connect io.in.req.ready, arb.io.in[1].ready @[build/NutShell.fir.opt.mlir 51093:7]
    connect arb.io.in[1].valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 51094:7]
    connect arb.io.in[1].bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51095:7]
    connect arb.io.out.ready, s1.io.in.ready @[build/NutShell.fir.opt.mlir 51096:7]
    connect s1.io.in.valid, arb.io.out.valid @[build/NutShell.fir.opt.mlir 51097:7]
    connect s1.io.in.bits, arb.io.out.bits @[build/NutShell.fir.opt.mlir 51098:7]
    node _T = and(s2.io.out.ready, s2.io.out.valid) @[build/NutShell.fir.opt.mlir 51100:13]
    node _T_1 = bits(io.flush, 0, 0) @[build/NutShell.fir.opt.mlir 51102:15]
    regreset valid : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51104:16]
    when _T : @[build/NutShell.fir.opt.mlir 51105:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51107:9]
    node _T_2 = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 51110:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 51112:7]
      connect valid, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51114:9]
    when _T_1 : @[build/NutShell.fir.opt.mlir 51116:7]
      connect valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51118:9]
    connect s1.io.out.ready, s2.io.in.ready @[build/NutShell.fir.opt.mlir 51120:7]
    node _s2_io_in_bits_T = and(s1.io.out.valid, s2.io.in.ready) @[build/NutShell.fir.opt.mlir 51122:27]
    reg s2_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, clock @[build/NutShell.fir.opt.mlir 51123:26]
    when _s2_io_in_bits_T : @[build/NutShell.fir.opt.mlir 51130:7]
      connect s2_io_in_bits_r, s1.io.out.bits @[build/NutShell.fir.opt.mlir 51131:9]
    connect s2.io.in.bits.req.wdata, s2_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 51133:7]
    connect s2.io.in.bits.req.wmask, s2_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 51134:7]
    connect s2.io.in.bits.req.cmd, s2_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 51135:7]
    connect s2.io.in.bits.req.size, s2_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 51136:7]
    connect s2.io.in.bits.req.addr, s2_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 51137:7]
    connect s2.io.in.valid, valid @[build/NutShell.fir.opt.mlir 51138:7]
    node _T_3 = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 51140:15]
    regreset valid_1 : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51141:18]
    when s3.io.isFinish : @[build/NutShell.fir.opt.mlir 51142:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51144:9]
    node _T_4 = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 51147:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 51148:7]
      connect valid_1, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51150:9]
    when _T_3 : @[build/NutShell.fir.opt.mlir 51152:7]
      connect valid_1, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51154:9]
    connect s2.io.out.ready, s3.io.in.ready @[build/NutShell.fir.opt.mlir 51156:7]
    node _s3_io_in_bits_T = and(s2.io.out.valid, s3.io.in.ready) @[build/NutShell.fir.opt.mlir 51158:27]
    reg s3_io_in_bits_r : { req : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> }, metas : { tag : UInt<17>, valid : UInt<1>, dirty : UInt<1> }[4], datas : { data : UInt<64> }[4], hit : UInt<1>, waymask : UInt<4>, mmio : UInt<1>, isForwardData : UInt<1>, forwardData : { setIdx : UInt<12>, data : { data : UInt<64> }, waymask : UInt<4> } }, clock @[build/NutShell.fir.opt.mlir 51159:26]
    when _s3_io_in_bits_T : @[build/NutShell.fir.opt.mlir 51201:7]
      connect s3_io_in_bits_r, s2.io.out.bits @[build/NutShell.fir.opt.mlir 51202:9]
    connect s3.io.in.bits.forwardData.waymask, s3_io_in_bits_r.forwardData.waymask @[build/NutShell.fir.opt.mlir 51204:7]
    connect s3.io.in.bits.forwardData.data.data, s3_io_in_bits_r.forwardData.data.data @[build/NutShell.fir.opt.mlir 51205:7]
    connect s3.io.in.bits.forwardData.setIdx, s3_io_in_bits_r.forwardData.setIdx @[build/NutShell.fir.opt.mlir 51206:7]
    connect s3.io.in.bits.isForwardData, s3_io_in_bits_r.isForwardData @[build/NutShell.fir.opt.mlir 51207:7]
    connect s3.io.in.bits.mmio, s3_io_in_bits_r.mmio @[build/NutShell.fir.opt.mlir 51208:7]
    connect s3.io.in.bits.waymask, s3_io_in_bits_r.waymask @[build/NutShell.fir.opt.mlir 51209:7]
    connect s3.io.in.bits.hit, s3_io_in_bits_r.hit @[build/NutShell.fir.opt.mlir 51210:7]
    connect s3.io.in.bits.datas[0].data, s3_io_in_bits_r.datas[0].data @[build/NutShell.fir.opt.mlir 51211:7]
    connect s3.io.in.bits.datas[1].data, s3_io_in_bits_r.datas[1].data @[build/NutShell.fir.opt.mlir 51212:7]
    connect s3.io.in.bits.datas[2].data, s3_io_in_bits_r.datas[2].data @[build/NutShell.fir.opt.mlir 51213:7]
    connect s3.io.in.bits.datas[3].data, s3_io_in_bits_r.datas[3].data @[build/NutShell.fir.opt.mlir 51214:7]
    connect s3.io.in.bits.metas[0].dirty, s3_io_in_bits_r.metas[0].dirty @[build/NutShell.fir.opt.mlir 51215:7]
    connect s3.io.in.bits.metas[0].valid, s3_io_in_bits_r.metas[0].valid @[build/NutShell.fir.opt.mlir 51216:7]
    connect s3.io.in.bits.metas[0].tag, s3_io_in_bits_r.metas[0].tag @[build/NutShell.fir.opt.mlir 51217:7]
    connect s3.io.in.bits.metas[1].dirty, s3_io_in_bits_r.metas[1].dirty @[build/NutShell.fir.opt.mlir 51218:7]
    connect s3.io.in.bits.metas[1].valid, s3_io_in_bits_r.metas[1].valid @[build/NutShell.fir.opt.mlir 51219:7]
    connect s3.io.in.bits.metas[1].tag, s3_io_in_bits_r.metas[1].tag @[build/NutShell.fir.opt.mlir 51220:7]
    connect s3.io.in.bits.metas[2].dirty, s3_io_in_bits_r.metas[2].dirty @[build/NutShell.fir.opt.mlir 51221:7]
    connect s3.io.in.bits.metas[2].valid, s3_io_in_bits_r.metas[2].valid @[build/NutShell.fir.opt.mlir 51222:7]
    connect s3.io.in.bits.metas[2].tag, s3_io_in_bits_r.metas[2].tag @[build/NutShell.fir.opt.mlir 51223:7]
    connect s3.io.in.bits.metas[3].dirty, s3_io_in_bits_r.metas[3].dirty @[build/NutShell.fir.opt.mlir 51224:7]
    connect s3.io.in.bits.metas[3].valid, s3_io_in_bits_r.metas[3].valid @[build/NutShell.fir.opt.mlir 51225:7]
    connect s3.io.in.bits.metas[3].tag, s3_io_in_bits_r.metas[3].tag @[build/NutShell.fir.opt.mlir 51226:7]
    connect s3.io.in.bits.req.wdata, s3_io_in_bits_r.req.wdata @[build/NutShell.fir.opt.mlir 51227:7]
    connect s3.io.in.bits.req.wmask, s3_io_in_bits_r.req.wmask @[build/NutShell.fir.opt.mlir 51228:7]
    connect s3.io.in.bits.req.cmd, s3_io_in_bits_r.req.cmd @[build/NutShell.fir.opt.mlir 51229:7]
    connect s3.io.in.bits.req.size, s3_io_in_bits_r.req.size @[build/NutShell.fir.opt.mlir 51230:7]
    connect s3.io.in.bits.req.addr, s3_io_in_bits_r.req.addr @[build/NutShell.fir.opt.mlir 51231:7]
    connect s3.io.in.valid, valid_1 @[build/NutShell.fir.opt.mlir 51232:7]
    connect io.in.resp.bits, s3.io.out.bits @[build/NutShell.fir.opt.mlir 51233:7]
    connect io.in.resp.valid, s3.io.out.valid @[build/NutShell.fir.opt.mlir 51234:7]
    connect s3.io.out.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51235:7]
    node _s3_io_flush_T = bits(io.flush, 1, 1) @[build/NutShell.fir.opt.mlir 51237:25]
    connect s3.io.flush, _s3_io_flush_T @[build/NutShell.fir.opt.mlir 51238:7]
    connect io.out.mem.resp.ready, s3.io.mem.resp.ready @[build/NutShell.fir.opt.mlir 51239:7]
    connect s3.io.mem.resp.valid, io.out.mem.resp.valid @[build/NutShell.fir.opt.mlir 51240:7]
    connect s3.io.mem.resp.bits, io.out.mem.resp.bits @[build/NutShell.fir.opt.mlir 51241:7]
    connect io.out.mem.req.bits, s3.io.mem.req.bits @[build/NutShell.fir.opt.mlir 51242:7]
    connect io.out.mem.req.valid, s3.io.mem.req.valid @[build/NutShell.fir.opt.mlir 51243:7]
    connect s3.io.mem.req.ready, io.out.mem.req.ready @[build/NutShell.fir.opt.mlir 51244:7]
    connect io.mmio.resp.ready, s3.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 51245:7]
    connect s3.io.mmio.resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 51246:7]
    connect s3.io.mmio.resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 51247:7]
    connect io.mmio.req.bits, s3.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 51248:7]
    connect io.mmio.req.valid, s3.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 51249:7]
    connect s3.io.mmio.req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 51250:7]
    node _io_empty_T = eq(s2.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51252:22]
    node _io_empty_T_1 = eq(s3.io.in.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51254:24]
    node _io_empty_T_2 = and(_io_empty_T, _io_empty_T_1) @[build/NutShell.fir.opt.mlir 51256:24]
    connect io.empty, _io_empty_T_2 @[build/NutShell.fir.opt.mlir 51257:7]
    node _io_in_resp_valid_T = eq(s3.io.out.bits.cmd, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 51260:30]
    node _io_in_resp_valid_T_1 = and(s3.io.out.valid, _io_in_resp_valid_T) @[build/NutShell.fir.opt.mlir 51262:32]
    node _io_in_resp_valid_T_2 = or(s3.io.out.valid, s3.io.dataReadRespToL1) @[build/NutShell.fir.opt.mlir 51264:32]
    node _io_in_resp_valid_T_3 = mux(_io_in_resp_valid_T_1, UInt<1>(0), _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 51266:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_3 @[build/NutShell.fir.opt.mlir 51267:7]
    wire coh : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } @[build/NutShell.fir.opt.mlir 51268:14]
    connect coh.addr, io.out.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 51274:7]
    connect coh.cmd, io.out.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 51275:7]
    connect coh.size, io.out.coh.req.bits.size @[build/NutShell.fir.opt.mlir 51276:7]
    connect coh.wdata, io.out.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 51277:7]
    connect coh.wmask, io.out.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 51278:7]
    connect arb.io.in[0].bits.wdata, coh.wdata @[build/NutShell.fir.opt.mlir 51279:7]
    connect arb.io.in[0].bits.wmask, coh.wmask @[build/NutShell.fir.opt.mlir 51280:7]
    connect arb.io.in[0].bits.cmd, coh.cmd @[build/NutShell.fir.opt.mlir 51281:7]
    connect arb.io.in[0].bits.size, coh.size @[build/NutShell.fir.opt.mlir 51282:7]
    connect arb.io.in[0].bits.addr, coh.addr @[build/NutShell.fir.opt.mlir 51283:7]
    connect arb.io.in[0].valid, io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 51284:7]
    connect io.out.coh.req.ready, arb.io.in[0].ready @[build/NutShell.fir.opt.mlir 51285:7]
    connect io.out.coh.resp.bits, s3.io.cohResp.bits @[build/NutShell.fir.opt.mlir 51286:7]
    connect io.out.coh.resp.valid, s3.io.cohResp.valid @[build/NutShell.fir.opt.mlir 51287:7]
    connect s3.io.cohResp.ready, io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 51288:7]
    connect s1.io.metaReadBus.req.ready, metaArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 51289:7]
    connect metaArray.io.r[0].req.valid, s1.io.metaReadBus.req.valid @[build/NutShell.fir.opt.mlir 51290:7]
    connect metaArray.io.r[0].req.bits, s1.io.metaReadBus.req.bits @[build/NutShell.fir.opt.mlir 51291:7]
    connect s1.io.metaReadBus.resp, metaArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 51292:7]
    connect s1.io.dataReadBus.req.ready, dataArray.io.r[0].req.ready @[build/NutShell.fir.opt.mlir 51293:7]
    connect dataArray.io.r[0].req.valid, s1.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 51294:7]
    connect dataArray.io.r[0].req.bits, s1.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 51295:7]
    connect s1.io.dataReadBus.resp, dataArray.io.r[0].resp @[build/NutShell.fir.opt.mlir 51296:7]
    connect s3.io.dataReadBus.req.ready, dataArray.io.r[1].req.ready @[build/NutShell.fir.opt.mlir 51297:7]
    connect dataArray.io.r[1].req.valid, s3.io.dataReadBus.req.valid @[build/NutShell.fir.opt.mlir 51298:7]
    connect dataArray.io.r[1].req.bits, s3.io.dataReadBus.req.bits @[build/NutShell.fir.opt.mlir 51299:7]
    connect s3.io.dataReadBus.resp, dataArray.io.r[1].resp @[build/NutShell.fir.opt.mlir 51300:7]
    connect s3.io.metaWriteBus.req.ready, metaArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 51301:7]
    connect metaArray.io.w.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51302:7]
    connect metaArray.io.w.req.bits, s3.io.metaWriteBus.req.bits @[build/NutShell.fir.opt.mlir 51303:7]
    connect s3.io.dataWriteBus.req.ready, dataArray.io.w.req.ready @[build/NutShell.fir.opt.mlir 51304:7]
    connect dataArray.io.w.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51305:7]
    connect dataArray.io.w.req.bits, s3.io.dataWriteBus.req.bits @[build/NutShell.fir.opt.mlir 51306:7]
    connect s2.io.metaReadResp[0].dirty, s1.io.metaReadBus.resp.data[0].dirty @[build/NutShell.fir.opt.mlir 51307:7]
    connect s2.io.metaReadResp[0].valid, s1.io.metaReadBus.resp.data[0].valid @[build/NutShell.fir.opt.mlir 51308:7]
    connect s2.io.metaReadResp[0].tag, s1.io.metaReadBus.resp.data[0].tag @[build/NutShell.fir.opt.mlir 51309:7]
    connect s2.io.metaReadResp[1].dirty, s1.io.metaReadBus.resp.data[1].dirty @[build/NutShell.fir.opt.mlir 51310:7]
    connect s2.io.metaReadResp[1].valid, s1.io.metaReadBus.resp.data[1].valid @[build/NutShell.fir.opt.mlir 51311:7]
    connect s2.io.metaReadResp[1].tag, s1.io.metaReadBus.resp.data[1].tag @[build/NutShell.fir.opt.mlir 51312:7]
    connect s2.io.metaReadResp[2].dirty, s1.io.metaReadBus.resp.data[2].dirty @[build/NutShell.fir.opt.mlir 51313:7]
    connect s2.io.metaReadResp[2].valid, s1.io.metaReadBus.resp.data[2].valid @[build/NutShell.fir.opt.mlir 51314:7]
    connect s2.io.metaReadResp[2].tag, s1.io.metaReadBus.resp.data[2].tag @[build/NutShell.fir.opt.mlir 51315:7]
    connect s2.io.metaReadResp[3].dirty, s1.io.metaReadBus.resp.data[3].dirty @[build/NutShell.fir.opt.mlir 51316:7]
    connect s2.io.metaReadResp[3].valid, s1.io.metaReadBus.resp.data[3].valid @[build/NutShell.fir.opt.mlir 51317:7]
    connect s2.io.metaReadResp[3].tag, s1.io.metaReadBus.resp.data[3].tag @[build/NutShell.fir.opt.mlir 51318:7]
    connect s2.io.dataReadResp[0].data, s1.io.dataReadBus.resp.data[0].data @[build/NutShell.fir.opt.mlir 51319:7]
    connect s2.io.dataReadResp[1].data, s1.io.dataReadBus.resp.data[1].data @[build/NutShell.fir.opt.mlir 51320:7]
    connect s2.io.dataReadResp[2].data, s1.io.dataReadBus.resp.data[2].data @[build/NutShell.fir.opt.mlir 51321:7]
    connect s2.io.dataReadResp[3].data, s1.io.dataReadBus.resp.data[3].data @[build/NutShell.fir.opt.mlir 51322:7]
    connect s2.io.dataWriteBus.req.bits.waymask, s3.io.dataWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 51323:7]
    connect s2.io.dataWriteBus.req.bits.data.data, s3.io.dataWriteBus.req.bits.data.data @[build/NutShell.fir.opt.mlir 51324:7]
    connect s2.io.dataWriteBus.req.bits.setIdx, s3.io.dataWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 51325:7]
    connect s2.io.dataWriteBus.req.valid, s3.io.dataWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51326:7]
    connect s2.io.dataWriteBus.req.ready, s3.io.dataWriteBus.req.ready @[build/NutShell.fir.opt.mlir 51327:7]
    connect s2.io.metaWriteBus.req.bits.waymask, s3.io.metaWriteBus.req.bits.waymask @[build/NutShell.fir.opt.mlir 51328:7]
    connect s2.io.metaWriteBus.req.bits.data.dirty, s3.io.metaWriteBus.req.bits.data.dirty @[build/NutShell.fir.opt.mlir 51329:7]
    connect s2.io.metaWriteBus.req.bits.data.valid, s3.io.metaWriteBus.req.bits.data.valid @[build/NutShell.fir.opt.mlir 51330:7]
    connect s2.io.metaWriteBus.req.bits.data.tag, s3.io.metaWriteBus.req.bits.data.tag @[build/NutShell.fir.opt.mlir 51331:7]
    connect s2.io.metaWriteBus.req.bits.setIdx, s3.io.metaWriteBus.req.bits.setIdx @[build/NutShell.fir.opt.mlir 51332:7]
    connect s2.io.metaWriteBus.req.valid, s3.io.metaWriteBus.req.valid @[build/NutShell.fir.opt.mlir 51333:7]
    connect s2.io.metaWriteBus.req.ready, s3.io.metaWriteBus.req.ready @[build/NutShell.fir.opt.mlir 51334:7]
    inst LogPerfHelper of LogPerfHelper_45 @[build/NutShell.fir.opt.mlir 51335:99]
    wire c_control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 51336:20]
    connect c_control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 51341:7]
    connect c_control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 51342:7]
    connect c_control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 51343:7]
    connect c_control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 51344:7]
    node _T_5 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51346:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 51347:7]
      node _T_6 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51349:17]
      node _T_7 = eq(_T_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51351:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 51352:9]
        skip @[build/NutShell.fir.opt.mlir 51353:11]
      node _T_8 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51356:17]
      node _T_9 = eq(_T_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51358:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 51359:9]
        skip @[build/NutShell.fir.opt.mlir 51360:11]
    node _T_10 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51364:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 51365:7]
      node _T_11 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51367:18]
      node _T_12 = eq(_T_11, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51369:18]
      when _T_12 : @[build/NutShell.fir.opt.mlir 51370:9]
        skip @[build/NutShell.fir.opt.mlir 51371:11]
      node _T_13 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51374:18]
      node _T_14 = eq(_T_13, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51376:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 51377:9]
        skip @[build/NutShell.fir.opt.mlir 51378:11]
    when s1.io.in.valid : @[build/NutShell.fir.opt.mlir 51381:7]
      node _T_15 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51383:18]
      when _T_15 : @[build/NutShell.fir.opt.mlir 51384:9]
        node _T_16 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51386:20]
        node _T_17 = eq(_T_16, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51388:20]
        when _T_17 : @[build/NutShell.fir.opt.mlir 51389:11]
          skip @[build/NutShell.fir.opt.mlir 51390:13]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51393:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51395:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 51396:11]
          skip @[build/NutShell.fir.opt.mlir 51397:13]
    when s2.io.in.valid : @[build/NutShell.fir.opt.mlir 51401:7]
      node _T_20 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51403:18]
      when _T_20 : @[build/NutShell.fir.opt.mlir 51404:9]
        node _T_21 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51406:20]
        node _T_22 = eq(_T_21, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51408:20]
        when _T_22 : @[build/NutShell.fir.opt.mlir 51409:11]
          skip @[build/NutShell.fir.opt.mlir 51410:13]
        node _T_23 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51413:20]
        node _T_24 = eq(_T_23, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51415:20]
        when _T_24 : @[build/NutShell.fir.opt.mlir 51416:11]
          skip @[build/NutShell.fir.opt.mlir 51417:13]
    when s3.io.in.valid : @[build/NutShell.fir.opt.mlir 51421:7]
      node _T_25 = and(UInt<1>(1), c_control.logEnable) @[build/NutShell.fir.opt.mlir 51423:18]
      when _T_25 : @[build/NutShell.fir.opt.mlir 51424:9]
        node _T_26 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51426:20]
        node _T_27 = eq(_T_26, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51428:20]
        when _T_27 : @[build/NutShell.fir.opt.mlir 51429:11]
          skip @[build/NutShell.fir.opt.mlir 51430:13]
        node _T_28 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51433:20]
        node _T_29 = eq(_T_28, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51435:20]
        when _T_29 : @[build/NutShell.fir.opt.mlir 51436:11]
          skip @[build/NutShell.fir.opt.mlir 51437:13]

  module SimpleBusAddressMapper : @[build/NutShell.fir.opt.mlir 51442:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51442:54]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51442:80]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 51442:107]

    connect io.in.req.ready, io.out.req.ready @[build/NutShell.fir.opt.mlir 51461:7]
    connect io.out.req.valid, io.in.req.valid @[build/NutShell.fir.opt.mlir 51462:7]
    connect io.out.req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51463:7]
    connect io.out.resp.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51464:7]
    connect io.in.resp.valid, io.out.resp.valid @[build/NutShell.fir.opt.mlir 51465:7]
    connect io.in.resp.bits, io.out.resp.bits @[build/NutShell.fir.opt.mlir 51466:7]

  module SimpleBus2AXI4Converter : @[build/NutShell.fir.opt.mlir 51468:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51468:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51468:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 51468:108]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 51531:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 51533:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51536:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51538:21]
    node _T = or(toAXI4Lite, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51541:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51543:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51545:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 51546:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51548:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 51549:9]
        skip @[build/NutShell.fir.opt.mlir 51550:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 51552:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 51554:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 51557:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 51558:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 51559:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 51560:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51562:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 51563:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51565:7]
    connect io.out.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51567:7]
    node _io_out_ar_bits_len_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 51569:32]
    node _io_out_ar_bits_len_T_1 = mux(_io_out_ar_bits_len_T, UInt<3>(7), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51572:34]
    connect io.out.ar.bits.len, pad(_io_out_ar_bits_len_T_1, 8) @[build/NutShell.fir.opt.mlir 51574:7]
    connect io.out.ar.bits.size, io.in.req.bits.size @[build/NutShell.fir.opt.mlir 51575:7]
    connect io.out.ar.bits.burst, UInt<2>(2) @[build/NutShell.fir.opt.mlir 51578:7]
    connect io.out.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51580:7]
    connect io.out.ar.bits.cache, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 51583:7]
    connect io.out.ar.bits.qos, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 51586:7]
    connect io.out.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51588:7]
    node _io_out_w_bits_last_T = eq(io.in.req.bits.cmd, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 51590:32]
    node _io_out_w_bits_last_T_1 = eq(io.in.req.bits.cmd, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51592:34]
    node _io_out_w_bits_last_T_2 = or(_io_out_w_bits_last_T, _io_out_w_bits_last_T_1) @[build/NutShell.fir.opt.mlir 51594:34]
    connect io.out.w.bits.last, _io_out_w_bits_last_T_2 @[build/NutShell.fir.opt.mlir 51595:7]
    connect wlast, io.out.w.bits.last @[build/NutShell.fir.opt.mlir 51596:7]
    connect rlast, io.out.r.bits.last @[build/NutShell.fir.opt.mlir 51597:7]
    connect io.out.aw.bits.qos, io.out.ar.bits.qos @[build/NutShell.fir.opt.mlir 51598:7]
    connect io.out.aw.bits.cache, io.out.ar.bits.cache @[build/NutShell.fir.opt.mlir 51599:7]
    connect io.out.aw.bits.lock, io.out.ar.bits.lock @[build/NutShell.fir.opt.mlir 51600:7]
    connect io.out.aw.bits.burst, io.out.ar.bits.burst @[build/NutShell.fir.opt.mlir 51601:7]
    connect io.out.aw.bits.size, io.out.ar.bits.size @[build/NutShell.fir.opt.mlir 51602:7]
    connect io.out.aw.bits.len, io.out.ar.bits.len @[build/NutShell.fir.opt.mlir 51603:7]
    connect io.out.aw.bits.user, io.out.ar.bits.user @[build/NutShell.fir.opt.mlir 51604:7]
    connect io.out.aw.bits.id, io.out.ar.bits.id @[build/NutShell.fir.opt.mlir 51605:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 51606:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 51607:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 51608:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51611:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 51613:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 51614:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 51616:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51617:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 51618:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51620:9]
    when wSend : @[build/NutShell.fir.opt.mlir 51622:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51624:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 51627:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 51629:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51630:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 51631:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 51633:9]
    when wSend : @[build/NutShell.fir.opt.mlir 51635:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 51637:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 51640:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 51642:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 51644:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 51646:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 51648:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 51650:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 51651:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51653:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51655:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 51656:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 51657:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 51658:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51661:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51663:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 51665:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51667:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 51669:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 51671:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 51672:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51674:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 51676:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51678:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 51680:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 51681:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51683:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 51685:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51687:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 51689:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 51690:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 51692:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51694:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 51696:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 51698:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 51699:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51700:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 51701:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 51703:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 51704:7]

  extmodule LogPerfHelper_46 : @[build/NutShell.fir.opt.mlir 51706:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 51706:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 51706:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 51706:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 51706:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_47 : @[build/NutShell.fir.opt.mlir 51707:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 51707:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 51707:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 51707:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 51707:141]
    defname = LogPerfHelper

  module SimpleBusCrossbar1toN : @[build/NutShell.fir.opt.mlir 51708:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 51708:53]
    input reset : Reset @[build/NutShell.fir.opt.mlir 51708:79]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[3] } @[build/NutShell.fir.opt.mlir 51708:106]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51754:16]
    node _outMatchVec_T = geq(io.in.req.bits.addr, UInt<30>(939524096)) @[build/NutShell.fir.opt.mlir 51757:25]
    node _outMatchVec_T_1 = lt(io.in.req.bits.addr, UInt<30>(939589632)) @[build/NutShell.fir.opt.mlir 51760:27]
    node _outMatchVec_T_2 = and(_outMatchVec_T, _outMatchVec_T_1) @[build/NutShell.fir.opt.mlir 51762:27]
    node _outMatchVec_T_3 = geq(io.in.req.bits.addr, UInt<30>(1006632960)) @[build/NutShell.fir.opt.mlir 51765:27]
    node _outMatchVec_T_4 = lt(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 51768:27]
    node _outMatchVec_T_5 = and(_outMatchVec_T_3, _outMatchVec_T_4) @[build/NutShell.fir.opt.mlir 51770:27]
    node _outMatchVec_T_6 = geq(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 51772:27]
    node _outMatchVec_T_7 = lt(io.in.req.bits.addr, UInt<32>(2147483648)) @[build/NutShell.fir.opt.mlir 51775:27]
    node _outMatchVec_T_8 = and(_outMatchVec_T_6, _outMatchVec_T_7) @[build/NutShell.fir.opt.mlir 51777:27]
    wire outMatchVec : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51778:22]
    connect outMatchVec[0], _outMatchVec_T_2 @[build/NutShell.fir.opt.mlir 51782:7]
    connect outMatchVec[1], _outMatchVec_T_5 @[build/NutShell.fir.opt.mlir 51783:7]
    connect outMatchVec[2], _outMatchVec_T_8 @[build/NutShell.fir.opt.mlir 51784:7]
    node _outSelVec_enc_T = mux(outMatchVec[2], UInt<3>(4), UInt<3>(0)) @[build/NutShell.fir.opt.mlir 51788:27]
    node _outSelVec_enc_T_1 = mux(outMatchVec[1], UInt<3>(2), _outSelVec_enc_T) @[build/NutShell.fir.opt.mlir 51791:29]
    node outSelVec_enc = mux(outMatchVec[0], UInt<3>(1), _outSelVec_enc_T_1) @[build/NutShell.fir.opt.mlir 51794:24]
    node _outSelVec_T = bits(outSelVec_enc, 0, 0) @[build/NutShell.fir.opt.mlir 51796:23]
    node _outSelVec_T_1 = bits(outSelVec_enc, 1, 1) @[build/NutShell.fir.opt.mlir 51798:25]
    node _outSelVec_T_2 = bits(outSelVec_enc, 2, 2) @[build/NutShell.fir.opt.mlir 51800:25]
    wire outSelVec : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51801:20]
    connect outSelVec[0], _outSelVec_T @[build/NutShell.fir.opt.mlir 51805:7]
    connect outSelVec[1], _outSelVec_T_1 @[build/NutShell.fir.opt.mlir 51806:7]
    connect outSelVec[2], _outSelVec_T_2 @[build/NutShell.fir.opt.mlir 51807:7]
    wire _outSelRespVec_WIRE : UInt<1>[3] @[build/NutShell.fir.opt.mlir 51808:30]
    connect _outSelRespVec_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51814:7]
    connect _outSelRespVec_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51816:7]
    connect _outSelRespVec_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 51818:7]
    node _outSelRespVec_T = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51820:27]
    node _outSelRespVec_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51822:29]
    node _outSelRespVec_T_2 = and(_outSelRespVec_T, _outSelRespVec_T_1) @[build/NutShell.fir.opt.mlir 51824:29]
    regreset outSelRespVec : UInt<1>[3], clock, reset, _outSelRespVec_WIRE @[build/NutShell.fir.opt.mlir 51825:24]
    when _outSelRespVec_T_2 : @[build/NutShell.fir.opt.mlir 51829:7]
      connect outSelRespVec, outSelVec @[build/NutShell.fir.opt.mlir 51830:9]
    node reqInvalidAddr_hi = cat(outSelVec[2], outSelVec[1]) @[build/NutShell.fir.opt.mlir 51833:28]
    node _reqInvalidAddr_T = cat(reqInvalidAddr_hi, outSelVec[0]) @[build/NutShell.fir.opt.mlir 51835:28]
    node _reqInvalidAddr_T_1 = orr(_reqInvalidAddr_T) @[build/NutShell.fir.opt.mlir 51837:30]
    node _reqInvalidAddr_T_2 = eq(_reqInvalidAddr_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51839:30]
    node reqInvalidAddr = and(io.in.req.valid, _reqInvalidAddr_T_2) @[build/NutShell.fir.opt.mlir 51841:25]
    when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 51844:7]
      inst LogPerfHelper of LogPerfHelper_46 @[build/NutShell.fir.opt.mlir 51845:101]
      wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 51846:20]
      connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 51851:9]
      connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 51852:9]
      connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 51853:9]
      connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 51854:9]
      node _T = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 51856:15]
      when _T : @[build/NutShell.fir.opt.mlir 51857:9]
        regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 51858:16]
        node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 51860:19]
        node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 51862:21]
        connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 51863:11]
        node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51865:19]
        node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51867:19]
        when _T_2 : @[build/NutShell.fir.opt.mlir 51868:11]
          skip @[build/NutShell.fir.opt.mlir 51869:13]
    node _T_3 = eq(reqInvalidAddr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51874:15]
    node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 51876:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51878:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 51879:7]
      node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51881:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 51882:9]
        skip @[build/NutShell.fir.opt.mlir 51883:11]
      assert(clock, _T_3, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 51885:9]
    node _T_7 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 51888:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 51891:7]
      node _T_8 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 51893:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 51894:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 51896:11]
      when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 51898:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 51900:11]
    else :
      node _T_9 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 51904:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 51905:9]
        node _T_10 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 51907:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 51908:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51910:13]
      else :
        node _T_11 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 51914:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 51915:11]
          node _T_12 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 51917:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 51918:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 51920:15]
    node _io_in_req_ready_T = mux(outSelVec[0], io.out[0].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51926:29]
    node _io_in_req_ready_T_1 = mux(outSelVec[1], io.out[1].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51928:31]
    node _io_in_req_ready_T_2 = mux(outSelVec[2], io.out[2].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51930:31]
    node _io_in_req_ready_T_3 = or(_io_in_req_ready_T, _io_in_req_ready_T_1) @[build/NutShell.fir.opt.mlir 51932:31]
    node _io_in_req_ready_T_4 = or(_io_in_req_ready_T_3, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 51934:31]
    wire _io_in_req_ready_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 51935:32]
    connect _io_in_req_ready_WIRE, _io_in_req_ready_T_4 @[build/NutShell.fir.opt.mlir 51936:7]
    node _io_in_req_ready_T_5 = or(_io_in_req_ready_WIRE, reqInvalidAddr) @[build/NutShell.fir.opt.mlir 51938:31]
    connect io.in.req.ready, _io_in_req_ready_T_5 @[build/NutShell.fir.opt.mlir 51939:7]
    node _io_out_0_req_valid_T = and(outSelVec[0], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51941:32]
    node _io_out_0_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51943:34]
    node _io_out_0_req_valid_T_2 = and(_io_out_0_req_valid_T, _io_out_0_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51945:34]
    connect io.out[0].req.valid, _io_out_0_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51946:7]
    connect io.out[0].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51947:7]
    node _io_out_1_req_valid_T = and(outSelVec[1], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51949:32]
    node _io_out_1_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51951:34]
    node _io_out_1_req_valid_T_2 = and(_io_out_1_req_valid_T, _io_out_1_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51953:34]
    connect io.out[1].req.valid, _io_out_1_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51954:7]
    connect io.out[1].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51955:7]
    node _io_out_2_req_valid_T = and(outSelVec[2], io.in.req.valid) @[build/NutShell.fir.opt.mlir 51957:32]
    node _io_out_2_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 51959:34]
    node _io_out_2_req_valid_T_2 = and(_io_out_2_req_valid_T, _io_out_2_req_valid_T_1) @[build/NutShell.fir.opt.mlir 51961:34]
    connect io.out[2].req.valid, _io_out_2_req_valid_T_2 @[build/NutShell.fir.opt.mlir 51962:7]
    connect io.out[2].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 51963:7]
    node _io_out_0_resp_ready_T = and(outSelRespVec[0], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51965:33]
    node _io_out_0_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51967:35]
    node _io_out_0_resp_ready_T_2 = and(_io_out_0_resp_ready_T, _io_out_0_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51969:35]
    connect io.out[0].resp.ready, _io_out_0_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51970:7]
    node _io_out_1_resp_ready_T = and(outSelRespVec[1], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51972:33]
    node _io_out_1_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51974:35]
    node _io_out_1_resp_ready_T_2 = and(_io_out_1_resp_ready_T, _io_out_1_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51976:35]
    connect io.out[1].resp.ready, _io_out_1_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51977:7]
    node _io_out_2_resp_ready_T = and(outSelRespVec[2], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 51979:33]
    node _io_out_2_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 51981:35]
    node _io_out_2_resp_ready_T_2 = and(_io_out_2_resp_ready_T, _io_out_2_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 51983:35]
    connect io.out[2].resp.ready, _io_out_2_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 51984:7]
    node _io_in_resp_valid_T = mux(outSelRespVec[0], io.out[0].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51986:30]
    node _io_in_resp_valid_T_1 = mux(outSelRespVec[1], io.out[1].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51988:32]
    node _io_in_resp_valid_T_2 = mux(outSelRespVec[2], io.out[2].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 51990:32]
    node _io_in_resp_valid_T_3 = or(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/NutShell.fir.opt.mlir 51992:32]
    node _io_in_resp_valid_T_4 = or(_io_in_resp_valid_T_3, _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 51994:32]
    wire _io_in_resp_valid_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 51995:33]
    connect _io_in_resp_valid_WIRE, _io_in_resp_valid_T_4 @[build/NutShell.fir.opt.mlir 51996:7]
    node _io_in_resp_valid_T_5 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 51998:32]
    node _io_in_resp_valid_T_6 = or(_io_in_resp_valid_WIRE, _io_in_resp_valid_T_5) @[build/NutShell.fir.opt.mlir 52000:32]
    connect io.in.resp.valid, _io_in_resp_valid_T_6 @[build/NutShell.fir.opt.mlir 52001:7]
    wire _io_in_resp_bits_WIRE : { cmd : UInt<4>, rdata : UInt<64> } @[build/NutShell.fir.opt.mlir 52002:32]
    node _io_in_resp_bits_T = mux(outSelRespVec[0], io.out[0].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52006:29]
    node _io_in_resp_bits_T_1 = mux(outSelRespVec[1], io.out[1].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52008:31]
    node _io_in_resp_bits_T_2 = mux(outSelRespVec[2], io.out[2].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52010:31]
    node _io_in_resp_bits_T_3 = or(_io_in_resp_bits_T, _io_in_resp_bits_T_1) @[build/NutShell.fir.opt.mlir 52012:31]
    node _io_in_resp_bits_T_4 = or(_io_in_resp_bits_T_3, _io_in_resp_bits_T_2) @[build/NutShell.fir.opt.mlir 52014:31]
    wire _io_in_resp_bits_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 52015:34]
    connect _io_in_resp_bits_WIRE_1, _io_in_resp_bits_T_4 @[build/NutShell.fir.opt.mlir 52016:7]
    connect _io_in_resp_bits_WIRE.rdata, _io_in_resp_bits_WIRE_1 @[build/NutShell.fir.opt.mlir 52017:7]
    node _io_in_resp_bits_T_5 = mux(outSelRespVec[0], io.out[0].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52019:31]
    node _io_in_resp_bits_T_6 = mux(outSelRespVec[1], io.out[1].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52021:31]
    node _io_in_resp_bits_T_7 = mux(outSelRespVec[2], io.out[2].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52023:31]
    node _io_in_resp_bits_T_8 = or(_io_in_resp_bits_T_5, _io_in_resp_bits_T_6) @[build/NutShell.fir.opt.mlir 52025:31]
    node _io_in_resp_bits_T_9 = or(_io_in_resp_bits_T_8, _io_in_resp_bits_T_7) @[build/NutShell.fir.opt.mlir 52027:31]
    wire _io_in_resp_bits_WIRE_2 : UInt<4> @[build/NutShell.fir.opt.mlir 52028:34]
    connect _io_in_resp_bits_WIRE_2, _io_in_resp_bits_T_9 @[build/NutShell.fir.opt.mlir 52029:7]
    connect _io_in_resp_bits_WIRE.cmd, _io_in_resp_bits_WIRE_2 @[build/NutShell.fir.opt.mlir 52030:7]
    connect io.in.resp.bits, _io_in_resp_bits_WIRE @[build/NutShell.fir.opt.mlir 52031:7]
    inst LogPerfHelper_1 of LogPerfHelper_47 @[build/NutShell.fir.opt.mlir 52032:107]
    wire control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 52033:20]
    connect control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 52038:7]
    connect control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 52039:7]
    connect control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 52040:7]
    connect control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 52041:7]
    node _T_13 = and(UInt<1>(1), control_1.logEnable) @[build/NutShell.fir.opt.mlir 52043:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 52044:7]
      node _T_14 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 52046:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 52047:9]
        regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52048:18]
        node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52050:21]
        node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 52052:21]
        connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 52053:11]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 52055:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52057:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 52058:11]
          skip @[build/NutShell.fir.opt.mlir 52059:13]
      node _T_17 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 52063:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 52064:9]
        regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52065:18]
        node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52067:21]
        node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 52069:21]
        connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 52070:11]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 52072:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52074:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 52075:11]
          skip @[build/NutShell.fir.opt.mlir 52076:13]

  module AXI4CLINT : @[build/NutShell.fir.opt.mlir 52081:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 52081:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 52081:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { mtip : UInt<1>, msip : UInt<1> } } @[build/NutShell.fir.opt.mlir 52081:94]
    output io_extra_mtip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 52081:642]
    input isWFI__bore : UInt<1> @[build/NutShell.fir.opt.mlir 52081:684]
    output io_extra_msip__bore : UInt<1> @[build/NutShell.fir.opt.mlir 52081:719]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 52114:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 52116:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 52118:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 52120:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 52122:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 52124:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 52126:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 52128:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52132:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52134:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52136:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52138:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52140:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52142:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52144:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52146:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 52148:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 52150:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 52152:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 52154:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 52156:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 52158:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 52160:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 52161:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 52162:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 52163:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52165:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52167:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52170:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52172:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 52173:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52175:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 52177:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52179:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52182:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 52184:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 52185:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52188:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52190:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52191:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 52192:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52194:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52196:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 52198:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 52200:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 52201:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52203:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 52205:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 52207:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52209:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52210:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 52211:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52213:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 52215:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52217:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 52219:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 52220:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 52221:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 52223:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52225:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52226:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 52227:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52229:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 52231:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52233:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52236:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 52237:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 52239:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 52240:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52242:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52244:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52246:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52248:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52249:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 52250:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52252:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 52254:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52256:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 52258:7]
    regreset mtime : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52260:16]
    regreset mtimecmp : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52261:19]
    regreset msip : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 52262:15]
    regreset freq_reg : UInt<64>, clock, reset, UInt<64>(10000) @[build/NutShell.fir.opt.mlir 52264:19]
    node freq = bits(freq_reg, 15, 0) @[build/NutShell.fir.opt.mlir 52266:15]
    regreset inc_reg : UInt<64>, clock, reset, UInt<64>(1) @[build/NutShell.fir.opt.mlir 52268:18]
    node inc = bits(inc_reg, 15, 0) @[build/NutShell.fir.opt.mlir 52270:14]
    regreset cnt : UInt<16>, clock, reset, UInt<16>(0) @[build/NutShell.fir.opt.mlir 52272:14]
    node _nextCnt_T = add(cnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52274:21]
    node nextCnt = tail(_nextCnt_T, 1) @[build/NutShell.fir.opt.mlir 52276:18]
    node _cnt_T = lt(nextCnt, freq) @[build/NutShell.fir.opt.mlir 52278:17]
    node _cnt_T_1 = mux(_cnt_T, nextCnt, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52280:19]
    connect cnt, _cnt_T_1 @[build/NutShell.fir.opt.mlir 52281:7]
    node tick = eq(nextCnt, freq) @[build/NutShell.fir.opt.mlir 52283:15]
    when tick : @[build/NutShell.fir.opt.mlir 52284:7]
      node _mtime_T = add(mtime, inc) @[build/NutShell.fir.opt.mlir 52286:21]
      node _mtime_T_1 = tail(_mtime_T, 1) @[build/NutShell.fir.opt.mlir 52288:23]
      connect mtime, _mtime_T_1 @[build/NutShell.fir.opt.mlir 52289:9]
    wire isWFI : UInt<1> @[build/NutShell.fir.opt.mlir 52291:16]
    connect isWFI, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52293:7]
    when isWFI : @[build/NutShell.fir.opt.mlir 52295:7]
      node _mtime_T_2 = add(mtime, UInt<17>(100000)) @[build/NutShell.fir.opt.mlir 52297:23]
      node _mtime_T_3 = tail(_mtime_T_2, 1) @[build/NutShell.fir.opt.mlir 52299:23]
      connect mtime, _mtime_T_3 @[build/NutShell.fir.opt.mlir 52300:9]
    node _T = bits(raddr, 15, 0) @[build/NutShell.fir.opt.mlir 52303:13]
    node _T_1 = bits(waddr, 15, 0) @[build/NutShell.fir.opt.mlir 52305:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52307:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 52309:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 52311:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 52313:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 52315:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 52317:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 52319:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 52321:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 52323:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52325:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52327:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52329:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52331:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52333:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52335:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52337:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52339:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 52341:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 52343:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 52345:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 52347:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 52349:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 52351:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 52353:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 52355:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<16>(32768), _T) @[build/NutShell.fir.opt.mlir 52358:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<16>(49144), _T) @[build/NutShell.fir.opt.mlir 52361:33]
    node _io_in_r_bits_data_T_3 = eq(UInt<16>(32776), _T) @[build/NutShell.fir.opt.mlir 52364:33]
    node _io_in_r_bits_data_T_4 = eq(UInt<15>(16384), _T) @[build/NutShell.fir.opt.mlir 52367:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T, msip, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52369:33]
    node _io_in_r_bits_data_T_6 = mux(_io_in_r_bits_data_T_1, freq_reg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52371:33]
    node _io_in_r_bits_data_T_7 = mux(_io_in_r_bits_data_T_2, mtime, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52373:33]
    node _io_in_r_bits_data_T_8 = mux(_io_in_r_bits_data_T_3, inc_reg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52375:33]
    node _io_in_r_bits_data_T_9 = mux(_io_in_r_bits_data_T_4, mtimecmp, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52377:33]
    node _io_in_r_bits_data_T_10 = or(_io_in_r_bits_data_T_5, _io_in_r_bits_data_T_6) @[build/NutShell.fir.opt.mlir 52379:34]
    node _io_in_r_bits_data_T_11 = or(_io_in_r_bits_data_T_10, _io_in_r_bits_data_T_7) @[build/NutShell.fir.opt.mlir 52381:34]
    node _io_in_r_bits_data_T_12 = or(_io_in_r_bits_data_T_11, _io_in_r_bits_data_T_8) @[build/NutShell.fir.opt.mlir 52383:34]
    node _io_in_r_bits_data_T_13 = or(_io_in_r_bits_data_T_12, _io_in_r_bits_data_T_9) @[build/NutShell.fir.opt.mlir 52385:34]
    wire _io_in_r_bits_data_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 52386:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_13 @[build/NutShell.fir.opt.mlir 52387:7]
    connect io.in.r.bits.data, _io_in_r_bits_data_WIRE @[build/NutShell.fir.opt.mlir 52388:7]
    node _T_20 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52390:16]
    node _T_21 = and(_T_2, _T_20) @[build/NutShell.fir.opt.mlir 52392:16]
    when _T_21 : @[build/NutShell.fir.opt.mlir 52393:7]
      node _msip_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52395:20]
      node _msip_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52397:22]
      node _msip_T_2 = and(msip, _msip_T_1) @[build/NutShell.fir.opt.mlir 52399:22]
      node _msip_T_3 = or(_msip_T, _msip_T_2) @[build/NutShell.fir.opt.mlir 52401:22]
      connect msip, _msip_T_3 @[build/NutShell.fir.opt.mlir 52402:9]
    node _T_22 = eq(_T_1, UInt<16>(32768)) @[build/NutShell.fir.opt.mlir 52405:16]
    node _T_23 = and(_T_2, _T_22) @[build/NutShell.fir.opt.mlir 52407:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 52408:7]
      node _freq_reg_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52410:24]
      node _freq_reg_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52412:26]
      node _freq_reg_T_2 = and(freq_reg, _freq_reg_T_1) @[build/NutShell.fir.opt.mlir 52414:26]
      node _freq_reg_T_3 = or(_freq_reg_T, _freq_reg_T_2) @[build/NutShell.fir.opt.mlir 52416:26]
      connect freq_reg, _freq_reg_T_3 @[build/NutShell.fir.opt.mlir 52417:9]
    node _T_24 = eq(_T_1, UInt<16>(49144)) @[build/NutShell.fir.opt.mlir 52420:16]
    node _T_25 = and(_T_2, _T_24) @[build/NutShell.fir.opt.mlir 52422:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 52423:7]
      node _mtime_T_4 = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52425:23]
      node _mtime_T_5 = not(_T_19) @[build/NutShell.fir.opt.mlir 52427:23]
      node _mtime_T_6 = and(mtime, _mtime_T_5) @[build/NutShell.fir.opt.mlir 52429:23]
      node _mtime_T_7 = or(_mtime_T_4, _mtime_T_6) @[build/NutShell.fir.opt.mlir 52431:23]
      connect mtime, _mtime_T_7 @[build/NutShell.fir.opt.mlir 52432:9]
    node _T_26 = eq(_T_1, UInt<16>(32776)) @[build/NutShell.fir.opt.mlir 52435:16]
    node _T_27 = and(_T_2, _T_26) @[build/NutShell.fir.opt.mlir 52437:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 52438:7]
      node _inc_reg_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52440:23]
      node _inc_reg_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52442:25]
      node _inc_reg_T_2 = and(inc_reg, _inc_reg_T_1) @[build/NutShell.fir.opt.mlir 52444:25]
      node _inc_reg_T_3 = or(_inc_reg_T, _inc_reg_T_2) @[build/NutShell.fir.opt.mlir 52446:25]
      connect inc_reg, _inc_reg_T_3 @[build/NutShell.fir.opt.mlir 52447:9]
    node _T_28 = eq(_T_1, UInt<15>(16384)) @[build/NutShell.fir.opt.mlir 52450:16]
    node _T_29 = and(_T_2, _T_28) @[build/NutShell.fir.opt.mlir 52452:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 52453:7]
      node _mtimecmp_T = and(io.in.w.bits.data, _T_19) @[build/NutShell.fir.opt.mlir 52455:24]
      node _mtimecmp_T_1 = not(_T_19) @[build/NutShell.fir.opt.mlir 52457:26]
      node _mtimecmp_T_2 = and(mtimecmp, _mtimecmp_T_1) @[build/NutShell.fir.opt.mlir 52459:26]
      node _mtimecmp_T_3 = or(_mtimecmp_T, _mtimecmp_T_2) @[build/NutShell.fir.opt.mlir 52461:26]
      connect mtimecmp, _mtimecmp_T_3 @[build/NutShell.fir.opt.mlir 52462:9]
    node _io_extra_mtip_T = geq(mtime, mtimecmp) @[build/NutShell.fir.opt.mlir 52465:27]
    reg io_extra_mtip_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52466:28]
    connect io_extra_mtip_REG, _io_extra_mtip_T @[build/NutShell.fir.opt.mlir 52467:7]
    connect io.extra.mtip, io_extra_mtip_REG @[build/NutShell.fir.opt.mlir 52468:7]
    node _io_extra_msip_T = neq(msip, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52470:27]
    reg io_extra_msip_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52471:28]
    connect io_extra_msip_REG, _io_extra_msip_T @[build/NutShell.fir.opt.mlir 52472:7]
    connect io.extra.msip, io_extra_msip_REG @[build/NutShell.fir.opt.mlir 52473:7]
    connect io_extra_mtip__bore, io.extra.mtip @[build/NutShell.fir.opt.mlir 52474:7]
    connect isWFI, isWFI__bore @[build/NutShell.fir.opt.mlir 52475:7]
    connect io_extra_msip__bore, io.extra.msip @[build/NutShell.fir.opt.mlir 52476:7]

  module SimpleBus2AXI4Converter_1 : @[build/NutShell.fir.opt.mlir 52478:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 52478:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 52478:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 52478:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 52522:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 52524:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52527:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52530:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52532:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 52534:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52536:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 52537:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52539:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 52540:9]
        skip @[build/NutShell.fir.opt.mlir 52541:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 52543:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 52545:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 52548:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 52549:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 52550:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 52551:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52553:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 52554:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52556:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 52557:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 52558:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 52559:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52562:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 52564:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 52565:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 52567:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52568:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 52569:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52571:9]
    when wSend : @[build/NutShell.fir.opt.mlir 52573:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52575:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 52578:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 52580:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52581:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 52582:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52584:9]
    when wSend : @[build/NutShell.fir.opt.mlir 52586:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52588:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 52591:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 52593:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 52595:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 52597:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 52599:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 52601:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 52602:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52604:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 52606:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 52607:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 52608:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 52609:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52612:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52614:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 52616:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52618:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 52620:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 52622:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 52623:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52625:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 52627:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52629:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 52631:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 52632:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52634:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 52636:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52638:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 52640:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 52641:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 52643:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52645:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 52647:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 52649:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 52650:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 52651:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 52652:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 52654:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 52655:7]

  module AXI4PLIC : @[build/NutShell.fir.opt.mlir 52657:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 52657:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 52657:66]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { flip intrVec : UInt<1>, meip : UInt<1>[1] } } @[build/NutShell.fir.opt.mlir 52657:93]
    output io_extra_meip_0__bore : UInt<1> @[build/NutShell.fir.opt.mlir 52657:660]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 52691:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 52693:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 52695:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 52697:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 52699:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 52701:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 52703:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 52705:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52709:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52711:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52713:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52715:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52717:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52719:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52721:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 52723:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 52725:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 52727:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 52729:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 52731:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 52733:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 52735:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 52737:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 52738:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 52739:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 52740:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52742:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52744:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52747:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52749:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 52750:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52752:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 52754:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52756:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52759:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 52761:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 52762:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52765:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52767:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52768:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 52769:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52771:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52773:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 52775:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 52777:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 52778:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 52780:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 52782:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 52784:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 52786:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52787:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 52788:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52790:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 52792:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52794:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 52796:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 52797:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 52798:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 52800:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52802:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52803:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 52804:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52806:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 52808:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52810:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 52813:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 52814:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 52816:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 52817:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 52819:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 52821:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 52823:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 52825:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52826:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 52827:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 52829:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 52831:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 52833:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 52835:7]
    reg priority_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 52836:21]
    wire _pending_WIRE : UInt<1>[32] @[build/NutShell.fir.opt.mlir 52837:24]
    connect _pending_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52871:7]
    connect _pending_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52873:7]
    connect _pending_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52875:7]
    connect _pending_WIRE[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52877:7]
    connect _pending_WIRE[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52879:7]
    connect _pending_WIRE[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52881:7]
    connect _pending_WIRE[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52883:7]
    connect _pending_WIRE[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52885:7]
    connect _pending_WIRE[8], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52887:7]
    connect _pending_WIRE[9], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52889:7]
    connect _pending_WIRE[10], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52891:7]
    connect _pending_WIRE[11], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52893:7]
    connect _pending_WIRE[12], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52895:7]
    connect _pending_WIRE[13], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52897:7]
    connect _pending_WIRE[14], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52899:7]
    connect _pending_WIRE[15], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52901:7]
    connect _pending_WIRE[16], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52903:7]
    connect _pending_WIRE[17], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52905:7]
    connect _pending_WIRE[18], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52907:7]
    connect _pending_WIRE[19], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52909:7]
    connect _pending_WIRE[20], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52911:7]
    connect _pending_WIRE[21], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52913:7]
    connect _pending_WIRE[22], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52915:7]
    connect _pending_WIRE[23], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52917:7]
    connect _pending_WIRE[24], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52919:7]
    connect _pending_WIRE[25], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52921:7]
    connect _pending_WIRE[26], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52923:7]
    connect _pending_WIRE[27], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52925:7]
    connect _pending_WIRE[28], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52927:7]
    connect _pending_WIRE[29], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52929:7]
    connect _pending_WIRE[30], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52931:7]
    connect _pending_WIRE[31], UInt<1>(0) @[build/NutShell.fir.opt.mlir 52933:7]
    regreset pending_0 : UInt<1>[32], clock, reset, _pending_WIRE @[build/NutShell.fir.opt.mlir 52934:20]
    node pendingMap_lo_lo_lo_lo = cat(pending_0[1], pending_0[0]) @[build/NutShell.fir.opt.mlir 52968:33]
    node pendingMap_lo_lo_lo_hi = cat(pending_0[3], pending_0[2]) @[build/NutShell.fir.opt.mlir 52970:33]
    node pendingMap_lo_lo_lo = cat(pendingMap_lo_lo_lo_hi, pendingMap_lo_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52972:30]
    node pendingMap_lo_lo_hi_lo = cat(pending_0[5], pending_0[4]) @[build/NutShell.fir.opt.mlir 52974:33]
    node pendingMap_lo_lo_hi_hi = cat(pending_0[7], pending_0[6]) @[build/NutShell.fir.opt.mlir 52976:33]
    node pendingMap_lo_lo_hi = cat(pendingMap_lo_lo_hi_hi, pendingMap_lo_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52978:30]
    node pendingMap_lo_lo = cat(pendingMap_lo_lo_hi, pendingMap_lo_lo_lo) @[build/NutShell.fir.opt.mlir 52980:27]
    node pendingMap_lo_hi_lo_lo = cat(pending_0[9], pending_0[8]) @[build/NutShell.fir.opt.mlir 52982:33]
    node pendingMap_lo_hi_lo_hi = cat(pending_0[11], pending_0[10]) @[build/NutShell.fir.opt.mlir 52984:33]
    node pendingMap_lo_hi_lo = cat(pendingMap_lo_hi_lo_hi, pendingMap_lo_hi_lo_lo) @[build/NutShell.fir.opt.mlir 52986:30]
    node pendingMap_lo_hi_hi_lo = cat(pending_0[13], pending_0[12]) @[build/NutShell.fir.opt.mlir 52988:33]
    node pendingMap_lo_hi_hi_hi = cat(pending_0[15], pending_0[14]) @[build/NutShell.fir.opt.mlir 52990:33]
    node pendingMap_lo_hi_hi = cat(pendingMap_lo_hi_hi_hi, pendingMap_lo_hi_hi_lo) @[build/NutShell.fir.opt.mlir 52992:30]
    node pendingMap_lo_hi = cat(pendingMap_lo_hi_hi, pendingMap_lo_hi_lo) @[build/NutShell.fir.opt.mlir 52994:27]
    node pendingMap_lo = cat(pendingMap_lo_hi, pendingMap_lo_lo) @[build/NutShell.fir.opt.mlir 52996:24]
    node pendingMap_hi_lo_lo_lo = cat(pending_0[17], pending_0[16]) @[build/NutShell.fir.opt.mlir 52998:33]
    node pendingMap_hi_lo_lo_hi = cat(pending_0[19], pending_0[18]) @[build/NutShell.fir.opt.mlir 53000:33]
    node pendingMap_hi_lo_lo = cat(pendingMap_hi_lo_lo_hi, pendingMap_hi_lo_lo_lo) @[build/NutShell.fir.opt.mlir 53002:30]
    node pendingMap_hi_lo_hi_lo = cat(pending_0[21], pending_0[20]) @[build/NutShell.fir.opt.mlir 53004:33]
    node pendingMap_hi_lo_hi_hi = cat(pending_0[23], pending_0[22]) @[build/NutShell.fir.opt.mlir 53006:33]
    node pendingMap_hi_lo_hi = cat(pendingMap_hi_lo_hi_hi, pendingMap_hi_lo_hi_lo) @[build/NutShell.fir.opt.mlir 53008:30]
    node pendingMap_hi_lo = cat(pendingMap_hi_lo_hi, pendingMap_hi_lo_lo) @[build/NutShell.fir.opt.mlir 53010:27]
    node pendingMap_hi_hi_lo_lo = cat(pending_0[25], pending_0[24]) @[build/NutShell.fir.opt.mlir 53012:33]
    node pendingMap_hi_hi_lo_hi = cat(pending_0[27], pending_0[26]) @[build/NutShell.fir.opt.mlir 53014:33]
    node pendingMap_hi_hi_lo = cat(pendingMap_hi_hi_lo_hi, pendingMap_hi_hi_lo_lo) @[build/NutShell.fir.opt.mlir 53016:30]
    node pendingMap_hi_hi_hi_lo = cat(pending_0[29], pending_0[28]) @[build/NutShell.fir.opt.mlir 53018:33]
    node pendingMap_hi_hi_hi_hi = cat(pending_0[31], pending_0[30]) @[build/NutShell.fir.opt.mlir 53020:33]
    node pendingMap_hi_hi_hi = cat(pendingMap_hi_hi_hi_hi, pendingMap_hi_hi_hi_lo) @[build/NutShell.fir.opt.mlir 53022:30]
    node pendingMap_hi_hi = cat(pendingMap_hi_hi_hi, pendingMap_hi_hi_lo) @[build/NutShell.fir.opt.mlir 53024:27]
    node pendingMap_hi = cat(pendingMap_hi_hi, pendingMap_hi_lo) @[build/NutShell.fir.opt.mlir 53026:24]
    node pendingMap_0_2_1 = cat(pendingMap_hi, pendingMap_lo) @[build/NutShell.fir.opt.mlir 53028:27]
    regreset enable_0_0 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 53030:21]
    reg threshold_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 53031:22]
    wire _inHandle_WIRE : UInt<1>[2] @[build/NutShell.fir.opt.mlir 53032:25]
    connect _inHandle_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 53036:7]
    connect _inHandle_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 53038:7]
    regreset inHandle : UInt<1>[2], clock, reset, _inHandle_WIRE @[build/NutShell.fir.opt.mlir 53039:19]
    reg claimCompletion_0 : UInt<32>, clock @[build/NutShell.fir.opt.mlir 53041:28]
    node _claimCompletionMap_T = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 53043:32]
    node _claimCompletionMap_T_1 = bits(raddr, 25, 0) @[build/NutShell.fir.opt.mlir 53045:34]
    node _claimCompletionMap_T_2 = eq(_claimCompletionMap_T_1, UInt<22>(2097156)) @[build/NutShell.fir.opt.mlir 53048:34]
    node _claimCompletionMap_T_3 = and(_claimCompletionMap_T, _claimCompletionMap_T_2) @[build/NutShell.fir.opt.mlir 53050:34]
    when _claimCompletionMap_T_3 : @[build/NutShell.fir.opt.mlir 53051:7]
      node _claimCompletionMap_T_4 = bits(claimCompletion_0, 0, 0) @[build/NutShell.fir.opt.mlir 53053:36]
      connect inHandle[_claimCompletionMap_T_4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 53056:9]
    node _T = bits(io.extra.intrVec, 0, 0) @[build/NutShell.fir.opt.mlir 53059:13]
    when _T : @[build/NutShell.fir.opt.mlir 53060:7]
      connect pending_0[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 53062:9]
    when inHandle[1] : @[build/NutShell.fir.opt.mlir 53064:7]
      connect pending_0[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 53066:9]
    node pendingVec_lo_lo_lo_lo = cat(pending_0[1], pending_0[0]) @[build/NutShell.fir.opt.mlir 53069:33]
    node pendingVec_lo_lo_lo_hi = cat(pending_0[3], pending_0[2]) @[build/NutShell.fir.opt.mlir 53071:33]
    node pendingVec_lo_lo_lo = cat(pendingVec_lo_lo_lo_hi, pendingVec_lo_lo_lo_lo) @[build/NutShell.fir.opt.mlir 53073:30]
    node pendingVec_lo_lo_hi_lo = cat(pending_0[5], pending_0[4]) @[build/NutShell.fir.opt.mlir 53075:33]
    node pendingVec_lo_lo_hi_hi = cat(pending_0[7], pending_0[6]) @[build/NutShell.fir.opt.mlir 53077:33]
    node pendingVec_lo_lo_hi = cat(pendingVec_lo_lo_hi_hi, pendingVec_lo_lo_hi_lo) @[build/NutShell.fir.opt.mlir 53079:30]
    node pendingVec_lo_lo = cat(pendingVec_lo_lo_hi, pendingVec_lo_lo_lo) @[build/NutShell.fir.opt.mlir 53081:27]
    node pendingVec_lo_hi_lo_lo = cat(pending_0[9], pending_0[8]) @[build/NutShell.fir.opt.mlir 53083:33]
    node pendingVec_lo_hi_lo_hi = cat(pending_0[11], pending_0[10]) @[build/NutShell.fir.opt.mlir 53085:33]
    node pendingVec_lo_hi_lo = cat(pendingVec_lo_hi_lo_hi, pendingVec_lo_hi_lo_lo) @[build/NutShell.fir.opt.mlir 53087:30]
    node pendingVec_lo_hi_hi_lo = cat(pending_0[13], pending_0[12]) @[build/NutShell.fir.opt.mlir 53089:33]
    node pendingVec_lo_hi_hi_hi = cat(pending_0[15], pending_0[14]) @[build/NutShell.fir.opt.mlir 53091:33]
    node pendingVec_lo_hi_hi = cat(pendingVec_lo_hi_hi_hi, pendingVec_lo_hi_hi_lo) @[build/NutShell.fir.opt.mlir 53093:30]
    node pendingVec_lo_hi = cat(pendingVec_lo_hi_hi, pendingVec_lo_hi_lo) @[build/NutShell.fir.opt.mlir 53095:27]
    node pendingVec_lo = cat(pendingVec_lo_hi, pendingVec_lo_lo) @[build/NutShell.fir.opt.mlir 53097:24]
    node pendingVec_hi_lo_lo_lo = cat(pending_0[17], pending_0[16]) @[build/NutShell.fir.opt.mlir 53099:33]
    node pendingVec_hi_lo_lo_hi = cat(pending_0[19], pending_0[18]) @[build/NutShell.fir.opt.mlir 53101:33]
    node pendingVec_hi_lo_lo = cat(pendingVec_hi_lo_lo_hi, pendingVec_hi_lo_lo_lo) @[build/NutShell.fir.opt.mlir 53103:30]
    node pendingVec_hi_lo_hi_lo = cat(pending_0[21], pending_0[20]) @[build/NutShell.fir.opt.mlir 53105:33]
    node pendingVec_hi_lo_hi_hi = cat(pending_0[23], pending_0[22]) @[build/NutShell.fir.opt.mlir 53107:33]
    node pendingVec_hi_lo_hi = cat(pendingVec_hi_lo_hi_hi, pendingVec_hi_lo_hi_lo) @[build/NutShell.fir.opt.mlir 53109:30]
    node pendingVec_hi_lo = cat(pendingVec_hi_lo_hi, pendingVec_hi_lo_lo) @[build/NutShell.fir.opt.mlir 53111:27]
    node pendingVec_hi_hi_lo_lo = cat(pending_0[25], pending_0[24]) @[build/NutShell.fir.opt.mlir 53113:33]
    node pendingVec_hi_hi_lo_hi = cat(pending_0[27], pending_0[26]) @[build/NutShell.fir.opt.mlir 53115:33]
    node pendingVec_hi_hi_lo = cat(pendingVec_hi_hi_lo_hi, pendingVec_hi_hi_lo_lo) @[build/NutShell.fir.opt.mlir 53117:30]
    node pendingVec_hi_hi_hi_lo = cat(pending_0[29], pending_0[28]) @[build/NutShell.fir.opt.mlir 53119:33]
    node pendingVec_hi_hi_hi_hi = cat(pending_0[31], pending_0[30]) @[build/NutShell.fir.opt.mlir 53121:33]
    node pendingVec_hi_hi_hi = cat(pendingVec_hi_hi_hi_hi, pendingVec_hi_hi_hi_lo) @[build/NutShell.fir.opt.mlir 53123:30]
    node pendingVec_hi_hi = cat(pendingVec_hi_hi_hi, pendingVec_hi_hi_lo) @[build/NutShell.fir.opt.mlir 53125:27]
    node pendingVec_hi = cat(pendingVec_hi_hi, pendingVec_hi_lo) @[build/NutShell.fir.opt.mlir 53127:24]
    node pendingVec = cat(pendingVec_hi, pendingVec_lo) @[build/NutShell.fir.opt.mlir 53129:21]
    node takenVec = and(pendingVec, enable_0_0) @[build/NutShell.fir.opt.mlir 53131:19]
    node _claimCompletion_0_T = eq(takenVec, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53133:31]
    node _claimCompletion_0_T_1 = bits(takenVec, 0, 0) @[build/NutShell.fir.opt.mlir 53135:33]
    node _claimCompletion_0_T_2 = bits(takenVec, 1, 1) @[build/NutShell.fir.opt.mlir 53137:33]
    node _claimCompletion_0_T_3 = bits(takenVec, 2, 2) @[build/NutShell.fir.opt.mlir 53139:33]
    node _claimCompletion_0_T_4 = bits(takenVec, 3, 3) @[build/NutShell.fir.opt.mlir 53141:33]
    node _claimCompletion_0_T_5 = bits(takenVec, 4, 4) @[build/NutShell.fir.opt.mlir 53143:33]
    node _claimCompletion_0_T_6 = bits(takenVec, 5, 5) @[build/NutShell.fir.opt.mlir 53145:33]
    node _claimCompletion_0_T_7 = bits(takenVec, 6, 6) @[build/NutShell.fir.opt.mlir 53147:33]
    node _claimCompletion_0_T_8 = bits(takenVec, 7, 7) @[build/NutShell.fir.opt.mlir 53149:33]
    node _claimCompletion_0_T_9 = bits(takenVec, 8, 8) @[build/NutShell.fir.opt.mlir 53151:33]
    node _claimCompletion_0_T_10 = bits(takenVec, 9, 9) @[build/NutShell.fir.opt.mlir 53153:34]
    node _claimCompletion_0_T_11 = bits(takenVec, 10, 10) @[build/NutShell.fir.opt.mlir 53155:34]
    node _claimCompletion_0_T_12 = bits(takenVec, 11, 11) @[build/NutShell.fir.opt.mlir 53157:34]
    node _claimCompletion_0_T_13 = bits(takenVec, 12, 12) @[build/NutShell.fir.opt.mlir 53159:34]
    node _claimCompletion_0_T_14 = bits(takenVec, 13, 13) @[build/NutShell.fir.opt.mlir 53161:34]
    node _claimCompletion_0_T_15 = bits(takenVec, 14, 14) @[build/NutShell.fir.opt.mlir 53163:34]
    node _claimCompletion_0_T_16 = bits(takenVec, 15, 15) @[build/NutShell.fir.opt.mlir 53165:34]
    node _claimCompletion_0_T_17 = bits(takenVec, 16, 16) @[build/NutShell.fir.opt.mlir 53167:34]
    node _claimCompletion_0_T_18 = bits(takenVec, 17, 17) @[build/NutShell.fir.opt.mlir 53169:34]
    node _claimCompletion_0_T_19 = bits(takenVec, 18, 18) @[build/NutShell.fir.opt.mlir 53171:34]
    node _claimCompletion_0_T_20 = bits(takenVec, 19, 19) @[build/NutShell.fir.opt.mlir 53173:34]
    node _claimCompletion_0_T_21 = bits(takenVec, 20, 20) @[build/NutShell.fir.opt.mlir 53175:34]
    node _claimCompletion_0_T_22 = bits(takenVec, 21, 21) @[build/NutShell.fir.opt.mlir 53177:34]
    node _claimCompletion_0_T_23 = bits(takenVec, 22, 22) @[build/NutShell.fir.opt.mlir 53179:34]
    node _claimCompletion_0_T_24 = bits(takenVec, 23, 23) @[build/NutShell.fir.opt.mlir 53181:34]
    node _claimCompletion_0_T_25 = bits(takenVec, 24, 24) @[build/NutShell.fir.opt.mlir 53183:34]
    node _claimCompletion_0_T_26 = bits(takenVec, 25, 25) @[build/NutShell.fir.opt.mlir 53185:34]
    node _claimCompletion_0_T_27 = bits(takenVec, 26, 26) @[build/NutShell.fir.opt.mlir 53187:34]
    node _claimCompletion_0_T_28 = bits(takenVec, 27, 27) @[build/NutShell.fir.opt.mlir 53189:34]
    node _claimCompletion_0_T_29 = bits(takenVec, 28, 28) @[build/NutShell.fir.opt.mlir 53191:34]
    node _claimCompletion_0_T_30 = bits(takenVec, 29, 29) @[build/NutShell.fir.opt.mlir 53193:34]
    node _claimCompletion_0_T_31 = bits(takenVec, 30, 30) @[build/NutShell.fir.opt.mlir 53195:34]
    node _claimCompletion_0_T_32 = bits(takenVec, 31, 31) @[build/NutShell.fir.opt.mlir 53197:34]
    node _claimCompletion_0_T_33 = mux(_claimCompletion_0_T_31, UInt<5>(30), UInt<5>(31)) @[build/NutShell.fir.opt.mlir 53201:34]
    node _claimCompletion_0_T_34 = mux(_claimCompletion_0_T_30, UInt<5>(29), _claimCompletion_0_T_33) @[build/NutShell.fir.opt.mlir 53204:34]
    node _claimCompletion_0_T_35 = mux(_claimCompletion_0_T_29, UInt<5>(28), _claimCompletion_0_T_34) @[build/NutShell.fir.opt.mlir 53207:34]
    node _claimCompletion_0_T_36 = mux(_claimCompletion_0_T_28, UInt<5>(27), _claimCompletion_0_T_35) @[build/NutShell.fir.opt.mlir 53210:34]
    node _claimCompletion_0_T_37 = mux(_claimCompletion_0_T_27, UInt<5>(26), _claimCompletion_0_T_36) @[build/NutShell.fir.opt.mlir 53213:34]
    node _claimCompletion_0_T_38 = mux(_claimCompletion_0_T_26, UInt<5>(25), _claimCompletion_0_T_37) @[build/NutShell.fir.opt.mlir 53216:34]
    node _claimCompletion_0_T_39 = mux(_claimCompletion_0_T_25, UInt<5>(24), _claimCompletion_0_T_38) @[build/NutShell.fir.opt.mlir 53219:34]
    node _claimCompletion_0_T_40 = mux(_claimCompletion_0_T_24, UInt<5>(23), _claimCompletion_0_T_39) @[build/NutShell.fir.opt.mlir 53222:34]
    node _claimCompletion_0_T_41 = mux(_claimCompletion_0_T_23, UInt<5>(22), _claimCompletion_0_T_40) @[build/NutShell.fir.opt.mlir 53225:34]
    node _claimCompletion_0_T_42 = mux(_claimCompletion_0_T_22, UInt<5>(21), _claimCompletion_0_T_41) @[build/NutShell.fir.opt.mlir 53228:34]
    node _claimCompletion_0_T_43 = mux(_claimCompletion_0_T_21, UInt<5>(20), _claimCompletion_0_T_42) @[build/NutShell.fir.opt.mlir 53231:34]
    node _claimCompletion_0_T_44 = mux(_claimCompletion_0_T_20, UInt<5>(19), _claimCompletion_0_T_43) @[build/NutShell.fir.opt.mlir 53234:34]
    node _claimCompletion_0_T_45 = mux(_claimCompletion_0_T_19, UInt<5>(18), _claimCompletion_0_T_44) @[build/NutShell.fir.opt.mlir 53237:34]
    node _claimCompletion_0_T_46 = mux(_claimCompletion_0_T_18, UInt<5>(17), _claimCompletion_0_T_45) @[build/NutShell.fir.opt.mlir 53240:34]
    node _claimCompletion_0_T_47 = mux(_claimCompletion_0_T_17, UInt<5>(16), _claimCompletion_0_T_46) @[build/NutShell.fir.opt.mlir 53243:34]
    node _claimCompletion_0_T_48 = mux(_claimCompletion_0_T_16, UInt<4>(15), _claimCompletion_0_T_47) @[build/NutShell.fir.opt.mlir 53246:34]
    node _claimCompletion_0_T_49 = mux(_claimCompletion_0_T_15, UInt<4>(14), _claimCompletion_0_T_48) @[build/NutShell.fir.opt.mlir 53249:34]
    node _claimCompletion_0_T_50 = mux(_claimCompletion_0_T_14, UInt<4>(13), _claimCompletion_0_T_49) @[build/NutShell.fir.opt.mlir 53252:34]
    node _claimCompletion_0_T_51 = mux(_claimCompletion_0_T_13, UInt<4>(12), _claimCompletion_0_T_50) @[build/NutShell.fir.opt.mlir 53255:34]
    node _claimCompletion_0_T_52 = mux(_claimCompletion_0_T_12, UInt<4>(11), _claimCompletion_0_T_51) @[build/NutShell.fir.opt.mlir 53258:34]
    node _claimCompletion_0_T_53 = mux(_claimCompletion_0_T_11, UInt<4>(10), _claimCompletion_0_T_52) @[build/NutShell.fir.opt.mlir 53261:34]
    node _claimCompletion_0_T_54 = mux(_claimCompletion_0_T_10, UInt<4>(9), _claimCompletion_0_T_53) @[build/NutShell.fir.opt.mlir 53264:34]
    node _claimCompletion_0_T_55 = mux(_claimCompletion_0_T_9, UInt<4>(8), _claimCompletion_0_T_54) @[build/NutShell.fir.opt.mlir 53267:34]
    node _claimCompletion_0_T_56 = mux(_claimCompletion_0_T_8, UInt<3>(7), _claimCompletion_0_T_55) @[build/NutShell.fir.opt.mlir 53270:34]
    node _claimCompletion_0_T_57 = mux(_claimCompletion_0_T_7, UInt<3>(6), _claimCompletion_0_T_56) @[build/NutShell.fir.opt.mlir 53273:34]
    node _claimCompletion_0_T_58 = mux(_claimCompletion_0_T_6, UInt<3>(5), _claimCompletion_0_T_57) @[build/NutShell.fir.opt.mlir 53276:34]
    node _claimCompletion_0_T_59 = mux(_claimCompletion_0_T_5, UInt<3>(4), _claimCompletion_0_T_58) @[build/NutShell.fir.opt.mlir 53279:34]
    node _claimCompletion_0_T_60 = mux(_claimCompletion_0_T_4, UInt<2>(3), _claimCompletion_0_T_59) @[build/NutShell.fir.opt.mlir 53282:34]
    node _claimCompletion_0_T_61 = mux(_claimCompletion_0_T_3, UInt<2>(2), _claimCompletion_0_T_60) @[build/NutShell.fir.opt.mlir 53285:34]
    node _claimCompletion_0_T_62 = mux(_claimCompletion_0_T_2, UInt<1>(1), _claimCompletion_0_T_61) @[build/NutShell.fir.opt.mlir 53287:34]
    node _claimCompletion_0_T_63 = mux(_claimCompletion_0_T_1, UInt<1>(0), _claimCompletion_0_T_62) @[build/NutShell.fir.opt.mlir 53289:34]
    node _claimCompletion_0_T_64 = mux(_claimCompletion_0_T, UInt<1>(0), _claimCompletion_0_T_63) @[build/NutShell.fir.opt.mlir 53291:34]
    connect claimCompletion_0, pad(_claimCompletion_0_T_64, 32) @[build/NutShell.fir.opt.mlir 53293:7]
    wire rdata : UInt<32> @[build/NutShell.fir.opt.mlir 53294:16]
    node _T_1 = bits(raddr, 25, 0) @[build/NutShell.fir.opt.mlir 53296:15]
    node _T_2 = bits(waddr, 25, 0) @[build/NutShell.fir.opt.mlir 53298:15]
    node _T_3 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 53300:15]
    node _T_4 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 53302:15]
    node _T_5 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 53304:15]
    node _T_6 = dshr(io.in.w.bits.strb, _T_5) @[build/NutShell.fir.opt.mlir 53306:15]
    node _T_7 = bits(_T_6, 0, 0) @[build/NutShell.fir.opt.mlir 53308:15]
    node _T_8 = bits(_T_6, 1, 1) @[build/NutShell.fir.opt.mlir 53310:15]
    node _T_9 = bits(_T_6, 2, 2) @[build/NutShell.fir.opt.mlir 53312:15]
    node _T_10 = bits(_T_6, 3, 3) @[build/NutShell.fir.opt.mlir 53314:16]
    node _T_11 = bits(_T_6, 4, 4) @[build/NutShell.fir.opt.mlir 53316:16]
    node _T_12 = bits(_T_6, 5, 5) @[build/NutShell.fir.opt.mlir 53318:16]
    node _T_13 = bits(_T_6, 6, 6) @[build/NutShell.fir.opt.mlir 53320:16]
    node _T_14 = bits(_T_6, 7, 7) @[build/NutShell.fir.opt.mlir 53322:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53324:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53326:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53328:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53330:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53332:16]
    node _T_20 = mux(_T_12, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53334:16]
    node _T_21 = mux(_T_13, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53336:16]
    node _T_22 = mux(_T_14, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 53338:16]
    node lo_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 53340:16]
    node lo_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 53342:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 53344:13]
    node hi_lo = cat(_T_20, _T_19) @[build/NutShell.fir.opt.mlir 53346:16]
    node hi_hi = cat(_T_22, _T_21) @[build/NutShell.fir.opt.mlir 53348:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 53350:13]
    node _T_23 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 53352:16]
    node _T_24 = bits(_T_23, 31, 0) @[build/NutShell.fir.opt.mlir 53354:16]
    node _rdata_T = eq(UInt<13>(4096), _T_1) @[build/NutShell.fir.opt.mlir 53357:19]
    node _rdata_T_1 = eq(UInt<14>(8192), _T_1) @[build/NutShell.fir.opt.mlir 53360:21]
    node _rdata_T_2 = eq(UInt<22>(2097156), _T_1) @[build/NutShell.fir.opt.mlir 53362:21]
    node _rdata_T_3 = eq(UInt<3>(4), _T_1) @[build/NutShell.fir.opt.mlir 53364:21]
    node _rdata_T_4 = eq(UInt<22>(2097152), _T_1) @[build/NutShell.fir.opt.mlir 53367:21]
    node _rdata_T_5 = mux(_rdata_T, pendingMap_0_2_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53369:21]
    node _rdata_T_6 = mux(_rdata_T_1, enable_0_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53371:21]
    node _rdata_T_7 = mux(_rdata_T_2, claimCompletion_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53373:21]
    node _rdata_T_8 = mux(_rdata_T_3, priority_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53375:21]
    node _rdata_T_9 = mux(_rdata_T_4, threshold_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53377:21]
    node _rdata_T_10 = or(_rdata_T_5, _rdata_T_6) @[build/NutShell.fir.opt.mlir 53379:22]
    node _rdata_T_11 = or(_rdata_T_10, _rdata_T_7) @[build/NutShell.fir.opt.mlir 53381:22]
    node _rdata_T_12 = or(_rdata_T_11, _rdata_T_8) @[build/NutShell.fir.opt.mlir 53383:22]
    node _rdata_T_13 = or(_rdata_T_12, _rdata_T_9) @[build/NutShell.fir.opt.mlir 53385:22]
    wire _rdata_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 53386:22]
    connect _rdata_WIRE, _rdata_T_13 @[build/NutShell.fir.opt.mlir 53387:7]
    connect rdata, _rdata_WIRE @[build/NutShell.fir.opt.mlir 53388:7]
    node _T_25 = eq(_T_2, UInt<14>(8192)) @[build/NutShell.fir.opt.mlir 53390:16]
    node _T_26 = and(_T_3, _T_25) @[build/NutShell.fir.opt.mlir 53392:16]
    when _T_26 : @[build/NutShell.fir.opt.mlir 53393:7]
      node _enable_0_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53395:26]
      node _enable_0_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53397:28]
      node _enable_0_0_T_2 = and(enable_0_0, _enable_0_0_T_1) @[build/NutShell.fir.opt.mlir 53399:28]
      node _enable_0_0_T_3 = or(_enable_0_0_T, _enable_0_0_T_2) @[build/NutShell.fir.opt.mlir 53401:28]
      connect enable_0_0, _enable_0_0_T_3 @[build/NutShell.fir.opt.mlir 53402:9]
    node _T_27 = eq(_T_2, UInt<22>(2097156)) @[build/NutShell.fir.opt.mlir 53405:16]
    node _T_28 = and(_T_3, _T_27) @[build/NutShell.fir.opt.mlir 53407:16]
    when _T_28 : @[build/NutShell.fir.opt.mlir 53408:7]
      node _claimCompletion_0_T_65 = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53410:36]
      node _claimCompletion_0_T_66 = not(_T_24) @[build/NutShell.fir.opt.mlir 53412:36]
      node _claimCompletion_0_T_67 = and(claimCompletion_0, _claimCompletion_0_T_66) @[build/NutShell.fir.opt.mlir 53414:36]
      node _claimCompletion_0_T_68 = or(_claimCompletion_0_T_65, _claimCompletion_0_T_67) @[build/NutShell.fir.opt.mlir 53416:36]
      node _claimCompletion_0_T_69 = bits(_claimCompletion_0_T_68, 31, 0) @[build/NutShell.fir.opt.mlir 53418:36]
      node _claimCompletion_0_T_70 = bits(_claimCompletion_0_T_69, 0, 0) @[build/NutShell.fir.opt.mlir 53420:36]
      connect inHandle[_claimCompletion_0_T_70], UInt<1>(0) @[build/NutShell.fir.opt.mlir 53423:9]
      connect claimCompletion_0, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 53426:9]
    node _T_29 = eq(_T_2, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 53429:16]
    node _T_30 = and(_T_3, _T_29) @[build/NutShell.fir.opt.mlir 53431:16]
    when _T_30 : @[build/NutShell.fir.opt.mlir 53432:7]
      node _priority_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53434:26]
      node _priority_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53436:28]
      node _priority_0_T_2 = and(priority_0, _priority_0_T_1) @[build/NutShell.fir.opt.mlir 53438:28]
      node _priority_0_T_3 = or(_priority_0_T, _priority_0_T_2) @[build/NutShell.fir.opt.mlir 53440:28]
      connect priority_0, _priority_0_T_3 @[build/NutShell.fir.opt.mlir 53441:9]
    node _T_31 = eq(_T_2, UInt<22>(2097152)) @[build/NutShell.fir.opt.mlir 53444:16]
    node _T_32 = and(_T_3, _T_31) @[build/NutShell.fir.opt.mlir 53446:16]
    when _T_32 : @[build/NutShell.fir.opt.mlir 53447:7]
      node _threshold_0_T = and(_T_4, _T_24) @[build/NutShell.fir.opt.mlir 53449:27]
      node _threshold_0_T_1 = not(_T_24) @[build/NutShell.fir.opt.mlir 53451:29]
      node _threshold_0_T_2 = and(threshold_0, _threshold_0_T_1) @[build/NutShell.fir.opt.mlir 53453:29]
      node _threshold_0_T_3 = or(_threshold_0_T, _threshold_0_T_2) @[build/NutShell.fir.opt.mlir 53455:29]
      connect threshold_0, _threshold_0_T_3 @[build/NutShell.fir.opt.mlir 53456:9]
    node _io_in_r_bits_data_T = cat(rdata, rdata) @[build/NutShell.fir.opt.mlir 53459:31]
    connect io.in.r.bits.data, _io_in_r_bits_data_T @[build/NutShell.fir.opt.mlir 53460:7]
    node _io_extra_meip_0_T = neq(claimCompletion_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53462:29]
    connect io.extra.meip[0], _io_extra_meip_0_T @[build/NutShell.fir.opt.mlir 53463:7]
    connect io_extra_meip_0__bore, io.extra.meip[0] @[build/NutShell.fir.opt.mlir 53464:7]

  module SimpleBus2AXI4Converter_2 : @[build/NutShell.fir.opt.mlir 53466:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 53466:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 53466:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 53466:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 53510:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 53512:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53515:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 53518:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53520:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 53522:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53524:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 53525:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53527:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 53528:9]
        skip @[build/NutShell.fir.opt.mlir 53529:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 53531:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 53533:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 53536:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 53537:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 53538:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 53539:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53541:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 53542:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53544:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 53545:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 53546:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 53547:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53550:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 53552:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 53553:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 53555:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53556:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 53557:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53559:9]
    when wSend : @[build/NutShell.fir.opt.mlir 53561:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53563:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 53566:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 53568:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53569:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 53570:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 53572:9]
    when wSend : @[build/NutShell.fir.opt.mlir 53574:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 53576:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 53579:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 53581:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 53583:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 53585:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 53587:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 53589:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 53590:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53592:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 53594:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 53595:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 53596:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 53597:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53600:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53602:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 53604:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53606:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 53608:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 53610:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 53611:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53613:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 53615:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53617:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 53619:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 53620:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53622:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 53624:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53626:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 53628:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 53629:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 53631:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 53633:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 53635:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 53637:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 53638:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 53639:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 53640:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 53642:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 53643:7]

  module NutShell : @[build/NutShell.fir.opt.mlir 53645:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 53645:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 53645:66]
    output io : { mem : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, mmio : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip frontend : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, flip meip : UInt<1> } @[build/NutShell.fir.opt.mlir 53645:93]

    inst nutcore of NutCore @[build/NutShell.fir.opt.mlir 53726:199]
    connect nutcore.clock, clock @[build/NutShell.fir.opt.mlir 53785:7]
    connect nutcore.reset, reset @[build/NutShell.fir.opt.mlir 53786:7]
    inst cohMg of CoherenceManager @[build/NutShell.fir.opt.mlir 53787:47]
    connect cohMg.clock, clock @[build/NutShell.fir.opt.mlir 53816:7]
    connect cohMg.reset, reset @[build/NutShell.fir.opt.mlir 53817:7]
    inst xbar of SimpleBusCrossbarNto1_2 @[build/NutShell.fir.opt.mlir 53818:44]
    connect xbar.clock, clock @[build/NutShell.fir.opt.mlir 53847:7]
    connect xbar.reset, reset @[build/NutShell.fir.opt.mlir 53848:7]
    connect nutcore.io.imem.mem.req.ready, cohMg.io.in.req.ready @[build/NutShell.fir.opt.mlir 53849:7]
    connect cohMg.io.in.req.valid, nutcore.io.imem.mem.req.valid @[build/NutShell.fir.opt.mlir 53850:7]
    connect cohMg.io.in.req.bits, nutcore.io.imem.mem.req.bits @[build/NutShell.fir.opt.mlir 53851:7]
    connect cohMg.io.in.resp.ready, nutcore.io.imem.mem.resp.ready @[build/NutShell.fir.opt.mlir 53852:7]
    connect nutcore.io.imem.mem.resp.valid, cohMg.io.in.resp.valid @[build/NutShell.fir.opt.mlir 53853:7]
    connect nutcore.io.imem.mem.resp.bits, cohMg.io.in.resp.bits @[build/NutShell.fir.opt.mlir 53854:7]
    connect cohMg.io.out.coh.req.ready, nutcore.io.dmem.coh.req.ready @[build/NutShell.fir.opt.mlir 53855:7]
    connect nutcore.io.dmem.coh.req.valid, cohMg.io.out.coh.req.valid @[build/NutShell.fir.opt.mlir 53856:7]
    connect nutcore.io.dmem.coh.req.bits, cohMg.io.out.coh.req.bits @[build/NutShell.fir.opt.mlir 53857:7]
    connect nutcore.io.dmem.coh.resp.ready, cohMg.io.out.coh.resp.ready @[build/NutShell.fir.opt.mlir 53858:7]
    connect cohMg.io.out.coh.resp.valid, nutcore.io.dmem.coh.resp.valid @[build/NutShell.fir.opt.mlir 53859:7]
    connect cohMg.io.out.coh.resp.bits, nutcore.io.dmem.coh.resp.bits @[build/NutShell.fir.opt.mlir 53860:7]
    connect cohMg.io.out.mem.req.ready, xbar.io.in[0].req.ready @[build/NutShell.fir.opt.mlir 53861:7]
    connect xbar.io.in[0].req.valid, cohMg.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 53862:7]
    connect xbar.io.in[0].req.bits, cohMg.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 53863:7]
    connect xbar.io.in[0].resp.ready, cohMg.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 53864:7]
    connect cohMg.io.out.mem.resp.valid, xbar.io.in[0].resp.valid @[build/NutShell.fir.opt.mlir 53865:7]
    connect cohMg.io.out.mem.resp.bits, xbar.io.in[0].resp.bits @[build/NutShell.fir.opt.mlir 53866:7]
    connect nutcore.io.dmem.mem.req.ready, xbar.io.in[1].req.ready @[build/NutShell.fir.opt.mlir 53867:7]
    connect xbar.io.in[1].req.valid, nutcore.io.dmem.mem.req.valid @[build/NutShell.fir.opt.mlir 53868:7]
    connect xbar.io.in[1].req.bits, nutcore.io.dmem.mem.req.bits @[build/NutShell.fir.opt.mlir 53869:7]
    connect xbar.io.in[1].resp.ready, nutcore.io.dmem.mem.resp.ready @[build/NutShell.fir.opt.mlir 53870:7]
    connect nutcore.io.dmem.mem.resp.valid, xbar.io.in[1].resp.valid @[build/NutShell.fir.opt.mlir 53871:7]
    connect nutcore.io.dmem.mem.resp.bits, xbar.io.in[1].resp.bits @[build/NutShell.fir.opt.mlir 53872:7]
    inst axi2sb of AXI42SimpleBusConverter @[build/NutShell.fir.opt.mlir 53873:50]
    connect axi2sb.clock, clock @[build/NutShell.fir.opt.mlir 53932:7]
    connect axi2sb.reset, reset @[build/NutShell.fir.opt.mlir 53933:7]
    connect io.frontend.aw.ready, axi2sb.io.in.aw.ready @[build/NutShell.fir.opt.mlir 53934:7]
    connect axi2sb.io.in.aw.valid, io.frontend.aw.valid @[build/NutShell.fir.opt.mlir 53935:7]
    connect axi2sb.io.in.aw.bits.addr, io.frontend.aw.bits.addr @[build/NutShell.fir.opt.mlir 53936:7]
    connect axi2sb.io.in.aw.bits.prot, io.frontend.aw.bits.prot @[build/NutShell.fir.opt.mlir 53937:7]
    connect axi2sb.io.in.aw.bits.id, pad(io.frontend.aw.bits.id, 18) @[build/NutShell.fir.opt.mlir 53939:7]
    connect axi2sb.io.in.aw.bits.user, io.frontend.aw.bits.user @[build/NutShell.fir.opt.mlir 53940:7]
    connect axi2sb.io.in.aw.bits.len, io.frontend.aw.bits.len @[build/NutShell.fir.opt.mlir 53941:7]
    connect axi2sb.io.in.aw.bits.size, io.frontend.aw.bits.size @[build/NutShell.fir.opt.mlir 53942:7]
    connect axi2sb.io.in.aw.bits.burst, io.frontend.aw.bits.burst @[build/NutShell.fir.opt.mlir 53943:7]
    connect axi2sb.io.in.aw.bits.lock, io.frontend.aw.bits.lock @[build/NutShell.fir.opt.mlir 53944:7]
    connect axi2sb.io.in.aw.bits.cache, io.frontend.aw.bits.cache @[build/NutShell.fir.opt.mlir 53945:7]
    connect axi2sb.io.in.aw.bits.qos, io.frontend.aw.bits.qos @[build/NutShell.fir.opt.mlir 53946:7]
    connect io.frontend.w.ready, axi2sb.io.in.w.ready @[build/NutShell.fir.opt.mlir 53947:7]
    connect axi2sb.io.in.w.valid, io.frontend.w.valid @[build/NutShell.fir.opt.mlir 53948:7]
    connect axi2sb.io.in.w.bits, io.frontend.w.bits @[build/NutShell.fir.opt.mlir 53949:7]
    connect axi2sb.io.in.b.ready, io.frontend.b.ready @[build/NutShell.fir.opt.mlir 53950:7]
    connect io.frontend.b.valid, axi2sb.io.in.b.valid @[build/NutShell.fir.opt.mlir 53951:7]
    connect io.frontend.b.bits.resp, axi2sb.io.in.b.bits.resp @[build/NutShell.fir.opt.mlir 53952:7]
    connect io.frontend.b.bits.id, tail(axi2sb.io.in.b.bits.id, 17) @[build/NutShell.fir.opt.mlir 53954:7]
    connect io.frontend.b.bits.user, axi2sb.io.in.b.bits.user @[build/NutShell.fir.opt.mlir 53955:7]
    connect io.frontend.ar.ready, axi2sb.io.in.ar.ready @[build/NutShell.fir.opt.mlir 53956:7]
    connect axi2sb.io.in.ar.valid, io.frontend.ar.valid @[build/NutShell.fir.opt.mlir 53957:7]
    connect axi2sb.io.in.ar.bits.addr, io.frontend.ar.bits.addr @[build/NutShell.fir.opt.mlir 53958:7]
    connect axi2sb.io.in.ar.bits.prot, io.frontend.ar.bits.prot @[build/NutShell.fir.opt.mlir 53959:7]
    connect axi2sb.io.in.ar.bits.id, pad(io.frontend.ar.bits.id, 18) @[build/NutShell.fir.opt.mlir 53961:7]
    connect axi2sb.io.in.ar.bits.user, io.frontend.ar.bits.user @[build/NutShell.fir.opt.mlir 53962:7]
    connect axi2sb.io.in.ar.bits.len, io.frontend.ar.bits.len @[build/NutShell.fir.opt.mlir 53963:7]
    connect axi2sb.io.in.ar.bits.size, io.frontend.ar.bits.size @[build/NutShell.fir.opt.mlir 53964:7]
    connect axi2sb.io.in.ar.bits.burst, io.frontend.ar.bits.burst @[build/NutShell.fir.opt.mlir 53965:7]
    connect axi2sb.io.in.ar.bits.lock, io.frontend.ar.bits.lock @[build/NutShell.fir.opt.mlir 53966:7]
    connect axi2sb.io.in.ar.bits.cache, io.frontend.ar.bits.cache @[build/NutShell.fir.opt.mlir 53967:7]
    connect axi2sb.io.in.ar.bits.qos, io.frontend.ar.bits.qos @[build/NutShell.fir.opt.mlir 53968:7]
    connect axi2sb.io.in.r.ready, io.frontend.r.ready @[build/NutShell.fir.opt.mlir 53969:7]
    connect io.frontend.r.valid, axi2sb.io.in.r.valid @[build/NutShell.fir.opt.mlir 53970:7]
    connect io.frontend.r.bits.resp, axi2sb.io.in.r.bits.resp @[build/NutShell.fir.opt.mlir 53971:7]
    connect io.frontend.r.bits.data, axi2sb.io.in.r.bits.data @[build/NutShell.fir.opt.mlir 53972:7]
    connect io.frontend.r.bits.last, axi2sb.io.in.r.bits.last @[build/NutShell.fir.opt.mlir 53973:7]
    connect io.frontend.r.bits.id, tail(axi2sb.io.in.r.bits.id, 17) @[build/NutShell.fir.opt.mlir 53975:7]
    connect io.frontend.r.bits.user, axi2sb.io.in.r.bits.user @[build/NutShell.fir.opt.mlir 53976:7]
    connect axi2sb.io.out.req.ready, nutcore.io.frontend.req.ready @[build/NutShell.fir.opt.mlir 53977:7]
    connect nutcore.io.frontend.req.valid, axi2sb.io.out.req.valid @[build/NutShell.fir.opt.mlir 53978:7]
    connect nutcore.io.frontend.req.bits, axi2sb.io.out.req.bits @[build/NutShell.fir.opt.mlir 53979:7]
    connect nutcore.io.frontend.resp.ready, axi2sb.io.out.resp.ready @[build/NutShell.fir.opt.mlir 53980:7]
    connect axi2sb.io.out.resp.valid, nutcore.io.frontend.resp.valid @[build/NutShell.fir.opt.mlir 53981:7]
    connect axi2sb.io.out.resp.bits, nutcore.io.frontend.resp.bits @[build/NutShell.fir.opt.mlir 53982:7]
    inst memport_bridge of SimpleBus2MemPortConverter @[build/NutShell.fir.opt.mlir 53983:74]
    connect memport_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54000:7]
    connect memport_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54001:7]
    connect xbar.io.out.req.ready, memport_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54002:7]
    connect memport_bridge.io.in.req.valid, xbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 54003:7]
    connect memport_bridge.io.in.req.bits, xbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 54004:7]
    connect memport_bridge.io.in.resp.ready, xbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 54005:7]
    connect xbar.io.out.resp.valid, memport_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54006:7]
    connect xbar.io.out.resp.bits, memport_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54007:7]
    invalidate memport_bridge.io.out.resp.bits.data @[build/NutShell.fir.opt.mlir 54009:7]
    invalidate memport_bridge.io.out.resp.valid @[build/NutShell.fir.opt.mlir 54011:7]
    invalidate memport_bridge.io.out.req.ready @[build/NutShell.fir.opt.mlir 54013:7]
    wire mem_l2cacheOut : { mem : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, flip coh : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 54014:25]
    inst mem_l2cacheIn_prefetcher of Prefetcher @[build/NutShell.fir.opt.mlir 54038:104]
    connect mem_l2cacheIn_prefetcher.clock, clock @[build/NutShell.fir.opt.mlir 54047:7]
    connect mem_l2cacheIn_prefetcher.reset, reset @[build/NutShell.fir.opt.mlir 54048:7]
    wire mem_l2cacheIn : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 54049:24]
    connect xbar.io.out.req.ready, mem_l2cacheIn_prefetcher.io.in.ready @[build/NutShell.fir.opt.mlir 54058:7]
    connect mem_l2cacheIn_prefetcher.io.in.valid, xbar.io.out.req.valid @[build/NutShell.fir.opt.mlir 54059:7]
    connect mem_l2cacheIn_prefetcher.io.in.bits, xbar.io.out.req.bits @[build/NutShell.fir.opt.mlir 54060:7]
    connect mem_l2cacheIn.req.bits, mem_l2cacheIn_prefetcher.io.out.bits @[build/NutShell.fir.opt.mlir 54061:7]
    connect mem_l2cacheIn.req.valid, mem_l2cacheIn_prefetcher.io.out.valid @[build/NutShell.fir.opt.mlir 54062:7]
    connect mem_l2cacheIn_prefetcher.io.out.ready, mem_l2cacheIn.req.ready @[build/NutShell.fir.opt.mlir 54063:7]
    connect mem_l2cacheIn.resp.ready, xbar.io.out.resp.ready @[build/NutShell.fir.opt.mlir 54064:7]
    connect xbar.io.out.resp.valid, mem_l2cacheIn.resp.valid @[build/NutShell.fir.opt.mlir 54065:7]
    connect xbar.io.out.resp.bits, mem_l2cacheIn.resp.bits @[build/NutShell.fir.opt.mlir 54066:7]
    wire mem_l2Empty : UInt<1> @[build/NutShell.fir.opt.mlir 54067:22]
    wire _mem_l2cacheOut_WIRE : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } } @[build/NutShell.fir.opt.mlir 54068:31]
    connect _mem_l2cacheOut_WIRE.resp.bits.rdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 54086:7]
    connect _mem_l2cacheOut_WIRE.resp.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 54089:7]
    connect _mem_l2cacheOut_WIRE.resp.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54092:7]
    connect _mem_l2cacheOut_WIRE.resp.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54094:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wdata, UInt<64>(0) @[build/NutShell.fir.opt.mlir 54096:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wmask, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54099:7]
    connect _mem_l2cacheOut_WIRE.req.bits.cmd, UInt<4>(0) @[build/NutShell.fir.opt.mlir 54101:7]
    connect _mem_l2cacheOut_WIRE.req.bits.size, UInt<3>(0) @[build/NutShell.fir.opt.mlir 54104:7]
    connect _mem_l2cacheOut_WIRE.req.bits.addr, UInt<32>(0) @[build/NutShell.fir.opt.mlir 54107:7]
    connect _mem_l2cacheOut_WIRE.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54109:7]
    connect _mem_l2cacheOut_WIRE.req.ready, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54111:7]
    inst mem_l2cacheOut_cache of Cache_2 @[build/NutShell.fir.opt.mlir 54112:92]
    connect mem_l2cacheOut_cache.clock, clock @[build/NutShell.fir.opt.mlir 54159:7]
    connect mem_l2cacheOut_cache.reset, reset @[build/NutShell.fir.opt.mlir 54160:7]
    connect mem_l2cacheOut_cache.io.flush, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 54163:7]
    connect mem_l2cacheIn.req.ready, mem_l2cacheOut_cache.io.in.req.ready @[build/NutShell.fir.opt.mlir 54164:7]
    connect mem_l2cacheOut_cache.io.in.req.valid, mem_l2cacheIn.req.valid @[build/NutShell.fir.opt.mlir 54165:7]
    connect mem_l2cacheOut_cache.io.in.req.bits, mem_l2cacheIn.req.bits @[build/NutShell.fir.opt.mlir 54166:7]
    connect mem_l2cacheOut_cache.io.in.resp.ready, mem_l2cacheIn.resp.ready @[build/NutShell.fir.opt.mlir 54167:7]
    connect mem_l2cacheIn.resp.valid, mem_l2cacheOut_cache.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54168:7]
    connect mem_l2cacheIn.resp.bits, mem_l2cacheOut_cache.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54169:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.bits.rdata, _mem_l2cacheOut_WIRE.resp.bits.rdata @[build/NutShell.fir.opt.mlir 54170:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.bits.cmd, _mem_l2cacheOut_WIRE.resp.bits.cmd @[build/NutShell.fir.opt.mlir 54171:7]
    connect mem_l2cacheOut_cache.io.mmio.resp.valid, _mem_l2cacheOut_WIRE.resp.valid @[build/NutShell.fir.opt.mlir 54172:7]
    connect _mem_l2cacheOut_WIRE.resp.ready, mem_l2cacheOut_cache.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 54173:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wdata, mem_l2cacheOut_cache.io.mmio.req.bits.wdata @[build/NutShell.fir.opt.mlir 54174:7]
    connect _mem_l2cacheOut_WIRE.req.bits.wmask, mem_l2cacheOut_cache.io.mmio.req.bits.wmask @[build/NutShell.fir.opt.mlir 54175:7]
    connect _mem_l2cacheOut_WIRE.req.bits.cmd, mem_l2cacheOut_cache.io.mmio.req.bits.cmd @[build/NutShell.fir.opt.mlir 54176:7]
    connect _mem_l2cacheOut_WIRE.req.bits.size, mem_l2cacheOut_cache.io.mmio.req.bits.size @[build/NutShell.fir.opt.mlir 54177:7]
    connect _mem_l2cacheOut_WIRE.req.bits.addr, mem_l2cacheOut_cache.io.mmio.req.bits.addr @[build/NutShell.fir.opt.mlir 54178:7]
    connect _mem_l2cacheOut_WIRE.req.valid, mem_l2cacheOut_cache.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 54179:7]
    connect mem_l2cacheOut_cache.io.mmio.req.ready, _mem_l2cacheOut_WIRE.req.ready @[build/NutShell.fir.opt.mlir 54180:7]
    connect mem_l2Empty, mem_l2cacheOut_cache.io.empty @[build/NutShell.fir.opt.mlir 54181:7]
    connect mem_l2cacheOut.coh.req.ready, mem_l2cacheOut_cache.io.out.coh.req.ready @[build/NutShell.fir.opt.mlir 54182:7]
    connect mem_l2cacheOut_cache.io.out.coh.req.valid, mem_l2cacheOut.coh.req.valid @[build/NutShell.fir.opt.mlir 54183:7]
    connect mem_l2cacheOut_cache.io.out.coh.req.bits, mem_l2cacheOut.coh.req.bits @[build/NutShell.fir.opt.mlir 54184:7]
    connect mem_l2cacheOut_cache.io.out.coh.resp.ready, mem_l2cacheOut.coh.resp.ready @[build/NutShell.fir.opt.mlir 54185:7]
    connect mem_l2cacheOut.coh.resp.valid, mem_l2cacheOut_cache.io.out.coh.resp.valid @[build/NutShell.fir.opt.mlir 54186:7]
    connect mem_l2cacheOut.coh.resp.bits, mem_l2cacheOut_cache.io.out.coh.resp.bits @[build/NutShell.fir.opt.mlir 54187:7]
    connect mem_l2cacheOut.mem.resp.ready, mem_l2cacheOut_cache.io.out.mem.resp.ready @[build/NutShell.fir.opt.mlir 54188:7]
    connect mem_l2cacheOut_cache.io.out.mem.resp.valid, mem_l2cacheOut.mem.resp.valid @[build/NutShell.fir.opt.mlir 54189:7]
    connect mem_l2cacheOut_cache.io.out.mem.resp.bits, mem_l2cacheOut.mem.resp.bits @[build/NutShell.fir.opt.mlir 54190:7]
    connect mem_l2cacheOut.mem.req.bits, mem_l2cacheOut_cache.io.out.mem.req.bits @[build/NutShell.fir.opt.mlir 54191:7]
    connect mem_l2cacheOut.mem.req.valid, mem_l2cacheOut_cache.io.out.mem.req.valid @[build/NutShell.fir.opt.mlir 54192:7]
    connect mem_l2cacheOut_cache.io.out.mem.req.ready, mem_l2cacheOut.mem.req.ready @[build/NutShell.fir.opt.mlir 54193:7]
    connect mem_l2cacheOut.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54196:7]
    connect mem_l2cacheOut.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54198:7]
    invalidate mem_l2cacheOut.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 54200:7]
    invalidate mem_l2cacheOut.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 54202:7]
    invalidate mem_l2cacheOut.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 54204:7]
    invalidate mem_l2cacheOut.coh.req.bits.size @[build/NutShell.fir.opt.mlir 54206:7]
    invalidate mem_l2cacheOut.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 54208:7]
    inst memAddrMap of SimpleBusAddressMapper @[build/NutShell.fir.opt.mlir 54209:62]
    connect memAddrMap.clock, clock @[build/NutShell.fir.opt.mlir 54228:7]
    connect memAddrMap.reset, reset @[build/NutShell.fir.opt.mlir 54229:7]
    connect mem_l2cacheOut.mem.req.ready, memAddrMap.io.in.req.ready @[build/NutShell.fir.opt.mlir 54230:7]
    connect memAddrMap.io.in.req.valid, mem_l2cacheOut.mem.req.valid @[build/NutShell.fir.opt.mlir 54231:7]
    connect memAddrMap.io.in.req.bits, mem_l2cacheOut.mem.req.bits @[build/NutShell.fir.opt.mlir 54232:7]
    connect memAddrMap.io.in.resp.ready, mem_l2cacheOut.mem.resp.ready @[build/NutShell.fir.opt.mlir 54233:7]
    connect mem_l2cacheOut.mem.resp.valid, memAddrMap.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54234:7]
    connect mem_l2cacheOut.mem.resp.bits, memAddrMap.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54235:7]
    inst io_mem_bridge of SimpleBus2AXI4Converter @[build/NutShell.fir.opt.mlir 54236:71]
    connect io_mem_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54267:7]
    connect io_mem_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54268:7]
    connect memAddrMap.io.out.req.ready, io_mem_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54269:7]
    connect io_mem_bridge.io.in.req.valid, memAddrMap.io.out.req.valid @[build/NutShell.fir.opt.mlir 54270:7]
    connect io_mem_bridge.io.in.req.bits, memAddrMap.io.out.req.bits @[build/NutShell.fir.opt.mlir 54271:7]
    connect io_mem_bridge.io.in.resp.ready, memAddrMap.io.out.resp.ready @[build/NutShell.fir.opt.mlir 54272:7]
    connect memAddrMap.io.out.resp.valid, io_mem_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54273:7]
    connect memAddrMap.io.out.resp.bits, io_mem_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54274:7]
    connect io.mem.r.ready, io_mem_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54275:7]
    connect io_mem_bridge.io.out.r.valid, io.mem.r.valid @[build/NutShell.fir.opt.mlir 54276:7]
    connect io_mem_bridge.io.out.r.bits, io.mem.r.bits @[build/NutShell.fir.opt.mlir 54277:7]
    connect io.mem.ar.bits, io_mem_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54278:7]
    connect io.mem.ar.valid, io_mem_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54279:7]
    connect io_mem_bridge.io.out.ar.ready, io.mem.ar.ready @[build/NutShell.fir.opt.mlir 54280:7]
    connect io.mem.b.ready, io_mem_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54281:7]
    connect io_mem_bridge.io.out.b.valid, io.mem.b.valid @[build/NutShell.fir.opt.mlir 54282:7]
    connect io_mem_bridge.io.out.b.bits, io.mem.b.bits @[build/NutShell.fir.opt.mlir 54283:7]
    connect io.mem.w.bits, io_mem_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54284:7]
    connect io.mem.w.valid, io_mem_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54285:7]
    connect io_mem_bridge.io.out.w.ready, io.mem.w.ready @[build/NutShell.fir.opt.mlir 54286:7]
    connect io.mem.aw.bits, io_mem_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54287:7]
    connect io.mem.aw.valid, io_mem_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54288:7]
    connect io_mem_bridge.io.out.aw.ready, io.mem.aw.ready @[build/NutShell.fir.opt.mlir 54289:7]
    connect nutcore.io.imem.coh.resp.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54291:7]
    connect nutcore.io.imem.coh.req.valid, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54293:7]
    invalidate nutcore.io.imem.coh.req.bits.wdata @[build/NutShell.fir.opt.mlir 54295:7]
    invalidate nutcore.io.imem.coh.req.bits.wmask @[build/NutShell.fir.opt.mlir 54297:7]
    invalidate nutcore.io.imem.coh.req.bits.cmd @[build/NutShell.fir.opt.mlir 54299:7]
    invalidate nutcore.io.imem.coh.req.bits.size @[build/NutShell.fir.opt.mlir 54301:7]
    invalidate nutcore.io.imem.coh.req.bits.addr @[build/NutShell.fir.opt.mlir 54303:7]
    inst mmioXbar of SimpleBusCrossbar1toN @[build/NutShell.fir.opt.mlir 54304:56]
    connect mmioXbar.clock, clock @[build/NutShell.fir.opt.mlir 54342:7]
    connect mmioXbar.reset, reset @[build/NutShell.fir.opt.mlir 54343:7]
    connect nutcore.io.mmio.req.ready, mmioXbar.io.in.req.ready @[build/NutShell.fir.opt.mlir 54344:7]
    connect mmioXbar.io.in.req.valid, nutcore.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 54345:7]
    connect mmioXbar.io.in.req.bits, nutcore.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 54346:7]
    connect mmioXbar.io.in.resp.ready, nutcore.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 54347:7]
    connect nutcore.io.mmio.resp.valid, mmioXbar.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54348:7]
    connect nutcore.io.mmio.resp.bits, mmioXbar.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54349:7]
    connect io.mmio.resp.ready, mmioXbar.io.out[2].resp.ready @[build/NutShell.fir.opt.mlir 54350:7]
    connect mmioXbar.io.out[2].resp.valid, io.mmio.resp.valid @[build/NutShell.fir.opt.mlir 54351:7]
    connect mmioXbar.io.out[2].resp.bits, io.mmio.resp.bits @[build/NutShell.fir.opt.mlir 54352:7]
    connect io.mmio.req.bits, mmioXbar.io.out[2].req.bits @[build/NutShell.fir.opt.mlir 54353:7]
    connect io.mmio.req.valid, mmioXbar.io.out[2].req.valid @[build/NutShell.fir.opt.mlir 54354:7]
    connect mmioXbar.io.out[2].req.ready, io.mmio.req.ready @[build/NutShell.fir.opt.mlir 54355:7]
    inst clint of AXI4CLINT @[build/NutShell.fir.opt.mlir 54356:123]
    connect clint.clock, clock @[build/NutShell.fir.opt.mlir 54378:7]
    connect clint.reset, reset @[build/NutShell.fir.opt.mlir 54379:7]
    inst clint_io_in_bridge of SimpleBus2AXI4Converter_1 @[build/NutShell.fir.opt.mlir 54380:86]
    connect clint_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54411:7]
    connect clint_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54412:7]
    connect mmioXbar.io.out[0].req.ready, clint_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54413:7]
    connect clint_io_in_bridge.io.in.req.valid, mmioXbar.io.out[0].req.valid @[build/NutShell.fir.opt.mlir 54414:7]
    connect clint_io_in_bridge.io.in.req.bits, mmioXbar.io.out[0].req.bits @[build/NutShell.fir.opt.mlir 54415:7]
    connect clint_io_in_bridge.io.in.resp.ready, mmioXbar.io.out[0].resp.ready @[build/NutShell.fir.opt.mlir 54416:7]
    connect mmioXbar.io.out[0].resp.valid, clint_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54417:7]
    connect mmioXbar.io.out[0].resp.bits, clint_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54418:7]
    connect clint_io_in_bridge.io.out.aw.ready, clint.io.in.aw.ready @[build/NutShell.fir.opt.mlir 54419:7]
    connect clint.io.in.aw.valid, clint_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54420:7]
    connect clint.io.in.aw.bits, clint_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54421:7]
    connect clint_io_in_bridge.io.out.w.ready, clint.io.in.w.ready @[build/NutShell.fir.opt.mlir 54422:7]
    connect clint.io.in.w.valid, clint_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54423:7]
    connect clint.io.in.w.bits, clint_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54424:7]
    connect clint.io.in.b.ready, clint_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54425:7]
    connect clint_io_in_bridge.io.out.b.valid, clint.io.in.b.valid @[build/NutShell.fir.opt.mlir 54426:7]
    connect clint_io_in_bridge.io.out.b.bits, clint.io.in.b.bits @[build/NutShell.fir.opt.mlir 54427:7]
    connect clint_io_in_bridge.io.out.ar.ready, clint.io.in.ar.ready @[build/NutShell.fir.opt.mlir 54428:7]
    connect clint.io.in.ar.valid, clint_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54429:7]
    connect clint.io.in.ar.bits, clint_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54430:7]
    connect clint.io.in.r.ready, clint_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54431:7]
    connect clint_io_in_bridge.io.out.r.valid, clint.io.in.r.valid @[build/NutShell.fir.opt.mlir 54432:7]
    connect clint_io_in_bridge.io.out.r.bits, clint.io.in.r.bits @[build/NutShell.fir.opt.mlir 54433:7]
    inst plic of AXI4PLIC @[build/NutShell.fir.opt.mlir 54434:73]
    connect plic.clock, clock @[build/NutShell.fir.opt.mlir 54458:7]
    connect plic.reset, reset @[build/NutShell.fir.opt.mlir 54459:7]
    inst plic_io_in_bridge of SimpleBus2AXI4Converter_2 @[build/NutShell.fir.opt.mlir 54460:83]
    connect plic_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 54491:7]
    connect plic_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 54492:7]
    connect mmioXbar.io.out[1].req.ready, plic_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 54493:7]
    connect plic_io_in_bridge.io.in.req.valid, mmioXbar.io.out[1].req.valid @[build/NutShell.fir.opt.mlir 54494:7]
    connect plic_io_in_bridge.io.in.req.bits, mmioXbar.io.out[1].req.bits @[build/NutShell.fir.opt.mlir 54495:7]
    connect plic_io_in_bridge.io.in.resp.ready, mmioXbar.io.out[1].resp.ready @[build/NutShell.fir.opt.mlir 54496:7]
    connect mmioXbar.io.out[1].resp.valid, plic_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 54497:7]
    connect mmioXbar.io.out[1].resp.bits, plic_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 54498:7]
    connect plic_io_in_bridge.io.out.aw.ready, plic.io.in.aw.ready @[build/NutShell.fir.opt.mlir 54499:7]
    connect plic.io.in.aw.valid, plic_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 54500:7]
    connect plic.io.in.aw.bits, plic_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 54501:7]
    connect plic_io_in_bridge.io.out.w.ready, plic.io.in.w.ready @[build/NutShell.fir.opt.mlir 54502:7]
    connect plic.io.in.w.valid, plic_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 54503:7]
    connect plic.io.in.w.bits, plic_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 54504:7]
    connect plic.io.in.b.ready, plic_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 54505:7]
    connect plic_io_in_bridge.io.out.b.valid, plic.io.in.b.valid @[build/NutShell.fir.opt.mlir 54506:7]
    connect plic_io_in_bridge.io.out.b.bits, plic.io.in.b.bits @[build/NutShell.fir.opt.mlir 54507:7]
    connect plic_io_in_bridge.io.out.ar.ready, plic.io.in.ar.ready @[build/NutShell.fir.opt.mlir 54508:7]
    connect plic.io.in.ar.valid, plic_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 54509:7]
    connect plic.io.in.ar.bits, plic_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 54510:7]
    connect plic.io.in.r.ready, plic_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 54511:7]
    connect plic_io_in_bridge.io.out.r.valid, plic.io.in.r.valid @[build/NutShell.fir.opt.mlir 54512:7]
    connect plic_io_in_bridge.io.out.r.bits, plic.io.in.r.bits @[build/NutShell.fir.opt.mlir 54513:7]
    reg plic_io_extra_intrVec_REG : UInt, clock @[build/NutShell.fir.opt.mlir 54514:36]
    connect plic_io_extra_intrVec_REG, io.meip @[build/NutShell.fir.opt.mlir 54515:7]
    reg plic_io_extra_intrVec_REG_1 : UInt, clock @[build/NutShell.fir.opt.mlir 54516:38]
    connect plic_io_extra_intrVec_REG_1, plic_io_extra_intrVec_REG @[build/NutShell.fir.opt.mlir 54517:7]
    connect plic.io.extra.intrVec, plic_io_extra_intrVec_REG_1 @[build/NutShell.fir.opt.mlir 54518:7]
    connect nutcore.backend_exu_csr_mtip__bore, clint.io_extra_mtip__bore @[build/NutShell.fir.opt.mlir 54519:7]
    connect clint.isWFI__bore, nutcore.frontend_idu__WIRE__bore @[build/NutShell.fir.opt.mlir 54520:7]
    connect nutcore.backend_exu_csr_msip__bore, clint.io_extra_msip__bore @[build/NutShell.fir.opt.mlir 54521:7]
    connect nutcore.backend_exu_csr_meip__bore, plic.io_extra_meip_0__bore @[build/NutShell.fir.opt.mlir 54522:7]

  module AXI4RAM : @[build/NutShell.fir.opt.mlir 54524:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 54524:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 54524:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 54524:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 54573:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 54575:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 54577:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 54579:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 54581:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 54583:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 54585:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 54587:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54591:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54593:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54595:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54597:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54599:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54601:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54603:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 54605:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 54607:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 54609:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 54611:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 54613:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 54615:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 54617:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 54619:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 54620:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 54621:14]
    regreset c_value : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54622:18]
    regreset readBeatCnt : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54623:22]
    node _len_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54625:17]
    wire _len_WIRE : UInt<8> @[build/NutShell.fir.opt.mlir 54626:20]
    connect _len_WIRE, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54630:7]
    regreset len_r : UInt, clock, reset, _len_WIRE @[build/NutShell.fir.opt.mlir 54631:16]
    when _len_T : @[build/NutShell.fir.opt.mlir 54632:7]
      connect len_r, io.in.ar.bits.len @[build/NutShell.fir.opt.mlir 54633:9]
    node len = mux(_len_T, io.in.ar.bits.len, len_r) @[build/NutShell.fir.opt.mlir 54636:14]
    node _burst_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54638:19]
    wire _burst_WIRE : UInt<2> @[build/NutShell.fir.opt.mlir 54639:22]
    connect _burst_WIRE, pad(UInt<1>(0), 2) @[build/NutShell.fir.opt.mlir 54642:7]
    regreset burst_r : UInt, clock, reset, _burst_WIRE @[build/NutShell.fir.opt.mlir 54643:18]
    when _burst_T : @[build/NutShell.fir.opt.mlir 54644:7]
      connect burst_r, io.in.ar.bits.burst @[build/NutShell.fir.opt.mlir 54645:9]
    node burst = mux(_burst_T, io.in.ar.bits.burst, burst_r) @[build/NutShell.fir.opt.mlir 54648:16]
    wire _wrapAddr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 54649:25]
    connect _wrapAddr_WIRE, pad(io.in.ar.bits.len, 32) @[build/NutShell.fir.opt.mlir 54651:7]
    node _wrapAddr_T = dshl(_wrapAddr_WIRE, io.in.ar.bits.size) @[build/NutShell.fir.opt.mlir 54653:22]
    node _wrapAddr_T_1 = not(_wrapAddr_T) @[build/NutShell.fir.opt.mlir 54655:24]
    node wrapAddr = and(io.in.ar.bits.addr, _wrapAddr_T_1) @[build/NutShell.fir.opt.mlir 54657:19]
    node _raddr_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54659:19]
    wire _raddr_WIRE : UInt<39> @[build/NutShell.fir.opt.mlir 54660:22]
    connect _raddr_WIRE, pad(UInt<1>(0), 39) @[build/NutShell.fir.opt.mlir 54663:7]
    regreset raddr_r : UInt, clock, reset, _raddr_WIRE @[build/NutShell.fir.opt.mlir 54664:18]
    when _raddr_T : @[build/NutShell.fir.opt.mlir 54665:7]
      connect raddr_r, wrapAddr @[build/NutShell.fir.opt.mlir 54666:9]
    node _raddr_T_1 = mux(_raddr_T, wrapAddr, raddr_r) @[build/NutShell.fir.opt.mlir 54669:21]
    connect raddr, _raddr_T_1 @[build/NutShell.fir.opt.mlir 54670:7]
    node _io_in_r_bits_last_T = eq(c_value, len) @[build/NutShell.fir.opt.mlir 54672:31]
    connect io.in.r.bits.last, _io_in_r_bits_last_T @[build/NutShell.fir.opt.mlir 54673:7]
    when ren : @[build/NutShell.fir.opt.mlir 54676:7]
      node wrap = eq(readBeatCnt, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54678:17]
      node _value_T = add(readBeatCnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54680:21]
      node _value_T_1 = tail(_value_T, 1) @[build/NutShell.fir.opt.mlir 54682:23]
      connect readBeatCnt, _value_T_1 @[build/NutShell.fir.opt.mlir 54683:9]
      node _T = eq(burst, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 54685:15]
      node _T_1 = eq(readBeatCnt, len) @[build/NutShell.fir.opt.mlir 54687:17]
      node _T_2 = and(_T, _T_1) @[build/NutShell.fir.opt.mlir 54689:17]
      when _T_2 : @[build/NutShell.fir.opt.mlir 54690:9]
        connect readBeatCnt, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54693:11]
    node _T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54697:15]
    when _T_3 : @[build/NutShell.fir.opt.mlir 54698:7]
      node wrap_1 = eq(c_value, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54700:19]
      node _value_T_2 = add(c_value, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54702:23]
      node _value_T_3 = tail(_value_T_2, 1) @[build/NutShell.fir.opt.mlir 54704:23]
      connect c_value, _value_T_3 @[build/NutShell.fir.opt.mlir 54705:9]
      when io.in.r.bits.last : @[build/NutShell.fir.opt.mlir 54706:9]
        connect c_value, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54709:11]
    node _T_4 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54713:15]
    when _T_4 : @[build/NutShell.fir.opt.mlir 54717:7]
      node _value_T_4 = dshr(io.in.ar.bits.addr, io.in.ar.bits.size) @[build/NutShell.fir.opt.mlir 54719:23]
      node _value_T_5 = and(_value_T_4, io.in.ar.bits.len) @[build/NutShell.fir.opt.mlir 54721:23]
      connect readBeatCnt, tail(_value_T_5, 24) @[build/NutShell.fir.opt.mlir 54723:9]
      node _T_5 = neq(io.in.ar.bits.len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54725:17]
      node _T_6 = eq(io.in.ar.bits.burst, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 54727:17]
      node _T_7 = and(_T_5, _T_6) @[build/NutShell.fir.opt.mlir 54729:17]
      when _T_7 : @[build/NutShell.fir.opt.mlir 54730:9]
        node _T_8 = eq(io.in.ar.bits.len, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54732:19]
        node _T_9 = eq(io.in.ar.bits.len, UInt<2>(3)) @[build/NutShell.fir.opt.mlir 54734:19]
        node _T_10 = or(_T_8, _T_9) @[build/NutShell.fir.opt.mlir 54736:20]
        node _T_11 = eq(io.in.ar.bits.len, UInt<3>(7)) @[build/NutShell.fir.opt.mlir 54738:20]
        node _T_12 = or(_T_10, _T_11) @[build/NutShell.fir.opt.mlir 54740:20]
        node _T_13 = eq(io.in.ar.bits.len, UInt<4>(15)) @[build/NutShell.fir.opt.mlir 54742:20]
        node _T_14 = or(_T_12, _T_13) @[build/NutShell.fir.opt.mlir 54744:20]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 54746:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54748:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 54749:11]
          node _T_17 = eq(_T_14, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54751:22]
          when _T_17 : @[build/NutShell.fir.opt.mlir 54752:13]
            skip @[build/NutShell.fir.opt.mlir 54753:15]
          assert(clock, _T_14, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 54755:13]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54760:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54762:22]
    node _r_busy_T_2 = and(_r_busy_T_1, io.in.r.bits.last) @[build/NutShell.fir.opt.mlir 54764:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54765:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 54766:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54768:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 54770:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54772:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54775:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 54777:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 54778:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 54781:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54783:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54784:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 54785:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54787:19]
    node _ren_T_2 = eq(io.in.r.bits.last, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54789:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 54791:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 54793:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 54794:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54796:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 54798:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 54800:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 54802:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54803:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 54804:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54806:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 54808:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54810:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 54812:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 54813:16]
    regreset writeBeatCnt : UInt<8>, clock, reset, UInt<8>(0) @[build/NutShell.fir.opt.mlir 54814:23]
    node _waddr_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54816:19]
    wire _waddr_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 54817:22]
    connect _waddr_WIRE, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 54820:7]
    regreset waddr_r : UInt, clock, reset, _waddr_WIRE @[build/NutShell.fir.opt.mlir 54821:18]
    when _waddr_T : @[build/NutShell.fir.opt.mlir 54822:7]
      connect waddr_r, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 54823:9]
    node _waddr_T_1 = mux(_waddr_T, io.in.aw.bits.addr, waddr_r) @[build/NutShell.fir.opt.mlir 54826:21]
    connect waddr, _waddr_T_1 @[build/NutShell.fir.opt.mlir 54827:7]
    node _T_18 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54829:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 54830:7]
      node wrap_2 = eq(writeBeatCnt, UInt<8>(255)) @[build/NutShell.fir.opt.mlir 54832:19]
      node _value_T_6 = add(writeBeatCnt, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 54834:23]
      node _value_T_7 = tail(_value_T_6, 1) @[build/NutShell.fir.opt.mlir 54836:23]
      connect writeBeatCnt, _value_T_7 @[build/NutShell.fir.opt.mlir 54837:9]
      when io.in.w.bits.last : @[build/NutShell.fir.opt.mlir 54838:9]
        connect writeBeatCnt, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 54841:11]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54845:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 54847:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54848:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 54849:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54851:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 54853:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54855:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 54858:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 54859:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 54861:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 54862:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 54864:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54866:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, io.in.w.bits.last) @[build/NutShell.fir.opt.mlir 54868:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 54870:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54871:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 54872:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54874:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 54876:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 54878:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 54880:7]
    node _io_in_b_bits_id_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54882:29]
    reg io_in_b_bits_id_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54883:28]
    when _io_in_b_bits_id_T : @[build/NutShell.fir.opt.mlir 54884:7]
      connect io_in_b_bits_id_r, io.in.aw.bits.id @[build/NutShell.fir.opt.mlir 54885:9]
    connect io.in.b.bits.id, io_in_b_bits_id_r @[build/NutShell.fir.opt.mlir 54887:7]
    node _io_in_b_bits_user_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 54889:31]
    reg io_in_b_bits_user_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54890:30]
    when _io_in_b_bits_user_T : @[build/NutShell.fir.opt.mlir 54891:7]
      connect io_in_b_bits_user_r, io.in.aw.bits.user @[build/NutShell.fir.opt.mlir 54892:9]
    connect io.in.b.bits.user, io_in_b_bits_user_r @[build/NutShell.fir.opt.mlir 54894:7]
    node _io_in_r_bits_id_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54896:29]
    reg io_in_r_bits_id_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54897:28]
    when _io_in_r_bits_id_T : @[build/NutShell.fir.opt.mlir 54898:7]
      connect io_in_r_bits_id_r, io.in.ar.bits.id @[build/NutShell.fir.opt.mlir 54899:9]
    connect io.in.r.bits.id, io_in_r_bits_id_r @[build/NutShell.fir.opt.mlir 54901:7]
    node _io_in_r_bits_user_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 54903:31]
    reg io_in_r_bits_user_r : UInt<1>, clock @[build/NutShell.fir.opt.mlir 54904:30]
    when _io_in_r_bits_user_T : @[build/NutShell.fir.opt.mlir 54905:7]
      connect io_in_r_bits_user_r, io.in.ar.bits.user @[build/NutShell.fir.opt.mlir 54906:9]
    connect io.in.r.bits.user, io_in_r_bits_user_r @[build/NutShell.fir.opt.mlir 54908:7]
    node _wIdx_T = bits(waddr, 30, 3) @[build/NutShell.fir.opt.mlir 54910:18]
    node _wIdx_T_1 = add(_wIdx_T, writeBeatCnt) @[build/NutShell.fir.opt.mlir 54912:20]
    node wIdx = tail(_wIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 54914:15]
    node _rIdx_T = bits(raddr, 30, 3) @[build/NutShell.fir.opt.mlir 54916:18]
    node _rIdx_T_1 = add(_rIdx_T, readBeatCnt) @[build/NutShell.fir.opt.mlir 54918:20]
    node rIdx = tail(_rIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 54920:15]
    node _wen_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 54922:17]
    node _wen_T_1 = lt(wIdx, UInt<29>(268435456)) @[build/NutShell.fir.opt.mlir 54925:19]
    node wen = and(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 54927:14]
    mem rdata_mem : @[build/NutShell.fir.opt.mlir 54928:58]
      data-type => UInt<8>[8]
      depth => 60000
      read-latency => 0
      write-latency => 1
      reader => rdata_MPORT_1
      writer => rdata_MPORT
      read-under-write => undefined
    invalidate rdata_mem.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 54930:7]
    connect rdata_mem.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54932:7]
    invalidate rdata_mem.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 54934:7]
    invalidate rdata_mem.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 54936:7]
    invalidate rdata_mem.rdata_MPORT.mask @[build/NutShell.fir.opt.mlir 54938:7]
    invalidate rdata_mem.rdata_MPORT_1.addr @[build/NutShell.fir.opt.mlir 54940:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 54942:7]
    invalidate rdata_mem.rdata_MPORT_1.clk @[build/NutShell.fir.opt.mlir 54944:7]
    node _rdata_wdata_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 54971:25]
    node _rdata_wdata_T_1 = bits(io.in.w.bits.data, 15, 8) @[build/NutShell.fir.opt.mlir 54973:27]
    node _rdata_wdata_T_2 = bits(io.in.w.bits.data, 23, 16) @[build/NutShell.fir.opt.mlir 54975:27]
    node _rdata_wdata_T_3 = bits(io.in.w.bits.data, 31, 24) @[build/NutShell.fir.opt.mlir 54977:27]
    node _rdata_wdata_T_4 = bits(io.in.w.bits.data, 39, 32) @[build/NutShell.fir.opt.mlir 54979:27]
    node _rdata_wdata_T_5 = bits(io.in.w.bits.data, 47, 40) @[build/NutShell.fir.opt.mlir 54981:27]
    node _rdata_wdata_T_6 = bits(io.in.w.bits.data, 55, 48) @[build/NutShell.fir.opt.mlir 54983:27]
    node _rdata_wdata_T_7 = bits(io.in.w.bits.data, 63, 56) @[build/NutShell.fir.opt.mlir 54985:27]
    wire rdata_wdata : UInt<8>[8] @[build/NutShell.fir.opt.mlir 54986:22]
    connect rdata_wdata[0], _rdata_wdata_T @[build/NutShell.fir.opt.mlir 54995:7]
    connect rdata_wdata[1], _rdata_wdata_T_1 @[build/NutShell.fir.opt.mlir 54996:7]
    connect rdata_wdata[2], _rdata_wdata_T_2 @[build/NutShell.fir.opt.mlir 54997:7]
    connect rdata_wdata[3], _rdata_wdata_T_3 @[build/NutShell.fir.opt.mlir 54998:7]
    connect rdata_wdata[4], _rdata_wdata_T_4 @[build/NutShell.fir.opt.mlir 54999:7]
    connect rdata_wdata[5], _rdata_wdata_T_5 @[build/NutShell.fir.opt.mlir 55000:7]
    connect rdata_wdata[6], _rdata_wdata_T_6 @[build/NutShell.fir.opt.mlir 55001:7]
    connect rdata_wdata[7], _rdata_wdata_T_7 @[build/NutShell.fir.opt.mlir 55002:7]
    when wen : @[build/NutShell.fir.opt.mlir 55003:7]
      node _rdata_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 55005:21]
      node _rdata_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 55007:23]
      node _rdata_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 55009:23]
      node _rdata_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 55011:23]
      node _rdata_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 55013:23]
      node _rdata_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 55015:23]
      node _rdata_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 55017:23]
      node _rdata_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 55019:23]
      connect rdata_mem.rdata_MPORT.addr, wIdx @[build/NutShell.fir.opt.mlir 55020:9]
      connect rdata_mem.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55021:9]
      connect rdata_mem.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 55022:9]
      connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55024:9]
      connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55026:9]
      connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55028:9]
      connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55030:9]
      connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55032:9]
      connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55034:9]
      connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55036:9]
      connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55038:9]
      when _rdata_T : @[build/NutShell.fir.opt.mlir 55039:9]
        connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55040:11]
        connect rdata_mem.rdata_MPORT.data[0], rdata_wdata[0] @[build/NutShell.fir.opt.mlir 55041:11]
      when _rdata_T_1 : @[build/NutShell.fir.opt.mlir 55043:9]
        connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55044:11]
        connect rdata_mem.rdata_MPORT.data[1], rdata_wdata[1] @[build/NutShell.fir.opt.mlir 55045:11]
      when _rdata_T_2 : @[build/NutShell.fir.opt.mlir 55047:9]
        connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55048:11]
        connect rdata_mem.rdata_MPORT.data[2], rdata_wdata[2] @[build/NutShell.fir.opt.mlir 55049:11]
      when _rdata_T_3 : @[build/NutShell.fir.opt.mlir 55051:9]
        connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55052:11]
        connect rdata_mem.rdata_MPORT.data[3], rdata_wdata[3] @[build/NutShell.fir.opt.mlir 55053:11]
      when _rdata_T_4 : @[build/NutShell.fir.opt.mlir 55055:9]
        connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55056:11]
        connect rdata_mem.rdata_MPORT.data[4], rdata_wdata[4] @[build/NutShell.fir.opt.mlir 55057:11]
      when _rdata_T_5 : @[build/NutShell.fir.opt.mlir 55059:9]
        connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55060:11]
        connect rdata_mem.rdata_MPORT.data[5], rdata_wdata[5] @[build/NutShell.fir.opt.mlir 55061:11]
      when _rdata_T_6 : @[build/NutShell.fir.opt.mlir 55063:9]
        connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55064:11]
        connect rdata_mem.rdata_MPORT.data[6], rdata_wdata[6] @[build/NutShell.fir.opt.mlir 55065:11]
      when _rdata_T_7 : @[build/NutShell.fir.opt.mlir 55067:9]
        connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 55068:11]
        connect rdata_mem.rdata_MPORT.data[7], rdata_wdata[7] @[build/NutShell.fir.opt.mlir 55069:11]
    connect rdata_mem.rdata_MPORT_1.addr, rIdx @[build/NutShell.fir.opt.mlir 55072:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55073:7]
    connect rdata_mem.rdata_MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 55074:7]
    node rdata_lo_lo = cat(rdata_mem.rdata_MPORT_1.data[1], rdata_mem.rdata_MPORT_1.data[0]) @[build/NutShell.fir.opt.mlir 55076:22]
    node rdata_lo_hi = cat(rdata_mem.rdata_MPORT_1.data[3], rdata_mem.rdata_MPORT_1.data[2]) @[build/NutShell.fir.opt.mlir 55078:22]
    node rdata_lo = cat(rdata_lo_hi, rdata_lo_lo) @[build/NutShell.fir.opt.mlir 55080:19]
    node rdata_hi_lo = cat(rdata_mem.rdata_MPORT_1.data[5], rdata_mem.rdata_MPORT_1.data[4]) @[build/NutShell.fir.opt.mlir 55082:22]
    node rdata_hi_hi = cat(rdata_mem.rdata_MPORT_1.data[7], rdata_mem.rdata_MPORT_1.data[6]) @[build/NutShell.fir.opt.mlir 55084:22]
    node rdata_hi = cat(rdata_hi_hi, rdata_hi_lo) @[build/NutShell.fir.opt.mlir 55086:19]
    node _rdata_T_8 = cat(rdata_hi, rdata_lo) @[build/NutShell.fir.opt.mlir 55088:21]
    reg rdata : UInt<64>, clock @[build/NutShell.fir.opt.mlir 55089:16]
    when ren : @[build/NutShell.fir.opt.mlir 55090:7]
      connect rdata, _rdata_T_8 @[build/NutShell.fir.opt.mlir 55091:9]
    connect io.in.r.bits.data, rdata @[build/NutShell.fir.opt.mlir 55093:7]

  module LatencyPipe : @[build/NutShell.fir.opt.mlir 55095:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55095:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55095:69]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } } } @[build/NutShell.fir.opt.mlir 55095:96]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 55104:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 55105:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 55106:7]

  module LatencyPipe_1 : @[build/NutShell.fir.opt.mlir 55108:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55108:45]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55108:71]
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } } } @[build/NutShell.fir.opt.mlir 55108:98]

    connect io.in.ready, io.out.ready @[build/NutShell.fir.opt.mlir 55117:7]
    connect io.out.valid, io.in.valid @[build/NutShell.fir.opt.mlir 55118:7]
    connect io.out.bits, io.in.bits @[build/NutShell.fir.opt.mlir 55119:7]

  module AXI4Delayer : @[build/NutShell.fir.opt.mlir 55121:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55121:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55121:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } @[build/NutShell.fir.opt.mlir 55121:96]

    inst io_out_ar_pipe of LatencyPipe @[build/NutShell.fir.opt.mlir 55164:74]
    connect io_out_ar_pipe.clock, clock @[build/NutShell.fir.opt.mlir 55173:7]
    connect io_out_ar_pipe.reset, reset @[build/NutShell.fir.opt.mlir 55174:7]
    connect io.in.ar.ready, io_out_ar_pipe.io.in.ready @[build/NutShell.fir.opt.mlir 55175:7]
    connect io_out_ar_pipe.io.in.valid, io.in.ar.valid @[build/NutShell.fir.opt.mlir 55176:7]
    connect io_out_ar_pipe.io.in.bits, io.in.ar.bits @[build/NutShell.fir.opt.mlir 55177:7]
    connect io.out.ar.bits, io_out_ar_pipe.io.out.bits @[build/NutShell.fir.opt.mlir 55178:7]
    connect io.out.ar.valid, io_out_ar_pipe.io.out.valid @[build/NutShell.fir.opt.mlir 55179:7]
    connect io_out_ar_pipe.io.out.ready, io.out.ar.ready @[build/NutShell.fir.opt.mlir 55180:7]
    inst io_out_aw_pipe of LatencyPipe_1 @[build/NutShell.fir.opt.mlir 55181:74]
    connect io_out_aw_pipe.clock, clock @[build/NutShell.fir.opt.mlir 55190:7]
    connect io_out_aw_pipe.reset, reset @[build/NutShell.fir.opt.mlir 55191:7]
    connect io.in.aw.ready, io_out_aw_pipe.io.in.ready @[build/NutShell.fir.opt.mlir 55192:7]
    connect io_out_aw_pipe.io.in.valid, io.in.aw.valid @[build/NutShell.fir.opt.mlir 55193:7]
    connect io_out_aw_pipe.io.in.bits, io.in.aw.bits @[build/NutShell.fir.opt.mlir 55194:7]
    connect io.out.aw.bits, io_out_aw_pipe.io.out.bits @[build/NutShell.fir.opt.mlir 55195:7]
    connect io.out.aw.valid, io_out_aw_pipe.io.out.valid @[build/NutShell.fir.opt.mlir 55196:7]
    connect io_out_aw_pipe.io.out.ready, io.out.aw.ready @[build/NutShell.fir.opt.mlir 55197:7]
    connect io.in.w.ready, io.out.w.ready @[build/NutShell.fir.opt.mlir 55198:7]
    connect io.out.w.valid, io.in.w.valid @[build/NutShell.fir.opt.mlir 55199:7]
    connect io.out.w.bits, io.in.w.bits @[build/NutShell.fir.opt.mlir 55200:7]
    connect io.out.b.ready, io.in.b.ready @[build/NutShell.fir.opt.mlir 55201:7]
    connect io.in.b.valid, io.out.b.valid @[build/NutShell.fir.opt.mlir 55202:7]
    connect io.in.b.bits, io.out.b.bits @[build/NutShell.fir.opt.mlir 55203:7]
    connect io.out.r.ready, io.in.r.ready @[build/NutShell.fir.opt.mlir 55204:7]
    connect io.in.r.valid, io.out.r.valid @[build/NutShell.fir.opt.mlir 55205:7]
    connect io.in.r.bits, io.out.r.bits @[build/NutShell.fir.opt.mlir 55206:7]

  extmodule LogPerfHelper_48 : @[build/NutShell.fir.opt.mlir 55208:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 55208:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 55208:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 55208:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 55208:141]
    defname = LogPerfHelper

  extmodule LogPerfHelper_49 : @[build/NutShell.fir.opt.mlir 55209:5]
    output timer : UInt<64> @[build/NutShell.fir.opt.mlir 55209:52]
    output logEnable : UInt<1> @[build/NutShell.fir.opt.mlir 55209:81]
    output clean : UInt<1> @[build/NutShell.fir.opt.mlir 55209:113]
    output dump : UInt<1> @[build/NutShell.fir.opt.mlir 55209:141]
    defname = LogPerfHelper

  module SimpleBusCrossbar1toN_1 : @[build/NutShell.fir.opt.mlir 55210:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55210:55]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55210:81]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }[7] } @[build/NutShell.fir.opt.mlir 55210:108]

    regreset state : UInt<2>, clock, reset, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55300:16]
    node _outMatchVec_T = geq(io.in.req.bits.addr, UInt<31>(1080033280)) @[build/NutShell.fir.opt.mlir 55303:25]
    node _outMatchVec_T_1 = lt(io.in.req.bits.addr, UInt<31>(1080033296)) @[build/NutShell.fir.opt.mlir 55306:27]
    node _outMatchVec_T_2 = and(_outMatchVec_T, _outMatchVec_T_1) @[build/NutShell.fir.opt.mlir 55308:27]
    node _outMatchVec_T_3 = geq(io.in.req.bits.addr, UInt<31>(1342177280)) @[build/NutShell.fir.opt.mlir 55311:27]
    node _outMatchVec_T_4 = lt(io.in.req.bits.addr, UInt<31>(1346371584)) @[build/NutShell.fir.opt.mlir 55314:27]
    node _outMatchVec_T_5 = and(_outMatchVec_T_3, _outMatchVec_T_4) @[build/NutShell.fir.opt.mlir 55316:27]
    node _outMatchVec_T_6 = geq(io.in.req.bits.addr, UInt<31>(1073745920)) @[build/NutShell.fir.opt.mlir 55319:27]
    node _outMatchVec_T_7 = lt(io.in.req.bits.addr, UInt<31>(1073745928)) @[build/NutShell.fir.opt.mlir 55322:27]
    node _outMatchVec_T_8 = and(_outMatchVec_T_6, _outMatchVec_T_7) @[build/NutShell.fir.opt.mlir 55324:27]
    node _outMatchVec_T_9 = geq(io.in.req.bits.addr, UInt<31>(1073741824)) @[build/NutShell.fir.opt.mlir 55327:27]
    node _outMatchVec_T_10 = lt(io.in.req.bits.addr, UInt<31>(1073745920)) @[build/NutShell.fir.opt.mlir 55329:28]
    node _outMatchVec_T_11 = and(_outMatchVec_T_9, _outMatchVec_T_10) @[build/NutShell.fir.opt.mlir 55331:28]
    node _outMatchVec_T_12 = geq(io.in.req.bits.addr, UInt<31>(1073750016)) @[build/NutShell.fir.opt.mlir 55334:28]
    node _outMatchVec_T_13 = lt(io.in.req.bits.addr, UInt<31>(1073754112)) @[build/NutShell.fir.opt.mlir 55337:28]
    node _outMatchVec_T_14 = and(_outMatchVec_T_12, _outMatchVec_T_13) @[build/NutShell.fir.opt.mlir 55339:28]
    node _outMatchVec_T_15 = geq(io.in.req.bits.addr, UInt<31>(1073758208)) @[build/NutShell.fir.opt.mlir 55342:28]
    node _outMatchVec_T_16 = lt(io.in.req.bits.addr, UInt<31>(1073762304)) @[build/NutShell.fir.opt.mlir 55345:28]
    node _outMatchVec_T_17 = and(_outMatchVec_T_15, _outMatchVec_T_16) @[build/NutShell.fir.opt.mlir 55347:28]
    node _outMatchVec_T_18 = geq(io.in.req.bits.addr, UInt<31>(1073754112)) @[build/NutShell.fir.opt.mlir 55349:28]
    node _outMatchVec_T_19 = lt(io.in.req.bits.addr, UInt<31>(1073758208)) @[build/NutShell.fir.opt.mlir 55351:28]
    node _outMatchVec_T_20 = and(_outMatchVec_T_18, _outMatchVec_T_19) @[build/NutShell.fir.opt.mlir 55353:28]
    wire outMatchVec : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55354:22]
    connect outMatchVec[0], _outMatchVec_T_2 @[build/NutShell.fir.opt.mlir 55362:7]
    connect outMatchVec[1], _outMatchVec_T_5 @[build/NutShell.fir.opt.mlir 55363:7]
    connect outMatchVec[2], _outMatchVec_T_8 @[build/NutShell.fir.opt.mlir 55364:7]
    connect outMatchVec[3], _outMatchVec_T_11 @[build/NutShell.fir.opt.mlir 55365:7]
    connect outMatchVec[4], _outMatchVec_T_14 @[build/NutShell.fir.opt.mlir 55366:7]
    connect outMatchVec[5], _outMatchVec_T_17 @[build/NutShell.fir.opt.mlir 55367:7]
    connect outMatchVec[6], _outMatchVec_T_20 @[build/NutShell.fir.opt.mlir 55368:7]
    node _outSelVec_enc_T = mux(outMatchVec[6], UInt<7>(64), UInt<7>(0)) @[build/NutShell.fir.opt.mlir 55372:27]
    node _outSelVec_enc_T_1 = mux(outMatchVec[5], UInt<7>(32), _outSelVec_enc_T) @[build/NutShell.fir.opt.mlir 55375:29]
    node _outSelVec_enc_T_2 = mux(outMatchVec[4], UInt<7>(16), _outSelVec_enc_T_1) @[build/NutShell.fir.opt.mlir 55378:29]
    node _outSelVec_enc_T_3 = mux(outMatchVec[3], UInt<7>(8), _outSelVec_enc_T_2) @[build/NutShell.fir.opt.mlir 55381:29]
    node _outSelVec_enc_T_4 = mux(outMatchVec[2], UInt<7>(4), _outSelVec_enc_T_3) @[build/NutShell.fir.opt.mlir 55384:29]
    node _outSelVec_enc_T_5 = mux(outMatchVec[1], UInt<7>(2), _outSelVec_enc_T_4) @[build/NutShell.fir.opt.mlir 55387:29]
    node outSelVec_enc = mux(outMatchVec[0], UInt<7>(1), _outSelVec_enc_T_5) @[build/NutShell.fir.opt.mlir 55390:24]
    node _outSelVec_T = bits(outSelVec_enc, 0, 0) @[build/NutShell.fir.opt.mlir 55392:23]
    node _outSelVec_T_1 = bits(outSelVec_enc, 1, 1) @[build/NutShell.fir.opt.mlir 55394:25]
    node _outSelVec_T_2 = bits(outSelVec_enc, 2, 2) @[build/NutShell.fir.opt.mlir 55396:25]
    node _outSelVec_T_3 = bits(outSelVec_enc, 3, 3) @[build/NutShell.fir.opt.mlir 55398:25]
    node _outSelVec_T_4 = bits(outSelVec_enc, 4, 4) @[build/NutShell.fir.opt.mlir 55400:25]
    node _outSelVec_T_5 = bits(outSelVec_enc, 5, 5) @[build/NutShell.fir.opt.mlir 55402:25]
    node _outSelVec_T_6 = bits(outSelVec_enc, 6, 6) @[build/NutShell.fir.opt.mlir 55404:25]
    wire outSelVec : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55405:20]
    connect outSelVec[0], _outSelVec_T @[build/NutShell.fir.opt.mlir 55413:7]
    connect outSelVec[1], _outSelVec_T_1 @[build/NutShell.fir.opt.mlir 55414:7]
    connect outSelVec[2], _outSelVec_T_2 @[build/NutShell.fir.opt.mlir 55415:7]
    connect outSelVec[3], _outSelVec_T_3 @[build/NutShell.fir.opt.mlir 55416:7]
    connect outSelVec[4], _outSelVec_T_4 @[build/NutShell.fir.opt.mlir 55417:7]
    connect outSelVec[5], _outSelVec_T_5 @[build/NutShell.fir.opt.mlir 55418:7]
    connect outSelVec[6], _outSelVec_T_6 @[build/NutShell.fir.opt.mlir 55419:7]
    wire _outSelRespVec_WIRE : UInt<1>[7] @[build/NutShell.fir.opt.mlir 55420:30]
    connect _outSelRespVec_WIRE[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55430:7]
    connect _outSelRespVec_WIRE[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55432:7]
    connect _outSelRespVec_WIRE[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55434:7]
    connect _outSelRespVec_WIRE[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55436:7]
    connect _outSelRespVec_WIRE[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55438:7]
    connect _outSelRespVec_WIRE[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55440:7]
    connect _outSelRespVec_WIRE[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 55442:7]
    node _outSelRespVec_T = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55444:27]
    node _outSelRespVec_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55446:29]
    node _outSelRespVec_T_2 = and(_outSelRespVec_T, _outSelRespVec_T_1) @[build/NutShell.fir.opt.mlir 55448:29]
    regreset outSelRespVec : UInt<1>[7], clock, reset, _outSelRespVec_WIRE @[build/NutShell.fir.opt.mlir 55449:24]
    when _outSelRespVec_T_2 : @[build/NutShell.fir.opt.mlir 55457:7]
      connect outSelRespVec, outSelVec @[build/NutShell.fir.opt.mlir 55458:9]
    node reqInvalidAddr_lo_hi = cat(outSelVec[2], outSelVec[1]) @[build/NutShell.fir.opt.mlir 55461:31]
    node reqInvalidAddr_lo = cat(reqInvalidAddr_lo_hi, outSelVec[0]) @[build/NutShell.fir.opt.mlir 55463:28]
    node reqInvalidAddr_hi_lo = cat(outSelVec[4], outSelVec[3]) @[build/NutShell.fir.opt.mlir 55465:31]
    node reqInvalidAddr_hi_hi = cat(outSelVec[6], outSelVec[5]) @[build/NutShell.fir.opt.mlir 55467:31]
    node reqInvalidAddr_hi = cat(reqInvalidAddr_hi_hi, reqInvalidAddr_hi_lo) @[build/NutShell.fir.opt.mlir 55469:28]
    node _reqInvalidAddr_T = cat(reqInvalidAddr_hi, reqInvalidAddr_lo) @[build/NutShell.fir.opt.mlir 55471:28]
    node _reqInvalidAddr_T_1 = orr(_reqInvalidAddr_T) @[build/NutShell.fir.opt.mlir 55473:30]
    node _reqInvalidAddr_T_2 = eq(_reqInvalidAddr_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55475:30]
    node reqInvalidAddr = and(io.in.req.valid, _reqInvalidAddr_T_2) @[build/NutShell.fir.opt.mlir 55477:25]
    when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 55480:7]
      inst LogPerfHelper of LogPerfHelper_48 @[build/NutShell.fir.opt.mlir 55481:101]
      wire control : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 55482:20]
      connect control.dump, LogPerfHelper.dump @[build/NutShell.fir.opt.mlir 55487:9]
      connect control.clean, LogPerfHelper.clean @[build/NutShell.fir.opt.mlir 55488:9]
      connect control.logEnable, LogPerfHelper.logEnable @[build/NutShell.fir.opt.mlir 55489:9]
      connect control.timer, LogPerfHelper.timer @[build/NutShell.fir.opt.mlir 55490:9]
      node _T = and(UInt<1>(1), control.logEnable) @[build/NutShell.fir.opt.mlir 55492:15]
      when _T : @[build/NutShell.fir.opt.mlir 55493:9]
        regreset c : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55494:16]
        node _c_T = add(c, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55496:19]
        node _c_T_1 = tail(_c_T, 1) @[build/NutShell.fir.opt.mlir 55498:21]
        connect c, _c_T_1 @[build/NutShell.fir.opt.mlir 55499:11]
        node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55501:19]
        node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55503:19]
        when _T_2 : @[build/NutShell.fir.opt.mlir 55504:11]
          skip @[build/NutShell.fir.opt.mlir 55505:13]
    node _T_3 = eq(reqInvalidAddr, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55510:15]
    node _T_4 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55512:15]
    node _T_5 = eq(_T_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55514:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 55515:7]
      node _T_6 = eq(_T_3, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55517:17]
      when _T_6 : @[build/NutShell.fir.opt.mlir 55518:9]
        skip @[build/NutShell.fir.opt.mlir 55519:11]
      assert(clock, _T_3, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 55521:9]
    node _T_7 = eq(UInt<2>(0), state) @[build/NutShell.fir.opt.mlir 55524:15]
    when _T_7 : @[build/NutShell.fir.opt.mlir 55527:7]
      node _T_8 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55529:17]
      when _T_8 : @[build/NutShell.fir.opt.mlir 55530:9]
        connect state, UInt<2>(1) @[build/NutShell.fir.opt.mlir 55532:11]
      when reqInvalidAddr : @[build/NutShell.fir.opt.mlir 55534:9]
        connect state, UInt<2>(2) @[build/NutShell.fir.opt.mlir 55536:11]
    else :
      node _T_9 = eq(UInt<2>(1), state) @[build/NutShell.fir.opt.mlir 55540:17]
      when _T_9 : @[build/NutShell.fir.opt.mlir 55541:9]
        node _T_10 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55543:20]
        when _T_10 : @[build/NutShell.fir.opt.mlir 55544:11]
          connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55546:13]
      else :
        node _T_11 = eq(UInt<2>(2), state) @[build/NutShell.fir.opt.mlir 55550:20]
        when _T_11 : @[build/NutShell.fir.opt.mlir 55551:11]
          node _T_12 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55553:22]
          when _T_12 : @[build/NutShell.fir.opt.mlir 55554:13]
            connect state, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55556:15]
    node _io_in_req_ready_T = mux(outSelVec[0], io.out[0].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55562:29]
    node _io_in_req_ready_T_1 = mux(outSelVec[1], io.out[1].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55564:31]
    node _io_in_req_ready_T_2 = mux(outSelVec[2], io.out[2].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55566:31]
    node _io_in_req_ready_T_3 = mux(outSelVec[3], io.out[3].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55568:31]
    node _io_in_req_ready_T_4 = mux(outSelVec[4], io.out[4].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55570:31]
    node _io_in_req_ready_T_5 = mux(outSelVec[5], io.out[5].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55572:31]
    node _io_in_req_ready_T_6 = mux(outSelVec[6], io.out[6].req.ready, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55574:31]
    node _io_in_req_ready_T_7 = or(_io_in_req_ready_T, _io_in_req_ready_T_1) @[build/NutShell.fir.opt.mlir 55576:31]
    node _io_in_req_ready_T_8 = or(_io_in_req_ready_T_7, _io_in_req_ready_T_2) @[build/NutShell.fir.opt.mlir 55578:31]
    node _io_in_req_ready_T_9 = or(_io_in_req_ready_T_8, _io_in_req_ready_T_3) @[build/NutShell.fir.opt.mlir 55580:31]
    node _io_in_req_ready_T_10 = or(_io_in_req_ready_T_9, _io_in_req_ready_T_4) @[build/NutShell.fir.opt.mlir 55582:32]
    node _io_in_req_ready_T_11 = or(_io_in_req_ready_T_10, _io_in_req_ready_T_5) @[build/NutShell.fir.opt.mlir 55584:32]
    node _io_in_req_ready_T_12 = or(_io_in_req_ready_T_11, _io_in_req_ready_T_6) @[build/NutShell.fir.opt.mlir 55586:32]
    wire _io_in_req_ready_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 55587:32]
    connect _io_in_req_ready_WIRE, _io_in_req_ready_T_12 @[build/NutShell.fir.opt.mlir 55588:7]
    node _io_in_req_ready_T_13 = or(_io_in_req_ready_WIRE, reqInvalidAddr) @[build/NutShell.fir.opt.mlir 55590:32]
    connect io.in.req.ready, _io_in_req_ready_T_13 @[build/NutShell.fir.opt.mlir 55591:7]
    node _io_out_0_req_valid_T = and(outSelVec[0], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55593:32]
    node _io_out_0_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55595:34]
    node _io_out_0_req_valid_T_2 = and(_io_out_0_req_valid_T, _io_out_0_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55597:34]
    connect io.out[0].req.valid, _io_out_0_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55598:7]
    connect io.out[0].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55599:7]
    node _io_out_1_req_valid_T = and(outSelVec[1], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55601:32]
    node _io_out_1_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55603:34]
    node _io_out_1_req_valid_T_2 = and(_io_out_1_req_valid_T, _io_out_1_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55605:34]
    connect io.out[1].req.valid, _io_out_1_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55606:7]
    connect io.out[1].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55607:7]
    node _io_out_2_req_valid_T = and(outSelVec[2], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55609:32]
    node _io_out_2_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55611:34]
    node _io_out_2_req_valid_T_2 = and(_io_out_2_req_valid_T, _io_out_2_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55613:34]
    connect io.out[2].req.valid, _io_out_2_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55614:7]
    connect io.out[2].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55615:7]
    node _io_out_3_req_valid_T = and(outSelVec[3], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55617:32]
    node _io_out_3_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55619:34]
    node _io_out_3_req_valid_T_2 = and(_io_out_3_req_valid_T, _io_out_3_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55621:34]
    connect io.out[3].req.valid, _io_out_3_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55622:7]
    connect io.out[3].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55623:7]
    node _io_out_4_req_valid_T = and(outSelVec[4], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55625:32]
    node _io_out_4_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55627:34]
    node _io_out_4_req_valid_T_2 = and(_io_out_4_req_valid_T, _io_out_4_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55629:34]
    connect io.out[4].req.valid, _io_out_4_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55630:7]
    connect io.out[4].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55631:7]
    node _io_out_5_req_valid_T = and(outSelVec[5], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55633:32]
    node _io_out_5_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55635:34]
    node _io_out_5_req_valid_T_2 = and(_io_out_5_req_valid_T, _io_out_5_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55637:34]
    connect io.out[5].req.valid, _io_out_5_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55638:7]
    connect io.out[5].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55639:7]
    node _io_out_6_req_valid_T = and(outSelVec[6], io.in.req.valid) @[build/NutShell.fir.opt.mlir 55641:32]
    node _io_out_6_req_valid_T_1 = eq(state, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 55643:34]
    node _io_out_6_req_valid_T_2 = and(_io_out_6_req_valid_T, _io_out_6_req_valid_T_1) @[build/NutShell.fir.opt.mlir 55645:34]
    connect io.out[6].req.valid, _io_out_6_req_valid_T_2 @[build/NutShell.fir.opt.mlir 55646:7]
    connect io.out[6].req.bits, io.in.req.bits @[build/NutShell.fir.opt.mlir 55647:7]
    node _io_out_0_resp_ready_T = and(outSelRespVec[0], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55649:33]
    node _io_out_0_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55651:35]
    node _io_out_0_resp_ready_T_2 = and(_io_out_0_resp_ready_T, _io_out_0_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55653:35]
    connect io.out[0].resp.ready, _io_out_0_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55654:7]
    node _io_out_1_resp_ready_T = and(outSelRespVec[1], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55656:33]
    node _io_out_1_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55658:35]
    node _io_out_1_resp_ready_T_2 = and(_io_out_1_resp_ready_T, _io_out_1_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55660:35]
    connect io.out[1].resp.ready, _io_out_1_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55661:7]
    node _io_out_2_resp_ready_T = and(outSelRespVec[2], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55663:33]
    node _io_out_2_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55665:35]
    node _io_out_2_resp_ready_T_2 = and(_io_out_2_resp_ready_T, _io_out_2_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55667:35]
    connect io.out[2].resp.ready, _io_out_2_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55668:7]
    node _io_out_3_resp_ready_T = and(outSelRespVec[3], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55670:33]
    node _io_out_3_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55672:35]
    node _io_out_3_resp_ready_T_2 = and(_io_out_3_resp_ready_T, _io_out_3_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55674:35]
    connect io.out[3].resp.ready, _io_out_3_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55675:7]
    node _io_out_4_resp_ready_T = and(outSelRespVec[4], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55677:33]
    node _io_out_4_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55679:35]
    node _io_out_4_resp_ready_T_2 = and(_io_out_4_resp_ready_T, _io_out_4_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55681:35]
    connect io.out[4].resp.ready, _io_out_4_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55682:7]
    node _io_out_5_resp_ready_T = and(outSelRespVec[5], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55684:33]
    node _io_out_5_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55686:35]
    node _io_out_5_resp_ready_T_2 = and(_io_out_5_resp_ready_T, _io_out_5_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55688:35]
    connect io.out[5].resp.ready, _io_out_5_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55689:7]
    node _io_out_6_resp_ready_T = and(outSelRespVec[6], io.in.resp.ready) @[build/NutShell.fir.opt.mlir 55691:33]
    node _io_out_6_resp_ready_T_1 = eq(state, UInt<2>(1)) @[build/NutShell.fir.opt.mlir 55693:35]
    node _io_out_6_resp_ready_T_2 = and(_io_out_6_resp_ready_T, _io_out_6_resp_ready_T_1) @[build/NutShell.fir.opt.mlir 55695:35]
    connect io.out[6].resp.ready, _io_out_6_resp_ready_T_2 @[build/NutShell.fir.opt.mlir 55696:7]
    node _io_in_resp_valid_T = mux(outSelRespVec[0], io.out[0].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55698:30]
    node _io_in_resp_valid_T_1 = mux(outSelRespVec[1], io.out[1].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55700:32]
    node _io_in_resp_valid_T_2 = mux(outSelRespVec[2], io.out[2].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55702:32]
    node _io_in_resp_valid_T_3 = mux(outSelRespVec[3], io.out[3].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55704:32]
    node _io_in_resp_valid_T_4 = mux(outSelRespVec[4], io.out[4].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55706:32]
    node _io_in_resp_valid_T_5 = mux(outSelRespVec[5], io.out[5].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55708:32]
    node _io_in_resp_valid_T_6 = mux(outSelRespVec[6], io.out[6].resp.valid, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55710:32]
    node _io_in_resp_valid_T_7 = or(_io_in_resp_valid_T, _io_in_resp_valid_T_1) @[build/NutShell.fir.opt.mlir 55712:32]
    node _io_in_resp_valid_T_8 = or(_io_in_resp_valid_T_7, _io_in_resp_valid_T_2) @[build/NutShell.fir.opt.mlir 55714:32]
    node _io_in_resp_valid_T_9 = or(_io_in_resp_valid_T_8, _io_in_resp_valid_T_3) @[build/NutShell.fir.opt.mlir 55716:32]
    node _io_in_resp_valid_T_10 = or(_io_in_resp_valid_T_9, _io_in_resp_valid_T_4) @[build/NutShell.fir.opt.mlir 55718:33]
    node _io_in_resp_valid_T_11 = or(_io_in_resp_valid_T_10, _io_in_resp_valid_T_5) @[build/NutShell.fir.opt.mlir 55720:33]
    node _io_in_resp_valid_T_12 = or(_io_in_resp_valid_T_11, _io_in_resp_valid_T_6) @[build/NutShell.fir.opt.mlir 55722:33]
    wire _io_in_resp_valid_WIRE : UInt<1> @[build/NutShell.fir.opt.mlir 55723:33]
    connect _io_in_resp_valid_WIRE, _io_in_resp_valid_T_12 @[build/NutShell.fir.opt.mlir 55724:7]
    node _io_in_resp_valid_T_13 = eq(state, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 55726:33]
    node _io_in_resp_valid_T_14 = or(_io_in_resp_valid_WIRE, _io_in_resp_valid_T_13) @[build/NutShell.fir.opt.mlir 55728:33]
    connect io.in.resp.valid, _io_in_resp_valid_T_14 @[build/NutShell.fir.opt.mlir 55729:7]
    wire _io_in_resp_bits_WIRE : { cmd : UInt<4>, rdata : UInt<64> } @[build/NutShell.fir.opt.mlir 55730:32]
    node _io_in_resp_bits_T = mux(outSelRespVec[0], io.out[0].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55734:29]
    node _io_in_resp_bits_T_1 = mux(outSelRespVec[1], io.out[1].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55736:31]
    node _io_in_resp_bits_T_2 = mux(outSelRespVec[2], io.out[2].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55738:31]
    node _io_in_resp_bits_T_3 = mux(outSelRespVec[3], io.out[3].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55740:31]
    node _io_in_resp_bits_T_4 = mux(outSelRespVec[4], io.out[4].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55742:31]
    node _io_in_resp_bits_T_5 = mux(outSelRespVec[5], io.out[5].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55744:31]
    node _io_in_resp_bits_T_6 = mux(outSelRespVec[6], io.out[6].resp.bits.rdata, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55746:31]
    node _io_in_resp_bits_T_7 = or(_io_in_resp_bits_T, _io_in_resp_bits_T_1) @[build/NutShell.fir.opt.mlir 55748:31]
    node _io_in_resp_bits_T_8 = or(_io_in_resp_bits_T_7, _io_in_resp_bits_T_2) @[build/NutShell.fir.opt.mlir 55750:31]
    node _io_in_resp_bits_T_9 = or(_io_in_resp_bits_T_8, _io_in_resp_bits_T_3) @[build/NutShell.fir.opt.mlir 55752:31]
    node _io_in_resp_bits_T_10 = or(_io_in_resp_bits_T_9, _io_in_resp_bits_T_4) @[build/NutShell.fir.opt.mlir 55754:32]
    node _io_in_resp_bits_T_11 = or(_io_in_resp_bits_T_10, _io_in_resp_bits_T_5) @[build/NutShell.fir.opt.mlir 55756:32]
    node _io_in_resp_bits_T_12 = or(_io_in_resp_bits_T_11, _io_in_resp_bits_T_6) @[build/NutShell.fir.opt.mlir 55758:32]
    wire _io_in_resp_bits_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 55759:34]
    connect _io_in_resp_bits_WIRE_1, _io_in_resp_bits_T_12 @[build/NutShell.fir.opt.mlir 55760:7]
    connect _io_in_resp_bits_WIRE.rdata, _io_in_resp_bits_WIRE_1 @[build/NutShell.fir.opt.mlir 55761:7]
    node _io_in_resp_bits_T_13 = mux(outSelRespVec[0], io.out[0].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55763:32]
    node _io_in_resp_bits_T_14 = mux(outSelRespVec[1], io.out[1].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55765:32]
    node _io_in_resp_bits_T_15 = mux(outSelRespVec[2], io.out[2].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55767:32]
    node _io_in_resp_bits_T_16 = mux(outSelRespVec[3], io.out[3].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55769:32]
    node _io_in_resp_bits_T_17 = mux(outSelRespVec[4], io.out[4].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55771:32]
    node _io_in_resp_bits_T_18 = mux(outSelRespVec[5], io.out[5].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55773:32]
    node _io_in_resp_bits_T_19 = mux(outSelRespVec[6], io.out[6].resp.bits.cmd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55775:32]
    node _io_in_resp_bits_T_20 = or(_io_in_resp_bits_T_13, _io_in_resp_bits_T_14) @[build/NutShell.fir.opt.mlir 55777:32]
    node _io_in_resp_bits_T_21 = or(_io_in_resp_bits_T_20, _io_in_resp_bits_T_15) @[build/NutShell.fir.opt.mlir 55779:32]
    node _io_in_resp_bits_T_22 = or(_io_in_resp_bits_T_21, _io_in_resp_bits_T_16) @[build/NutShell.fir.opt.mlir 55781:32]
    node _io_in_resp_bits_T_23 = or(_io_in_resp_bits_T_22, _io_in_resp_bits_T_17) @[build/NutShell.fir.opt.mlir 55783:32]
    node _io_in_resp_bits_T_24 = or(_io_in_resp_bits_T_23, _io_in_resp_bits_T_18) @[build/NutShell.fir.opt.mlir 55785:32]
    node _io_in_resp_bits_T_25 = or(_io_in_resp_bits_T_24, _io_in_resp_bits_T_19) @[build/NutShell.fir.opt.mlir 55787:32]
    wire _io_in_resp_bits_WIRE_2 : UInt<4> @[build/NutShell.fir.opt.mlir 55788:34]
    connect _io_in_resp_bits_WIRE_2, _io_in_resp_bits_T_25 @[build/NutShell.fir.opt.mlir 55789:7]
    connect _io_in_resp_bits_WIRE.cmd, _io_in_resp_bits_WIRE_2 @[build/NutShell.fir.opt.mlir 55790:7]
    connect io.in.resp.bits, _io_in_resp_bits_WIRE @[build/NutShell.fir.opt.mlir 55791:7]
    inst LogPerfHelper_1 of LogPerfHelper_49 @[build/NutShell.fir.opt.mlir 55792:107]
    wire control_1 : { timer : UInt<64>, logEnable : UInt<1>, clean : UInt<1>, dump : UInt<1> } @[build/NutShell.fir.opt.mlir 55793:20]
    connect control_1.dump, LogPerfHelper_1.dump @[build/NutShell.fir.opt.mlir 55798:7]
    connect control_1.clean, LogPerfHelper_1.clean @[build/NutShell.fir.opt.mlir 55799:7]
    connect control_1.logEnable, LogPerfHelper_1.logEnable @[build/NutShell.fir.opt.mlir 55800:7]
    connect control_1.timer, LogPerfHelper_1.timer @[build/NutShell.fir.opt.mlir 55801:7]
    node _T_13 = and(UInt<1>(1), control_1.logEnable) @[build/NutShell.fir.opt.mlir 55803:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 55804:7]
      node _T_14 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 55806:18]
      when _T_14 : @[build/NutShell.fir.opt.mlir 55807:9]
        regreset c_1 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55808:18]
        node _c_T_2 = add(c_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55810:21]
        node _c_T_3 = tail(_c_T_2, 1) @[build/NutShell.fir.opt.mlir 55812:21]
        connect c_1, _c_T_3 @[build/NutShell.fir.opt.mlir 55813:11]
        node _T_15 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55815:20]
        node _T_16 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55817:20]
        when _T_16 : @[build/NutShell.fir.opt.mlir 55818:11]
          skip @[build/NutShell.fir.opt.mlir 55819:13]
      node _T_17 = and(io.in.resp.ready, io.in.resp.valid) @[build/NutShell.fir.opt.mlir 55823:18]
      when _T_17 : @[build/NutShell.fir.opt.mlir 55824:9]
        regreset c_2 : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 55825:18]
        node _c_T_4 = add(c_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55827:21]
        node _c_T_5 = tail(_c_T_4, 1) @[build/NutShell.fir.opt.mlir 55829:21]
        connect c_2, _c_T_5 @[build/NutShell.fir.opt.mlir 55830:11]
        node _T_18 = asUInt(reset) @[build/NutShell.fir.opt.mlir 55832:20]
        node _T_19 = eq(_T_18, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55834:20]
        when _T_19 : @[build/NutShell.fir.opt.mlir 55835:11]
          skip @[build/NutShell.fir.opt.mlir 55836:13]

  module AXI4UART : @[build/NutShell.fir.opt.mlir 55841:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 55841:40]
    input reset : Reset @[build/NutShell.fir.opt.mlir 55841:66]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 55841:93]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 55878:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 55880:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 55882:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 55884:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 55886:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 55888:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 55890:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 55892:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55896:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55898:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55900:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55902:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55904:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55906:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55908:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 55910:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 55912:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 55914:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 55916:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 55918:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 55920:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 55922:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 55924:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 55925:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 55926:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 55927:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55929:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55931:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 55934:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55936:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 55937:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55939:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 55941:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55943:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55946:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 55948:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 55949:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 55952:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55954:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55955:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 55956:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55958:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 55960:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 55962:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 55964:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 55965:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 55967:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 55969:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 55971:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 55973:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55974:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 55975:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55977:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 55979:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55981:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 55983:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 55984:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 55985:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 55987:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 55989:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55990:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 55991:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 55993:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 55995:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 55997:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56000:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 56001:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 56003:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 56004:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56006:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56008:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56010:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56012:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56013:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 56014:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56016:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 56018:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56020:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 56022:7]
    regreset rxfifo : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 56024:17]
    reg txfifo : UInt<32>, clock @[build/NutShell.fir.opt.mlir 56025:17]
    regreset stat : UInt<32>, clock, reset, UInt<32>(1) @[build/NutShell.fir.opt.mlir 56027:15]
    regreset ctrl : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 56028:15]
    node _io_extra_out_valid_T = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 56030:32]
    node _io_extra_out_valid_T_1 = eq(_io_extra_out_valid_T, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 56033:34]
    node _io_extra_out_valid_T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56035:34]
    node _io_extra_out_valid_T_3 = and(_io_extra_out_valid_T_1, _io_extra_out_valid_T_2) @[build/NutShell.fir.opt.mlir 56037:34]
    connect io.extra.out.valid, _io_extra_out_valid_T_3 @[build/NutShell.fir.opt.mlir 56038:7]
    node _io_extra_out_ch_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 56040:29]
    connect io.extra.out.ch, _io_extra_out_ch_T @[build/NutShell.fir.opt.mlir 56041:7]
    node _io_extra_in_valid_T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 56043:31]
    node _io_extra_in_valid_T_1 = eq(_io_extra_in_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56045:33]
    node _io_extra_in_valid_T_2 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56047:33]
    node _io_extra_in_valid_T_3 = and(_io_extra_in_valid_T_1, _io_extra_in_valid_T_2) @[build/NutShell.fir.opt.mlir 56049:33]
    connect io.extra.in.valid, _io_extra_in_valid_T_3 @[build/NutShell.fir.opt.mlir 56050:7]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 56052:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 56054:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56056:15]
    node _T_3 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 56058:15]
    node _T_4 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 56060:15]
    node _T_5 = dshr(io.in.w.bits.strb, _T_4) @[build/NutShell.fir.opt.mlir 56062:15]
    node _T_6 = bits(_T_5, 0, 0) @[build/NutShell.fir.opt.mlir 56064:15]
    node _T_7 = bits(_T_5, 1, 1) @[build/NutShell.fir.opt.mlir 56066:15]
    node _T_8 = bits(_T_5, 2, 2) @[build/NutShell.fir.opt.mlir 56068:15]
    node _T_9 = bits(_T_5, 3, 3) @[build/NutShell.fir.opt.mlir 56070:15]
    node _T_10 = bits(_T_5, 4, 4) @[build/NutShell.fir.opt.mlir 56072:16]
    node _T_11 = bits(_T_5, 5, 5) @[build/NutShell.fir.opt.mlir 56074:16]
    node _T_12 = bits(_T_5, 6, 6) @[build/NutShell.fir.opt.mlir 56076:16]
    node _T_13 = bits(_T_5, 7, 7) @[build/NutShell.fir.opt.mlir 56078:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56080:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56082:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56084:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56086:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56088:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56090:16]
    node _T_20 = mux(_T_12, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56092:16]
    node _T_21 = mux(_T_13, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56094:16]
    node lo_lo = cat(_T_15, _T_14) @[build/NutShell.fir.opt.mlir 56096:16]
    node lo_hi = cat(_T_17, _T_16) @[build/NutShell.fir.opt.mlir 56098:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 56100:13]
    node hi_lo = cat(_T_19, _T_18) @[build/NutShell.fir.opt.mlir 56102:16]
    node hi_hi = cat(_T_21, _T_20) @[build/NutShell.fir.opt.mlir 56104:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 56106:13]
    node _T_22 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 56108:16]
    node _T_23 = bits(_T_22, 31, 0) @[build/NutShell.fir.opt.mlir 56110:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 56112:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 56114:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<4>(8), _T) @[build/NutShell.fir.opt.mlir 56117:33]
    node _io_in_r_bits_data_T_3 = eq(UInt<4>(12), _T) @[build/NutShell.fir.opt.mlir 56120:33]
    node _io_in_r_bits_data_T_4 = mux(_io_in_r_bits_data_T, io.extra.in.ch, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56122:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T_1, txfifo, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56124:33]
    node _io_in_r_bits_data_T_6 = mux(_io_in_r_bits_data_T_2, stat, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56126:33]
    node _io_in_r_bits_data_T_7 = mux(_io_in_r_bits_data_T_3, ctrl, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56128:33]
    node _io_in_r_bits_data_T_8 = or(_io_in_r_bits_data_T_4, _io_in_r_bits_data_T_5) @[build/NutShell.fir.opt.mlir 56130:33]
    node _io_in_r_bits_data_T_9 = or(_io_in_r_bits_data_T_8, _io_in_r_bits_data_T_6) @[build/NutShell.fir.opt.mlir 56132:33]
    node _io_in_r_bits_data_T_10 = or(_io_in_r_bits_data_T_9, _io_in_r_bits_data_T_7) @[build/NutShell.fir.opt.mlir 56134:34]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 56135:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_10 @[build/NutShell.fir.opt.mlir 56136:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 56138:7]
    node _T_24 = eq(_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 56140:16]
    node _T_25 = and(_T_2, _T_24) @[build/NutShell.fir.opt.mlir 56142:16]
    when _T_25 : @[build/NutShell.fir.opt.mlir 56143:7]
      node _txfifo_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56145:22]
      node _txfifo_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56147:24]
      node _txfifo_T_2 = and(txfifo, _txfifo_T_1) @[build/NutShell.fir.opt.mlir 56149:24]
      node _txfifo_T_3 = or(_txfifo_T, _txfifo_T_2) @[build/NutShell.fir.opt.mlir 56151:24]
      connect txfifo, _txfifo_T_3 @[build/NutShell.fir.opt.mlir 56152:9]
    node _T_26 = eq(_T_1, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 56155:16]
    node _T_27 = and(_T_2, _T_26) @[build/NutShell.fir.opt.mlir 56157:16]
    when _T_27 : @[build/NutShell.fir.opt.mlir 56158:7]
      node _stat_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56160:20]
      node _stat_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56162:22]
      node _stat_T_2 = and(stat, _stat_T_1) @[build/NutShell.fir.opt.mlir 56164:22]
      node _stat_T_3 = or(_stat_T, _stat_T_2) @[build/NutShell.fir.opt.mlir 56166:22]
      connect stat, _stat_T_3 @[build/NutShell.fir.opt.mlir 56167:9]
    node _T_28 = eq(_T_1, UInt<4>(12)) @[build/NutShell.fir.opt.mlir 56170:16]
    node _T_29 = and(_T_2, _T_28) @[build/NutShell.fir.opt.mlir 56172:16]
    when _T_29 : @[build/NutShell.fir.opt.mlir 56173:7]
      node _ctrl_T = and(_T_3, _T_23) @[build/NutShell.fir.opt.mlir 56175:20]
      node _ctrl_T_1 = not(_T_23) @[build/NutShell.fir.opt.mlir 56177:22]
      node _ctrl_T_2 = and(ctrl, _ctrl_T_1) @[build/NutShell.fir.opt.mlir 56179:22]
      node _ctrl_T_3 = or(_ctrl_T, _ctrl_T_2) @[build/NutShell.fir.opt.mlir 56181:22]
      connect ctrl, _ctrl_T_3 @[build/NutShell.fir.opt.mlir 56182:9]

  module VGACtrl : @[build/NutShell.fir.opt.mlir 56185:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56185:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56185:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { sync : UInt<1> } } @[build/NutShell.fir.opt.mlir 56185:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56216:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56218:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56220:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56222:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56224:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56226:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56228:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56230:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56234:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56236:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56238:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56240:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56242:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56244:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56246:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56248:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 56250:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 56252:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 56254:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 56256:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 56258:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 56260:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 56262:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 56263:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 56264:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 56265:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56267:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56269:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56272:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56274:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 56275:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56277:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 56279:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56281:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56284:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 56286:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 56287:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56290:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56292:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56293:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 56294:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56296:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56298:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 56300:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 56302:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 56303:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56305:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 56307:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 56309:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56311:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56312:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 56313:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56315:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 56317:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56319:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 56321:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 56322:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 56323:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56325:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56327:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56328:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 56329:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56331:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 56333:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56335:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56338:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 56339:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 56341:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 56342:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56344:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56346:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56348:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56350:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56351:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 56352:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56354:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 56356:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56358:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 56360:7]
    node fbSizeReg = cat(UInt<16>(400), UInt<16>(300)) @[build/NutShell.fir.opt.mlir 56364:20]
    node sync = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56366:15]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 56368:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 56370:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56372:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56374:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56376:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56378:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56380:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56382:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56384:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56386:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56388:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56390:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56392:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56394:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56396:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56398:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56400:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56402:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56404:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 56406:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 56408:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 56410:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 56412:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 56414:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 56416:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 56418:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 56420:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 56423:33]
    node _io_in_r_bits_data_T_2 = mux(_io_in_r_bits_data_T, fbSizeReg, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56425:33]
    node _io_in_r_bits_data_T_3 = mux(_io_in_r_bits_data_T_1, sync, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56427:33]
    node _io_in_r_bits_data_T_4 = or(_io_in_r_bits_data_T_2, _io_in_r_bits_data_T_3) @[build/NutShell.fir.opt.mlir 56429:33]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 56430:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_4 @[build/NutShell.fir.opt.mlir 56431:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 56433:7]
    connect io.extra.sync, sync @[build/NutShell.fir.opt.mlir 56434:7]

  module AXI4RAM_1 : @[build/NutShell.fir.opt.mlir 56436:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56436:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56436:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 56436:94]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56472:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56474:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56476:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56478:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56480:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56482:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56484:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56486:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56490:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56492:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56494:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56496:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56498:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56500:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56502:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 56504:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 56506:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 56508:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 56510:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 56512:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 56514:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 56516:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 56518:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 56519:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 56520:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 56521:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56523:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56525:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56528:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56530:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 56531:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56533:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 56535:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56537:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56540:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 56542:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 56543:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56546:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56548:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56549:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 56550:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56552:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56554:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 56556:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 56558:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 56559:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 56561:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 56563:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 56565:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 56567:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56568:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 56569:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56571:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 56573:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56575:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 56577:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 56578:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 56579:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 56581:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56583:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56584:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 56585:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56587:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 56589:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56591:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56594:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 56595:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 56597:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 56598:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56600:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56602:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56604:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 56606:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56607:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 56608:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56610:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 56612:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56614:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 56616:7]
    node _wIdx_T = bits(waddr, 18, 3) @[build/NutShell.fir.opt.mlir 56618:18]
    node _wIdx_T_1 = add(_wIdx_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56620:20]
    node wIdx = tail(_wIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 56622:15]
    node _rIdx_T = bits(raddr, 18, 3) @[build/NutShell.fir.opt.mlir 56624:18]
    node _rIdx_T_1 = add(_rIdx_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 56626:20]
    node rIdx = tail(_rIdx_T_1, 1) @[build/NutShell.fir.opt.mlir 56628:15]
    node _wen_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 56630:17]
    node _wen_T_1 = lt(wIdx, UInt<16>(60000)) @[build/NutShell.fir.opt.mlir 56633:19]
    node wen = and(_wen_T, _wen_T_1) @[build/NutShell.fir.opt.mlir 56635:14]
    mem rdata_mem : @[build/NutShell.fir.opt.mlir 56636:58]
      data-type => UInt<8>[8]
      depth => 60000
      read-latency => 0
      write-latency => 1
      reader => rdata_MPORT_1
      writer => rdata_MPORT
      read-under-write => undefined
    invalidate rdata_mem.rdata_MPORT.addr @[build/NutShell.fir.opt.mlir 56638:7]
    connect rdata_mem.rdata_MPORT.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56640:7]
    invalidate rdata_mem.rdata_MPORT.clk @[build/NutShell.fir.opt.mlir 56642:7]
    invalidate rdata_mem.rdata_MPORT.data @[build/NutShell.fir.opt.mlir 56644:7]
    invalidate rdata_mem.rdata_MPORT.mask @[build/NutShell.fir.opt.mlir 56646:7]
    invalidate rdata_mem.rdata_MPORT_1.addr @[build/NutShell.fir.opt.mlir 56648:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56650:7]
    invalidate rdata_mem.rdata_MPORT_1.clk @[build/NutShell.fir.opt.mlir 56652:7]
    node _rdata_wdata_T = bits(io.in.w.bits.data, 7, 0) @[build/NutShell.fir.opt.mlir 56679:25]
    node _rdata_wdata_T_1 = bits(io.in.w.bits.data, 15, 8) @[build/NutShell.fir.opt.mlir 56681:27]
    node _rdata_wdata_T_2 = bits(io.in.w.bits.data, 23, 16) @[build/NutShell.fir.opt.mlir 56683:27]
    node _rdata_wdata_T_3 = bits(io.in.w.bits.data, 31, 24) @[build/NutShell.fir.opt.mlir 56685:27]
    node _rdata_wdata_T_4 = bits(io.in.w.bits.data, 39, 32) @[build/NutShell.fir.opt.mlir 56687:27]
    node _rdata_wdata_T_5 = bits(io.in.w.bits.data, 47, 40) @[build/NutShell.fir.opt.mlir 56689:27]
    node _rdata_wdata_T_6 = bits(io.in.w.bits.data, 55, 48) @[build/NutShell.fir.opt.mlir 56691:27]
    node _rdata_wdata_T_7 = bits(io.in.w.bits.data, 63, 56) @[build/NutShell.fir.opt.mlir 56693:27]
    wire rdata_wdata : UInt<8>[8] @[build/NutShell.fir.opt.mlir 56694:22]
    connect rdata_wdata[0], _rdata_wdata_T @[build/NutShell.fir.opt.mlir 56703:7]
    connect rdata_wdata[1], _rdata_wdata_T_1 @[build/NutShell.fir.opt.mlir 56704:7]
    connect rdata_wdata[2], _rdata_wdata_T_2 @[build/NutShell.fir.opt.mlir 56705:7]
    connect rdata_wdata[3], _rdata_wdata_T_3 @[build/NutShell.fir.opt.mlir 56706:7]
    connect rdata_wdata[4], _rdata_wdata_T_4 @[build/NutShell.fir.opt.mlir 56707:7]
    connect rdata_wdata[5], _rdata_wdata_T_5 @[build/NutShell.fir.opt.mlir 56708:7]
    connect rdata_wdata[6], _rdata_wdata_T_6 @[build/NutShell.fir.opt.mlir 56709:7]
    connect rdata_wdata[7], _rdata_wdata_T_7 @[build/NutShell.fir.opt.mlir 56710:7]
    when wen : @[build/NutShell.fir.opt.mlir 56711:7]
      node _rdata_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 56713:21]
      node _rdata_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 56715:23]
      node _rdata_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 56717:23]
      node _rdata_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 56719:23]
      node _rdata_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 56721:23]
      node _rdata_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 56723:23]
      node _rdata_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 56725:23]
      node _rdata_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 56727:23]
      connect rdata_mem.rdata_MPORT.addr, wIdx @[build/NutShell.fir.opt.mlir 56728:9]
      connect rdata_mem.rdata_MPORT.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56729:9]
      connect rdata_mem.rdata_MPORT.clk, clock @[build/NutShell.fir.opt.mlir 56730:9]
      connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56732:9]
      connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56734:9]
      connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56736:9]
      connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56738:9]
      connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56740:9]
      connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56742:9]
      connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56744:9]
      connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(0) @[build/NutShell.fir.opt.mlir 56746:9]
      when _rdata_T : @[build/NutShell.fir.opt.mlir 56747:9]
        connect rdata_mem.rdata_MPORT.mask[0], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56748:11]
        connect rdata_mem.rdata_MPORT.data[0], rdata_wdata[0] @[build/NutShell.fir.opt.mlir 56749:11]
      when _rdata_T_1 : @[build/NutShell.fir.opt.mlir 56751:9]
        connect rdata_mem.rdata_MPORT.mask[1], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56752:11]
        connect rdata_mem.rdata_MPORT.data[1], rdata_wdata[1] @[build/NutShell.fir.opt.mlir 56753:11]
      when _rdata_T_2 : @[build/NutShell.fir.opt.mlir 56755:9]
        connect rdata_mem.rdata_MPORT.mask[2], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56756:11]
        connect rdata_mem.rdata_MPORT.data[2], rdata_wdata[2] @[build/NutShell.fir.opt.mlir 56757:11]
      when _rdata_T_3 : @[build/NutShell.fir.opt.mlir 56759:9]
        connect rdata_mem.rdata_MPORT.mask[3], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56760:11]
        connect rdata_mem.rdata_MPORT.data[3], rdata_wdata[3] @[build/NutShell.fir.opt.mlir 56761:11]
      when _rdata_T_4 : @[build/NutShell.fir.opt.mlir 56763:9]
        connect rdata_mem.rdata_MPORT.mask[4], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56764:11]
        connect rdata_mem.rdata_MPORT.data[4], rdata_wdata[4] @[build/NutShell.fir.opt.mlir 56765:11]
      when _rdata_T_5 : @[build/NutShell.fir.opt.mlir 56767:9]
        connect rdata_mem.rdata_MPORT.mask[5], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56768:11]
        connect rdata_mem.rdata_MPORT.data[5], rdata_wdata[5] @[build/NutShell.fir.opt.mlir 56769:11]
      when _rdata_T_6 : @[build/NutShell.fir.opt.mlir 56771:9]
        connect rdata_mem.rdata_MPORT.mask[6], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56772:11]
        connect rdata_mem.rdata_MPORT.data[6], rdata_wdata[6] @[build/NutShell.fir.opt.mlir 56773:11]
      when _rdata_T_7 : @[build/NutShell.fir.opt.mlir 56775:9]
        connect rdata_mem.rdata_MPORT.mask[7], UInt<1>(1) @[build/NutShell.fir.opt.mlir 56776:11]
        connect rdata_mem.rdata_MPORT.data[7], rdata_wdata[7] @[build/NutShell.fir.opt.mlir 56777:11]
    connect rdata_mem.rdata_MPORT_1.addr, rIdx @[build/NutShell.fir.opt.mlir 56780:7]
    connect rdata_mem.rdata_MPORT_1.en, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56781:7]
    connect rdata_mem.rdata_MPORT_1.clk, clock @[build/NutShell.fir.opt.mlir 56782:7]
    node rdata_lo_lo = cat(rdata_mem.rdata_MPORT_1.data[1], rdata_mem.rdata_MPORT_1.data[0]) @[build/NutShell.fir.opt.mlir 56784:22]
    node rdata_lo_hi = cat(rdata_mem.rdata_MPORT_1.data[3], rdata_mem.rdata_MPORT_1.data[2]) @[build/NutShell.fir.opt.mlir 56786:22]
    node rdata_lo = cat(rdata_lo_hi, rdata_lo_lo) @[build/NutShell.fir.opt.mlir 56788:19]
    node rdata_hi_lo = cat(rdata_mem.rdata_MPORT_1.data[5], rdata_mem.rdata_MPORT_1.data[4]) @[build/NutShell.fir.opt.mlir 56790:22]
    node rdata_hi_hi = cat(rdata_mem.rdata_MPORT_1.data[7], rdata_mem.rdata_MPORT_1.data[6]) @[build/NutShell.fir.opt.mlir 56792:22]
    node rdata_hi = cat(rdata_hi_hi, rdata_hi_lo) @[build/NutShell.fir.opt.mlir 56794:19]
    node _rdata_T_8 = cat(rdata_hi, rdata_lo) @[build/NutShell.fir.opt.mlir 56796:21]
    reg rdata : UInt<64>, clock @[build/NutShell.fir.opt.mlir 56797:16]
    when ren : @[build/NutShell.fir.opt.mlir 56798:7]
      connect rdata, _rdata_T_8 @[build/NutShell.fir.opt.mlir 56799:9]
    connect io.in.r.bits.data, rdata @[build/NutShell.fir.opt.mlir 56801:7]

  extmodule FBHelper : @[build/NutShell.fir.opt.mlir 56803:5]
    input clk : Clock @[build/NutShell.fir.opt.mlir 56803:43]
    input valid : UInt<1> @[build/NutShell.fir.opt.mlir 56803:66]
    input pixel : UInt<32> @[build/NutShell.fir.opt.mlir 56803:93]
    input sync : UInt<1> @[build/NutShell.fir.opt.mlir 56803:121]
    defname = FBHelper

  module AXI4VGA : @[build/NutShell.fir.opt.mlir 56804:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 56804:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 56804:65]
    output io : { in : { flip fb : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, flip ctrl : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } }, vga : { rgb : UInt<24>, hsync : UInt<1>, vsync : UInt<1>, valid : UInt<1> } } @[build/NutShell.fir.opt.mlir 56804:92]

    inst ctrl of VGACtrl @[build/NutShell.fir.opt.mlir 56854:44]
    connect ctrl.clock, clock @[build/NutShell.fir.opt.mlir 56878:7]
    connect ctrl.reset, reset @[build/NutShell.fir.opt.mlir 56879:7]
    connect io.in.ctrl.aw.ready, ctrl.io.in.aw.ready @[build/NutShell.fir.opt.mlir 56880:7]
    connect ctrl.io.in.aw.valid, io.in.ctrl.aw.valid @[build/NutShell.fir.opt.mlir 56881:7]
    connect ctrl.io.in.aw.bits, io.in.ctrl.aw.bits @[build/NutShell.fir.opt.mlir 56882:7]
    connect io.in.ctrl.w.ready, ctrl.io.in.w.ready @[build/NutShell.fir.opt.mlir 56883:7]
    connect ctrl.io.in.w.valid, io.in.ctrl.w.valid @[build/NutShell.fir.opt.mlir 56884:7]
    connect ctrl.io.in.w.bits, io.in.ctrl.w.bits @[build/NutShell.fir.opt.mlir 56885:7]
    connect ctrl.io.in.b.ready, io.in.ctrl.b.ready @[build/NutShell.fir.opt.mlir 56886:7]
    connect io.in.ctrl.b.valid, ctrl.io.in.b.valid @[build/NutShell.fir.opt.mlir 56887:7]
    connect io.in.ctrl.b.bits, ctrl.io.in.b.bits @[build/NutShell.fir.opt.mlir 56888:7]
    connect io.in.ctrl.ar.ready, ctrl.io.in.ar.ready @[build/NutShell.fir.opt.mlir 56889:7]
    connect ctrl.io.in.ar.valid, io.in.ctrl.ar.valid @[build/NutShell.fir.opt.mlir 56890:7]
    connect ctrl.io.in.ar.bits, io.in.ctrl.ar.bits @[build/NutShell.fir.opt.mlir 56891:7]
    connect ctrl.io.in.r.ready, io.in.ctrl.r.ready @[build/NutShell.fir.opt.mlir 56892:7]
    connect io.in.ctrl.r.valid, ctrl.io.in.r.valid @[build/NutShell.fir.opt.mlir 56893:7]
    connect io.in.ctrl.r.bits, ctrl.io.in.r.bits @[build/NutShell.fir.opt.mlir 56894:7]
    inst fb of AXI4RAM_1 @[build/NutShell.fir.opt.mlir 56895:38]
    connect fb.clock, clock @[build/NutShell.fir.opt.mlir 56919:7]
    connect fb.reset, reset @[build/NutShell.fir.opt.mlir 56920:7]
    connect io.in.fb.aw.ready, fb.io.in.aw.ready @[build/NutShell.fir.opt.mlir 56921:7]
    connect fb.io.in.aw.valid, io.in.fb.aw.valid @[build/NutShell.fir.opt.mlir 56922:7]
    connect fb.io.in.aw.bits, io.in.fb.aw.bits @[build/NutShell.fir.opt.mlir 56923:7]
    connect io.in.fb.w.ready, fb.io.in.w.ready @[build/NutShell.fir.opt.mlir 56924:7]
    connect fb.io.in.w.valid, io.in.fb.w.valid @[build/NutShell.fir.opt.mlir 56925:7]
    connect fb.io.in.w.bits, io.in.fb.w.bits @[build/NutShell.fir.opt.mlir 56926:7]
    connect io.in.fb.b.bits, fb.io.in.b.bits @[build/NutShell.fir.opt.mlir 56927:7]
    connect io.in.fb.b.valid, fb.io.in.b.valid @[build/NutShell.fir.opt.mlir 56928:7]
    connect fb.io.in.b.ready, io.in.fb.b.ready @[build/NutShell.fir.opt.mlir 56929:7]
    connect io.in.fb.ar.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56932:7]
    connect io.in.fb.r.bits.data, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 56936:7]
    connect io.in.fb.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 56939:7]
    node _io_in_fb_r_valid_T = and(io.in.fb.ar.ready, io.in.fb.ar.valid) @[build/NutShell.fir.opt.mlir 56941:30]
    node _io_in_fb_r_valid_T_1 = and(io.in.fb.r.ready, io.in.fb.r.valid) @[build/NutShell.fir.opt.mlir 56943:32]
    regreset io_in_fb_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56944:29]
    when _io_in_fb_r_valid_T_1 : @[build/NutShell.fir.opt.mlir 56945:7]
      connect io_in_fb_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56947:9]
    when _io_in_fb_r_valid_T : @[build/NutShell.fir.opt.mlir 56949:7]
      connect io_in_fb_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56951:9]
    connect io.in.fb.r.valid, io_in_fb_r_valid_r @[build/NutShell.fir.opt.mlir 56953:7]
    regreset vga_fb_used : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56954:22]
    node _T = or(io.in.fb.aw.valid, io.in.fb.w.valid) @[build/NutShell.fir.opt.mlir 56956:13]
    node _T_1 = or(_T, io.in.fb.ar.valid) @[build/NutShell.fir.opt.mlir 56958:15]
    when _T_1 : @[build/NutShell.fir.opt.mlir 56959:7]
      connect vga_fb_used, UInt<1>(1) @[build/NutShell.fir.opt.mlir 56961:9]
    regreset hCounter : UInt<11>, clock, reset, UInt<11>(0) @[build/NutShell.fir.opt.mlir 56964:19]
    wire hFinish : UInt<1> @[build/NutShell.fir.opt.mlir 56965:18]
    connect hFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56967:7]
    when UInt<1>(1) : @[build/NutShell.fir.opt.mlir 56969:7]
      node wrap_wrap = eq(hCounter, UInt<11>(1055)) @[build/NutShell.fir.opt.mlir 56971:22]
      node _wrap_value_T = add(hCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56973:26]
      node _wrap_value_T_1 = tail(_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 56975:28]
      connect hCounter, _wrap_value_T_1 @[build/NutShell.fir.opt.mlir 56976:9]
      when wrap_wrap : @[build/NutShell.fir.opt.mlir 56977:9]
        connect hCounter, pad(UInt<1>(0), 11) @[build/NutShell.fir.opt.mlir 56980:11]
      connect hFinish, wrap_wrap @[build/NutShell.fir.opt.mlir 56982:9]
    regreset vCounter : UInt<10>, clock, reset, UInt<10>(0) @[build/NutShell.fir.opt.mlir 56985:19]
    wire vFinish : UInt<1> @[build/NutShell.fir.opt.mlir 56986:18]
    connect vFinish, UInt<1>(0) @[build/NutShell.fir.opt.mlir 56988:7]
    when hFinish : @[build/NutShell.fir.opt.mlir 56990:7]
      node wrap_wrap_1 = eq(vCounter, UInt<10>(627)) @[build/NutShell.fir.opt.mlir 56992:24]
      node _wrap_value_T_2 = add(vCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 56994:28]
      node _wrap_value_T_3 = tail(_wrap_value_T_2, 1) @[build/NutShell.fir.opt.mlir 56996:28]
      connect vCounter, _wrap_value_T_3 @[build/NutShell.fir.opt.mlir 56997:9]
      when wrap_wrap_1 : @[build/NutShell.fir.opt.mlir 56998:9]
        connect vCounter, pad(UInt<1>(0), 10) @[build/NutShell.fir.opt.mlir 57001:11]
      connect vFinish, wrap_wrap_1 @[build/NutShell.fir.opt.mlir 57003:9]
    node _io_vga_hsync_T = geq(hCounter, UInt<6>(40)) @[build/NutShell.fir.opt.mlir 57007:26]
    connect io.vga.hsync, _io_vga_hsync_T @[build/NutShell.fir.opt.mlir 57008:7]
    node _io_vga_vsync_T = geq(vCounter, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57010:26]
    connect io.vga.vsync, _io_vga_vsync_T @[build/NutShell.fir.opt.mlir 57011:7]
    node _hInRange_T = geq(hCounter, UInt<8>(168)) @[build/NutShell.fir.opt.mlir 57014:22]
    node _hInRange_T_1 = lt(hCounter, UInt<10>(968)) @[build/NutShell.fir.opt.mlir 57017:24]
    node hInRange = and(_hInRange_T, _hInRange_T_1) @[build/NutShell.fir.opt.mlir 57019:19]
    node _vInRange_T = geq(vCounter, UInt<3>(5)) @[build/NutShell.fir.opt.mlir 57022:22]
    node _vInRange_T_1 = lt(vCounter, UInt<10>(605)) @[build/NutShell.fir.opt.mlir 57025:24]
    node vInRange = and(_vInRange_T, _vInRange_T_1) @[build/NutShell.fir.opt.mlir 57027:19]
    node _io_vga_valid_T = and(hInRange, vInRange) @[build/NutShell.fir.opt.mlir 57029:26]
    connect io.vga.valid, _io_vga_valid_T @[build/NutShell.fir.opt.mlir 57030:7]
    node hCounterIsOdd = bits(hCounter, 0, 0) @[build/NutShell.fir.opt.mlir 57032:24]
    node _hCounterIs2_T = bits(hCounter, 1, 0) @[build/NutShell.fir.opt.mlir 57034:25]
    node hCounterIs2 = eq(_hCounterIs2_T, UInt<2>(2)) @[build/NutShell.fir.opt.mlir 57037:22]
    node vCounterIsOdd = bits(vCounter, 0, 0) @[build/NutShell.fir.opt.mlir 57039:24]
    node _nextPixel_T = geq(hCounter, UInt<8>(167)) @[build/NutShell.fir.opt.mlir 57042:23]
    node _nextPixel_T_1 = lt(hCounter, UInt<10>(967)) @[build/NutShell.fir.opt.mlir 57045:25]
    node _nextPixel_T_2 = and(_nextPixel_T, _nextPixel_T_1) @[build/NutShell.fir.opt.mlir 57047:25]
    node _nextPixel_T_3 = and(_nextPixel_T_2, vInRange) @[build/NutShell.fir.opt.mlir 57049:25]
    node nextPixel = and(_nextPixel_T_3, hCounterIsOdd) @[build/NutShell.fir.opt.mlir 57051:20]
    node _fbPixelAddrV0_T = eq(vCounterIsOdd, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57053:27]
    node _fbPixelAddrV0_T_1 = and(nextPixel, _fbPixelAddrV0_T) @[build/NutShell.fir.opt.mlir 57055:29]
    regreset fbPixelAddrV0 : UInt<17>, clock, reset, UInt<17>(0) @[build/NutShell.fir.opt.mlir 57057:24]
    wire fbPixelAddrV0_wrap : UInt<1> @[build/NutShell.fir.opt.mlir 57058:29]
    connect fbPixelAddrV0_wrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57060:7]
    when _fbPixelAddrV0_T_1 : @[build/NutShell.fir.opt.mlir 57062:7]
      node fbPixelAddrV0_wrap_wrap = eq(fbPixelAddrV0, UInt<17>(119999)) @[build/NutShell.fir.opt.mlir 57064:36]
      node _fbPixelAddrV0_wrap_value_T = add(fbPixelAddrV0, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57066:40]
      node _fbPixelAddrV0_wrap_value_T_1 = tail(_fbPixelAddrV0_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 57068:42]
      connect fbPixelAddrV0, _fbPixelAddrV0_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 57069:9]
      when fbPixelAddrV0_wrap_wrap : @[build/NutShell.fir.opt.mlir 57070:9]
        connect fbPixelAddrV0, pad(UInt<1>(0), 17) @[build/NutShell.fir.opt.mlir 57073:11]
      connect fbPixelAddrV0_wrap, fbPixelAddrV0_wrap_wrap @[build/NutShell.fir.opt.mlir 57075:9]
    node _fbPixelAddrV1_T = and(nextPixel, vCounterIsOdd) @[build/NutShell.fir.opt.mlir 57078:27]
    regreset fbPixelAddrV1 : UInt<17>, clock, reset, UInt<17>(0) @[build/NutShell.fir.opt.mlir 57079:24]
    wire fbPixelAddrV1_wrap : UInt<1> @[build/NutShell.fir.opt.mlir 57080:29]
    connect fbPixelAddrV1_wrap, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57082:7]
    when _fbPixelAddrV1_T : @[build/NutShell.fir.opt.mlir 57083:7]
      node fbPixelAddrV1_wrap_wrap = eq(fbPixelAddrV1, UInt<17>(119999)) @[build/NutShell.fir.opt.mlir 57085:36]
      node _fbPixelAddrV1_wrap_value_T = add(fbPixelAddrV1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57087:40]
      node _fbPixelAddrV1_wrap_value_T_1 = tail(_fbPixelAddrV1_wrap_value_T, 1) @[build/NutShell.fir.opt.mlir 57089:42]
      connect fbPixelAddrV1, _fbPixelAddrV1_wrap_value_T_1 @[build/NutShell.fir.opt.mlir 57090:9]
      when fbPixelAddrV1_wrap_wrap : @[build/NutShell.fir.opt.mlir 57091:9]
        connect fbPixelAddrV1, pad(UInt<1>(0), 17) @[build/NutShell.fir.opt.mlir 57094:11]
      connect fbPixelAddrV1_wrap, fbPixelAddrV1_wrap_wrap @[build/NutShell.fir.opt.mlir 57096:9]
    connect fb.io.in.ar.bits.prot, pad(UInt<1>(0), 3) @[build/NutShell.fir.opt.mlir 57100:7]
    node _fb_io_in_ar_bits_addr_T = mux(vCounterIsOdd, fbPixelAddrV1, fbPixelAddrV0) @[build/NutShell.fir.opt.mlir 57102:35]
    node _fb_io_in_ar_bits_addr_T_1 = cat(_fb_io_in_ar_bits_addr_T, UInt<2>(0)) @[build/NutShell.fir.opt.mlir 57104:37]
    connect fb.io.in.ar.bits.addr, pad(_fb_io_in_ar_bits_addr_T_1, 32) @[build/NutShell.fir.opt.mlir 57106:7]
    reg fb_io_in_ar_valid_REG : UInt<1>, clock @[build/NutShell.fir.opt.mlir 57107:32]
    connect fb_io_in_ar_valid_REG, nextPixel @[build/NutShell.fir.opt.mlir 57108:7]
    node _fb_io_in_ar_valid_T = and(fb_io_in_ar_valid_REG, hCounterIs2) @[build/NutShell.fir.opt.mlir 57110:31]
    connect fb.io.in.ar.valid, _fb_io_in_ar_valid_T @[build/NutShell.fir.opt.mlir 57111:7]
    connect fb.io.in.r.ready, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57113:7]
    node _data_T = and(fb.io.in.r.ready, fb.io.in.r.valid) @[build/NutShell.fir.opt.mlir 57115:18]
    wire _data_WIRE : UInt<64> @[build/NutShell.fir.opt.mlir 57116:21]
    connect _data_WIRE, pad(UInt<1>(0), 64) @[build/NutShell.fir.opt.mlir 57119:7]
    regreset data_r : UInt, clock, reset, _data_WIRE @[build/NutShell.fir.opt.mlir 57120:17]
    when _data_T : @[build/NutShell.fir.opt.mlir 57121:7]
      connect data_r, fb.io.in.r.bits.data @[build/NutShell.fir.opt.mlir 57122:9]
    node data = mux(_data_T, fb.io.in.r.bits.data, data_r) @[build/NutShell.fir.opt.mlir 57125:15]
    node _color_T = bits(hCounter, 1, 1) @[build/NutShell.fir.opt.mlir 57127:19]
    node _color_T_1 = bits(data, 63, 32) @[build/NutShell.fir.opt.mlir 57129:21]
    node _color_T_2 = bits(data, 31, 0) @[build/NutShell.fir.opt.mlir 57131:21]
    node color = mux(_color_T, _color_T_1, _color_T_2) @[build/NutShell.fir.opt.mlir 57133:16]
    node _io_vga_rgb_T = bits(color, 23, 0) @[build/NutShell.fir.opt.mlir 57135:24]
    node _io_vga_rgb_T_1 = mux(io.vga.valid, _io_vga_rgb_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57137:26]
    connect io.vga.rgb, _io_vga_rgb_T_1 @[build/NutShell.fir.opt.mlir 57138:7]
    inst fbHelper of FBHelper @[build/NutShell.fir.opt.mlir 57139:73]
    connect fbHelper.clk, clock @[build/NutShell.fir.opt.mlir 57140:7]
    node _fbHelper_io_valid_T = and(io.vga.valid, vga_fb_used) @[build/NutShell.fir.opt.mlir 57142:31]
    connect fbHelper.valid, _fbHelper_io_valid_T @[build/NutShell.fir.opt.mlir 57143:7]
    connect fbHelper.pixel, color @[build/NutShell.fir.opt.mlir 57144:7]
    connect fbHelper.sync, ctrl.io.extra.sync @[build/NutShell.fir.opt.mlir 57145:7]

  module AXI4Flash : @[build/NutShell.fir.opt.mlir 57147:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57147:41]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57147:67]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 57147:94]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57176:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57178:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57180:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57182:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57184:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57186:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57188:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57190:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57194:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57196:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57198:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57200:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57202:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57204:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57206:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57208:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57210:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57212:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57214:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57216:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57218:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57220:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57222:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57223:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57224:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57225:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57227:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57229:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57232:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57234:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 57235:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57237:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 57239:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57241:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57244:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 57246:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 57247:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57250:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57252:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57253:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 57254:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57256:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57258:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 57260:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 57262:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 57263:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57265:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 57267:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 57269:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57271:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57272:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 57273:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57275:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 57277:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57279:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 57281:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 57282:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 57283:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 57285:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57287:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57288:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 57289:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57291:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 57293:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57295:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57298:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 57299:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 57301:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 57302:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57304:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57306:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57308:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57310:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57311:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 57312:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57314:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 57316:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57318:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 57320:7]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 57321:16]
    node _T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57323:13]
    node _T_1 = bits(waddr, 12, 0) @[build/NutShell.fir.opt.mlir 57325:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57327:15]
    node _T_3 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57329:15]
    node _T_4 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57331:15]
    node _T_5 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57333:15]
    node _T_6 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57335:15]
    node _T_7 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57337:15]
    node _T_8 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57339:15]
    node _T_9 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57341:15]
    node _T_10 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57343:16]
    node _T_11 = mux(_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57345:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57347:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57349:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57351:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57353:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57355:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57357:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57359:16]
    node lo_lo = cat(_T_12, _T_11) @[build/NutShell.fir.opt.mlir 57361:16]
    node lo_hi = cat(_T_14, _T_13) @[build/NutShell.fir.opt.mlir 57363:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 57365:13]
    node hi_lo = cat(_T_16, _T_15) @[build/NutShell.fir.opt.mlir 57367:16]
    node hi_hi = cat(_T_18, _T_17) @[build/NutShell.fir.opt.mlir 57369:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 57371:13]
    node _T_19 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 57373:16]
    node _rdata_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 57375:19]
    node _rdata_T_1 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 57378:21]
    node _rdata_T_2 = eq(UInt<4>(8), _T) @[build/NutShell.fir.opt.mlir 57381:21]
    node _rdata_T_3 = mux(_rdata_T, UInt<21>(1049243), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57384:21]
    node _rdata_T_4 = mux(_rdata_T_1, UInt<25>(32674451), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57387:21]
    node _rdata_T_5 = mux(_rdata_T_2, UInt<18>(163943), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57390:21]
    node _rdata_T_6 = or(_rdata_T_3, _rdata_T_4) @[build/NutShell.fir.opt.mlir 57392:21]
    node _rdata_T_7 = or(_rdata_T_6, _rdata_T_5) @[build/NutShell.fir.opt.mlir 57394:21]
    wire _rdata_WIRE : UInt<25> @[build/NutShell.fir.opt.mlir 57395:22]
    connect _rdata_WIRE, _rdata_T_7 @[build/NutShell.fir.opt.mlir 57396:7]
    connect rdata, pad(_rdata_WIRE, 64) @[build/NutShell.fir.opt.mlir 57398:7]
    node _io_in_r_bits_data_T = bits(rdata, 31, 0) @[build/NutShell.fir.opt.mlir 57400:31]
    node _io_in_r_bits_data_T_1 = cat(_io_in_r_bits_data_T, _io_in_r_bits_data_T) @[build/NutShell.fir.opt.mlir 57402:33]
    reg io_in_r_bits_data_REG : UInt, clock @[build/NutShell.fir.opt.mlir 57403:32]
    connect io_in_r_bits_data_REG, _io_in_r_bits_data_T_1 @[build/NutShell.fir.opt.mlir 57404:7]
    reg io_in_r_bits_data_r : UInt, clock @[build/NutShell.fir.opt.mlir 57405:30]
    when ren : @[build/NutShell.fir.opt.mlir 57406:7]
      connect io_in_r_bits_data_r, io_in_r_bits_data_REG @[build/NutShell.fir.opt.mlir 57407:9]
    connect io.in.r.bits.data, io_in_r_bits_data_r @[build/NutShell.fir.opt.mlir 57409:7]

  extmodule SDHelper : @[build/NutShell.fir.opt.mlir 57411:5]
    input clk : Clock @[build/NutShell.fir.opt.mlir 57411:43]
    input ren : UInt<1> @[build/NutShell.fir.opt.mlir 57411:66]
    output data : UInt<32> @[build/NutShell.fir.opt.mlir 57411:92]
    input setAddr : UInt<1> @[build/NutShell.fir.opt.mlir 57411:119]
    input addr : UInt<32> @[build/NutShell.fir.opt.mlir 57411:148]
    defname = SDHelper

  module AXI4DummySD : @[build/NutShell.fir.opt.mlir 57412:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57412:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57412:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 57412:96]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57442:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57444:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57446:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57448:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57450:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57452:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57454:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57456:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57460:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57462:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57464:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57466:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57468:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57470:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57472:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57474:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57476:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57478:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57480:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57482:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57484:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57486:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57488:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57489:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57490:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57491:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57493:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57495:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57498:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57500:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 57501:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57503:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 57505:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57507:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57510:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 57512:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 57513:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57516:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57518:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57519:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 57520:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57522:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57524:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 57526:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 57528:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 57529:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57531:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 57533:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 57535:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 57537:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57538:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 57539:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57541:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 57543:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57545:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 57547:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 57548:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 57549:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 57551:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57553:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57554:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 57555:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57557:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 57559:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57561:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57564:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 57565:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 57567:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 57568:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 57570:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57572:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 57574:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 57576:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57577:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 57578:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57580:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 57582:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57584:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 57586:7]
    regreset regs_0 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57588:17]
    regreset regs_1 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57589:17]
    regreset regs_2 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57590:17]
    regreset regs_3 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57591:17]
    regreset regs_4 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57592:17]
    regreset regs_5 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57593:17]
    regreset regs_6 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57594:17]
    regreset regs_7 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57595:17]
    regreset regs_8 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57596:17]
    regreset regs_9 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57597:17]
    regreset regs_10 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57598:18]
    regreset regs_11 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57599:18]
    regreset regs_12 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57600:18]
    regreset regs_13 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57601:18]
    regreset regs_14 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57602:18]
    regreset regs_15 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57603:18]
    regreset regs_16 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57604:18]
    regreset regs_17 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57605:18]
    regreset regs_18 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57606:18]
    regreset regs_19 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57607:18]
    regreset regs_20 : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 57608:18]
    wire setAddr : UInt<1> @[build/NutShell.fir.opt.mlir 57609:18]
    connect setAddr, UInt<1>(0) @[build/NutShell.fir.opt.mlir 57611:7]
    inst sdHelper of SDHelper @[build/NutShell.fir.opt.mlir 57612:89]
    connect sdHelper.clk, clock @[build/NutShell.fir.opt.mlir 57613:7]
    node _sdHelper_io_ren_T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57615:29]
    node _sdHelper_io_ren_T_1 = eq(_sdHelper_io_ren_T, UInt<7>(64)) @[build/NutShell.fir.opt.mlir 57618:31]
    node _sdHelper_io_ren_T_2 = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57620:31]
    node _sdHelper_io_ren_T_3 = and(_sdHelper_io_ren_T_1, _sdHelper_io_ren_T_2) @[build/NutShell.fir.opt.mlir 57622:31]
    connect sdHelper.ren, _sdHelper_io_ren_T_3 @[build/NutShell.fir.opt.mlir 57623:7]
    connect sdHelper.setAddr, setAddr @[build/NutShell.fir.opt.mlir 57624:7]
    connect sdHelper.addr, regs_1 @[build/NutShell.fir.opt.mlir 57625:7]
    node _strb_T = bits(waddr, 2, 2) @[build/NutShell.fir.opt.mlir 57627:18]
    node _strb_T_1 = bits(io.in.w.bits.strb, 7, 4) @[build/NutShell.fir.opt.mlir 57629:20]
    node _strb_T_2 = bits(io.in.w.bits.strb, 3, 0) @[build/NutShell.fir.opt.mlir 57631:20]
    node strb = mux(_strb_T, _strb_T_1, _strb_T_2) @[build/NutShell.fir.opt.mlir 57633:15]
    wire rdata : UInt<64> @[build/NutShell.fir.opt.mlir 57634:16]
    node _T = bits(raddr, 12, 0) @[build/NutShell.fir.opt.mlir 57636:13]
    node _T_1 = bits(waddr, 12, 0) @[build/NutShell.fir.opt.mlir 57638:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 57640:15]
    node _T_3 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 57642:15]
    node _T_4 = bits(strb, 0, 0) @[build/NutShell.fir.opt.mlir 57644:15]
    node _T_5 = bits(strb, 1, 1) @[build/NutShell.fir.opt.mlir 57646:15]
    node _T_6 = bits(strb, 2, 2) @[build/NutShell.fir.opt.mlir 57648:15]
    node _T_7 = bits(strb, 3, 3) @[build/NutShell.fir.opt.mlir 57650:15]
    node _T_8 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57652:15]
    node _T_9 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57654:15]
    node _T_10 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57656:16]
    node _T_11 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57658:16]
    node lo = cat(_T_9, _T_8) @[build/NutShell.fir.opt.mlir 57660:13]
    node hi = cat(_T_11, _T_10) @[build/NutShell.fir.opt.mlir 57662:13]
    node _T_12 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 57664:16]
    node _rdata_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 57666:19]
    node _rdata_T_1 = eq(UInt<6>(56), _T) @[build/NutShell.fir.opt.mlir 57669:21]
    node _rdata_T_2 = eq(UInt<5>(24), _T) @[build/NutShell.fir.opt.mlir 57672:21]
    node _rdata_T_3 = eq(UInt<6>(52), _T) @[build/NutShell.fir.opt.mlir 57675:21]
    node _rdata_T_4 = eq(UInt<5>(20), _T) @[build/NutShell.fir.opt.mlir 57678:21]
    node _rdata_T_5 = eq(UInt<5>(28), _T) @[build/NutShell.fir.opt.mlir 57681:21]
    node _rdata_T_6 = eq(UInt<7>(80), _T) @[build/NutShell.fir.opt.mlir 57684:21]
    node _rdata_T_7 = eq(UInt<5>(16), _T) @[build/NutShell.fir.opt.mlir 57687:21]
    node _rdata_T_8 = eq(UInt<3>(4), _T) @[build/NutShell.fir.opt.mlir 57690:21]
    node _rdata_T_9 = eq(UInt<6>(32), _T) @[build/NutShell.fir.opt.mlir 57693:21]
    node _rdata_T_10 = eq(UInt<7>(64), _T) @[build/NutShell.fir.opt.mlir 57695:22]
    node _rdata_T_11 = mux(_rdata_T, regs_0, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57697:22]
    node _rdata_T_12 = mux(_rdata_T_1, regs_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57699:22]
    node _rdata_T_13 = mux(_rdata_T_2, regs_6, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57701:22]
    node _rdata_T_14 = mux(_rdata_T_3, UInt<8>(128), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57704:22]
    node _rdata_T_15 = mux(_rdata_T_4, regs_5, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57706:22]
    node _rdata_T_16 = mux(_rdata_T_5, regs_7, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57708:22]
    node _rdata_T_17 = mux(_rdata_T_6, regs_20, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57710:22]
    node _rdata_T_18 = mux(_rdata_T_7, regs_4, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57712:22]
    node _rdata_T_19 = mux(_rdata_T_8, regs_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57714:22]
    node _rdata_T_20 = mux(_rdata_T_9, regs_8, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57716:22]
    node _rdata_T_21 = mux(_rdata_T_10, sdHelper.data, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57718:22]
    node _rdata_T_22 = or(_rdata_T_11, _rdata_T_12) @[build/NutShell.fir.opt.mlir 57720:22]
    node _rdata_T_23 = or(_rdata_T_22, _rdata_T_13) @[build/NutShell.fir.opt.mlir 57722:22]
    node _rdata_T_24 = or(_rdata_T_23, _rdata_T_14) @[build/NutShell.fir.opt.mlir 57724:22]
    node _rdata_T_25 = or(_rdata_T_24, _rdata_T_15) @[build/NutShell.fir.opt.mlir 57726:22]
    node _rdata_T_26 = or(_rdata_T_25, _rdata_T_16) @[build/NutShell.fir.opt.mlir 57728:22]
    node _rdata_T_27 = or(_rdata_T_26, _rdata_T_17) @[build/NutShell.fir.opt.mlir 57730:22]
    node _rdata_T_28 = or(_rdata_T_27, _rdata_T_18) @[build/NutShell.fir.opt.mlir 57732:22]
    node _rdata_T_29 = or(_rdata_T_28, _rdata_T_19) @[build/NutShell.fir.opt.mlir 57734:22]
    node _rdata_T_30 = or(_rdata_T_29, _rdata_T_20) @[build/NutShell.fir.opt.mlir 57736:22]
    node _rdata_T_31 = or(_rdata_T_30, _rdata_T_21) @[build/NutShell.fir.opt.mlir 57738:22]
    wire _rdata_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 57739:22]
    connect _rdata_WIRE, _rdata_T_31 @[build/NutShell.fir.opt.mlir 57740:7]
    connect rdata, pad(_rdata_WIRE, 64) @[build/NutShell.fir.opt.mlir 57742:7]
    node _T_13 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 57744:16]
    node _T_14 = and(_T_2, _T_13) @[build/NutShell.fir.opt.mlir 57746:16]
    when _T_14 : @[build/NutShell.fir.opt.mlir 57760:7]
      node _regs_0_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57762:22]
      node _regs_0_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57764:24]
      node _regs_0_T_2 = and(regs_0, _regs_0_T_1) @[build/NutShell.fir.opt.mlir 57766:24]
      node _regs_0_T_3 = or(_regs_0_T, _regs_0_T_2) @[build/NutShell.fir.opt.mlir 57768:24]
      node regs_0_cmd = bits(_regs_0_T_3, 5, 0) @[build/NutShell.fir.opt.mlir 57770:23]
      node _regs_0_T_4 = eq(UInt<1>(1), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57772:24]
      when _regs_0_T_4 : @[build/NutShell.fir.opt.mlir 57773:9]
        connect regs_4, UInt<32>(2164228096) @[build/NutShell.fir.opt.mlir 57775:11]
      else :
        node _regs_0_T_5 = eq(UInt<2>(2), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57778:26]
        when _regs_0_T_5 : @[build/NutShell.fir.opt.mlir 57779:11]
          connect regs_4, pad(UInt<1>(1), 32) @[build/NutShell.fir.opt.mlir 57782:13]
          connect regs_5, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57785:13]
          connect regs_6, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57788:13]
          connect regs_7, pad(UInt<29>(352321536), 32) @[build/NutShell.fir.opt.mlir 57791:13]
        else :
          node _regs_0_T_6 = eq(UInt<4>(9), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57794:28]
          when _regs_0_T_6 : @[build/NutShell.fir.opt.mlir 57795:13]
            connect regs_4, UInt<32>(2453684225) @[build/NutShell.fir.opt.mlir 57797:15]
            node _regs_0_regs_5_T = shl(UInt<2>(3), 30) @[build/NutShell.fir.opt.mlir 57799:35]
            node _regs_0_regs_5_T_1 = or(UInt<29>(306943971), _regs_0_regs_5_T) @[build/NutShell.fir.opt.mlir 57801:37]
            connect regs_5, _regs_0_regs_5_T_1 @[build/NutShell.fir.opt.mlir 57803:15]
            node _regs_0_regs_6_T = or(UInt<28>(256933888), UInt<10>(63)) @[build/NutShell.fir.opt.mlir 57805:35]
            node _regs_0_regs_6_T_1 = shl(UInt<4>(15), 16) @[build/NutShell.fir.opt.mlir 57807:37]
            node _regs_0_regs_6_T_2 = or(_regs_0_regs_6_T, _regs_0_regs_6_T_1) @[build/NutShell.fir.opt.mlir 57809:37]
            connect regs_6, pad(_regs_0_regs_6_T_2, 32) @[build/NutShell.fir.opt.mlir 57812:15]
            connect regs_7, UInt<32>(2351300906) @[build/NutShell.fir.opt.mlir 57814:15]
          else :
            node _regs_0_T_7 = eq(UInt<4>(13), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57817:30]
            when _regs_0_T_7 : @[build/NutShell.fir.opt.mlir 57818:15]
              connect regs_4, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57821:17]
              connect regs_5, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57824:17]
              connect regs_6, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57827:17]
              connect regs_7, pad(UInt<1>(0), 32) @[build/NutShell.fir.opt.mlir 57830:17]
            else :
              node _regs_0_T_8 = eq(UInt<5>(18), regs_0_cmd) @[build/NutShell.fir.opt.mlir 57833:32]
              when _regs_0_T_8 : @[build/NutShell.fir.opt.mlir 57834:17]
                connect setAddr, UInt<1>(1) @[build/NutShell.fir.opt.mlir 57836:19]
      connect regs_0, _regs_0_T_3 @[build/NutShell.fir.opt.mlir 57842:9]
    node _T_15 = eq(_T_1, UInt<6>(56)) @[build/NutShell.fir.opt.mlir 57845:16]
    node _T_16 = and(_T_2, _T_15) @[build/NutShell.fir.opt.mlir 57847:16]
    when _T_16 : @[build/NutShell.fir.opt.mlir 57848:7]
      node _regs_15_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57850:23]
      node _regs_15_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57852:25]
      node _regs_15_T_2 = and(regs_15, _regs_15_T_1) @[build/NutShell.fir.opt.mlir 57854:25]
      node _regs_15_T_3 = or(_regs_15_T, _regs_15_T_2) @[build/NutShell.fir.opt.mlir 57856:25]
      connect regs_15, _regs_15_T_3 @[build/NutShell.fir.opt.mlir 57857:9]
    node _T_17 = eq(_T_1, UInt<7>(80)) @[build/NutShell.fir.opt.mlir 57860:16]
    node _T_18 = and(_T_2, _T_17) @[build/NutShell.fir.opt.mlir 57862:16]
    when _T_18 : @[build/NutShell.fir.opt.mlir 57863:7]
      node _regs_20_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57865:23]
      node _regs_20_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57867:25]
      node _regs_20_T_2 = and(regs_20, _regs_20_T_1) @[build/NutShell.fir.opt.mlir 57869:25]
      node _regs_20_T_3 = or(_regs_20_T, _regs_20_T_2) @[build/NutShell.fir.opt.mlir 57871:25]
      connect regs_20, _regs_20_T_3 @[build/NutShell.fir.opt.mlir 57872:9]
    node _T_19 = eq(_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 57875:16]
    node _T_20 = and(_T_2, _T_19) @[build/NutShell.fir.opt.mlir 57877:16]
    when _T_20 : @[build/NutShell.fir.opt.mlir 57878:7]
      node _regs_1_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57880:22]
      node _regs_1_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57882:24]
      node _regs_1_T_2 = and(regs_1, _regs_1_T_1) @[build/NutShell.fir.opt.mlir 57884:24]
      node _regs_1_T_3 = or(_regs_1_T, _regs_1_T_2) @[build/NutShell.fir.opt.mlir 57886:24]
      connect regs_1, _regs_1_T_3 @[build/NutShell.fir.opt.mlir 57887:9]
    node _T_21 = eq(_T_1, UInt<6>(32)) @[build/NutShell.fir.opt.mlir 57890:16]
    node _T_22 = and(_T_2, _T_21) @[build/NutShell.fir.opt.mlir 57892:16]
    when _T_22 : @[build/NutShell.fir.opt.mlir 57893:7]
      node _regs_8_T = and(_T_3, _T_12) @[build/NutShell.fir.opt.mlir 57895:22]
      node _regs_8_T_1 = not(_T_12) @[build/NutShell.fir.opt.mlir 57897:24]
      node _regs_8_T_2 = and(regs_8, _regs_8_T_1) @[build/NutShell.fir.opt.mlir 57899:24]
      node _regs_8_T_3 = or(_regs_8_T, _regs_8_T_2) @[build/NutShell.fir.opt.mlir 57901:24]
      connect regs_8, _regs_8_T_3 @[build/NutShell.fir.opt.mlir 57902:9]
    node _io_in_r_bits_data_T = bits(rdata, 31, 0) @[build/NutShell.fir.opt.mlir 57905:31]
    node _io_in_r_bits_data_T_1 = cat(_io_in_r_bits_data_T, _io_in_r_bits_data_T) @[build/NutShell.fir.opt.mlir 57907:33]
    reg io_in_r_bits_data_REG : UInt, clock @[build/NutShell.fir.opt.mlir 57908:32]
    connect io_in_r_bits_data_REG, _io_in_r_bits_data_T_1 @[build/NutShell.fir.opt.mlir 57909:7]
    reg io_in_r_bits_data_r : UInt, clock @[build/NutShell.fir.opt.mlir 57910:30]
    when ren : @[build/NutShell.fir.opt.mlir 57911:7]
      connect io_in_r_bits_data_r, io_in_r_bits_data_REG @[build/NutShell.fir.opt.mlir 57912:9]
    connect io.in.r.bits.data, io_in_r_bits_data_r @[build/NutShell.fir.opt.mlir 57914:7]

  module AXI4MeipGen : @[build/NutShell.fir.opt.mlir 57916:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 57916:43]
    input reset : Reset @[build/NutShell.fir.opt.mlir 57916:69]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { meip : UInt<1> } } @[build/NutShell.fir.opt.mlir 57916:96]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 57948:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 57950:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 57952:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 57954:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 57956:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 57958:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 57960:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 57962:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57966:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57968:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57970:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57972:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57974:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57976:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57978:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 57980:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 57982:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 57984:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 57986:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 57988:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 57990:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 57992:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 57994:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 57995:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 57996:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 57997:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 57999:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58001:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58004:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58006:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 58007:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58009:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 58011:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58013:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58016:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 58018:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 58019:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58022:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58024:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58025:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 58026:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58028:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58030:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 58032:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 58034:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 58035:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58037:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 58039:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 58041:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58043:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58044:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 58045:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58047:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 58049:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58051:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 58053:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 58054:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 58055:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 58057:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58059:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58060:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 58061:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58063:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 58065:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58067:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58070:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 58071:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 58073:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 58074:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58076:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58078:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58080:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58082:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58083:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 58084:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58086:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 58088:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58090:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 58092:7]
    regreset meip : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58093:15]
    node _T = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 58095:13]
    node _T_1 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 58097:15]
    node _T_2 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58099:15]
    node _T_3 = bits(io.in.w.bits.data, 0, 0) @[build/NutShell.fir.opt.mlir 58101:15]
    node _T_4 = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 58103:15]
    node _T_5 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 58105:15]
    node _T_6 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 58107:15]
    node _T_7 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 58109:15]
    node _T_8 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 58111:15]
    node _T_9 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 58113:15]
    node _T_10 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 58115:16]
    node _T_11 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 58117:16]
    node _T_12 = mux(_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58119:16]
    node _T_13 = mux(_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58121:16]
    node _T_14 = mux(_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58123:16]
    node _T_15 = mux(_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58125:16]
    node _T_16 = mux(_T_8, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58127:16]
    node _T_17 = mux(_T_9, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58129:16]
    node _T_18 = mux(_T_10, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58131:16]
    node _T_19 = mux(_T_11, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58133:16]
    node lo_lo = cat(_T_13, _T_12) @[build/NutShell.fir.opt.mlir 58135:16]
    node lo_hi = cat(_T_15, _T_14) @[build/NutShell.fir.opt.mlir 58137:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 58139:13]
    node hi_lo = cat(_T_17, _T_16) @[build/NutShell.fir.opt.mlir 58141:16]
    node hi_hi = cat(_T_19, _T_18) @[build/NutShell.fir.opt.mlir 58143:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 58145:13]
    node _T_20 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 58147:16]
    node _T_21 = bits(_T_20, 0, 0) @[build/NutShell.fir.opt.mlir 58149:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T) @[build/NutShell.fir.opt.mlir 58151:31]
    connect io.in.r.bits.data, pad(meip, 64) @[build/NutShell.fir.opt.mlir 58153:7]
    node _T_22 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58155:16]
    node _T_23 = and(_T_2, _T_22) @[build/NutShell.fir.opt.mlir 58157:16]
    when _T_23 : @[build/NutShell.fir.opt.mlir 58158:7]
      node _meip_T = and(_T_3, _T_21) @[build/NutShell.fir.opt.mlir 58160:20]
      node _meip_T_1 = not(_T_21) @[build/NutShell.fir.opt.mlir 58162:22]
      node _meip_T_2 = and(meip, _meip_T_1) @[build/NutShell.fir.opt.mlir 58164:22]
      node _meip_T_3 = or(_meip_T, _meip_T_2) @[build/NutShell.fir.opt.mlir 58166:22]
      connect meip, _meip_T_3 @[build/NutShell.fir.opt.mlir 58167:9]
    connect io.extra.meip, meip @[build/NutShell.fir.opt.mlir 58169:7]

  module AXI4DMA : @[build/NutShell.fir.opt.mlir 58171:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58171:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58171:65]
    output io : { flip in : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } }, extra : { dma : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } } } } @[build/NutShell.fir.opt.mlir 58171:92]

    node _fullMask_T = bits(io.in.w.bits.strb, 0, 0) @[build/NutShell.fir.opt.mlir 58246:22]
    node _fullMask_T_1 = bits(io.in.w.bits.strb, 1, 1) @[build/NutShell.fir.opt.mlir 58248:24]
    node _fullMask_T_2 = bits(io.in.w.bits.strb, 2, 2) @[build/NutShell.fir.opt.mlir 58250:24]
    node _fullMask_T_3 = bits(io.in.w.bits.strb, 3, 3) @[build/NutShell.fir.opt.mlir 58252:24]
    node _fullMask_T_4 = bits(io.in.w.bits.strb, 4, 4) @[build/NutShell.fir.opt.mlir 58254:24]
    node _fullMask_T_5 = bits(io.in.w.bits.strb, 5, 5) @[build/NutShell.fir.opt.mlir 58256:24]
    node _fullMask_T_6 = bits(io.in.w.bits.strb, 6, 6) @[build/NutShell.fir.opt.mlir 58258:24]
    node _fullMask_T_7 = bits(io.in.w.bits.strb, 7, 7) @[build/NutShell.fir.opt.mlir 58260:24]
    node _fullMask_T_8 = mux(_fullMask_T, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58264:24]
    node _fullMask_T_9 = mux(_fullMask_T_1, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58266:24]
    node _fullMask_T_10 = mux(_fullMask_T_2, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58268:25]
    node _fullMask_T_11 = mux(_fullMask_T_3, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58270:25]
    node _fullMask_T_12 = mux(_fullMask_T_4, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58272:25]
    node _fullMask_T_13 = mux(_fullMask_T_5, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58274:25]
    node _fullMask_T_14 = mux(_fullMask_T_6, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58276:25]
    node _fullMask_T_15 = mux(_fullMask_T_7, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58278:25]
    node fullMask_lo_lo = cat(_fullMask_T_9, _fullMask_T_8) @[build/NutShell.fir.opt.mlir 58280:25]
    node fullMask_lo_hi = cat(_fullMask_T_11, _fullMask_T_10) @[build/NutShell.fir.opt.mlir 58282:25]
    node fullMask_lo = cat(fullMask_lo_hi, fullMask_lo_lo) @[build/NutShell.fir.opt.mlir 58284:22]
    node fullMask_hi_lo = cat(_fullMask_T_13, _fullMask_T_12) @[build/NutShell.fir.opt.mlir 58286:25]
    node fullMask_hi_hi = cat(_fullMask_T_15, _fullMask_T_14) @[build/NutShell.fir.opt.mlir 58288:25]
    node fullMask_hi = cat(fullMask_hi_hi, fullMask_hi_lo) @[build/NutShell.fir.opt.mlir 58290:22]
    node fullMask = cat(fullMask_hi, fullMask_lo) @[build/NutShell.fir.opt.mlir 58292:19]
    wire raddr : UInt @[build/NutShell.fir.opt.mlir 58293:16]
    wire ren : UInt<1> @[build/NutShell.fir.opt.mlir 58294:14]
    connect raddr, io.in.ar.bits.addr @[build/NutShell.fir.opt.mlir 58295:7]
    node _r_busy_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58297:20]
    node _r_busy_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58299:22]
    node _r_busy_T_2 = and(_r_busy_T_1, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58302:22]
    regreset r_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58304:17]
    when _r_busy_T_2 : @[build/NutShell.fir.opt.mlir 58305:7]
      connect r_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58307:9]
    when _r_busy_T : @[build/NutShell.fir.opt.mlir 58309:7]
      connect r_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58311:9]
    node _io_in_ar_ready_T = eq(r_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58314:28]
    node _io_in_ar_ready_T_1 = or(io.in.r.ready, _io_in_ar_ready_T) @[build/NutShell.fir.opt.mlir 58316:30]
    connect io.in.ar.ready, _io_in_ar_ready_T_1 @[build/NutShell.fir.opt.mlir 58317:7]
    connect io.in.r.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58320:7]
    node _ren_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58322:17]
    regreset ren_REG : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58323:18]
    connect ren_REG, _ren_T @[build/NutShell.fir.opt.mlir 58324:7]
    node _ren_T_1 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58326:19]
    node _ren_T_2 = eq(UInt<1>(1), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58328:19]
    node _ren_T_3 = and(_ren_T_1, _ren_T_2) @[build/NutShell.fir.opt.mlir 58330:19]
    node _ren_T_4 = or(ren_REG, _ren_T_3) @[build/NutShell.fir.opt.mlir 58332:19]
    connect ren, _ren_T_4 @[build/NutShell.fir.opt.mlir 58333:7]
    node _io_in_r_valid_T = and(io.in.ar.ready, io.in.ar.valid) @[build/NutShell.fir.opt.mlir 58335:27]
    node _io_in_r_valid_T_1 = or(_io_in_r_valid_T, r_busy) @[build/NutShell.fir.opt.mlir 58337:29]
    node _io_in_r_valid_T_2 = and(ren, _io_in_r_valid_T_1) @[build/NutShell.fir.opt.mlir 58339:29]
    node _io_in_r_valid_T_3 = and(io.in.r.ready, io.in.r.valid) @[build/NutShell.fir.opt.mlir 58341:29]
    regreset io_in_r_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58342:26]
    when _io_in_r_valid_T_3 : @[build/NutShell.fir.opt.mlir 58343:7]
      connect io_in_r_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58345:9]
    when _io_in_r_valid_T_2 : @[build/NutShell.fir.opt.mlir 58347:7]
      connect io_in_r_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58349:9]
    connect io.in.r.valid, io_in_r_valid_r @[build/NutShell.fir.opt.mlir 58351:7]
    wire waddr : UInt @[build/NutShell.fir.opt.mlir 58352:16]
    connect waddr, io.in.aw.bits.addr @[build/NutShell.fir.opt.mlir 58353:7]
    node _w_busy_T = and(io.in.aw.ready, io.in.aw.valid) @[build/NutShell.fir.opt.mlir 58355:20]
    node _w_busy_T_1 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58357:22]
    regreset w_busy : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58358:17]
    when _w_busy_T_1 : @[build/NutShell.fir.opt.mlir 58359:7]
      connect w_busy, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58361:9]
    when _w_busy_T : @[build/NutShell.fir.opt.mlir 58363:7]
      connect w_busy, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58365:9]
    node _io_in_aw_ready_T = eq(w_busy, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58368:28]
    connect io.in.aw.ready, _io_in_aw_ready_T @[build/NutShell.fir.opt.mlir 58369:7]
    node _io_in_w_ready_T = or(io.in.aw.valid, w_busy) @[build/NutShell.fir.opt.mlir 58371:27]
    connect io.in.w.ready, _io_in_w_ready_T @[build/NutShell.fir.opt.mlir 58372:7]
    connect io.in.b.bits.resp, UInt<2>(0) @[build/NutShell.fir.opt.mlir 58374:7]
    node _io_in_b_valid_T = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58376:27]
    node _io_in_b_valid_T_1 = and(_io_in_b_valid_T, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58378:29]
    node _io_in_b_valid_T_2 = and(io.in.b.ready, io.in.b.valid) @[build/NutShell.fir.opt.mlir 58380:29]
    regreset io_in_b_valid_r : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58381:26]
    when _io_in_b_valid_T_2 : @[build/NutShell.fir.opt.mlir 58382:7]
      connect io_in_b_valid_r, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58384:9]
    when _io_in_b_valid_T_1 : @[build/NutShell.fir.opt.mlir 58386:7]
      connect io_in_b_valid_r, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58388:9]
    connect io.in.b.valid, io_in_b_valid_r @[build/NutShell.fir.opt.mlir 58390:7]
    reg dest : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58391:15]
    reg src : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58392:14]
    regreset len : UInt<32>, clock, reset, UInt<32>(0) @[build/NutShell.fir.opt.mlir 58394:14]
    reg data : UInt<32>, clock @[build/NutShell.fir.opt.mlir 58395:15]
    regreset state : UInt<3>, clock, reset, UInt<3>(0) @[build/NutShell.fir.opt.mlir 58397:16]
    node _T = eq(state, UInt<3>(0)) @[build/NutShell.fir.opt.mlir 58399:13]
    node _T_1 = neq(len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58401:15]
    node _T_2 = and(_T, _T_1) @[build/NutShell.fir.opt.mlir 58403:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58405:7]
      connect state, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58407:9]
    node _T_3 = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58410:15]
    node _T_4 = and(io.extra.dma.ar.ready, io.extra.dma.ar.valid) @[build/NutShell.fir.opt.mlir 58412:15]
    node _T_5 = and(_T_3, _T_4) @[build/NutShell.fir.opt.mlir 58414:15]
    when _T_5 : @[build/NutShell.fir.opt.mlir 58416:7]
      connect state, UInt<3>(2) @[build/NutShell.fir.opt.mlir 58418:9]
    node _T_6 = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 58421:15]
    node _T_7 = and(io.extra.dma.r.ready, io.extra.dma.r.valid) @[build/NutShell.fir.opt.mlir 58423:15]
    node _T_8 = and(_T_6, _T_7) @[build/NutShell.fir.opt.mlir 58425:15]
    when _T_8 : @[build/NutShell.fir.opt.mlir 58427:7]
      wire _data_WIRE : UInt<32>[2] @[build/NutShell.fir.opt.mlir 58428:23]
      wire _data_WIRE_1 : UInt<64> @[build/NutShell.fir.opt.mlir 58431:25]
      connect _data_WIRE_1, io.extra.dma.r.bits.data @[build/NutShell.fir.opt.mlir 58432:9]
      node _data_T = bits(_data_WIRE_1, 31, 0) @[build/NutShell.fir.opt.mlir 58434:20]
      connect _data_WIRE[0], _data_T @[build/NutShell.fir.opt.mlir 58435:9]
      node _data_T_1 = bits(_data_WIRE_1, 63, 32) @[build/NutShell.fir.opt.mlir 58437:22]
      connect _data_WIRE[1], _data_T_1 @[build/NutShell.fir.opt.mlir 58438:9]
      node _data_T_2 = bits(src, 2, 2) @[build/NutShell.fir.opt.mlir 58440:22]
      connect data, _data_WIRE[_data_T_2] @[build/NutShell.fir.opt.mlir 58442:9]
      connect state, UInt<3>(3) @[build/NutShell.fir.opt.mlir 58444:9]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58446:16]
    node _awAck_T = and(io.extra.dma.aw.ready, io.extra.dma.aw.valid) @[build/NutShell.fir.opt.mlir 58448:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58449:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58450:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58452:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58454:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58456:9]
    node _wAck_T = and(io.extra.dma.w.ready, io.extra.dma.w.valid) @[build/NutShell.fir.opt.mlir 58459:18]
    node _wAck_T_1 = and(_wAck_T, io.extra.dma.w.bits.last) @[build/NutShell.fir.opt.mlir 58461:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58462:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 58463:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58465:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58467:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58469:9]
    node _wSend_T = and(io.extra.dma.aw.ready, io.extra.dma.aw.valid) @[build/NutShell.fir.opt.mlir 58472:19]
    node _wSend_T_1 = and(io.extra.dma.w.ready, io.extra.dma.w.valid) @[build/NutShell.fir.opt.mlir 58474:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 58476:21]
    node _wSend_T_3 = and(_wSend_T_2, io.extra.dma.w.bits.last) @[build/NutShell.fir.opt.mlir 58478:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 58480:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 58482:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 58483:7]
    node _T_9 = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58485:15]
    node _T_10 = and(_T_9, wSend) @[build/NutShell.fir.opt.mlir 58487:16]
    when _T_10 : @[build/NutShell.fir.opt.mlir 58489:7]
      connect state, UInt<3>(4) @[build/NutShell.fir.opt.mlir 58491:9]
    node _T_11 = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58494:16]
    node _T_12 = and(io.extra.dma.b.ready, io.extra.dma.b.valid) @[build/NutShell.fir.opt.mlir 58496:16]
    node _T_13 = and(_T_11, _T_12) @[build/NutShell.fir.opt.mlir 58498:16]
    when _T_13 : @[build/NutShell.fir.opt.mlir 58499:7]
      node _len_T = sub(len, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58501:19]
      node _len_T_1 = tail(_len_T, 1) @[build/NutShell.fir.opt.mlir 58503:21]
      connect len, _len_T_1 @[build/NutShell.fir.opt.mlir 58504:9]
      node _dest_T = add(dest, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58506:20]
      node _dest_T_1 = tail(_dest_T, 1) @[build/NutShell.fir.opt.mlir 58508:22]
      connect dest, _dest_T_1 @[build/NutShell.fir.opt.mlir 58509:9]
      node _src_T = add(src, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58511:19]
      node _src_T_1 = tail(_src_T, 1) @[build/NutShell.fir.opt.mlir 58513:21]
      connect src, _src_T_1 @[build/NutShell.fir.opt.mlir 58514:9]
      node _state_T = leq(len, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58516:21]
      node _state_T_1 = mux(_state_T, UInt<3>(0), UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58518:23]
      connect state, _state_T_1 @[build/NutShell.fir.opt.mlir 58519:9]
    connect io.extra.dma.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58522:7]
    connect io.extra.dma.ar.bits.id, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58524:7]
    connect io.extra.dma.ar.bits.size, pad(UInt<2>(2), 3) @[build/NutShell.fir.opt.mlir 58528:7]
    connect io.extra.dma.ar.bits.burst, UInt<2>(1) @[build/NutShell.fir.opt.mlir 58531:7]
    connect io.extra.dma.ar.bits.lock, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58533:7]
    connect io.extra.dma.ar.bits.cache, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 58536:7]
    connect io.extra.dma.ar.bits.qos, pad(UInt<1>(0), 4) @[build/NutShell.fir.opt.mlir 58539:7]
    connect io.extra.dma.ar.bits.user, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58541:7]
    connect io.extra.dma.ar.bits.len, pad(UInt<1>(0), 8) @[build/NutShell.fir.opt.mlir 58544:7]
    connect io.extra.dma.ar.bits.addr, src @[build/NutShell.fir.opt.mlir 58545:7]
    node _io_extra_dma_ar_valid_T = eq(state, UInt<3>(1)) @[build/NutShell.fir.opt.mlir 58547:35]
    connect io.extra.dma.ar.valid, _io_extra_dma_ar_valid_T @[build/NutShell.fir.opt.mlir 58548:7]
    node _io_extra_dma_r_ready_T = eq(state, UInt<3>(2)) @[build/NutShell.fir.opt.mlir 58550:34]
    connect io.extra.dma.r.ready, _io_extra_dma_r_ready_T @[build/NutShell.fir.opt.mlir 58551:7]
    connect io.extra.dma.aw.bits.qos, io.extra.dma.ar.bits.qos @[build/NutShell.fir.opt.mlir 58552:7]
    connect io.extra.dma.aw.bits.cache, io.extra.dma.ar.bits.cache @[build/NutShell.fir.opt.mlir 58553:7]
    connect io.extra.dma.aw.bits.lock, io.extra.dma.ar.bits.lock @[build/NutShell.fir.opt.mlir 58554:7]
    connect io.extra.dma.aw.bits.burst, io.extra.dma.ar.bits.burst @[build/NutShell.fir.opt.mlir 58555:7]
    connect io.extra.dma.aw.bits.size, io.extra.dma.ar.bits.size @[build/NutShell.fir.opt.mlir 58556:7]
    connect io.extra.dma.aw.bits.len, io.extra.dma.ar.bits.len @[build/NutShell.fir.opt.mlir 58557:7]
    connect io.extra.dma.aw.bits.user, io.extra.dma.ar.bits.user @[build/NutShell.fir.opt.mlir 58558:7]
    connect io.extra.dma.aw.bits.id, io.extra.dma.ar.bits.id @[build/NutShell.fir.opt.mlir 58559:7]
    connect io.extra.dma.aw.bits.prot, io.extra.dma.ar.bits.prot @[build/NutShell.fir.opt.mlir 58560:7]
    connect io.extra.dma.aw.bits.addr, io.extra.dma.ar.bits.addr @[build/NutShell.fir.opt.mlir 58561:7]
    connect io.extra.dma.aw.bits.addr, dest @[build/NutShell.fir.opt.mlir 58562:7]
    node _io_extra_dma_aw_valid_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58564:35]
    node _io_extra_dma_aw_valid_T_1 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58566:37]
    node _io_extra_dma_aw_valid_T_2 = and(_io_extra_dma_aw_valid_T, _io_extra_dma_aw_valid_T_1) @[build/NutShell.fir.opt.mlir 58568:37]
    connect io.extra.dma.aw.valid, _io_extra_dma_aw_valid_T_2 @[build/NutShell.fir.opt.mlir 58569:7]
    node _io_extra_dma_w_valid_T = eq(state, UInt<3>(3)) @[build/NutShell.fir.opt.mlir 58571:34]
    node _io_extra_dma_w_valid_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58573:36]
    node _io_extra_dma_w_valid_T_2 = and(_io_extra_dma_w_valid_T, _io_extra_dma_w_valid_T_1) @[build/NutShell.fir.opt.mlir 58575:36]
    connect io.extra.dma.w.valid, _io_extra_dma_w_valid_T_2 @[build/NutShell.fir.opt.mlir 58576:7]
    node _io_extra_dma_w_bits_data_T = cat(data, data) @[build/NutShell.fir.opt.mlir 58578:38]
    connect io.extra.dma.w.bits.data, _io_extra_dma_w_bits_data_T @[build/NutShell.fir.opt.mlir 58579:7]
    node _io_extra_dma_w_bits_strb_T = mux(UInt<1>(1), UInt<4>(15), UInt<4>(0)) @[build/NutShell.fir.opt.mlir 58583:38]
    node _io_extra_dma_w_bits_strb_T_1 = bits(dest, 2, 2) @[build/NutShell.fir.opt.mlir 58585:40]
    node _io_extra_dma_w_bits_strb_T_2 = mul(_io_extra_dma_w_bits_strb_T_1, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58587:40]
    node _io_extra_dma_w_bits_strb_T_3 = dshl(_io_extra_dma_w_bits_strb_T, _io_extra_dma_w_bits_strb_T_2) @[build/NutShell.fir.opt.mlir 58589:40]
    connect io.extra.dma.w.bits.strb, tail(_io_extra_dma_w_bits_strb_T_3, 11) @[build/NutShell.fir.opt.mlir 58591:7]
    connect io.extra.dma.w.bits.last, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58593:7]
    node _io_extra_dma_b_ready_T = eq(state, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58595:34]
    connect io.extra.dma.b.ready, _io_extra_dma_b_ready_T @[build/NutShell.fir.opt.mlir 58596:7]
    node _T_14 = bits(raddr, 3, 0) @[build/NutShell.fir.opt.mlir 58598:16]
    node _T_15 = bits(waddr, 3, 0) @[build/NutShell.fir.opt.mlir 58600:16]
    node _T_16 = and(io.in.w.ready, io.in.w.valid) @[build/NutShell.fir.opt.mlir 58602:16]
    node _T_17 = bits(io.in.w.bits.data, 31, 0) @[build/NutShell.fir.opt.mlir 58604:16]
    node _T_18 = bits(waddr, 2, 0) @[build/NutShell.fir.opt.mlir 58606:16]
    node _T_19 = dshr(io.in.w.bits.strb, _T_18) @[build/NutShell.fir.opt.mlir 58608:16]
    node _T_20 = bits(_T_19, 0, 0) @[build/NutShell.fir.opt.mlir 58610:16]
    node _T_21 = bits(_T_19, 1, 1) @[build/NutShell.fir.opt.mlir 58612:16]
    node _T_22 = bits(_T_19, 2, 2) @[build/NutShell.fir.opt.mlir 58614:16]
    node _T_23 = bits(_T_19, 3, 3) @[build/NutShell.fir.opt.mlir 58616:16]
    node _T_24 = bits(_T_19, 4, 4) @[build/NutShell.fir.opt.mlir 58618:16]
    node _T_25 = bits(_T_19, 5, 5) @[build/NutShell.fir.opt.mlir 58620:16]
    node _T_26 = bits(_T_19, 6, 6) @[build/NutShell.fir.opt.mlir 58622:16]
    node _T_27 = bits(_T_19, 7, 7) @[build/NutShell.fir.opt.mlir 58624:16]
    node _T_28 = mux(_T_20, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58626:16]
    node _T_29 = mux(_T_21, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58628:16]
    node _T_30 = mux(_T_22, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58630:16]
    node _T_31 = mux(_T_23, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58632:16]
    node _T_32 = mux(_T_24, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58634:16]
    node _T_33 = mux(_T_25, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58636:16]
    node _T_34 = mux(_T_26, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58638:16]
    node _T_35 = mux(_T_27, UInt<8>(255), UInt<8>(0)) @[build/NutShell.fir.opt.mlir 58640:16]
    node lo_lo = cat(_T_29, _T_28) @[build/NutShell.fir.opt.mlir 58642:16]
    node lo_hi = cat(_T_31, _T_30) @[build/NutShell.fir.opt.mlir 58644:16]
    node lo = cat(lo_hi, lo_lo) @[build/NutShell.fir.opt.mlir 58646:13]
    node hi_lo = cat(_T_33, _T_32) @[build/NutShell.fir.opt.mlir 58648:16]
    node hi_hi = cat(_T_35, _T_34) @[build/NutShell.fir.opt.mlir 58650:16]
    node hi = cat(hi_hi, hi_lo) @[build/NutShell.fir.opt.mlir 58652:13]
    node _T_36 = cat(hi, lo) @[build/NutShell.fir.opt.mlir 58654:16]
    node _T_37 = bits(_T_36, 31, 0) @[build/NutShell.fir.opt.mlir 58656:16]
    node _io_in_r_bits_data_T = eq(UInt<1>(0), _T_14) @[build/NutShell.fir.opt.mlir 58658:31]
    node _io_in_r_bits_data_T_1 = eq(UInt<3>(4), _T_14) @[build/NutShell.fir.opt.mlir 58660:33]
    node _io_in_r_bits_data_T_2 = eq(UInt<4>(8), _T_14) @[build/NutShell.fir.opt.mlir 58663:33]
    node _io_in_r_bits_data_T_3 = mux(_io_in_r_bits_data_T, dest, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58665:33]
    node _io_in_r_bits_data_T_4 = mux(_io_in_r_bits_data_T_1, src, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58667:33]
    node _io_in_r_bits_data_T_5 = mux(_io_in_r_bits_data_T_2, len, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58669:33]
    node _io_in_r_bits_data_T_6 = or(_io_in_r_bits_data_T_3, _io_in_r_bits_data_T_4) @[build/NutShell.fir.opt.mlir 58671:33]
    node _io_in_r_bits_data_T_7 = or(_io_in_r_bits_data_T_6, _io_in_r_bits_data_T_5) @[build/NutShell.fir.opt.mlir 58673:33]
    wire _io_in_r_bits_data_WIRE : UInt<32> @[build/NutShell.fir.opt.mlir 58674:34]
    connect _io_in_r_bits_data_WIRE, _io_in_r_bits_data_T_7 @[build/NutShell.fir.opt.mlir 58675:7]
    connect io.in.r.bits.data, pad(_io_in_r_bits_data_WIRE, 64) @[build/NutShell.fir.opt.mlir 58677:7]
    node _T_38 = eq(_T_15, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58679:16]
    node _T_39 = and(_T_16, _T_38) @[build/NutShell.fir.opt.mlir 58681:16]
    when _T_39 : @[build/NutShell.fir.opt.mlir 58682:7]
      node _dest_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58684:22]
      node _dest_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58686:22]
      node _dest_T_4 = and(dest, _dest_T_3) @[build/NutShell.fir.opt.mlir 58688:22]
      node _dest_T_5 = or(_dest_T_2, _dest_T_4) @[build/NutShell.fir.opt.mlir 58690:22]
      connect dest, _dest_T_5 @[build/NutShell.fir.opt.mlir 58691:9]
    node _T_40 = eq(_T_15, UInt<3>(4)) @[build/NutShell.fir.opt.mlir 58694:16]
    node _T_41 = and(_T_16, _T_40) @[build/NutShell.fir.opt.mlir 58696:16]
    when _T_41 : @[build/NutShell.fir.opt.mlir 58697:7]
      node _src_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58699:21]
      node _src_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58701:21]
      node _src_T_4 = and(src, _src_T_3) @[build/NutShell.fir.opt.mlir 58703:21]
      node _src_T_5 = or(_src_T_2, _src_T_4) @[build/NutShell.fir.opt.mlir 58705:21]
      connect src, _src_T_5 @[build/NutShell.fir.opt.mlir 58706:9]
    node _T_42 = eq(_T_15, UInt<4>(8)) @[build/NutShell.fir.opt.mlir 58709:16]
    node _T_43 = and(_T_16, _T_42) @[build/NutShell.fir.opt.mlir 58711:16]
    when _T_43 : @[build/NutShell.fir.opt.mlir 58712:7]
      node _len_T_2 = and(_T_17, _T_37) @[build/NutShell.fir.opt.mlir 58714:21]
      node _len_T_3 = not(_T_37) @[build/NutShell.fir.opt.mlir 58716:21]
      node _len_T_4 = and(len, _len_T_3) @[build/NutShell.fir.opt.mlir 58718:21]
      node _len_T_5 = or(_len_T_2, _len_T_4) @[build/NutShell.fir.opt.mlir 58720:21]
      connect len, _len_T_5 @[build/NutShell.fir.opt.mlir 58721:9]

  module SimpleBus2AXI4Converter_3 : @[build/NutShell.fir.opt.mlir 58724:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58724:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58724:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 58724:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 58768:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 58770:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58773:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58776:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58778:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 58780:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58782:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58783:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58785:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 58786:9]
        skip @[build/NutShell.fir.opt.mlir 58787:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 58789:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 58791:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58794:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 58795:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 58796:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 58797:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58799:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 58800:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58802:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 58803:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 58804:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 58805:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58808:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 58810:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58811:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58813:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58814:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58815:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58817:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58819:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58821:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58824:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 58826:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58827:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 58828:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58830:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58832:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58834:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58837:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 58839:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 58841:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 58843:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 58845:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 58847:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 58848:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58850:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 58852:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 58853:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 58854:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 58855:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58858:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58860:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 58862:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58864:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 58866:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 58868:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 58869:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58871:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 58873:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58875:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 58877:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 58878:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58880:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 58882:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58884:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 58886:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 58887:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 58889:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58891:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 58893:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 58895:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 58896:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58897:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 58898:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 58900:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 58901:7]

  module SimpleBus2AXI4Converter_4 : @[build/NutShell.fir.opt.mlir 58903:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 58903:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 58903:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 58903:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 58947:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 58949:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58952:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 58955:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58957:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 58959:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58961:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 58962:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58964:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 58965:9]
        skip @[build/NutShell.fir.opt.mlir 58966:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 58968:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 58970:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 58973:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 58974:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 58975:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 58976:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58978:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 58979:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58981:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 58982:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 58983:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 58984:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 58987:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 58989:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 58990:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 58992:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 58993:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 58994:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 58996:9]
    when wSend : @[build/NutShell.fir.opt.mlir 58998:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59000:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59003:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59005:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59006:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59007:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59009:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59011:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59013:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59016:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59018:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59020:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59022:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59024:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59026:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59027:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59029:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59031:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59032:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59033:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59034:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59037:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59039:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59041:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59043:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59045:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59047:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59048:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59050:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59052:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59054:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59056:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59057:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59059:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59061:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59063:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59065:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59066:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59068:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59070:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59072:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59074:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59075:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59076:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59077:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59079:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59080:7]

  module SimpleBus2AXI4Converter_5 : @[build/NutShell.fir.opt.mlir 59082:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59082:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59082:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59082:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59126:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59128:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59131:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59134:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59136:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59138:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59140:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59141:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59143:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59144:9]
        skip @[build/NutShell.fir.opt.mlir 59145:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59147:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59149:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59152:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59153:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59154:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59155:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59157:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59158:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59160:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59161:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59162:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59163:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59166:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59168:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59169:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59171:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59172:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59173:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59175:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59177:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59179:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59182:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59184:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59185:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59186:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59188:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59190:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59192:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59195:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59197:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59199:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59201:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59203:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59205:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59206:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59208:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59210:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59211:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59212:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59213:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59216:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59218:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59220:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59222:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59224:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59226:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59227:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59229:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59231:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59233:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59235:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59236:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59238:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59240:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59242:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59244:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59245:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59247:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59249:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59251:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59253:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59254:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59255:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59256:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59258:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59259:7]

  module SimpleBus2AXI4Converter_6 : @[build/NutShell.fir.opt.mlir 59261:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59261:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59261:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59261:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59305:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59307:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59310:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59313:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59315:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59317:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59319:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59320:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59322:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59323:9]
        skip @[build/NutShell.fir.opt.mlir 59324:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59326:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59328:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59331:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59332:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59333:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59334:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59336:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59337:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59339:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59340:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59341:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59342:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59345:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59347:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59348:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59350:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59351:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59352:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59354:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59356:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59358:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59361:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59363:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59364:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59365:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59367:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59369:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59371:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59374:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59376:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59378:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59380:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59382:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59384:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59385:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59387:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59389:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59390:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59391:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59392:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59395:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59397:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59399:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59401:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59403:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59405:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59406:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59408:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59410:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59412:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59414:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59415:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59417:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59419:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59421:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59423:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59424:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59426:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59428:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59430:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59432:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59433:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59434:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59435:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59437:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59438:7]

  module SimpleBus2AXI4Converter_7 : @[build/NutShell.fir.opt.mlir 59440:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59440:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59440:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59440:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59484:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59486:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59489:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59492:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59494:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59496:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59498:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59499:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59501:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59502:9]
        skip @[build/NutShell.fir.opt.mlir 59503:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59505:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59507:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59510:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59511:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59512:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59513:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59515:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59516:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59518:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59519:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59520:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59521:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59524:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59526:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59527:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59529:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59530:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59531:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59533:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59535:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59537:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59540:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59542:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59543:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59544:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59546:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59548:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59550:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59553:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59555:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59557:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59559:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59561:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59563:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59564:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59566:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59568:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59569:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59570:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59571:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59574:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59576:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59578:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59580:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59582:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59584:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59585:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59587:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59589:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59591:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59593:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59594:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59596:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59598:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59600:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59602:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59603:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59605:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59607:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59609:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59611:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59612:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59613:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59614:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59616:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59617:7]

  module SimpleBus2AXI4Converter_8 : @[build/NutShell.fir.opt.mlir 59619:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59619:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59619:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59619:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59663:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59665:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59668:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59671:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59673:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59675:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59677:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59678:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59680:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59681:9]
        skip @[build/NutShell.fir.opt.mlir 59682:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59684:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59686:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59689:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59690:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59691:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59692:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59694:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59695:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59697:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59698:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59699:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59700:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59703:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59705:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59706:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59708:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59709:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59710:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59712:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59714:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59716:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59719:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59721:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59722:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59723:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59725:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59727:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59729:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59732:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59734:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59736:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59738:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59740:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59742:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59743:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59745:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59747:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59748:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59749:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59750:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59753:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59755:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59757:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59759:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59761:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59763:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59764:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59766:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59768:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59770:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59772:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59773:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59775:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59777:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59779:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59781:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59782:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59784:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59786:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59788:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59790:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59791:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59792:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59793:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59795:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59796:7]

  module SimpleBus2AXI4Converter_9 : @[build/NutShell.fir.opt.mlir 59798:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59798:57]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59798:83]
    output io : { flip in : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, out : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64> } } } } @[build/NutShell.fir.opt.mlir 59798:110]

    node _toAXI4Lite_T = bits(io.in.req.bits.cmd, 1, 1) @[build/NutShell.fir.opt.mlir 59842:24]
    node _toAXI4Lite_T_1 = and(io.in.req.valid, _toAXI4Lite_T) @[build/NutShell.fir.opt.mlir 59844:26]
    node _toAXI4Lite_T_2 = eq(_toAXI4Lite_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59847:26]
    node toAXI4Lite = and(_toAXI4Lite_T_2, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 59850:21]
    node _T = or(toAXI4Lite, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59852:13]
    node _T_1 = asUInt(reset) @[build/NutShell.fir.opt.mlir 59854:15]
    node _T_2 = eq(_T_1, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59856:15]
    when _T_2 : @[build/NutShell.fir.opt.mlir 59857:7]
      node _T_3 = eq(_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59859:17]
      when _T_3 : @[build/NutShell.fir.opt.mlir 59860:9]
        skip @[build/NutShell.fir.opt.mlir 59861:11]
      assert(clock, _T, UInt<1>(1), "") : assert @[build/NutShell.fir.opt.mlir 59863:9]
    connect io.out.ar.bits.addr, io.in.req.bits.addr @[build/NutShell.fir.opt.mlir 59865:7]
    connect io.out.ar.bits.prot, UInt<3>(1) @[build/NutShell.fir.opt.mlir 59868:7]
    connect io.out.w.bits.data, io.in.req.bits.wdata @[build/NutShell.fir.opt.mlir 59869:7]
    connect io.out.w.bits.strb, io.in.req.bits.wmask @[build/NutShell.fir.opt.mlir 59870:7]
    wire wlast : UInt<1> @[build/NutShell.fir.opt.mlir 59871:16]
    connect wlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59873:7]
    wire rlast : UInt<1> @[build/NutShell.fir.opt.mlir 59874:16]
    connect rlast, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59876:7]
    connect io.out.aw.bits.prot, io.out.ar.bits.prot @[build/NutShell.fir.opt.mlir 59877:7]
    connect io.out.aw.bits.addr, io.out.ar.bits.addr @[build/NutShell.fir.opt.mlir 59878:7]
    connect io.in.resp.bits.rdata, io.out.r.bits.data @[build/NutShell.fir.opt.mlir 59879:7]
    node _io_in_resp_bits_cmd_T = mux(rlast, UInt<3>(6), UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59882:33]
    connect io.in.resp.bits.cmd, pad(_io_in_resp_bits_cmd_T, 4) @[build/NutShell.fir.opt.mlir 59884:7]
    wire wSend : UInt<1> @[build/NutShell.fir.opt.mlir 59885:16]
    node _awAck_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59887:19]
    regreset awAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59888:16]
    when _awAck_T : @[build/NutShell.fir.opt.mlir 59889:7]
      connect awAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59891:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59893:7]
      connect awAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59895:9]
    node _wAck_T = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59898:18]
    node _wAck_T_1 = and(_wAck_T, wlast) @[build/NutShell.fir.opt.mlir 59900:20]
    regreset wAck : UInt<1>, clock, reset, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59901:15]
    when _wAck_T_1 : @[build/NutShell.fir.opt.mlir 59902:7]
      connect wAck, UInt<1>(1) @[build/NutShell.fir.opt.mlir 59904:9]
    when wSend : @[build/NutShell.fir.opt.mlir 59906:7]
      connect wAck, UInt<1>(0) @[build/NutShell.fir.opt.mlir 59908:9]
    node _wSend_T = and(io.out.aw.ready, io.out.aw.valid) @[build/NutShell.fir.opt.mlir 59911:19]
    node _wSend_T_1 = and(io.out.w.ready, io.out.w.valid) @[build/NutShell.fir.opt.mlir 59913:21]
    node _wSend_T_2 = and(_wSend_T, _wSend_T_1) @[build/NutShell.fir.opt.mlir 59915:21]
    node _wSend_T_3 = and(_wSend_T_2, wlast) @[build/NutShell.fir.opt.mlir 59917:21]
    node _wSend_T_4 = and(awAck, wAck) @[build/NutShell.fir.opt.mlir 59919:21]
    node _wSend_T_5 = or(_wSend_T_3, _wSend_T_4) @[build/NutShell.fir.opt.mlir 59921:21]
    connect wSend, _wSend_T_5 @[build/NutShell.fir.opt.mlir 59922:7]
    node _wen_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59924:17]
    node _wen_T_1 = and(io.in.req.ready, io.in.req.valid) @[build/NutShell.fir.opt.mlir 59926:19]
    reg wen : UInt<1>, clock @[build/NutShell.fir.opt.mlir 59927:14]
    when _wen_T_1 : @[build/NutShell.fir.opt.mlir 59928:7]
      connect wen, _wen_T @[build/NutShell.fir.opt.mlir 59929:9]
    node _io_out_ar_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59932:29]
    node _io_out_ar_valid_T_1 = eq(_io_out_ar_valid_T, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59934:31]
    node _io_out_ar_valid_T_2 = bits(io.in.req.bits.cmd, 3, 3) @[build/NutShell.fir.opt.mlir 59936:31]
    node _io_out_ar_valid_T_3 = eq(_io_out_ar_valid_T_2, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59938:31]
    node _io_out_ar_valid_T_4 = and(_io_out_ar_valid_T_1, _io_out_ar_valid_T_3) @[build/NutShell.fir.opt.mlir 59940:31]
    node _io_out_ar_valid_T_5 = and(io.in.req.valid, _io_out_ar_valid_T_4) @[build/NutShell.fir.opt.mlir 59942:31]
    connect io.out.ar.valid, _io_out_ar_valid_T_5 @[build/NutShell.fir.opt.mlir 59943:7]
    node _io_out_aw_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59945:29]
    node _io_out_aw_valid_T_1 = and(io.in.req.valid, _io_out_aw_valid_T) @[build/NutShell.fir.opt.mlir 59947:31]
    node _io_out_aw_valid_T_2 = eq(awAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59949:31]
    node _io_out_aw_valid_T_3 = and(_io_out_aw_valid_T_1, _io_out_aw_valid_T_2) @[build/NutShell.fir.opt.mlir 59951:31]
    connect io.out.aw.valid, _io_out_aw_valid_T_3 @[build/NutShell.fir.opt.mlir 59952:7]
    node _io_out_w_valid_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59954:28]
    node _io_out_w_valid_T_1 = and(io.in.req.valid, _io_out_w_valid_T) @[build/NutShell.fir.opt.mlir 59956:30]
    node _io_out_w_valid_T_2 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59958:30]
    node _io_out_w_valid_T_3 = and(_io_out_w_valid_T_1, _io_out_w_valid_T_2) @[build/NutShell.fir.opt.mlir 59960:30]
    connect io.out.w.valid, _io_out_w_valid_T_3 @[build/NutShell.fir.opt.mlir 59961:7]
    node _io_in_req_ready_T = bits(io.in.req.bits.cmd, 0, 0) @[build/NutShell.fir.opt.mlir 59963:29]
    node _io_in_req_ready_T_1 = eq(wAck, UInt<1>(0)) @[build/NutShell.fir.opt.mlir 59965:31]
    node _io_in_req_ready_T_2 = and(_io_in_req_ready_T_1, io.out.w.ready) @[build/NutShell.fir.opt.mlir 59967:31]
    node _io_in_req_ready_T_3 = mux(_io_in_req_ready_T, _io_in_req_ready_T_2, io.out.ar.ready) @[build/NutShell.fir.opt.mlir 59969:31]
    connect io.in.req.ready, _io_in_req_ready_T_3 @[build/NutShell.fir.opt.mlir 59970:7]
    connect io.out.r.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59971:7]
    connect io.out.b.ready, io.in.resp.ready @[build/NutShell.fir.opt.mlir 59972:7]
    node _io_in_resp_valid_T = mux(wen, io.out.b.valid, io.out.r.valid) @[build/NutShell.fir.opt.mlir 59974:30]
    connect io.in.resp.valid, _io_in_resp_valid_T @[build/NutShell.fir.opt.mlir 59975:7]

  module SimMMIO : @[build/NutShell.fir.opt.mlir 59977:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 59977:39]
    input reset : Reset @[build/NutShell.fir.opt.mlir 59977:65]
    output io : { flip rw : { req : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, size : UInt<3>, cmd : UInt<4>, wmask : UInt<8>, wdata : UInt<64> } }, flip resp : { flip ready : UInt<1>, valid : UInt<1>, bits : { cmd : UInt<4>, rdata : UInt<64> } } }, meip : UInt<1>, dma : { aw : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, w : { flip ready : UInt<1>, valid : UInt<1>, bits : { data : UInt<64>, strb : UInt<8>, last : UInt<1> } }, flip b : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, id : UInt<1>, user : UInt<1> } }, ar : { flip ready : UInt<1>, valid : UInt<1>, bits : { addr : UInt<32>, prot : UInt<3>, id : UInt<1>, user : UInt<1>, len : UInt<8>, size : UInt<3>, burst : UInt<2>, lock : UInt<1>, cache : UInt<4>, qos : UInt<4> } }, flip r : { flip ready : UInt<1>, valid : UInt<1>, bits : { resp : UInt<2>, data : UInt<64>, last : UInt<1>, id : UInt<1>, user : UInt<1> } } }, uart : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 59977:92]

    inst xbar of SimpleBusCrossbar1toN_1 @[build/NutShell.fir.opt.mlir 60014:44]
    connect xbar.clock, clock @[build/NutShell.fir.opt.mlir 60088:7]
    connect xbar.reset, reset @[build/NutShell.fir.opt.mlir 60089:7]
    connect io.rw.req.ready, xbar.io.in.req.ready @[build/NutShell.fir.opt.mlir 60090:7]
    connect xbar.io.in.req.valid, io.rw.req.valid @[build/NutShell.fir.opt.mlir 60091:7]
    connect xbar.io.in.req.bits, io.rw.req.bits @[build/NutShell.fir.opt.mlir 60092:7]
    connect xbar.io.in.resp.ready, io.rw.resp.ready @[build/NutShell.fir.opt.mlir 60093:7]
    connect io.rw.resp.valid, xbar.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60094:7]
    connect io.rw.resp.bits, xbar.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60095:7]
    inst uart of AXI4UART @[build/NutShell.fir.opt.mlir 60096:44]
    connect uart.clock, clock @[build/NutShell.fir.opt.mlir 60123:7]
    connect uart.reset, reset @[build/NutShell.fir.opt.mlir 60124:7]
    inst vga of AXI4VGA @[build/NutShell.fir.opt.mlir 60125:41]
    connect vga.clock, clock @[build/NutShell.fir.opt.mlir 60169:7]
    connect vga.reset, reset @[build/NutShell.fir.opt.mlir 60170:7]
    inst flash of AXI4Flash @[build/NutShell.fir.opt.mlir 60171:47]
    connect flash.clock, clock @[build/NutShell.fir.opt.mlir 60193:7]
    connect flash.reset, reset @[build/NutShell.fir.opt.mlir 60194:7]
    inst sd of AXI4DummySD @[build/NutShell.fir.opt.mlir 60195:38]
    connect sd.clock, clock @[build/NutShell.fir.opt.mlir 60217:7]
    connect sd.reset, reset @[build/NutShell.fir.opt.mlir 60218:7]
    inst meipGen of AXI4MeipGen @[build/NutShell.fir.opt.mlir 60219:53]
    connect meipGen.clock, clock @[build/NutShell.fir.opt.mlir 60243:7]
    connect meipGen.reset, reset @[build/NutShell.fir.opt.mlir 60244:7]
    inst dma of AXI4DMA @[build/NutShell.fir.opt.mlir 60245:41]
    connect dma.clock, clock @[build/NutShell.fir.opt.mlir 60289:7]
    connect dma.reset, reset @[build/NutShell.fir.opt.mlir 60290:7]
    inst uart_io_in_bridge of SimpleBus2AXI4Converter_3 @[build/NutShell.fir.opt.mlir 60291:83]
    connect uart_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60322:7]
    connect uart_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60323:7]
    connect xbar.io.out[0].req.ready, uart_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60324:7]
    connect uart_io_in_bridge.io.in.req.valid, xbar.io.out[0].req.valid @[build/NutShell.fir.opt.mlir 60325:7]
    connect uart_io_in_bridge.io.in.req.bits, xbar.io.out[0].req.bits @[build/NutShell.fir.opt.mlir 60326:7]
    connect uart_io_in_bridge.io.in.resp.ready, xbar.io.out[0].resp.ready @[build/NutShell.fir.opt.mlir 60327:7]
    connect xbar.io.out[0].resp.valid, uart_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60328:7]
    connect xbar.io.out[0].resp.bits, uart_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60329:7]
    connect uart_io_in_bridge.io.out.aw.ready, uart.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60330:7]
    connect uart.io.in.aw.valid, uart_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60331:7]
    connect uart.io.in.aw.bits, uart_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60332:7]
    connect uart_io_in_bridge.io.out.w.ready, uart.io.in.w.ready @[build/NutShell.fir.opt.mlir 60333:7]
    connect uart.io.in.w.valid, uart_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60334:7]
    connect uart.io.in.w.bits, uart_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60335:7]
    connect uart.io.in.b.ready, uart_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60336:7]
    connect uart_io_in_bridge.io.out.b.valid, uart.io.in.b.valid @[build/NutShell.fir.opt.mlir 60337:7]
    connect uart_io_in_bridge.io.out.b.bits, uart.io.in.b.bits @[build/NutShell.fir.opt.mlir 60338:7]
    connect uart_io_in_bridge.io.out.ar.ready, uart.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60339:7]
    connect uart.io.in.ar.valid, uart_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60340:7]
    connect uart.io.in.ar.bits, uart_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60341:7]
    connect uart.io.in.r.ready, uart_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60342:7]
    connect uart_io_in_bridge.io.out.r.valid, uart.io.in.r.valid @[build/NutShell.fir.opt.mlir 60343:7]
    connect uart_io_in_bridge.io.out.r.bits, uart.io.in.r.bits @[build/NutShell.fir.opt.mlir 60344:7]
    inst vga_io_in_fb_bridge of SimpleBus2AXI4Converter_4 @[build/NutShell.fir.opt.mlir 60345:89]
    connect vga_io_in_fb_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60376:7]
    connect vga_io_in_fb_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60377:7]
    connect xbar.io.out[1].req.ready, vga_io_in_fb_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60378:7]
    connect vga_io_in_fb_bridge.io.in.req.valid, xbar.io.out[1].req.valid @[build/NutShell.fir.opt.mlir 60379:7]
    connect vga_io_in_fb_bridge.io.in.req.bits, xbar.io.out[1].req.bits @[build/NutShell.fir.opt.mlir 60380:7]
    connect vga_io_in_fb_bridge.io.in.resp.ready, xbar.io.out[1].resp.ready @[build/NutShell.fir.opt.mlir 60381:7]
    connect xbar.io.out[1].resp.valid, vga_io_in_fb_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60382:7]
    connect xbar.io.out[1].resp.bits, vga_io_in_fb_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60383:7]
    connect vga_io_in_fb_bridge.io.out.aw.ready, vga.io.in.fb.aw.ready @[build/NutShell.fir.opt.mlir 60384:7]
    connect vga.io.in.fb.aw.valid, vga_io_in_fb_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60385:7]
    connect vga.io.in.fb.aw.bits, vga_io_in_fb_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60386:7]
    connect vga_io_in_fb_bridge.io.out.w.ready, vga.io.in.fb.w.ready @[build/NutShell.fir.opt.mlir 60387:7]
    connect vga.io.in.fb.w.valid, vga_io_in_fb_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60388:7]
    connect vga.io.in.fb.w.bits, vga_io_in_fb_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60389:7]
    connect vga.io.in.fb.b.ready, vga_io_in_fb_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60390:7]
    connect vga_io_in_fb_bridge.io.out.b.valid, vga.io.in.fb.b.valid @[build/NutShell.fir.opt.mlir 60391:7]
    connect vga_io_in_fb_bridge.io.out.b.bits, vga.io.in.fb.b.bits @[build/NutShell.fir.opt.mlir 60392:7]
    connect vga_io_in_fb_bridge.io.out.ar.ready, vga.io.in.fb.ar.ready @[build/NutShell.fir.opt.mlir 60393:7]
    connect vga.io.in.fb.ar.valid, vga_io_in_fb_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60394:7]
    connect vga.io.in.fb.ar.bits, vga_io_in_fb_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60395:7]
    connect vga.io.in.fb.r.ready, vga_io_in_fb_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60396:7]
    connect vga_io_in_fb_bridge.io.out.r.valid, vga.io.in.fb.r.valid @[build/NutShell.fir.opt.mlir 60397:7]
    connect vga_io_in_fb_bridge.io.out.r.bits, vga.io.in.fb.r.bits @[build/NutShell.fir.opt.mlir 60398:7]
    inst vga_io_in_ctrl_bridge of SimpleBus2AXI4Converter_5 @[build/NutShell.fir.opt.mlir 60399:95]
    connect vga_io_in_ctrl_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60430:7]
    connect vga_io_in_ctrl_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60431:7]
    connect xbar.io.out[2].req.ready, vga_io_in_ctrl_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60432:7]
    connect vga_io_in_ctrl_bridge.io.in.req.valid, xbar.io.out[2].req.valid @[build/NutShell.fir.opt.mlir 60433:7]
    connect vga_io_in_ctrl_bridge.io.in.req.bits, xbar.io.out[2].req.bits @[build/NutShell.fir.opt.mlir 60434:7]
    connect vga_io_in_ctrl_bridge.io.in.resp.ready, xbar.io.out[2].resp.ready @[build/NutShell.fir.opt.mlir 60435:7]
    connect xbar.io.out[2].resp.valid, vga_io_in_ctrl_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60436:7]
    connect xbar.io.out[2].resp.bits, vga_io_in_ctrl_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60437:7]
    connect vga_io_in_ctrl_bridge.io.out.aw.ready, vga.io.in.ctrl.aw.ready @[build/NutShell.fir.opt.mlir 60438:7]
    connect vga.io.in.ctrl.aw.valid, vga_io_in_ctrl_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60439:7]
    connect vga.io.in.ctrl.aw.bits, vga_io_in_ctrl_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60440:7]
    connect vga_io_in_ctrl_bridge.io.out.w.ready, vga.io.in.ctrl.w.ready @[build/NutShell.fir.opt.mlir 60441:7]
    connect vga.io.in.ctrl.w.valid, vga_io_in_ctrl_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60442:7]
    connect vga.io.in.ctrl.w.bits, vga_io_in_ctrl_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60443:7]
    connect vga.io.in.ctrl.b.ready, vga_io_in_ctrl_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60444:7]
    connect vga_io_in_ctrl_bridge.io.out.b.valid, vga.io.in.ctrl.b.valid @[build/NutShell.fir.opt.mlir 60445:7]
    connect vga_io_in_ctrl_bridge.io.out.b.bits, vga.io.in.ctrl.b.bits @[build/NutShell.fir.opt.mlir 60446:7]
    connect vga_io_in_ctrl_bridge.io.out.ar.ready, vga.io.in.ctrl.ar.ready @[build/NutShell.fir.opt.mlir 60447:7]
    connect vga.io.in.ctrl.ar.valid, vga_io_in_ctrl_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60448:7]
    connect vga.io.in.ctrl.ar.bits, vga_io_in_ctrl_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60449:7]
    connect vga.io.in.ctrl.r.ready, vga_io_in_ctrl_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60450:7]
    connect vga_io_in_ctrl_bridge.io.out.r.valid, vga.io.in.ctrl.r.valid @[build/NutShell.fir.opt.mlir 60451:7]
    connect vga_io_in_ctrl_bridge.io.out.r.bits, vga.io.in.ctrl.r.bits @[build/NutShell.fir.opt.mlir 60452:7]
    inst flash_io_in_bridge of SimpleBus2AXI4Converter_6 @[build/NutShell.fir.opt.mlir 60453:86]
    connect flash_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60484:7]
    connect flash_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60485:7]
    connect xbar.io.out[3].req.ready, flash_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60486:7]
    connect flash_io_in_bridge.io.in.req.valid, xbar.io.out[3].req.valid @[build/NutShell.fir.opt.mlir 60487:7]
    connect flash_io_in_bridge.io.in.req.bits, xbar.io.out[3].req.bits @[build/NutShell.fir.opt.mlir 60488:7]
    connect flash_io_in_bridge.io.in.resp.ready, xbar.io.out[3].resp.ready @[build/NutShell.fir.opt.mlir 60489:7]
    connect xbar.io.out[3].resp.valid, flash_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60490:7]
    connect xbar.io.out[3].resp.bits, flash_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60491:7]
    connect flash_io_in_bridge.io.out.aw.ready, flash.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60492:7]
    connect flash.io.in.aw.valid, flash_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60493:7]
    connect flash.io.in.aw.bits, flash_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60494:7]
    connect flash_io_in_bridge.io.out.w.ready, flash.io.in.w.ready @[build/NutShell.fir.opt.mlir 60495:7]
    connect flash.io.in.w.valid, flash_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60496:7]
    connect flash.io.in.w.bits, flash_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60497:7]
    connect flash.io.in.b.ready, flash_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60498:7]
    connect flash_io_in_bridge.io.out.b.valid, flash.io.in.b.valid @[build/NutShell.fir.opt.mlir 60499:7]
    connect flash_io_in_bridge.io.out.b.bits, flash.io.in.b.bits @[build/NutShell.fir.opt.mlir 60500:7]
    connect flash_io_in_bridge.io.out.ar.ready, flash.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60501:7]
    connect flash.io.in.ar.valid, flash_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60502:7]
    connect flash.io.in.ar.bits, flash_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60503:7]
    connect flash.io.in.r.ready, flash_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60504:7]
    connect flash_io_in_bridge.io.out.r.valid, flash.io.in.r.valid @[build/NutShell.fir.opt.mlir 60505:7]
    connect flash_io_in_bridge.io.out.r.bits, flash.io.in.r.bits @[build/NutShell.fir.opt.mlir 60506:7]
    inst sd_io_in_bridge of SimpleBus2AXI4Converter_7 @[build/NutShell.fir.opt.mlir 60507:77]
    connect sd_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60538:7]
    connect sd_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60539:7]
    connect xbar.io.out[4].req.ready, sd_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60540:7]
    connect sd_io_in_bridge.io.in.req.valid, xbar.io.out[4].req.valid @[build/NutShell.fir.opt.mlir 60541:7]
    connect sd_io_in_bridge.io.in.req.bits, xbar.io.out[4].req.bits @[build/NutShell.fir.opt.mlir 60542:7]
    connect sd_io_in_bridge.io.in.resp.ready, xbar.io.out[4].resp.ready @[build/NutShell.fir.opt.mlir 60543:7]
    connect xbar.io.out[4].resp.valid, sd_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60544:7]
    connect xbar.io.out[4].resp.bits, sd_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60545:7]
    connect sd_io_in_bridge.io.out.aw.ready, sd.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60546:7]
    connect sd.io.in.aw.valid, sd_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60547:7]
    connect sd.io.in.aw.bits, sd_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60548:7]
    connect sd_io_in_bridge.io.out.w.ready, sd.io.in.w.ready @[build/NutShell.fir.opt.mlir 60549:7]
    connect sd.io.in.w.valid, sd_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60550:7]
    connect sd.io.in.w.bits, sd_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60551:7]
    connect sd.io.in.b.ready, sd_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60552:7]
    connect sd_io_in_bridge.io.out.b.valid, sd.io.in.b.valid @[build/NutShell.fir.opt.mlir 60553:7]
    connect sd_io_in_bridge.io.out.b.bits, sd.io.in.b.bits @[build/NutShell.fir.opt.mlir 60554:7]
    connect sd_io_in_bridge.io.out.ar.ready, sd.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60555:7]
    connect sd.io.in.ar.valid, sd_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60556:7]
    connect sd.io.in.ar.bits, sd_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60557:7]
    connect sd.io.in.r.ready, sd_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60558:7]
    connect sd_io_in_bridge.io.out.r.valid, sd.io.in.r.valid @[build/NutShell.fir.opt.mlir 60559:7]
    connect sd_io_in_bridge.io.out.r.bits, sd.io.in.r.bits @[build/NutShell.fir.opt.mlir 60560:7]
    inst meipGen_io_in_bridge of SimpleBus2AXI4Converter_8 @[build/NutShell.fir.opt.mlir 60561:92]
    connect meipGen_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60592:7]
    connect meipGen_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60593:7]
    connect xbar.io.out[5].req.ready, meipGen_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60594:7]
    connect meipGen_io_in_bridge.io.in.req.valid, xbar.io.out[5].req.valid @[build/NutShell.fir.opt.mlir 60595:7]
    connect meipGen_io_in_bridge.io.in.req.bits, xbar.io.out[5].req.bits @[build/NutShell.fir.opt.mlir 60596:7]
    connect meipGen_io_in_bridge.io.in.resp.ready, xbar.io.out[5].resp.ready @[build/NutShell.fir.opt.mlir 60597:7]
    connect xbar.io.out[5].resp.valid, meipGen_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60598:7]
    connect xbar.io.out[5].resp.bits, meipGen_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60599:7]
    connect meipGen_io_in_bridge.io.out.aw.ready, meipGen.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60600:7]
    connect meipGen.io.in.aw.valid, meipGen_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60601:7]
    connect meipGen.io.in.aw.bits, meipGen_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60602:7]
    connect meipGen_io_in_bridge.io.out.w.ready, meipGen.io.in.w.ready @[build/NutShell.fir.opt.mlir 60603:7]
    connect meipGen.io.in.w.valid, meipGen_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60604:7]
    connect meipGen.io.in.w.bits, meipGen_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60605:7]
    connect meipGen.io.in.b.ready, meipGen_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60606:7]
    connect meipGen_io_in_bridge.io.out.b.valid, meipGen.io.in.b.valid @[build/NutShell.fir.opt.mlir 60607:7]
    connect meipGen_io_in_bridge.io.out.b.bits, meipGen.io.in.b.bits @[build/NutShell.fir.opt.mlir 60608:7]
    connect meipGen_io_in_bridge.io.out.ar.ready, meipGen.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60609:7]
    connect meipGen.io.in.ar.valid, meipGen_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60610:7]
    connect meipGen.io.in.ar.bits, meipGen_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60611:7]
    connect meipGen.io.in.r.ready, meipGen_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60612:7]
    connect meipGen_io_in_bridge.io.out.r.valid, meipGen.io.in.r.valid @[build/NutShell.fir.opt.mlir 60613:7]
    connect meipGen_io_in_bridge.io.out.r.bits, meipGen.io.in.r.bits @[build/NutShell.fir.opt.mlir 60614:7]
    inst dma_io_in_bridge of SimpleBus2AXI4Converter_9 @[build/NutShell.fir.opt.mlir 60615:80]
    connect dma_io_in_bridge.clock, clock @[build/NutShell.fir.opt.mlir 60646:7]
    connect dma_io_in_bridge.reset, reset @[build/NutShell.fir.opt.mlir 60647:7]
    connect xbar.io.out[6].req.ready, dma_io_in_bridge.io.in.req.ready @[build/NutShell.fir.opt.mlir 60648:7]
    connect dma_io_in_bridge.io.in.req.valid, xbar.io.out[6].req.valid @[build/NutShell.fir.opt.mlir 60649:7]
    connect dma_io_in_bridge.io.in.req.bits, xbar.io.out[6].req.bits @[build/NutShell.fir.opt.mlir 60650:7]
    connect dma_io_in_bridge.io.in.resp.ready, xbar.io.out[6].resp.ready @[build/NutShell.fir.opt.mlir 60651:7]
    connect xbar.io.out[6].resp.valid, dma_io_in_bridge.io.in.resp.valid @[build/NutShell.fir.opt.mlir 60652:7]
    connect xbar.io.out[6].resp.bits, dma_io_in_bridge.io.in.resp.bits @[build/NutShell.fir.opt.mlir 60653:7]
    connect dma_io_in_bridge.io.out.aw.ready, dma.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60654:7]
    connect dma.io.in.aw.valid, dma_io_in_bridge.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60655:7]
    connect dma.io.in.aw.bits, dma_io_in_bridge.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60656:7]
    connect dma_io_in_bridge.io.out.w.ready, dma.io.in.w.ready @[build/NutShell.fir.opt.mlir 60657:7]
    connect dma.io.in.w.valid, dma_io_in_bridge.io.out.w.valid @[build/NutShell.fir.opt.mlir 60658:7]
    connect dma.io.in.w.bits, dma_io_in_bridge.io.out.w.bits @[build/NutShell.fir.opt.mlir 60659:7]
    connect dma.io.in.b.ready, dma_io_in_bridge.io.out.b.ready @[build/NutShell.fir.opt.mlir 60660:7]
    connect dma_io_in_bridge.io.out.b.valid, dma.io.in.b.valid @[build/NutShell.fir.opt.mlir 60661:7]
    connect dma_io_in_bridge.io.out.b.bits, dma.io.in.b.bits @[build/NutShell.fir.opt.mlir 60662:7]
    connect dma_io_in_bridge.io.out.ar.ready, dma.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60663:7]
    connect dma.io.in.ar.valid, dma_io_in_bridge.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60664:7]
    connect dma.io.in.ar.bits, dma_io_in_bridge.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60665:7]
    connect dma.io.in.r.ready, dma_io_in_bridge.io.out.r.ready @[build/NutShell.fir.opt.mlir 60666:7]
    connect dma_io_in_bridge.io.out.r.valid, dma.io.in.r.valid @[build/NutShell.fir.opt.mlir 60667:7]
    connect dma_io_in_bridge.io.out.r.bits, dma.io.in.r.bits @[build/NutShell.fir.opt.mlir 60668:7]
    connect io.dma.r.ready, dma.io.extra.dma.r.ready @[build/NutShell.fir.opt.mlir 60669:7]
    connect dma.io.extra.dma.r.valid, io.dma.r.valid @[build/NutShell.fir.opt.mlir 60670:7]
    connect dma.io.extra.dma.r.bits, io.dma.r.bits @[build/NutShell.fir.opt.mlir 60671:7]
    connect io.dma.ar.bits, dma.io.extra.dma.ar.bits @[build/NutShell.fir.opt.mlir 60672:7]
    connect io.dma.ar.valid, dma.io.extra.dma.ar.valid @[build/NutShell.fir.opt.mlir 60673:7]
    connect dma.io.extra.dma.ar.ready, io.dma.ar.ready @[build/NutShell.fir.opt.mlir 60674:7]
    connect io.dma.b.ready, dma.io.extra.dma.b.ready @[build/NutShell.fir.opt.mlir 60675:7]
    connect dma.io.extra.dma.b.valid, io.dma.b.valid @[build/NutShell.fir.opt.mlir 60676:7]
    connect dma.io.extra.dma.b.bits, io.dma.b.bits @[build/NutShell.fir.opt.mlir 60677:7]
    connect io.dma.w.bits, dma.io.extra.dma.w.bits @[build/NutShell.fir.opt.mlir 60678:7]
    connect io.dma.w.valid, dma.io.extra.dma.w.valid @[build/NutShell.fir.opt.mlir 60679:7]
    connect dma.io.extra.dma.w.ready, io.dma.w.ready @[build/NutShell.fir.opt.mlir 60680:7]
    connect io.dma.aw.bits, dma.io.extra.dma.aw.bits @[build/NutShell.fir.opt.mlir 60681:7]
    connect io.dma.aw.valid, dma.io.extra.dma.aw.valid @[build/NutShell.fir.opt.mlir 60682:7]
    connect dma.io.extra.dma.aw.ready, io.dma.aw.ready @[build/NutShell.fir.opt.mlir 60683:7]
    connect io.meip, meipGen.io.extra.meip @[build/NutShell.fir.opt.mlir 60684:7]
    connect uart.io.extra.in.ch, io.uart.in.ch @[build/NutShell.fir.opt.mlir 60685:7]
    connect io.uart.in.valid, uart.io.extra.in.valid @[build/NutShell.fir.opt.mlir 60686:7]
    connect io.uart.out, uart.io.extra.out @[build/NutShell.fir.opt.mlir 60687:7]

  public module SimTop : @[build/NutShell.fir.opt.mlir 60689:5]
    input clock : Clock @[build/NutShell.fir.opt.mlir 60689:30]
    input reset : UInt<1> @[build/NutShell.fir.opt.mlir 60689:56]
    output difftest : { step : UInt<64>, perfCtrl : { flip clean : UInt<1>, flip dump : UInt<1> }, logCtrl : { flip begin : UInt<64>, flip end : UInt<64>, flip level : UInt<64> }, uart : { out : { valid : UInt<1>, ch : UInt<8> }, in : { valid : UInt<1>, flip ch : UInt<8> } } } @[build/NutShell.fir.opt.mlir 60689:85]

    inst soc of NutShell @[build/NutShell.fir.opt.mlir 60701:41]
    connect soc.clock, clock @[build/NutShell.fir.opt.mlir 60754:7]
    connect soc.reset, reset @[build/NutShell.fir.opt.mlir 60756:7]
    inst mem of AXI4RAM @[build/NutShell.fir.opt.mlir 60757:41]
    connect mem.clock, clock @[build/NutShell.fir.opt.mlir 60779:7]
    connect mem.reset, reset @[build/NutShell.fir.opt.mlir 60781:7]
    inst memdelay of AXI4Delayer @[build/NutShell.fir.opt.mlir 60782:56]
    connect memdelay.clock, clock @[build/NutShell.fir.opt.mlir 60825:7]
    connect memdelay.reset, reset @[build/NutShell.fir.opt.mlir 60827:7]
    inst mmio of SimMMIO @[build/NutShell.fir.opt.mlir 60828:44]
    connect mmio.clock, clock @[build/NutShell.fir.opt.mlir 60865:7]
    connect mmio.reset, reset @[build/NutShell.fir.opt.mlir 60867:7]
    connect mmio.io.dma.aw.ready, soc.io.frontend.aw.ready @[build/NutShell.fir.opt.mlir 60868:7]
    connect soc.io.frontend.aw.valid, mmio.io.dma.aw.valid @[build/NutShell.fir.opt.mlir 60869:7]
    connect soc.io.frontend.aw.bits, mmio.io.dma.aw.bits @[build/NutShell.fir.opt.mlir 60870:7]
    connect mmio.io.dma.w.ready, soc.io.frontend.w.ready @[build/NutShell.fir.opt.mlir 60871:7]
    connect soc.io.frontend.w.valid, mmio.io.dma.w.valid @[build/NutShell.fir.opt.mlir 60872:7]
    connect soc.io.frontend.w.bits, mmio.io.dma.w.bits @[build/NutShell.fir.opt.mlir 60873:7]
    connect soc.io.frontend.b.ready, mmio.io.dma.b.ready @[build/NutShell.fir.opt.mlir 60874:7]
    connect mmio.io.dma.b.valid, soc.io.frontend.b.valid @[build/NutShell.fir.opt.mlir 60875:7]
    connect mmio.io.dma.b.bits, soc.io.frontend.b.bits @[build/NutShell.fir.opt.mlir 60876:7]
    connect mmio.io.dma.ar.ready, soc.io.frontend.ar.ready @[build/NutShell.fir.opt.mlir 60877:7]
    connect soc.io.frontend.ar.valid, mmio.io.dma.ar.valid @[build/NutShell.fir.opt.mlir 60878:7]
    connect soc.io.frontend.ar.bits, mmio.io.dma.ar.bits @[build/NutShell.fir.opt.mlir 60879:7]
    connect soc.io.frontend.r.ready, mmio.io.dma.r.ready @[build/NutShell.fir.opt.mlir 60880:7]
    connect mmio.io.dma.r.valid, soc.io.frontend.r.valid @[build/NutShell.fir.opt.mlir 60881:7]
    connect mmio.io.dma.r.bits, soc.io.frontend.r.bits @[build/NutShell.fir.opt.mlir 60882:7]
    connect soc.io.mem.aw.ready, memdelay.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60883:7]
    connect memdelay.io.in.aw.valid, soc.io.mem.aw.valid @[build/NutShell.fir.opt.mlir 60884:7]
    connect memdelay.io.in.aw.bits, soc.io.mem.aw.bits @[build/NutShell.fir.opt.mlir 60885:7]
    connect soc.io.mem.w.ready, memdelay.io.in.w.ready @[build/NutShell.fir.opt.mlir 60886:7]
    connect memdelay.io.in.w.valid, soc.io.mem.w.valid @[build/NutShell.fir.opt.mlir 60887:7]
    connect memdelay.io.in.w.bits, soc.io.mem.w.bits @[build/NutShell.fir.opt.mlir 60888:7]
    connect memdelay.io.in.b.ready, soc.io.mem.b.ready @[build/NutShell.fir.opt.mlir 60889:7]
    connect soc.io.mem.b.valid, memdelay.io.in.b.valid @[build/NutShell.fir.opt.mlir 60890:7]
    connect soc.io.mem.b.bits, memdelay.io.in.b.bits @[build/NutShell.fir.opt.mlir 60891:7]
    connect soc.io.mem.ar.ready, memdelay.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60892:7]
    connect memdelay.io.in.ar.valid, soc.io.mem.ar.valid @[build/NutShell.fir.opt.mlir 60893:7]
    connect memdelay.io.in.ar.bits, soc.io.mem.ar.bits @[build/NutShell.fir.opt.mlir 60894:7]
    connect memdelay.io.in.r.ready, soc.io.mem.r.ready @[build/NutShell.fir.opt.mlir 60895:7]
    connect soc.io.mem.r.valid, memdelay.io.in.r.valid @[build/NutShell.fir.opt.mlir 60896:7]
    connect soc.io.mem.r.bits, memdelay.io.in.r.bits @[build/NutShell.fir.opt.mlir 60897:7]
    connect memdelay.io.out.aw.ready, mem.io.in.aw.ready @[build/NutShell.fir.opt.mlir 60898:7]
    connect mem.io.in.aw.valid, memdelay.io.out.aw.valid @[build/NutShell.fir.opt.mlir 60899:7]
    connect mem.io.in.aw.bits, memdelay.io.out.aw.bits @[build/NutShell.fir.opt.mlir 60900:7]
    connect memdelay.io.out.w.ready, mem.io.in.w.ready @[build/NutShell.fir.opt.mlir 60901:7]
    connect mem.io.in.w.valid, memdelay.io.out.w.valid @[build/NutShell.fir.opt.mlir 60902:7]
    connect mem.io.in.w.bits, memdelay.io.out.w.bits @[build/NutShell.fir.opt.mlir 60903:7]
    connect mem.io.in.b.ready, memdelay.io.out.b.ready @[build/NutShell.fir.opt.mlir 60904:7]
    connect memdelay.io.out.b.valid, mem.io.in.b.valid @[build/NutShell.fir.opt.mlir 60905:7]
    connect memdelay.io.out.b.bits, mem.io.in.b.bits @[build/NutShell.fir.opt.mlir 60906:7]
    connect memdelay.io.out.ar.ready, mem.io.in.ar.ready @[build/NutShell.fir.opt.mlir 60907:7]
    connect mem.io.in.ar.valid, memdelay.io.out.ar.valid @[build/NutShell.fir.opt.mlir 60908:7]
    connect mem.io.in.ar.bits, memdelay.io.out.ar.bits @[build/NutShell.fir.opt.mlir 60909:7]
    connect mem.io.in.r.ready, memdelay.io.out.r.ready @[build/NutShell.fir.opt.mlir 60910:7]
    connect memdelay.io.out.r.valid, mem.io.in.r.valid @[build/NutShell.fir.opt.mlir 60911:7]
    connect memdelay.io.out.r.bits, mem.io.in.r.bits @[build/NutShell.fir.opt.mlir 60912:7]
    connect soc.io.mmio.req.ready, mmio.io.rw.req.ready @[build/NutShell.fir.opt.mlir 60913:7]
    connect mmio.io.rw.req.valid, soc.io.mmio.req.valid @[build/NutShell.fir.opt.mlir 60914:7]
    connect mmio.io.rw.req.bits, soc.io.mmio.req.bits @[build/NutShell.fir.opt.mlir 60915:7]
    connect mmio.io.rw.resp.ready, soc.io.mmio.resp.ready @[build/NutShell.fir.opt.mlir 60916:7]
    connect soc.io.mmio.resp.valid, mmio.io.rw.resp.valid @[build/NutShell.fir.opt.mlir 60917:7]
    connect soc.io.mmio.resp.bits, mmio.io.rw.resp.bits @[build/NutShell.fir.opt.mlir 60918:7]
    connect soc.io.meip, mmio.io.meip @[build/NutShell.fir.opt.mlir 60919:7]
    connect difftest.step, pad(UInt<1>(1), 64) @[build/NutShell.fir.opt.mlir 60923:7]
    regreset difftest_timer : UInt<64>, clock, reset, UInt<64>(0) @[build/NutShell.fir.opt.mlir 60925:25]
    node _difftest_timer_T = add(difftest_timer, UInt<1>(1)) @[build/NutShell.fir.opt.mlir 60927:28]
    node _difftest_timer_T_1 = tail(_difftest_timer_T, 1) @[build/NutShell.fir.opt.mlir 60929:30]
    connect difftest_timer, _difftest_timer_T_1 @[build/NutShell.fir.opt.mlir 60930:7]
    wire difftest_log_enable : UInt<1> @[build/NutShell.fir.opt.mlir 60931:30]
    connect difftest_log_enable, UInt<1>(0) @[build/NutShell.fir.opt.mlir 60934:7]
    node _difftest_log_enable_en_T = geq(difftest_timer, difftest.logCtrl.begin) @[build/NutShell.fir.opt.mlir 60936:36]
    node _difftest_log_enable_en_T_1 = lt(difftest_timer, difftest.logCtrl.end) @[build/NutShell.fir.opt.mlir 60938:38]
    node _difftest_log_enable_en_T_2 = and(_difftest_log_enable_en_T, _difftest_log_enable_en_T_1) @[build/NutShell.fir.opt.mlir 60940:38]
    connect difftest_log_enable, _difftest_log_enable_en_T_2 @[build/NutShell.fir.opt.mlir 60941:7]
    invalidate difftest.uart.in.valid @[build/NutShell.fir.opt.mlir 60943:7]
    invalidate difftest.uart.out.ch @[build/NutShell.fir.opt.mlir 60945:7]
    invalidate difftest.uart.out.valid @[build/NutShell.fir.opt.mlir 60947:7]
    connect mmio.io.uart.in.ch, difftest.uart.in.ch @[build/NutShell.fir.opt.mlir 60948:7]
    connect difftest.uart.in.valid, mmio.io.uart.in.valid @[build/NutShell.fir.opt.mlir 60949:7]
    connect difftest.uart.out, mmio.io.uart.out @[build/NutShell.fir.opt.mlir 60950:7]
