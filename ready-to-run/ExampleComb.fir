FIRRTL version 3.3.0
circuit Alu :
  module Alu : @[src/main/ExampleMux.scala 4:7]
    input clock : Clock @[src/main/ExampleMux.scala 4:7]
    input reset : UInt<1> @[src/main/ExampleMux.scala 4:7]
    output io : { flip fn : UInt<2>, flip a : UInt<4>, flip b : UInt<4>, result : UInt<4>} @[src/main/ExampleMux.scala 5:14]

    wire result : UInt<4> @[src/main/ExampleMux.scala 17:20]
    connect result, UInt<1>(0h0) @[src/main/ExampleMux.scala 19:10]
    node _result_T = eq(io.fn, UInt<1>(0h0)) @[src/main/ExampleMux.scala 24:14]
    node _result_T_1 = add(io.a, io.b) @[src/main/ExampleMux.scala 24:29]
    node _result_T_2 = tail(_result_T_1, 1) @[src/main/ExampleMux.scala 24:29]
    node _result_T_3 = eq(io.fn, UInt<2>(0h2)) @[src/main/ExampleMux.scala 25:14]
    node _result_T_4 = or(io.a, io.b) @[src/main/ExampleMux.scala 25:29]
    node _result_T_5 = eq(io.fn, UInt<2>(0h3)) @[src/main/ExampleMux.scala 26:14]
    node _result_T_6 = and(io.a, io.b) @[src/main/ExampleMux.scala 26:29]
    node _result_T_7 = mux(_result_T, _result_T_2, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
    node _result_T_8 = mux(_result_T_3, _result_T_4, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
    node _result_T_9 = mux(_result_T_5, _result_T_6, UInt<1>(0h0)) @[src/main/scala/chisel3/util/Mux.scala 30:73]
    node _result_T_10 = or(_result_T_7, _result_T_8) @[src/main/scala/chisel3/util/Mux.scala 30:73]
    node _result_T_11 = or(_result_T_10, _result_T_9) @[src/main/scala/chisel3/util/Mux.scala 30:73]
    wire _result_WIRE : UInt<4> @[src/main/scala/chisel3/util/Mux.scala 30:73]
    connect _result_WIRE, _result_T_11 @[src/main/scala/chisel3/util/Mux.scala 30:73]
    connect result, _result_WIRE @[src/main/ExampleMux.scala 22:10]
    connect io.result, result @[src/main/ExampleMux.scala 31:13]
